; ModuleID = 'blender/source/blender/editors/mesh/editmesh_select.c'
source_filename = "blender/source/blender/editors/mesh/editmesh_select.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.ListBase = type { i8*, i8* }
%struct.DerivedMesh = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type opaque
%struct.MeshElemMap = type opaque
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.ViewContext = type { %struct.Scene*, %struct.Object*, %struct.Object*, %struct.ARegion*, %struct.View3D*, %struct.RegionView3D*, %struct.BMEditMesh*, [2 x i32] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.LassoMaskData = type { i32*, i32 }
%struct.anon = type { [2 x float], float, float, float, float, float, float, %struct.BMVert* }
%struct.anon.5 = type { [2 x float], float, float, float, float, float, float, %struct.BMVert* }
%struct.anon.1 = type { %struct.ViewContext, [2 x float], float, %struct.BMEdge* }
%struct.anon.6 = type { %struct.ViewContext, [2 x float], float, %struct.BMEdge* }
%struct.anon.2 = type { [2 x float], float, %struct.BMFace* }
%struct.anon.3 = type { [2 x float], float, float, float, float, %struct.BMFace* }
%struct.anon.7 = type { [2 x float], float, %struct.BMFace* }
%struct.anon.8 = type { [2 x float], float, float, float, float, %struct.BMFace* }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon.4, %struct.StructRNA*, i8* }
%struct.anon.4 = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.LinkData = type { %struct.LinkData*, %struct.LinkData*, i8* }
%struct.BMElem = type { %struct.BMHeader }
%struct.BMEditSelection = type { %struct.BMEditSelection*, %struct.BMEditSelection*, %struct.BMElem*, i8 }
%struct.BMWalker = type { i8, void (%struct.BMWalker*, i8*)*, i8* (%struct.BMWalker*)*, i8* (%struct.BMWalker*)*, i32, i32, i32, i32, %struct.BMesh*, %struct.BLI_mempool*, %struct.ListBase, i16, i16, i16, i32, %struct.GSet*, %struct.GSet*, i32 }
%struct.GSet = type opaque
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMElemF = type { %struct.BMHeader, %struct.BMFlagLayer* }

@.str = private unnamed_addr constant [28 x i8] c"automerge verts=%hv dist=%f\00", align 1
@bm_solidoffs = dso_local global i32 0, align 4, !dbg !0
@bm_wireoffs = dso_local global i32 0, align 4, !dbg !2686
@bm_vertoffs = dso_local global i32 0, align 4, !dbg !2688
@selbuf = internal global i32* null, align 8, !dbg !3220
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.EDBM_backbuf_border_mask_init = private unnamed_addr constant [30 x i8] c"EDBM_backbuf_border_mask_init\00", align 1
@EDBM_vert_find_nearest.lastSelectedIndex = internal global i32 0, align 4, !dbg !2690
@EDBM_vert_find_nearest.lastSelected = internal global %struct.BMVert* null, align 8, !dbg !3059
@EDBM_face_find_nearest.lastSelectedIndex = internal global i32 0, align 4, !dbg !3061
@EDBM_face_find_nearest.lastSelected = internal global %struct.BMFace* null, align 8, !dbg !3066
@.str.1 = private unnamed_addr constant [15 x i8] c"Select Similar\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"MESH_OT_select_similar\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"Select similar vertices, edges or faces by property types\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@prop_similar_types = internal global [20 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 102, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 104, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.194, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 106, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 107, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 108, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.202, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 201, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.203, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 202, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 203, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.207, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.209, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 205, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 206, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 207, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3222
@.str.5 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@prop_similar_compare_types = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3225
@.str.8 = private unnamed_addr constant [8 x i8] c"Compare\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"threshold\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Threshold\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"Select Similar Regions\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"MESH_OT_select_similar_region\00", align 1
@.str.13 = private unnamed_addr constant [53 x i8] c"Select similar face regions to the current selection\00", align 1
@MESH_OT_select_mode.elem_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i32 546, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i32 547, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i32 548, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3068
@.str.14 = private unnamed_addr constant [5 x i8] c"VERT\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"Vertices\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"EDGE\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"Edges\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"FACE\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"Faces\00", align 1
@MESH_OT_select_mode.actions_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.28, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3208
@.str.20 = private unnamed_addr constant [8 x i8] c"DISABLE\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"Disable\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"Disable selected markers\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"ENABLE\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"Enable\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"Enable selected markers\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"TOGGLE\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"Toggle\00", align 1
@.str.28 = private unnamed_addr constant [42 x i8] c"Toggle disabled flag for selected markers\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"Select Mode\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"MESH_OT_select_mode\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"Change selection mode\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"use_extend\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"Extend\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"use_expand\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"Expand\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"Action\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"Selection action to execute\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"Multi Select Loops\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"MESH_OT_loop_multi_select\00", align 1
@.str.41 = private unnamed_addr constant [52 x i8] c"Select a loop of connected edges by connection type\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"ring\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"Ring\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"Loop Select\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"MESH_OT_loop_select\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"Select a loop of connected edges\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"Extend Select\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"Extend the selection\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"deselect\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"Deselect\00", align 1
@.str.52 = private unnamed_addr constant [26 x i8] c"Remove from the selection\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"toggle\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"Toggle Select\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"Toggle the selection\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"Select Ring\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"Select ring\00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"Edge Ring Select\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"MESH_OT_edgering_select\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"Select an edge ring\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"(De)select All\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"MESH_OT_select_all\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"(De)select all vertices, edges or faces\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"Select Interior Faces\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"MESH_OT_select_interior_faces\00", align 1
@.str.66 = private unnamed_addr constant [57 x i8] c"Select faces where all edges have more than 2 face users\00", align 1
@.str.67 = private unnamed_addr constant [18 x i8] c"Select Linked All\00", align 1
@.str.68 = private unnamed_addr constant [22 x i8] c"MESH_OT_select_linked\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"Select all vertices linked to the active mesh\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"Limit by Seams\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"Select Linked\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"MESH_OT_select_linked_pick\00", align 1
@.str.74 = private unnamed_addr constant [66 x i8] c"(De)select all vertices linked to the edge under the mouse cursor\00", align 1
@MESH_OT_select_face_by_sides.type_items = internal constant [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3210
@.str.75 = private unnamed_addr constant [5 x i8] c"LESS\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"Less Than\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"EQUAL\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"Equal To\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"GREATER\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"Greater Than\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"NOTEQUAL\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"Not Equal To\00", align 1
@.str.83 = private unnamed_addr constant [22 x i8] c"Select Faces by Sides\00", align 1
@.str.84 = private unnamed_addr constant [56 x i8] c"Select vertices or faces by the number of polygon sides\00", align 1
@.str.85 = private unnamed_addr constant [29 x i8] c"MESH_OT_select_face_by_sides\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.87 = private unnamed_addr constant [19 x i8] c"Number of Vertices\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"Type of comparison to make\00", align 1
@.str.89 = private unnamed_addr constant [22 x i8] c"Select Loose Geometry\00", align 1
@.str.90 = private unnamed_addr constant [50 x i8] c"Select loose geometry based on the selection mode\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"MESH_OT_select_loose\00", align 1
@.str.92 = private unnamed_addr constant [14 x i8] c"Select Mirror\00", align 1
@.str.93 = private unnamed_addr constant [40 x i8] c"Select mesh items at mirrored locations\00", align 1
@.str.94 = private unnamed_addr constant [22 x i8] c"MESH_OT_select_mirror\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"Extend the existing selection\00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c"Select More\00", align 1
@.str.97 = private unnamed_addr constant [20 x i8] c"MESH_OT_select_more\00", align 1
@.str.98 = private unnamed_addr constant [68 x i8] c"Select more vertices, edges or faces connected to initial selection\00", align 1
@.str.99 = private unnamed_addr constant [12 x i8] c"Select Less\00", align 1
@.str.100 = private unnamed_addr constant [20 x i8] c"MESH_OT_select_less\00", align 1
@.str.101 = private unnamed_addr constant [75 x i8] c"Deselect vertices, edges or faces at the boundary of each selection region\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"Checker Deselect\00", align 1
@.str.103 = private unnamed_addr constant [19 x i8] c"MESH_OT_select_nth\00", align 1
@.str.104 = private unnamed_addr constant [73 x i8] c"Deselect every Nth element starting from the active vertex, edge or face\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"nth\00", align 1
@.str.106 = private unnamed_addr constant [14 x i8] c"Nth Selection\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.108 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.109 = private unnamed_addr constant [19 x i8] c"Select Sharp Edges\00", align 1
@.str.110 = private unnamed_addr constant [30 x i8] c"Select all sharp-enough edges\00", align 1
@.str.111 = private unnamed_addr constant [27 x i8] c"MESH_OT_edges_select_sharp\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"sharpness\00", align 1
@.str.113 = private unnamed_addr constant [10 x i8] c"Sharpness\00", align 1
@.str.114 = private unnamed_addr constant [25 x i8] c"Select Linked Flat Faces\00", align 1
@.str.115 = private unnamed_addr constant [29 x i8] c"Select linked faces by angle\00", align 1
@.str.116 = private unnamed_addr constant [33 x i8] c"MESH_OT_faces_select_linked_flat\00", align 1
@.str.117 = private unnamed_addr constant [20 x i8] c"Select Non Manifold\00", align 1
@.str.118 = private unnamed_addr constant [42 x i8] c"Select all non-manifold vertices or edges\00", align 1
@.str.119 = private unnamed_addr constant [28 x i8] c"MESH_OT_select_non_manifold\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"use_wire\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"Wire\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"Wire edges\00", align 1
@.str.123 = private unnamed_addr constant [13 x i8] c"use_boundary\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"Boundaries\00", align 1
@.str.125 = private unnamed_addr constant [15 x i8] c"Boundary edges\00", align 1
@.str.126 = private unnamed_addr constant [15 x i8] c"use_multi_face\00", align 1
@.str.127 = private unnamed_addr constant [15 x i8] c"Multiple Faces\00", align 1
@.str.128 = private unnamed_addr constant [25 x i8] c"Edges shared by 3+ faces\00", align 1
@.str.129 = private unnamed_addr constant [19 x i8] c"use_non_contiguous\00", align 1
@.str.130 = private unnamed_addr constant [15 x i8] c"Non Contiguous\00", align 1
@.str.131 = private unnamed_addr constant [53 x i8] c"Edges between faces pointing in alternate directions\00", align 1
@.str.132 = private unnamed_addr constant [10 x i8] c"use_verts\00", align 1
@.str.133 = private unnamed_addr constant [42 x i8] c"Vertices connecting multiple face regions\00", align 1
@.str.134 = private unnamed_addr constant [14 x i8] c"Select Random\00", align 1
@.str.135 = private unnamed_addr constant [25 x i8] c"Randomly select vertices\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"MESH_OT_select_random\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"percent\00", align 1
@.str.138 = private unnamed_addr constant [8 x i8] c"Percent\00", align 1
@.str.139 = private unnamed_addr constant [42 x i8] c"Percentage of elements to select randomly\00", align 1
@.str.140 = private unnamed_addr constant [17 x i8] c"Select Ungrouped\00", align 1
@.str.141 = private unnamed_addr constant [25 x i8] c"MESH_OT_select_ungrouped\00", align 1
@.str.142 = private unnamed_addr constant [32 x i8] c"Select vertices without a group\00", align 1
@MESH_OT_select_axis.axis_mode_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.143, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.147, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3215
@.str.143 = private unnamed_addr constant [9 x i8] c"POSITIVE\00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"Positive Axis\00", align 1
@.str.145 = private unnamed_addr constant [9 x i8] c"NEGATIVE\00", align 1
@.str.146 = private unnamed_addr constant [14 x i8] c"Negative Axis\00", align 1
@.str.147 = private unnamed_addr constant [8 x i8] c"ALIGNED\00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c"Aligned Axis\00", align 1
@MESH_OT_select_axis.axis_items_xyz = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3218
@.str.149 = private unnamed_addr constant [7 x i8] c"X_AXIS\00", align 1
@.str.150 = private unnamed_addr constant [7 x i8] c"X Axis\00", align 1
@.str.151 = private unnamed_addr constant [7 x i8] c"Y_AXIS\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"Y Axis\00", align 1
@.str.153 = private unnamed_addr constant [7 x i8] c"Z_AXIS\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"Z Axis\00", align 1
@.str.155 = private unnamed_addr constant [12 x i8] c"Select Axis\00", align 1
@.str.156 = private unnamed_addr constant [45 x i8] c"Select all data in the mesh on a single axis\00", align 1
@.str.157 = private unnamed_addr constant [20 x i8] c"MESH_OT_select_axis\00", align 1
@.str.158 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.159 = private unnamed_addr constant [10 x i8] c"Axis Mode\00", align 1
@.str.160 = private unnamed_addr constant [32 x i8] c"Axis side to use when selecting\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"axis\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"Axis\00", align 1
@.str.163 = private unnamed_addr constant [42 x i8] c"Select the axis to compare each vertex on\00", align 1
@.str.164 = private unnamed_addr constant [17 x i8] c"Select Next Loop\00", align 1
@.str.165 = private unnamed_addr constant [25 x i8] c"MESH_OT_select_next_loop\00", align 1
@.str.166 = private unnamed_addr constant [50 x i8] c"Select next edge loop adjacent to a selected loop\00", align 1
@.str.167 = private unnamed_addr constant [21 x i8] c"Select Boundary Loop\00", align 1
@.str.168 = private unnamed_addr constant [23 x i8] c"MESH_OT_region_to_loop\00", align 1
@.str.169 = private unnamed_addr constant [48 x i8] c"Select boundary edges around the selected faces\00", align 1
@.str.170 = private unnamed_addr constant [25 x i8] c"Select Loop Inner-Region\00", align 1
@.str.171 = private unnamed_addr constant [23 x i8] c"MESH_OT_loop_to_region\00", align 1
@.str.172 = private unnamed_addr constant [58 x i8] c"Select region of faces inside of a selected loop of edges\00", align 1
@.str.173 = private unnamed_addr constant [14 x i8] c"select_bigger\00", align 1
@.str.174 = private unnamed_addr constant [14 x i8] c"Select Bigger\00", align 1
@.str.175 = private unnamed_addr constant [46 x i8] c"Select bigger regions instead of smaller ones\00", align 1
@.str.176 = private unnamed_addr constant [7 x i8] c"selbuf\00", align 1
@.str.177 = private unnamed_addr constant [53 x i8] c"similar_verts verts=%hv type=%i thresh=%f compare=%i\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"verts.out\00", align 1
@.str.179 = private unnamed_addr constant [53 x i8] c"similar_edges edges=%he type=%i thresh=%f compare=%i\00", align 1
@.str.180 = private unnamed_addr constant [10 x i8] c"edges.out\00", align 1
@.str.181 = private unnamed_addr constant [53 x i8] c"similar_faces faces=%hf type=%i thresh=%f compare=%i\00", align 1
@.str.182 = private unnamed_addr constant [10 x i8] c"faces.out\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"NORMAL\00", align 1
@.str.184 = private unnamed_addr constant [7 x i8] c"Normal\00", align 1
@.str.185 = private unnamed_addr constant [25 x i8] c"Amount of Adjacent Faces\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"VGROUP\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"Vertex Groups\00", align 1
@.str.188 = private unnamed_addr constant [27 x i8] c"Amount of connecting edges\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"LENGTH\00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.191 = private unnamed_addr constant [4 x i8] c"DIR\00", align 1
@.str.192 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.193 = private unnamed_addr constant [31 x i8] c"Amount of Faces Around an Edge\00", align 1
@.str.194 = private unnamed_addr constant [11 x i8] c"FACE_ANGLE\00", align 1
@.str.195 = private unnamed_addr constant [12 x i8] c"Face Angles\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"CREASE\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"Crease\00", align 1
@.str.198 = private unnamed_addr constant [6 x i8] c"BEVEL\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"Bevel\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"SEAM\00", align 1
@.str.201 = private unnamed_addr constant [5 x i8] c"Seam\00", align 1
@.str.202 = private unnamed_addr constant [6 x i8] c"SHARP\00", align 1
@.str.203 = private unnamed_addr constant [9 x i8] c"MATERIAL\00", align 1
@.str.204 = private unnamed_addr constant [9 x i8] c"Material\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"IMAGE\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.207 = private unnamed_addr constant [5 x i8] c"AREA\00", align 1
@.str.208 = private unnamed_addr constant [5 x i8] c"Area\00", align 1
@.str.209 = private unnamed_addr constant [6 x i8] c"SIDES\00", align 1
@.str.210 = private unnamed_addr constant [14 x i8] c"Polygon Sides\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"PERIMETER\00", align 1
@.str.212 = private unnamed_addr constant [10 x i8] c"Perimeter\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"COPLANAR\00", align 1
@.str.214 = private unnamed_addr constant [10 x i8] c"Co-planar\00", align 1
@.str.215 = private unnamed_addr constant [6 x i8] c"Equal\00", align 1
@.str.216 = private unnamed_addr constant [8 x i8] c"Greater\00", align 1
@.str.217 = private unnamed_addr constant [5 x i8] c"Less\00", align 1
@.str.218 = private unnamed_addr constant [25 x i8] c"No face regions selected\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.edbm_select_similar_region_exec = private unnamed_addr constant [32 x i8] c"edbm_select_similar_region_exec\00", align 1
@.str.219 = private unnamed_addr constant [31 x i8] c"No matching face regions found\00", align 1
@.str.220 = private unnamed_addr constant [11 x i8] c"edge array\00", align 1
@.str.221 = private unnamed_addr constant [34 x i8] c"Mesh has no active vert/edge/face\00", align 1
@.str.222 = private unnamed_addr constant [37 x i8] c"Does not work in face selection mode\00", align 1
@.str.223 = private unnamed_addr constant [33 x i8] c"Must be in vertex selection mode\00", align 1
@.str.224 = private unnamed_addr constant [35 x i8] c"No weights/vertex groups on object\00", align 1
@.str.225 = private unnamed_addr constant [56 x i8] c"This operator requires an active vertex (last selected)\00", align 1
@__func__.loop_find_regions = private unnamed_addr constant [18 x i8] c"loop_find_regions\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.226 = private unnamed_addr constant [16 x i8] c"BLI_array.stack\00", align 1
@.str.227 = private unnamed_addr constant [17 x i8] c"BLI_array.region\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_select_mirrored(%struct.BMEditMesh* %em, i8 zeroext %extend, i32* %r_totmirr, i32* %r_totfail) #0 !dbg !3231 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %extend.addr = alloca i8, align 1
  %r_totmirr.addr = alloca i32*, align 8
  %r_totfail.addr = alloca i32*, align 8
  %me = alloca %struct.Mesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %totmirr = alloca i32, align 4
  %totfail = alloca i32, align 4
  %use_topology = alloca i8, align 1
  %v = alloca %struct.BMVert*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %f = alloca %struct.BMFace*, align 8
  %v49 = alloca %struct.BMVert*, align 8
  %v_mirr = alloca %struct.BMVert*, align 8
  %e82 = alloca %struct.BMEdge*, align 8
  %e_mirr = alloca %struct.BMEdge*, align 8
  %f112 = alloca %struct.BMFace*, align 8
  %f_mirr = alloca %struct.BMFace*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !3234, metadata !DIExpression()), !dbg !3235
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !3236, metadata !DIExpression()), !dbg !3237
  store i32* %r_totmirr, i32** %r_totmirr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totmirr.addr, metadata !3238, metadata !DIExpression()), !dbg !3239
  store i32* %r_totfail, i32** %r_totfail.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totfail.addr, metadata !3240, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3242, metadata !DIExpression()), !dbg !3243
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3244
  %ob = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 14, !dbg !3245
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3245
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !3246
  %2 = load i8*, i8** %data, align 8, !dbg !3246
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !3247
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !3243
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3248, metadata !DIExpression()), !dbg !3249
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3250
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !3251
  %5 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3251
  store %struct.BMesh* %5, %struct.BMesh** %bm, align 8, !dbg !3249
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3252, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.declare(metadata i32* %totmirr, metadata !3340, metadata !DIExpression()), !dbg !3341
  store i32 0, i32* %totmirr, align 4, !dbg !3341
  call void @llvm.dbg.declare(metadata i32* %totfail, metadata !3342, metadata !DIExpression()), !dbg !3343
  store i32 0, i32* %totfail, align 4, !dbg !3343
  call void @llvm.dbg.declare(metadata i8* %use_topology, metadata !3344, metadata !DIExpression()), !dbg !3345
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3346
  %tobool = icmp ne %struct.Mesh* %6, null, !dbg !3346
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3347

land.rhs:                                         ; preds = %entry
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3348
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 46, !dbg !3349
  %8 = load i8, i8* %editflag, align 1, !dbg !3349
  %conv = zext i8 %8 to i32, !dbg !3348
  %and = and i32 %conv, 16, !dbg !3350
  %tobool2 = icmp ne i32 %and, 0, !dbg !3347
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !3351
  %land.ext = zext i1 %9 to i32, !dbg !3347
  %conv3 = trunc i32 %land.ext to i8, !dbg !3352
  store i8 %conv3, i8* %use_topology, align 1, !dbg !3345
  %10 = load i32*, i32** %r_totfail.addr, align 8, !dbg !3353
  store i32 0, i32* %10, align 4, !dbg !3354
  %11 = load i32*, i32** %r_totmirr.addr, align 8, !dbg !3355
  store i32 0, i32* %11, align 4, !dbg !3356
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3357
  %selectmode = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 28, !dbg !3359
  %13 = load i16, i16* %selectmode, align 8, !dbg !3359
  %conv4 = sext i16 %13 to i32, !dbg !3357
  %and5 = and i32 %conv4, 1, !dbg !3360
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3360
  br i1 %tobool6, label %if.then, label %if.else, !dbg !3361

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !3362, metadata !DIExpression()), !dbg !3364
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3365
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %14, i8 zeroext 1, i8* null), !dbg !3365
  %15 = bitcast i8* %call to %struct.BMVert*, !dbg !3365
  store %struct.BMVert* %15, %struct.BMVert** %v, align 8, !dbg !3365
  br label %for.cond, !dbg !3365

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3367
  %tobool7 = icmp ne %struct.BMVert* %16, null, !dbg !3365
  br i1 %tobool7, label %for.body, label %for.end, !dbg !3365

for.body:                                         ; preds = %for.cond
  %17 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3369
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 0, !dbg !3369
  %18 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3369
  %head8 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %18, i32 0, i32 0, !dbg !3369
  %call9 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head8, i8 zeroext 1), !dbg !3369
  %conv10 = zext i8 %call9 to i32, !dbg !3369
  call void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext 16, i32 %conv10), !dbg !3369
  br label %for.inc, !dbg !3371

for.inc:                                          ; preds = %for.body
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3367
  %19 = bitcast i8* %call11 to %struct.BMVert*, !dbg !3367
  store %struct.BMVert* %19, %struct.BMVert** %v, align 8, !dbg !3367
  br label %for.cond, !dbg !3367, !llvm.loop !3372

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !3374

if.else:                                          ; preds = %land.end
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3375
  %selectmode12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 12, !dbg !3377
  %21 = load i16, i16* %selectmode12, align 4, !dbg !3377
  %conv13 = sext i16 %21 to i32, !dbg !3375
  %and14 = and i32 %conv13, 2, !dbg !3378
  %tobool15 = icmp ne i32 %and14, 0, !dbg !3378
  br i1 %tobool15, label %if.then16, label %if.else28, !dbg !3379

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !3380, metadata !DIExpression()), !dbg !3382
  %22 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3383
  %call17 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 2, i8* null), !dbg !3383
  %23 = bitcast i8* %call17 to %struct.BMEdge*, !dbg !3383
  store %struct.BMEdge* %23, %struct.BMEdge** %e, align 8, !dbg !3383
  br label %for.cond18, !dbg !3383

for.cond18:                                       ; preds = %for.inc25, %if.then16
  %24 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3385
  %tobool19 = icmp ne %struct.BMEdge* %24, null, !dbg !3383
  br i1 %tobool19, label %for.body20, label %for.end27, !dbg !3383

for.body20:                                       ; preds = %for.cond18
  %25 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3387
  %head21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %25, i32 0, i32 0, !dbg !3387
  %26 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3387
  %head22 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %26, i32 0, i32 0, !dbg !3387
  %call23 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head22, i8 zeroext 1), !dbg !3387
  %conv24 = zext i8 %call23 to i32, !dbg !3387
  call void @_bm_elem_flag_set(%struct.BMHeader* %head21, i8 zeroext 16, i32 %conv24), !dbg !3387
  br label %for.inc25, !dbg !3389

for.inc25:                                        ; preds = %for.body20
  %call26 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3385
  %27 = bitcast i8* %call26 to %struct.BMEdge*, !dbg !3385
  store %struct.BMEdge* %27, %struct.BMEdge** %e, align 8, !dbg !3385
  br label %for.cond18, !dbg !3385, !llvm.loop !3390

for.end27:                                        ; preds = %for.cond18
  br label %if.end, !dbg !3392

if.else28:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !3393, metadata !DIExpression()), !dbg !3395
  %28 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3396
  %call29 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %28, i8 zeroext 3, i8* null), !dbg !3396
  %29 = bitcast i8* %call29 to %struct.BMFace*, !dbg !3396
  store %struct.BMFace* %29, %struct.BMFace** %f, align 8, !dbg !3396
  br label %for.cond30, !dbg !3396

for.cond30:                                       ; preds = %for.inc37, %if.else28
  %30 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !3398
  %tobool31 = icmp ne %struct.BMFace* %30, null, !dbg !3396
  br i1 %tobool31, label %for.body32, label %for.end39, !dbg !3396

for.body32:                                       ; preds = %for.cond30
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !3400
  %head33 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %31, i32 0, i32 0, !dbg !3400
  %32 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !3400
  %head34 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %32, i32 0, i32 0, !dbg !3400
  %call35 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head34, i8 zeroext 1), !dbg !3400
  %conv36 = zext i8 %call35 to i32, !dbg !3400
  call void @_bm_elem_flag_set(%struct.BMHeader* %head33, i8 zeroext 16, i32 %conv36), !dbg !3400
  br label %for.inc37, !dbg !3402

for.inc37:                                        ; preds = %for.body32
  %call38 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3398
  %33 = bitcast i8* %call38 to %struct.BMFace*, !dbg !3398
  store %struct.BMFace* %33, %struct.BMFace** %f, align 8, !dbg !3398
  br label %for.cond30, !dbg !3398, !llvm.loop !3403

for.end39:                                        ; preds = %for.cond30
  br label %if.end

if.end:                                           ; preds = %for.end39, %for.end27
  br label %if.end40

if.end40:                                         ; preds = %if.end, %for.end
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3405
  %35 = load i8, i8* %use_topology, align 1, !dbg !3406
  call void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh* %34, i32 0, i8 zeroext 1, i8 zeroext 1, i8 zeroext %35), !dbg !3407
  %36 = load i8, i8* %extend.addr, align 1, !dbg !3408
  %tobool41 = icmp ne i8 %36, 0, !dbg !3408
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !3410

if.then42:                                        ; preds = %if.end40
  %37 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3411
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %37, i8 zeroext 1), !dbg !3412
  br label %if.end43, !dbg !3412

if.end43:                                         ; preds = %if.then42, %if.end40
  %38 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3413
  %selectmode44 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %38, i32 0, i32 28, !dbg !3415
  %39 = load i16, i16* %selectmode44, align 8, !dbg !3415
  %conv45 = sext i16 %39 to i32, !dbg !3413
  %and46 = and i32 %conv45, 1, !dbg !3416
  %tobool47 = icmp ne i32 %and46, 0, !dbg !3416
  br i1 %tobool47, label %if.then48, label %if.else76, !dbg !3417

if.then48:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v49, metadata !3418, metadata !DIExpression()), !dbg !3420
  %40 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3421
  %call50 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %40, i8 zeroext 1, i8* null), !dbg !3421
  %41 = bitcast i8* %call50 to %struct.BMVert*, !dbg !3421
  store %struct.BMVert* %41, %struct.BMVert** %v49, align 8, !dbg !3421
  br label %for.cond51, !dbg !3421

for.cond51:                                       ; preds = %for.inc73, %if.then48
  %42 = load %struct.BMVert*, %struct.BMVert** %v49, align 8, !dbg !3423
  %tobool52 = icmp ne %struct.BMVert* %42, null, !dbg !3421
  br i1 %tobool52, label %for.body53, label %for.end75, !dbg !3421

for.body53:                                       ; preds = %for.cond51
  %43 = load %struct.BMVert*, %struct.BMVert** %v49, align 8, !dbg !3425
  %head54 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 0, !dbg !3425
  %call55 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head54, i8 zeroext 2), !dbg !3425
  %tobool56 = icmp ne i8 %call55, 0, !dbg !3425
  br i1 %tobool56, label %if.end72, label %land.lhs.true, !dbg !3428

land.lhs.true:                                    ; preds = %for.body53
  %44 = load %struct.BMVert*, %struct.BMVert** %v49, align 8, !dbg !3429
  %head57 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %44, i32 0, i32 0, !dbg !3429
  %call58 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head57, i8 zeroext 16), !dbg !3429
  %conv59 = zext i8 %call58 to i32, !dbg !3429
  %tobool60 = icmp ne i32 %conv59, 0, !dbg !3429
  br i1 %tobool60, label %if.then61, label %if.end72, !dbg !3430

if.then61:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_mirr, metadata !3431, metadata !DIExpression()), !dbg !3433
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3434
  %46 = load %struct.BMVert*, %struct.BMVert** %v49, align 8, !dbg !3435
  %call62 = call %struct.BMVert* @EDBM_verts_mirror_get(%struct.BMEditMesh* %45, %struct.BMVert* %46), !dbg !3436
  store %struct.BMVert* %call62, %struct.BMVert** %v_mirr, align 8, !dbg !3433
  %47 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !3437
  %tobool63 = icmp ne %struct.BMVert* %47, null, !dbg !3437
  br i1 %tobool63, label %land.lhs.true64, label %if.else69, !dbg !3439

land.lhs.true64:                                  ; preds = %if.then61
  %48 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !3440
  %head65 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %48, i32 0, i32 0, !dbg !3440
  %call66 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head65, i8 zeroext 2), !dbg !3440
  %tobool67 = icmp ne i8 %call66, 0, !dbg !3440
  br i1 %tobool67, label %if.else69, label %if.then68, !dbg !3441

if.then68:                                        ; preds = %land.lhs.true64
  %49 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3442
  %50 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !3444
  call void @BM_vert_select_set(%struct.BMesh* %49, %struct.BMVert* %50, i8 zeroext 1), !dbg !3445
  %51 = load i32, i32* %totmirr, align 4, !dbg !3446
  %inc = add nsw i32 %51, 1, !dbg !3446
  store i32 %inc, i32* %totmirr, align 4, !dbg !3446
  br label %if.end71, !dbg !3447

if.else69:                                        ; preds = %land.lhs.true64, %if.then61
  %52 = load i32, i32* %totfail, align 4, !dbg !3448
  %inc70 = add nsw i32 %52, 1, !dbg !3448
  store i32 %inc70, i32* %totfail, align 4, !dbg !3448
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.then68
  br label %if.end72, !dbg !3450

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %for.body53
  br label %for.inc73, !dbg !3451

for.inc73:                                        ; preds = %if.end72
  %call74 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3423
  %53 = bitcast i8* %call74 to %struct.BMVert*, !dbg !3423
  store %struct.BMVert* %53, %struct.BMVert** %v49, align 8, !dbg !3423
  br label %for.cond51, !dbg !3423, !llvm.loop !3452

for.end75:                                        ; preds = %for.cond51
  br label %if.end142, !dbg !3454

if.else76:                                        ; preds = %if.end43
  %54 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3455
  %selectmode77 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %54, i32 0, i32 12, !dbg !3457
  %55 = load i16, i16* %selectmode77, align 4, !dbg !3457
  %conv78 = sext i16 %55 to i32, !dbg !3455
  %and79 = and i32 %conv78, 2, !dbg !3458
  %tobool80 = icmp ne i32 %and79, 0, !dbg !3458
  br i1 %tobool80, label %if.then81, label %if.else111, !dbg !3459

if.then81:                                        ; preds = %if.else76
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e82, metadata !3460, metadata !DIExpression()), !dbg !3462
  %56 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3463
  %call83 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %56, i8 zeroext 2, i8* null), !dbg !3463
  %57 = bitcast i8* %call83 to %struct.BMEdge*, !dbg !3463
  store %struct.BMEdge* %57, %struct.BMEdge** %e82, align 8, !dbg !3463
  br label %for.cond84, !dbg !3463

for.cond84:                                       ; preds = %for.inc108, %if.then81
  %58 = load %struct.BMEdge*, %struct.BMEdge** %e82, align 8, !dbg !3465
  %tobool85 = icmp ne %struct.BMEdge* %58, null, !dbg !3463
  br i1 %tobool85, label %for.body86, label %for.end110, !dbg !3463

for.body86:                                       ; preds = %for.cond84
  %59 = load %struct.BMEdge*, %struct.BMEdge** %e82, align 8, !dbg !3467
  %head87 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %59, i32 0, i32 0, !dbg !3467
  %call88 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head87, i8 zeroext 2), !dbg !3467
  %tobool89 = icmp ne i8 %call88, 0, !dbg !3467
  br i1 %tobool89, label %if.end107, label %land.lhs.true90, !dbg !3470

land.lhs.true90:                                  ; preds = %for.body86
  %60 = load %struct.BMEdge*, %struct.BMEdge** %e82, align 8, !dbg !3471
  %head91 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %60, i32 0, i32 0, !dbg !3471
  %call92 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head91, i8 zeroext 16), !dbg !3471
  %conv93 = zext i8 %call92 to i32, !dbg !3471
  %tobool94 = icmp ne i32 %conv93, 0, !dbg !3471
  br i1 %tobool94, label %if.then95, label %if.end107, !dbg !3472

if.then95:                                        ; preds = %land.lhs.true90
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_mirr, metadata !3473, metadata !DIExpression()), !dbg !3475
  %61 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3476
  %62 = load %struct.BMEdge*, %struct.BMEdge** %e82, align 8, !dbg !3477
  %call96 = call %struct.BMEdge* @EDBM_verts_mirror_get_edge(%struct.BMEditMesh* %61, %struct.BMEdge* %62), !dbg !3478
  store %struct.BMEdge* %call96, %struct.BMEdge** %e_mirr, align 8, !dbg !3475
  %63 = load %struct.BMEdge*, %struct.BMEdge** %e_mirr, align 8, !dbg !3479
  %tobool97 = icmp ne %struct.BMEdge* %63, null, !dbg !3479
  br i1 %tobool97, label %land.lhs.true98, label %if.else104, !dbg !3481

land.lhs.true98:                                  ; preds = %if.then95
  %64 = load %struct.BMEdge*, %struct.BMEdge** %e_mirr, align 8, !dbg !3482
  %head99 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %64, i32 0, i32 0, !dbg !3482
  %call100 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head99, i8 zeroext 2), !dbg !3482
  %tobool101 = icmp ne i8 %call100, 0, !dbg !3482
  br i1 %tobool101, label %if.else104, label %if.then102, !dbg !3483

if.then102:                                       ; preds = %land.lhs.true98
  %65 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3484
  %66 = load %struct.BMEdge*, %struct.BMEdge** %e_mirr, align 8, !dbg !3486
  call void @BM_edge_select_set(%struct.BMesh* %65, %struct.BMEdge* %66, i8 zeroext 1), !dbg !3487
  %67 = load i32, i32* %totmirr, align 4, !dbg !3488
  %inc103 = add nsw i32 %67, 1, !dbg !3488
  store i32 %inc103, i32* %totmirr, align 4, !dbg !3488
  br label %if.end106, !dbg !3489

if.else104:                                       ; preds = %land.lhs.true98, %if.then95
  %68 = load i32, i32* %totfail, align 4, !dbg !3490
  %inc105 = add nsw i32 %68, 1, !dbg !3490
  store i32 %inc105, i32* %totfail, align 4, !dbg !3490
  br label %if.end106

if.end106:                                        ; preds = %if.else104, %if.then102
  br label %if.end107, !dbg !3492

if.end107:                                        ; preds = %if.end106, %land.lhs.true90, %for.body86
  br label %for.inc108, !dbg !3493

for.inc108:                                       ; preds = %if.end107
  %call109 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3465
  %69 = bitcast i8* %call109 to %struct.BMEdge*, !dbg !3465
  store %struct.BMEdge* %69, %struct.BMEdge** %e82, align 8, !dbg !3465
  br label %for.cond84, !dbg !3465, !llvm.loop !3494

for.end110:                                       ; preds = %for.cond84
  br label %if.end141, !dbg !3496

if.else111:                                       ; preds = %if.else76
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f112, metadata !3497, metadata !DIExpression()), !dbg !3499
  %70 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3500
  %call113 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %70, i8 zeroext 3, i8* null), !dbg !3500
  %71 = bitcast i8* %call113 to %struct.BMFace*, !dbg !3500
  store %struct.BMFace* %71, %struct.BMFace** %f112, align 8, !dbg !3500
  br label %for.cond114, !dbg !3500

for.cond114:                                      ; preds = %for.inc138, %if.else111
  %72 = load %struct.BMFace*, %struct.BMFace** %f112, align 8, !dbg !3502
  %tobool115 = icmp ne %struct.BMFace* %72, null, !dbg !3500
  br i1 %tobool115, label %for.body116, label %for.end140, !dbg !3500

for.body116:                                      ; preds = %for.cond114
  %73 = load %struct.BMFace*, %struct.BMFace** %f112, align 8, !dbg !3504
  %head117 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %73, i32 0, i32 0, !dbg !3504
  %call118 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head117, i8 zeroext 2), !dbg !3504
  %tobool119 = icmp ne i8 %call118, 0, !dbg !3504
  br i1 %tobool119, label %if.end137, label %land.lhs.true120, !dbg !3507

land.lhs.true120:                                 ; preds = %for.body116
  %74 = load %struct.BMFace*, %struct.BMFace** %f112, align 8, !dbg !3508
  %head121 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %74, i32 0, i32 0, !dbg !3508
  %call122 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head121, i8 zeroext 16), !dbg !3508
  %conv123 = zext i8 %call122 to i32, !dbg !3508
  %tobool124 = icmp ne i32 %conv123, 0, !dbg !3508
  br i1 %tobool124, label %if.then125, label %if.end137, !dbg !3509

if.then125:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_mirr, metadata !3510, metadata !DIExpression()), !dbg !3512
  %75 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3513
  %76 = load %struct.BMFace*, %struct.BMFace** %f112, align 8, !dbg !3514
  %call126 = call %struct.BMFace* @EDBM_verts_mirror_get_face(%struct.BMEditMesh* %75, %struct.BMFace* %76), !dbg !3515
  store %struct.BMFace* %call126, %struct.BMFace** %f_mirr, align 8, !dbg !3512
  %77 = load %struct.BMFace*, %struct.BMFace** %f_mirr, align 8, !dbg !3516
  %tobool127 = icmp ne %struct.BMFace* %77, null, !dbg !3516
  br i1 %tobool127, label %land.lhs.true128, label %if.else134, !dbg !3518

land.lhs.true128:                                 ; preds = %if.then125
  %78 = load %struct.BMFace*, %struct.BMFace** %f_mirr, align 8, !dbg !3519
  %head129 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %78, i32 0, i32 0, !dbg !3519
  %call130 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head129, i8 zeroext 2), !dbg !3519
  %tobool131 = icmp ne i8 %call130, 0, !dbg !3519
  br i1 %tobool131, label %if.else134, label %if.then132, !dbg !3520

if.then132:                                       ; preds = %land.lhs.true128
  %79 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3521
  %80 = load %struct.BMFace*, %struct.BMFace** %f_mirr, align 8, !dbg !3523
  call void @BM_face_select_set(%struct.BMesh* %79, %struct.BMFace* %80, i8 zeroext 1), !dbg !3524
  %81 = load i32, i32* %totmirr, align 4, !dbg !3525
  %inc133 = add nsw i32 %81, 1, !dbg !3525
  store i32 %inc133, i32* %totmirr, align 4, !dbg !3525
  br label %if.end136, !dbg !3526

if.else134:                                       ; preds = %land.lhs.true128, %if.then125
  %82 = load i32, i32* %totfail, align 4, !dbg !3527
  %inc135 = add nsw i32 %82, 1, !dbg !3527
  store i32 %inc135, i32* %totfail, align 4, !dbg !3527
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.then132
  br label %if.end137, !dbg !3529

if.end137:                                        ; preds = %if.end136, %land.lhs.true120, %for.body116
  br label %for.inc138, !dbg !3530

for.inc138:                                       ; preds = %if.end137
  %call139 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3502
  %83 = bitcast i8* %call139 to %struct.BMFace*, !dbg !3502
  store %struct.BMFace* %83, %struct.BMFace** %f112, align 8, !dbg !3502
  br label %for.cond114, !dbg !3502, !llvm.loop !3531

for.end140:                                       ; preds = %for.cond114
  br label %if.end141

if.end141:                                        ; preds = %for.end140, %for.end110
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %for.end75
  %84 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !3533
  call void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh* %84), !dbg !3534
  %85 = load i32, i32* %totmirr, align 4, !dbg !3535
  %86 = load i32*, i32** %r_totmirr.addr, align 8, !dbg !3536
  store i32 %85, i32* %86, align 4, !dbg !3537
  %87 = load i32, i32* %totfail, align 4, !dbg !3538
  %88 = load i32*, i32** %r_totfail.addr, align 8, !dbg !3539
  store i32 %87, i32* %88, align 4, !dbg !3540
  ret void, !dbg !3541
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !3542 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !3547, metadata !DIExpression()), !dbg !3548
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !3549, metadata !DIExpression()), !dbg !3550
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3553, metadata !DIExpression()), !dbg !3554
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3555
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !3555
  %2 = load i8, i8* %itype.addr, align 1, !dbg !3555
  %3 = load i8*, i8** %data.addr, align 8, !dbg !3555
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !3555
  %tobool = icmp ne i8 %call, 0, !dbg !3555
  br i1 %tobool, label %if.then, label %if.else, !dbg !3557

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3558
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !3560
  store i8* %call1, i8** %retval, align 8, !dbg !3561
  br label %return, !dbg !3561

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3562
  br label %return, !dbg !3562

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !3564
  ret i8* %5, !dbg !3564
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext %hflag, i32 %val) #0 !dbg !3565 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  %val.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !3571, metadata !DIExpression()), !dbg !3572
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !3573, metadata !DIExpression()), !dbg !3574
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !3575, metadata !DIExpression()), !dbg !3576
  %0 = load i32, i32* %val.addr, align 4, !dbg !3577
  %tobool = icmp ne i32 %0, 0, !dbg !3577
  br i1 %tobool, label %if.then, label %if.else, !dbg !3579

if.then:                                          ; preds = %entry
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !3580
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !3581
  call void @_bm_elem_flag_enable(%struct.BMHeader* %1, i8 zeroext %2), !dbg !3582
  br label %if.end, !dbg !3582

if.else:                                          ; preds = %entry
  %3 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !3583
  %4 = load i8, i8* %hflag.addr, align 1, !dbg !3584
  call void @_bm_elem_flag_disable(%struct.BMHeader* %3, i8 zeroext %4), !dbg !3585
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3586
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !3587 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !3592, metadata !DIExpression()), !dbg !3593
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !3594, metadata !DIExpression()), !dbg !3595
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !3596
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !3597
  %1 = load i8, i8* %hflag1, align 1, !dbg !3597
  %conv = zext i8 %1 to i32, !dbg !3596
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !3598
  %conv2 = zext i8 %2 to i32, !dbg !3598
  %and = and i32 %conv, %conv2, !dbg !3599
  %conv3 = trunc i32 %and to i8, !dbg !3596
  ret i8 %conv3, !dbg !3600
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !3601 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !3604, metadata !DIExpression()), !dbg !3605
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3606
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !3607
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !3607
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !3608
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !3608
  %call = call i8* %1(i8* %3), !dbg !3606
  ret i8* %call, !dbg !3609
}

declare dso_local void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh*, i32, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @EDBM_flag_disable_all(%struct.BMEditMesh*, i8 zeroext) #2

declare dso_local %struct.BMVert* @EDBM_verts_mirror_get(%struct.BMEditMesh*, %struct.BMVert*) #2

declare dso_local void @BM_vert_select_set(%struct.BMesh*, %struct.BMVert*, i8 zeroext) #2

declare dso_local %struct.BMEdge* @EDBM_verts_mirror_get_edge(%struct.BMEditMesh*, %struct.BMEdge*) #2

declare dso_local void @BM_edge_select_set(%struct.BMesh*, %struct.BMEdge*, i8 zeroext) #2

declare dso_local %struct.BMFace* @EDBM_verts_mirror_get_face(%struct.BMEditMesh*, %struct.BMFace*) #2

declare dso_local void @BM_face_select_set(%struct.BMesh*, %struct.BMFace*, i8 zeroext) #2

declare dso_local void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_automerge(%struct.Scene* %scene, %struct.Object* %obedit, i8 zeroext %update, i8 zeroext %hflag) #0 !dbg !3610 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %obedit.addr = alloca %struct.Object*, align 8
  %update.addr = alloca i8, align 1
  %hflag.addr = alloca i8, align 1
  %ok = alloca i8, align 1
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3617, metadata !DIExpression()), !dbg !3618
  store %struct.Object* %obedit, %struct.Object** %obedit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit.addr, metadata !3619, metadata !DIExpression()), !dbg !3620
  store i8 %update, i8* %update.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %update.addr, metadata !3621, metadata !DIExpression()), !dbg !3622
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !3623, metadata !DIExpression()), !dbg !3624
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3625, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !3627, metadata !DIExpression()), !dbg !3628
  %0 = load %struct.Object*, %struct.Object** %obedit.addr, align 8, !dbg !3629
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !3630
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !3628
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3631
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !3632
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3632
  %3 = load i8, i8* %hflag.addr, align 1, !dbg !3633
  %conv = zext i8 %3 to i32, !dbg !3633
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3634
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 20, !dbg !3635
  %5 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !3635
  %doublimit = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %5, i32 0, i32 5, !dbg !3636
  %6 = load float, float* %doublimit, align 4, !dbg !3636
  %conv1 = fpext float %6 to double, !dbg !3634
  %call2 = call zeroext i8 (%struct.BMesh*, i32, i8*, ...) @BMO_op_callf(%struct.BMesh* %2, i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %conv, double %conv1), !dbg !3637
  store i8 %call2, i8* %ok, align 1, !dbg !3638
  %7 = load i8, i8* %ok, align 1, !dbg !3639
  %conv3 = zext i8 %7 to i32, !dbg !3639
  %tobool = icmp ne i32 %conv3, 0, !dbg !3639
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3641

land.lhs.true:                                    ; preds = %entry
  %8 = load i8, i8* %update.addr, align 1, !dbg !3642
  %conv4 = zext i8 %8 to i32, !dbg !3642
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !3642
  br i1 %tobool5, label %if.then, label %if.end, !dbg !3643

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3644
  call void @EDBM_update_generic(%struct.BMEditMesh* %9, i8 zeroext 1, i8 zeroext 1), !dbg !3646
  br label %if.end, !dbg !3647

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !3648
}

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local zeroext i8 @BMO_op_callf(%struct.BMesh*, i32, i8*, ...) #2

declare dso_local void @EDBM_update_generic(%struct.BMEditMesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_backbuf_border_init(%struct.ViewContext* %vc, i16 signext %xmin, i16 signext %ymin, i16 signext %xmax, i16 signext %ymax) #0 !dbg !3649 {
entry:
  %retval = alloca i8, align 1
  %vc.addr = alloca %struct.ViewContext*, align 8
  %xmin.addr = alloca i16, align 2
  %ymin.addr = alloca i16, align 2
  %xmax.addr = alloca i16, align 2
  %ymax.addr = alloca i16, align 2
  %buf = alloca %struct.ImBuf*, align 8
  %dr = alloca i32*, align 8
  %a = alloca i32, align 4
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !3652, metadata !DIExpression()), !dbg !3653
  store i16 %xmin, i16* %xmin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %xmin.addr, metadata !3654, metadata !DIExpression()), !dbg !3655
  store i16 %ymin, i16* %ymin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ymin.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  store i16 %xmax, i16* %xmax.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %xmax.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i16 %ymax, i16* %ymax.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ymax.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %buf, metadata !3662, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.declare(metadata i32** %dr, metadata !3664, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3666, metadata !DIExpression()), !dbg !3667
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3668
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 2, !dbg !3670
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3670
  %cmp = icmp eq %struct.Object* %1, null, !dbg !3671
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3672

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3673
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 4, !dbg !3674
  %3 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !3674
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %3, i32 0, i32 24, !dbg !3675
  %4 = load i16, i16* %drawtype, align 8, !dbg !3675
  %conv = sext i16 %4 to i32, !dbg !3673
  %cmp1 = icmp slt i32 %conv, 3, !dbg !3676
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !3677

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %5 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3678
  %v3d4 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %5, i32 0, i32 4, !dbg !3679
  %6 = load %struct.View3D*, %struct.View3D** %v3d4, align 8, !dbg !3679
  %flag = getelementptr inbounds %struct.View3D, %struct.View3D* %6, i32 0, i32 28, !dbg !3680
  %7 = load i16, i16* %flag, align 8, !dbg !3680
  %conv5 = sext i16 %7 to i32, !dbg !3678
  %and = and i32 %conv5, 4096, !dbg !3681
  %cmp6 = icmp eq i32 %and, 0, !dbg !3682
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3683

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !3684
  br label %return, !dbg !3684

if.end:                                           ; preds = %lor.lhs.false3
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3686
  %9 = load i16, i16* %xmin.addr, align 2, !dbg !3687
  %10 = load i16, i16* %ymin.addr, align 2, !dbg !3688
  %11 = load i16, i16* %xmax.addr, align 2, !dbg !3689
  %12 = load i16, i16* %ymax.addr, align 2, !dbg !3690
  %call = call %struct.ImBuf* @view3d_read_backbuf(%struct.ViewContext* %8, i16 signext %9, i16 signext %10, i16 signext %11, i16 signext %12), !dbg !3691
  store %struct.ImBuf* %call, %struct.ImBuf** %buf, align 8, !dbg !3692
  %13 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3693
  %cmp8 = icmp eq %struct.ImBuf* %13, null, !dbg !3695
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3696

if.then10:                                        ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !3697
  br label %return, !dbg !3697

if.end11:                                         ; preds = %if.end
  %14 = load i32, i32* @bm_vertoffs, align 4, !dbg !3698
  %cmp12 = icmp eq i32 %14, 0, !dbg !3700
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3701

if.then14:                                        ; preds = %if.end11
  store i8 0, i8* %retval, align 1, !dbg !3702
  br label %return, !dbg !3702

if.end15:                                         ; preds = %if.end11
  %15 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3703
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 8, !dbg !3704
  %16 = load i32*, i32** %rect, align 8, !dbg !3704
  store i32* %16, i32** %dr, align 8, !dbg !3705
  %17 = load i32, i32* @bm_vertoffs, align 4, !dbg !3706
  %add = add i32 %17, 1, !dbg !3707
  %call16 = call i32* @edbm_backbuf_alloc(i32 %add), !dbg !3708
  store i32* %call16, i32** @selbuf, align 8, !dbg !3709
  %18 = load i16, i16* %xmax.addr, align 2, !dbg !3710
  %conv17 = sext i16 %18 to i32, !dbg !3710
  %19 = load i16, i16* %xmin.addr, align 2, !dbg !3711
  %conv18 = sext i16 %19 to i32, !dbg !3711
  %sub = sub nsw i32 %conv17, %conv18, !dbg !3712
  %add19 = add nsw i32 %sub, 1, !dbg !3713
  %20 = load i16, i16* %ymax.addr, align 2, !dbg !3714
  %conv20 = sext i16 %20 to i32, !dbg !3714
  %21 = load i16, i16* %ymin.addr, align 2, !dbg !3715
  %conv21 = sext i16 %21 to i32, !dbg !3715
  %sub22 = sub nsw i32 %conv20, %conv21, !dbg !3716
  %add23 = add nsw i32 %sub22, 1, !dbg !3717
  %mul = mul nsw i32 %add19, %add23, !dbg !3718
  store i32 %mul, i32* %a, align 4, !dbg !3719
  br label %while.cond, !dbg !3720

while.cond:                                       ; preds = %if.end30, %if.end15
  %22 = load i32, i32* %a, align 4, !dbg !3721
  %dec = add nsw i32 %22, -1, !dbg !3721
  store i32 %dec, i32* %a, align 4, !dbg !3721
  %tobool = icmp ne i32 %22, 0, !dbg !3720
  br i1 %tobool, label %while.body, label %while.end, !dbg !3720

while.body:                                       ; preds = %while.cond
  %23 = load i32*, i32** %dr, align 8, !dbg !3722
  %24 = load i32, i32* %23, align 4, !dbg !3725
  %cmp24 = icmp ugt i32 %24, 0, !dbg !3726
  br i1 %cmp24, label %land.lhs.true, label %if.end30, !dbg !3727

land.lhs.true:                                    ; preds = %while.body
  %25 = load i32*, i32** %dr, align 8, !dbg !3728
  %26 = load i32, i32* %25, align 4, !dbg !3729
  %27 = load i32, i32* @bm_vertoffs, align 4, !dbg !3730
  %cmp26 = icmp ule i32 %26, %27, !dbg !3731
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !3732

if.then28:                                        ; preds = %land.lhs.true
  %28 = load i32*, i32** %dr, align 8, !dbg !3733
  %29 = load i32, i32* %28, align 4, !dbg !3733
  %and29 = and i32 %29, 31, !dbg !3733
  %shl = shl i32 1, %and29, !dbg !3733
  %30 = load i32*, i32** @selbuf, align 8, !dbg !3733
  %31 = load i32*, i32** %dr, align 8, !dbg !3733
  %32 = load i32, i32* %31, align 4, !dbg !3733
  %shr = lshr i32 %32, 5, !dbg !3733
  %idxprom = zext i32 %shr to i64, !dbg !3733
  %arrayidx = getelementptr inbounds i32, i32* %30, i64 %idxprom, !dbg !3733
  %33 = load i32, i32* %arrayidx, align 4, !dbg !3733
  %or = or i32 %33, %shl, !dbg !3733
  store i32 %or, i32* %arrayidx, align 4, !dbg !3733
  br label %if.end30, !dbg !3735

if.end30:                                         ; preds = %if.then28, %land.lhs.true, %while.body
  %34 = load i32*, i32** %dr, align 8, !dbg !3736
  %incdec.ptr = getelementptr inbounds i32, i32* %34, i32 1, !dbg !3736
  store i32* %incdec.ptr, i32** %dr, align 8, !dbg !3736
  br label %while.cond, !dbg !3720, !llvm.loop !3737

while.end:                                        ; preds = %while.cond
  %35 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3739
  call void @IMB_freeImBuf(%struct.ImBuf* %35), !dbg !3740
  store i8 1, i8* %retval, align 1, !dbg !3741
  br label %return, !dbg !3741

return:                                           ; preds = %while.end, %if.then14, %if.then10, %if.then
  %36 = load i8, i8* %retval, align 1, !dbg !3742
  ret i8 %36, !dbg !3742
}

declare dso_local %struct.ImBuf* @view3d_read_backbuf(%struct.ViewContext*, i16 signext, i16 signext, i16 signext, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32* @edbm_backbuf_alloc(i32 %size) #0 !dbg !3743 {
entry:
  %size.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3746, metadata !DIExpression()), !dbg !3747
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3748
  %1 = load i32, i32* %size.addr, align 4, !dbg !3748
  %shr = ashr i32 %1, 5, !dbg !3748
  %add = add nsw i32 %shr, 1, !dbg !3748
  %conv = sext i32 %add to i64, !dbg !3748
  %mul = mul i64 %conv, 4, !dbg !3748
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i64 0, i64 0)), !dbg !3748
  %2 = bitcast i8* %call to i32*, !dbg !3748
  ret i32* %2, !dbg !3749
}

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_backbuf_check(i32 %index) #0 !dbg !3750 {
entry:
  %retval = alloca i8, align 1
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3753, metadata !DIExpression()), !dbg !3754
  %0 = load i32*, i32** @selbuf, align 8, !dbg !3755
  %cmp = icmp eq i32* %0, null, !dbg !3757
  br i1 %cmp, label %if.then, label %if.end, !dbg !3758

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !3759
  br label %return, !dbg !3759

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !3760
  %cmp1 = icmp ugt i32 %1, 0, !dbg !3762
  br i1 %cmp1, label %land.lhs.true, label %if.end7, !dbg !3763

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %index.addr, align 4, !dbg !3764
  %3 = load i32, i32* @bm_vertoffs, align 4, !dbg !3765
  %cmp2 = icmp ule i32 %2, %3, !dbg !3766
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !3767

if.then3:                                         ; preds = %land.lhs.true
  %4 = load i32*, i32** @selbuf, align 8, !dbg !3768
  %5 = load i32, i32* %index.addr, align 4, !dbg !3768
  %shr = lshr i32 %5, 5, !dbg !3768
  %idxprom = zext i32 %shr to i64, !dbg !3768
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !3768
  %6 = load i32, i32* %arrayidx, align 4, !dbg !3768
  %7 = load i32, i32* %index.addr, align 4, !dbg !3768
  %and = and i32 %7, 31, !dbg !3768
  %shl = shl i32 1, %and, !dbg !3768
  %and4 = and i32 %6, %shl, !dbg !3768
  %cmp5 = icmp ne i32 %and4, 0, !dbg !3768
  %conv = zext i1 %cmp5 to i32, !dbg !3768
  %conv6 = trunc i32 %conv to i8, !dbg !3768
  store i8 %conv6, i8* %retval, align 1, !dbg !3769
  br label %return, !dbg !3769

if.end7:                                          ; preds = %land.lhs.true, %if.end
  store i8 0, i8* %retval, align 1, !dbg !3770
  br label %return, !dbg !3770

return:                                           ; preds = %if.end7, %if.then3, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !3771
  ret i8 %8, !dbg !3771
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_backbuf_free() #0 !dbg !3772 {
entry:
  %0 = load i32*, i32** @selbuf, align 8, !dbg !3775
  %tobool = icmp ne i32* %0, null, !dbg !3775
  br i1 %tobool, label %if.then, label %if.end, !dbg !3777

if.then:                                          ; preds = %entry
  %1 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3778
  %2 = load i32*, i32** @selbuf, align 8, !dbg !3779
  %3 = bitcast i32* %2 to i8*, !dbg !3779
  call void %1(i8* %3), !dbg !3778
  br label %if.end, !dbg !3778

if.end:                                           ; preds = %if.then, %entry
  store i32* null, i32** @selbuf, align 8, !dbg !3780
  ret void, !dbg !3781
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_backbuf_border_mask_init(%struct.ViewContext* %vc, [2 x i32]* %mcords, i16 signext %tot, i16 signext %xmin, i16 signext %ymin, i16 signext %xmax, i16 signext %ymax) #0 !dbg !3782 {
entry:
  %retval = alloca i8, align 1
  %vc.addr = alloca %struct.ViewContext*, align 8
  %mcords.addr = alloca [2 x i32]*, align 8
  %tot.addr = alloca i16, align 2
  %xmin.addr = alloca i16, align 2
  %ymin.addr = alloca i16, align 2
  %xmax.addr = alloca i16, align 2
  %ymax.addr = alloca i16, align 2
  %dr = alloca i32*, align 8
  %dr_mask = alloca i32*, align 8
  %dr_mask_arr = alloca i32*, align 8
  %buf = alloca %struct.ImBuf*, align 8
  %a = alloca i32, align 4
  %lasso_mask_data = alloca %struct.LassoMaskData, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !3787, metadata !DIExpression()), !dbg !3788
  store [2 x i32]* %mcords, [2 x i32]** %mcords.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %mcords.addr, metadata !3789, metadata !DIExpression()), !dbg !3790
  store i16 %tot, i16* %tot.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tot.addr, metadata !3791, metadata !DIExpression()), !dbg !3792
  store i16 %xmin, i16* %xmin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %xmin.addr, metadata !3793, metadata !DIExpression()), !dbg !3794
  store i16 %ymin, i16* %ymin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ymin.addr, metadata !3795, metadata !DIExpression()), !dbg !3796
  store i16 %xmax, i16* %xmax.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %xmax.addr, metadata !3797, metadata !DIExpression()), !dbg !3798
  store i16 %ymax, i16* %ymax.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ymax.addr, metadata !3799, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.declare(metadata i32** %dr, metadata !3801, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.declare(metadata i32** %dr_mask, metadata !3803, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.declare(metadata i32** %dr_mask_arr, metadata !3805, metadata !DIExpression()), !dbg !3806
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %buf, metadata !3807, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3809, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.declare(metadata %struct.LassoMaskData* %lasso_mask_data, metadata !3811, metadata !DIExpression()), !dbg !3816
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3817
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 2, !dbg !3819
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3819
  %cmp = icmp eq %struct.Object* %1, null, !dbg !3820
  br i1 %cmp, label %if.then, label %if.else, !dbg !3821

if.then:                                          ; preds = %entry
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3822
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 1, !dbg !3825
  %3 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3825
  %call = call zeroext i8 @BKE_paint_select_elem_test(%struct.Object* %3), !dbg !3826
  %tobool = icmp ne i8 %call, 0, !dbg !3826
  br i1 %tobool, label %if.end, label %if.then1, !dbg !3827

if.then1:                                         ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !3828
  br label %return, !dbg !3828

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !3830

if.else:                                          ; preds = %entry
  %4 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3831
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %4, i32 0, i32 4, !dbg !3833
  %5 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !3833
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %5, i32 0, i32 24, !dbg !3834
  %6 = load i16, i16* %drawtype, align 8, !dbg !3834
  %conv = sext i16 %6 to i32, !dbg !3831
  %cmp2 = icmp slt i32 %conv, 3, !dbg !3835
  br i1 %cmp2, label %if.then8, label %lor.lhs.false, !dbg !3836

lor.lhs.false:                                    ; preds = %if.else
  %7 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3837
  %v3d4 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %7, i32 0, i32 4, !dbg !3838
  %8 = load %struct.View3D*, %struct.View3D** %v3d4, align 8, !dbg !3838
  %flag = getelementptr inbounds %struct.View3D, %struct.View3D* %8, i32 0, i32 28, !dbg !3839
  %9 = load i16, i16* %flag, align 8, !dbg !3839
  %conv5 = sext i16 %9 to i32, !dbg !3837
  %and = and i32 %conv5, 4096, !dbg !3840
  %cmp6 = icmp eq i32 %and, 0, !dbg !3841
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3842

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  store i8 0, i8* %retval, align 1, !dbg !3843
  br label %return, !dbg !3843

if.end9:                                          ; preds = %lor.lhs.false
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %10 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3845
  %11 = load i16, i16* %xmin.addr, align 2, !dbg !3846
  %12 = load i16, i16* %ymin.addr, align 2, !dbg !3847
  %13 = load i16, i16* %xmax.addr, align 2, !dbg !3848
  %14 = load i16, i16* %ymax.addr, align 2, !dbg !3849
  %call11 = call %struct.ImBuf* @view3d_read_backbuf(%struct.ViewContext* %10, i16 signext %11, i16 signext %12, i16 signext %13, i16 signext %14), !dbg !3850
  store %struct.ImBuf* %call11, %struct.ImBuf** %buf, align 8, !dbg !3851
  %15 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3852
  %cmp12 = icmp eq %struct.ImBuf* %15, null, !dbg !3854
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3855

if.then14:                                        ; preds = %if.end10
  store i8 0, i8* %retval, align 1, !dbg !3856
  br label %return, !dbg !3856

if.end15:                                         ; preds = %if.end10
  %16 = load i32, i32* @bm_vertoffs, align 4, !dbg !3857
  %cmp16 = icmp eq i32 %16, 0, !dbg !3859
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !3860

if.then18:                                        ; preds = %if.end15
  store i8 0, i8* %retval, align 1, !dbg !3861
  br label %return, !dbg !3861

if.end19:                                         ; preds = %if.end15
  %17 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3862
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 8, !dbg !3863
  %18 = load i32*, i32** %rect, align 8, !dbg !3863
  store i32* %18, i32** %dr, align 8, !dbg !3864
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3865
  %20 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3866
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 2, !dbg !3867
  %21 = load i32, i32* %x, align 8, !dbg !3867
  %conv20 = sext i32 %21 to i64, !dbg !3866
  %mul = mul i64 4, %conv20, !dbg !3868
  %22 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3869
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 3, !dbg !3870
  %23 = load i32, i32* %y, align 4, !dbg !3870
  %conv21 = sext i32 %23 to i64, !dbg !3869
  %mul22 = mul i64 %mul, %conv21, !dbg !3871
  %call23 = call i8* %19(i64 %mul22, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.EDBM_backbuf_border_mask_init, i64 0, i64 0)), !dbg !3865
  %24 = bitcast i8* %call23 to i32*, !dbg !3865
  store i32* %24, i32** %dr_mask_arr, align 8, !dbg !3872
  store i32* %24, i32** %dr_mask, align 8, !dbg !3873
  %25 = load i32*, i32** %dr_mask, align 8, !dbg !3874
  %px = getelementptr inbounds %struct.LassoMaskData, %struct.LassoMaskData* %lasso_mask_data, i32 0, i32 0, !dbg !3875
  store i32* %25, i32** %px, align 8, !dbg !3876
  %26 = load i16, i16* %xmax.addr, align 2, !dbg !3877
  %conv24 = sext i16 %26 to i32, !dbg !3877
  %27 = load i16, i16* %xmin.addr, align 2, !dbg !3878
  %conv25 = sext i16 %27 to i32, !dbg !3878
  %sub = sub nsw i32 %conv24, %conv25, !dbg !3879
  %add = add nsw i32 %sub, 1, !dbg !3880
  %width = getelementptr inbounds %struct.LassoMaskData, %struct.LassoMaskData* %lasso_mask_data, i32 0, i32 1, !dbg !3881
  store i32 %add, i32* %width, align 8, !dbg !3882
  %28 = load i16, i16* %xmin.addr, align 2, !dbg !3883
  %conv26 = sext i16 %28 to i32, !dbg !3883
  %29 = load i16, i16* %ymin.addr, align 2, !dbg !3884
  %conv27 = sext i16 %29 to i32, !dbg !3884
  %30 = load i16, i16* %xmax.addr, align 2, !dbg !3885
  %conv28 = sext i16 %30 to i32, !dbg !3885
  %add29 = add nsw i32 %conv28, 1, !dbg !3886
  %31 = load i16, i16* %ymax.addr, align 2, !dbg !3887
  %conv30 = sext i16 %31 to i32, !dbg !3887
  %add31 = add nsw i32 %conv30, 1, !dbg !3888
  %32 = load [2 x i32]*, [2 x i32]** %mcords.addr, align 8, !dbg !3889
  %33 = load i16, i16* %tot.addr, align 2, !dbg !3890
  %conv32 = sext i16 %33 to i32, !dbg !3890
  %34 = bitcast %struct.LassoMaskData* %lasso_mask_data to i8*, !dbg !3891
  call void @fill_poly_v2i_n(i32 %conv26, i32 %conv27, i32 %add29, i32 %add31, [2 x i32]* %32, i32 %conv32, void (i32, i32, i8*)* @edbm_mask_lasso_px_cb, i8* %34), !dbg !3892
  %35 = load i32, i32* @bm_vertoffs, align 4, !dbg !3893
  %add33 = add i32 %35, 1, !dbg !3894
  %call34 = call i32* @edbm_backbuf_alloc(i32 %add33), !dbg !3895
  store i32* %call34, i32** @selbuf, align 8, !dbg !3896
  %36 = load i16, i16* %xmax.addr, align 2, !dbg !3897
  %conv35 = sext i16 %36 to i32, !dbg !3897
  %37 = load i16, i16* %xmin.addr, align 2, !dbg !3898
  %conv36 = sext i16 %37 to i32, !dbg !3898
  %sub37 = sub nsw i32 %conv35, %conv36, !dbg !3899
  %add38 = add nsw i32 %sub37, 1, !dbg !3900
  %38 = load i16, i16* %ymax.addr, align 2, !dbg !3901
  %conv39 = sext i16 %38 to i32, !dbg !3901
  %39 = load i16, i16* %ymin.addr, align 2, !dbg !3902
  %conv40 = sext i16 %39 to i32, !dbg !3902
  %sub41 = sub nsw i32 %conv39, %conv40, !dbg !3903
  %add42 = add nsw i32 %sub41, 1, !dbg !3904
  %mul43 = mul nsw i32 %add38, %add42, !dbg !3905
  store i32 %mul43, i32* %a, align 4, !dbg !3906
  br label %while.cond, !dbg !3907

while.cond:                                       ; preds = %if.end54, %if.end19
  %40 = load i32, i32* %a, align 4, !dbg !3908
  %dec = add nsw i32 %40, -1, !dbg !3908
  store i32 %dec, i32* %a, align 4, !dbg !3908
  %tobool44 = icmp ne i32 %40, 0, !dbg !3907
  br i1 %tobool44, label %while.body, label %while.end, !dbg !3907

while.body:                                       ; preds = %while.cond
  %41 = load i32*, i32** %dr, align 8, !dbg !3909
  %42 = load i32, i32* %41, align 4, !dbg !3912
  %cmp45 = icmp ugt i32 %42, 0, !dbg !3913
  br i1 %cmp45, label %land.lhs.true, label %if.end54, !dbg !3914

land.lhs.true:                                    ; preds = %while.body
  %43 = load i32*, i32** %dr, align 8, !dbg !3915
  %44 = load i32, i32* %43, align 4, !dbg !3916
  %45 = load i32, i32* @bm_vertoffs, align 4, !dbg !3917
  %cmp47 = icmp ule i32 %44, %45, !dbg !3918
  br i1 %cmp47, label %land.lhs.true49, label %if.end54, !dbg !3919

land.lhs.true49:                                  ; preds = %land.lhs.true
  %46 = load i32*, i32** %dr_mask, align 8, !dbg !3920
  %47 = load i32, i32* %46, align 4, !dbg !3921
  %cmp50 = icmp eq i32 %47, 1, !dbg !3922
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !3923

if.then52:                                        ; preds = %land.lhs.true49
  %48 = load i32*, i32** %dr, align 8, !dbg !3924
  %49 = load i32, i32* %48, align 4, !dbg !3924
  %and53 = and i32 %49, 31, !dbg !3924
  %shl = shl i32 1, %and53, !dbg !3924
  %50 = load i32*, i32** @selbuf, align 8, !dbg !3924
  %51 = load i32*, i32** %dr, align 8, !dbg !3924
  %52 = load i32, i32* %51, align 4, !dbg !3924
  %shr = lshr i32 %52, 5, !dbg !3924
  %idxprom = zext i32 %shr to i64, !dbg !3924
  %arrayidx = getelementptr inbounds i32, i32* %50, i64 %idxprom, !dbg !3924
  %53 = load i32, i32* %arrayidx, align 4, !dbg !3924
  %or = or i32 %53, %shl, !dbg !3924
  store i32 %or, i32* %arrayidx, align 4, !dbg !3924
  br label %if.end54, !dbg !3926

if.end54:                                         ; preds = %if.then52, %land.lhs.true49, %land.lhs.true, %while.body
  %54 = load i32*, i32** %dr, align 8, !dbg !3927
  %incdec.ptr = getelementptr inbounds i32, i32* %54, i32 1, !dbg !3927
  store i32* %incdec.ptr, i32** %dr, align 8, !dbg !3927
  %55 = load i32*, i32** %dr_mask, align 8, !dbg !3928
  %incdec.ptr55 = getelementptr inbounds i32, i32* %55, i32 1, !dbg !3928
  store i32* %incdec.ptr55, i32** %dr_mask, align 8, !dbg !3928
  br label %while.cond, !dbg !3907, !llvm.loop !3929

while.end:                                        ; preds = %while.cond
  %56 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !3931
  call void @IMB_freeImBuf(%struct.ImBuf* %56), !dbg !3932
  %57 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3933
  %58 = load i32*, i32** %dr_mask_arr, align 8, !dbg !3934
  %59 = bitcast i32* %58 to i8*, !dbg !3934
  call void %57(i8* %59), !dbg !3933
  store i8 1, i8* %retval, align 1, !dbg !3935
  br label %return, !dbg !3935

return:                                           ; preds = %while.end, %if.then18, %if.then14, %if.then8, %if.then1
  %60 = load i8, i8* %retval, align 1, !dbg !3936
  ret i8 %60, !dbg !3936
}

declare dso_local zeroext i8 @BKE_paint_select_elem_test(%struct.Object*) #2

declare dso_local void @fill_poly_v2i_n(i32, i32, i32, i32, [2 x i32]*, i32, void (i32, i32, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_mask_lasso_px_cb(i32 %x, i32 %y, i8* %user_data) #0 !dbg !3937 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %user_data.addr = alloca i8*, align 8
  %data = alloca %struct.LassoMaskData*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3940, metadata !DIExpression()), !dbg !3941
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3942, metadata !DIExpression()), !dbg !3943
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !3944, metadata !DIExpression()), !dbg !3945
  call void @llvm.dbg.declare(metadata %struct.LassoMaskData** %data, metadata !3946, metadata !DIExpression()), !dbg !3948
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !3949
  %1 = bitcast i8* %0 to %struct.LassoMaskData*, !dbg !3949
  store %struct.LassoMaskData* %1, %struct.LassoMaskData** %data, align 8, !dbg !3948
  %2 = load %struct.LassoMaskData*, %struct.LassoMaskData** %data, align 8, !dbg !3950
  %px = getelementptr inbounds %struct.LassoMaskData, %struct.LassoMaskData* %2, i32 0, i32 0, !dbg !3951
  %3 = load i32*, i32** %px, align 8, !dbg !3951
  %4 = load i32, i32* %y.addr, align 4, !dbg !3952
  %5 = load %struct.LassoMaskData*, %struct.LassoMaskData** %data, align 8, !dbg !3953
  %width = getelementptr inbounds %struct.LassoMaskData, %struct.LassoMaskData* %5, i32 0, i32 1, !dbg !3954
  %6 = load i32, i32* %width, align 8, !dbg !3954
  %mul = mul nsw i32 %4, %6, !dbg !3955
  %7 = load i32, i32* %x.addr, align 4, !dbg !3956
  %add = add nsw i32 %mul, %7, !dbg !3957
  %idxprom = sext i32 %add to i64, !dbg !3950
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !3950
  store i32 1, i32* %arrayidx, align 4, !dbg !3958
  ret void, !dbg !3959
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_backbuf_circle_init(%struct.ViewContext* %vc, i16 signext %xs, i16 signext %ys, i16 signext %rads) #0 !dbg !3960 {
entry:
  %retval = alloca i8, align 1
  %vc.addr = alloca %struct.ViewContext*, align 8
  %xs.addr = alloca i16, align 2
  %ys.addr = alloca i16, align 2
  %rads.addr = alloca i16, align 2
  %buf = alloca %struct.ImBuf*, align 8
  %dr = alloca i32*, align 8
  %xmin = alloca i16, align 2
  %ymin = alloca i16, align 2
  %xmax = alloca i16, align 2
  %ymax = alloca i16, align 2
  %xc = alloca i16, align 2
  %yc = alloca i16, align 2
  %radsq = alloca i32, align 4
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !3963, metadata !DIExpression()), !dbg !3964
  store i16 %xs, i16* %xs.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %xs.addr, metadata !3965, metadata !DIExpression()), !dbg !3966
  store i16 %ys, i16* %ys.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ys.addr, metadata !3967, metadata !DIExpression()), !dbg !3968
  store i16 %rads, i16* %rads.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rads.addr, metadata !3969, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %buf, metadata !3971, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.declare(metadata i32** %dr, metadata !3973, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata i16* %xmin, metadata !3975, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata i16* %ymin, metadata !3977, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata i16* %xmax, metadata !3979, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata i16* %ymax, metadata !3981, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.declare(metadata i16* %xc, metadata !3983, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata i16* %yc, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata i32* %radsq, metadata !3987, metadata !DIExpression()), !dbg !3988
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3989
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 2, !dbg !3991
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3991
  %cmp = icmp eq %struct.Object* %1, null, !dbg !3992
  br i1 %cmp, label %if.then, label %if.else, !dbg !3993

if.then:                                          ; preds = %entry
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !3994
  %obact = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 1, !dbg !3997
  %3 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3997
  %call = call zeroext i8 @BKE_paint_select_elem_test(%struct.Object* %3), !dbg !3998
  %tobool = icmp ne i8 %call, 0, !dbg !3998
  br i1 %tobool, label %if.end, label %if.then1, !dbg !3999

if.then1:                                         ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !4000
  br label %return, !dbg !4000

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !4002

if.else:                                          ; preds = %entry
  %4 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4003
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %4, i32 0, i32 4, !dbg !4005
  %5 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4005
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %5, i32 0, i32 24, !dbg !4006
  %6 = load i16, i16* %drawtype, align 8, !dbg !4006
  %conv = sext i16 %6 to i32, !dbg !4003
  %cmp2 = icmp slt i32 %conv, 3, !dbg !4007
  br i1 %cmp2, label %if.then8, label %lor.lhs.false, !dbg !4008

lor.lhs.false:                                    ; preds = %if.else
  %7 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4009
  %v3d4 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %7, i32 0, i32 4, !dbg !4010
  %8 = load %struct.View3D*, %struct.View3D** %v3d4, align 8, !dbg !4010
  %flag = getelementptr inbounds %struct.View3D, %struct.View3D* %8, i32 0, i32 28, !dbg !4011
  %9 = load i16, i16* %flag, align 8, !dbg !4011
  %conv5 = sext i16 %9 to i32, !dbg !4009
  %and = and i32 %conv5, 4096, !dbg !4012
  %cmp6 = icmp eq i32 %and, 0, !dbg !4013
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4014

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  store i8 0, i8* %retval, align 1, !dbg !4015
  br label %return, !dbg !4015

if.end9:                                          ; preds = %lor.lhs.false
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %10 = load i16, i16* %xs.addr, align 2, !dbg !4017
  %conv11 = sext i16 %10 to i32, !dbg !4017
  %11 = load i16, i16* %rads.addr, align 2, !dbg !4018
  %conv12 = sext i16 %11 to i32, !dbg !4018
  %sub = sub nsw i32 %conv11, %conv12, !dbg !4019
  %conv13 = trunc i32 %sub to i16, !dbg !4017
  store i16 %conv13, i16* %xmin, align 2, !dbg !4020
  %12 = load i16, i16* %xs.addr, align 2, !dbg !4021
  %conv14 = sext i16 %12 to i32, !dbg !4021
  %13 = load i16, i16* %rads.addr, align 2, !dbg !4022
  %conv15 = sext i16 %13 to i32, !dbg !4022
  %add = add nsw i32 %conv14, %conv15, !dbg !4023
  %conv16 = trunc i32 %add to i16, !dbg !4021
  store i16 %conv16, i16* %xmax, align 2, !dbg !4024
  %14 = load i16, i16* %ys.addr, align 2, !dbg !4025
  %conv17 = sext i16 %14 to i32, !dbg !4025
  %15 = load i16, i16* %rads.addr, align 2, !dbg !4026
  %conv18 = sext i16 %15 to i32, !dbg !4026
  %sub19 = sub nsw i32 %conv17, %conv18, !dbg !4027
  %conv20 = trunc i32 %sub19 to i16, !dbg !4025
  store i16 %conv20, i16* %ymin, align 2, !dbg !4028
  %16 = load i16, i16* %ys.addr, align 2, !dbg !4029
  %conv21 = sext i16 %16 to i32, !dbg !4029
  %17 = load i16, i16* %rads.addr, align 2, !dbg !4030
  %conv22 = sext i16 %17 to i32, !dbg !4030
  %add23 = add nsw i32 %conv21, %conv22, !dbg !4031
  %conv24 = trunc i32 %add23 to i16, !dbg !4029
  store i16 %conv24, i16* %ymax, align 2, !dbg !4032
  %18 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4033
  %19 = load i16, i16* %xmin, align 2, !dbg !4034
  %20 = load i16, i16* %ymin, align 2, !dbg !4035
  %21 = load i16, i16* %xmax, align 2, !dbg !4036
  %22 = load i16, i16* %ymax, align 2, !dbg !4037
  %call25 = call %struct.ImBuf* @view3d_read_backbuf(%struct.ViewContext* %18, i16 signext %19, i16 signext %20, i16 signext %21, i16 signext %22), !dbg !4038
  store %struct.ImBuf* %call25, %struct.ImBuf** %buf, align 8, !dbg !4039
  %23 = load i32, i32* @bm_vertoffs, align 4, !dbg !4040
  %cmp26 = icmp eq i32 %23, 0, !dbg !4042
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !4043

if.then28:                                        ; preds = %if.end10
  store i8 0, i8* %retval, align 1, !dbg !4044
  br label %return, !dbg !4044

if.end29:                                         ; preds = %if.end10
  %24 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !4045
  %cmp30 = icmp eq %struct.ImBuf* %24, null, !dbg !4047
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4048

if.then32:                                        ; preds = %if.end29
  store i8 0, i8* %retval, align 1, !dbg !4049
  br label %return, !dbg !4049

if.end33:                                         ; preds = %if.end29
  %25 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !4050
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 8, !dbg !4051
  %26 = load i32*, i32** %rect, align 8, !dbg !4051
  store i32* %26, i32** %dr, align 8, !dbg !4052
  %27 = load i32, i32* @bm_vertoffs, align 4, !dbg !4053
  %add34 = add i32 %27, 1, !dbg !4054
  %call35 = call i32* @edbm_backbuf_alloc(i32 %add34), !dbg !4055
  store i32* %call35, i32** @selbuf, align 8, !dbg !4056
  %28 = load i16, i16* %rads.addr, align 2, !dbg !4057
  %conv36 = sext i16 %28 to i32, !dbg !4057
  %29 = load i16, i16* %rads.addr, align 2, !dbg !4058
  %conv37 = sext i16 %29 to i32, !dbg !4058
  %mul = mul nsw i32 %conv36, %conv37, !dbg !4059
  store i32 %mul, i32* %radsq, align 4, !dbg !4060
  %30 = load i16, i16* %rads.addr, align 2, !dbg !4061
  %conv38 = sext i16 %30 to i32, !dbg !4061
  %sub39 = sub nsw i32 0, %conv38, !dbg !4063
  %conv40 = trunc i32 %sub39 to i16, !dbg !4063
  store i16 %conv40, i16* %yc, align 2, !dbg !4064
  br label %for.cond, !dbg !4065

for.cond:                                         ; preds = %for.inc72, %if.end33
  %31 = load i16, i16* %yc, align 2, !dbg !4066
  %conv41 = sext i16 %31 to i32, !dbg !4066
  %32 = load i16, i16* %rads.addr, align 2, !dbg !4068
  %conv42 = sext i16 %32 to i32, !dbg !4068
  %cmp43 = icmp sle i32 %conv41, %conv42, !dbg !4069
  br i1 %cmp43, label %for.body, label %for.end74, !dbg !4070

for.body:                                         ; preds = %for.cond
  %33 = load i16, i16* %rads.addr, align 2, !dbg !4071
  %conv45 = sext i16 %33 to i32, !dbg !4071
  %sub46 = sub nsw i32 0, %conv45, !dbg !4074
  %conv47 = trunc i32 %sub46 to i16, !dbg !4074
  store i16 %conv47, i16* %xc, align 2, !dbg !4075
  br label %for.cond48, !dbg !4076

for.cond48:                                       ; preds = %for.inc, %for.body
  %34 = load i16, i16* %xc, align 2, !dbg !4077
  %conv49 = sext i16 %34 to i32, !dbg !4077
  %35 = load i16, i16* %rads.addr, align 2, !dbg !4079
  %conv50 = sext i16 %35 to i32, !dbg !4079
  %cmp51 = icmp sle i32 %conv49, %conv50, !dbg !4080
  br i1 %cmp51, label %for.body53, label %for.end, !dbg !4081

for.body53:                                       ; preds = %for.cond48
  %36 = load i16, i16* %xc, align 2, !dbg !4082
  %conv54 = sext i16 %36 to i32, !dbg !4082
  %37 = load i16, i16* %xc, align 2, !dbg !4085
  %conv55 = sext i16 %37 to i32, !dbg !4085
  %mul56 = mul nsw i32 %conv54, %conv55, !dbg !4086
  %38 = load i16, i16* %yc, align 2, !dbg !4087
  %conv57 = sext i16 %38 to i32, !dbg !4087
  %39 = load i16, i16* %yc, align 2, !dbg !4088
  %conv58 = sext i16 %39 to i32, !dbg !4088
  %mul59 = mul nsw i32 %conv57, %conv58, !dbg !4089
  %add60 = add nsw i32 %mul56, %mul59, !dbg !4090
  %40 = load i32, i32* %radsq, align 4, !dbg !4091
  %cmp61 = icmp slt i32 %add60, %40, !dbg !4092
  br i1 %cmp61, label %if.then63, label %if.end71, !dbg !4093

if.then63:                                        ; preds = %for.body53
  %41 = load i32*, i32** %dr, align 8, !dbg !4094
  %42 = load i32, i32* %41, align 4, !dbg !4097
  %cmp64 = icmp ugt i32 %42, 0, !dbg !4098
  br i1 %cmp64, label %land.lhs.true, label %if.end70, !dbg !4099

land.lhs.true:                                    ; preds = %if.then63
  %43 = load i32*, i32** %dr, align 8, !dbg !4100
  %44 = load i32, i32* %43, align 4, !dbg !4101
  %45 = load i32, i32* @bm_vertoffs, align 4, !dbg !4102
  %cmp66 = icmp ule i32 %44, %45, !dbg !4103
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !4104

if.then68:                                        ; preds = %land.lhs.true
  %46 = load i32*, i32** %dr, align 8, !dbg !4105
  %47 = load i32, i32* %46, align 4, !dbg !4105
  %and69 = and i32 %47, 31, !dbg !4105
  %shl = shl i32 1, %and69, !dbg !4105
  %48 = load i32*, i32** @selbuf, align 8, !dbg !4105
  %49 = load i32*, i32** %dr, align 8, !dbg !4105
  %50 = load i32, i32* %49, align 4, !dbg !4105
  %shr = lshr i32 %50, 5, !dbg !4105
  %idxprom = zext i32 %shr to i64, !dbg !4105
  %arrayidx = getelementptr inbounds i32, i32* %48, i64 %idxprom, !dbg !4105
  %51 = load i32, i32* %arrayidx, align 4, !dbg !4105
  %or = or i32 %51, %shl, !dbg !4105
  store i32 %or, i32* %arrayidx, align 4, !dbg !4105
  br label %if.end70, !dbg !4107

if.end70:                                         ; preds = %if.then68, %land.lhs.true, %if.then63
  br label %if.end71, !dbg !4108

if.end71:                                         ; preds = %if.end70, %for.body53
  br label %for.inc, !dbg !4109

for.inc:                                          ; preds = %if.end71
  %52 = load i16, i16* %xc, align 2, !dbg !4110
  %inc = add i16 %52, 1, !dbg !4110
  store i16 %inc, i16* %xc, align 2, !dbg !4110
  %53 = load i32*, i32** %dr, align 8, !dbg !4111
  %incdec.ptr = getelementptr inbounds i32, i32* %53, i32 1, !dbg !4111
  store i32* %incdec.ptr, i32** %dr, align 8, !dbg !4111
  br label %for.cond48, !dbg !4112, !llvm.loop !4113

for.end:                                          ; preds = %for.cond48
  br label %for.inc72, !dbg !4115

for.inc72:                                        ; preds = %for.end
  %54 = load i16, i16* %yc, align 2, !dbg !4116
  %inc73 = add i16 %54, 1, !dbg !4116
  store i16 %inc73, i16* %yc, align 2, !dbg !4116
  br label %for.cond, !dbg !4117, !llvm.loop !4118

for.end74:                                        ; preds = %for.cond
  %55 = load %struct.ImBuf*, %struct.ImBuf** %buf, align 8, !dbg !4120
  call void @IMB_freeImBuf(%struct.ImBuf* %55), !dbg !4121
  store i8 1, i8* %retval, align 1, !dbg !4122
  br label %return, !dbg !4122

return:                                           ; preds = %for.end74, %if.then32, %if.then28, %if.then8, %if.then1
  %56 = load i8, i8* %retval, align 1, !dbg !4123
  ret i8 %56, !dbg !4123
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BMVert* @EDBM_vert_find_nearest(%struct.ViewContext* %vc, float* %r_dist, i8 zeroext %sel, i8 zeroext %strict) #0 !dbg !2692 {
entry:
  %retval = alloca %struct.BMVert*, align 8
  %vc.addr = alloca %struct.ViewContext*, align 8
  %r_dist.addr = alloca float*, align 8
  %sel.addr = alloca i8, align 1
  %strict.addr = alloca i8, align 1
  %distance = alloca float, align 4
  %index = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %data = alloca %struct.anon, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  store float* %r_dist, float** %r_dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_dist.addr, metadata !4126, metadata !DIExpression()), !dbg !4127
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8 %strict, i8* %strict.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %strict.addr, metadata !4130, metadata !DIExpression()), !dbg !4131
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4132
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 4, !dbg !4134
  %1 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4134
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %1, i32 0, i32 24, !dbg !4135
  %2 = load i16, i16* %drawtype, align 8, !dbg !4135
  %conv = sext i16 %2 to i32, !dbg !4132
  %cmp = icmp sgt i32 %conv, 2, !dbg !4136
  br i1 %cmp, label %land.lhs.true, label %if.else19, !dbg !4137

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4138
  %v3d2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %3, i32 0, i32 4, !dbg !4139
  %4 = load %struct.View3D*, %struct.View3D** %v3d2, align 8, !dbg !4139
  %flag = getelementptr inbounds %struct.View3D, %struct.View3D* %4, i32 0, i32 28, !dbg !4140
  %5 = load i16, i16* %flag, align 8, !dbg !4140
  %conv3 = sext i16 %5 to i32, !dbg !4138
  %and = and i32 %conv3, 4096, !dbg !4141
  %tobool = icmp ne i32 %and, 0, !dbg !4141
  br i1 %tobool, label %if.then, label %if.else19, !dbg !4142

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %distance, metadata !4143, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4146, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !4148, metadata !DIExpression()), !dbg !4149
  %6 = load i8, i8* %strict.addr, align 1, !dbg !4150
  %tobool4 = icmp ne i8 %6, 0, !dbg !4150
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4152

if.then5:                                         ; preds = %if.then
  %7 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4153
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4155
  %mval = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %8, i32 0, i32 7, !dbg !4156
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4155
  %9 = load i32, i32* @bm_wireoffs, align 4, !dbg !4157
  %10 = load i8, i8* %strict.addr, align 1, !dbg !4158
  %conv6 = zext i8 %10 to i16, !dbg !4158
  %11 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4159
  %em = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %11, i32 0, i32 6, !dbg !4160
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4160
  %13 = bitcast %struct.BMEditMesh* %12 to i8*, !dbg !4159
  %call = call i32 @view3d_sample_backbuf_rect(%struct.ViewContext* %7, i32* %arraydecay, i32 50, i32 %9, i32 16777215, float* %distance, i16 signext %conv6, i8* %13, i8 (i8*, i32)* @findnearestvert__backbufIndextest), !dbg !4161
  store i32 %call, i32* %index, align 4, !dbg !4162
  br label %if.end, !dbg !4163

if.else:                                          ; preds = %if.then
  %14 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4164
  %15 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4166
  %mval7 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %15, i32 0, i32 7, !dbg !4167
  %arraydecay8 = getelementptr inbounds [2 x i32], [2 x i32]* %mval7, i64 0, i64 0, !dbg !4166
  %16 = load i32, i32* @bm_wireoffs, align 4, !dbg !4168
  %call9 = call i32 @view3d_sample_backbuf_rect(%struct.ViewContext* %14, i32* %arraydecay8, i32 50, i32 %16, i32 16777215, float* %distance, i16 signext 0, i8* null, i8 (i8*, i32)* null), !dbg !4169
  store i32 %call9, i32* %index, align 4, !dbg !4170
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %17 = load i32, i32* %index, align 4, !dbg !4171
  %tobool10 = icmp ne i32 %17, 0, !dbg !4171
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !4171

cond.true:                                        ; preds = %if.end
  %18 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4172
  %em11 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %18, i32 0, i32 6, !dbg !4173
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em11, align 8, !dbg !4173
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !4174
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4174
  %21 = load i32, i32* %index, align 4, !dbg !4175
  %sub = sub i32 %21, 1, !dbg !4176
  %call12 = call %struct.BMVert* @BM_vert_at_index_find(%struct.BMesh* %20, i32 %sub), !dbg !4177
  br label %cond.end, !dbg !4171

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !4171

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMVert* [ %call12, %cond.true ], [ null, %cond.false ], !dbg !4171
  store %struct.BMVert* %cond, %struct.BMVert** %eve, align 8, !dbg !4178
  %22 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4179
  %tobool13 = icmp ne %struct.BMVert* %22, null, !dbg !4179
  br i1 %tobool13, label %land.lhs.true14, label %if.else18, !dbg !4181

land.lhs.true14:                                  ; preds = %cond.end
  %23 = load float, float* %distance, align 4, !dbg !4182
  %24 = load float*, float** %r_dist.addr, align 8, !dbg !4183
  %25 = load float, float* %24, align 4, !dbg !4184
  %cmp15 = fcmp olt float %23, %25, !dbg !4185
  br i1 %cmp15, label %if.then17, label %if.else18, !dbg !4186

if.then17:                                        ; preds = %land.lhs.true14
  %26 = load float, float* %distance, align 4, !dbg !4187
  %27 = load float*, float** %r_dist.addr, align 8, !dbg !4189
  store float %26, float* %27, align 4, !dbg !4190
  %28 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4191
  store %struct.BMVert* %28, %struct.BMVert** %retval, align 8, !dbg !4192
  br label %return, !dbg !4192

if.else18:                                        ; preds = %land.lhs.true14, %cond.end
  store %struct.BMVert* null, %struct.BMVert** %retval, align 8, !dbg !4193
  br label %return, !dbg !4193

if.else19:                                        ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.anon* %data, metadata !4195, metadata !DIExpression()), !dbg !4207
  %29 = load %struct.BMVert*, %struct.BMVert** @EDBM_vert_find_nearest.lastSelected, align 8, !dbg !4208
  %tobool20 = icmp ne %struct.BMVert* %29, null, !dbg !4208
  br i1 %tobool20, label %land.lhs.true21, label %if.end28, !dbg !4210

land.lhs.true21:                                  ; preds = %if.else19
  %30 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4211
  %em22 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %30, i32 0, i32 6, !dbg !4212
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em22, align 8, !dbg !4212
  %bm23 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %31, i32 0, i32 0, !dbg !4213
  %32 = load %struct.BMesh*, %struct.BMesh** %bm23, align 8, !dbg !4213
  %33 = load i32, i32* @EDBM_vert_find_nearest.lastSelectedIndex, align 4, !dbg !4214
  %call24 = call %struct.BMVert* @BM_vert_at_index_find(%struct.BMesh* %32, i32 %33), !dbg !4215
  %34 = load %struct.BMVert*, %struct.BMVert** @EDBM_vert_find_nearest.lastSelected, align 8, !dbg !4216
  %cmp25 = icmp ne %struct.BMVert* %call24, %34, !dbg !4217
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4218

if.then27:                                        ; preds = %land.lhs.true21
  store i32 0, i32* @EDBM_vert_find_nearest.lastSelectedIndex, align 4, !dbg !4219
  store %struct.BMVert* null, %struct.BMVert** @EDBM_vert_find_nearest.lastSelected, align 8, !dbg !4221
  br label %if.end28, !dbg !4222

if.end28:                                         ; preds = %if.then27, %land.lhs.true21, %if.else19
  %35 = load i32, i32* @EDBM_vert_find_nearest.lastSelectedIndex, align 4, !dbg !4223
  %conv29 = sitofp i32 %35 to float, !dbg !4223
  %lastIndex = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 5, !dbg !4224
  store float %conv29, float* %lastIndex, align 8, !dbg !4225
  %36 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4226
  %mval30 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %36, i32 0, i32 7, !dbg !4227
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval30, i64 0, i64 0, !dbg !4226
  %37 = load i32, i32* %arrayidx, align 8, !dbg !4226
  %conv31 = sitofp i32 %37 to float, !dbg !4226
  %mval_fl = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 0, !dbg !4228
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4229
  store float %conv31, float* %arrayidx32, align 8, !dbg !4230
  %38 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4231
  %mval33 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %38, i32 0, i32 7, !dbg !4232
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %mval33, i64 0, i64 1, !dbg !4231
  %39 = load i32, i32* %arrayidx34, align 4, !dbg !4231
  %conv35 = sitofp i32 %39 to float, !dbg !4231
  %mval_fl36 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 0, !dbg !4233
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl36, i64 0, i64 1, !dbg !4234
  store float %conv35, float* %arrayidx37, align 4, !dbg !4235
  %40 = load i8, i8* %sel.addr, align 1, !dbg !4236
  %conv38 = zext i8 %40 to i32, !dbg !4236
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !4236
  %41 = zext i1 %tobool39 to i64, !dbg !4236
  %cond40 = select i1 %tobool39, i32 1, i32 0, !dbg !4236
  %conv41 = sitofp i32 %cond40 to float, !dbg !4236
  %select = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 2, !dbg !4237
  store float %conv41, float* %select, align 4, !dbg !4238
  %42 = load float*, float** %r_dist.addr, align 8, !dbg !4239
  %43 = load float, float* %42, align 4, !dbg !4240
  %dist = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 4, !dbg !4241
  store float %43, float* %dist, align 4, !dbg !4242
  %44 = load i8, i8* %strict.addr, align 1, !dbg !4243
  %conv42 = uitofp i8 %44 to float, !dbg !4243
  %strict43 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 3, !dbg !4244
  store float %conv42, float* %strict43, align 8, !dbg !4245
  %closest = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 7, !dbg !4246
  store %struct.BMVert* null, %struct.BMVert** %closest, align 8, !dbg !4247
  %closestIndex = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 6, !dbg !4248
  store float 0.000000e+00, float* %closestIndex, align 4, !dbg !4249
  %pass = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 1, !dbg !4250
  store float 0.000000e+00, float* %pass, align 8, !dbg !4251
  %45 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4252
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %45, i32 0, i32 2, !dbg !4253
  %46 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4253
  %47 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4254
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %47, i32 0, i32 5, !dbg !4255
  %48 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4255
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %46, %struct.RegionView3D* %48), !dbg !4256
  %49 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4257
  %50 = bitcast %struct.anon* %data to i8*, !dbg !4258
  call void @mesh_foreachScreenVert(%struct.ViewContext* %49, void (i8*, %struct.BMVert*, float*, i32)* @findnearestvert__doClosest, i8* %50, i32 7), !dbg !4259
  %dist44 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 4, !dbg !4260
  %51 = load float, float* %dist44, align 4, !dbg !4260
  %cmp45 = fcmp ogt float %51, 3.000000e+00, !dbg !4262
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !4263

if.then47:                                        ; preds = %if.end28
  %pass48 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 1, !dbg !4264
  store float 1.000000e+00, float* %pass48, align 8, !dbg !4266
  %52 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4267
  %53 = bitcast %struct.anon* %data to i8*, !dbg !4268
  call void @mesh_foreachScreenVert(%struct.ViewContext* %52, void (i8*, %struct.BMVert*, float*, i32)* @findnearestvert__doClosest, i8* %53, i32 7), !dbg !4269
  br label %if.end49, !dbg !4270

if.end49:                                         ; preds = %if.then47, %if.end28
  %dist50 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 4, !dbg !4271
  %54 = load float, float* %dist50, align 4, !dbg !4271
  %55 = load float*, float** %r_dist.addr, align 8, !dbg !4272
  store float %54, float* %55, align 4, !dbg !4273
  %closest51 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 7, !dbg !4274
  %56 = load %struct.BMVert*, %struct.BMVert** %closest51, align 8, !dbg !4274
  store %struct.BMVert* %56, %struct.BMVert** @EDBM_vert_find_nearest.lastSelected, align 8, !dbg !4275
  %closestIndex52 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 6, !dbg !4276
  %57 = load float, float* %closestIndex52, align 4, !dbg !4276
  %conv53 = fptosi float %57 to i32, !dbg !4277
  store i32 %conv53, i32* @EDBM_vert_find_nearest.lastSelectedIndex, align 4, !dbg !4278
  %closest54 = getelementptr inbounds %struct.anon, %struct.anon* %data, i32 0, i32 7, !dbg !4279
  %58 = load %struct.BMVert*, %struct.BMVert** %closest54, align 8, !dbg !4279
  store %struct.BMVert* %58, %struct.BMVert** %retval, align 8, !dbg !4280
  br label %return, !dbg !4280

return:                                           ; preds = %if.end49, %if.else18, %if.then17
  %59 = load %struct.BMVert*, %struct.BMVert** %retval, align 8, !dbg !4281
  ret %struct.BMVert* %59, !dbg !4281
}

declare dso_local i32 @view3d_sample_backbuf_rect(%struct.ViewContext*, i32*, i32, i32, i32, float*, i16 signext, i8*, i8 (i8*, i32)*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @findnearestvert__backbufIndextest(i8* %handle, i32 %index) #0 !dbg !4282 {
entry:
  %handle.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !4285, metadata !DIExpression()), !dbg !4286
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4287, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4289, metadata !DIExpression()), !dbg !4290
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !4291
  %1 = bitcast i8* %0 to %struct.BMEditMesh*, !dbg !4292
  store %struct.BMEditMesh* %1, %struct.BMEditMesh** %em, align 8, !dbg !4290
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !4293, metadata !DIExpression()), !dbg !4294
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4295
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !4296
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4296
  %4 = load i32, i32* %index.addr, align 4, !dbg !4297
  %sub = sub i32 %4, 1, !dbg !4298
  %call = call %struct.BMVert* @BM_vert_at_index_find(%struct.BMesh* %3, i32 %sub), !dbg !4299
  store %struct.BMVert* %call, %struct.BMVert** %eve, align 8, !dbg !4294
  %5 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4300
  %tobool = icmp ne %struct.BMVert* %5, null, !dbg !4300
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4301

land.rhs:                                         ; preds = %entry
  %6 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4302
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %6, i32 0, i32 0, !dbg !4302
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4302
  %conv = zext i8 %call1 to i32, !dbg !4302
  %tobool2 = icmp ne i32 %conv, 0, !dbg !4301
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !4303
  %lnot = xor i1 %7, true, !dbg !4304
  %lnot.ext = zext i1 %lnot to i32, !dbg !4304
  %conv3 = trunc i32 %lnot.ext to i8, !dbg !4304
  ret i8 %conv3, !dbg !4305
}

declare dso_local %struct.BMVert* @BM_vert_at_index_find(%struct.BMesh*, i32) #2

declare dso_local void @ED_view3d_init_mats_rv3d(%struct.Object*, %struct.RegionView3D*) #2

declare dso_local void @mesh_foreachScreenVert(%struct.ViewContext*, void (i8*, %struct.BMVert*, float*, i32)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @findnearestvert__doClosest(i8* %userData, %struct.BMVert* %eve, float* %screen_co, i32 %index) #0 !dbg !4306 {
entry:
  %userData.addr = alloca i8*, align 8
  %eve.addr = alloca %struct.BMVert*, align 8
  %screen_co.addr = alloca float*, align 8
  %index.addr = alloca i32, align 4
  %data = alloca %struct.anon.5*, align 8
  %dist_test = alloca float, align 4
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4311, metadata !DIExpression()), !dbg !4312
  store %struct.BMVert* %eve, %struct.BMVert** %eve.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve.addr, metadata !4313, metadata !DIExpression()), !dbg !4314
  store float* %screen_co, float** %screen_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %screen_co.addr, metadata !4315, metadata !DIExpression()), !dbg !4316
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.declare(metadata %struct.anon.5** %data, metadata !4319, metadata !DIExpression()), !dbg !4331
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !4332
  %1 = bitcast i8* %0 to %struct.anon.5*, !dbg !4332
  store %struct.anon.5* %1, %struct.anon.5** %data, align 8, !dbg !4331
  %2 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4333
  %pass = getelementptr inbounds %struct.anon.5, %struct.anon.5* %2, i32 0, i32 1, !dbg !4335
  %3 = load float, float* %pass, align 8, !dbg !4335
  %cmp = fcmp oeq float %3, 0.000000e+00, !dbg !4336
  br i1 %cmp, label %if.then, label %if.else, !dbg !4337

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !4338
  %conv = sitofp i32 %4 to float, !dbg !4338
  %5 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4341
  %lastIndex = getelementptr inbounds %struct.anon.5, %struct.anon.5* %5, i32 0, i32 5, !dbg !4342
  %6 = load float, float* %lastIndex, align 8, !dbg !4342
  %cmp1 = fcmp ole float %conv, %6, !dbg !4343
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !4344

if.then3:                                         ; preds = %if.then
  br label %if.end33, !dbg !4345

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !4346

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %index.addr, align 4, !dbg !4347
  %conv4 = sitofp i32 %7 to float, !dbg !4347
  %8 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4350
  %lastIndex5 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %8, i32 0, i32 5, !dbg !4351
  %9 = load float, float* %lastIndex5, align 8, !dbg !4351
  %cmp6 = fcmp ogt float %conv4, %9, !dbg !4352
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4353

if.then8:                                         ; preds = %if.else
  br label %if.end33, !dbg !4354

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %10 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4355
  %dist = getelementptr inbounds %struct.anon.5, %struct.anon.5* %10, i32 0, i32 4, !dbg !4357
  %11 = load float, float* %dist, align 4, !dbg !4357
  %cmp11 = fcmp ogt float %11, 3.000000e+00, !dbg !4358
  br i1 %cmp11, label %if.then13, label %if.end33, !dbg !4359

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata float* %dist_test, metadata !4360, metadata !DIExpression()), !dbg !4362
  %12 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4363
  %mval_fl = getelementptr inbounds %struct.anon.5, %struct.anon.5* %12, i32 0, i32 0, !dbg !4364
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4363
  %13 = load float*, float** %screen_co.addr, align 8, !dbg !4365
  %call = call float @len_manhattan_v2v2(float* %arraydecay, float* %13), !dbg !4366
  store float %call, float* %dist_test, align 4, !dbg !4362
  %14 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !4367
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 0, !dbg !4367
  %call14 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4367
  %conv15 = zext i8 %call14 to i32, !dbg !4367
  %conv16 = sitofp i32 %conv15 to float, !dbg !4367
  %15 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4369
  %select = getelementptr inbounds %struct.anon.5, %struct.anon.5* %15, i32 0, i32 2, !dbg !4370
  %16 = load float, float* %select, align 4, !dbg !4370
  %cmp17 = fcmp oeq float %conv16, %16, !dbg !4371
  br i1 %cmp17, label %if.then19, label %if.end25, !dbg !4372

if.then19:                                        ; preds = %if.then13
  %17 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4373
  %strict = getelementptr inbounds %struct.anon.5, %struct.anon.5* %17, i32 0, i32 3, !dbg !4376
  %18 = load float, float* %strict, align 8, !dbg !4376
  %cmp20 = fcmp oeq float %18, 1.000000e+00, !dbg !4377
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !4378

if.then22:                                        ; preds = %if.then19
  br label %if.end33, !dbg !4379

if.else23:                                        ; preds = %if.then19
  %19 = load float, float* %dist_test, align 4, !dbg !4381
  %add = fadd float %19, 5.000000e+00, !dbg !4381
  store float %add, float* %dist_test, align 4, !dbg !4381
  br label %if.end24

if.end24:                                         ; preds = %if.else23
  br label %if.end25, !dbg !4383

if.end25:                                         ; preds = %if.end24, %if.then13
  %20 = load float, float* %dist_test, align 4, !dbg !4384
  %21 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4386
  %dist26 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %21, i32 0, i32 4, !dbg !4387
  %22 = load float, float* %dist26, align 4, !dbg !4387
  %cmp27 = fcmp olt float %20, %22, !dbg !4388
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !4389

if.then29:                                        ; preds = %if.end25
  %23 = load float, float* %dist_test, align 4, !dbg !4390
  %24 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4392
  %dist30 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %24, i32 0, i32 4, !dbg !4393
  store float %23, float* %dist30, align 4, !dbg !4394
  %25 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !4395
  %26 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4396
  %closest = getelementptr inbounds %struct.anon.5, %struct.anon.5* %26, i32 0, i32 7, !dbg !4397
  store %struct.BMVert* %25, %struct.BMVert** %closest, align 8, !dbg !4398
  %27 = load i32, i32* %index.addr, align 4, !dbg !4399
  %conv31 = sitofp i32 %27 to float, !dbg !4399
  %28 = load %struct.anon.5*, %struct.anon.5** %data, align 8, !dbg !4400
  %closestIndex = getelementptr inbounds %struct.anon.5, %struct.anon.5* %28, i32 0, i32 6, !dbg !4401
  store float %conv31, float* %closestIndex, align 4, !dbg !4402
  br label %if.end32, !dbg !4403

if.end32:                                         ; preds = %if.then29, %if.end25
  br label %if.end33, !dbg !4404

if.end33:                                         ; preds = %if.then3, %if.then8, %if.then22, %if.end32, %if.end10
  ret void, !dbg !4405
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BMEdge* @EDBM_edge_find_nearest(%struct.ViewContext* %vc, float* %r_dist) #0 !dbg !4406 {
entry:
  %retval = alloca %struct.BMEdge*, align 8
  %vc.addr = alloca %struct.ViewContext*, align 8
  %r_dist.addr = alloca float*, align 8
  %distance = alloca float, align 4
  %index = alloca i32, align 4
  %eed = alloca %struct.BMEdge*, align 8
  %data = alloca %struct.anon.1, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !4409, metadata !DIExpression()), !dbg !4410
  store float* %r_dist, float** %r_dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_dist.addr, metadata !4411, metadata !DIExpression()), !dbg !4412
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4413
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 4, !dbg !4415
  %1 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4415
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %1, i32 0, i32 24, !dbg !4416
  %2 = load i16, i16* %drawtype, align 8, !dbg !4416
  %conv = sext i16 %2 to i32, !dbg !4413
  %cmp = icmp sgt i32 %conv, 2, !dbg !4417
  br i1 %cmp, label %land.lhs.true, label %if.else11, !dbg !4418

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4419
  %v3d2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %3, i32 0, i32 4, !dbg !4420
  %4 = load %struct.View3D*, %struct.View3D** %v3d2, align 8, !dbg !4420
  %flag = getelementptr inbounds %struct.View3D, %struct.View3D* %4, i32 0, i32 28, !dbg !4421
  %5 = load i16, i16* %flag, align 8, !dbg !4421
  %conv3 = sext i16 %5 to i32, !dbg !4419
  %and = and i32 %conv3, 4096, !dbg !4422
  %tobool = icmp ne i32 %and, 0, !dbg !4422
  br i1 %tobool, label %if.then, label %if.else11, !dbg !4423

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %distance, metadata !4424, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4427, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !4429, metadata !DIExpression()), !dbg !4430
  %6 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4431
  call void @view3d_validate_backbuf(%struct.ViewContext* %6), !dbg !4432
  %7 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4433
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4434
  %mval = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %8, i32 0, i32 7, !dbg !4435
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4434
  %9 = load i32, i32* @bm_solidoffs, align 4, !dbg !4436
  %10 = load i32, i32* @bm_wireoffs, align 4, !dbg !4437
  %call = call i32 @view3d_sample_backbuf_rect(%struct.ViewContext* %7, i32* %arraydecay, i32 50, i32 %9, i32 %10, float* %distance, i16 signext 0, i8* null, i8 (i8*, i32)* null), !dbg !4438
  store i32 %call, i32* %index, align 4, !dbg !4439
  %11 = load i32, i32* %index, align 4, !dbg !4440
  %tobool4 = icmp ne i32 %11, 0, !dbg !4440
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4440

cond.true:                                        ; preds = %if.then
  %12 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4441
  %em = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %12, i32 0, i32 6, !dbg !4442
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4442
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !4443
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4443
  %15 = load i32, i32* %index, align 4, !dbg !4444
  %sub = sub i32 %15, 1, !dbg !4445
  %call5 = call %struct.BMEdge* @BM_edge_at_index_find(%struct.BMesh* %14, i32 %sub), !dbg !4446
  br label %cond.end, !dbg !4440

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4440

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMEdge* [ %call5, %cond.true ], [ null, %cond.false ], !dbg !4440
  store %struct.BMEdge* %cond, %struct.BMEdge** %eed, align 8, !dbg !4447
  %16 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4448
  %tobool6 = icmp ne %struct.BMEdge* %16, null, !dbg !4448
  br i1 %tobool6, label %land.lhs.true7, label %if.else, !dbg !4450

land.lhs.true7:                                   ; preds = %cond.end
  %17 = load float, float* %distance, align 4, !dbg !4451
  %18 = load float*, float** %r_dist.addr, align 8, !dbg !4452
  %19 = load float, float* %18, align 4, !dbg !4453
  %cmp8 = fcmp olt float %17, %19, !dbg !4454
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !4455

if.then10:                                        ; preds = %land.lhs.true7
  %20 = load float, float* %distance, align 4, !dbg !4456
  %21 = load float*, float** %r_dist.addr, align 8, !dbg !4458
  store float %20, float* %21, align 4, !dbg !4459
  %22 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4460
  store %struct.BMEdge* %22, %struct.BMEdge** %retval, align 8, !dbg !4461
  br label %return, !dbg !4461

if.else:                                          ; preds = %land.lhs.true7, %cond.end
  store %struct.BMEdge* null, %struct.BMEdge** %retval, align 8, !dbg !4462
  br label %return, !dbg !4462

if.else11:                                        ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.anon.1* %data, metadata !4464, metadata !DIExpression()), !dbg !4472
  %vc12 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 0, !dbg !4473
  %23 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4474
  %24 = bitcast %struct.ViewContext* %vc12 to i8*, !dbg !4475
  %25 = bitcast %struct.ViewContext* %23 to i8*, !dbg !4475
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 64, i1 false), !dbg !4475
  %26 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4476
  %mval13 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %26, i32 0, i32 7, !dbg !4477
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval13, i64 0, i64 0, !dbg !4476
  %27 = load i32, i32* %arrayidx, align 8, !dbg !4476
  %conv14 = sitofp i32 %27 to float, !dbg !4476
  %mval_fl = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 1, !dbg !4478
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4479
  store float %conv14, float* %arrayidx15, align 8, !dbg !4480
  %28 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4481
  %mval16 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %28, i32 0, i32 7, !dbg !4482
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %mval16, i64 0, i64 1, !dbg !4481
  %29 = load i32, i32* %arrayidx17, align 4, !dbg !4481
  %conv18 = sitofp i32 %29 to float, !dbg !4481
  %mval_fl19 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 1, !dbg !4483
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl19, i64 0, i64 1, !dbg !4484
  store float %conv18, float* %arrayidx20, align 4, !dbg !4485
  %30 = load float*, float** %r_dist.addr, align 8, !dbg !4486
  %31 = load float, float* %30, align 4, !dbg !4487
  %dist = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 2, !dbg !4488
  store float %31, float* %dist, align 8, !dbg !4489
  %closest = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 3, !dbg !4490
  store %struct.BMEdge* null, %struct.BMEdge** %closest, align 8, !dbg !4491
  %32 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4492
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %32, i32 0, i32 2, !dbg !4493
  %33 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4493
  %34 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4494
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %34, i32 0, i32 5, !dbg !4495
  %35 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4495
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %33, %struct.RegionView3D* %35), !dbg !4496
  %36 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4497
  %37 = bitcast %struct.anon.1* %data to i8*, !dbg !4498
  call void @mesh_foreachScreenEdge(%struct.ViewContext* %36, void (i8*, %struct.BMEdge*, float*, float*, i32)* @findnearestedge__doClosest, i8* %37, i32 2), !dbg !4499
  %dist21 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 2, !dbg !4500
  %38 = load float, float* %dist21, align 8, !dbg !4500
  %39 = load float*, float** %r_dist.addr, align 8, !dbg !4501
  store float %38, float* %39, align 4, !dbg !4502
  %closest22 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %data, i32 0, i32 3, !dbg !4503
  %40 = load %struct.BMEdge*, %struct.BMEdge** %closest22, align 8, !dbg !4503
  store %struct.BMEdge* %40, %struct.BMEdge** %retval, align 8, !dbg !4504
  br label %return, !dbg !4504

return:                                           ; preds = %if.else11, %if.else, %if.then10
  %41 = load %struct.BMEdge*, %struct.BMEdge** %retval, align 8, !dbg !4505
  ret %struct.BMEdge* %41, !dbg !4505
}

declare dso_local void @view3d_validate_backbuf(%struct.ViewContext*) #2

declare dso_local %struct.BMEdge* @BM_edge_at_index_find(%struct.BMesh*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @mesh_foreachScreenEdge(%struct.ViewContext*, void (i8*, %struct.BMEdge*, float*, float*, i32)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @findnearestedge__doClosest(i8* %userData, %struct.BMEdge* %eed, float* %screen_co_a, float* %screen_co_b, i32 %UNUSED_index) #0 !dbg !4506 {
entry:
  %userData.addr = alloca i8*, align 8
  %eed.addr = alloca %struct.BMEdge*, align 8
  %screen_co_a.addr = alloca float*, align 8
  %screen_co_b.addr = alloca float*, align 8
  %UNUSED_index.addr = alloca i32, align 4
  %data = alloca %struct.anon.6*, align 8
  %distance = alloca i32, align 4
  %lambda = alloca float, align 4
  %vec = alloca [3 x float], align 4
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4509, metadata !DIExpression()), !dbg !4510
  store %struct.BMEdge* %eed, %struct.BMEdge** %eed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  store float* %screen_co_a, float** %screen_co_a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %screen_co_a.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  store float* %screen_co_b, float** %screen_co_b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %screen_co_b.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  store i32 %UNUSED_index, i32* %UNUSED_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_index.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.declare(metadata %struct.anon.6** %data, metadata !4519, metadata !DIExpression()), !dbg !4527
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !4528
  %1 = bitcast i8* %0 to %struct.anon.6*, !dbg !4528
  store %struct.anon.6* %1, %struct.anon.6** %data, align 8, !dbg !4527
  call void @llvm.dbg.declare(metadata i32* %distance, metadata !4529, metadata !DIExpression()), !dbg !4530
  %2 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4531
  %mval_fl = getelementptr inbounds %struct.anon.6, %struct.anon.6* %2, i32 0, i32 1, !dbg !4532
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4531
  %3 = load float*, float** %screen_co_a.addr, align 8, !dbg !4533
  %4 = load float*, float** %screen_co_b.addr, align 8, !dbg !4534
  %call = call float @dist_to_line_segment_v2(float* %arraydecay, float* %3, float* %4), !dbg !4535
  %conv = fptosi float %call to i32, !dbg !4535
  store i32 %conv, i32* %distance, align 4, !dbg !4536
  %5 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4537
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 0, !dbg !4537
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4537
  %tobool = icmp ne i8 %call1, 0, !dbg !4537
  br i1 %tobool, label %if.then, label %if.end, !dbg !4539

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %distance, align 4, !dbg !4540
  %add = add nsw i32 %6, 5, !dbg !4540
  store i32 %add, i32* %distance, align 4, !dbg !4540
  br label %if.end, !dbg !4542

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %distance, align 4, !dbg !4543
  %conv2 = sitofp i32 %7 to float, !dbg !4543
  %8 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4545
  %dist = getelementptr inbounds %struct.anon.6, %struct.anon.6* %8, i32 0, i32 2, !dbg !4546
  %9 = load float, float* %dist, align 8, !dbg !4546
  %cmp = fcmp olt float %conv2, %9, !dbg !4547
  br i1 %cmp, label %if.then4, label %if.end59, !dbg !4548

if.then4:                                         ; preds = %if.end
  %10 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4549
  %vc = getelementptr inbounds %struct.anon.6, %struct.anon.6* %10, i32 0, i32 0, !dbg !4552
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !4553
  %11 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4553
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %11, i32 0, i32 32, !dbg !4554
  %12 = load i16, i16* %rflag, align 2, !dbg !4554
  %conv5 = sext i16 %12 to i32, !dbg !4549
  %and = and i32 %conv5, 4, !dbg !4555
  %tobool6 = icmp ne i32 %and, 0, !dbg !4555
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !4556

if.then7:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !4557, metadata !DIExpression()), !dbg !4559
  %13 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4560
  %mval_fl8 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %13, i32 0, i32 1, !dbg !4561
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl8, i64 0, i64 0, !dbg !4560
  %14 = load float*, float** %screen_co_a.addr, align 8, !dbg !4562
  %15 = load float*, float** %screen_co_b.addr, align 8, !dbg !4563
  %call10 = call float @line_point_factor_v2(float* %arraydecay9, float* %14, float* %15), !dbg !4564
  store float %call10, float* %lambda, align 4, !dbg !4559
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !4565, metadata !DIExpression()), !dbg !4566
  %16 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4567
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %16, i32 0, i32 2, !dbg !4568
  %17 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !4568
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 2, !dbg !4569
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4567
  %18 = load float, float* %arrayidx, align 8, !dbg !4567
  %19 = load float, float* %lambda, align 4, !dbg !4570
  %20 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4571
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %20, i32 0, i32 3, !dbg !4572
  %21 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !4572
  %co11 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 2, !dbg !4573
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !4571
  %22 = load float, float* %arrayidx12, align 8, !dbg !4571
  %23 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4574
  %v113 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %23, i32 0, i32 2, !dbg !4575
  %24 = load %struct.BMVert*, %struct.BMVert** %v113, align 8, !dbg !4575
  %co14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %24, i32 0, i32 2, !dbg !4576
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !4574
  %25 = load float, float* %arrayidx15, align 8, !dbg !4574
  %sub = fsub float %22, %25, !dbg !4577
  %mul = fmul float %19, %sub, !dbg !4578
  %add16 = fadd float %18, %mul, !dbg !4579
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4580
  store float %add16, float* %arrayidx17, align 4, !dbg !4581
  %26 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4582
  %v118 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %26, i32 0, i32 2, !dbg !4583
  %27 = load %struct.BMVert*, %struct.BMVert** %v118, align 8, !dbg !4583
  %co19 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %27, i32 0, i32 2, !dbg !4584
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 1, !dbg !4582
  %28 = load float, float* %arrayidx20, align 4, !dbg !4582
  %29 = load float, float* %lambda, align 4, !dbg !4585
  %30 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4586
  %v221 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %30, i32 0, i32 3, !dbg !4587
  %31 = load %struct.BMVert*, %struct.BMVert** %v221, align 8, !dbg !4587
  %co22 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 2, !dbg !4588
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 1, !dbg !4586
  %32 = load float, float* %arrayidx23, align 4, !dbg !4586
  %33 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4589
  %v124 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %33, i32 0, i32 2, !dbg !4590
  %34 = load %struct.BMVert*, %struct.BMVert** %v124, align 8, !dbg !4590
  %co25 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %34, i32 0, i32 2, !dbg !4591
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %co25, i64 0, i64 1, !dbg !4589
  %35 = load float, float* %arrayidx26, align 4, !dbg !4589
  %sub27 = fsub float %32, %35, !dbg !4592
  %mul28 = fmul float %29, %sub27, !dbg !4593
  %add29 = fadd float %28, %mul28, !dbg !4594
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !4595
  store float %add29, float* %arrayidx30, align 4, !dbg !4596
  %36 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4597
  %v131 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %36, i32 0, i32 2, !dbg !4598
  %37 = load %struct.BMVert*, %struct.BMVert** %v131, align 8, !dbg !4598
  %co32 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %37, i32 0, i32 2, !dbg !4599
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 2, !dbg !4597
  %38 = load float, float* %arrayidx33, align 8, !dbg !4597
  %39 = load float, float* %lambda, align 4, !dbg !4600
  %40 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4601
  %v234 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %40, i32 0, i32 3, !dbg !4602
  %41 = load %struct.BMVert*, %struct.BMVert** %v234, align 8, !dbg !4602
  %co35 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %41, i32 0, i32 2, !dbg !4603
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 2, !dbg !4601
  %42 = load float, float* %arrayidx36, align 8, !dbg !4601
  %43 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4604
  %v137 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %43, i32 0, i32 2, !dbg !4605
  %44 = load %struct.BMVert*, %struct.BMVert** %v137, align 8, !dbg !4605
  %co38 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %44, i32 0, i32 2, !dbg !4606
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 2, !dbg !4604
  %45 = load float, float* %arrayidx39, align 8, !dbg !4604
  %sub40 = fsub float %42, %45, !dbg !4607
  %mul41 = fmul float %39, %sub40, !dbg !4608
  %add42 = fadd float %38, %mul41, !dbg !4609
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !4610
  store float %add42, float* %arrayidx43, align 4, !dbg !4611
  %46 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4612
  %vc44 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %46, i32 0, i32 0, !dbg !4614
  %rv3d45 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc44, i32 0, i32 5, !dbg !4615
  %47 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d45, align 8, !dbg !4615
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4616
  %call47 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %47, float* %arraydecay46, i8 zeroext 1), !dbg !4617
  %conv48 = zext i8 %call47 to i32, !dbg !4617
  %cmp49 = icmp eq i32 %conv48, 0, !dbg !4618
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !4619

if.then51:                                        ; preds = %if.then7
  %48 = load i32, i32* %distance, align 4, !dbg !4620
  %conv52 = sitofp i32 %48 to float, !dbg !4620
  %49 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4622
  %dist53 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %49, i32 0, i32 2, !dbg !4623
  store float %conv52, float* %dist53, align 8, !dbg !4624
  %50 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4625
  %51 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4626
  %closest = getelementptr inbounds %struct.anon.6, %struct.anon.6* %51, i32 0, i32 3, !dbg !4627
  store %struct.BMEdge* %50, %struct.BMEdge** %closest, align 8, !dbg !4628
  br label %if.end54, !dbg !4629

if.end54:                                         ; preds = %if.then51, %if.then7
  br label %if.end58, !dbg !4630

if.else:                                          ; preds = %if.then4
  %52 = load i32, i32* %distance, align 4, !dbg !4631
  %conv55 = sitofp i32 %52 to float, !dbg !4631
  %53 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4633
  %dist56 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %53, i32 0, i32 2, !dbg !4634
  store float %conv55, float* %dist56, align 8, !dbg !4635
  %54 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !4636
  %55 = load %struct.anon.6*, %struct.anon.6** %data, align 8, !dbg !4637
  %closest57 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %55, i32 0, i32 3, !dbg !4638
  store %struct.BMEdge* %54, %struct.BMEdge** %closest57, align 8, !dbg !4639
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.end54
  br label %if.end59, !dbg !4640

if.end59:                                         ; preds = %if.end58, %if.end
  ret void, !dbg !4641
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BMFace* @EDBM_face_find_nearest(%struct.ViewContext* %vc, float* %r_dist) #0 !dbg !3063 {
entry:
  %retval = alloca %struct.BMFace*, align 8
  %vc.addr = alloca %struct.ViewContext*, align 8
  %r_dist.addr = alloca float*, align 8
  %index = alloca i32, align 4
  %efa = alloca %struct.BMFace*, align 8
  %data = alloca %struct.anon.2, align 8
  %data29 = alloca %struct.anon.3, align 8
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  store float* %r_dist, float** %r_dist.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_dist.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4646
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 4, !dbg !4648
  %1 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4648
  %drawtype = getelementptr inbounds %struct.View3D, %struct.View3D* %1, i32 0, i32 24, !dbg !4649
  %2 = load i16, i16* %drawtype, align 8, !dbg !4649
  %conv = sext i16 %2 to i32, !dbg !4646
  %cmp = icmp sgt i32 %conv, 2, !dbg !4650
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4651

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4652
  %v3d2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %3, i32 0, i32 4, !dbg !4653
  %4 = load %struct.View3D*, %struct.View3D** %v3d2, align 8, !dbg !4653
  %flag = getelementptr inbounds %struct.View3D, %struct.View3D* %4, i32 0, i32 28, !dbg !4654
  %5 = load i16, i16* %flag, align 8, !dbg !4654
  %conv3 = sext i16 %5 to i32, !dbg !4652
  %and = and i32 %conv3, 4096, !dbg !4655
  %tobool = icmp ne i32 %and, 0, !dbg !4655
  br i1 %tobool, label %if.then, label %if.else, !dbg !4656

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4657, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !4660, metadata !DIExpression()), !dbg !4661
  %6 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4662
  call void @view3d_validate_backbuf(%struct.ViewContext* %6), !dbg !4663
  %7 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4664
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4665
  %mval = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %8, i32 0, i32 7, !dbg !4666
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !4665
  %9 = load i32, i32* %arrayidx, align 8, !dbg !4665
  %10 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4667
  %mval4 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %10, i32 0, i32 7, !dbg !4668
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %mval4, i64 0, i64 1, !dbg !4667
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !4667
  %call = call i32 @view3d_sample_backbuf(%struct.ViewContext* %7, i32 %9, i32 %11), !dbg !4669
  store i32 %call, i32* %index, align 4, !dbg !4670
  %12 = load i32, i32* %index, align 4, !dbg !4671
  %tobool6 = icmp ne i32 %12, 0, !dbg !4671
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !4671

cond.true:                                        ; preds = %if.then
  %13 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4672
  %em = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %13, i32 0, i32 6, !dbg !4673
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4673
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !4674
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4674
  %16 = load i32, i32* %index, align 4, !dbg !4675
  %sub = sub i32 %16, 1, !dbg !4676
  %call7 = call %struct.BMFace* @BM_face_at_index_find(%struct.BMesh* %15, i32 %sub), !dbg !4677
  br label %cond.end, !dbg !4671

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMFace* [ %call7, %cond.true ], [ null, %cond.false ], !dbg !4671
  store %struct.BMFace* %cond, %struct.BMFace** %efa, align 8, !dbg !4678
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4679
  %tobool8 = icmp ne %struct.BMFace* %17, null, !dbg !4679
  br i1 %tobool8, label %if.then9, label %if.end28, !dbg !4681

if.then9:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.anon.2* %data, metadata !4682, metadata !DIExpression()), !dbg !4689
  %18 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4690
  %mval10 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %18, i32 0, i32 7, !dbg !4691
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %mval10, i64 0, i64 0, !dbg !4690
  %19 = load i32, i32* %arrayidx11, align 8, !dbg !4690
  %conv12 = sitofp i32 %19 to float, !dbg !4690
  %mval_fl = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data, i32 0, i32 0, !dbg !4692
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4693
  store float %conv12, float* %arrayidx13, align 8, !dbg !4694
  %20 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4695
  %mval14 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %20, i32 0, i32 7, !dbg !4696
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %mval14, i64 0, i64 1, !dbg !4695
  %21 = load i32, i32* %arrayidx15, align 4, !dbg !4695
  %conv16 = sitofp i32 %21 to float, !dbg !4695
  %mval_fl17 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data, i32 0, i32 0, !dbg !4697
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl17, i64 0, i64 1, !dbg !4698
  store float %conv16, float* %arrayidx18, align 4, !dbg !4699
  %dist = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data, i32 0, i32 1, !dbg !4700
  store float 0x47EFFFFFE0000000, float* %dist, align 8, !dbg !4701
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4702
  %toFace = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data, i32 0, i32 2, !dbg !4703
  store %struct.BMFace* %22, %struct.BMFace** %toFace, align 8, !dbg !4704
  %23 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4705
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %23, i32 0, i32 2, !dbg !4706
  %24 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4706
  %25 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4707
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %25, i32 0, i32 5, !dbg !4708
  %26 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4708
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %24, %struct.RegionView3D* %26), !dbg !4709
  %27 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4710
  %28 = bitcast %struct.anon.2* %data to i8*, !dbg !4711
  call void @mesh_foreachScreenFace(%struct.ViewContext* %27, void (i8*, %struct.BMFace*, float*, i32)* @findnearestface__getDistance, i8* %28, i32 7), !dbg !4712
  %29 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4713
  %em19 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %29, i32 0, i32 6, !dbg !4715
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em19, align 8, !dbg !4715
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 12, !dbg !4716
  %31 = load i16, i16* %selectmode, align 4, !dbg !4716
  %conv20 = sext i16 %31 to i32, !dbg !4713
  %cmp21 = icmp eq i32 %conv20, 4, !dbg !4717
  br i1 %cmp21, label %if.then26, label %lor.lhs.false, !dbg !4718

lor.lhs.false:                                    ; preds = %if.then9
  %dist23 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data, i32 0, i32 1, !dbg !4719
  %32 = load float, float* %dist23, align 8, !dbg !4719
  %33 = load float*, float** %r_dist.addr, align 8, !dbg !4720
  %34 = load float, float* %33, align 4, !dbg !4721
  %cmp24 = fcmp olt float %32, %34, !dbg !4722
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !4723

if.then26:                                        ; preds = %lor.lhs.false, %if.then9
  %dist27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %data, i32 0, i32 1, !dbg !4724
  %35 = load float, float* %dist27, align 8, !dbg !4724
  %36 = load float*, float** %r_dist.addr, align 8, !dbg !4726
  store float %35, float* %36, align 4, !dbg !4727
  %37 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4728
  store %struct.BMFace* %37, %struct.BMFace** %retval, align 8, !dbg !4729
  br label %return, !dbg !4729

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end28, !dbg !4730

if.end28:                                         ; preds = %if.end, %cond.end
  store %struct.BMFace* null, %struct.BMFace** %retval, align 8, !dbg !4731
  br label %return, !dbg !4731

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.anon.3* %data29, metadata !4732, metadata !DIExpression()), !dbg !4742
  %38 = load %struct.BMFace*, %struct.BMFace** @EDBM_face_find_nearest.lastSelected, align 8, !dbg !4743
  %tobool30 = icmp ne %struct.BMFace* %38, null, !dbg !4743
  br i1 %tobool30, label %land.lhs.true31, label %if.end38, !dbg !4745

land.lhs.true31:                                  ; preds = %if.else
  %39 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4746
  %em32 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %39, i32 0, i32 6, !dbg !4747
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em32, align 8, !dbg !4747
  %bm33 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %40, i32 0, i32 0, !dbg !4748
  %41 = load %struct.BMesh*, %struct.BMesh** %bm33, align 8, !dbg !4748
  %42 = load i32, i32* @EDBM_face_find_nearest.lastSelectedIndex, align 4, !dbg !4749
  %call34 = call %struct.BMFace* @BM_face_at_index_find(%struct.BMesh* %41, i32 %42), !dbg !4750
  %43 = load %struct.BMFace*, %struct.BMFace** @EDBM_face_find_nearest.lastSelected, align 8, !dbg !4751
  %cmp35 = icmp ne %struct.BMFace* %call34, %43, !dbg !4752
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !4753

if.then37:                                        ; preds = %land.lhs.true31
  store i32 0, i32* @EDBM_face_find_nearest.lastSelectedIndex, align 4, !dbg !4754
  store %struct.BMFace* null, %struct.BMFace** @EDBM_face_find_nearest.lastSelected, align 8, !dbg !4756
  br label %if.end38, !dbg !4757

if.end38:                                         ; preds = %if.then37, %land.lhs.true31, %if.else
  %44 = load i32, i32* @EDBM_face_find_nearest.lastSelectedIndex, align 4, !dbg !4758
  %conv39 = sitofp i32 %44 to float, !dbg !4758
  %lastIndex = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 3, !dbg !4759
  store float %conv39, float* %lastIndex, align 8, !dbg !4760
  %45 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4761
  %mval40 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %45, i32 0, i32 7, !dbg !4762
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %mval40, i64 0, i64 0, !dbg !4761
  %46 = load i32, i32* %arrayidx41, align 8, !dbg !4761
  %conv42 = sitofp i32 %46 to float, !dbg !4761
  %mval_fl43 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 0, !dbg !4763
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl43, i64 0, i64 0, !dbg !4764
  store float %conv42, float* %arrayidx44, align 8, !dbg !4765
  %47 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4766
  %mval45 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %47, i32 0, i32 7, !dbg !4767
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %mval45, i64 0, i64 1, !dbg !4766
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !4766
  %conv47 = sitofp i32 %48 to float, !dbg !4766
  %mval_fl48 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 0, !dbg !4768
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %mval_fl48, i64 0, i64 1, !dbg !4769
  store float %conv47, float* %arrayidx49, align 4, !dbg !4770
  %49 = load float*, float** %r_dist.addr, align 8, !dbg !4771
  %50 = load float, float* %49, align 4, !dbg !4772
  %dist50 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 2, !dbg !4773
  store float %50, float* %dist50, align 4, !dbg !4774
  %closest = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 5, !dbg !4775
  store %struct.BMFace* null, %struct.BMFace** %closest, align 8, !dbg !4776
  %closestIndex = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 4, !dbg !4777
  store float 0.000000e+00, float* %closestIndex, align 4, !dbg !4778
  %pass = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 1, !dbg !4779
  store float 0.000000e+00, float* %pass, align 8, !dbg !4780
  %51 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4781
  %obedit51 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %51, i32 0, i32 2, !dbg !4782
  %52 = load %struct.Object*, %struct.Object** %obedit51, align 8, !dbg !4782
  %53 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4783
  %rv3d52 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %53, i32 0, i32 5, !dbg !4784
  %54 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d52, align 8, !dbg !4784
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %52, %struct.RegionView3D* %54), !dbg !4785
  %55 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4786
  %56 = bitcast %struct.anon.3* %data29 to i8*, !dbg !4787
  call void @mesh_foreachScreenFace(%struct.ViewContext* %55, void (i8*, %struct.BMFace*, float*, i32)* @findnearestface__doClosest, i8* %56, i32 7), !dbg !4788
  %dist53 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 2, !dbg !4789
  %57 = load float, float* %dist53, align 4, !dbg !4789
  %cmp54 = fcmp ogt float %57, 3.000000e+00, !dbg !4791
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !4792

if.then56:                                        ; preds = %if.end38
  %pass57 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 1, !dbg !4793
  store float 1.000000e+00, float* %pass57, align 8, !dbg !4795
  %58 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !4796
  %59 = bitcast %struct.anon.3* %data29 to i8*, !dbg !4797
  call void @mesh_foreachScreenFace(%struct.ViewContext* %58, void (i8*, %struct.BMFace*, float*, i32)* @findnearestface__doClosest, i8* %59, i32 7), !dbg !4798
  br label %if.end58, !dbg !4799

if.end58:                                         ; preds = %if.then56, %if.end38
  %dist59 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 2, !dbg !4800
  %60 = load float, float* %dist59, align 4, !dbg !4800
  %61 = load float*, float** %r_dist.addr, align 8, !dbg !4801
  store float %60, float* %61, align 4, !dbg !4802
  %closest60 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 5, !dbg !4803
  %62 = load %struct.BMFace*, %struct.BMFace** %closest60, align 8, !dbg !4803
  store %struct.BMFace* %62, %struct.BMFace** @EDBM_face_find_nearest.lastSelected, align 8, !dbg !4804
  %closestIndex61 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 4, !dbg !4805
  %63 = load float, float* %closestIndex61, align 4, !dbg !4805
  %conv62 = fptosi float %63 to i32, !dbg !4806
  store i32 %conv62, i32* @EDBM_face_find_nearest.lastSelectedIndex, align 4, !dbg !4807
  %closest63 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %data29, i32 0, i32 5, !dbg !4808
  %64 = load %struct.BMFace*, %struct.BMFace** %closest63, align 8, !dbg !4808
  store %struct.BMFace* %64, %struct.BMFace** %retval, align 8, !dbg !4809
  br label %return, !dbg !4809

return:                                           ; preds = %if.end58, %if.end28, %if.then26
  %65 = load %struct.BMFace*, %struct.BMFace** %retval, align 8, !dbg !4810
  ret %struct.BMFace* %65, !dbg !4810
}

declare dso_local i32 @view3d_sample_backbuf(%struct.ViewContext*, i32, i32) #2

declare dso_local %struct.BMFace* @BM_face_at_index_find(%struct.BMesh*, i32) #2

declare dso_local void @mesh_foreachScreenFace(%struct.ViewContext*, void (i8*, %struct.BMFace*, float*, i32)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @findnearestface__getDistance(i8* %userData, %struct.BMFace* %efa, float* %screen_co, i32 %UNUSED_index) #0 !dbg !4811 {
entry:
  %userData.addr = alloca i8*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %screen_co.addr = alloca float*, align 8
  %UNUSED_index.addr = alloca i32, align 4
  %data = alloca %struct.anon.7*, align 8
  %dist_test = alloca float, align 4
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4814, metadata !DIExpression()), !dbg !4815
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  store float* %screen_co, float** %screen_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %screen_co.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  store i32 %UNUSED_index, i32* %UNUSED_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_index.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.declare(metadata %struct.anon.7** %data, metadata !4822, metadata !DIExpression()), !dbg !4829
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !4830
  %1 = bitcast i8* %0 to %struct.anon.7*, !dbg !4830
  store %struct.anon.7* %1, %struct.anon.7** %data, align 8, !dbg !4829
  %2 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4831
  %3 = load %struct.anon.7*, %struct.anon.7** %data, align 8, !dbg !4833
  %toFace = getelementptr inbounds %struct.anon.7, %struct.anon.7* %3, i32 0, i32 2, !dbg !4834
  %4 = load %struct.BMFace*, %struct.BMFace** %toFace, align 8, !dbg !4834
  %cmp = icmp eq %struct.BMFace* %2, %4, !dbg !4835
  br i1 %cmp, label %if.then, label %if.end4, !dbg !4836

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %dist_test, metadata !4837, metadata !DIExpression()), !dbg !4839
  %5 = load %struct.anon.7*, %struct.anon.7** %data, align 8, !dbg !4840
  %mval_fl = getelementptr inbounds %struct.anon.7, %struct.anon.7* %5, i32 0, i32 0, !dbg !4841
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4840
  %6 = load float*, float** %screen_co.addr, align 8, !dbg !4842
  %call = call float @len_manhattan_v2v2(float* %arraydecay, float* %6), !dbg !4843
  store float %call, float* %dist_test, align 4, !dbg !4839
  %7 = load float, float* %dist_test, align 4, !dbg !4844
  %8 = load %struct.anon.7*, %struct.anon.7** %data, align 8, !dbg !4846
  %dist = getelementptr inbounds %struct.anon.7, %struct.anon.7* %8, i32 0, i32 1, !dbg !4847
  %9 = load float, float* %dist, align 8, !dbg !4847
  %cmp1 = fcmp olt float %7, %9, !dbg !4848
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4849

if.then2:                                         ; preds = %if.then
  %10 = load float, float* %dist_test, align 4, !dbg !4850
  %11 = load %struct.anon.7*, %struct.anon.7** %data, align 8, !dbg !4852
  %dist3 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %11, i32 0, i32 1, !dbg !4853
  store float %10, float* %dist3, align 8, !dbg !4854
  br label %if.end, !dbg !4855

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !4856

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !4857
}

; Function Attrs: noinline nounwind uwtable
define internal void @findnearestface__doClosest(i8* %userData, %struct.BMFace* %efa, float* %screen_co, i32 %index) #0 !dbg !4858 {
entry:
  %userData.addr = alloca i8*, align 8
  %efa.addr = alloca %struct.BMFace*, align 8
  %screen_co.addr = alloca float*, align 8
  %index.addr = alloca i32, align 4
  %data = alloca %struct.anon.8*, align 8
  %dist_test = alloca float, align 4
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4859, metadata !DIExpression()), !dbg !4860
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !4861, metadata !DIExpression()), !dbg !4862
  store float* %screen_co, float** %screen_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %screen_co.addr, metadata !4863, metadata !DIExpression()), !dbg !4864
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.declare(metadata %struct.anon.8** %data, metadata !4867, metadata !DIExpression()), !dbg !4877
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !4878
  %1 = bitcast i8* %0 to %struct.anon.8*, !dbg !4878
  store %struct.anon.8* %1, %struct.anon.8** %data, align 8, !dbg !4877
  %2 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4879
  %pass = getelementptr inbounds %struct.anon.8, %struct.anon.8* %2, i32 0, i32 1, !dbg !4881
  %3 = load float, float* %pass, align 8, !dbg !4881
  %cmp = fcmp oeq float %3, 0.000000e+00, !dbg !4882
  br i1 %cmp, label %if.then, label %if.else, !dbg !4883

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !4884
  %conv = sitofp i32 %4 to float, !dbg !4884
  %5 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4887
  %lastIndex = getelementptr inbounds %struct.anon.8, %struct.anon.8* %5, i32 0, i32 3, !dbg !4888
  %6 = load float, float* %lastIndex, align 8, !dbg !4888
  %cmp1 = fcmp ole float %conv, %6, !dbg !4889
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !4890

if.then3:                                         ; preds = %if.then
  br label %if.end21, !dbg !4891

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !4892

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %index.addr, align 4, !dbg !4893
  %conv4 = sitofp i32 %7 to float, !dbg !4893
  %8 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4896
  %lastIndex5 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %8, i32 0, i32 3, !dbg !4897
  %9 = load float, float* %lastIndex5, align 8, !dbg !4897
  %cmp6 = fcmp ogt float %conv4, %9, !dbg !4898
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !4899

if.then8:                                         ; preds = %if.else
  br label %if.end21, !dbg !4900

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %10 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4901
  %dist = getelementptr inbounds %struct.anon.8, %struct.anon.8* %10, i32 0, i32 2, !dbg !4903
  %11 = load float, float* %dist, align 4, !dbg !4903
  %cmp11 = fcmp ogt float %11, 3.000000e+00, !dbg !4904
  br i1 %cmp11, label %if.then13, label %if.end21, !dbg !4905

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata float* %dist_test, metadata !4906, metadata !DIExpression()), !dbg !4908
  %12 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4909
  %mval_fl = getelementptr inbounds %struct.anon.8, %struct.anon.8* %12, i32 0, i32 0, !dbg !4910
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval_fl, i64 0, i64 0, !dbg !4909
  %13 = load float*, float** %screen_co.addr, align 8, !dbg !4911
  %call = call float @len_manhattan_v2v2(float* %arraydecay, float* %13), !dbg !4912
  store float %call, float* %dist_test, align 4, !dbg !4908
  %14 = load float, float* %dist_test, align 4, !dbg !4913
  %15 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4915
  %dist14 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %15, i32 0, i32 2, !dbg !4916
  %16 = load float, float* %dist14, align 4, !dbg !4916
  %cmp15 = fcmp olt float %14, %16, !dbg !4917
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !4918

if.then17:                                        ; preds = %if.then13
  %17 = load float, float* %dist_test, align 4, !dbg !4919
  %18 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4921
  %dist18 = getelementptr inbounds %struct.anon.8, %struct.anon.8* %18, i32 0, i32 2, !dbg !4922
  store float %17, float* %dist18, align 4, !dbg !4923
  %19 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !4924
  %20 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4925
  %closest = getelementptr inbounds %struct.anon.8, %struct.anon.8* %20, i32 0, i32 5, !dbg !4926
  store %struct.BMFace* %19, %struct.BMFace** %closest, align 8, !dbg !4927
  %21 = load i32, i32* %index.addr, align 4, !dbg !4928
  %conv19 = sitofp i32 %21 to float, !dbg !4928
  %22 = load %struct.anon.8*, %struct.anon.8** %data, align 8, !dbg !4929
  %closestIndex = getelementptr inbounds %struct.anon.8, %struct.anon.8* %22, i32 0, i32 4, !dbg !4930
  store float %conv19, float* %closestIndex, align 4, !dbg !4931
  br label %if.end20, !dbg !4932

if.end20:                                         ; preds = %if.then17, %if.then13
  br label %if.end21, !dbg !4933

if.end21:                                         ; preds = %if.then3, %if.then8, %if.end20, %if.end10
  ret void, !dbg !4934
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_similar(%struct.wmOperatorType* %ot) #0 !dbg !4935 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4938, metadata !DIExpression()), !dbg !4939
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4940
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4941
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8** %name, align 8, !dbg !4942
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4943
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4944
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8** %idname, align 8, !dbg !4945
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4946
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4947
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i8** %description, align 8, !dbg !4948
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4949
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4950
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4951
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4952
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4953
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_similar_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4954
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4955
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4956
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4957
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4958
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4959
  store i16 3, i16* %flag, align 8, !dbg !4960
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4961
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !4962
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4962
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !4961
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([20 x %struct.EnumPropertyItem], [20 x %struct.EnumPropertyItem]* @prop_similar_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !4963
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4964
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !4965
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop1, align 8, !dbg !4966
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4967
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4968
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %11, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @select_similar_type_itemf), !dbg !4969
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4970
  %srna2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !4971
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna2, align 8, !dbg !4971
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !4970
  %call3 = call %struct.PropertyRNA* @RNA_def_enum(i8* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @prop_similar_compare_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !4972
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4973
  %srna4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !4974
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna4, align 8, !dbg !4974
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !4973
  %call5 = call %struct.PropertyRNA* @RNA_def_float(i8* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !4975
  ret void, !dbg !4976
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_similar_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4977 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4984, metadata !DIExpression()), !dbg !4985
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4986, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !4988, metadata !DIExpression()), !dbg !4991
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4992
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !4993
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !4991
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4994, metadata !DIExpression()), !dbg !4995
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4996
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !4997
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4997
  %call1 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)), !dbg !4998
  store %struct.PropertyRNA* %call1, %struct.PropertyRNA** %prop, align 8, !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4999, metadata !DIExpression()), !dbg !5000
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5001
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !5002
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !5002
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !5003
  store i32 %call3, i32* %type, align 4, !dbg !5000
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5004
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !5006
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !5006
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5007
  %call5 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %6, %struct.PropertyRNA* %7), !dbg !5008
  %tobool = icmp ne i8 %call5, 0, !dbg !5008
  br i1 %tobool, label %if.else, label %if.then, !dbg !5009

if.then:                                          ; preds = %entry
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5010
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !5012
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !5012
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5013
  %11 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5014
  %select_thresh = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %11, i32 0, i32 20, !dbg !5015
  %12 = load float, float* %select_thresh, align 4, !dbg !5015
  call void @RNA_property_float_set(%struct.PointerRNA* %9, %struct.PropertyRNA* %10, float %12), !dbg !5016
  br label %if.end, !dbg !5017

if.else:                                          ; preds = %entry
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5018
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !5020
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !5020
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5021
  %call8 = call float @RNA_property_float_get(%struct.PointerRNA* %14, %struct.PropertyRNA* %15), !dbg !5022
  %16 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !5023
  %select_thresh9 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %16, i32 0, i32 20, !dbg !5024
  store float %call8, float* %select_thresh9, align 4, !dbg !5025
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load i32, i32* %type, align 4, !dbg !5026
  %cmp = icmp slt i32 %17, 100, !dbg !5028
  br i1 %cmp, label %if.then10, label %if.else12, !dbg !5029

if.then10:                                        ; preds = %if.end
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5030
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5031
  %call11 = call i32 @similar_vert_select_exec(%struct.bContext* %18, %struct.wmOperator* %19), !dbg !5032
  store i32 %call11, i32* %retval, align 4, !dbg !5033
  br label %return, !dbg !5033

if.else12:                                        ; preds = %if.end
  %20 = load i32, i32* %type, align 4, !dbg !5034
  %cmp13 = icmp slt i32 %20, 200, !dbg !5036
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !5037

if.then14:                                        ; preds = %if.else12
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5038
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5039
  %call15 = call i32 @similar_edge_select_exec(%struct.bContext* %21, %struct.wmOperator* %22), !dbg !5040
  store i32 %call15, i32* %retval, align 4, !dbg !5041
  br label %return, !dbg !5041

if.else16:                                        ; preds = %if.else12
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5042
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5043
  %call17 = call i32 @similar_face_select_exec(%struct.bContext* %23, %struct.wmOperator* %24), !dbg !5044
  store i32 %call17, i32* %retval, align 4, !dbg !5045
  br label %return, !dbg !5045

return:                                           ; preds = %if.else16, %if.then14, %if.then10
  %25 = load i32, i32* %retval, align 4, !dbg !5046
  ret i32 %25, !dbg !5046
}

declare dso_local i32 @ED_operator_editmesh(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_enum_funcs(%struct.PropertyRNA*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @select_similar_type_itemf(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !5047 {
entry:
  %retval = alloca %struct.EnumPropertyItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %obedit = alloca %struct.Object*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %a = alloca i32, align 4
  %totitem = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %a_end = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !5055, metadata !DIExpression()), !dbg !5056
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5061, metadata !DIExpression()), !dbg !5062
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5063
  %tobool = icmp ne %struct.bContext* %0, null, !dbg !5063
  br i1 %tobool, label %if.end, label %if.then, !dbg !5065

if.then:                                          ; preds = %entry
  store %struct.EnumPropertyItem* getelementptr inbounds ([20 x %struct.EnumPropertyItem], [20 x %struct.EnumPropertyItem]* @prop_similar_types, i64 0, i64 0), %struct.EnumPropertyItem** %retval, align 8, !dbg !5066
  br label %return, !dbg !5066

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5067
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !5068
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5069
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5070
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !5070
  br i1 %tobool1, label %land.lhs.true, label %if.end38, !dbg !5072

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5073
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !5074
  %4 = load i16, i16* %type, align 8, !dbg !5074
  %conv = sext i16 %4 to i32, !dbg !5073
  %cmp = icmp eq i32 %conv, 1, !dbg !5075
  br i1 %cmp, label %if.then3, label %if.end38, !dbg !5076

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5077, metadata !DIExpression()), !dbg !5079
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !5079
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5080, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !5082, metadata !DIExpression()), !dbg !5083
  store i32 0, i32* %totitem, align 4, !dbg !5083
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5084, metadata !DIExpression()), !dbg !5085
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5086
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !5087
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !5085
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5088
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 12, !dbg !5090
  %7 = load i16, i16* %selectmode, align 4, !dbg !5090
  %conv5 = sext i16 %7 to i32, !dbg !5088
  %and = and i32 %conv5, 1, !dbg !5091
  %tobool6 = icmp ne i32 %and, 0, !dbg !5091
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5092

if.then7:                                         ; preds = %if.then3
  store i32 0, i32* %a, align 4, !dbg !5093
  br label %for.cond, !dbg !5096

for.cond:                                         ; preds = %for.inc, %if.then7
  %8 = load i32, i32* %a, align 4, !dbg !5097
  %cmp8 = icmp slt i32 %8, 101, !dbg !5099
  br i1 %cmp8, label %for.body, label %for.end, !dbg !5100

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %a, align 4, !dbg !5101
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([20 x %struct.EnumPropertyItem], [20 x %struct.EnumPropertyItem]* @prop_similar_types, i64 0, i64 0), i32 %9), !dbg !5103
  br label %for.inc, !dbg !5104

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %a, align 4, !dbg !5105
  %inc = add nsw i32 %10, 1, !dbg !5105
  store i32 %inc, i32* %a, align 4, !dbg !5105
  br label %for.cond, !dbg !5106, !llvm.loop !5107

for.end:                                          ; preds = %for.cond
  br label %if.end37, !dbg !5109

if.else:                                          ; preds = %if.then3
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5110
  %selectmode10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 12, !dbg !5112
  %12 = load i16, i16* %selectmode10, align 4, !dbg !5112
  %conv11 = sext i16 %12 to i32, !dbg !5110
  %and12 = and i32 %conv11, 2, !dbg !5113
  %tobool13 = icmp ne i32 %and12, 0, !dbg !5113
  br i1 %tobool13, label %if.then14, label %if.else22, !dbg !5114

if.then14:                                        ; preds = %if.else
  store i32 101, i32* %a, align 4, !dbg !5115
  br label %for.cond15, !dbg !5118

for.cond15:                                       ; preds = %for.inc19, %if.then14
  %13 = load i32, i32* %a, align 4, !dbg !5119
  %cmp16 = icmp slt i32 %13, 201, !dbg !5121
  br i1 %cmp16, label %for.body18, label %for.end21, !dbg !5122

for.body18:                                       ; preds = %for.cond15
  %14 = load i32, i32* %a, align 4, !dbg !5123
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([20 x %struct.EnumPropertyItem], [20 x %struct.EnumPropertyItem]* @prop_similar_types, i64 0, i64 0), i32 %14), !dbg !5125
  br label %for.inc19, !dbg !5126

for.inc19:                                        ; preds = %for.body18
  %15 = load i32, i32* %a, align 4, !dbg !5127
  %inc20 = add nsw i32 %15, 1, !dbg !5127
  store i32 %inc20, i32* %a, align 4, !dbg !5127
  br label %for.cond15, !dbg !5128, !llvm.loop !5129

for.end21:                                        ; preds = %for.cond15
  br label %if.end36, !dbg !5131

if.else22:                                        ; preds = %if.else
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5132
  %selectmode23 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 12, !dbg !5134
  %17 = load i16, i16* %selectmode23, align 4, !dbg !5134
  %conv24 = sext i16 %17 to i32, !dbg !5132
  %and25 = and i32 %conv24, 4, !dbg !5135
  %tobool26 = icmp ne i32 %and25, 0, !dbg !5135
  br i1 %tobool26, label %if.then27, label %if.end35, !dbg !5136

if.then27:                                        ; preds = %if.else22
  call void @llvm.dbg.declare(metadata i32* %a_end, metadata !5137, metadata !DIExpression()), !dbg !5139
  store i32 207, i32* %a_end, align 4, !dbg !5139
  store i32 201, i32* %a, align 4, !dbg !5140
  br label %for.cond28, !dbg !5142

for.cond28:                                       ; preds = %for.inc32, %if.then27
  %18 = load i32, i32* %a, align 4, !dbg !5143
  %cmp29 = icmp sle i32 %18, 207, !dbg !5145
  br i1 %cmp29, label %for.body31, label %for.end34, !dbg !5146

for.body31:                                       ; preds = %for.cond28
  %19 = load i32, i32* %a, align 4, !dbg !5147
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([20 x %struct.EnumPropertyItem], [20 x %struct.EnumPropertyItem]* @prop_similar_types, i64 0, i64 0), i32 %19), !dbg !5149
  br label %for.inc32, !dbg !5150

for.inc32:                                        ; preds = %for.body31
  %20 = load i32, i32* %a, align 4, !dbg !5151
  %inc33 = add nsw i32 %20, 1, !dbg !5151
  store i32 %inc33, i32* %a, align 4, !dbg !5151
  br label %for.cond28, !dbg !5152, !llvm.loop !5153

for.end34:                                        ; preds = %for.cond28
  br label %if.end35, !dbg !5155

if.end35:                                         ; preds = %for.end34, %if.else22
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %for.end21
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %for.end
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !5156
  %21 = load i8*, i8** %r_free.addr, align 8, !dbg !5157
  store i8 1, i8* %21, align 1, !dbg !5158
  %22 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5159
  store %struct.EnumPropertyItem* %22, %struct.EnumPropertyItem** %retval, align 8, !dbg !5160
  br label %return, !dbg !5160

if.end38:                                         ; preds = %land.lhs.true, %if.end
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %retval, align 8, !dbg !5161
  br label %return, !dbg !5161

return:                                           ; preds = %if.end38, %if.end37, %if.then
  %23 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %retval, align 8, !dbg !5162
  ret %struct.EnumPropertyItem* %23, !dbg !5162
}

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_similar_region(%struct.wmOperatorType* %ot) #0 !dbg !5163 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5164, metadata !DIExpression()), !dbg !5165
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5166
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5167
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8** %name, align 8, !dbg !5168
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5169
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5170
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i8** %idname, align 8, !dbg !5171
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5172
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5173
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.13, i64 0, i64 0), i8** %description, align 8, !dbg !5174
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5175
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5176
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_similar_region_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5177
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5178
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5179
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5180
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5181
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5182
  store i16 3, i16* %flag, align 8, !dbg !5183
  ret void, !dbg !5184
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_similar_region_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5185 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %changed = alloca i8, align 1
  %groups_array = alloca i32*, align 8
  %group_index = alloca [2 x i32]*, align 8
  %group_tot = alloca i32, align 4
  %i = alloca i32, align 4
  %faces_regions = alloca %struct.ListBase, align 8
  %tot = alloca i32, align 4
  %fg_sta = alloca i32, align 4
  %fg_len = alloca i32, align 4
  %j = alloca i32, align 4
  %fg = alloca %struct.BMFace**, align 8
  %link = alloca %struct.LinkData*, align 8
  %f = alloca %struct.BMFace*, align 8
  %faces = alloca %struct.BMFace**, align 8
  %i28 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5186, metadata !DIExpression()), !dbg !5187
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5190, metadata !DIExpression()), !dbg !5191
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5192
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5193
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5191
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5194, metadata !DIExpression()), !dbg !5195
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5196
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5197
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5195
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5198, metadata !DIExpression()), !dbg !5199
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5200
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !5201
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5201
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !5199
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5202, metadata !DIExpression()), !dbg !5203
  store i8 0, i8* %changed, align 1, !dbg !5203
  call void @llvm.dbg.declare(metadata i32** %groups_array, metadata !5204, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.declare(metadata [2 x i32]** %group_index, metadata !5206, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.declare(metadata i32* %group_tot, metadata !5209, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5211, metadata !DIExpression()), !dbg !5212
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5213
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 6, !dbg !5215
  %5 = load i32, i32* %totfacesel, align 8, !dbg !5215
  %cmp = icmp slt i32 %5, 2, !dbg !5216
  br i1 %cmp, label %if.then, label %if.end, !dbg !5217

if.then:                                          ; preds = %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5218
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 8, !dbg !5220
  %7 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5220
  call void @BKE_report(%struct.ReportList* %7, i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.218, i64 0, i64 0)), !dbg !5221
  store i32 2, i32* %retval, align 4, !dbg !5222
  br label %return, !dbg !5222

if.end:                                           ; preds = %entry
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5223
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5224
  %totfacesel3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 6, !dbg !5225
  %10 = load i32, i32* %totfacesel3, align 8, !dbg !5225
  %conv = sext i32 %10 to i64, !dbg !5224
  %mul = mul i64 4, %conv, !dbg !5226
  %call4 = call i8* %8(i64 %mul, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.edbm_select_similar_region_exec, i64 0, i64 0)), !dbg !5223
  %11 = bitcast i8* %call4 to i32*, !dbg !5223
  store i32* %11, i32** %groups_array, align 8, !dbg !5227
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5228
  %13 = load i32*, i32** %groups_array, align 8, !dbg !5229
  %call5 = call i32 @BM_mesh_calc_face_groups(%struct.BMesh* %12, i32* %13, [2 x i32]** %group_index, i8 (%struct.BMElem*, i8*)* null, i8* null, i8 zeroext 1, i8 zeroext 1), !dbg !5230
  store i32 %call5, i32* %group_tot, align 4, !dbg !5231
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5232
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %14, i8 zeroext 8), !dbg !5233
  store i32 0, i32* %i, align 4, !dbg !5234
  br label %for.cond, !dbg !5236

for.cond:                                         ; preds = %for.inc37, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !5237
  %16 = load i32, i32* %group_tot, align 4, !dbg !5239
  %cmp6 = icmp slt i32 %15, %16, !dbg !5240
  br i1 %cmp6, label %for.body, label %for.end39, !dbg !5241

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase* %faces_regions, metadata !5242, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5245, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %fg_sta, metadata !5247, metadata !DIExpression()), !dbg !5248
  %17 = load [2 x i32]*, [2 x i32]** %group_index, align 8, !dbg !5249
  %18 = load i32, i32* %i, align 4, !dbg !5250
  %idxprom = sext i32 %18 to i64, !dbg !5249
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %idxprom, !dbg !5249
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0, !dbg !5249
  %19 = load i32, i32* %arrayidx8, align 4, !dbg !5249
  store i32 %19, i32* %fg_sta, align 4, !dbg !5248
  call void @llvm.dbg.declare(metadata i32* %fg_len, metadata !5251, metadata !DIExpression()), !dbg !5252
  %20 = load [2 x i32]*, [2 x i32]** %group_index, align 8, !dbg !5253
  %21 = load i32, i32* %i, align 4, !dbg !5254
  %idxprom9 = sext i32 %21 to i64, !dbg !5253
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 %idxprom9, !dbg !5253
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx10, i64 0, i64 1, !dbg !5253
  %22 = load i32, i32* %arrayidx11, align 4, !dbg !5253
  store i32 %22, i32* %fg_len, align 4, !dbg !5252
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5255, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %fg, metadata !5257, metadata !DIExpression()), !dbg !5258
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5259
  %24 = load i32, i32* %fg_len, align 4, !dbg !5260
  %conv12 = sext i32 %24 to i64, !dbg !5260
  %mul13 = mul i64 8, %conv12, !dbg !5261
  %call14 = call i8* %23(i64 %mul13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.edbm_select_similar_region_exec, i64 0, i64 0)), !dbg !5259
  %25 = bitcast i8* %call14 to %struct.BMFace**, !dbg !5259
  store %struct.BMFace** %25, %struct.BMFace*** %fg, align 8, !dbg !5258
  store i32 0, i32* %j, align 4, !dbg !5262
  br label %for.cond15, !dbg !5264

for.cond15:                                       ; preds = %for.inc, %for.body
  %26 = load i32, i32* %j, align 4, !dbg !5265
  %27 = load i32, i32* %fg_len, align 4, !dbg !5267
  %cmp16 = icmp slt i32 %26, %27, !dbg !5268
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !5269

for.body18:                                       ; preds = %for.cond15
  %28 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5270
  %29 = load i32*, i32** %groups_array, align 8, !dbg !5272
  %30 = load i32, i32* %fg_sta, align 4, !dbg !5273
  %31 = load i32, i32* %j, align 4, !dbg !5274
  %add = add nsw i32 %30, %31, !dbg !5275
  %idxprom19 = sext i32 %add to i64, !dbg !5272
  %arrayidx20 = getelementptr inbounds i32, i32* %29, i64 %idxprom19, !dbg !5272
  %32 = load i32, i32* %arrayidx20, align 4, !dbg !5272
  %call21 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %28, i32 %32), !dbg !5276
  %33 = load %struct.BMFace**, %struct.BMFace*** %fg, align 8, !dbg !5277
  %34 = load i32, i32* %j, align 4, !dbg !5278
  %idxprom22 = sext i32 %34 to i64, !dbg !5277
  %arrayidx23 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %33, i64 %idxprom22, !dbg !5277
  store %struct.BMFace* %call21, %struct.BMFace** %arrayidx23, align 8, !dbg !5279
  br label %for.inc, !dbg !5280

for.inc:                                          ; preds = %for.body18
  %35 = load i32, i32* %j, align 4, !dbg !5281
  %inc = add nsw i32 %35, 1, !dbg !5281
  store i32 %inc, i32* %j, align 4, !dbg !5281
  br label %for.cond15, !dbg !5282, !llvm.loop !5283

for.end:                                          ; preds = %for.cond15
  %36 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5285
  %37 = load %struct.BMFace**, %struct.BMFace*** %fg, align 8, !dbg !5286
  %38 = load i32, i32* %fg_len, align 4, !dbg !5287
  %call24 = call i32 @BM_mesh_region_match(%struct.BMesh* %36, %struct.BMFace** %37, i32 %38, %struct.ListBase* %faces_regions), !dbg !5288
  store i32 %call24, i32* %tot, align 4, !dbg !5289
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5290
  %40 = load %struct.BMFace**, %struct.BMFace*** %fg, align 8, !dbg !5291
  %41 = bitcast %struct.BMFace** %40 to i8*, !dbg !5291
  call void %39(i8* %41), !dbg !5290
  %42 = load i32, i32* %tot, align 4, !dbg !5292
  %tobool = icmp ne i32 %42, 0, !dbg !5292
  br i1 %tobool, label %if.then25, label %if.end36, !dbg !5294

if.then25:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.LinkData** %link, metadata !5295, metadata !DIExpression()), !dbg !5305
  br label %while.cond, !dbg !5306

while.cond:                                       ; preds = %while.end, %if.then25
  %call26 = call i8* @BLI_pophead(%struct.ListBase* %faces_regions), !dbg !5307
  %43 = bitcast i8* %call26 to %struct.LinkData*, !dbg !5307
  store %struct.LinkData* %43, %struct.LinkData** %link, align 8, !dbg !5308
  %tobool27 = icmp ne %struct.LinkData* %43, null, !dbg !5306
  br i1 %tobool27, label %while.body, label %while.end35, !dbg !5306

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5309, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %faces, metadata !5312, metadata !DIExpression()), !dbg !5313
  %44 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !5314
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %44, i32 0, i32 2, !dbg !5315
  %45 = load i8*, i8** %data, align 8, !dbg !5315
  %46 = bitcast i8* %45 to %struct.BMFace**, !dbg !5314
  store %struct.BMFace** %46, %struct.BMFace*** %faces, align 8, !dbg !5313
  call void @llvm.dbg.declare(metadata i32* %i28, metadata !5316, metadata !DIExpression()), !dbg !5317
  store i32 0, i32* %i28, align 4, !dbg !5317
  br label %while.cond29, !dbg !5318

while.cond29:                                     ; preds = %while.body34, %while.body
  %47 = load %struct.BMFace**, %struct.BMFace*** %faces, align 8, !dbg !5319
  %48 = load i32, i32* %i28, align 4, !dbg !5320
  %inc30 = add i32 %48, 1, !dbg !5320
  store i32 %inc30, i32* %i28, align 4, !dbg !5320
  %idxprom31 = zext i32 %48 to i64, !dbg !5319
  %arrayidx32 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %47, i64 %idxprom31, !dbg !5319
  %49 = load %struct.BMFace*, %struct.BMFace** %arrayidx32, align 8, !dbg !5319
  store %struct.BMFace* %49, %struct.BMFace** %f, align 8, !dbg !5321
  %tobool33 = icmp ne %struct.BMFace* %49, null, !dbg !5318
  br i1 %tobool33, label %while.body34, label %while.end, !dbg !5318

while.body34:                                     ; preds = %while.cond29
  %50 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5322
  %51 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5324
  call void @BM_face_select_set(%struct.BMesh* %50, %struct.BMFace* %51, i8 zeroext 1), !dbg !5325
  br label %while.cond29, !dbg !5318, !llvm.loop !5326

while.end:                                        ; preds = %while.cond29
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5328
  %53 = load %struct.BMFace**, %struct.BMFace*** %faces, align 8, !dbg !5329
  %54 = bitcast %struct.BMFace** %53 to i8*, !dbg !5329
  call void %52(i8* %54), !dbg !5328
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5330
  %56 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !5331
  %57 = bitcast %struct.LinkData* %56 to i8*, !dbg !5331
  call void %55(i8* %57), !dbg !5330
  store i8 1, i8* %changed, align 1, !dbg !5332
  br label %while.cond, !dbg !5306, !llvm.loop !5333

while.end35:                                      ; preds = %while.cond
  br label %if.end36, !dbg !5335

if.end36:                                         ; preds = %while.end35, %for.end
  br label %for.inc37, !dbg !5336

for.inc37:                                        ; preds = %if.end36
  %58 = load i32, i32* %i, align 4, !dbg !5337
  %inc38 = add nsw i32 %58, 1, !dbg !5337
  store i32 %inc38, i32* %i, align 4, !dbg !5337
  br label %for.cond, !dbg !5338, !llvm.loop !5339

for.end39:                                        ; preds = %for.cond
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5341
  %60 = load i32*, i32** %groups_array, align 8, !dbg !5342
  %61 = bitcast i32* %60 to i8*, !dbg !5342
  call void %59(i8* %61), !dbg !5341
  %62 = load i8, i8* %changed, align 1, !dbg !5343
  %tobool40 = icmp ne i8 %62, 0, !dbg !5343
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !5345

if.then41:                                        ; preds = %for.end39
  %63 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5346
  %64 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5348
  %65 = bitcast %struct.Object* %64 to i8*, !dbg !5348
  call void @WM_event_add_notifier(%struct.bContext* %63, i32 274333696, i8* %65), !dbg !5349
  br label %if.end43, !dbg !5350

if.else:                                          ; preds = %for.end39
  %66 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5351
  %reports42 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %66, i32 0, i32 8, !dbg !5353
  %67 = load %struct.ReportList*, %struct.ReportList** %reports42, align 8, !dbg !5353
  call void @BKE_report(%struct.ReportList* %67, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.219, i64 0, i64 0)), !dbg !5354
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then41
  store i32 4, i32* %retval, align 4, !dbg !5355
  br label %return, !dbg !5355

return:                                           ; preds = %if.end43, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !5356
  ret i32 %68, !dbg !5356
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_mode(%struct.wmOperatorType* %ot) #0 !dbg !3070 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5359, metadata !DIExpression()), !dbg !5360
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5361
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5362
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i8** %name, align 8, !dbg !5363
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5364
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5365
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0), i8** %idname, align 8, !dbg !5366
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5367
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5368
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i64 0, i64 0), i8** %description, align 8, !dbg !5369
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5370
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5371
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @edbm_select_mode_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5372
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5373
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5374
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_mode_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5375
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5376
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5377
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5378
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5379
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !5380
  store i16 3, i16* %flag, align 8, !dbg !5381
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5382
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5383
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5383
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5382
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !5384
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5385
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5386
  call void @RNA_def_property_flag(%struct.PropertyRNA* %10, i32 268435456), !dbg !5387
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5388
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !5389
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5389
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !5388
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !5390
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !5391
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5392
  call void @RNA_def_property_flag(%struct.PropertyRNA* %14, i32 268435456), !dbg !5393
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5394
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !5395
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !5395
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !5394
  %call4 = call %struct.PropertyRNA* @RNA_def_enum(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_select_mode.elem_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !5396
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !5397
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5398
  %prop5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 13, !dbg !5399
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop5, align 8, !dbg !5400
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5401
  call void @RNA_def_property_flag(%struct.PropertyRNA* %19, i32 268435456), !dbg !5402
  %20 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5403
  %srna6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %20, i32 0, i32 11, !dbg !5404
  %21 = load %struct.StructRNA*, %struct.StructRNA** %srna6, align 8, !dbg !5404
  %22 = bitcast %struct.StructRNA* %21 to i8*, !dbg !5403
  %call7 = call %struct.PropertyRNA* @RNA_def_enum(i8* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_select_mode.actions_items, i64 0, i64 0), i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0)), !dbg !5405
  ret void, !dbg !5406
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_mode_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5407 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5413, metadata !DIExpression()), !dbg !5414
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5419
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5421
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5421
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0)), !dbg !5422
  %tobool = icmp ne i8 %call, 0, !dbg !5422
  br i1 %tobool, label %if.end, label %if.then, !dbg !5423

if.then:                                          ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5424
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5425
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !5425
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5426
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 17, !dbg !5427
  %5 = load i16, i16* %shift, align 8, !dbg !5427
  %conv = sext i16 %5 to i32, !dbg !5426
  call void @RNA_boolean_set(%struct.PointerRNA* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i32 %conv), !dbg !5428
  br label %if.end, !dbg !5428

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5429
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !5431
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !5431
  %call3 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0)), !dbg !5432
  %tobool4 = icmp ne i8 %call3, 0, !dbg !5432
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !5433

if.then5:                                         ; preds = %if.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5434
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !5435
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !5435
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5436
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 18, !dbg !5437
  %11 = load i16, i16* %ctrl, align 2, !dbg !5437
  %conv7 = sext i16 %11 to i32, !dbg !5436
  call void @RNA_boolean_set(%struct.PointerRNA* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i32 %conv7), !dbg !5438
  br label %if.end8, !dbg !5438

if.end8:                                          ; preds = %if.then5, %if.end
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5439
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5440
  %call9 = call i32 @edbm_select_mode_exec(%struct.bContext* %12, %struct.wmOperator* %13), !dbg !5441
  ret i32 %call9, !dbg !5442
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_mode_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5443 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %type = alloca i32, align 4
  %action = alloca i32, align 4
  %use_extend = alloca i8, align 1
  %use_expand = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5444, metadata !DIExpression()), !dbg !5445
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5446, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5448, metadata !DIExpression()), !dbg !5449
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5450
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5451
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5451
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !5452
  store i32 %call, i32* %type, align 4, !dbg !5449
  call void @llvm.dbg.declare(metadata i32* %action, metadata !5453, metadata !DIExpression()), !dbg !5454
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5455
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5456
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !5456
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)), !dbg !5457
  store i32 %call2, i32* %action, align 4, !dbg !5454
  call void @llvm.dbg.declare(metadata i8* %use_extend, metadata !5458, metadata !DIExpression()), !dbg !5459
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5460
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !5461
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !5461
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0)), !dbg !5462
  %conv = trunc i32 %call4 to i8, !dbg !5462
  store i8 %conv, i8* %use_extend, align 1, !dbg !5459
  call void @llvm.dbg.declare(metadata i8* %use_expand, metadata !5463, metadata !DIExpression()), !dbg !5464
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5465
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !5466
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !5466
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0)), !dbg !5467
  %conv7 = trunc i32 %call6 to i8, !dbg !5467
  store i8 %conv7, i8* %use_expand, align 1, !dbg !5464
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5468
  %9 = load i32, i32* %type, align 4, !dbg !5470
  %conv8 = trunc i32 %9 to i16, !dbg !5470
  %10 = load i32, i32* %action, align 4, !dbg !5471
  %11 = load i8, i8* %use_extend, align 1, !dbg !5472
  %12 = load i8, i8* %use_expand, align 1, !dbg !5473
  %call9 = call zeroext i8 @EDBM_selectmode_toggle(%struct.bContext* %8, i16 signext %conv8, i32 %10, i8 zeroext %11, i8 zeroext %12), !dbg !5474
  %tobool = icmp ne i8 %call9, 0, !dbg !5474
  br i1 %tobool, label %if.then, label %if.else, !dbg !5475

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !5476
  br label %return, !dbg !5476

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5478
  br label %return, !dbg !5478

return:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5480
  ret i32 %13, !dbg !5480
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_loop_multi_select(%struct.wmOperatorType* %ot) #0 !dbg !5481 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5484
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5485
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), i8** %name, align 8, !dbg !5486
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5487
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5488
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0), i8** %idname, align 8, !dbg !5489
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5490
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5491
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.41, i64 0, i64 0), i8** %description, align 8, !dbg !5492
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5493
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5494
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_loop_multiselect_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5495
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5496
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5497
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5498
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5499
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5500
  store i16 3, i16* %flag, align 8, !dbg !5501
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5502
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5503
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5503
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5502
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !5504
  ret void, !dbg !5505
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_loop_multiselect_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5506 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %edarray = alloca %struct.BMEdge**, align 8
  %edindex = alloca i32, align 4
  %is_ring = alloca i8, align 1
  %iter = alloca %struct.BMIter, align 8
  %totedgesel = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5511, metadata !DIExpression()), !dbg !5512
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5513
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5514
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5512
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5515, metadata !DIExpression()), !dbg !5516
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5517
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5518
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5516
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !5519, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.declare(metadata %struct.BMEdge*** %edarray, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata i32* %edindex, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata i8* %is_ring, metadata !5525, metadata !DIExpression()), !dbg !5526
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5527
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5528
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5528
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0)), !dbg !5529
  %conv = trunc i32 %call2 to i8, !dbg !5529
  store i8 %conv, i8* %is_ring, align 1, !dbg !5526
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5530, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.declare(metadata i32* %totedgesel, metadata !5532, metadata !DIExpression()), !dbg !5533
  store i32 0, i32* %totedgesel, align 4, !dbg !5533
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5534
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !5534
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5534
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 2, i8* null), !dbg !5534
  %6 = bitcast i8* %call3 to %struct.BMEdge*, !dbg !5534
  store %struct.BMEdge* %6, %struct.BMEdge** %eed, align 8, !dbg !5534
  br label %for.cond, !dbg !5534

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5536
  %tobool = icmp ne %struct.BMEdge* %7, null, !dbg !5534
  br i1 %tobool, label %for.body, label %for.end, !dbg !5534

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5538
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 0, !dbg !5538
  %call4 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !5538
  %tobool5 = icmp ne i8 %call4, 0, !dbg !5538
  br i1 %tobool5, label %if.then, label %if.end, !dbg !5541

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %totedgesel, align 4, !dbg !5542
  %inc = add nsw i32 %9, 1, !dbg !5542
  store i32 %inc, i32* %totedgesel, align 4, !dbg !5542
  br label %if.end, !dbg !5544

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5545

for.inc:                                          ; preds = %if.end
  %call6 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5536
  %10 = bitcast i8* %call6 to %struct.BMEdge*, !dbg !5536
  store %struct.BMEdge* %10, %struct.BMEdge** %eed, align 8, !dbg !5536
  br label %for.cond, !dbg !5536, !llvm.loop !5546

for.end:                                          ; preds = %for.cond
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5548
  %12 = load i32, i32* %totedgesel, align 4, !dbg !5549
  %conv7 = sext i32 %12 to i64, !dbg !5549
  %mul = mul i64 8, %conv7, !dbg !5550
  %call8 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.220, i64 0, i64 0)), !dbg !5548
  %13 = bitcast i8* %call8 to %struct.BMEdge**, !dbg !5548
  store %struct.BMEdge** %13, %struct.BMEdge*** %edarray, align 8, !dbg !5551
  store i32 0, i32* %edindex, align 4, !dbg !5552
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5553
  %bm9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !5553
  %15 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !5553
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %15, i8 zeroext 2, i8* null), !dbg !5553
  %16 = bitcast i8* %call10 to %struct.BMEdge*, !dbg !5553
  store %struct.BMEdge* %16, %struct.BMEdge** %eed, align 8, !dbg !5553
  br label %for.cond11, !dbg !5553

for.cond11:                                       ; preds = %for.inc20, %for.end
  %17 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5555
  %tobool12 = icmp ne %struct.BMEdge* %17, null, !dbg !5553
  br i1 %tobool12, label %for.body13, label %for.end22, !dbg !5553

for.body13:                                       ; preds = %for.cond11
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5557
  %head14 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 0, !dbg !5557
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head14, i8 zeroext 1), !dbg !5557
  %tobool16 = icmp ne i8 %call15, 0, !dbg !5557
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !5560

if.then17:                                        ; preds = %for.body13
  %19 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5561
  %20 = load %struct.BMEdge**, %struct.BMEdge*** %edarray, align 8, !dbg !5563
  %21 = load i32, i32* %edindex, align 4, !dbg !5564
  %idxprom = sext i32 %21 to i64, !dbg !5563
  %arrayidx = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %20, i64 %idxprom, !dbg !5563
  store %struct.BMEdge* %19, %struct.BMEdge** %arrayidx, align 8, !dbg !5565
  %22 = load i32, i32* %edindex, align 4, !dbg !5566
  %inc18 = add nsw i32 %22, 1, !dbg !5566
  store i32 %inc18, i32* %edindex, align 4, !dbg !5566
  br label %if.end19, !dbg !5567

if.end19:                                         ; preds = %if.then17, %for.body13
  br label %for.inc20, !dbg !5568

for.inc20:                                        ; preds = %if.end19
  %call21 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5555
  %23 = bitcast i8* %call21 to %struct.BMEdge*, !dbg !5555
  store %struct.BMEdge* %23, %struct.BMEdge** %eed, align 8, !dbg !5555
  br label %for.cond11, !dbg !5555, !llvm.loop !5569

for.end22:                                        ; preds = %for.cond11
  %24 = load i8, i8* %is_ring, align 1, !dbg !5571
  %tobool23 = icmp ne i8 %24, 0, !dbg !5571
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !5573

if.then24:                                        ; preds = %for.end22
  store i32 0, i32* %edindex, align 4, !dbg !5574
  br label %for.cond25, !dbg !5577

for.cond25:                                       ; preds = %for.inc30, %if.then24
  %25 = load i32, i32* %edindex, align 4, !dbg !5578
  %26 = load i32, i32* %totedgesel, align 4, !dbg !5580
  %cmp = icmp slt i32 %25, %26, !dbg !5581
  br i1 %cmp, label %for.body27, label %for.end31, !dbg !5582

for.body27:                                       ; preds = %for.cond25
  %27 = load %struct.BMEdge**, %struct.BMEdge*** %edarray, align 8, !dbg !5583
  %28 = load i32, i32* %edindex, align 4, !dbg !5585
  %idxprom28 = sext i32 %28 to i64, !dbg !5583
  %arrayidx29 = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %27, i64 %idxprom28, !dbg !5583
  %29 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx29, align 8, !dbg !5583
  store %struct.BMEdge* %29, %struct.BMEdge** %eed, align 8, !dbg !5586
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5587
  %31 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5588
  %32 = bitcast %struct.BMEdge* %31 to i8*, !dbg !5588
  call void @walker_select(%struct.BMEditMesh* %30, i32 4, i8* %32, i8 zeroext 1), !dbg !5589
  br label %for.inc30, !dbg !5590

for.inc30:                                        ; preds = %for.body27
  %33 = load i32, i32* %edindex, align 4, !dbg !5591
  %add = add nsw i32 %33, 1, !dbg !5591
  store i32 %add, i32* %edindex, align 4, !dbg !5591
  br label %for.cond25, !dbg !5592, !llvm.loop !5593

for.end31:                                        ; preds = %for.cond25
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5595
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %34), !dbg !5596
  br label %if.end41, !dbg !5597

if.else:                                          ; preds = %for.end22
  store i32 0, i32* %edindex, align 4, !dbg !5598
  br label %for.cond32, !dbg !5601

for.cond32:                                       ; preds = %for.inc38, %if.else
  %35 = load i32, i32* %edindex, align 4, !dbg !5602
  %36 = load i32, i32* %totedgesel, align 4, !dbg !5604
  %cmp33 = icmp slt i32 %35, %36, !dbg !5605
  br i1 %cmp33, label %for.body35, label %for.end40, !dbg !5606

for.body35:                                       ; preds = %for.cond32
  %37 = load %struct.BMEdge**, %struct.BMEdge*** %edarray, align 8, !dbg !5607
  %38 = load i32, i32* %edindex, align 4, !dbg !5609
  %idxprom36 = sext i32 %38 to i64, !dbg !5607
  %arrayidx37 = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %37, i64 %idxprom36, !dbg !5607
  %39 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx37, align 8, !dbg !5607
  store %struct.BMEdge* %39, %struct.BMEdge** %eed, align 8, !dbg !5610
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5611
  %41 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5612
  %42 = bitcast %struct.BMEdge* %41 to i8*, !dbg !5612
  call void @walker_select(%struct.BMEditMesh* %40, i32 2, i8* %42, i8 zeroext 1), !dbg !5613
  br label %for.inc38, !dbg !5614

for.inc38:                                        ; preds = %for.body35
  %43 = load i32, i32* %edindex, align 4, !dbg !5615
  %add39 = add nsw i32 %43, 1, !dbg !5615
  store i32 %add39, i32* %edindex, align 4, !dbg !5615
  br label %for.cond32, !dbg !5616, !llvm.loop !5617

for.end40:                                        ; preds = %for.cond32
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5619
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %44), !dbg !5620
  br label %if.end41

if.end41:                                         ; preds = %for.end40, %for.end31
  %45 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5621
  %46 = load %struct.BMEdge**, %struct.BMEdge*** %edarray, align 8, !dbg !5622
  %47 = bitcast %struct.BMEdge** %46 to i8*, !dbg !5622
  call void %45(i8* %47), !dbg !5621
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5623
  %49 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5624
  %50 = bitcast %struct.Object* %49 to i8*, !dbg !5624
  call void @WM_event_add_notifier(%struct.bContext* %48, i32 274333696, i8* %50), !dbg !5625
  ret i32 4, !dbg !5626
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_loop_select(%struct.wmOperatorType* %ot) #0 !dbg !5627 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5628, metadata !DIExpression()), !dbg !5629
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5630
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5631
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i64 0, i64 0), i8** %name, align 8, !dbg !5632
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5633
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5634
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i64 0, i64 0), i8** %idname, align 8, !dbg !5635
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5636
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5637
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0), i8** %description, align 8, !dbg !5638
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5639
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5640
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @edbm_select_loop_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5641
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5642
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5643
  store i32 (%struct.bContext*)* @ED_operator_editmesh_region_view3d, i32 (%struct.bContext*)** %poll, align 8, !dbg !5644
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5645
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5646
  store i16 2, i16* %flag, align 8, !dbg !5647
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5648
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5649
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5649
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5648
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0)), !dbg !5650
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5651
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5652
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5652
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5651
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52, i64 0, i64 0)), !dbg !5653
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5654
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !5655
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !5655
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !5654
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0)), !dbg !5656
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5657
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !5658
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !5658
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !5657
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0)), !dbg !5659
  ret void, !dbg !5660
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_loop_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5661 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5666, metadata !DIExpression()), !dbg !5667
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5668
  call void @view3d_operator_needs_opengl(%struct.bContext* %0), !dbg !5669
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5670
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5672
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 6, !dbg !5673
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5672
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5674
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !5675
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5675
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)), !dbg !5676
  %conv = trunc i32 %call to i8, !dbg !5676
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5677
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !5678
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !5678
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)), !dbg !5679
  %conv3 = trunc i32 %call2 to i8, !dbg !5679
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5680
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !5681
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !5681
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0)), !dbg !5682
  %conv6 = trunc i32 %call5 to i8, !dbg !5682
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5683
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !5684
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !5684
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0)), !dbg !5685
  %conv9 = trunc i32 %call8 to i8, !dbg !5685
  %call10 = call zeroext i8 @mouse_mesh_loop(%struct.bContext* %1, i32* %arraydecay, i8 zeroext %conv, i8 zeroext %conv3, i8 zeroext %conv6, i8 zeroext %conv9), !dbg !5686
  %tobool = icmp ne i8 %call10, 0, !dbg !5686
  br i1 %tobool, label %if.then, label %if.else, !dbg !5687

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !5688
  br label %return, !dbg !5688

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5690
  br label %return, !dbg !5690

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5692
  ret i32 %11, !dbg !5692
}

declare dso_local i32 @ED_operator_editmesh_region_view3d(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_edgering_select(%struct.wmOperatorType* %ot) #0 !dbg !5693 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5694, metadata !DIExpression()), !dbg !5695
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5696
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5697
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0), i8** %name, align 8, !dbg !5698
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5699
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5700
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i64 0, i64 0), i8** %idname, align 8, !dbg !5701
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5702
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5703
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0), i8** %description, align 8, !dbg !5704
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5705
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5706
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @edbm_select_loop_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5707
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5708
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5709
  store i32 (%struct.bContext*)* @ED_operator_editmesh_region_view3d, i32 (%struct.bContext*)** %poll, align 8, !dbg !5710
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5711
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5712
  store i16 2, i16* %flag, align 8, !dbg !5713
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5714
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5715
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5715
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5714
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0)), !dbg !5716
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5717
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5718
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5718
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5717
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52, i64 0, i64 0)), !dbg !5719
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5720
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !5721
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !5721
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !5720
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0)), !dbg !5722
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5723
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !5724
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !5724
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !5723
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0)), !dbg !5725
  ret void, !dbg !5726
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_all(%struct.wmOperatorType* %ot) #0 !dbg !5727 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5730
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5731
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i8** %name, align 8, !dbg !5732
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5733
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5734
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0), i8** %idname, align 8, !dbg !5735
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5736
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5737
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0), i8** %description, align 8, !dbg !5738
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5739
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5740
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_all_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5741
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5742
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5743
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5744
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5745
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5746
  store i16 3, i16* %flag, align 8, !dbg !5747
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5748
  call void @WM_operator_properties_select_all(%struct.wmOperatorType* %6), !dbg !5749
  ret void, !dbg !5750
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_all_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5751 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %action = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5756, metadata !DIExpression()), !dbg !5757
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5758
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5759
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5757
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5760, metadata !DIExpression()), !dbg !5761
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5762
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5763
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5761
  call void @llvm.dbg.declare(metadata i32* %action, metadata !5764, metadata !DIExpression()), !dbg !5765
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5766
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5767
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5767
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)), !dbg !5768
  store i32 %call2, i32* %action, align 4, !dbg !5765
  %4 = load i32, i32* %action, align 4, !dbg !5769
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb4
    i32 3, label %sw.bb5
  ], !dbg !5770

sw.bb:                                            ; preds = %entry
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5771
  call void @EDBM_select_toggle_all(%struct.BMEditMesh* %5), !dbg !5773
  br label %sw.epilog, !dbg !5774

sw.bb3:                                           ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5775
  call void @EDBM_flag_enable_all(%struct.BMEditMesh* %6, i8 zeroext 1), !dbg !5776
  br label %sw.epilog, !dbg !5777

sw.bb4:                                           ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5778
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %7, i8 zeroext 1), !dbg !5779
  br label %sw.epilog, !dbg !5780

sw.bb5:                                           ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5781
  call void @EDBM_select_swap(%struct.BMEditMesh* %8), !dbg !5782
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5783
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %9), !dbg !5784
  br label %sw.epilog, !dbg !5785

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5786
  %11 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5787
  %12 = bitcast %struct.Object* %11 to i8*, !dbg !5787
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 274333696, i8* %12), !dbg !5788
  ret i32 4, !dbg !5789
}

declare dso_local void @WM_operator_properties_select_all(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_interior_faces(%struct.wmOperatorType* %ot) #0 !dbg !5790 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5793
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5794
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i64 0, i64 0), i8** %name, align 8, !dbg !5795
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5796
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5797
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i64 0, i64 0), i8** %idname, align 8, !dbg !5798
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5799
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5800
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.66, i64 0, i64 0), i8** %description, align 8, !dbg !5801
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5802
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5803
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_faces_select_interior_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5804
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5805
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5806
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5807
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5808
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5809
  store i16 3, i16* %flag, align 8, !dbg !5810
  ret void, !dbg !5811
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_faces_select_interior_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5812 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5817, metadata !DIExpression()), !dbg !5818
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5819
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5820
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5818
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5821, metadata !DIExpression()), !dbg !5822
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5823
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5824
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5822
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5825
  %call2 = call zeroext i8 @EDBM_select_interior_faces(%struct.BMEditMesh* %2), !dbg !5827
  %tobool = icmp ne i8 %call2, 0, !dbg !5827
  br i1 %tobool, label %if.then, label %if.else, !dbg !5828

if.then:                                          ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5829
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5831
  %5 = bitcast %struct.Object* %4 to i8*, !dbg !5831
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274333696, i8* %5), !dbg !5832
  store i32 4, i32* %retval, align 4, !dbg !5833
  br label %return, !dbg !5833

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5834
  br label %return, !dbg !5834

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5836
  ret i32 %6, !dbg !5836
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_select_pick(%struct.bContext* %C, i32* %mval, i8 zeroext %extend, i8 zeroext %deselect, i8 zeroext %toggle) #0 !dbg !5837 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %mval.addr = alloca i32*, align 8
  %extend.addr = alloca i8, align 1
  %deselect.addr = alloca i8, align 1
  %toggle.addr = alloca i8, align 1
  %vc = alloca %struct.ViewContext, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5841, metadata !DIExpression()), !dbg !5842
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  store i8 %deselect, i8* %deselect.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %deselect.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store i8 %toggle, i8* %toggle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %toggle.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !5851, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !5853, metadata !DIExpression()), !dbg !5854
  store %struct.BMVert* null, %struct.BMVert** %eve, align 8, !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !5855, metadata !DIExpression()), !dbg !5856
  store %struct.BMEdge* null, %struct.BMEdge** %eed, align 8, !dbg !5856
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5857, metadata !DIExpression()), !dbg !5858
  store %struct.BMFace* null, %struct.BMFace** %efa, align 8, !dbg !5858
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5859
  call void @em_setup_viewcontext(%struct.bContext* %0, %struct.ViewContext* %vc), !dbg !5860
  %1 = load i32*, i32** %mval.addr, align 8, !dbg !5861
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !5861
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5861
  %mval1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 7, !dbg !5862
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 0, !dbg !5863
  store i32 %2, i32* %arrayidx2, align 8, !dbg !5864
  %3 = load i32*, i32** %mval.addr, align 8, !dbg !5865
  %arrayidx3 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !5865
  %4 = load i32, i32* %arrayidx3, align 4, !dbg !5865
  %mval4 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 7, !dbg !5866
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %mval4, i64 0, i64 1, !dbg !5867
  store i32 %4, i32* %arrayidx5, align 4, !dbg !5868
  %call = call i32 @unified_findnearest(%struct.ViewContext* %vc, %struct.BMVert** %eve, %struct.BMEdge** %eed, %struct.BMFace** %efa), !dbg !5869
  %tobool = icmp ne i32 %call, 0, !dbg !5869
  br i1 %tobool, label %if.then, label %if.end178, !dbg !5871

if.then:                                          ; preds = %entry
  %5 = load i8, i8* %extend.addr, align 1, !dbg !5872
  %conv = zext i8 %5 to i32, !dbg !5872
  %cmp = icmp eq i32 %conv, 0, !dbg !5875
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5876

land.lhs.true:                                    ; preds = %if.then
  %6 = load i8, i8* %deselect.addr, align 1, !dbg !5877
  %conv7 = zext i8 %6 to i32, !dbg !5877
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !5878
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !5879

land.lhs.true10:                                  ; preds = %land.lhs.true
  %7 = load i8, i8* %toggle.addr, align 1, !dbg !5880
  %conv11 = zext i8 %7 to i32, !dbg !5880
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !5881
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !5882

if.then14:                                        ; preds = %land.lhs.true10
  %em = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5883
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5883
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %8, i8 zeroext 1), !dbg !5884
  br label %if.end, !dbg !5884

if.end:                                           ; preds = %if.then14, %land.lhs.true10, %land.lhs.true, %if.then
  %9 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5885
  %tobool15 = icmp ne %struct.BMFace* %9, null, !dbg !5885
  br i1 %tobool15, label %if.then16, label %if.else63, !dbg !5887

if.then16:                                        ; preds = %if.end
  %10 = load i8, i8* %extend.addr, align 1, !dbg !5888
  %tobool17 = icmp ne i8 %10, 0, !dbg !5888
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !5891

if.then18:                                        ; preds = %if.then16
  %em19 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5892
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em19, align 8, !dbg !5892
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !5894
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5894
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5895
  call void @BM_mesh_active_face_set(%struct.BMesh* %12, %struct.BMFace* %13), !dbg !5896
  %em20 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5897
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em20, align 8, !dbg !5897
  %bm21 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !5897
  %15 = load %struct.BMesh*, %struct.BMesh** %bm21, align 8, !dbg !5897
  %16 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5897
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %16, i32 0, i32 0, !dbg !5897
  %call22 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %15, %struct.BMHeader* %head), !dbg !5897
  %em23 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5898
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em23, align 8, !dbg !5898
  %bm24 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 0, !dbg !5899
  %18 = load %struct.BMesh*, %struct.BMesh** %bm24, align 8, !dbg !5899
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5900
  call void @BM_face_select_set(%struct.BMesh* %18, %struct.BMFace* %19, i8 zeroext 0), !dbg !5901
  %em25 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5902
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em25, align 8, !dbg !5902
  %bm26 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !5902
  %21 = load %struct.BMesh*, %struct.BMesh** %bm26, align 8, !dbg !5902
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5902
  %head27 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %22, i32 0, i32 0, !dbg !5902
  call void @_bm_select_history_store(%struct.BMesh* %21, %struct.BMHeader* %head27), !dbg !5902
  %em28 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5903
  %23 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em28, align 8, !dbg !5903
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %23, i32 0, i32 0, !dbg !5904
  %24 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !5904
  %25 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5905
  call void @BM_face_select_set(%struct.BMesh* %24, %struct.BMFace* %25, i8 zeroext 1), !dbg !5906
  br label %if.end62, !dbg !5907

if.else:                                          ; preds = %if.then16
  %26 = load i8, i8* %deselect.addr, align 1, !dbg !5908
  %tobool30 = icmp ne i8 %26, 0, !dbg !5908
  br i1 %tobool30, label %if.then31, label %if.else38, !dbg !5910

if.then31:                                        ; preds = %if.else
  %em32 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5911
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em32, align 8, !dbg !5911
  %bm33 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !5911
  %28 = load %struct.BMesh*, %struct.BMesh** %bm33, align 8, !dbg !5911
  %29 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5911
  %head34 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %29, i32 0, i32 0, !dbg !5911
  %call35 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %28, %struct.BMHeader* %head34), !dbg !5911
  %em36 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5913
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em36, align 8, !dbg !5913
  %bm37 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !5914
  %31 = load %struct.BMesh*, %struct.BMesh** %bm37, align 8, !dbg !5914
  %32 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5915
  call void @BM_face_select_set(%struct.BMesh* %31, %struct.BMFace* %32, i8 zeroext 0), !dbg !5916
  br label %if.end61, !dbg !5917

if.else38:                                        ; preds = %if.else
  %em39 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5918
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em39, align 8, !dbg !5918
  %bm40 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %33, i32 0, i32 0, !dbg !5920
  %34 = load %struct.BMesh*, %struct.BMesh** %bm40, align 8, !dbg !5920
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5921
  call void @BM_mesh_active_face_set(%struct.BMesh* %34, %struct.BMFace* %35), !dbg !5922
  %36 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5923
  %head41 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %36, i32 0, i32 0, !dbg !5923
  %call42 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head41, i8 zeroext 1), !dbg !5923
  %tobool43 = icmp ne i8 %call42, 0, !dbg !5923
  br i1 %tobool43, label %if.else50, label %if.then44, !dbg !5925

if.then44:                                        ; preds = %if.else38
  %em45 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5926
  %37 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em45, align 8, !dbg !5926
  %bm46 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %37, i32 0, i32 0, !dbg !5926
  %38 = load %struct.BMesh*, %struct.BMesh** %bm46, align 8, !dbg !5926
  %39 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5926
  %head47 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %39, i32 0, i32 0, !dbg !5926
  call void @_bm_select_history_store(%struct.BMesh* %38, %struct.BMHeader* %head47), !dbg !5926
  %em48 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5928
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em48, align 8, !dbg !5928
  %bm49 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %40, i32 0, i32 0, !dbg !5929
  %41 = load %struct.BMesh*, %struct.BMesh** %bm49, align 8, !dbg !5929
  %42 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5930
  call void @BM_face_select_set(%struct.BMesh* %41, %struct.BMFace* %42, i8 zeroext 1), !dbg !5931
  br label %if.end60, !dbg !5932

if.else50:                                        ; preds = %if.else38
  %43 = load i8, i8* %toggle.addr, align 1, !dbg !5933
  %tobool51 = icmp ne i8 %43, 0, !dbg !5933
  br i1 %tobool51, label %if.then52, label %if.end59, !dbg !5935

if.then52:                                        ; preds = %if.else50
  %em53 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5936
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em53, align 8, !dbg !5936
  %bm54 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %44, i32 0, i32 0, !dbg !5936
  %45 = load %struct.BMesh*, %struct.BMesh** %bm54, align 8, !dbg !5936
  %46 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5936
  %head55 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %46, i32 0, i32 0, !dbg !5936
  %call56 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %45, %struct.BMHeader* %head55), !dbg !5936
  %em57 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5938
  %47 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em57, align 8, !dbg !5938
  %bm58 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %47, i32 0, i32 0, !dbg !5939
  %48 = load %struct.BMesh*, %struct.BMesh** %bm58, align 8, !dbg !5939
  %49 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5940
  call void @BM_face_select_set(%struct.BMesh* %48, %struct.BMFace* %49, i8 zeroext 0), !dbg !5941
  br label %if.end59, !dbg !5942

if.end59:                                         ; preds = %if.then52, %if.else50
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then44
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then31
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then18
  br label %if.end161, !dbg !5943

if.else63:                                        ; preds = %if.end
  %50 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5944
  %tobool64 = icmp ne %struct.BMEdge* %50, null, !dbg !5944
  br i1 %tobool64, label %if.then65, label %if.else111, !dbg !5946

if.then65:                                        ; preds = %if.else63
  %51 = load i8, i8* %extend.addr, align 1, !dbg !5947
  %tobool66 = icmp ne i8 %51, 0, !dbg !5947
  br i1 %tobool66, label %if.then67, label %if.else79, !dbg !5950

if.then67:                                        ; preds = %if.then65
  %em68 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5951
  %52 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em68, align 8, !dbg !5951
  %bm69 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %52, i32 0, i32 0, !dbg !5951
  %53 = load %struct.BMesh*, %struct.BMesh** %bm69, align 8, !dbg !5951
  %54 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5951
  %head70 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %54, i32 0, i32 0, !dbg !5951
  %call71 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %53, %struct.BMHeader* %head70), !dbg !5951
  %em72 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5953
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em72, align 8, !dbg !5953
  %bm73 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !5954
  %56 = load %struct.BMesh*, %struct.BMesh** %bm73, align 8, !dbg !5954
  %57 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5955
  call void @BM_edge_select_set(%struct.BMesh* %56, %struct.BMEdge* %57, i8 zeroext 0), !dbg !5956
  %em74 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5957
  %58 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em74, align 8, !dbg !5957
  %bm75 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %58, i32 0, i32 0, !dbg !5957
  %59 = load %struct.BMesh*, %struct.BMesh** %bm75, align 8, !dbg !5957
  %60 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5957
  %head76 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %60, i32 0, i32 0, !dbg !5957
  call void @_bm_select_history_store(%struct.BMesh* %59, %struct.BMHeader* %head76), !dbg !5957
  %em77 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5958
  %61 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em77, align 8, !dbg !5958
  %bm78 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %61, i32 0, i32 0, !dbg !5959
  %62 = load %struct.BMesh*, %struct.BMesh** %bm78, align 8, !dbg !5959
  %63 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5960
  call void @BM_edge_select_set(%struct.BMesh* %62, %struct.BMEdge* %63, i8 zeroext 1), !dbg !5961
  br label %if.end110, !dbg !5962

if.else79:                                        ; preds = %if.then65
  %64 = load i8, i8* %deselect.addr, align 1, !dbg !5963
  %tobool80 = icmp ne i8 %64, 0, !dbg !5963
  br i1 %tobool80, label %if.then81, label %if.else88, !dbg !5965

if.then81:                                        ; preds = %if.else79
  %em82 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5966
  %65 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em82, align 8, !dbg !5966
  %bm83 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %65, i32 0, i32 0, !dbg !5966
  %66 = load %struct.BMesh*, %struct.BMesh** %bm83, align 8, !dbg !5966
  %67 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5966
  %head84 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %67, i32 0, i32 0, !dbg !5966
  %call85 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %66, %struct.BMHeader* %head84), !dbg !5966
  %em86 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5968
  %68 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em86, align 8, !dbg !5968
  %bm87 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %68, i32 0, i32 0, !dbg !5969
  %69 = load %struct.BMesh*, %struct.BMesh** %bm87, align 8, !dbg !5969
  %70 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5970
  call void @BM_edge_select_set(%struct.BMesh* %69, %struct.BMEdge* %70, i8 zeroext 0), !dbg !5971
  br label %if.end109, !dbg !5972

if.else88:                                        ; preds = %if.else79
  %71 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5973
  %head89 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %71, i32 0, i32 0, !dbg !5973
  %call90 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head89, i8 zeroext 1), !dbg !5973
  %tobool91 = icmp ne i8 %call90, 0, !dbg !5973
  br i1 %tobool91, label %if.else98, label %if.then92, !dbg !5976

if.then92:                                        ; preds = %if.else88
  %em93 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5977
  %72 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em93, align 8, !dbg !5977
  %bm94 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %72, i32 0, i32 0, !dbg !5977
  %73 = load %struct.BMesh*, %struct.BMesh** %bm94, align 8, !dbg !5977
  %74 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5977
  %head95 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %74, i32 0, i32 0, !dbg !5977
  call void @_bm_select_history_store(%struct.BMesh* %73, %struct.BMHeader* %head95), !dbg !5977
  %em96 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5979
  %75 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em96, align 8, !dbg !5979
  %bm97 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %75, i32 0, i32 0, !dbg !5980
  %76 = load %struct.BMesh*, %struct.BMesh** %bm97, align 8, !dbg !5980
  %77 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5981
  call void @BM_edge_select_set(%struct.BMesh* %76, %struct.BMEdge* %77, i8 zeroext 1), !dbg !5982
  br label %if.end108, !dbg !5983

if.else98:                                        ; preds = %if.else88
  %78 = load i8, i8* %toggle.addr, align 1, !dbg !5984
  %tobool99 = icmp ne i8 %78, 0, !dbg !5984
  br i1 %tobool99, label %if.then100, label %if.end107, !dbg !5986

if.then100:                                       ; preds = %if.else98
  %em101 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5987
  %79 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em101, align 8, !dbg !5987
  %bm102 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %79, i32 0, i32 0, !dbg !5987
  %80 = load %struct.BMesh*, %struct.BMesh** %bm102, align 8, !dbg !5987
  %81 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5987
  %head103 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %81, i32 0, i32 0, !dbg !5987
  %call104 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %80, %struct.BMHeader* %head103), !dbg !5987
  %em105 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !5989
  %82 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em105, align 8, !dbg !5989
  %bm106 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %82, i32 0, i32 0, !dbg !5990
  %83 = load %struct.BMesh*, %struct.BMesh** %bm106, align 8, !dbg !5990
  %84 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5991
  call void @BM_edge_select_set(%struct.BMesh* %83, %struct.BMEdge* %84, i8 zeroext 0), !dbg !5992
  br label %if.end107, !dbg !5993

if.end107:                                        ; preds = %if.then100, %if.else98
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then92
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then81
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then67
  br label %if.end160, !dbg !5994

if.else111:                                       ; preds = %if.else63
  %85 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !5995
  %tobool112 = icmp ne %struct.BMVert* %85, null, !dbg !5995
  br i1 %tobool112, label %if.then113, label %if.end159, !dbg !5997

if.then113:                                       ; preds = %if.else111
  %86 = load i8, i8* %extend.addr, align 1, !dbg !5998
  %tobool114 = icmp ne i8 %86, 0, !dbg !5998
  br i1 %tobool114, label %if.then115, label %if.else127, !dbg !6001

if.then115:                                       ; preds = %if.then113
  %em116 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6002
  %87 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em116, align 8, !dbg !6002
  %bm117 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %87, i32 0, i32 0, !dbg !6002
  %88 = load %struct.BMesh*, %struct.BMesh** %bm117, align 8, !dbg !6002
  %89 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6002
  %head118 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 0, !dbg !6002
  %call119 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %88, %struct.BMHeader* %head118), !dbg !6002
  %em120 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6004
  %90 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em120, align 8, !dbg !6004
  %bm121 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %90, i32 0, i32 0, !dbg !6005
  %91 = load %struct.BMesh*, %struct.BMesh** %bm121, align 8, !dbg !6005
  %92 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6006
  call void @BM_vert_select_set(%struct.BMesh* %91, %struct.BMVert* %92, i8 zeroext 0), !dbg !6007
  %em122 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6008
  %93 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em122, align 8, !dbg !6008
  %bm123 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %93, i32 0, i32 0, !dbg !6008
  %94 = load %struct.BMesh*, %struct.BMesh** %bm123, align 8, !dbg !6008
  %95 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6008
  %head124 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %95, i32 0, i32 0, !dbg !6008
  call void @_bm_select_history_store(%struct.BMesh* %94, %struct.BMHeader* %head124), !dbg !6008
  %em125 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6009
  %96 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em125, align 8, !dbg !6009
  %bm126 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %96, i32 0, i32 0, !dbg !6010
  %97 = load %struct.BMesh*, %struct.BMesh** %bm126, align 8, !dbg !6010
  %98 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6011
  call void @BM_vert_select_set(%struct.BMesh* %97, %struct.BMVert* %98, i8 zeroext 1), !dbg !6012
  br label %if.end158, !dbg !6013

if.else127:                                       ; preds = %if.then113
  %99 = load i8, i8* %deselect.addr, align 1, !dbg !6014
  %tobool128 = icmp ne i8 %99, 0, !dbg !6014
  br i1 %tobool128, label %if.then129, label %if.else136, !dbg !6016

if.then129:                                       ; preds = %if.else127
  %em130 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6017
  %100 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em130, align 8, !dbg !6017
  %bm131 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %100, i32 0, i32 0, !dbg !6017
  %101 = load %struct.BMesh*, %struct.BMesh** %bm131, align 8, !dbg !6017
  %102 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6017
  %head132 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %102, i32 0, i32 0, !dbg !6017
  %call133 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %101, %struct.BMHeader* %head132), !dbg !6017
  %em134 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6019
  %103 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em134, align 8, !dbg !6019
  %bm135 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %103, i32 0, i32 0, !dbg !6020
  %104 = load %struct.BMesh*, %struct.BMesh** %bm135, align 8, !dbg !6020
  %105 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6021
  call void @BM_vert_select_set(%struct.BMesh* %104, %struct.BMVert* %105, i8 zeroext 0), !dbg !6022
  br label %if.end157, !dbg !6023

if.else136:                                       ; preds = %if.else127
  %106 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6024
  %head137 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %106, i32 0, i32 0, !dbg !6024
  %call138 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head137, i8 zeroext 1), !dbg !6024
  %tobool139 = icmp ne i8 %call138, 0, !dbg !6024
  br i1 %tobool139, label %if.else146, label %if.then140, !dbg !6027

if.then140:                                       ; preds = %if.else136
  %em141 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6028
  %107 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em141, align 8, !dbg !6028
  %bm142 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %107, i32 0, i32 0, !dbg !6028
  %108 = load %struct.BMesh*, %struct.BMesh** %bm142, align 8, !dbg !6028
  %109 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6028
  %head143 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %109, i32 0, i32 0, !dbg !6028
  call void @_bm_select_history_store(%struct.BMesh* %108, %struct.BMHeader* %head143), !dbg !6028
  %em144 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6030
  %110 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em144, align 8, !dbg !6030
  %bm145 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %110, i32 0, i32 0, !dbg !6031
  %111 = load %struct.BMesh*, %struct.BMesh** %bm145, align 8, !dbg !6031
  %112 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6032
  call void @BM_vert_select_set(%struct.BMesh* %111, %struct.BMVert* %112, i8 zeroext 1), !dbg !6033
  br label %if.end156, !dbg !6034

if.else146:                                       ; preds = %if.else136
  %113 = load i8, i8* %toggle.addr, align 1, !dbg !6035
  %tobool147 = icmp ne i8 %113, 0, !dbg !6035
  br i1 %tobool147, label %if.then148, label %if.end155, !dbg !6037

if.then148:                                       ; preds = %if.else146
  %em149 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6038
  %114 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em149, align 8, !dbg !6038
  %bm150 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %114, i32 0, i32 0, !dbg !6038
  %115 = load %struct.BMesh*, %struct.BMesh** %bm150, align 8, !dbg !6038
  %116 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6038
  %head151 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %116, i32 0, i32 0, !dbg !6038
  %call152 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %115, %struct.BMHeader* %head151), !dbg !6038
  %em153 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6040
  %117 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em153, align 8, !dbg !6040
  %bm154 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %117, i32 0, i32 0, !dbg !6041
  %118 = load %struct.BMesh*, %struct.BMesh** %bm154, align 8, !dbg !6041
  %119 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6042
  call void @BM_vert_select_set(%struct.BMesh* %118, %struct.BMVert* %119, i8 zeroext 0), !dbg !6043
  br label %if.end155, !dbg !6044

if.end155:                                        ; preds = %if.then148, %if.else146
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then140
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then129
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then115
  br label %if.end159, !dbg !6045

if.end159:                                        ; preds = %if.end158, %if.else111
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.end110
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.end62
  %em162 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6046
  %120 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em162, align 8, !dbg !6046
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %120), !dbg !6047
  %121 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6048
  %tobool163 = icmp ne %struct.BMFace* %121, null, !dbg !6048
  br i1 %tobool163, label %land.lhs.true164, label %if.end176, !dbg !6050

land.lhs.true164:                                 ; preds = %if.end161
  %122 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6051
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %122, i32 0, i32 5, !dbg !6052
  %123 = load i16, i16* %mat_nr, align 8, !dbg !6052
  %conv165 = sext i16 %123 to i32, !dbg !6051
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !6053
  %124 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6053
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 32, !dbg !6054
  %125 = load i32, i32* %actcol, align 4, !dbg !6054
  %sub = sub nsw i32 %125, 1, !dbg !6055
  %cmp166 = icmp ne i32 %conv165, %sub, !dbg !6056
  br i1 %cmp166, label %if.then168, label %if.end176, !dbg !6057

if.then168:                                       ; preds = %land.lhs.true164
  %126 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6058
  %mat_nr169 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %126, i32 0, i32 5, !dbg !6060
  %127 = load i16, i16* %mat_nr169, align 8, !dbg !6060
  %conv170 = sext i16 %127 to i32, !dbg !6058
  %add = add nsw i32 %conv170, 1, !dbg !6061
  %obedit171 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !6062
  %128 = load %struct.Object*, %struct.Object** %obedit171, align 8, !dbg !6062
  %actcol172 = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 32, !dbg !6063
  store i32 %add, i32* %actcol172, align 4, !dbg !6064
  %129 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6065
  %mat_nr173 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %129, i32 0, i32 5, !dbg !6066
  %130 = load i16, i16* %mat_nr173, align 8, !dbg !6066
  %em174 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !6067
  %131 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em174, align 8, !dbg !6067
  %mat_nr175 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %131, i32 0, i32 13, !dbg !6068
  store i16 %130, i16* %mat_nr175, align 2, !dbg !6069
  %132 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6070
  call void @WM_event_add_notifier(%struct.bContext* %132, i32 102760448, i8* null), !dbg !6071
  br label %if.end176, !dbg !6072

if.end176:                                        ; preds = %if.then168, %land.lhs.true164, %if.end161
  %133 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6073
  %obedit177 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !6074
  %134 = load %struct.Object*, %struct.Object** %obedit177, align 8, !dbg !6074
  %135 = bitcast %struct.Object* %134 to i8*, !dbg !6075
  call void @WM_event_add_notifier(%struct.bContext* %133, i32 274333696, i8* %135), !dbg !6076
  store i8 1, i8* %retval, align 1, !dbg !6077
  br label %return, !dbg !6077

if.end178:                                        ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6078
  br label %return, !dbg !6078

return:                                           ; preds = %if.end178, %if.end176
  %136 = load i8, i8* %retval, align 1, !dbg !6079
  ret i8 %136, !dbg !6079
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @em_setup_viewcontext(%struct.bContext* %C, %struct.ViewContext* %vc) #0 !dbg !6080 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %vc.addr = alloca %struct.ViewContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6083, metadata !DIExpression()), !dbg !6084
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !6085, metadata !DIExpression()), !dbg !6086
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6087
  %1 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6088
  call void @view3d_set_viewcontext(%struct.bContext* %0, %struct.ViewContext* %1), !dbg !6089
  %2 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6090
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %2, i32 0, i32 2, !dbg !6092
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6092
  %tobool = icmp ne %struct.Object* %3, null, !dbg !6090
  br i1 %tobool, label %if.then, label %if.end, !dbg !6093

if.then:                                          ; preds = %entry
  %4 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6094
  %obedit1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %4, i32 0, i32 2, !dbg !6096
  %5 = load %struct.Object*, %struct.Object** %obedit1, align 8, !dbg !6096
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !6097
  %6 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6098
  %em = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %6, i32 0, i32 6, !dbg !6099
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !6100
  br label %if.end, !dbg !6101

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6102
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @unified_findnearest(%struct.ViewContext* %vc, %struct.BMVert** %r_eve, %struct.BMEdge** %r_eed, %struct.BMFace** %r_efa) #0 !dbg !6103 {
entry:
  %vc.addr = alloca %struct.ViewContext*, align 8
  %r_eve.addr = alloca %struct.BMVert**, align 8
  %r_eed.addr = alloca %struct.BMEdge**, align 8
  %r_efa.addr = alloca %struct.BMFace**, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %dist = alloca float, align 4
  store %struct.ViewContext* %vc, %struct.ViewContext** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ViewContext** %vc.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  store %struct.BMVert** %r_eve, %struct.BMVert*** %r_eve.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %r_eve.addr, metadata !6108, metadata !DIExpression()), !dbg !6109
  store %struct.BMEdge** %r_eed, %struct.BMEdge*** %r_eed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge*** %r_eed.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  store %struct.BMFace** %r_efa, %struct.BMFace*** %r_efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %r_efa.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6114, metadata !DIExpression()), !dbg !6115
  %0 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6116
  %em1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %0, i32 0, i32 6, !dbg !6117
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !6117
  store %struct.BMEditMesh* %1, %struct.BMEditMesh** %em, align 8, !dbg !6115
  call void @llvm.dbg.declare(metadata float* %dist, metadata !6118, metadata !DIExpression()), !dbg !6119
  %call = call float @ED_view3d_select_dist_px(), !dbg !6120
  store float %call, float* %dist, align 4, !dbg !6119
  %2 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !6121
  store %struct.BMVert* null, %struct.BMVert** %2, align 8, !dbg !6122
  %3 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !6123
  store %struct.BMEdge* null, %struct.BMEdge** %3, align 8, !dbg !6124
  %4 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !6125
  store %struct.BMFace* null, %struct.BMFace** %4, align 8, !dbg !6126
  %5 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6127
  call void @view3d_validate_backbuf(%struct.ViewContext* %5), !dbg !6128
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6129
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 12, !dbg !6131
  %7 = load i16, i16* %selectmode, align 4, !dbg !6131
  %conv = sext i16 %7 to i32, !dbg !6129
  %and = and i32 %conv, 1, !dbg !6132
  %tobool = icmp ne i32 %and, 0, !dbg !6132
  br i1 %tobool, label %if.then, label %if.end, !dbg !6133

if.then:                                          ; preds = %entry
  %8 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6134
  %call2 = call %struct.BMVert* @EDBM_vert_find_nearest(%struct.ViewContext* %8, float* %dist, i8 zeroext 1, i8 zeroext 0), !dbg !6135
  %9 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !6136
  store %struct.BMVert* %call2, %struct.BMVert** %9, align 8, !dbg !6137
  br label %if.end, !dbg !6138

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6139
  %selectmode3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 12, !dbg !6141
  %11 = load i16, i16* %selectmode3, align 4, !dbg !6141
  %conv4 = sext i16 %11 to i32, !dbg !6139
  %and5 = and i32 %conv4, 4, !dbg !6142
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6142
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !6143

if.then7:                                         ; preds = %if.end
  %12 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6144
  %call8 = call %struct.BMFace* @EDBM_face_find_nearest(%struct.ViewContext* %12, float* %dist), !dbg !6145
  %13 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !6146
  store %struct.BMFace* %call8, %struct.BMFace** %13, align 8, !dbg !6147
  br label %if.end9, !dbg !6148

if.end9:                                          ; preds = %if.then7, %if.end
  %14 = load float, float* %dist, align 4, !dbg !6149
  %sub = fsub float %14, 2.000000e+01, !dbg !6149
  store float %sub, float* %dist, align 4, !dbg !6149
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6150
  %selectmode10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 12, !dbg !6152
  %16 = load i16, i16* %selectmode10, align 4, !dbg !6152
  %conv11 = sext i16 %16 to i32, !dbg !6150
  %and12 = and i32 %conv11, 2, !dbg !6153
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6153
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6154

if.then14:                                        ; preds = %if.end9
  %17 = load %struct.ViewContext*, %struct.ViewContext** %vc.addr, align 8, !dbg !6155
  %call15 = call %struct.BMEdge* @EDBM_edge_find_nearest(%struct.ViewContext* %17, float* %dist), !dbg !6156
  %18 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !6157
  store %struct.BMEdge* %call15, %struct.BMEdge** %18, align 8, !dbg !6158
  br label %if.end16, !dbg !6159

if.end16:                                         ; preds = %if.then14, %if.end9
  %19 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !6160
  %20 = load %struct.BMEdge*, %struct.BMEdge** %19, align 8, !dbg !6162
  %tobool17 = icmp ne %struct.BMEdge* %20, null, !dbg !6162
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6163

if.then18:                                        ; preds = %if.end16
  %21 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !6164
  store %struct.BMFace* null, %struct.BMFace** %21, align 8, !dbg !6166
  %22 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !6167
  store %struct.BMVert* null, %struct.BMVert** %22, align 8, !dbg !6168
  br label %if.end22, !dbg !6169

if.else:                                          ; preds = %if.end16
  %23 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !6170
  %24 = load %struct.BMFace*, %struct.BMFace** %23, align 8, !dbg !6172
  %tobool19 = icmp ne %struct.BMFace* %24, null, !dbg !6172
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6173

if.then20:                                        ; preds = %if.else
  %25 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !6174
  store %struct.BMVert* null, %struct.BMVert** %25, align 8, !dbg !6176
  br label %if.end21, !dbg !6177

if.end21:                                         ; preds = %if.then20, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then18
  %26 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !6178
  %27 = load %struct.BMVert*, %struct.BMVert** %26, align 8, !dbg !6179
  %tobool23 = icmp ne %struct.BMVert* %27, null, !dbg !6179
  br i1 %tobool23, label %lor.end, label %lor.lhs.false, !dbg !6180

lor.lhs.false:                                    ; preds = %if.end22
  %28 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !6181
  %29 = load %struct.BMEdge*, %struct.BMEdge** %28, align 8, !dbg !6182
  %tobool24 = icmp ne %struct.BMEdge* %29, null, !dbg !6182
  br i1 %tobool24, label %lor.end, label %lor.rhs, !dbg !6183

lor.rhs:                                          ; preds = %lor.lhs.false
  %30 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !6184
  %31 = load %struct.BMFace*, %struct.BMFace** %30, align 8, !dbg !6185
  %tobool25 = icmp ne %struct.BMFace* %31, null, !dbg !6183
  br label %lor.end, !dbg !6183

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end22
  %32 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end22 ], [ %tobool25, %lor.rhs ]
  %lor.ext = zext i1 %32 to i32, !dbg !6183
  ret i32 %lor.ext, !dbg !6186
}

declare dso_local void @BM_mesh_active_face_set(%struct.BMesh*, %struct.BMFace*) #2

declare dso_local zeroext i8 @_bm_select_history_remove(%struct.BMesh*, %struct.BMHeader*) #2

declare dso_local void @_bm_select_history_store(%struct.BMesh*, %struct.BMHeader*) #2

declare dso_local void @EDBM_selectmode_flush(%struct.BMEditMesh*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_selectmode_set(%struct.BMEditMesh* %em) #0 !dbg !6187 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !6192, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !6194, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !6196, metadata !DIExpression()), !dbg !6197
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6198, metadata !DIExpression()), !dbg !6199
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6200
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 12, !dbg !6201
  %1 = load i16, i16* %selectmode, align 4, !dbg !6201
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6202
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !6203
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6203
  %selectmode1 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 28, !dbg !6204
  store i16 %1, i16* %selectmode1, align 8, !dbg !6205
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6206
  call void @edbm_strip_selections(%struct.BMEditMesh* %4), !dbg !6207
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6208
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !6210
  %6 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !6210
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 4, !dbg !6211
  %7 = load i32, i32* %totvertsel, align 8, !dbg !6211
  %cmp = icmp eq i32 %7, 0, !dbg !6212
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6213

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6214
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !6215
  %9 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !6215
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 5, !dbg !6216
  %10 = load i32, i32* %totedgesel, align 4, !dbg !6216
  %cmp4 = icmp eq i32 %10, 0, !dbg !6217
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !6218

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6219
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !6220
  %12 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !6220
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 6, !dbg !6221
  %13 = load i32, i32* %totfacesel, align 8, !dbg !6221
  %cmp7 = icmp eq i32 %13, 0, !dbg !6222
  br i1 %cmp7, label %if.then, label %if.end, !dbg !6223

if.then:                                          ; preds = %land.lhs.true5
  br label %if.end78, !dbg !6224

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6226
  %selectmode8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 12, !dbg !6228
  %15 = load i16, i16* %selectmode8, align 4, !dbg !6228
  %conv = sext i16 %15 to i32, !dbg !6226
  %and = and i32 %conv, 1, !dbg !6229
  %tobool = icmp ne i32 %and, 0, !dbg !6229
  br i1 %tobool, label %if.then9, label %if.else, !dbg !6230

if.then9:                                         ; preds = %if.end
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6231
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !6234
  %17 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !6234
  %totvertsel11 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 4, !dbg !6235
  %18 = load i32, i32* %totvertsel11, align 8, !dbg !6235
  %tobool12 = icmp ne i32 %18, 0, !dbg !6231
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6236

if.then13:                                        ; preds = %if.then9
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6237
  call void @EDBM_select_flush(%struct.BMEditMesh* %19), !dbg !6239
  br label %if.end14, !dbg !6240

if.end14:                                         ; preds = %if.then13, %if.then9
  br label %if.end78, !dbg !6241

if.else:                                          ; preds = %if.end
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6242
  %selectmode15 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 12, !dbg !6244
  %21 = load i16, i16* %selectmode15, align 4, !dbg !6244
  %conv16 = sext i16 %21 to i32, !dbg !6242
  %and17 = and i32 %conv16, 2, !dbg !6245
  %tobool18 = icmp ne i32 %and17, 0, !dbg !6245
  br i1 %tobool18, label %if.then19, label %if.else42, !dbg !6246

if.then19:                                        ; preds = %if.else
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6247
  %bm20 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %22, i32 0, i32 0, !dbg !6247
  %23 = load %struct.BMesh*, %struct.BMesh** %bm20, align 8, !dbg !6247
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %23, i8 zeroext 1, i8* null), !dbg !6247
  %24 = bitcast i8* %call to %struct.BMVert*, !dbg !6247
  store %struct.BMVert* %24, %struct.BMVert** %eve, align 8, !dbg !6247
  br label %for.cond, !dbg !6247

for.cond:                                         ; preds = %for.inc, %if.then19
  %25 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6250
  %tobool21 = icmp ne %struct.BMVert* %25, null, !dbg !6247
  br i1 %tobool21, label %for.body, label %for.end, !dbg !6247

for.body:                                         ; preds = %for.cond
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6252
  %bm22 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !6254
  %27 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !6254
  %28 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6255
  call void @BM_vert_select_set(%struct.BMesh* %27, %struct.BMVert* %28, i8 zeroext 0), !dbg !6256
  br label %for.inc, !dbg !6257

for.inc:                                          ; preds = %for.body
  %call23 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6250
  %29 = bitcast i8* %call23 to %struct.BMVert*, !dbg !6250
  store %struct.BMVert* %29, %struct.BMVert** %eve, align 8, !dbg !6250
  br label %for.cond, !dbg !6250, !llvm.loop !6258

for.end:                                          ; preds = %for.cond
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6260
  %bm24 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !6262
  %31 = load %struct.BMesh*, %struct.BMesh** %bm24, align 8, !dbg !6262
  %totedgesel25 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %31, i32 0, i32 5, !dbg !6263
  %32 = load i32, i32* %totedgesel25, align 4, !dbg !6263
  %tobool26 = icmp ne i32 %32, 0, !dbg !6260
  br i1 %tobool26, label %if.then27, label %if.end41, !dbg !6264

if.then27:                                        ; preds = %for.end
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6265
  %bm28 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %33, i32 0, i32 0, !dbg !6265
  %34 = load %struct.BMesh*, %struct.BMesh** %bm28, align 8, !dbg !6265
  %call29 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %34, i8 zeroext 2, i8* null), !dbg !6265
  %35 = bitcast i8* %call29 to %struct.BMEdge*, !dbg !6265
  store %struct.BMEdge* %35, %struct.BMEdge** %eed, align 8, !dbg !6265
  br label %for.cond30, !dbg !6265

for.cond30:                                       ; preds = %for.inc38, %if.then27
  %36 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6268
  %tobool31 = icmp ne %struct.BMEdge* %36, null, !dbg !6265
  br i1 %tobool31, label %for.body32, label %for.end40, !dbg !6265

for.body32:                                       ; preds = %for.cond30
  %37 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6270
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %37, i32 0, i32 0, !dbg !6270
  %call33 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !6270
  %tobool34 = icmp ne i8 %call33, 0, !dbg !6270
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !6273

if.then35:                                        ; preds = %for.body32
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6274
  %bm36 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %38, i32 0, i32 0, !dbg !6276
  %39 = load %struct.BMesh*, %struct.BMesh** %bm36, align 8, !dbg !6276
  %40 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6277
  call void @BM_edge_select_set(%struct.BMesh* %39, %struct.BMEdge* %40, i8 zeroext 1), !dbg !6278
  br label %if.end37, !dbg !6279

if.end37:                                         ; preds = %if.then35, %for.body32
  br label %for.inc38, !dbg !6280

for.inc38:                                        ; preds = %if.end37
  %call39 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6268
  %41 = bitcast i8* %call39 to %struct.BMEdge*, !dbg !6268
  store %struct.BMEdge* %41, %struct.BMEdge** %eed, align 8, !dbg !6268
  br label %for.cond30, !dbg !6268, !llvm.loop !6281

for.end40:                                        ; preds = %for.cond30
  %42 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6283
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %42), !dbg !6284
  br label %if.end41, !dbg !6285

if.end41:                                         ; preds = %for.end40, %for.end
  br label %if.end77, !dbg !6286

if.else42:                                        ; preds = %if.else
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6287
  %selectmode43 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %43, i32 0, i32 12, !dbg !6289
  %44 = load i16, i16* %selectmode43, align 4, !dbg !6289
  %conv44 = sext i16 %44 to i32, !dbg !6287
  %and45 = and i32 %conv44, 4, !dbg !6290
  %tobool46 = icmp ne i32 %and45, 0, !dbg !6290
  br i1 %tobool46, label %if.then47, label %if.end76, !dbg !6291

if.then47:                                        ; preds = %if.else42
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6292
  %bm48 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %45, i32 0, i32 0, !dbg !6292
  %46 = load %struct.BMesh*, %struct.BMesh** %bm48, align 8, !dbg !6292
  %call49 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %46, i8 zeroext 2, i8* null), !dbg !6292
  %47 = bitcast i8* %call49 to %struct.BMEdge*, !dbg !6292
  store %struct.BMEdge* %47, %struct.BMEdge** %eed, align 8, !dbg !6292
  br label %for.cond50, !dbg !6292

for.cond50:                                       ; preds = %for.inc54, %if.then47
  %48 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6295
  %tobool51 = icmp ne %struct.BMEdge* %48, null, !dbg !6292
  br i1 %tobool51, label %for.body52, label %for.end56, !dbg !6292

for.body52:                                       ; preds = %for.cond50
  %49 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6297
  %bm53 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %49, i32 0, i32 0, !dbg !6299
  %50 = load %struct.BMesh*, %struct.BMesh** %bm53, align 8, !dbg !6299
  %51 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6300
  call void @BM_edge_select_set(%struct.BMesh* %50, %struct.BMEdge* %51, i8 zeroext 0), !dbg !6301
  br label %for.inc54, !dbg !6302

for.inc54:                                        ; preds = %for.body52
  %call55 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6295
  %52 = bitcast i8* %call55 to %struct.BMEdge*, !dbg !6295
  store %struct.BMEdge* %52, %struct.BMEdge** %eed, align 8, !dbg !6295
  br label %for.cond50, !dbg !6295, !llvm.loop !6303

for.end56:                                        ; preds = %for.cond50
  %53 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6305
  %bm57 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %53, i32 0, i32 0, !dbg !6307
  %54 = load %struct.BMesh*, %struct.BMesh** %bm57, align 8, !dbg !6307
  %totfacesel58 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %54, i32 0, i32 6, !dbg !6308
  %55 = load i32, i32* %totfacesel58, align 8, !dbg !6308
  %tobool59 = icmp ne i32 %55, 0, !dbg !6305
  br i1 %tobool59, label %if.then60, label %if.end75, !dbg !6309

if.then60:                                        ; preds = %for.end56
  %56 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6310
  %bm61 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %56, i32 0, i32 0, !dbg !6310
  %57 = load %struct.BMesh*, %struct.BMesh** %bm61, align 8, !dbg !6310
  %call62 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %57, i8 zeroext 3, i8* null), !dbg !6310
  %58 = bitcast i8* %call62 to %struct.BMFace*, !dbg !6310
  store %struct.BMFace* %58, %struct.BMFace** %efa, align 8, !dbg !6310
  br label %for.cond63, !dbg !6310

for.cond63:                                       ; preds = %for.inc72, %if.then60
  %59 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6313
  %tobool64 = icmp ne %struct.BMFace* %59, null, !dbg !6310
  br i1 %tobool64, label %for.body65, label %for.end74, !dbg !6310

for.body65:                                       ; preds = %for.cond63
  %60 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6315
  %head66 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %60, i32 0, i32 0, !dbg !6315
  %call67 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head66, i8 zeroext 1), !dbg !6315
  %tobool68 = icmp ne i8 %call67, 0, !dbg !6315
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !6318

if.then69:                                        ; preds = %for.body65
  %61 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6319
  %bm70 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %61, i32 0, i32 0, !dbg !6321
  %62 = load %struct.BMesh*, %struct.BMesh** %bm70, align 8, !dbg !6321
  %63 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6322
  call void @BM_face_select_set(%struct.BMesh* %62, %struct.BMFace* %63, i8 zeroext 1), !dbg !6323
  br label %if.end71, !dbg !6324

if.end71:                                         ; preds = %if.then69, %for.body65
  br label %for.inc72, !dbg !6325

for.inc72:                                        ; preds = %if.end71
  %call73 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6313
  %64 = bitcast i8* %call73 to %struct.BMFace*, !dbg !6313
  store %struct.BMFace* %64, %struct.BMFace** %efa, align 8, !dbg !6313
  br label %for.cond63, !dbg !6313, !llvm.loop !6326

for.end74:                                        ; preds = %for.cond63
  br label %if.end75, !dbg !6328

if.end75:                                         ; preds = %for.end74, %for.end56
  br label %if.end76, !dbg !6329

if.end76:                                         ; preds = %if.end75, %if.else42
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end41
  br label %if.end78

if.end78:                                         ; preds = %if.then, %if.end77, %if.end14
  ret void, !dbg !6330
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_strip_selections(%struct.BMEditMesh* %em) #0 !dbg !6331 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %ese = alloca %struct.BMEditSelection*, align 8
  %nextese = alloca %struct.BMEditSelection*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata %struct.BMEditSelection** %ese, metadata !6334, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata %struct.BMEditSelection** %nextese, metadata !6351, metadata !DIExpression()), !dbg !6352
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6353
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 12, !dbg !6355
  %1 = load i16, i16* %selectmode, align 4, !dbg !6355
  %conv = sext i16 %1 to i32, !dbg !6353
  %and = and i32 %conv, 1, !dbg !6356
  %tobool = icmp ne i32 %and, 0, !dbg !6356
  br i1 %tobool, label %if.end7, label %if.then, !dbg !6357

if.then:                                          ; preds = %entry
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6358
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !6360
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6360
  %selected = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 32, !dbg !6361
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected, i32 0, i32 0, !dbg !6362
  %4 = load i8*, i8** %first, align 8, !dbg !6362
  %5 = bitcast i8* %4 to %struct.BMEditSelection*, !dbg !6358
  store %struct.BMEditSelection* %5, %struct.BMEditSelection** %ese, align 8, !dbg !6363
  br label %while.cond, !dbg !6364

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6365
  %tobool1 = icmp ne %struct.BMEditSelection* %6, null, !dbg !6364
  br i1 %tobool1, label %while.body, label %while.end, !dbg !6364

while.body:                                       ; preds = %while.cond
  %7 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6366
  %next = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %7, i32 0, i32 0, !dbg !6368
  %8 = load %struct.BMEditSelection*, %struct.BMEditSelection** %next, align 8, !dbg !6368
  store %struct.BMEditSelection* %8, %struct.BMEditSelection** %nextese, align 8, !dbg !6369
  %9 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6370
  %htype = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %9, i32 0, i32 3, !dbg !6372
  %10 = load i8, i8* %htype, align 8, !dbg !6372
  %conv2 = zext i8 %10 to i32, !dbg !6370
  %cmp = icmp eq i32 %conv2, 1, !dbg !6373
  br i1 %cmp, label %if.then4, label %if.end, !dbg !6374

if.then4:                                         ; preds = %while.body
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6375
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !6376
  %12 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !6376
  %selected6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 32, !dbg !6377
  %13 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6378
  %14 = bitcast %struct.BMEditSelection* %13 to i8*, !dbg !6378
  call void @BLI_freelinkN(%struct.ListBase* %selected6, i8* %14), !dbg !6379
  br label %if.end, !dbg !6379

if.end:                                           ; preds = %if.then4, %while.body
  %15 = load %struct.BMEditSelection*, %struct.BMEditSelection** %nextese, align 8, !dbg !6380
  store %struct.BMEditSelection* %15, %struct.BMEditSelection** %ese, align 8, !dbg !6381
  br label %while.cond, !dbg !6364, !llvm.loop !6382

while.end:                                        ; preds = %while.cond
  br label %if.end7, !dbg !6384

if.end7:                                          ; preds = %while.end, %entry
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6385
  %selectmode8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 12, !dbg !6387
  %17 = load i16, i16* %selectmode8, align 4, !dbg !6387
  %conv9 = sext i16 %17 to i32, !dbg !6385
  %and10 = and i32 %conv9, 2, !dbg !6388
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6388
  br i1 %tobool11, label %if.end29, label %if.then12, !dbg !6389

if.then12:                                        ; preds = %if.end7
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6390
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %18, i32 0, i32 0, !dbg !6392
  %19 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !6392
  %selected14 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %19, i32 0, i32 32, !dbg !6393
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected14, i32 0, i32 0, !dbg !6394
  %20 = load i8*, i8** %first15, align 8, !dbg !6394
  %21 = bitcast i8* %20 to %struct.BMEditSelection*, !dbg !6390
  store %struct.BMEditSelection* %21, %struct.BMEditSelection** %ese, align 8, !dbg !6395
  br label %while.cond16, !dbg !6396

while.cond16:                                     ; preds = %if.end27, %if.then12
  %22 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6397
  %tobool17 = icmp ne %struct.BMEditSelection* %22, null, !dbg !6396
  br i1 %tobool17, label %while.body18, label %while.end28, !dbg !6396

while.body18:                                     ; preds = %while.cond16
  %23 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6398
  %next19 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %23, i32 0, i32 0, !dbg !6400
  %24 = load %struct.BMEditSelection*, %struct.BMEditSelection** %next19, align 8, !dbg !6400
  store %struct.BMEditSelection* %24, %struct.BMEditSelection** %nextese, align 8, !dbg !6401
  %25 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6402
  %htype20 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %25, i32 0, i32 3, !dbg !6404
  %26 = load i8, i8* %htype20, align 8, !dbg !6404
  %conv21 = zext i8 %26 to i32, !dbg !6402
  %cmp22 = icmp eq i32 %conv21, 2, !dbg !6405
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !6406

if.then24:                                        ; preds = %while.body18
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6407
  %bm25 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !6408
  %28 = load %struct.BMesh*, %struct.BMesh** %bm25, align 8, !dbg !6408
  %selected26 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %28, i32 0, i32 32, !dbg !6409
  %29 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6410
  %30 = bitcast %struct.BMEditSelection* %29 to i8*, !dbg !6410
  call void @BLI_freelinkN(%struct.ListBase* %selected26, i8* %30), !dbg !6411
  br label %if.end27, !dbg !6411

if.end27:                                         ; preds = %if.then24, %while.body18
  %31 = load %struct.BMEditSelection*, %struct.BMEditSelection** %nextese, align 8, !dbg !6412
  store %struct.BMEditSelection* %31, %struct.BMEditSelection** %ese, align 8, !dbg !6413
  br label %while.cond16, !dbg !6396, !llvm.loop !6414

while.end28:                                      ; preds = %while.cond16
  br label %if.end29, !dbg !6416

if.end29:                                         ; preds = %while.end28, %if.end7
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6417
  %selectmode30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 12, !dbg !6419
  %33 = load i16, i16* %selectmode30, align 4, !dbg !6419
  %conv31 = sext i16 %33 to i32, !dbg !6417
  %and32 = and i32 %conv31, 4, !dbg !6420
  %tobool33 = icmp ne i32 %and32, 0, !dbg !6420
  br i1 %tobool33, label %if.end51, label %if.then34, !dbg !6421

if.then34:                                        ; preds = %if.end29
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6422
  %bm35 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %34, i32 0, i32 0, !dbg !6424
  %35 = load %struct.BMesh*, %struct.BMesh** %bm35, align 8, !dbg !6424
  %selected36 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %35, i32 0, i32 32, !dbg !6425
  %first37 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected36, i32 0, i32 0, !dbg !6426
  %36 = load i8*, i8** %first37, align 8, !dbg !6426
  %37 = bitcast i8* %36 to %struct.BMEditSelection*, !dbg !6422
  store %struct.BMEditSelection* %37, %struct.BMEditSelection** %ese, align 8, !dbg !6427
  br label %while.cond38, !dbg !6428

while.cond38:                                     ; preds = %if.end49, %if.then34
  %38 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6429
  %tobool39 = icmp ne %struct.BMEditSelection* %38, null, !dbg !6428
  br i1 %tobool39, label %while.body40, label %while.end50, !dbg !6428

while.body40:                                     ; preds = %while.cond38
  %39 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6430
  %next41 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %39, i32 0, i32 0, !dbg !6432
  %40 = load %struct.BMEditSelection*, %struct.BMEditSelection** %next41, align 8, !dbg !6432
  store %struct.BMEditSelection* %40, %struct.BMEditSelection** %nextese, align 8, !dbg !6433
  %41 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6434
  %htype42 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %41, i32 0, i32 3, !dbg !6436
  %42 = load i8, i8* %htype42, align 8, !dbg !6436
  %conv43 = zext i8 %42 to i32, !dbg !6434
  %cmp44 = icmp eq i32 %conv43, 8, !dbg !6437
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !6438

if.then46:                                        ; preds = %while.body40
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6439
  %bm47 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %43, i32 0, i32 0, !dbg !6440
  %44 = load %struct.BMesh*, %struct.BMesh** %bm47, align 8, !dbg !6440
  %selected48 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %44, i32 0, i32 32, !dbg !6441
  %45 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !6442
  %46 = bitcast %struct.BMEditSelection* %45 to i8*, !dbg !6442
  call void @BLI_freelinkN(%struct.ListBase* %selected48, i8* %46), !dbg !6443
  br label %if.end49, !dbg !6443

if.end49:                                         ; preds = %if.then46, %while.body40
  %47 = load %struct.BMEditSelection*, %struct.BMEditSelection** %nextese, align 8, !dbg !6444
  store %struct.BMEditSelection* %47, %struct.BMEditSelection** %ese, align 8, !dbg !6445
  br label %while.cond38, !dbg !6428, !llvm.loop !6446

while.end50:                                      ; preds = %while.cond38
  br label %if.end51, !dbg !6448

if.end51:                                         ; preds = %while.end50, %if.end29
  ret void, !dbg !6449
}

declare dso_local void @EDBM_select_flush(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_selectmode_convert(%struct.BMEditMesh* %em, i16 signext %selectmode_old, i16 signext %selectmode_new) #0 !dbg !6450 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %selectmode_old.addr = alloca i16, align 2
  %selectmode_new.addr = alloca i16, align 2
  %bm = alloca %struct.BMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6454, metadata !DIExpression()), !dbg !6455
  store i16 %selectmode_old, i16* %selectmode_old.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode_old.addr, metadata !6456, metadata !DIExpression()), !dbg !6457
  store i16 %selectmode_new, i16* %selectmode_new.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode_new.addr, metadata !6458, metadata !DIExpression()), !dbg !6459
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !6460, metadata !DIExpression()), !dbg !6461
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6462
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !6463
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6463
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !6461
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !6464, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6470, metadata !DIExpression()), !dbg !6471
  %2 = load i16, i16* %selectmode_old.addr, align 2, !dbg !6472
  %conv = sext i16 %2 to i32, !dbg !6472
  %cmp = icmp eq i32 %conv, 1, !dbg !6474
  br i1 %cmp, label %if.then, label %if.else54, !dbg !6475

if.then:                                          ; preds = %entry
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6476
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 4, !dbg !6479
  %4 = load i32, i32* %totvertsel, align 8, !dbg !6479
  %cmp3 = icmp eq i32 %4, 0, !dbg !6480
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !6481

if.then5:                                         ; preds = %if.then
  br label %if.end53, !dbg !6482

if.else:                                          ; preds = %if.then
  %5 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6484
  %conv6 = sext i16 %5 to i32, !dbg !6484
  %cmp7 = icmp eq i32 %conv6, 2, !dbg !6486
  br i1 %cmp7, label %if.then9, label %if.else24, !dbg !6487

if.then9:                                         ; preds = %if.else
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6488
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 2, i8* null), !dbg !6488
  %7 = bitcast i8* %call to %struct.BMEdge*, !dbg !6488
  store %struct.BMEdge* %7, %struct.BMEdge** %eed, align 8, !dbg !6488
  br label %for.cond, !dbg !6488

for.cond:                                         ; preds = %for.inc, %if.then9
  %8 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6491
  %tobool = icmp ne %struct.BMEdge* %8, null, !dbg !6488
  br i1 %tobool, label %for.body, label %for.end, !dbg !6488

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6493
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %9, i32 0, i32 0, !dbg !6493
  %10 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6493
  %call10 = call zeroext i8 @BM_edge_is_any_vert_flag_test(%struct.BMEdge* %10, i8 zeroext 1), !dbg !6493
  %conv11 = zext i8 %call10 to i32, !dbg !6493
  call void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext 16, i32 %conv11), !dbg !6493
  br label %for.inc, !dbg !6495

for.inc:                                          ; preds = %for.body
  %call12 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6491
  %11 = bitcast i8* %call12 to %struct.BMEdge*, !dbg !6491
  store %struct.BMEdge* %11, %struct.BMEdge** %eed, align 8, !dbg !6491
  br label %for.cond, !dbg !6491, !llvm.loop !6496

for.end:                                          ; preds = %for.cond
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6498
  %call13 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %12, i8 zeroext 2, i8* null), !dbg !6498
  %13 = bitcast i8* %call13 to %struct.BMEdge*, !dbg !6498
  store %struct.BMEdge* %13, %struct.BMEdge** %eed, align 8, !dbg !6498
  br label %for.cond14, !dbg !6498

for.cond14:                                       ; preds = %for.inc21, %for.end
  %14 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6500
  %tobool15 = icmp ne %struct.BMEdge* %14, null, !dbg !6498
  br i1 %tobool15, label %for.body16, label %for.end23, !dbg !6498

for.body16:                                       ; preds = %for.cond14
  %15 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6502
  %head17 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %15, i32 0, i32 0, !dbg !6502
  %call18 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head17, i8 zeroext 16), !dbg !6502
  %tobool19 = icmp ne i8 %call18, 0, !dbg !6502
  br i1 %tobool19, label %if.then20, label %if.end, !dbg !6505

if.then20:                                        ; preds = %for.body16
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6506
  %17 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6508
  call void @BM_edge_select_set(%struct.BMesh* %16, %struct.BMEdge* %17, i8 zeroext 1), !dbg !6509
  br label %if.end, !dbg !6510

if.end:                                           ; preds = %if.then20, %for.body16
  br label %for.inc21, !dbg !6511

for.inc21:                                        ; preds = %if.end
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6500
  %18 = bitcast i8* %call22 to %struct.BMEdge*, !dbg !6500
  store %struct.BMEdge* %18, %struct.BMEdge** %eed, align 8, !dbg !6500
  br label %for.cond14, !dbg !6500, !llvm.loop !6512

for.end23:                                        ; preds = %for.cond14
  br label %if.end52, !dbg !6514

if.else24:                                        ; preds = %if.else
  %19 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6515
  %conv25 = sext i16 %19 to i32, !dbg !6515
  %cmp26 = icmp eq i32 %conv25, 4, !dbg !6517
  br i1 %cmp26, label %if.then28, label %if.end51, !dbg !6518

if.then28:                                        ; preds = %if.else24
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6519
  %call29 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %20, i8 zeroext 3, i8* null), !dbg !6519
  %21 = bitcast i8* %call29 to %struct.BMFace*, !dbg !6519
  store %struct.BMFace* %21, %struct.BMFace** %efa, align 8, !dbg !6519
  br label %for.cond30, !dbg !6519

for.cond30:                                       ; preds = %for.inc36, %if.then28
  %22 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6522
  %tobool31 = icmp ne %struct.BMFace* %22, null, !dbg !6519
  br i1 %tobool31, label %for.body32, label %for.end38, !dbg !6519

for.body32:                                       ; preds = %for.cond30
  %23 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6524
  %head33 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %23, i32 0, i32 0, !dbg !6524
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6524
  %call34 = call zeroext i8 @BM_face_is_any_vert_flag_test(%struct.BMFace* %24, i8 zeroext 1), !dbg !6524
  %conv35 = zext i8 %call34 to i32, !dbg !6524
  call void @_bm_elem_flag_set(%struct.BMHeader* %head33, i8 zeroext 16, i32 %conv35), !dbg !6524
  br label %for.inc36, !dbg !6526

for.inc36:                                        ; preds = %for.body32
  %call37 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6522
  %25 = bitcast i8* %call37 to %struct.BMFace*, !dbg !6522
  store %struct.BMFace* %25, %struct.BMFace** %efa, align 8, !dbg !6522
  br label %for.cond30, !dbg !6522, !llvm.loop !6527

for.end38:                                        ; preds = %for.cond30
  %26 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6529
  %call39 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %26, i8 zeroext 3, i8* null), !dbg !6529
  %27 = bitcast i8* %call39 to %struct.BMFace*, !dbg !6529
  store %struct.BMFace* %27, %struct.BMFace** %efa, align 8, !dbg !6529
  br label %for.cond40, !dbg !6529

for.cond40:                                       ; preds = %for.inc48, %for.end38
  %28 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6531
  %tobool41 = icmp ne %struct.BMFace* %28, null, !dbg !6529
  br i1 %tobool41, label %for.body42, label %for.end50, !dbg !6529

for.body42:                                       ; preds = %for.cond40
  %29 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6533
  %head43 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %29, i32 0, i32 0, !dbg !6533
  %call44 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head43, i8 zeroext 16), !dbg !6533
  %tobool45 = icmp ne i8 %call44, 0, !dbg !6533
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !6536

if.then46:                                        ; preds = %for.body42
  %30 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6537
  %31 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6539
  call void @BM_face_select_set(%struct.BMesh* %30, %struct.BMFace* %31, i8 zeroext 1), !dbg !6540
  br label %if.end47, !dbg !6541

if.end47:                                         ; preds = %if.then46, %for.body42
  br label %for.inc48, !dbg !6542

for.inc48:                                        ; preds = %if.end47
  %call49 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6531
  %32 = bitcast i8* %call49 to %struct.BMFace*, !dbg !6531
  store %struct.BMFace* %32, %struct.BMFace** %efa, align 8, !dbg !6531
  br label %for.cond40, !dbg !6531, !llvm.loop !6543

for.end50:                                        ; preds = %for.cond40
  br label %if.end51, !dbg !6545

if.end51:                                         ; preds = %for.end50, %if.else24
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %for.end23
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then5
  br label %if.end153, !dbg !6546

if.else54:                                        ; preds = %entry
  %33 = load i16, i16* %selectmode_old.addr, align 2, !dbg !6547
  %conv55 = sext i16 %33 to i32, !dbg !6547
  %cmp56 = icmp eq i32 %conv55, 2, !dbg !6549
  br i1 %cmp56, label %if.then58, label %if.else108, !dbg !6550

if.then58:                                        ; preds = %if.else54
  %34 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6551
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %34, i32 0, i32 5, !dbg !6554
  %35 = load i32, i32* %totedgesel, align 4, !dbg !6554
  %cmp59 = icmp eq i32 %35, 0, !dbg !6555
  br i1 %cmp59, label %if.then61, label %if.else62, !dbg !6556

if.then61:                                        ; preds = %if.then58
  br label %if.end107, !dbg !6557

if.else62:                                        ; preds = %if.then58
  %36 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6559
  %conv63 = sext i16 %36 to i32, !dbg !6559
  %cmp64 = icmp eq i32 %conv63, 4, !dbg !6561
  br i1 %cmp64, label %if.then66, label %if.else89, !dbg !6562

if.then66:                                        ; preds = %if.else62
  %37 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6563
  %call67 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %37, i8 zeroext 3, i8* null), !dbg !6563
  %38 = bitcast i8* %call67 to %struct.BMFace*, !dbg !6563
  store %struct.BMFace* %38, %struct.BMFace** %efa, align 8, !dbg !6563
  br label %for.cond68, !dbg !6563

for.cond68:                                       ; preds = %for.inc74, %if.then66
  %39 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6566
  %tobool69 = icmp ne %struct.BMFace* %39, null, !dbg !6563
  br i1 %tobool69, label %for.body70, label %for.end76, !dbg !6563

for.body70:                                       ; preds = %for.cond68
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6568
  %head71 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %40, i32 0, i32 0, !dbg !6568
  %41 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6568
  %call72 = call zeroext i8 @BM_face_is_any_edge_flag_test(%struct.BMFace* %41, i8 zeroext 1), !dbg !6568
  %conv73 = zext i8 %call72 to i32, !dbg !6568
  call void @_bm_elem_flag_set(%struct.BMHeader* %head71, i8 zeroext 16, i32 %conv73), !dbg !6568
  br label %for.inc74, !dbg !6570

for.inc74:                                        ; preds = %for.body70
  %call75 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6566
  %42 = bitcast i8* %call75 to %struct.BMFace*, !dbg !6566
  store %struct.BMFace* %42, %struct.BMFace** %efa, align 8, !dbg !6566
  br label %for.cond68, !dbg !6566, !llvm.loop !6571

for.end76:                                        ; preds = %for.cond68
  %43 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6573
  %call77 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %43, i8 zeroext 3, i8* null), !dbg !6573
  %44 = bitcast i8* %call77 to %struct.BMFace*, !dbg !6573
  store %struct.BMFace* %44, %struct.BMFace** %efa, align 8, !dbg !6573
  br label %for.cond78, !dbg !6573

for.cond78:                                       ; preds = %for.inc86, %for.end76
  %45 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6575
  %tobool79 = icmp ne %struct.BMFace* %45, null, !dbg !6573
  br i1 %tobool79, label %for.body80, label %for.end88, !dbg !6573

for.body80:                                       ; preds = %for.cond78
  %46 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6577
  %head81 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %46, i32 0, i32 0, !dbg !6577
  %call82 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head81, i8 zeroext 16), !dbg !6577
  %tobool83 = icmp ne i8 %call82, 0, !dbg !6577
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !6580

if.then84:                                        ; preds = %for.body80
  %47 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6581
  %48 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6583
  call void @BM_face_select_set(%struct.BMesh* %47, %struct.BMFace* %48, i8 zeroext 1), !dbg !6584
  br label %if.end85, !dbg !6585

if.end85:                                         ; preds = %if.then84, %for.body80
  br label %for.inc86, !dbg !6586

for.inc86:                                        ; preds = %if.end85
  %call87 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6575
  %49 = bitcast i8* %call87 to %struct.BMFace*, !dbg !6575
  store %struct.BMFace* %49, %struct.BMFace** %efa, align 8, !dbg !6575
  br label %for.cond78, !dbg !6575, !llvm.loop !6587

for.end88:                                        ; preds = %for.cond78
  br label %if.end106, !dbg !6589

if.else89:                                        ; preds = %if.else62
  %50 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6590
  %conv90 = sext i16 %50 to i32, !dbg !6590
  %cmp91 = icmp eq i32 %conv90, 1, !dbg !6592
  br i1 %cmp91, label %if.then93, label %if.end105, !dbg !6593

if.then93:                                        ; preds = %if.else89
  %51 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6594
  %call94 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %51, i8 zeroext 1, i8* null), !dbg !6594
  %52 = bitcast i8* %call94 to %struct.BMVert*, !dbg !6594
  store %struct.BMVert* %52, %struct.BMVert** %eve, align 8, !dbg !6594
  br label %for.cond95, !dbg !6594

for.cond95:                                       ; preds = %for.inc102, %if.then93
  %53 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6597
  %tobool96 = icmp ne %struct.BMVert* %53, null, !dbg !6594
  br i1 %tobool96, label %for.body97, label %for.end104, !dbg !6594

for.body97:                                       ; preds = %for.cond95
  %54 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6599
  %call98 = call zeroext i8 @BM_vert_is_all_edge_flag_test(%struct.BMVert* %54, i8 zeroext 1, i8 zeroext 1), !dbg !6602
  %tobool99 = icmp ne i8 %call98, 0, !dbg !6602
  br i1 %tobool99, label %if.end101, label %if.then100, !dbg !6603

if.then100:                                       ; preds = %for.body97
  %55 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6604
  %56 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6606
  call void @BM_vert_select_set(%struct.BMesh* %55, %struct.BMVert* %56, i8 zeroext 0), !dbg !6607
  br label %if.end101, !dbg !6608

if.end101:                                        ; preds = %if.then100, %for.body97
  br label %for.inc102, !dbg !6609

for.inc102:                                       ; preds = %if.end101
  %call103 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6597
  %57 = bitcast i8* %call103 to %struct.BMVert*, !dbg !6597
  store %struct.BMVert* %57, %struct.BMVert** %eve, align 8, !dbg !6597
  br label %for.cond95, !dbg !6597, !llvm.loop !6610

for.end104:                                       ; preds = %for.cond95
  %58 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6612
  call void @BM_mesh_deselect_flush(%struct.BMesh* %58), !dbg !6613
  br label %if.end105, !dbg !6614

if.end105:                                        ; preds = %for.end104, %if.else89
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %for.end88
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then61
  br label %if.end152, !dbg !6615

if.else108:                                       ; preds = %if.else54
  %59 = load i16, i16* %selectmode_old.addr, align 2, !dbg !6616
  %conv109 = sext i16 %59 to i32, !dbg !6616
  %cmp110 = icmp eq i32 %conv109, 4, !dbg !6618
  br i1 %cmp110, label %if.then112, label %if.end151, !dbg !6619

if.then112:                                       ; preds = %if.else108
  %60 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6620
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %60, i32 0, i32 6, !dbg !6623
  %61 = load i32, i32* %totfacesel, align 8, !dbg !6623
  %cmp113 = icmp eq i32 %61, 0, !dbg !6624
  br i1 %cmp113, label %if.then115, label %if.else116, !dbg !6625

if.then115:                                       ; preds = %if.then112
  br label %if.end150, !dbg !6626

if.else116:                                       ; preds = %if.then112
  %62 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6628
  %conv117 = sext i16 %62 to i32, !dbg !6628
  %cmp118 = icmp eq i32 %conv117, 2, !dbg !6630
  br i1 %cmp118, label %if.then120, label %if.else132, !dbg !6631

if.then120:                                       ; preds = %if.else116
  %63 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6632
  %call121 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %63, i8 zeroext 2, i8* null), !dbg !6632
  %64 = bitcast i8* %call121 to %struct.BMEdge*, !dbg !6632
  store %struct.BMEdge* %64, %struct.BMEdge** %eed, align 8, !dbg !6632
  br label %for.cond122, !dbg !6632

for.cond122:                                      ; preds = %for.inc129, %if.then120
  %65 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6635
  %tobool123 = icmp ne %struct.BMEdge* %65, null, !dbg !6632
  br i1 %tobool123, label %for.body124, label %for.end131, !dbg !6632

for.body124:                                      ; preds = %for.cond122
  %66 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6637
  %call125 = call zeroext i8 @BM_edge_is_all_face_flag_test(%struct.BMEdge* %66, i8 zeroext 1, i8 zeroext 1), !dbg !6640
  %tobool126 = icmp ne i8 %call125, 0, !dbg !6640
  br i1 %tobool126, label %if.end128, label %if.then127, !dbg !6641

if.then127:                                       ; preds = %for.body124
  %67 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6642
  %68 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !6644
  call void @BM_edge_select_set(%struct.BMesh* %67, %struct.BMEdge* %68, i8 zeroext 0), !dbg !6645
  br label %if.end128, !dbg !6646

if.end128:                                        ; preds = %if.then127, %for.body124
  br label %for.inc129, !dbg !6647

for.inc129:                                       ; preds = %if.end128
  %call130 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6635
  %69 = bitcast i8* %call130 to %struct.BMEdge*, !dbg !6635
  store %struct.BMEdge* %69, %struct.BMEdge** %eed, align 8, !dbg !6635
  br label %for.cond122, !dbg !6635, !llvm.loop !6648

for.end131:                                       ; preds = %for.cond122
  br label %if.end149, !dbg !6650

if.else132:                                       ; preds = %if.else116
  %70 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6651
  %conv133 = sext i16 %70 to i32, !dbg !6651
  %cmp134 = icmp eq i32 %conv133, 1, !dbg !6653
  br i1 %cmp134, label %if.then136, label %if.end148, !dbg !6654

if.then136:                                       ; preds = %if.else132
  %71 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6655
  %call137 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %71, i8 zeroext 1, i8* null), !dbg !6655
  %72 = bitcast i8* %call137 to %struct.BMVert*, !dbg !6655
  store %struct.BMVert* %72, %struct.BMVert** %eve, align 8, !dbg !6655
  br label %for.cond138, !dbg !6655

for.cond138:                                      ; preds = %for.inc145, %if.then136
  %73 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6658
  %tobool139 = icmp ne %struct.BMVert* %73, null, !dbg !6655
  br i1 %tobool139, label %for.body140, label %for.end147, !dbg !6655

for.body140:                                      ; preds = %for.cond138
  %74 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6660
  %call141 = call zeroext i8 @BM_vert_is_all_face_flag_test(%struct.BMVert* %74, i8 zeroext 1, i8 zeroext 1), !dbg !6663
  %tobool142 = icmp ne i8 %call141, 0, !dbg !6663
  br i1 %tobool142, label %if.end144, label %if.then143, !dbg !6664

if.then143:                                       ; preds = %for.body140
  %75 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6665
  %76 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6667
  call void @BM_vert_select_set(%struct.BMesh* %75, %struct.BMVert* %76, i8 zeroext 0), !dbg !6668
  br label %if.end144, !dbg !6669

if.end144:                                        ; preds = %if.then143, %for.body140
  br label %for.inc145, !dbg !6670

for.inc145:                                       ; preds = %if.end144
  %call146 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6658
  %77 = bitcast i8* %call146 to %struct.BMVert*, !dbg !6658
  store %struct.BMVert* %77, %struct.BMVert** %eve, align 8, !dbg !6658
  br label %for.cond138, !dbg !6658, !llvm.loop !6671

for.end147:                                       ; preds = %for.cond138
  %78 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6673
  call void @BM_mesh_deselect_flush(%struct.BMesh* %78), !dbg !6674
  br label %if.end148, !dbg !6675

if.end148:                                        ; preds = %for.end147, %if.else132
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %for.end131
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then115
  br label %if.end151, !dbg !6676

if.end151:                                        ; preds = %if.end150, %if.else108
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end107
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end53
  ret void, !dbg !6677
}

declare dso_local zeroext i8 @BM_edge_is_any_vert_flag_test(%struct.BMEdge*, i8 zeroext) #2

declare dso_local zeroext i8 @BM_face_is_any_vert_flag_test(%struct.BMFace*, i8 zeroext) #2

declare dso_local zeroext i8 @BM_face_is_any_edge_flag_test(%struct.BMFace*, i8 zeroext) #2

declare dso_local zeroext i8 @BM_vert_is_all_edge_flag_test(%struct.BMVert*, i8 zeroext, i8 zeroext) #2

declare dso_local void @BM_mesh_deselect_flush(%struct.BMesh*) #2

declare dso_local zeroext i8 @BM_edge_is_all_face_flag_test(%struct.BMEdge*, i8 zeroext, i8 zeroext) #2

declare dso_local zeroext i8 @BM_vert_is_all_face_flag_test(%struct.BMVert*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_selectmode_toggle(%struct.bContext* %C, i16 signext %selectmode_new, i32 %action, i8 zeroext %use_extend, i8 zeroext %use_expand) #0 !dbg !6678 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %selectmode_new.addr = alloca i16, align 2
  %action.addr = alloca i32, align 4
  %use_extend.addr = alloca i8, align 1
  %use_expand.addr = alloca i8, align 1
  %ts = alloca %struct.ToolSettings*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ret = alloca i8, align 1
  %selmode_max = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  store i16 %selectmode_new, i16* %selectmode_new.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode_new.addr, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  store i8 %use_extend, i8* %use_extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_extend.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  store i8 %use_expand, i8* %use_expand.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_expand.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !6691, metadata !DIExpression()), !dbg !6692
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6693
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !6694
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !6692
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6695, metadata !DIExpression()), !dbg !6696
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6697
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !6698
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !6696
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6699, metadata !DIExpression()), !dbg !6700
  store %struct.BMEditMesh* null, %struct.BMEditMesh** %em, align 8, !dbg !6700
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6701, metadata !DIExpression()), !dbg !6702
  store i8 0, i8* %ret, align 1, !dbg !6702
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6703
  %tobool = icmp ne %struct.Object* %2, null, !dbg !6703
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6705

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6706
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !6707
  %4 = load i16, i16* %type, align 8, !dbg !6707
  %conv = sext i16 %4 to i32, !dbg !6706
  %cmp = icmp eq i32 %conv, 1, !dbg !6708
  br i1 %cmp, label %if.then, label %if.end, !dbg !6709

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6710
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !6712
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !6713
  br label %if.end, !dbg !6714

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6715
  %cmp4 = icmp eq %struct.BMEditMesh* %6, null, !dbg !6717
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !6718

if.then6:                                         ; preds = %if.end
  %7 = load i8, i8* %ret, align 1, !dbg !6719
  store i8 %7, i8* %retval, align 1, !dbg !6721
  br label %return, !dbg !6721

if.end7:                                          ; preds = %if.end
  %8 = load i32, i32* %action.addr, align 4, !dbg !6722
  switch i32 %8, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb8
    i32 1, label %sw.bb20
    i32 2, label %sw.bb33
  ], !dbg !6723

sw.bb:                                            ; preds = %if.end7
  br label %sw.epilog, !dbg !6724

sw.bb8:                                           ; preds = %if.end7
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6726
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 12, !dbg !6728
  %10 = load i16, i16* %selectmode, align 4, !dbg !6728
  %conv9 = sext i16 %10 to i32, !dbg !6726
  %11 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6729
  %conv10 = sext i16 %11 to i32, !dbg !6729
  %and = and i32 %conv9, %conv10, !dbg !6730
  %cmp11 = icmp eq i32 %and, 0, !dbg !6731
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6732

if.then13:                                        ; preds = %sw.bb8
  store i8 0, i8* %retval, align 1, !dbg !6733
  br label %return, !dbg !6733

if.end14:                                         ; preds = %sw.bb8
  %12 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6735
  %conv15 = sext i16 %12 to i32, !dbg !6735
  %neg = xor i32 %conv15, -1, !dbg !6736
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6737
  %selectmode16 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 12, !dbg !6738
  %14 = load i16, i16* %selectmode16, align 4, !dbg !6739
  %conv17 = sext i16 %14 to i32, !dbg !6739
  %and18 = and i32 %conv17, %neg, !dbg !6739
  %conv19 = trunc i32 %and18 to i16, !dbg !6739
  store i16 %conv19, i16* %selectmode16, align 4, !dbg !6739
  br label %sw.epilog, !dbg !6740

sw.bb20:                                          ; preds = %if.end7
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6741
  %selectmode21 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 12, !dbg !6743
  %16 = load i16, i16* %selectmode21, align 4, !dbg !6743
  %conv22 = sext i16 %16 to i32, !dbg !6741
  %17 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6744
  %conv23 = sext i16 %17 to i32, !dbg !6744
  %and24 = and i32 %conv22, %conv23, !dbg !6745
  %cmp25 = icmp ne i32 %and24, 0, !dbg !6746
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6747

if.then27:                                        ; preds = %sw.bb20
  store i8 0, i8* %retval, align 1, !dbg !6748
  br label %return, !dbg !6748

if.end28:                                         ; preds = %sw.bb20
  %18 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6750
  %conv29 = sext i16 %18 to i32, !dbg !6750
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6751
  %selectmode30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 12, !dbg !6752
  %20 = load i16, i16* %selectmode30, align 4, !dbg !6753
  %conv31 = sext i16 %20 to i32, !dbg !6753
  %or = or i32 %conv31, %conv29, !dbg !6753
  %conv32 = trunc i32 %or to i16, !dbg !6753
  store i16 %conv32, i16* %selectmode30, align 4, !dbg !6753
  br label %sw.epilog, !dbg !6754

sw.bb33:                                          ; preds = %if.end7
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6755
  %selectmode34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 12, !dbg !6757
  %22 = load i16, i16* %selectmode34, align 4, !dbg !6757
  %conv35 = sext i16 %22 to i32, !dbg !6755
  %23 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6758
  %conv36 = sext i16 %23 to i32, !dbg !6758
  %cmp37 = icmp eq i32 %conv35, %conv36, !dbg !6759
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6760

if.then39:                                        ; preds = %sw.bb33
  store i8 0, i8* %retval, align 1, !dbg !6761
  br label %return, !dbg !6761

if.end40:                                         ; preds = %sw.bb33
  %24 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6763
  %conv41 = sext i16 %24 to i32, !dbg !6763
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6764
  %selectmode42 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 12, !dbg !6765
  %26 = load i16, i16* %selectmode42, align 4, !dbg !6766
  %conv43 = sext i16 %26 to i32, !dbg !6766
  %xor = xor i32 %conv43, %conv41, !dbg !6766
  %conv44 = trunc i32 %xor to i16, !dbg !6766
  store i16 %conv44, i16* %selectmode42, align 4, !dbg !6766
  br label %sw.epilog, !dbg !6767

sw.default:                                       ; preds = %if.end7
  br label %sw.epilog, !dbg !6768

sw.epilog:                                        ; preds = %sw.default, %if.end40, %if.end28, %if.end14, %sw.bb
  %27 = load i8, i8* %use_extend.addr, align 1, !dbg !6769
  %conv45 = zext i8 %27 to i32, !dbg !6769
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !6771
  br i1 %cmp46, label %if.then52, label %lor.lhs.false, !dbg !6772

lor.lhs.false:                                    ; preds = %sw.epilog
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6773
  %selectmode48 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %28, i32 0, i32 12, !dbg !6774
  %29 = load i16, i16* %selectmode48, align 4, !dbg !6774
  %conv49 = sext i16 %29 to i32, !dbg !6773
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !6775
  br i1 %cmp50, label %if.then52, label %if.end58, !dbg !6776

if.then52:                                        ; preds = %lor.lhs.false, %sw.epilog
  %30 = load i8, i8* %use_expand.addr, align 1, !dbg !6777
  %tobool53 = icmp ne i8 %30, 0, !dbg !6777
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !6780

if.then54:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata i16* %selmode_max, metadata !6781, metadata !DIExpression()), !dbg !6783
  %31 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6784
  %selectmode55 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %31, i32 0, i32 8, !dbg !6785
  %32 = load i16, i16* %selectmode55, align 2, !dbg !6785
  %call56 = call zeroext i16 @highest_order_bit_s(i16 zeroext %32), !dbg !6786
  store i16 %call56, i16* %selmode_max, align 2, !dbg !6783
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6787
  %34 = load i16, i16* %selmode_max, align 2, !dbg !6788
  %35 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6789
  call void @EDBM_selectmode_convert(%struct.BMEditMesh* %33, i16 signext %34, i16 signext %35), !dbg !6790
  br label %if.end57, !dbg !6791

if.end57:                                         ; preds = %if.then54, %if.then52
  br label %if.end58, !dbg !6792

if.end58:                                         ; preds = %if.end57, %lor.lhs.false
  %36 = load i16, i16* %selectmode_new.addr, align 2, !dbg !6793
  %conv59 = sext i16 %36 to i32, !dbg !6793
  switch i32 %conv59, label %sw.default102 [
    i32 1, label %sw.bb60
    i32 2, label %sw.bb74
    i32 4, label %sw.bb88
  ], !dbg !6794

sw.bb60:                                          ; preds = %if.end58
  %37 = load i8, i8* %use_extend.addr, align 1, !dbg !6795
  %conv61 = zext i8 %37 to i32, !dbg !6795
  %cmp62 = icmp eq i32 %conv61, 0, !dbg !6798
  br i1 %cmp62, label %if.then69, label %lor.lhs.false64, !dbg !6799

lor.lhs.false64:                                  ; preds = %sw.bb60
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6800
  %selectmode65 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %38, i32 0, i32 12, !dbg !6801
  %39 = load i16, i16* %selectmode65, align 4, !dbg !6801
  %conv66 = sext i16 %39 to i32, !dbg !6800
  %cmp67 = icmp eq i32 %conv66, 0, !dbg !6802
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !6803

if.then69:                                        ; preds = %lor.lhs.false64, %sw.bb60
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6804
  %selectmode70 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %40, i32 0, i32 12, !dbg !6806
  store i16 1, i16* %selectmode70, align 4, !dbg !6807
  br label %if.end71, !dbg !6808

if.end71:                                         ; preds = %if.then69, %lor.lhs.false64
  %41 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6809
  %selectmode72 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %41, i32 0, i32 12, !dbg !6810
  %42 = load i16, i16* %selectmode72, align 4, !dbg !6810
  %43 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6811
  %selectmode73 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %43, i32 0, i32 8, !dbg !6812
  store i16 %42, i16* %selectmode73, align 2, !dbg !6813
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6814
  call void @EDBM_selectmode_set(%struct.BMEditMesh* %44), !dbg !6815
  store i8 1, i8* %ret, align 1, !dbg !6816
  br label %sw.epilog103, !dbg !6817

sw.bb74:                                          ; preds = %if.end58
  %45 = load i8, i8* %use_extend.addr, align 1, !dbg !6818
  %conv75 = zext i8 %45 to i32, !dbg !6818
  %cmp76 = icmp eq i32 %conv75, 0, !dbg !6820
  br i1 %cmp76, label %if.then83, label %lor.lhs.false78, !dbg !6821

lor.lhs.false78:                                  ; preds = %sw.bb74
  %46 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6822
  %selectmode79 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %46, i32 0, i32 12, !dbg !6823
  %47 = load i16, i16* %selectmode79, align 4, !dbg !6823
  %conv80 = sext i16 %47 to i32, !dbg !6822
  %cmp81 = icmp eq i32 %conv80, 0, !dbg !6824
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !6825

if.then83:                                        ; preds = %lor.lhs.false78, %sw.bb74
  %48 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6826
  %selectmode84 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %48, i32 0, i32 12, !dbg !6828
  store i16 2, i16* %selectmode84, align 4, !dbg !6829
  br label %if.end85, !dbg !6830

if.end85:                                         ; preds = %if.then83, %lor.lhs.false78
  %49 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6831
  %selectmode86 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %49, i32 0, i32 12, !dbg !6832
  %50 = load i16, i16* %selectmode86, align 4, !dbg !6832
  %51 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6833
  %selectmode87 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %51, i32 0, i32 8, !dbg !6834
  store i16 %50, i16* %selectmode87, align 2, !dbg !6835
  %52 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6836
  call void @EDBM_selectmode_set(%struct.BMEditMesh* %52), !dbg !6837
  store i8 1, i8* %ret, align 1, !dbg !6838
  br label %sw.epilog103, !dbg !6839

sw.bb88:                                          ; preds = %if.end58
  %53 = load i8, i8* %use_extend.addr, align 1, !dbg !6840
  %conv89 = zext i8 %53 to i32, !dbg !6840
  %cmp90 = icmp eq i32 %conv89, 0, !dbg !6842
  br i1 %cmp90, label %if.then97, label %lor.lhs.false92, !dbg !6843

lor.lhs.false92:                                  ; preds = %sw.bb88
  %54 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6844
  %selectmode93 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %54, i32 0, i32 12, !dbg !6845
  %55 = load i16, i16* %selectmode93, align 4, !dbg !6845
  %conv94 = sext i16 %55 to i32, !dbg !6844
  %cmp95 = icmp eq i32 %conv94, 0, !dbg !6846
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !6847

if.then97:                                        ; preds = %lor.lhs.false92, %sw.bb88
  %56 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6848
  %selectmode98 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %56, i32 0, i32 12, !dbg !6850
  store i16 4, i16* %selectmode98, align 4, !dbg !6851
  br label %if.end99, !dbg !6852

if.end99:                                         ; preds = %if.then97, %lor.lhs.false92
  %57 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6853
  %selectmode100 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %57, i32 0, i32 12, !dbg !6854
  %58 = load i16, i16* %selectmode100, align 4, !dbg !6854
  %59 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !6855
  %selectmode101 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %59, i32 0, i32 8, !dbg !6856
  store i16 %58, i16* %selectmode101, align 2, !dbg !6857
  %60 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6858
  call void @EDBM_selectmode_set(%struct.BMEditMesh* %60), !dbg !6859
  store i8 1, i8* %ret, align 1, !dbg !6860
  br label %sw.epilog103, !dbg !6861

sw.default102:                                    ; preds = %if.end58
  br label %sw.epilog103, !dbg !6862

sw.epilog103:                                     ; preds = %sw.default102, %if.end99, %if.end85, %if.end71
  %61 = load i8, i8* %ret, align 1, !dbg !6863
  %conv104 = zext i8 %61 to i32, !dbg !6863
  %cmp105 = icmp eq i32 %conv104, 1, !dbg !6865
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !6866

if.then107:                                       ; preds = %sw.epilog103
  %62 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6867
  %63 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6869
  %data = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 19, !dbg !6870
  %64 = load i8*, i8** %data, align 8, !dbg !6870
  call void @WM_event_add_notifier(%struct.bContext* %62, i32 274333696, i8* %64), !dbg !6871
  call void @WM_main_add_notifier(i32 68091904, i8* null), !dbg !6872
  br label %if.end108, !dbg !6873

if.end108:                                        ; preds = %if.then107, %sw.epilog103
  %65 = load i8, i8* %ret, align 1, !dbg !6874
  store i8 %65, i8* %retval, align 1, !dbg !6875
  br label %return, !dbg !6875

return:                                           ; preds = %if.end108, %if.then39, %if.then27, %if.then13, %if.then6
  %66 = load i8, i8* %retval, align 1, !dbg !6876
  ret i8 %66, !dbg !6876
}

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @highest_order_bit_s(i16 zeroext %n) #0 !dbg !6877 {
entry:
  %n.addr = alloca i16, align 2
  store i16 %n, i16* %n.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %n.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  %0 = load i16, i16* %n.addr, align 2, !dbg !6883
  %conv = zext i16 %0 to i32, !dbg !6883
  %shr = ashr i32 %conv, 1, !dbg !6884
  %1 = load i16, i16* %n.addr, align 2, !dbg !6885
  %conv1 = zext i16 %1 to i32, !dbg !6885
  %or = or i32 %conv1, %shr, !dbg !6885
  %conv2 = trunc i32 %or to i16, !dbg !6885
  store i16 %conv2, i16* %n.addr, align 2, !dbg !6885
  %2 = load i16, i16* %n.addr, align 2, !dbg !6886
  %conv3 = zext i16 %2 to i32, !dbg !6886
  %shr4 = ashr i32 %conv3, 2, !dbg !6887
  %3 = load i16, i16* %n.addr, align 2, !dbg !6888
  %conv5 = zext i16 %3 to i32, !dbg !6888
  %or6 = or i32 %conv5, %shr4, !dbg !6888
  %conv7 = trunc i32 %or6 to i16, !dbg !6888
  store i16 %conv7, i16* %n.addr, align 2, !dbg !6888
  %4 = load i16, i16* %n.addr, align 2, !dbg !6889
  %conv8 = zext i16 %4 to i32, !dbg !6889
  %shr9 = ashr i32 %conv8, 4, !dbg !6890
  %5 = load i16, i16* %n.addr, align 2, !dbg !6891
  %conv10 = zext i16 %5 to i32, !dbg !6891
  %or11 = or i32 %conv10, %shr9, !dbg !6891
  %conv12 = trunc i32 %or11 to i16, !dbg !6891
  store i16 %conv12, i16* %n.addr, align 2, !dbg !6891
  %6 = load i16, i16* %n.addr, align 2, !dbg !6892
  %conv13 = zext i16 %6 to i32, !dbg !6892
  %shr14 = ashr i32 %conv13, 8, !dbg !6893
  %7 = load i16, i16* %n.addr, align 2, !dbg !6894
  %conv15 = zext i16 %7 to i32, !dbg !6894
  %or16 = or i32 %conv15, %shr14, !dbg !6894
  %conv17 = trunc i32 %or16 to i16, !dbg !6894
  store i16 %conv17, i16* %n.addr, align 2, !dbg !6894
  %8 = load i16, i16* %n.addr, align 2, !dbg !6895
  %conv18 = zext i16 %8 to i32, !dbg !6895
  %9 = load i16, i16* %n.addr, align 2, !dbg !6896
  %conv19 = zext i16 %9 to i32, !dbg !6896
  %shr20 = ashr i32 %conv19, 1, !dbg !6897
  %sub = sub nsw i32 %conv18, %shr20, !dbg !6898
  %conv21 = trunc i32 %sub to i16, !dbg !6899
  ret i16 %conv21, !dbg !6900
}

declare dso_local void @WM_main_add_notifier(i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_selectmode_disable(%struct.Scene* %scene, %struct.BMEditMesh* %em, i16 signext %selectmode_disable, i16 signext %selectmode_fallback) #0 !dbg !6901 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %selectmode_disable.addr = alloca i16, align 2
  %selectmode_fallback.addr = alloca i16, align 2
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  store i16 %selectmode_disable, i16* %selectmode_disable.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode_disable.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  store i16 %selectmode_fallback, i16* %selectmode_fallback.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %selectmode_fallback.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6912
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 12, !dbg !6914
  %1 = load i16, i16* %selectmode, align 4, !dbg !6914
  %conv = sext i16 %1 to i32, !dbg !6912
  %2 = load i16, i16* %selectmode_disable.addr, align 2, !dbg !6915
  %conv1 = sext i16 %2 to i32, !dbg !6915
  %and = and i32 %conv, %conv1, !dbg !6916
  %tobool = icmp ne i32 %and, 0, !dbg !6916
  br i1 %tobool, label %if.then, label %if.else15, !dbg !6917

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6918
  %selectmode2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 12, !dbg !6921
  %4 = load i16, i16* %selectmode2, align 4, !dbg !6921
  %conv3 = sext i16 %4 to i32, !dbg !6918
  %5 = load i16, i16* %selectmode_disable.addr, align 2, !dbg !6922
  %conv4 = sext i16 %5 to i32, !dbg !6922
  %cmp = icmp eq i32 %conv3, %conv4, !dbg !6923
  br i1 %cmp, label %if.then6, label %if.else, !dbg !6924

if.then6:                                         ; preds = %if.then
  %6 = load i16, i16* %selectmode_fallback.addr, align 2, !dbg !6925
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6927
  %selectmode7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 12, !dbg !6928
  store i16 %6, i16* %selectmode7, align 4, !dbg !6929
  br label %if.end, !dbg !6930

if.else:                                          ; preds = %if.then
  %8 = load i16, i16* %selectmode_disable.addr, align 2, !dbg !6931
  %conv8 = sext i16 %8 to i32, !dbg !6931
  %neg = xor i32 %conv8, -1, !dbg !6933
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6934
  %selectmode9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 12, !dbg !6935
  %10 = load i16, i16* %selectmode9, align 4, !dbg !6936
  %conv10 = sext i16 %10 to i32, !dbg !6936
  %and11 = and i32 %conv10, %neg, !dbg !6936
  %conv12 = trunc i32 %and11 to i16, !dbg !6936
  store i16 %conv12, i16* %selectmode9, align 4, !dbg !6936
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6937
  %selectmode13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 12, !dbg !6938
  %12 = load i16, i16* %selectmode13, align 4, !dbg !6938
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6939
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 20, !dbg !6940
  %14 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6940
  %selectmode14 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %14, i32 0, i32 8, !dbg !6941
  store i16 %12, i16* %selectmode14, align 2, !dbg !6942
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6943
  call void @EDBM_selectmode_set(%struct.BMEditMesh* %15), !dbg !6944
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6945
  %17 = bitcast %struct.Scene* %16 to i8*, !dbg !6945
  call void @WM_main_add_notifier(i32 68091904, i8* %17), !dbg !6946
  store i8 1, i8* %retval, align 1, !dbg !6947
  br label %return, !dbg !6947

if.else15:                                        ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6948
  br label %return, !dbg !6948

return:                                           ; preds = %if.else15, %if.end
  %18 = load i8, i8* %retval, align 1, !dbg !6950
  ret i8 %18, !dbg !6950
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_deselect_by_material(%struct.BMEditMesh* %em, i16 signext %index, i8 zeroext %select) #0 !dbg !6951 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %index.addr = alloca i16, align 2
  %select.addr = alloca i8, align 1
  %iter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !6962, metadata !DIExpression()), !dbg !6963
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6964
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !6964
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6964
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %1, i8 zeroext 3, i8* null), !dbg !6964
  %2 = bitcast i8* %call to %struct.BMFace*, !dbg !6964
  store %struct.BMFace* %2, %struct.BMFace** %efa, align 8, !dbg !6964
  br label %for.cond, !dbg !6964

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6966
  %tobool = icmp ne %struct.BMFace* %3, null, !dbg !6964
  br i1 %tobool, label %for.body, label %for.end, !dbg !6964

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6968
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %4, i32 0, i32 0, !dbg !6968
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !6968
  %tobool2 = icmp ne i8 %call1, 0, !dbg !6968
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6971

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6972

if.end:                                           ; preds = %for.body
  %5 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6973
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %5, i32 0, i32 5, !dbg !6975
  %6 = load i16, i16* %mat_nr, align 8, !dbg !6975
  %conv = sext i16 %6 to i32, !dbg !6973
  %7 = load i16, i16* %index.addr, align 2, !dbg !6976
  %conv3 = sext i16 %7 to i32, !dbg !6976
  %cmp = icmp eq i32 %conv, %conv3, !dbg !6977
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !6978

if.then5:                                         ; preds = %if.end
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6979
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !6981
  %9 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !6981
  %10 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6982
  %11 = load i8, i8* %select.addr, align 1, !dbg !6983
  call void @BM_face_select_set(%struct.BMesh* %9, %struct.BMFace* %10, i8 zeroext %11), !dbg !6984
  br label %if.end7, !dbg !6985

if.end7:                                          ; preds = %if.then5, %if.end
  br label %for.inc, !dbg !6986

for.inc:                                          ; preds = %if.end7, %if.then
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6966
  %12 = bitcast i8* %call8 to %struct.BMFace*, !dbg !6966
  store %struct.BMFace* %12, %struct.BMFace** %efa, align 8, !dbg !6966
  br label %for.cond, !dbg !6966, !llvm.loop !6987

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6989
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_select_toggle_all(%struct.BMEditMesh* %em) #0 !dbg !6990 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6991, metadata !DIExpression()), !dbg !6992
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6993
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !6995
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6995
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 4, !dbg !6996
  %2 = load i32, i32* %totvertsel, align 8, !dbg !6996
  %tobool = icmp ne i32 %2, 0, !dbg !6993
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6997

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6998
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !6999
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6999
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 5, !dbg !7000
  %5 = load i32, i32* %totedgesel, align 4, !dbg !7000
  %tobool2 = icmp ne i32 %5, 0, !dbg !6998
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !7001

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7002
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !7003
  %7 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !7003
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 6, !dbg !7004
  %8 = load i32, i32* %totfacesel, align 8, !dbg !7004
  %tobool5 = icmp ne i32 %8, 0, !dbg !7002
  br i1 %tobool5, label %if.then, label %if.else, !dbg !7005

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7006
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %9, i8 zeroext 1), !dbg !7007
  br label %if.end, !dbg !7007

if.else:                                          ; preds = %lor.lhs.false3
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7008
  call void @EDBM_flag_enable_all(%struct.BMEditMesh* %10, i8 zeroext 1), !dbg !7009
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7010
}

declare dso_local void @EDBM_flag_enable_all(%struct.BMEditMesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_select_swap(%struct.BMEditMesh* %em) #0 !dbg !7011 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !7016, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7020, metadata !DIExpression()), !dbg !7021
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7022
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !7024
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7024
  %selectmode = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 28, !dbg !7025
  %2 = load i16, i16* %selectmode, align 8, !dbg !7025
  %conv = sext i16 %2 to i32, !dbg !7022
  %and = and i32 %conv, 1, !dbg !7026
  %tobool = icmp ne i32 %and, 0, !dbg !7026
  br i1 %tobool, label %if.then, label %if.else, !dbg !7027

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7028
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !7028
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7028
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %4, i8 zeroext 1, i8* null), !dbg !7028
  %5 = bitcast i8* %call to %struct.BMVert*, !dbg !7028
  store %struct.BMVert* %5, %struct.BMVert** %eve, align 8, !dbg !7028
  br label %for.cond, !dbg !7028

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7031
  %tobool2 = icmp ne %struct.BMVert* %6, null, !dbg !7028
  br i1 %tobool2, label %for.body, label %for.end, !dbg !7028

for.body:                                         ; preds = %for.cond
  %7 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7033
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %7, i32 0, i32 0, !dbg !7033
  %call3 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !7033
  %tobool4 = icmp ne i8 %call3, 0, !dbg !7033
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !7036

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !7037

if.end:                                           ; preds = %for.body
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7038
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !7039
  %9 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !7039
  %10 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7040
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7041
  %head7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 0, !dbg !7041
  %call8 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head7, i8 zeroext 1), !dbg !7041
  %tobool9 = icmp ne i8 %call8, 0, !dbg !7042
  %lnot = xor i1 %tobool9, true, !dbg !7042
  %lnot.ext = zext i1 %lnot to i32, !dbg !7042
  %conv10 = trunc i32 %lnot.ext to i8, !dbg !7042
  call void @BM_vert_select_set(%struct.BMesh* %9, %struct.BMVert* %10, i8 zeroext %conv10), !dbg !7043
  br label %for.inc, !dbg !7044

for.inc:                                          ; preds = %if.end, %if.then5
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7031
  %12 = bitcast i8* %call11 to %struct.BMVert*, !dbg !7031
  store %struct.BMVert* %12, %struct.BMVert** %eve, align 8, !dbg !7031
  br label %for.cond, !dbg !7031, !llvm.loop !7045

for.end:                                          ; preds = %for.cond
  br label %if.end59, !dbg !7047

if.else:                                          ; preds = %entry
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7048
  %selectmode12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 12, !dbg !7050
  %14 = load i16, i16* %selectmode12, align 4, !dbg !7050
  %conv13 = sext i16 %14 to i32, !dbg !7048
  %and14 = and i32 %conv13, 2, !dbg !7051
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7051
  br i1 %tobool15, label %if.then16, label %if.else37, !dbg !7052

if.then16:                                        ; preds = %if.else
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7053
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !7053
  %16 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !7053
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 2, i8* null), !dbg !7053
  %17 = bitcast i8* %call18 to %struct.BMEdge*, !dbg !7053
  store %struct.BMEdge* %17, %struct.BMEdge** %eed, align 8, !dbg !7053
  br label %for.cond19, !dbg !7053

for.cond19:                                       ; preds = %for.inc34, %if.then16
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7056
  %tobool20 = icmp ne %struct.BMEdge* %18, null, !dbg !7053
  br i1 %tobool20, label %for.body21, label %for.end36, !dbg !7053

for.body21:                                       ; preds = %for.cond19
  %19 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7058
  %head22 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 0, !dbg !7058
  %call23 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head22, i8 zeroext 2), !dbg !7058
  %tobool24 = icmp ne i8 %call23, 0, !dbg !7058
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7061

if.then25:                                        ; preds = %for.body21
  br label %for.inc34, !dbg !7062

if.end26:                                         ; preds = %for.body21
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7063
  %bm27 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !7064
  %21 = load %struct.BMesh*, %struct.BMesh** %bm27, align 8, !dbg !7064
  %22 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7065
  %23 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7066
  %head28 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %23, i32 0, i32 0, !dbg !7066
  %call29 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head28, i8 zeroext 1), !dbg !7066
  %tobool30 = icmp ne i8 %call29, 0, !dbg !7067
  %lnot31 = xor i1 %tobool30, true, !dbg !7067
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !7067
  %conv33 = trunc i32 %lnot.ext32 to i8, !dbg !7067
  call void @BM_edge_select_set(%struct.BMesh* %21, %struct.BMEdge* %22, i8 zeroext %conv33), !dbg !7068
  br label %for.inc34, !dbg !7069

for.inc34:                                        ; preds = %if.end26, %if.then25
  %call35 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7056
  %24 = bitcast i8* %call35 to %struct.BMEdge*, !dbg !7056
  store %struct.BMEdge* %24, %struct.BMEdge** %eed, align 8, !dbg !7056
  br label %for.cond19, !dbg !7056, !llvm.loop !7070

for.end36:                                        ; preds = %for.cond19
  br label %if.end58, !dbg !7072

if.else37:                                        ; preds = %if.else
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7073
  %bm38 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 0, !dbg !7073
  %26 = load %struct.BMesh*, %struct.BMesh** %bm38, align 8, !dbg !7073
  %call39 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %26, i8 zeroext 3, i8* null), !dbg !7073
  %27 = bitcast i8* %call39 to %struct.BMFace*, !dbg !7073
  store %struct.BMFace* %27, %struct.BMFace** %efa, align 8, !dbg !7073
  br label %for.cond40, !dbg !7073

for.cond40:                                       ; preds = %for.inc55, %if.else37
  %28 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7076
  %tobool41 = icmp ne %struct.BMFace* %28, null, !dbg !7073
  br i1 %tobool41, label %for.body42, label %for.end57, !dbg !7073

for.body42:                                       ; preds = %for.cond40
  %29 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7078
  %head43 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %29, i32 0, i32 0, !dbg !7078
  %call44 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head43, i8 zeroext 2), !dbg !7078
  %tobool45 = icmp ne i8 %call44, 0, !dbg !7078
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !7081

if.then46:                                        ; preds = %for.body42
  br label %for.inc55, !dbg !7082

if.end47:                                         ; preds = %for.body42
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7083
  %bm48 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !7084
  %31 = load %struct.BMesh*, %struct.BMesh** %bm48, align 8, !dbg !7084
  %32 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7085
  %33 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7086
  %head49 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %33, i32 0, i32 0, !dbg !7086
  %call50 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head49, i8 zeroext 1), !dbg !7086
  %tobool51 = icmp ne i8 %call50, 0, !dbg !7087
  %lnot52 = xor i1 %tobool51, true, !dbg !7087
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !7087
  %conv54 = trunc i32 %lnot.ext53 to i8, !dbg !7087
  call void @BM_face_select_set(%struct.BMesh* %31, %struct.BMFace* %32, i8 zeroext %conv54), !dbg !7088
  br label %for.inc55, !dbg !7089

for.inc55:                                        ; preds = %if.end47, %if.then46
  %call56 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7076
  %34 = bitcast i8* %call56 to %struct.BMFace*, !dbg !7076
  store %struct.BMFace* %34, %struct.BMFace** %efa, align 8, !dbg !7076
  br label %for.cond40, !dbg !7076, !llvm.loop !7090

for.end57:                                        ; preds = %for.cond40
  br label %if.end58

if.end58:                                         ; preds = %for.end57, %for.end36
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %for.end
  ret void, !dbg !7092
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @EDBM_select_interior_faces(%struct.BMEditMesh* %em) #0 !dbg !7093 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eiter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %ok = alloca i8, align 1
  %changed = alloca i8, align 1
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !7096, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7098, metadata !DIExpression()), !dbg !7099
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7100
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !7101
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7101
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !7099
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7106, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !7108, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7110, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !7112, metadata !DIExpression()), !dbg !7113
  store i8 0, i8* %changed, align 1, !dbg !7113
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !7114
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !7114
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !7114
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %3, i8 zeroext 3, i8* null), !dbg !7114
  %4 = bitcast i8* %call to %struct.BMFace*, !dbg !7114
  store %struct.BMFace* %4, %struct.BMFace** %efa, align 8, !dbg !7114
  br label %for.cond, !dbg !7114

for.cond:                                         ; preds = %for.inc16, %entry
  %5 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7116
  %tobool = icmp ne %struct.BMFace* %5, null, !dbg !7114
  br i1 %tobool, label %for.body, label %for.end18, !dbg !7114

for.body:                                         ; preds = %for.cond
  %6 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7118
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %6, i32 0, i32 0, !dbg !7118
  %call3 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !7118
  %tobool4 = icmp ne i8 %call3, 0, !dbg !7118
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7121

if.then:                                          ; preds = %for.body
  br label %for.inc16, !dbg !7122

if.end:                                           ; preds = %for.body
  store i8 1, i8* %ok, align 1, !dbg !7123
  %7 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7124
  %8 = bitcast %struct.BMFace* %7 to i8*, !dbg !7124
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 10, i8* %8), !dbg !7124
  %9 = bitcast i8* %call5 to %struct.BMEdge*, !dbg !7124
  store %struct.BMEdge* %9, %struct.BMEdge** %eed, align 8, !dbg !7124
  br label %for.cond6, !dbg !7124

for.cond6:                                        ; preds = %for.inc, %if.end
  %10 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7126
  %tobool7 = icmp ne %struct.BMEdge* %10, null, !dbg !7124
  br i1 %tobool7, label %for.body8, label %for.end, !dbg !7124

for.body8:                                        ; preds = %for.cond6
  %11 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7128
  %call9 = call i32 @BM_edge_face_count(%struct.BMEdge* %11), !dbg !7131
  %cmp = icmp slt i32 %call9, 3, !dbg !7132
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !7133

if.then10:                                        ; preds = %for.body8
  store i8 0, i8* %ok, align 1, !dbg !7134
  br label %for.end, !dbg !7136

if.end11:                                         ; preds = %for.body8
  br label %for.inc, !dbg !7137

for.inc:                                          ; preds = %if.end11
  %call12 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !7126
  %12 = bitcast i8* %call12 to %struct.BMEdge*, !dbg !7126
  store %struct.BMEdge* %12, %struct.BMEdge** %eed, align 8, !dbg !7126
  br label %for.cond6, !dbg !7126, !llvm.loop !7138

for.end:                                          ; preds = %if.then10, %for.cond6
  %13 = load i8, i8* %ok, align 1, !dbg !7140
  %tobool13 = icmp ne i8 %13, 0, !dbg !7140
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7142

if.then14:                                        ; preds = %for.end
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7143
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7145
  call void @BM_face_select_set(%struct.BMesh* %14, %struct.BMFace* %15, i8 zeroext 1), !dbg !7146
  store i8 1, i8* %changed, align 1, !dbg !7147
  br label %if.end15, !dbg !7148

if.end15:                                         ; preds = %if.then14, %for.end
  br label %for.inc16, !dbg !7149

for.inc16:                                        ; preds = %if.end15, %if.then
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7116
  %16 = bitcast i8* %call17 to %struct.BMFace*, !dbg !7116
  store %struct.BMFace* %16, %struct.BMFace** %efa, align 8, !dbg !7116
  br label %for.cond, !dbg !7116, !llvm.loop !7150

for.end18:                                        ; preds = %for.cond
  %17 = load i8, i8* %changed, align 1, !dbg !7152
  ret i8 %17, !dbg !7153
}

declare dso_local i32 @BM_edge_face_count(%struct.BMEdge*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_linked(%struct.wmOperatorType* %ot) #0 !dbg !7154 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7157
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7158
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i64 0, i64 0), i8** %name, align 8, !dbg !7159
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7160
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7161
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.68, i64 0, i64 0), i8** %idname, align 8, !dbg !7162
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7163
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7164
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i64 0, i64 0), i8** %description, align 8, !dbg !7165
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7166
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7167
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_linked_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7168
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7169
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7170
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7171
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7172
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7173
  store i16 3, i16* %flag, align 8, !dbg !7174
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7175
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7176
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7176
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7175
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !7177
  ret void, !dbg !7178
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_linked_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7179 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  %walker = alloca %struct.BMWalker, align 8
  %limit = alloca i32, align 4
  %efa = alloca %struct.BMFace*, align 8
  %v = alloca %struct.BMVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7184, metadata !DIExpression()), !dbg !7185
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7186
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7187
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7185
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7188, metadata !DIExpression()), !dbg !7189
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7190
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7191
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7189
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7192, metadata !DIExpression()), !dbg !7193
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7194
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !7195
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !7195
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !7193
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !7198, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.declare(metadata %struct.BMWalker* %walker, metadata !7200, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata i32* %limit, metadata !7234, metadata !DIExpression()), !dbg !7235
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7236
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7237
  call void @linked_limit_default(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7238
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7239
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !7240
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7240
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)), !dbg !7241
  store i32 %call3, i32* %limit, align 4, !dbg !7242
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7243
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 12, !dbg !7245
  %9 = load i16, i16* %selectmode, align 4, !dbg !7245
  %conv = sext i16 %9 to i32, !dbg !7243
  %cmp = icmp eq i32 %conv, 4, !dbg !7246
  br i1 %cmp, label %if.then, label %if.else, !dbg !7247

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7248, metadata !DIExpression()), !dbg !7250
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7251
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !7251
  %11 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !7251
  %call6 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %11, i8 zeroext 3, i8* null), !dbg !7251
  %12 = bitcast i8* %call6 to %struct.BMFace*, !dbg !7251
  store %struct.BMFace* %12, %struct.BMFace** %efa, align 8, !dbg !7251
  br label %for.cond, !dbg !7251

for.cond:                                         ; preds = %for.inc, %if.then
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7253
  %tobool = icmp ne %struct.BMFace* %13, null, !dbg !7251
  br i1 %tobool, label %for.body, label %for.end, !dbg !7251

for.body:                                         ; preds = %for.cond
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7255
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 0, !dbg !7255
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7255
  %head7 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %15, i32 0, i32 0, !dbg !7255
  %call8 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head7, i8 zeroext 1), !dbg !7255
  %conv9 = zext i8 %call8 to i32, !dbg !7255
  call void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext 16, i32 %conv9), !dbg !7255
  br label %for.inc, !dbg !7257

for.inc:                                          ; preds = %for.body
  %call10 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7253
  %16 = bitcast i8* %call10 to %struct.BMFace*, !dbg !7253
  store %struct.BMFace* %16, %struct.BMFace** %efa, align 8, !dbg !7253
  br label %for.cond, !dbg !7253, !llvm.loop !7258

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %limit, align 4, !dbg !7260
  %tobool11 = icmp ne i32 %17, 0, !dbg !7260
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !7262

if.then12:                                        ; preds = %for.end
  %18 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7263
  call void @BM_mesh_elem_toolflags_ensure(%struct.BMesh* %18), !dbg !7265
  %19 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7266
  %call13 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %19, i8 zeroext 2, i8* null), !dbg !7266
  %20 = bitcast i8* %call13 to %struct.BMEdge*, !dbg !7266
  store %struct.BMEdge* %20, %struct.BMEdge** %e, align 8, !dbg !7266
  br label %for.cond14, !dbg !7266

for.cond14:                                       ; preds = %for.inc20, %if.then12
  %21 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7268
  %tobool15 = icmp ne %struct.BMEdge* %21, null, !dbg !7266
  br i1 %tobool15, label %for.body16, label %for.end22, !dbg !7266

for.body16:                                       ; preds = %for.cond14
  %22 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7270
  %23 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7270
  %oflags = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %23, i32 0, i32 1, !dbg !7270
  %24 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags, align 8, !dbg !7270
  %25 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7270
  %head17 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %25, i32 0, i32 0, !dbg !7270
  %call18 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head17, i8 zeroext 4), !dbg !7270
  %tobool19 = icmp ne i8 %call18, 0, !dbg !7270
  %lnot = xor i1 %tobool19, true, !dbg !7270
  %lnot.ext = zext i1 %lnot to i32, !dbg !7270
  call void @_bmo_elem_flag_set(%struct.BMesh* %22, %struct.BMFlagLayer* %24, i16 signext 1, i32 %lnot.ext), !dbg !7270
  br label %for.inc20, !dbg !7272

for.inc20:                                        ; preds = %for.body16
  %call21 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7268
  %26 = bitcast i8* %call21 to %struct.BMEdge*, !dbg !7268
  store %struct.BMEdge* %26, %struct.BMEdge** %e, align 8, !dbg !7268
  br label %for.cond14, !dbg !7268, !llvm.loop !7273

for.end22:                                        ; preds = %for.cond14
  br label %if.end, !dbg !7275

if.end:                                           ; preds = %for.end22, %for.end
  %27 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7276
  %28 = load i32, i32* %limit, align 4, !dbg !7277
  %tobool23 = icmp ne i32 %28, 0, !dbg !7277
  %29 = zext i1 %tobool23 to i64, !dbg !7277
  %cond = select i1 %tobool23, i32 1, i32 0, !dbg !7277
  %conv24 = trunc i32 %cond to i16, !dbg !7277
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %27, i32 8, i16 signext 0, i16 signext %conv24, i16 signext 0, i32 1, i32 0), !dbg !7278
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7279
  %bm25 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !7279
  %31 = load %struct.BMesh*, %struct.BMesh** %bm25, align 8, !dbg !7279
  %call26 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %31, i8 zeroext 3, i8* null), !dbg !7279
  %32 = bitcast i8* %call26 to %struct.BMFace*, !dbg !7279
  store %struct.BMFace* %32, %struct.BMFace** %efa, align 8, !dbg !7279
  br label %for.cond27, !dbg !7279

for.cond27:                                       ; preds = %for.inc43, %if.end
  %33 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7281
  %tobool28 = icmp ne %struct.BMFace* %33, null, !dbg !7279
  br i1 %tobool28, label %for.body29, label %for.end45, !dbg !7279

for.body29:                                       ; preds = %for.cond27
  %34 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7283
  %head30 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %34, i32 0, i32 0, !dbg !7283
  %call31 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head30, i8 zeroext 16), !dbg !7283
  %tobool32 = icmp ne i8 %call31, 0, !dbg !7283
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !7286

if.then33:                                        ; preds = %for.body29
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7287
  %36 = bitcast %struct.BMFace* %35 to i8*, !dbg !7287
  %call34 = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %36), !dbg !7290
  %37 = bitcast i8* %call34 to %struct.BMFace*, !dbg !7290
  store %struct.BMFace* %37, %struct.BMFace** %efa, align 8, !dbg !7291
  br label %for.cond35, !dbg !7292

for.cond35:                                       ; preds = %for.inc39, %if.then33
  %38 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7293
  %tobool36 = icmp ne %struct.BMFace* %38, null, !dbg !7295
  br i1 %tobool36, label %for.body37, label %for.end41, !dbg !7295

for.body37:                                       ; preds = %for.cond35
  %39 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7296
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7298
  call void @BM_face_select_set(%struct.BMesh* %39, %struct.BMFace* %40, i8 zeroext 1), !dbg !7299
  %41 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7300
  %head38 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %41, i32 0, i32 0, !dbg !7300
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head38, i8 zeroext 16), !dbg !7300
  br label %for.inc39, !dbg !7301

for.inc39:                                        ; preds = %for.body37
  %call40 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !7302
  %42 = bitcast i8* %call40 to %struct.BMFace*, !dbg !7302
  store %struct.BMFace* %42, %struct.BMFace** %efa, align 8, !dbg !7303
  br label %for.cond35, !dbg !7304, !llvm.loop !7305

for.end41:                                        ; preds = %for.cond35
  br label %if.end42, !dbg !7307

if.end42:                                         ; preds = %for.end41, %for.body29
  br label %for.inc43, !dbg !7308

for.inc43:                                        ; preds = %if.end42
  %call44 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7281
  %43 = bitcast i8* %call44 to %struct.BMFace*, !dbg !7281
  store %struct.BMFace* %43, %struct.BMFace** %efa, align 8, !dbg !7281
  br label %for.cond27, !dbg !7281, !llvm.loop !7309

for.end45:                                        ; preds = %for.cond27
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !7311
  %44 = load i32, i32* %limit, align 4, !dbg !7312
  %tobool46 = icmp ne i32 %44, 0, !dbg !7312
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7314

if.then47:                                        ; preds = %for.end45
  %45 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7315
  call void @BM_mesh_elem_toolflags_clear(%struct.BMesh* %45), !dbg !7317
  br label %if.end48, !dbg !7318

if.end48:                                         ; preds = %if.then47, %for.end45
  br label %if.end84, !dbg !7319

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !7320, metadata !DIExpression()), !dbg !7322
  %46 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7323
  %bm49 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %46, i32 0, i32 0, !dbg !7323
  %47 = load %struct.BMesh*, %struct.BMesh** %bm49, align 8, !dbg !7323
  %call50 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %47, i8 zeroext 1, i8* null), !dbg !7323
  %48 = bitcast i8* %call50 to %struct.BMVert*, !dbg !7323
  store %struct.BMVert* %48, %struct.BMVert** %v, align 8, !dbg !7323
  br label %for.cond51, !dbg !7323

for.cond51:                                       ; preds = %for.inc58, %if.else
  %49 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7325
  %tobool52 = icmp ne %struct.BMVert* %49, null, !dbg !7323
  br i1 %tobool52, label %for.body53, label %for.end60, !dbg !7323

for.body53:                                       ; preds = %for.cond51
  %50 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7327
  %head54 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 0, !dbg !7327
  %51 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7327
  %head55 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %51, i32 0, i32 0, !dbg !7327
  %call56 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head55, i8 zeroext 1), !dbg !7327
  %conv57 = zext i8 %call56 to i32, !dbg !7327
  call void @_bm_elem_flag_set(%struct.BMHeader* %head54, i8 zeroext 16, i32 %conv57), !dbg !7327
  br label %for.inc58, !dbg !7329

for.inc58:                                        ; preds = %for.body53
  %call59 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7325
  %52 = bitcast i8* %call59 to %struct.BMVert*, !dbg !7325
  store %struct.BMVert* %52, %struct.BMVert** %v, align 8, !dbg !7325
  br label %for.cond51, !dbg !7325, !llvm.loop !7330

for.end60:                                        ; preds = %for.cond51
  %53 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7332
  %bm61 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %53, i32 0, i32 0, !dbg !7333
  %54 = load %struct.BMesh*, %struct.BMesh** %bm61, align 8, !dbg !7333
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %54, i32 0, i16 signext 0, i16 signext 0, i16 signext 0, i32 1, i32 0), !dbg !7334
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7335
  %bm62 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !7335
  %56 = load %struct.BMesh*, %struct.BMesh** %bm62, align 8, !dbg !7335
  %call63 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %56, i8 zeroext 1, i8* null), !dbg !7335
  %57 = bitcast i8* %call63 to %struct.BMVert*, !dbg !7335
  store %struct.BMVert* %57, %struct.BMVert** %v, align 8, !dbg !7335
  br label %for.cond64, !dbg !7335

for.cond64:                                       ; preds = %for.inc81, %for.end60
  %58 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7337
  %tobool65 = icmp ne %struct.BMVert* %58, null, !dbg !7335
  br i1 %tobool65, label %for.body66, label %for.end83, !dbg !7335

for.body66:                                       ; preds = %for.cond64
  %59 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7339
  %head67 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %59, i32 0, i32 0, !dbg !7339
  %call68 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head67, i8 zeroext 16), !dbg !7339
  %tobool69 = icmp ne i8 %call68, 0, !dbg !7339
  br i1 %tobool69, label %if.then70, label %if.end80, !dbg !7342

if.then70:                                        ; preds = %for.body66
  %60 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7343
  %61 = bitcast %struct.BMVert* %60 to i8*, !dbg !7343
  %call71 = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %61), !dbg !7346
  %62 = bitcast i8* %call71 to %struct.BMEdge*, !dbg !7346
  store %struct.BMEdge* %62, %struct.BMEdge** %e, align 8, !dbg !7347
  br label %for.cond72, !dbg !7348

for.cond72:                                       ; preds = %for.inc77, %if.then70
  %63 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7349
  %tobool73 = icmp ne %struct.BMEdge* %63, null, !dbg !7351
  br i1 %tobool73, label %for.body74, label %for.end79, !dbg !7351

for.body74:                                       ; preds = %for.cond72
  %64 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7352
  %bm75 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %64, i32 0, i32 0, !dbg !7354
  %65 = load %struct.BMesh*, %struct.BMesh** %bm75, align 8, !dbg !7354
  %66 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7355
  call void @BM_edge_select_set(%struct.BMesh* %65, %struct.BMEdge* %66, i8 zeroext 1), !dbg !7356
  %67 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7357
  %head76 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %67, i32 0, i32 0, !dbg !7357
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head76, i8 zeroext 16), !dbg !7357
  br label %for.inc77, !dbg !7358

for.inc77:                                        ; preds = %for.body74
  %call78 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !7359
  %68 = bitcast i8* %call78 to %struct.BMEdge*, !dbg !7359
  store %struct.BMEdge* %68, %struct.BMEdge** %e, align 8, !dbg !7360
  br label %for.cond72, !dbg !7361, !llvm.loop !7362

for.end79:                                        ; preds = %for.cond72
  br label %if.end80, !dbg !7364

if.end80:                                         ; preds = %for.end79, %for.body66
  br label %for.inc81, !dbg !7365

for.inc81:                                        ; preds = %if.end80
  %call82 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7337
  %69 = bitcast i8* %call82 to %struct.BMVert*, !dbg !7337
  store %struct.BMVert* %69, %struct.BMVert** %v, align 8, !dbg !7337
  br label %for.cond64, !dbg !7337, !llvm.loop !7366

for.end83:                                        ; preds = %for.cond64
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !7368
  %70 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7369
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %70), !dbg !7370
  br label %if.end84

if.end84:                                         ; preds = %for.end83, %if.end48
  %71 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7371
  %72 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7372
  %73 = bitcast %struct.Object* %72 to i8*, !dbg !7372
  call void @WM_event_add_notifier(%struct.bContext* %71, i32 274333696, i8* %73), !dbg !7373
  ret i32 4, !dbg !7374
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_linked_pick(%struct.wmOperatorType* %ot) #0 !dbg !7375 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7376, metadata !DIExpression()), !dbg !7377
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7378
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7379
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i64 0, i64 0), i8** %name, align 8, !dbg !7380
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7381
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7382
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0), i8** %idname, align 8, !dbg !7383
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7384
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7385
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.74, i64 0, i64 0), i8** %description, align 8, !dbg !7386
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7387
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !7388
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @edbm_select_linked_pick_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !7389
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7390
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7391
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7392
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7393
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7394
  store i16 3, i16* %flag, align 8, !dbg !7395
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7396
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7397
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7397
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7396
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !7398
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7399
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !7400
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !7400
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !7399
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)), !dbg !7401
  ret void, !dbg !7402
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_linked_pick_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7403 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %obedit = alloca %struct.Object*, align 8
  %vc = alloca %struct.ViewContext, align 8
  %bm = alloca %struct.BMesh*, align 8
  %walker = alloca %struct.BMWalker, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %sel = alloca i8, align 1
  %limit = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7410, metadata !DIExpression()), !dbg !7411
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7412
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7413
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7411
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !7414, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7416, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.declare(metadata %struct.BMWalker* %walker, metadata !7418, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7420, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !7422, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7428, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.declare(metadata i8* %sel, metadata !7430, metadata !DIExpression()), !dbg !7431
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7432
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7433
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7433
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)), !dbg !7434
  %tobool = icmp ne i32 %call1, 0, !dbg !7435
  %lnot = xor i1 %tobool, true, !dbg !7435
  %lnot.ext = zext i1 %lnot to i32, !dbg !7435
  %conv = trunc i32 %lnot.ext to i8, !dbg !7435
  store i8 %conv, i8* %sel, align 1, !dbg !7431
  call void @llvm.dbg.declare(metadata i32* %limit, metadata !7436, metadata !DIExpression()), !dbg !7437
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7438
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7439
  call void @linked_limit_default(%struct.bContext* %3, %struct.wmOperator* %4), !dbg !7440
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7441
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !7442
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !7442
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)), !dbg !7443
  store i32 %call3, i32* %limit, align 4, !dbg !7444
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7445
  call void @view3d_operator_needs_opengl(%struct.bContext* %7), !dbg !7446
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7447
  call void @em_setup_viewcontext(%struct.bContext* %8, %struct.ViewContext* %vc), !dbg !7448
  %em4 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !7449
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em4, align 8, !dbg !7449
  store %struct.BMEditMesh* %9, %struct.BMEditMesh** %em, align 8, !dbg !7450
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7451
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !7453
  %11 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !7453
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 1, !dbg !7454
  %12 = load i32, i32* %totedge, align 4, !dbg !7454
  %cmp = icmp eq i32 %12, 0, !dbg !7455
  br i1 %cmp, label %if.then, label %if.end, !dbg !7456

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7457
  br label %return, !dbg !7457

if.end:                                           ; preds = %entry
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7458
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !7459
  %14 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !7459
  store %struct.BMesh* %14, %struct.BMesh** %bm, align 8, !dbg !7460
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7461
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 6, !dbg !7462
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7461
  %16 = load i32, i32* %arrayidx, align 4, !dbg !7461
  %mval8 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 7, !dbg !7463
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %mval8, i64 0, i64 0, !dbg !7464
  store i32 %16, i32* %arrayidx9, align 8, !dbg !7465
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7466
  %mval10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 6, !dbg !7467
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %mval10, i64 0, i64 1, !dbg !7466
  %18 = load i32, i32* %arrayidx11, align 4, !dbg !7466
  %mval12 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 7, !dbg !7468
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %mval12, i64 0, i64 1, !dbg !7469
  store i32 %18, i32* %arrayidx13, align 4, !dbg !7470
  %call14 = call i32 @unified_findnearest(%struct.ViewContext* %vc, %struct.BMVert** %eve, %struct.BMEdge** %eed, %struct.BMFace** %efa), !dbg !7471
  %cmp15 = icmp eq i32 %call14, 0, !dbg !7473
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !7474

if.then17:                                        ; preds = %if.end
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7475
  %20 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7477
  %21 = bitcast %struct.Object* %20 to i8*, !dbg !7477
  call void @WM_event_add_notifier(%struct.bContext* %19, i32 274333696, i8* %21), !dbg !7478
  store i32 2, i32* %retval, align 4, !dbg !7479
  br label %return, !dbg !7479

if.end18:                                         ; preds = %if.end
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7480
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %22, i32 0, i32 12, !dbg !7482
  %23 = load i16, i16* %selectmode, align 4, !dbg !7482
  %conv19 = sext i16 %23 to i32, !dbg !7480
  %cmp20 = icmp eq i32 %conv19, 4, !dbg !7483
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !7484

if.then22:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7485, metadata !DIExpression()), !dbg !7487
  %24 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7488
  %cmp23 = icmp eq %struct.BMFace* %24, null, !dbg !7490
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7491

if.then25:                                        ; preds = %if.then22
  store i32 2, i32* %retval, align 4, !dbg !7492
  br label %return, !dbg !7492

if.end26:                                         ; preds = %if.then22
  %25 = load i32, i32* %limit, align 4, !dbg !7493
  %tobool27 = icmp ne i32 %25, 0, !dbg !7493
  br i1 %tobool27, label %if.then28, label %if.end36, !dbg !7495

if.then28:                                        ; preds = %if.end26
  %26 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7496
  call void @BM_mesh_elem_toolflags_ensure(%struct.BMesh* %26), !dbg !7498
  %27 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7499
  %call29 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %27, i8 zeroext 2, i8* null), !dbg !7499
  %28 = bitcast i8* %call29 to %struct.BMEdge*, !dbg !7499
  store %struct.BMEdge* %28, %struct.BMEdge** %e, align 8, !dbg !7499
  br label %for.cond, !dbg !7499

for.cond:                                         ; preds = %for.inc, %if.then28
  %29 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7501
  %tobool30 = icmp ne %struct.BMEdge* %29, null, !dbg !7499
  br i1 %tobool30, label %for.body, label %for.end, !dbg !7499

for.body:                                         ; preds = %for.cond
  %30 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7503
  %31 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7503
  %oflags = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %31, i32 0, i32 1, !dbg !7503
  %32 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags, align 8, !dbg !7503
  %33 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7503
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %33, i32 0, i32 0, !dbg !7503
  %call31 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 4), !dbg !7503
  %tobool32 = icmp ne i8 %call31, 0, !dbg !7503
  %lnot33 = xor i1 %tobool32, true, !dbg !7503
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !7503
  call void @_bmo_elem_flag_set(%struct.BMesh* %30, %struct.BMFlagLayer* %32, i16 signext 1, i32 %lnot.ext34), !dbg !7503
  br label %for.inc, !dbg !7505

for.inc:                                          ; preds = %for.body
  %call35 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7501
  %34 = bitcast i8* %call35 to %struct.BMEdge*, !dbg !7501
  store %struct.BMEdge* %34, %struct.BMEdge** %e, align 8, !dbg !7501
  br label %for.cond, !dbg !7501, !llvm.loop !7506

for.end:                                          ; preds = %for.cond
  br label %if.end36, !dbg !7508

if.end36:                                         ; preds = %for.end, %if.end26
  %35 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7509
  %36 = load i32, i32* %limit, align 4, !dbg !7510
  %tobool37 = icmp ne i32 %36, 0, !dbg !7510
  %37 = zext i1 %tobool37 to i64, !dbg !7510
  %cond = select i1 %tobool37, i32 1, i32 0, !dbg !7510
  %conv38 = trunc i32 %cond to i16, !dbg !7510
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %35, i32 8, i16 signext 0, i16 signext %conv38, i16 signext 0, i32 1, i32 0), !dbg !7511
  %38 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7512
  %39 = bitcast %struct.BMFace* %38 to i8*, !dbg !7512
  %call39 = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %39), !dbg !7514
  %40 = bitcast i8* %call39 to %struct.BMFace*, !dbg !7514
  store %struct.BMFace* %40, %struct.BMFace** %efa, align 8, !dbg !7515
  br label %for.cond40, !dbg !7516

for.cond40:                                       ; preds = %for.inc43, %if.end36
  %41 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7517
  %tobool41 = icmp ne %struct.BMFace* %41, null, !dbg !7519
  br i1 %tobool41, label %for.body42, label %for.end45, !dbg !7519

for.body42:                                       ; preds = %for.cond40
  %42 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7520
  %43 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7522
  %44 = load i8, i8* %sel, align 1, !dbg !7523
  call void @BM_face_select_set(%struct.BMesh* %42, %struct.BMFace* %43, i8 zeroext %44), !dbg !7524
  br label %for.inc43, !dbg !7525

for.inc43:                                        ; preds = %for.body42
  %call44 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !7526
  %45 = bitcast i8* %call44 to %struct.BMFace*, !dbg !7526
  store %struct.BMFace* %45, %struct.BMFace** %efa, align 8, !dbg !7527
  br label %for.cond40, !dbg !7528, !llvm.loop !7529

for.end45:                                        ; preds = %for.cond40
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !7531
  br label %if.end67, !dbg !7532

if.else:                                          ; preds = %if.end18
  %46 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7533
  %tobool46 = icmp ne %struct.BMFace* %46, null, !dbg !7533
  br i1 %tobool46, label %if.then47, label %if.else49, !dbg !7536

if.then47:                                        ; preds = %if.else
  %47 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7537
  %l_first = getelementptr inbounds %struct.BMFace, %struct.BMFace* %47, i32 0, i32 2, !dbg !7537
  %48 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !7537
  %e48 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %48, i32 0, i32 2, !dbg !7539
  %49 = load %struct.BMEdge*, %struct.BMEdge** %e48, align 8, !dbg !7539
  store %struct.BMEdge* %49, %struct.BMEdge** %eed, align 8, !dbg !7540
  br label %if.end59, !dbg !7541

if.else49:                                        ; preds = %if.else
  %50 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7542
  %tobool50 = icmp ne %struct.BMEdge* %50, null, !dbg !7542
  br i1 %tobool50, label %if.end58, label %if.then51, !dbg !7544

if.then51:                                        ; preds = %if.else49
  %51 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7545
  %tobool52 = icmp ne %struct.BMVert* %51, null, !dbg !7545
  br i1 %tobool52, label %lor.lhs.false, label %if.then55, !dbg !7548

lor.lhs.false:                                    ; preds = %if.then51
  %52 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7549
  %e53 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %52, i32 0, i32 4, !dbg !7550
  %53 = load %struct.BMEdge*, %struct.BMEdge** %e53, align 8, !dbg !7550
  %tobool54 = icmp ne %struct.BMEdge* %53, null, !dbg !7549
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !7551

if.then55:                                        ; preds = %lor.lhs.false, %if.then51
  store i32 2, i32* %retval, align 4, !dbg !7552
  br label %return, !dbg !7552

if.end56:                                         ; preds = %lor.lhs.false
  %54 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7553
  %e57 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %54, i32 0, i32 4, !dbg !7554
  %55 = load %struct.BMEdge*, %struct.BMEdge** %e57, align 8, !dbg !7554
  store %struct.BMEdge* %55, %struct.BMEdge** %eed, align 8, !dbg !7555
  br label %if.end58, !dbg !7556

if.end58:                                         ; preds = %if.end56, %if.else49
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then47
  %56 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7557
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %56, i32 0, i16 signext 0, i16 signext 0, i16 signext 0, i32 1, i32 0), !dbg !7558
  %57 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7559
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %57, i32 0, i32 2, !dbg !7561
  %58 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !7561
  %59 = bitcast %struct.BMVert* %58 to i8*, !dbg !7559
  %call60 = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %59), !dbg !7562
  %60 = bitcast i8* %call60 to %struct.BMEdge*, !dbg !7562
  store %struct.BMEdge* %60, %struct.BMEdge** %e, align 8, !dbg !7563
  br label %for.cond61, !dbg !7564

for.cond61:                                       ; preds = %for.inc64, %if.end59
  %61 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7565
  %tobool62 = icmp ne %struct.BMEdge* %61, null, !dbg !7567
  br i1 %tobool62, label %for.body63, label %for.end66, !dbg !7567

for.body63:                                       ; preds = %for.cond61
  %62 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7568
  %63 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7570
  %64 = load i8, i8* %sel, align 1, !dbg !7571
  call void @BM_edge_select_set(%struct.BMesh* %62, %struct.BMEdge* %63, i8 zeroext %64), !dbg !7572
  br label %for.inc64, !dbg !7573

for.inc64:                                        ; preds = %for.body63
  %call65 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !7574
  %65 = bitcast i8* %call65 to %struct.BMEdge*, !dbg !7574
  store %struct.BMEdge* %65, %struct.BMEdge** %e, align 8, !dbg !7575
  br label %for.cond61, !dbg !7576, !llvm.loop !7577

for.end66:                                        ; preds = %for.cond61
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !7579
  %66 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7580
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %66), !dbg !7581
  br label %if.end67

if.end67:                                         ; preds = %for.end66, %for.end45
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7582
  %68 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7583
  %69 = bitcast %struct.Object* %68 to i8*, !dbg !7583
  call void @WM_event_add_notifier(%struct.bContext* %67, i32 274333696, i8* %69), !dbg !7584
  store i32 4, i32* %retval, align 4, !dbg !7585
  br label %return, !dbg !7585

return:                                           ; preds = %if.end67, %if.then55, %if.then25, %if.then17, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !7586
  ret i32 %70, !dbg !7586
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_face_by_sides(%struct.wmOperatorType* %ot) #0 !dbg !3212 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7587, metadata !DIExpression()), !dbg !7588
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7589
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7590
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i64 0, i64 0), i8** %name, align 8, !dbg !7591
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7592
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7593
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.84, i64 0, i64 0), i8** %description, align 8, !dbg !7594
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7595
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7596
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i64 0, i64 0), i8** %idname, align 8, !dbg !7597
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7598
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7599
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_face_by_sides_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7600
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7601
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7602
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7603
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7604
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7605
  store i16 3, i16* %flag, align 8, !dbg !7606
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7607
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7608
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7608
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7607
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0), i32 4, i32 3, i32 2147483647, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i32 3, i32 2147483647), !dbg !7609
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7610
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !7611
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !7611
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !7610
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @MESH_OT_select_face_by_sides.type_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0)), !dbg !7612
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7613
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !7614
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !7614
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !7613
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0)), !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_face_by_sides_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7617 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %numverts = alloca i32, align 4
  %type = alloca i32, align 4
  %select = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7622, metadata !DIExpression()), !dbg !7623
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7624
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7625
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7623
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7626, metadata !DIExpression()), !dbg !7627
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7628
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7629
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7627
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata i32* %numverts, metadata !7634, metadata !DIExpression()), !dbg !7635
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7636
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !7637
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7637
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0)), !dbg !7638
  store i32 %call2, i32* %numverts, align 4, !dbg !7635
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7639, metadata !DIExpression()), !dbg !7640
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7641
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7642
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !7642
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !7643
  store i32 %call4, i32* %type, align 4, !dbg !7640
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7644
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !7646
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !7646
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)), !dbg !7647
  %tobool = icmp ne i32 %call6, 0, !dbg !7647
  br i1 %tobool, label %if.end, label %if.then, !dbg !7648

if.then:                                          ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7649
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %8, i8 zeroext 1), !dbg !7650
  br label %if.end, !dbg !7650

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7651
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !7651
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7651
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 3, i8* null), !dbg !7651
  %11 = bitcast i8* %call7 to %struct.BMFace*, !dbg !7651
  store %struct.BMFace* %11, %struct.BMFace** %efa, align 8, !dbg !7651
  br label %for.cond, !dbg !7651

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7653
  %tobool8 = icmp ne %struct.BMFace* %12, null, !dbg !7651
  br i1 %tobool8, label %for.body, label %for.end, !dbg !7651

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %select, metadata !7655, metadata !DIExpression()), !dbg !7657
  %13 = load i32, i32* %type, align 4, !dbg !7658
  switch i32 %13, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 2, label %sw.bb15
    i32 3, label %sw.bb20
  ], !dbg !7659

sw.bb:                                            ; preds = %for.body
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7660
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 3, !dbg !7662
  %15 = load i32, i32* %len, align 8, !dbg !7662
  %16 = load i32, i32* %numverts, align 4, !dbg !7663
  %cmp = icmp slt i32 %15, %16, !dbg !7664
  %conv = zext i1 %cmp to i32, !dbg !7664
  %conv9 = trunc i32 %conv to i8, !dbg !7665
  store i8 %conv9, i8* %select, align 1, !dbg !7666
  br label %sw.epilog, !dbg !7667

sw.bb10:                                          ; preds = %for.body
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7668
  %len11 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %17, i32 0, i32 3, !dbg !7669
  %18 = load i32, i32* %len11, align 8, !dbg !7669
  %19 = load i32, i32* %numverts, align 4, !dbg !7670
  %cmp12 = icmp eq i32 %18, %19, !dbg !7671
  %conv13 = zext i1 %cmp12 to i32, !dbg !7671
  %conv14 = trunc i32 %conv13 to i8, !dbg !7672
  store i8 %conv14, i8* %select, align 1, !dbg !7673
  br label %sw.epilog, !dbg !7674

sw.bb15:                                          ; preds = %for.body
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7675
  %len16 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %20, i32 0, i32 3, !dbg !7676
  %21 = load i32, i32* %len16, align 8, !dbg !7676
  %22 = load i32, i32* %numverts, align 4, !dbg !7677
  %cmp17 = icmp sgt i32 %21, %22, !dbg !7678
  %conv18 = zext i1 %cmp17 to i32, !dbg !7678
  %conv19 = trunc i32 %conv18 to i8, !dbg !7679
  store i8 %conv19, i8* %select, align 1, !dbg !7680
  br label %sw.epilog, !dbg !7681

sw.bb20:                                          ; preds = %for.body
  %23 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7682
  %len21 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %23, i32 0, i32 3, !dbg !7683
  %24 = load i32, i32* %len21, align 8, !dbg !7683
  %25 = load i32, i32* %numverts, align 4, !dbg !7684
  %cmp22 = icmp ne i32 %24, %25, !dbg !7685
  %conv23 = zext i1 %cmp22 to i32, !dbg !7685
  %conv24 = trunc i32 %conv23 to i8, !dbg !7686
  store i8 %conv24, i8* %select, align 1, !dbg !7687
  br label %sw.epilog, !dbg !7688

sw.default:                                       ; preds = %for.body
  store i8 0, i8* %select, align 1, !dbg !7689
  br label %sw.epilog, !dbg !7690

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb15, %sw.bb10, %sw.bb
  %26 = load i8, i8* %select, align 1, !dbg !7691
  %tobool25 = icmp ne i8 %26, 0, !dbg !7691
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !7693

if.then26:                                        ; preds = %sw.epilog
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7694
  %bm27 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !7696
  %28 = load %struct.BMesh*, %struct.BMesh** %bm27, align 8, !dbg !7696
  %29 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7697
  call void @BM_face_select_set(%struct.BMesh* %28, %struct.BMFace* %29, i8 zeroext 1), !dbg !7698
  br label %if.end28, !dbg !7699

if.end28:                                         ; preds = %if.then26, %sw.epilog
  br label %for.inc, !dbg !7700

for.inc:                                          ; preds = %if.end28
  %call29 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7653
  %30 = bitcast i8* %call29 to %struct.BMFace*, !dbg !7653
  store %struct.BMFace* %30, %struct.BMFace** %efa, align 8, !dbg !7653
  br label %for.cond, !dbg !7653, !llvm.loop !7701

for.end:                                          ; preds = %for.cond
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7703
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %31), !dbg !7704
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7705
  %33 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7706
  %data = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 19, !dbg !7707
  %34 = load i8*, i8** %data, align 8, !dbg !7707
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 274333696, i8* %34), !dbg !7708
  ret i32 4, !dbg !7709
}

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_loose(%struct.wmOperatorType* %ot) #0 !dbg !7710 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7713
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7714
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.89, i64 0, i64 0), i8** %name, align 8, !dbg !7715
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7716
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7717
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.90, i64 0, i64 0), i8** %description, align 8, !dbg !7718
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7719
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7720
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i64 0, i64 0), i8** %idname, align 8, !dbg !7721
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7722
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7723
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_loose_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7724
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7725
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7726
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7727
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7728
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7729
  store i16 3, i16* %flag, align 8, !dbg !7730
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7731
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7732
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7732
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7731
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0)), !dbg !7733
  ret void, !dbg !7734
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_loose_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7735 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %liter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %is_loose = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7736, metadata !DIExpression()), !dbg !7737
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7738, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7740, metadata !DIExpression()), !dbg !7741
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7742
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7743
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7741
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7744, metadata !DIExpression()), !dbg !7745
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7746
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7747
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7745
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7748, metadata !DIExpression()), !dbg !7749
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7750
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !7751
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !7751
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !7749
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7752, metadata !DIExpression()), !dbg !7753
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7754
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7756
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7756
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)), !dbg !7757
  %tobool = icmp ne i32 %call3, 0, !dbg !7757
  br i1 %tobool, label %if.end, label %if.then, !dbg !7758

if.then:                                          ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7759
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %6, i8 zeroext 1), !dbg !7760
  br label %if.end, !dbg !7760

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7761
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 12, !dbg !7763
  %8 = load i16, i16* %selectmode, align 4, !dbg !7763
  %conv = sext i16 %8 to i32, !dbg !7761
  %and = and i32 %conv, 1, !dbg !7764
  %tobool4 = icmp ne i32 %and, 0, !dbg !7764
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !7765

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !7766, metadata !DIExpression()), !dbg !7768
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7769
  %call6 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 1, i8* null), !dbg !7769
  %10 = bitcast i8* %call6 to %struct.BMVert*, !dbg !7769
  store %struct.BMVert* %10, %struct.BMVert** %eve, align 8, !dbg !7769
  br label %for.cond, !dbg !7769

for.cond:                                         ; preds = %for.inc, %if.then5
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7771
  %tobool7 = icmp ne %struct.BMVert* %11, null, !dbg !7769
  br i1 %tobool7, label %for.body, label %for.end, !dbg !7769

for.body:                                         ; preds = %for.cond
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7773
  %e = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 4, !dbg !7776
  %13 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7776
  %tobool8 = icmp ne %struct.BMEdge* %13, null, !dbg !7773
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !7777

if.then9:                                         ; preds = %for.body
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7778
  %15 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7780
  call void @BM_vert_select_set(%struct.BMesh* %14, %struct.BMVert* %15, i8 zeroext 1), !dbg !7781
  br label %if.end10, !dbg !7782

if.end10:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !7783

for.inc:                                          ; preds = %if.end10
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7771
  %16 = bitcast i8* %call11 to %struct.BMVert*, !dbg !7771
  store %struct.BMVert* %16, %struct.BMVert** %eve, align 8, !dbg !7771
  br label %for.cond, !dbg !7771, !llvm.loop !7784

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !7786

if.end12:                                         ; preds = %for.end, %if.end
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7787
  %selectmode13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 12, !dbg !7789
  %18 = load i16, i16* %selectmode13, align 4, !dbg !7789
  %conv14 = sext i16 %18 to i32, !dbg !7787
  %and15 = and i32 %conv14, 2, !dbg !7790
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7790
  br i1 %tobool16, label %if.then17, label %if.end29, !dbg !7791

if.then17:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !7792, metadata !DIExpression()), !dbg !7794
  %19 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7795
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %19, i8 zeroext 2, i8* null), !dbg !7795
  %20 = bitcast i8* %call18 to %struct.BMEdge*, !dbg !7795
  store %struct.BMEdge* %20, %struct.BMEdge** %eed, align 8, !dbg !7795
  br label %for.cond19, !dbg !7795

for.cond19:                                       ; preds = %for.inc26, %if.then17
  %21 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7797
  %tobool20 = icmp ne %struct.BMEdge* %21, null, !dbg !7795
  br i1 %tobool20, label %for.body21, label %for.end28, !dbg !7795

for.body21:                                       ; preds = %for.cond19
  %22 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7799
  %call22 = call zeroext i8 @BM_edge_is_wire(%struct.BMEdge* %22), !dbg !7802
  %tobool23 = icmp ne i8 %call22, 0, !dbg !7802
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !7803

if.then24:                                        ; preds = %for.body21
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7804
  %24 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !7806
  call void @BM_edge_select_set(%struct.BMesh* %23, %struct.BMEdge* %24, i8 zeroext 1), !dbg !7807
  br label %if.end25, !dbg !7808

if.end25:                                         ; preds = %if.then24, %for.body21
  br label %for.inc26, !dbg !7809

for.inc26:                                        ; preds = %if.end25
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7797
  %25 = bitcast i8* %call27 to %struct.BMEdge*, !dbg !7797
  store %struct.BMEdge* %25, %struct.BMEdge** %eed, align 8, !dbg !7797
  br label %for.cond19, !dbg !7797, !llvm.loop !7810

for.end28:                                        ; preds = %for.cond19
  br label %if.end29, !dbg !7812

if.end29:                                         ; preds = %for.end28, %if.end12
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7813
  %selectmode30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 12, !dbg !7815
  %27 = load i16, i16* %selectmode30, align 4, !dbg !7815
  %conv31 = sext i16 %27 to i32, !dbg !7813
  %and32 = and i32 %conv31, 4, !dbg !7816
  %tobool33 = icmp ne i32 %and32, 0, !dbg !7816
  br i1 %tobool33, label %if.then34, label %if.end57, !dbg !7817

if.then34:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7818, metadata !DIExpression()), !dbg !7820
  %28 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7821
  %call35 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %28, i8 zeroext 3, i8* null), !dbg !7821
  %29 = bitcast i8* %call35 to %struct.BMFace*, !dbg !7821
  store %struct.BMFace* %29, %struct.BMFace** %efa, align 8, !dbg !7821
  br label %for.cond36, !dbg !7821

for.cond36:                                       ; preds = %for.inc54, %if.then34
  %30 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7823
  %tobool37 = icmp ne %struct.BMFace* %30, null, !dbg !7821
  br i1 %tobool37, label %for.body38, label %for.end56, !dbg !7821

for.body38:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !7825, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !7828, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.declare(metadata i8* %is_loose, metadata !7830, metadata !DIExpression()), !dbg !7831
  store i8 1, i8* %is_loose, align 1, !dbg !7831
  %31 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7832
  %32 = bitcast %struct.BMFace* %31 to i8*, !dbg !7832
  %call39 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %32), !dbg !7832
  %33 = bitcast i8* %call39 to %struct.BMLoop*, !dbg !7832
  store %struct.BMLoop* %33, %struct.BMLoop** %l, align 8, !dbg !7832
  br label %for.cond40, !dbg !7832

for.cond40:                                       ; preds = %for.inc48, %for.body38
  %34 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7834
  %tobool41 = icmp ne %struct.BMLoop* %34, null, !dbg !7832
  br i1 %tobool41, label %for.body42, label %for.end50, !dbg !7832

for.body42:                                       ; preds = %for.cond40
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7836
  %e43 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %35, i32 0, i32 2, !dbg !7839
  %36 = load %struct.BMEdge*, %struct.BMEdge** %e43, align 8, !dbg !7839
  %call44 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %36), !dbg !7840
  %tobool45 = icmp ne i8 %call44, 0, !dbg !7840
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !7841

if.then46:                                        ; preds = %for.body42
  store i8 0, i8* %is_loose, align 1, !dbg !7842
  br label %for.end50, !dbg !7844

if.end47:                                         ; preds = %for.body42
  br label %for.inc48, !dbg !7845

for.inc48:                                        ; preds = %if.end47
  %call49 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !7834
  %37 = bitcast i8* %call49 to %struct.BMLoop*, !dbg !7834
  store %struct.BMLoop* %37, %struct.BMLoop** %l, align 8, !dbg !7834
  br label %for.cond40, !dbg !7834, !llvm.loop !7846

for.end50:                                        ; preds = %if.then46, %for.cond40
  %38 = load i8, i8* %is_loose, align 1, !dbg !7848
  %tobool51 = icmp ne i8 %38, 0, !dbg !7848
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !7850

if.then52:                                        ; preds = %for.end50
  %39 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7851
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7853
  call void @BM_face_select_set(%struct.BMesh* %39, %struct.BMFace* %40, i8 zeroext 1), !dbg !7854
  br label %if.end53, !dbg !7855

if.end53:                                         ; preds = %if.then52, %for.end50
  br label %for.inc54, !dbg !7856

for.inc54:                                        ; preds = %if.end53
  %call55 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7823
  %41 = bitcast i8* %call55 to %struct.BMFace*, !dbg !7823
  store %struct.BMFace* %41, %struct.BMFace** %efa, align 8, !dbg !7823
  br label %for.cond36, !dbg !7823, !llvm.loop !7857

for.end56:                                        ; preds = %for.cond36
  br label %if.end57, !dbg !7859

if.end57:                                         ; preds = %for.end56, %if.end29
  %42 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7860
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %42), !dbg !7861
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7862
  %44 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7863
  %data = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 19, !dbg !7864
  %45 = load i8*, i8** %data, align 8, !dbg !7864
  call void @WM_event_add_notifier(%struct.bContext* %43, i32 274333696, i8* %45), !dbg !7865
  ret i32 4, !dbg !7866
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_mirror(%struct.wmOperatorType* %ot) #0 !dbg !7867 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7870
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7871
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i64 0, i64 0), i8** %name, align 8, !dbg !7872
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7873
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7874
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93, i64 0, i64 0), i8** %description, align 8, !dbg !7875
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7876
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7877
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i64 0, i64 0), i8** %idname, align 8, !dbg !7878
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7879
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7880
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_mirror_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7881
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7882
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7883
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7884
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7885
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7886
  store i16 3, i16* %flag, align 8, !dbg !7887
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7888
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7889
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7889
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7888
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i64 0, i64 0)), !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_mirror_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7892 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %extend = alloca i8, align 1
  %totmirr = alloca i32, align 4
  %totfail = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7897, metadata !DIExpression()), !dbg !7898
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7899
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7900
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7898
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7901, metadata !DIExpression()), !dbg !7902
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7903
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7904
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7902
  call void @llvm.dbg.declare(metadata i8* %extend, metadata !7905, metadata !DIExpression()), !dbg !7906
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7907
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !7908
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7908
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)), !dbg !7909
  %conv = trunc i32 %call2 to i8, !dbg !7909
  store i8 %conv, i8* %extend, align 1, !dbg !7906
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7910
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !7912
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7912
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 0, !dbg !7913
  %6 = load i32, i32* %totvert, align 8, !dbg !7913
  %tobool = icmp ne i32 %6, 0, !dbg !7910
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !7914

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7915
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !7916
  %8 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !7916
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 4, !dbg !7917
  %9 = load i32, i32* %totvertsel, align 8, !dbg !7917
  %tobool4 = icmp ne i32 %9, 0, !dbg !7915
  br i1 %tobool4, label %if.then, label %if.end9, !dbg !7918

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %totmirr, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.declare(metadata i32* %totfail, metadata !7922, metadata !DIExpression()), !dbg !7923
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7924
  %11 = load i8, i8* %extend, align 1, !dbg !7925
  call void @EDBM_select_mirrored(%struct.BMEditMesh* %10, i8 zeroext %11, i32* %totmirr, i32* %totfail), !dbg !7926
  %12 = load i32, i32* %totmirr, align 4, !dbg !7927
  %tobool5 = icmp ne i32 %12, 0, !dbg !7927
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !7929

if.then6:                                         ; preds = %if.then
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7930
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %13), !dbg !7932
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7933
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7934
  %data = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !7935
  %16 = load i8*, i8** %data, align 8, !dbg !7935
  call void @WM_event_add_notifier(%struct.bContext* %14, i32 274333696, i8* %16), !dbg !7936
  br label %if.end, !dbg !7937

if.end:                                           ; preds = %if.then6, %if.then
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7938
  %18 = load i32, i32* %totmirr, align 4, !dbg !7939
  %19 = load i32, i32* %totfail, align 4, !dbg !7940
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7941
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !7942
  %21 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !7942
  %selectmode = getelementptr inbounds %struct.BMesh, %struct.BMesh* %21, i32 0, i32 28, !dbg !7943
  %22 = load i16, i16* %selectmode, align 8, !dbg !7943
  %conv8 = trunc i16 %22 to i8, !dbg !7941
  call void @ED_mesh_report_mirror_ex(%struct.wmOperator* %17, i32 %18, i32 %19, i8 zeroext %conv8), !dbg !7944
  br label %if.end9, !dbg !7945

if.end9:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret i32 4, !dbg !7946
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_more(%struct.wmOperatorType* %ot) #0 !dbg !7947 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7950
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7951
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.96, i64 0, i64 0), i8** %name, align 8, !dbg !7952
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7953
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7954
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.97, i64 0, i64 0), i8** %idname, align 8, !dbg !7955
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7956
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7957
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.98, i64 0, i64 0), i8** %description, align 8, !dbg !7958
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7959
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7960
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_more_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7961
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7962
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7963
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7964
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7965
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7966
  store i16 3, i16* %flag, align 8, !dbg !7967
  ret void, !dbg !7968
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_more_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7969 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7974, metadata !DIExpression()), !dbg !7975
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7976
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7977
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7975
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7978, metadata !DIExpression()), !dbg !7979
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7980
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7981
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7979
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7982
  call void @EDBM_select_more(%struct.BMEditMesh* %2), !dbg !7983
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7984
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7985
  %5 = bitcast %struct.Object* %4 to i8*, !dbg !7985
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274333696, i8* %5), !dbg !7986
  ret i32 4, !dbg !7987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_less(%struct.wmOperatorType* %ot) #0 !dbg !7988 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7989, metadata !DIExpression()), !dbg !7990
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7991
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7992
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.99, i64 0, i64 0), i8** %name, align 8, !dbg !7993
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7994
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7995
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.100, i64 0, i64 0), i8** %idname, align 8, !dbg !7996
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7997
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7998
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.101, i64 0, i64 0), i8** %description, align 8, !dbg !7999
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8000
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8001
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_less_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8002
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8003
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8004
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8005
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8006
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8007
  store i16 3, i16* %flag, align 8, !dbg !8008
  ret void, !dbg !8009
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_less_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8010 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8011, metadata !DIExpression()), !dbg !8012
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8013, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8015, metadata !DIExpression()), !dbg !8016
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8017
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8018
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8016
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8019, metadata !DIExpression()), !dbg !8020
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8021
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8022
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8020
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8023
  call void @EDBM_select_less(%struct.BMEditMesh* %2), !dbg !8024
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8025
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8026
  %5 = bitcast %struct.Object* %4 to i8*, !dbg !8026
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274333696, i8* %5), !dbg !8027
  ret i32 4, !dbg !8028
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_nth(%struct.wmOperatorType* %ot) #0 !dbg !8029 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8032
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8033
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i64 0, i64 0), i8** %name, align 8, !dbg !8034
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8035
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8036
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.103, i64 0, i64 0), i8** %idname, align 8, !dbg !8037
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8038
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8039
  store i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.104, i64 0, i64 0), i8** %description, align 8, !dbg !8040
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8041
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8042
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_nth_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8043
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8044
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8045
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8046
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8047
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8048
  store i16 3, i16* %flag, align 8, !dbg !8049
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8050
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8051
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8051
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8050
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0), i32 2, i32 2, i32 2147483647, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i32 2, i32 100), !dbg !8052
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8053
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8054
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8054
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8053
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i32 -100, i32 100), !dbg !8055
  ret void, !dbg !8056
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_nth_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8057 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %nth = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8060, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8062, metadata !DIExpression()), !dbg !8063
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8064
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8065
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8063
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8066, metadata !DIExpression()), !dbg !8067
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8068
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8069
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8067
  call void @llvm.dbg.declare(metadata i32* %nth, metadata !8070, metadata !DIExpression()), !dbg !8071
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8072
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8073
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8073
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0)), !dbg !8074
  store i32 %call2, i32* %nth, align 4, !dbg !8071
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8075, metadata !DIExpression()), !dbg !8076
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8077
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8078
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8078
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0)), !dbg !8079
  store i32 %call4, i32* %offset, align 4, !dbg !8076
  %6 = load i32, i32* %offset, align 4, !dbg !8080
  %7 = load i32, i32* %nth, align 4, !dbg !8081
  %call5 = call i32 @mod_i(i32 %6, i32 %7), !dbg !8082
  store i32 %call5, i32* %offset, align 4, !dbg !8083
  %8 = load i32, i32* %offset, align 4, !dbg !8084
  %sub = sub nsw i32 %8, 1, !dbg !8084
  store i32 %sub, i32* %offset, align 4, !dbg !8084
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8085
  %10 = load i32, i32* %nth, align 4, !dbg !8087
  %11 = load i32, i32* %offset, align 4, !dbg !8088
  %call6 = call zeroext i8 @edbm_deselect_nth(%struct.BMEditMesh* %9, i32 %10, i32 %11), !dbg !8089
  %conv = zext i8 %call6 to i32, !dbg !8089
  %cmp = icmp eq i32 %conv, 0, !dbg !8090
  br i1 %cmp, label %if.then, label %if.end, !dbg !8091

if.then:                                          ; preds = %entry
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8092
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 8, !dbg !8094
  %13 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8094
  call void @BKE_report(%struct.ReportList* %13, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.221, i64 0, i64 0)), !dbg !8095
  store i32 2, i32* %retval, align 4, !dbg !8096
  br label %return, !dbg !8096

if.end:                                           ; preds = %entry
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8097
  call void @EDBM_update_generic(%struct.BMEditMesh* %14, i8 zeroext 0, i8 zeroext 0), !dbg !8098
  store i32 4, i32* %retval, align 4, !dbg !8099
  br label %return, !dbg !8099

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8100
  ret i32 %15, !dbg !8100
}

declare dso_local void @view3d_set_viewcontext(%struct.bContext*, %struct.ViewContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_edges_select_sharp(%struct.wmOperatorType* %ot) #0 !dbg !8101 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8104, metadata !DIExpression()), !dbg !8105
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8106
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8107
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.109, i64 0, i64 0), i8** %name, align 8, !dbg !8108
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8109
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8110
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i64 0, i64 0), i8** %description, align 8, !dbg !8111
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8112
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8113
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.111, i64 0, i64 0), i8** %idname, align 8, !dbg !8114
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8115
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8116
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_sharp_edges_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8117
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8118
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8119
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8120
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8121
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8122
  store i16 3, i16* %flag, align 8, !dbg !8123
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8124
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8125
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8125
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8124
  %call = call %struct.PropertyRNA* @RNA_def_float_rotation(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), i32 0, float* null, float 0x3F26E05A60000000, float 0x400921FB60000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), float 0x3F91DF46A0000000, float 0x400921FB60000000), !dbg !8126
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8127
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8128
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %9, float 0x3FE0C15240000000), !dbg !8129
  ret void, !dbg !8130
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_sharp_edges_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8131 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  %l1 = alloca %struct.BMLoop*, align 8
  %l2 = alloca %struct.BMLoop*, align 8
  %sharp = alloca float, align 4
  %angle = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8136, metadata !DIExpression()), !dbg !8137
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8138
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8139
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8137
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8140, metadata !DIExpression()), !dbg !8141
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8142
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8143
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8141
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l1, metadata !8148, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l2, metadata !8150, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.declare(metadata float* %sharp, metadata !8152, metadata !DIExpression()), !dbg !8153
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8154
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8155
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8155
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0)), !dbg !8156
  store float %call2, float* %sharp, align 4, !dbg !8153
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8157
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !8157
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8157
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 2, i8* null), !dbg !8157
  %6 = bitcast i8* %call3 to %struct.BMEdge*, !dbg !8157
  store %struct.BMEdge* %6, %struct.BMEdge** %e, align 8, !dbg !8157
  br label %for.cond, !dbg !8157

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8159
  %tobool = icmp ne %struct.BMEdge* %7, null, !dbg !8157
  br i1 %tobool, label %for.body, label %for.end, !dbg !8157

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8161
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 0, !dbg !8161
  %call4 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !8161
  %conv = zext i8 %call4 to i32, !dbg !8161
  %cmp = icmp eq i32 %conv, 0, !dbg !8164
  br i1 %cmp, label %land.lhs.true, label %if.end17, !dbg !8165

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8166
  %call6 = call zeroext i8 @BM_edge_loop_pair(%struct.BMEdge* %9, %struct.BMLoop** %l1, %struct.BMLoop** %l2), !dbg !8167
  %conv7 = zext i8 %call6 to i32, !dbg !8167
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !8167
  br i1 %tobool8, label %if.then, label %if.end17, !dbg !8168

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %angle, metadata !8169, metadata !DIExpression()), !dbg !8171
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !8172
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 3, !dbg !8173
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8173
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 4, !dbg !8174
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !8172
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8175
  %f9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 3, !dbg !8176
  %13 = load %struct.BMFace*, %struct.BMFace** %f9, align 8, !dbg !8176
  %no10 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %13, i32 0, i32 4, !dbg !8177
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %no10, i64 0, i64 0, !dbg !8175
  %call12 = call float @angle_normalized_v3v3(float* %arraydecay, float* %arraydecay11), !dbg !8178
  store float %call12, float* %angle, align 4, !dbg !8171
  %14 = load float, float* %angle, align 4, !dbg !8179
  %15 = call float @llvm.fabs.f32(float %14), !dbg !8181
  %16 = load float, float* %sharp, align 4, !dbg !8182
  %cmp13 = fcmp ogt float %15, %16, !dbg !8183
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !8184

if.then15:                                        ; preds = %if.then
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8185
  %bm16 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 0, !dbg !8187
  %18 = load %struct.BMesh*, %struct.BMesh** %bm16, align 8, !dbg !8187
  %19 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8188
  call void @BM_edge_select_set(%struct.BMesh* %18, %struct.BMEdge* %19, i8 zeroext 1), !dbg !8189
  br label %if.end, !dbg !8190

if.end:                                           ; preds = %if.then15, %if.then
  br label %if.end17, !dbg !8191

if.end17:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8192

for.inc:                                          ; preds = %if.end17
  %call18 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8159
  %20 = bitcast i8* %call18 to %struct.BMEdge*, !dbg !8159
  store %struct.BMEdge* %20, %struct.BMEdge** %e, align 8, !dbg !8159
  br label %for.cond, !dbg !8159, !llvm.loop !8193

for.end:                                          ; preds = %for.cond
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8195
  %22 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8196
  %data = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !8197
  %23 = load i8*, i8** %data, align 8, !dbg !8197
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 274333696, i8* %23), !dbg !8198
  ret i32 4, !dbg !8199
}

declare dso_local %struct.PropertyRNA* @RNA_def_float_rotation(i8*, i8*, i32, float*, float, float, i8*, i8*, float, float) #2

declare dso_local void @RNA_def_property_float_default(%struct.PropertyRNA*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_faces_select_linked_flat(%struct.wmOperatorType* %ot) #0 !dbg !8200 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8203, metadata !DIExpression()), !dbg !8204
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8205
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8206
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.114, i64 0, i64 0), i8** %name, align 8, !dbg !8207
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8208
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8209
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115, i64 0, i64 0), i8** %description, align 8, !dbg !8210
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8211
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8212
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i64 0, i64 0), i8** %idname, align 8, !dbg !8213
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8214
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8215
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_linked_flat_faces_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8216
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8217
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8218
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8219
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8220
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8221
  store i16 3, i16* %flag, align 8, !dbg !8222
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8223
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8224
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8224
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8223
  %call = call %struct.PropertyRNA* @RNA_def_float_rotation(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), i32 0, float* null, float 0x3F26E05A60000000, float 0x400921FB60000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), float 0x3F91DF46A0000000, float 0x400921FB60000000), !dbg !8225
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8226
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8227
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %9, float 0x3F91DF46A0000000), !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_linked_flat_faces_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8230 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %stack = alloca %struct.LinkNode*, align 8
  %_stack_pool = alloca %struct.BLI_mempool*, align 8
  %_stack_type = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %liter2 = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %l2 = alloca %struct.BMLoop*, align 8
  %angle_limit = alloca float, align 4
  %angle = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8233, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8235, metadata !DIExpression()), !dbg !8236
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8237
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8238
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8236
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8239, metadata !DIExpression()), !dbg !8240
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8241
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8242
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8240
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !8243, metadata !DIExpression()), !dbg !8244
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8245
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !8246
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !8246
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !8244
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %stack, metadata !8247, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata %struct.BLI_mempool** %_stack_pool, metadata !8256, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata %struct.BMFace** %_stack_type, metadata !8257, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8258, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !8260, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter2, metadata !8262, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !8264, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l2, metadata !8268, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.declare(metadata float* %angle_limit, metadata !8270, metadata !DIExpression()), !dbg !8271
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8272
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8273
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8273
  %call3 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0)), !dbg !8274
  store float %call3, float* %angle_limit, align 4, !dbg !8271
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8275
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %6, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !8276
  store %struct.LinkNode* null, %struct.LinkNode** %stack, align 8, !dbg !8277
  %call4 = call %struct.BLI_mempool* @BLI_mempool_create(i32 16, i32 0, i32 64, i32 0), !dbg !8277
  store %struct.BLI_mempool* %call4, %struct.BLI_mempool** %_stack_pool, align 8, !dbg !8277
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8279
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 3, i8* null), !dbg !8279
  %8 = bitcast i8* %call5 to %struct.BMFace*, !dbg !8279
  store %struct.BMFace* %8, %struct.BMFace** %f, align 8, !dbg !8279
  br label %for.cond, !dbg !8279

for.cond:                                         ; preds = %for.inc57, %entry
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8281
  %tobool = icmp ne %struct.BMFace* %9, null, !dbg !8279
  br i1 %tobool, label %for.body, label %for.end59, !dbg !8279

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8283
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %10, i32 0, i32 0, !dbg !8283
  %call6 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !8283
  %conv = zext i8 %call6 to i32, !dbg !8283
  %cmp = icmp ne i32 %conv, 0, !dbg !8286
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8287

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8288
  %head8 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 0, !dbg !8288
  %call9 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head8, i8 zeroext 16), !dbg !8288
  %conv10 = zext i8 %call9 to i32, !dbg !8288
  %cmp11 = icmp ne i32 %conv10, 0, !dbg !8289
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !8290

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %12 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8291
  %head14 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 0, !dbg !8291
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head14, i8 zeroext 1), !dbg !8291
  %conv16 = zext i8 %call15 to i32, !dbg !8291
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !8292
  br i1 %cmp17, label %if.then, label %if.end, !dbg !8293

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false, %for.body
  br label %for.inc57, !dbg !8294

if.end:                                           ; preds = %lor.lhs.false13
  br label %do.body, !dbg !8296

do.body:                                          ; preds = %cond.end, %if.end
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8297
  %14 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8299
  call void @BM_face_select_set(%struct.BMesh* %13, %struct.BMFace* %14, i8 zeroext 1), !dbg !8300
  %15 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8301
  %head19 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %15, i32 0, i32 0, !dbg !8301
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head19, i8 zeroext 16), !dbg !8301
  %16 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8302
  %17 = bitcast %struct.BMFace* %16 to i8*, !dbg !8302
  %call20 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %17), !dbg !8302
  %18 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !8302
  store %struct.BMLoop* %18, %struct.BMLoop** %l, align 8, !dbg !8302
  br label %for.cond21, !dbg !8302

for.cond21:                                       ; preds = %for.inc51, %do.body
  %19 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8304
  %tobool22 = icmp ne %struct.BMLoop* %19, null, !dbg !8302
  br i1 %tobool22, label %for.body23, label %for.end53, !dbg !8302

for.body23:                                       ; preds = %for.cond21
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8306
  %21 = bitcast %struct.BMLoop* %20 to i8*, !dbg !8306
  %call24 = call i8* @BM_iter_new(%struct.BMIter* %liter2, %struct.BMesh* null, i8 zeroext 13, i8* %21), !dbg !8306
  %22 = bitcast i8* %call24 to %struct.BMLoop*, !dbg !8306
  store %struct.BMLoop* %22, %struct.BMLoop** %l2, align 8, !dbg !8306
  br label %for.cond25, !dbg !8306

for.cond25:                                       ; preds = %for.inc, %for.body23
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8309
  %tobool26 = icmp ne %struct.BMLoop* %23, null, !dbg !8306
  br i1 %tobool26, label %for.body27, label %for.end, !dbg !8306

for.body27:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata float* %angle, metadata !8311, metadata !DIExpression()), !dbg !8313
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8314
  %f28 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 3, !dbg !8314
  %25 = load %struct.BMFace*, %struct.BMFace** %f28, align 8, !dbg !8314
  %head29 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %25, i32 0, i32 0, !dbg !8314
  %call30 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head29, i8 zeroext 16), !dbg !8314
  %conv31 = zext i8 %call30 to i32, !dbg !8314
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !8314
  br i1 %tobool32, label %if.then39, label %lor.lhs.false33, !dbg !8316

lor.lhs.false33:                                  ; preds = %for.body27
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8317
  %f34 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 3, !dbg !8317
  %27 = load %struct.BMFace*, %struct.BMFace** %f34, align 8, !dbg !8317
  %head35 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %27, i32 0, i32 0, !dbg !8317
  %call36 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head35, i8 zeroext 2), !dbg !8317
  %conv37 = zext i8 %call36 to i32, !dbg !8317
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !8317
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !8318

if.then39:                                        ; preds = %lor.lhs.false33, %for.body27
  br label %for.inc, !dbg !8319

if.end40:                                         ; preds = %lor.lhs.false33
  %28 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8321
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %28, i32 0, i32 4, !dbg !8322
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !8321
  %29 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8323
  %f41 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %29, i32 0, i32 3, !dbg !8324
  %30 = load %struct.BMFace*, %struct.BMFace** %f41, align 8, !dbg !8324
  %no42 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %30, i32 0, i32 4, !dbg !8325
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %no42, i64 0, i64 0, !dbg !8323
  %call44 = call float @angle_normalized_v3v3(float* %arraydecay, float* %arraydecay43), !dbg !8326
  store float %call44, float* %angle, align 4, !dbg !8327
  %31 = load float, float* %angle, align 4, !dbg !8328
  %32 = load float, float* %angle_limit, align 4, !dbg !8330
  %cmp45 = fcmp olt float %31, %32, !dbg !8331
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !8332

if.then47:                                        ; preds = %if.end40
  %33 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8333
  %f48 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %33, i32 0, i32 3, !dbg !8333
  %34 = load %struct.BMFace*, %struct.BMFace** %f48, align 8, !dbg !8333
  %35 = bitcast %struct.BMFace* %34 to i8*, !dbg !8333
  %36 = load %struct.BLI_mempool*, %struct.BLI_mempool** %_stack_pool, align 8, !dbg !8333
  call void @BLI_linklist_prepend_pool(%struct.LinkNode** %stack, i8* %35, %struct.BLI_mempool* %36), !dbg !8333
  br label %if.end49, !dbg !8335

if.end49:                                         ; preds = %if.then47, %if.end40
  br label %for.inc, !dbg !8336

for.inc:                                          ; preds = %if.end49, %if.then39
  %call50 = call i8* @BM_iter_step(%struct.BMIter* %liter2), !dbg !8309
  %37 = bitcast i8* %call50 to %struct.BMLoop*, !dbg !8309
  store %struct.BMLoop* %37, %struct.BMLoop** %l2, align 8, !dbg !8309
  br label %for.cond25, !dbg !8309, !llvm.loop !8337

for.end:                                          ; preds = %for.cond25
  br label %for.inc51, !dbg !8339

for.inc51:                                        ; preds = %for.end
  %call52 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !8304
  %38 = bitcast i8* %call52 to %struct.BMLoop*, !dbg !8304
  store %struct.BMLoop* %38, %struct.BMLoop** %l, align 8, !dbg !8304
  br label %for.cond21, !dbg !8304, !llvm.loop !8340

for.end53:                                        ; preds = %for.cond21
  br label %do.cond, !dbg !8342

do.cond:                                          ; preds = %for.end53
  %39 = load %struct.LinkNode*, %struct.LinkNode** %stack, align 8, !dbg !8343
  %tobool54 = icmp ne %struct.LinkNode* %39, null, !dbg !8343
  br i1 %tobool54, label %cond.true, label %cond.false, !dbg !8343

cond.true:                                        ; preds = %do.cond
  %40 = load %struct.BLI_mempool*, %struct.BLI_mempool** %_stack_pool, align 8, !dbg !8343
  %call55 = call i8* @BLI_linklist_pop_pool(%struct.LinkNode** %stack, %struct.BLI_mempool* %40), !dbg !8343
  br label %cond.end, !dbg !8343

cond.false:                                       ; preds = %do.cond
  br label %cond.end, !dbg !8343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call55, %cond.true ], [ null, %cond.false ], !dbg !8343
  %41 = bitcast i8* %cond to %struct.BMFace*, !dbg !8343
  store %struct.BMFace* %41, %struct.BMFace** %f, align 8, !dbg !8344
  %tobool56 = icmp ne %struct.BMFace* %41, null, !dbg !8342
  br i1 %tobool56, label %do.body, label %do.end, !dbg !8342, !llvm.loop !8345

do.end:                                           ; preds = %cond.end
  br label %for.inc57, !dbg !8347

for.inc57:                                        ; preds = %do.end, %if.then
  %call58 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8281
  %42 = bitcast i8* %call58 to %struct.BMFace*, !dbg !8281
  store %struct.BMFace* %42, %struct.BMFace** %f, align 8, !dbg !8281
  br label %for.cond, !dbg !8281, !llvm.loop !8348

for.end59:                                        ; preds = %for.cond
  %43 = load %struct.BLI_mempool*, %struct.BLI_mempool** %_stack_pool, align 8, !dbg !8350
  call void @BLI_mempool_destroy(%struct.BLI_mempool* %43), !dbg !8350
  store %struct.BLI_mempool* null, %struct.BLI_mempool** %_stack_pool, align 8, !dbg !8350
  %44 = load %struct.BLI_mempool*, %struct.BLI_mempool** %_stack_pool, align 8, !dbg !8350
  store %struct.LinkNode* null, %struct.LinkNode** %stack, align 8, !dbg !8350
  %45 = load %struct.LinkNode*, %struct.LinkNode** %stack, align 8, !dbg !8350
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8352
  %47 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8353
  %data = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 19, !dbg !8354
  %48 = load i8*, i8** %data, align 8, !dbg !8354
  call void @WM_event_add_notifier(%struct.bContext* %46, i32 274333696, i8* %48), !dbg !8355
  ret i32 4, !dbg !8356
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_non_manifold(%struct.wmOperatorType* %ot) #0 !dbg !8357 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8360
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8361
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.117, i64 0, i64 0), i8** %name, align 8, !dbg !8362
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8363
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8364
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.118, i64 0, i64 0), i8** %description, align 8, !dbg !8365
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8366
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8367
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.119, i64 0, i64 0), i8** %idname, align 8, !dbg !8368
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8369
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8370
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_non_manifold_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8371
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8372
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8373
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8374
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8375
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8376
  store i16 3, i16* %flag, align 8, !dbg !8377
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8378
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8379
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8379
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8378
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0)), !dbg !8380
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8381
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8382
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8382
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8381
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i64 0, i64 0)), !dbg !8383
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8384
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !8385
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !8385
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !8384
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.123, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.125, i64 0, i64 0)), !dbg !8386
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8387
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !8388
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !8388
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !8387
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.128, i64 0, i64 0)), !dbg !8389
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8390
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !8391
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !8391
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !8390
  %call8 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.131, i64 0, i64 0)), !dbg !8392
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8393
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 11, !dbg !8394
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !8394
  %23 = bitcast %struct.StructRNA* %22 to i8*, !dbg !8393
  %call10 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.132, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.133, i64 0, i64 0)), !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_non_manifold_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8397 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %v = alloca %struct.BMVert*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %use_wire = alloca i8, align 1
  %use_boundary = alloca i8, align 1
  %use_multi_face = alloca i8, align 1
  %use_non_contiguous = alloca i8, align 1
  %use_verts = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8398, metadata !DIExpression()), !dbg !8399
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8400, metadata !DIExpression()), !dbg !8401
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8402, metadata !DIExpression()), !dbg !8403
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8404
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8405
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8403
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8406, metadata !DIExpression()), !dbg !8407
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8408
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8409
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8407
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !8410, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !8412, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8414, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.declare(metadata i8* %use_wire, metadata !8416, metadata !DIExpression()), !dbg !8417
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8418
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8419
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8419
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i64 0, i64 0)), !dbg !8420
  %conv = trunc i32 %call2 to i8, !dbg !8420
  store i8 %conv, i8* %use_wire, align 1, !dbg !8417
  call void @llvm.dbg.declare(metadata i8* %use_boundary, metadata !8421, metadata !DIExpression()), !dbg !8422
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8423
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8424
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8424
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.123, i64 0, i64 0)), !dbg !8425
  %conv5 = trunc i32 %call4 to i8, !dbg !8425
  store i8 %conv5, i8* %use_boundary, align 1, !dbg !8422
  call void @llvm.dbg.declare(metadata i8* %use_multi_face, metadata !8426, metadata !DIExpression()), !dbg !8427
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8428
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !8429
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !8429
  %call7 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i64 0, i64 0)), !dbg !8430
  %conv8 = trunc i32 %call7 to i8, !dbg !8430
  store i8 %conv8, i8* %use_multi_face, align 1, !dbg !8427
  call void @llvm.dbg.declare(metadata i8* %use_non_contiguous, metadata !8431, metadata !DIExpression()), !dbg !8432
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8433
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !8434
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !8434
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i64 0, i64 0)), !dbg !8435
  %conv11 = trunc i32 %call10 to i8, !dbg !8435
  store i8 %conv11, i8* %use_non_contiguous, align 1, !dbg !8432
  call void @llvm.dbg.declare(metadata i8* %use_verts, metadata !8436, metadata !DIExpression()), !dbg !8437
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8438
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !8439
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !8439
  %call13 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.132, i64 0, i64 0)), !dbg !8440
  %conv14 = trunc i32 %call13 to i8, !dbg !8440
  store i8 %conv14, i8* %use_verts, align 1, !dbg !8437
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8441
  %ptr15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !8443
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !8443
  %call16 = call i32 @RNA_boolean_get(%struct.PointerRNA* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)), !dbg !8444
  %tobool = icmp ne i32 %call16, 0, !dbg !8444
  br i1 %tobool, label %if.end, label %if.then, !dbg !8445

if.then:                                          ; preds = %entry
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8446
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %14, i8 zeroext 1), !dbg !8447
  br label %if.end, !dbg !8447

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8448
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 12, !dbg !8450
  %16 = load i16, i16* %selectmode, align 4, !dbg !8450
  %conv17 = sext i16 %16 to i32, !dbg !8448
  %cmp = icmp eq i32 %conv17, 4, !dbg !8451
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !8452

if.then19:                                        ; preds = %if.end
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8453
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 8, !dbg !8455
  %18 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8455
  call void @BKE_report(%struct.ReportList* %18, i32 32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.222, i64 0, i64 0)), !dbg !8456
  store i32 2, i32* %retval, align 4, !dbg !8457
  br label %return, !dbg !8457

if.end20:                                         ; preds = %if.end
  %19 = load i8, i8* %use_verts, align 1, !dbg !8458
  %tobool21 = icmp ne i8 %19, 0, !dbg !8458
  br i1 %tobool21, label %if.then22, label %if.end35, !dbg !8460

if.then22:                                        ; preds = %if.end20
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8461
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !8461
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8461
  %call23 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %21, i8 zeroext 1, i8* null), !dbg !8461
  %22 = bitcast i8* %call23 to %struct.BMVert*, !dbg !8461
  store %struct.BMVert* %22, %struct.BMVert** %v, align 8, !dbg !8461
  br label %for.cond, !dbg !8461

for.cond:                                         ; preds = %for.inc, %if.then22
  %23 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8464
  %tobool24 = icmp ne %struct.BMVert* %23, null, !dbg !8461
  br i1 %tobool24, label %for.body, label %for.end, !dbg !8461

for.body:                                         ; preds = %for.cond
  %24 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8466
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %24, i32 0, i32 0, !dbg !8466
  %call25 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !8466
  %tobool26 = icmp ne i8 %call25, 0, !dbg !8466
  br i1 %tobool26, label %if.end33, label %if.then27, !dbg !8469

if.then27:                                        ; preds = %for.body
  %25 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8470
  %call28 = call zeroext i8 @BM_vert_is_manifold(%struct.BMVert* %25), !dbg !8473
  %tobool29 = icmp ne i8 %call28, 0, !dbg !8473
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !8474

if.then30:                                        ; preds = %if.then27
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8475
  %bm31 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !8477
  %27 = load %struct.BMesh*, %struct.BMesh** %bm31, align 8, !dbg !8477
  %28 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8478
  call void @BM_vert_select_set(%struct.BMesh* %27, %struct.BMVert* %28, i8 zeroext 1), !dbg !8479
  br label %if.end32, !dbg !8480

if.end32:                                         ; preds = %if.then30, %if.then27
  br label %if.end33, !dbg !8481

if.end33:                                         ; preds = %if.end32, %for.body
  br label %for.inc, !dbg !8482

for.inc:                                          ; preds = %if.end33
  %call34 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8464
  %29 = bitcast i8* %call34 to %struct.BMVert*, !dbg !8464
  store %struct.BMVert* %29, %struct.BMVert** %v, align 8, !dbg !8464
  br label %for.cond, !dbg !8464, !llvm.loop !8483

for.end:                                          ; preds = %for.cond
  br label %if.end35, !dbg !8485

if.end35:                                         ; preds = %for.end, %if.end20
  %30 = load i8, i8* %use_wire, align 1, !dbg !8486
  %conv36 = zext i8 %30 to i32, !dbg !8486
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !8486
  br i1 %tobool37, label %if.then46, label %lor.lhs.false, !dbg !8488

lor.lhs.false:                                    ; preds = %if.end35
  %31 = load i8, i8* %use_boundary, align 1, !dbg !8489
  %conv38 = zext i8 %31 to i32, !dbg !8489
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !8489
  br i1 %tobool39, label %if.then46, label %lor.lhs.false40, !dbg !8490

lor.lhs.false40:                                  ; preds = %lor.lhs.false
  %32 = load i8, i8* %use_multi_face, align 1, !dbg !8491
  %conv41 = zext i8 %32 to i32, !dbg !8491
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !8491
  br i1 %tobool42, label %if.then46, label %lor.lhs.false43, !dbg !8492

lor.lhs.false43:                                  ; preds = %lor.lhs.false40
  %33 = load i8, i8* %use_non_contiguous, align 1, !dbg !8493
  %conv44 = zext i8 %33 to i32, !dbg !8493
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !8493
  br i1 %tobool45, label %if.then46, label %if.end92, !dbg !8494

if.then46:                                        ; preds = %lor.lhs.false43, %lor.lhs.false40, %lor.lhs.false, %if.end35
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8495
  %bm47 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %34, i32 0, i32 0, !dbg !8495
  %35 = load %struct.BMesh*, %struct.BMesh** %bm47, align 8, !dbg !8495
  %call48 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %35, i8 zeroext 2, i8* null), !dbg !8495
  %36 = bitcast i8* %call48 to %struct.BMEdge*, !dbg !8495
  store %struct.BMEdge* %36, %struct.BMEdge** %e, align 8, !dbg !8495
  br label %for.cond49, !dbg !8495

for.cond49:                                       ; preds = %for.inc89, %if.then46
  %37 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8498
  %tobool50 = icmp ne %struct.BMEdge* %37, null, !dbg !8495
  br i1 %tobool50, label %for.body51, label %for.end91, !dbg !8495

for.body51:                                       ; preds = %for.cond49
  %38 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8500
  %head52 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %38, i32 0, i32 0, !dbg !8500
  %call53 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head52, i8 zeroext 2), !dbg !8500
  %tobool54 = icmp ne i8 %call53, 0, !dbg !8500
  br i1 %tobool54, label %if.end88, label %if.then55, !dbg !8503

if.then55:                                        ; preds = %for.body51
  %39 = load i8, i8* %use_wire, align 1, !dbg !8504
  %conv56 = zext i8 %39 to i32, !dbg !8504
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !8504
  br i1 %tobool57, label %land.lhs.true, label %lor.lhs.false61, !dbg !8507

land.lhs.true:                                    ; preds = %if.then55
  %40 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8508
  %call58 = call zeroext i8 @BM_edge_is_wire(%struct.BMEdge* %40), !dbg !8509
  %conv59 = zext i8 %call58 to i32, !dbg !8509
  %tobool60 = icmp ne i32 %conv59, 0, !dbg !8509
  br i1 %tobool60, label %if.then85, label %lor.lhs.false61, !dbg !8510

lor.lhs.false61:                                  ; preds = %land.lhs.true, %if.then55
  %41 = load i8, i8* %use_boundary, align 1, !dbg !8511
  %conv62 = zext i8 %41 to i32, !dbg !8511
  %tobool63 = icmp ne i32 %conv62, 0, !dbg !8511
  br i1 %tobool63, label %land.lhs.true64, label %lor.lhs.false68, !dbg !8512

land.lhs.true64:                                  ; preds = %lor.lhs.false61
  %42 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8513
  %call65 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %42), !dbg !8514
  %conv66 = zext i8 %call65 to i32, !dbg !8514
  %tobool67 = icmp ne i32 %conv66, 0, !dbg !8514
  br i1 %tobool67, label %if.then85, label %lor.lhs.false68, !dbg !8515

lor.lhs.false68:                                  ; preds = %land.lhs.true64, %lor.lhs.false61
  %43 = load i8, i8* %use_non_contiguous, align 1, !dbg !8516
  %conv69 = zext i8 %43 to i32, !dbg !8516
  %tobool70 = icmp ne i32 %conv69, 0, !dbg !8516
  br i1 %tobool70, label %land.lhs.true71, label %lor.lhs.false78, !dbg !8517

land.lhs.true71:                                  ; preds = %lor.lhs.false68
  %44 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8518
  %call72 = call zeroext i8 @BM_edge_is_manifold(%struct.BMEdge* %44), !dbg !8519
  %conv73 = zext i8 %call72 to i32, !dbg !8519
  %tobool74 = icmp ne i32 %conv73, 0, !dbg !8519
  br i1 %tobool74, label %land.lhs.true75, label %lor.lhs.false78, !dbg !8520

land.lhs.true75:                                  ; preds = %land.lhs.true71
  %45 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8521
  %call76 = call zeroext i8 @BM_edge_is_contiguous(%struct.BMEdge* %45), !dbg !8522
  %tobool77 = icmp ne i8 %call76, 0, !dbg !8522
  br i1 %tobool77, label %lor.lhs.false78, label %if.then85, !dbg !8523

lor.lhs.false78:                                  ; preds = %land.lhs.true75, %land.lhs.true71, %lor.lhs.false68
  %46 = load i8, i8* %use_multi_face, align 1, !dbg !8524
  %conv79 = zext i8 %46 to i32, !dbg !8524
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !8524
  br i1 %tobool80, label %land.lhs.true81, label %if.end87, !dbg !8525

land.lhs.true81:                                  ; preds = %lor.lhs.false78
  %47 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8526
  %call82 = call i32 @BM_edge_face_count(%struct.BMEdge* %47), !dbg !8527
  %cmp83 = icmp sgt i32 %call82, 2, !dbg !8528
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !8529

if.then85:                                        ; preds = %land.lhs.true81, %land.lhs.true75, %land.lhs.true64, %land.lhs.true
  %48 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8530
  %bm86 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %48, i32 0, i32 0, !dbg !8532
  %49 = load %struct.BMesh*, %struct.BMesh** %bm86, align 8, !dbg !8532
  %50 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8533
  call void @BM_edge_select_set(%struct.BMesh* %49, %struct.BMEdge* %50, i8 zeroext 1), !dbg !8534
  br label %if.end87, !dbg !8535

if.end87:                                         ; preds = %if.then85, %land.lhs.true81, %lor.lhs.false78
  br label %if.end88, !dbg !8536

if.end88:                                         ; preds = %if.end87, %for.body51
  br label %for.inc89, !dbg !8537

for.inc89:                                        ; preds = %if.end88
  %call90 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8498
  %51 = bitcast i8* %call90 to %struct.BMEdge*, !dbg !8498
  store %struct.BMEdge* %51, %struct.BMEdge** %e, align 8, !dbg !8498
  br label %for.cond49, !dbg !8498, !llvm.loop !8538

for.end91:                                        ; preds = %for.cond49
  br label %if.end92, !dbg !8540

if.end92:                                         ; preds = %for.end91, %lor.lhs.false43
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8541
  %53 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8542
  %data = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 19, !dbg !8543
  %54 = load i8*, i8** %data, align 8, !dbg !8543
  call void @WM_event_add_notifier(%struct.bContext* %52, i32 274333696, i8* %54), !dbg !8544
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8545
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %55), !dbg !8546
  store i32 4, i32* %retval, align 4, !dbg !8547
  br label %return, !dbg !8547

return:                                           ; preds = %if.end92, %if.then19
  %56 = load i32, i32* %retval, align 4, !dbg !8548
  ret i32 %56, !dbg !8548
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_random(%struct.wmOperatorType* %ot) #0 !dbg !8549 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8552
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8553
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i64 0, i64 0), i8** %name, align 8, !dbg !8554
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8555
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8556
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.135, i64 0, i64 0), i8** %description, align 8, !dbg !8557
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8558
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8559
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.136, i64 0, i64 0), i8** %idname, align 8, !dbg !8560
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8561
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8562
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_random_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8563
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8564
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8565
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8566
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8567
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8568
  store i16 3, i16* %flag, align 8, !dbg !8569
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8570
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8571
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8571
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8570
  %call = call %struct.PropertyRNA* @RNA_def_float_percentage(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i64 0, i64 0), float 5.000000e+01, float 0.000000e+00, float 1.000000e+02, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.139, i64 0, i64 0), float 0.000000e+00, float 1.000000e+02), !dbg !8572
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8573
  call void @WM_operator_properties_select_action_simple(%struct.wmOperatorType* %9, i32 1), !dbg !8574
  ret void, !dbg !8575
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_random_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8576 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %select = alloca i8, align 1
  %randfac = alloca float, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %efa = alloca %struct.BMFace*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8577, metadata !DIExpression()), !dbg !8578
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8579, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8581, metadata !DIExpression()), !dbg !8582
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8583
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8584
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8582
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8585, metadata !DIExpression()), !dbg !8586
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8587
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8588
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8586
  call void @llvm.dbg.declare(metadata i8* %select, metadata !8589, metadata !DIExpression()), !dbg !8590
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8591
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8592
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8592
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)), !dbg !8593
  %cmp = icmp eq i32 %call2, 1, !dbg !8594
  %conv = zext i1 %cmp to i32, !dbg !8594
  %conv3 = trunc i32 %conv to i8, !dbg !8595
  store i8 %conv3, i8* %select, align 1, !dbg !8590
  call void @llvm.dbg.declare(metadata float* %randfac, metadata !8596, metadata !DIExpression()), !dbg !8597
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8598
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8599
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !8599
  %call5 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i64 0, i64 0)), !dbg !8600
  %div = fdiv float %call5, 1.000000e+02, !dbg !8601
  store float %div, float* %randfac, align 4, !dbg !8597
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8602, metadata !DIExpression()), !dbg !8603
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8604
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 12, !dbg !8606
  %7 = load i16, i16* %selectmode, align 4, !dbg !8606
  %conv6 = sext i16 %7 to i32, !dbg !8604
  %and = and i32 %conv6, 1, !dbg !8607
  %tobool = icmp ne i32 %and, 0, !dbg !8607
  br i1 %tobool, label %if.then, label %if.else, !dbg !8608

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !8609, metadata !DIExpression()), !dbg !8611
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8612
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !8612
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8612
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 1, i8* null), !dbg !8612
  %10 = bitcast i8* %call7 to %struct.BMVert*, !dbg !8612
  store %struct.BMVert* %10, %struct.BMVert** %eve, align 8, !dbg !8612
  br label %for.cond, !dbg !8612

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8614
  %tobool8 = icmp ne %struct.BMVert* %11, null, !dbg !8612
  br i1 %tobool8, label %for.body, label %for.end, !dbg !8612

for.body:                                         ; preds = %for.cond
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8616
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 0, !dbg !8616
  %call9 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !8616
  %tobool10 = icmp ne i8 %call9, 0, !dbg !8616
  br i1 %tobool10, label %if.end, label %land.lhs.true, !dbg !8619

land.lhs.true:                                    ; preds = %for.body
  %call11 = call float @BLI_frand(), !dbg !8620
  %13 = load float, float* %randfac, align 4, !dbg !8621
  %cmp12 = fcmp olt float %call11, %13, !dbg !8622
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !8623

if.then14:                                        ; preds = %land.lhs.true
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8624
  %bm15 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !8626
  %15 = load %struct.BMesh*, %struct.BMesh** %bm15, align 8, !dbg !8626
  %16 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8627
  %17 = load i8, i8* %select, align 1, !dbg !8628
  call void @BM_vert_select_set(%struct.BMesh* %15, %struct.BMVert* %16, i8 zeroext %17), !dbg !8629
  br label %if.end, !dbg !8630

if.end:                                           ; preds = %if.then14, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8631

for.inc:                                          ; preds = %if.end
  %call16 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8614
  %18 = bitcast i8* %call16 to %struct.BMVert*, !dbg !8614
  store %struct.BMVert* %18, %struct.BMVert** %eve, align 8, !dbg !8614
  br label %for.cond, !dbg !8614, !llvm.loop !8632

for.end:                                          ; preds = %for.cond
  br label %if.end60, !dbg !8634

if.else:                                          ; preds = %entry
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8635
  %selectmode17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 12, !dbg !8637
  %20 = load i16, i16* %selectmode17, align 4, !dbg !8637
  %conv18 = sext i16 %20 to i32, !dbg !8635
  %and19 = and i32 %conv18, 2, !dbg !8638
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8638
  br i1 %tobool20, label %if.then21, label %if.else40, !dbg !8639

if.then21:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !8640, metadata !DIExpression()), !dbg !8642
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8643
  %bm22 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !8643
  %22 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !8643
  %call23 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 2, i8* null), !dbg !8643
  %23 = bitcast i8* %call23 to %struct.BMEdge*, !dbg !8643
  store %struct.BMEdge* %23, %struct.BMEdge** %eed, align 8, !dbg !8643
  br label %for.cond24, !dbg !8643

for.cond24:                                       ; preds = %for.inc37, %if.then21
  %24 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !8645
  %tobool25 = icmp ne %struct.BMEdge* %24, null, !dbg !8643
  br i1 %tobool25, label %for.body26, label %for.end39, !dbg !8643

for.body26:                                       ; preds = %for.cond24
  %25 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !8647
  %head27 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %25, i32 0, i32 0, !dbg !8647
  %call28 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head27, i8 zeroext 2), !dbg !8647
  %tobool29 = icmp ne i8 %call28, 0, !dbg !8647
  br i1 %tobool29, label %if.end36, label %land.lhs.true30, !dbg !8650

land.lhs.true30:                                  ; preds = %for.body26
  %call31 = call float @BLI_frand(), !dbg !8651
  %26 = load float, float* %randfac, align 4, !dbg !8652
  %cmp32 = fcmp olt float %call31, %26, !dbg !8653
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !8654

if.then34:                                        ; preds = %land.lhs.true30
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8655
  %bm35 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !8657
  %28 = load %struct.BMesh*, %struct.BMesh** %bm35, align 8, !dbg !8657
  %29 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !8658
  %30 = load i8, i8* %select, align 1, !dbg !8659
  call void @BM_edge_select_set(%struct.BMesh* %28, %struct.BMEdge* %29, i8 zeroext %30), !dbg !8660
  br label %if.end36, !dbg !8661

if.end36:                                         ; preds = %if.then34, %land.lhs.true30, %for.body26
  br label %for.inc37, !dbg !8662

for.inc37:                                        ; preds = %if.end36
  %call38 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8645
  %31 = bitcast i8* %call38 to %struct.BMEdge*, !dbg !8645
  store %struct.BMEdge* %31, %struct.BMEdge** %eed, align 8, !dbg !8645
  br label %for.cond24, !dbg !8645, !llvm.loop !8663

for.end39:                                        ; preds = %for.cond24
  br label %if.end59, !dbg !8665

if.else40:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !8666, metadata !DIExpression()), !dbg !8668
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8669
  %bm41 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !8669
  %33 = load %struct.BMesh*, %struct.BMesh** %bm41, align 8, !dbg !8669
  %call42 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %33, i8 zeroext 3, i8* null), !dbg !8669
  %34 = bitcast i8* %call42 to %struct.BMFace*, !dbg !8669
  store %struct.BMFace* %34, %struct.BMFace** %efa, align 8, !dbg !8669
  br label %for.cond43, !dbg !8669

for.cond43:                                       ; preds = %for.inc56, %if.else40
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8671
  %tobool44 = icmp ne %struct.BMFace* %35, null, !dbg !8669
  br i1 %tobool44, label %for.body45, label %for.end58, !dbg !8669

for.body45:                                       ; preds = %for.cond43
  %36 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8673
  %head46 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %36, i32 0, i32 0, !dbg !8673
  %call47 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head46, i8 zeroext 2), !dbg !8673
  %tobool48 = icmp ne i8 %call47, 0, !dbg !8673
  br i1 %tobool48, label %if.end55, label %land.lhs.true49, !dbg !8676

land.lhs.true49:                                  ; preds = %for.body45
  %call50 = call float @BLI_frand(), !dbg !8677
  %37 = load float, float* %randfac, align 4, !dbg !8678
  %cmp51 = fcmp olt float %call50, %37, !dbg !8679
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !8680

if.then53:                                        ; preds = %land.lhs.true49
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8681
  %bm54 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %38, i32 0, i32 0, !dbg !8683
  %39 = load %struct.BMesh*, %struct.BMesh** %bm54, align 8, !dbg !8683
  %40 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !8684
  %41 = load i8, i8* %select, align 1, !dbg !8685
  call void @BM_face_select_set(%struct.BMesh* %39, %struct.BMFace* %40, i8 zeroext %41), !dbg !8686
  br label %if.end55, !dbg !8687

if.end55:                                         ; preds = %if.then53, %land.lhs.true49, %for.body45
  br label %for.inc56, !dbg !8688

for.inc56:                                        ; preds = %if.end55
  %call57 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8671
  %42 = bitcast i8* %call57 to %struct.BMFace*, !dbg !8671
  store %struct.BMFace* %42, %struct.BMFace** %efa, align 8, !dbg !8671
  br label %for.cond43, !dbg !8671, !llvm.loop !8689

for.end58:                                        ; preds = %for.cond43
  br label %if.end59

if.end59:                                         ; preds = %for.end58, %for.end39
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %for.end
  %43 = load i8, i8* %select, align 1, !dbg !8691
  %tobool61 = icmp ne i8 %43, 0, !dbg !8691
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !8693

if.then62:                                        ; preds = %if.end60
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8694
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %44), !dbg !8696
  br label %if.end64, !dbg !8697

if.else63:                                        ; preds = %if.end60
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8698
  call void @EDBM_deselect_flush(%struct.BMEditMesh* %45), !dbg !8700
  br label %if.end64

if.end64:                                         ; preds = %if.else63, %if.then62
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8701
  %47 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8702
  %data = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 19, !dbg !8703
  %48 = load i8*, i8** %data, align 8, !dbg !8703
  call void @WM_event_add_notifier(%struct.bContext* %46, i32 274333696, i8* %48), !dbg !8704
  ret i32 4, !dbg !8705
}

declare dso_local %struct.PropertyRNA* @RNA_def_float_percentage(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

declare dso_local void @WM_operator_properties_select_action_simple(%struct.wmOperatorType*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_ungrouped(%struct.wmOperatorType* %ot) #0 !dbg !8706 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8707, metadata !DIExpression()), !dbg !8708
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8709
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8710
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.140, i64 0, i64 0), i8** %name, align 8, !dbg !8711
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8712
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8713
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.141, i64 0, i64 0), i8** %idname, align 8, !dbg !8714
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8715
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8716
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.142, i64 0, i64 0), i8** %description, align 8, !dbg !8717
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8718
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8719
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_ungrouped_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8720
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8721
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8722
  store i32 (%struct.bContext*)* @edbm_select_ungrouped_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8723
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8724
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8725
  store i16 3, i16* %flag, align 8, !dbg !8726
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8727
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8728
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8728
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8727
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0)), !dbg !8729
  ret void, !dbg !8730
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_ungrouped_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8731 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8732, metadata !DIExpression()), !dbg !8733
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8736, metadata !DIExpression()), !dbg !8737
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8738
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8739
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8737
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8740, metadata !DIExpression()), !dbg !8741
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8742
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8743
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8741
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !8744, metadata !DIExpression()), !dbg !8745
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8746
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !8747
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8747
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 24, !dbg !8748
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !8749
  store i32 %call2, i32* %cd_dvert_offset, align 4, !dbg !8745
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !8750, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8752, metadata !DIExpression()), !dbg !8753
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8754
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8756
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8756
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)), !dbg !8757
  %tobool = icmp ne i32 %call3, 0, !dbg !8757
  br i1 %tobool, label %if.end, label %if.then, !dbg !8758

if.then:                                          ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8759
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %6, i8 zeroext 1), !dbg !8761
  br label %if.end, !dbg !8762

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8763
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !8763
  %8 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !8763
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 1, i8* null), !dbg !8763
  %9 = bitcast i8* %call5 to %struct.BMVert*, !dbg !8763
  store %struct.BMVert* %9, %struct.BMVert** %eve, align 8, !dbg !8763
  br label %for.cond, !dbg !8763

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8765
  %tobool6 = icmp ne %struct.BMVert* %10, null, !dbg !8763
  br i1 %tobool6, label %for.body, label %for.end, !dbg !8763

for.body:                                         ; preds = %for.cond
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8767
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 0, !dbg !8767
  %call7 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !8767
  %tobool8 = icmp ne i8 %call7, 0, !dbg !8767
  br i1 %tobool8, label %if.end15, label %if.then9, !dbg !8770

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !8771, metadata !DIExpression()), !dbg !8775
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8776
  %head10 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 0, !dbg !8776
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head10, i32 0, i32 0, !dbg !8776
  %13 = load i8*, i8** %data, align 8, !dbg !8776
  %14 = load i32, i32* %cd_dvert_offset, align 4, !dbg !8776
  %idx.ext = sext i32 %14 to i64, !dbg !8776
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !8776
  %15 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !8776
  store %struct.MDeformVert* %15, %struct.MDeformVert** %dv, align 8, !dbg !8775
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !8777
  %cmp = icmp eq %struct.MDeformVert* null, %16, !dbg !8777
  br i1 %cmp, label %if.then12, label %lor.lhs.false, !dbg !8777

lor.lhs.false:                                    ; preds = %if.then9
  %17 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !8777
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %17, i32 0, i32 0, !dbg !8777
  %18 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !8777
  %cmp11 = icmp eq %struct.MDeformWeight* null, %18, !dbg !8777
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !8779

if.then12:                                        ; preds = %lor.lhs.false, %if.then9
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8780
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !8782
  %20 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !8782
  %21 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !8783
  call void @BM_vert_select_set(%struct.BMesh* %20, %struct.BMVert* %21, i8 zeroext 1), !dbg !8784
  br label %if.end14, !dbg !8785

if.end14:                                         ; preds = %if.then12, %lor.lhs.false
  br label %if.end15, !dbg !8786

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !8787

for.inc:                                          ; preds = %if.end15
  %call16 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8765
  %22 = bitcast i8* %call16 to %struct.BMVert*, !dbg !8765
  store %struct.BMVert* %22, %struct.BMVert** %eve, align 8, !dbg !8765
  br label %for.cond, !dbg !8765, !llvm.loop !8788

for.end:                                          ; preds = %for.cond
  %23 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8790
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %23), !dbg !8791
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8792
  %25 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8793
  %data17 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 19, !dbg !8794
  %26 = load i8*, i8** %data17, align 8, !dbg !8794
  call void @WM_event_add_notifier(%struct.bContext* %24, i32 274333696, i8* %26), !dbg !8795
  ret i32 4, !dbg !8796
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_ungrouped_poll(%struct.bContext* %C) #0 !dbg !8797 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8800, metadata !DIExpression()), !dbg !8801
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8802
  %call = call i32 @ED_operator_editmesh(%struct.bContext* %0), !dbg !8804
  %tobool = icmp ne i32 %call, 0, !dbg !8804
  br i1 %tobool, label %if.then, label %if.end14, !dbg !8805

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8806, metadata !DIExpression()), !dbg !8808
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8809
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !8810
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !8808
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8811, metadata !DIExpression()), !dbg !8812
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8813
  %call2 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %2), !dbg !8814
  store %struct.BMEditMesh* %call2, %struct.BMEditMesh** %em, align 8, !dbg !8812
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !8815, metadata !DIExpression()), !dbg !8816
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8817
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !8818
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8818
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 24, !dbg !8819
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !8820
  store i32 %call3, i32* %cd_dvert_offset, align 4, !dbg !8816
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8821
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 12, !dbg !8823
  %6 = load i16, i16* %selectmode, align 4, !dbg !8823
  %conv = sext i16 %6 to i32, !dbg !8821
  %and = and i32 %conv, 1, !dbg !8824
  %cmp = icmp eq i32 %and, 0, !dbg !8825
  br i1 %cmp, label %if.then5, label %if.else, !dbg !8826

if.then5:                                         ; preds = %if.then
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8827
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.223, i64 0, i64 0)), !dbg !8829
  br label %if.end13, !dbg !8830

if.else:                                          ; preds = %if.then
  %8 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8831
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 25, !dbg !8833
  %call6 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %defbase), !dbg !8834
  %conv7 = zext i8 %call6 to i32, !dbg !8834
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !8834
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !8835

lor.lhs.false:                                    ; preds = %if.else
  %9 = load i32, i32* %cd_dvert_offset, align 4, !dbg !8836
  %cmp9 = icmp eq i32 %9, -1, !dbg !8837
  br i1 %cmp9, label %if.then11, label %if.else12, !dbg !8838

if.then11:                                        ; preds = %lor.lhs.false, %if.else
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8839
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.224, i64 0, i64 0)), !dbg !8841
  br label %if.end, !dbg !8842

if.else12:                                        ; preds = %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !8843
  br label %return, !dbg !8843

if.end:                                           ; preds = %if.then11
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then5
  br label %if.end14, !dbg !8845

if.end14:                                         ; preds = %if.end13, %entry
  store i32 0, i32* %retval, align 4, !dbg !8846
  br label %return, !dbg !8846

return:                                           ; preds = %if.end14, %if.else12
  %11 = load i32, i32* %retval, align 4, !dbg !8847
  ret i32 %11, !dbg !8847
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_axis(%struct.wmOperatorType* %ot) #0 !dbg !3217 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8850
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8851
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.155, i64 0, i64 0), i8** %name, align 8, !dbg !8852
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8853
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8854
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.156, i64 0, i64 0), i8** %description, align 8, !dbg !8855
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8856
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8857
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.157, i64 0, i64 0), i8** %idname, align 8, !dbg !8858
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8859
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8860
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_axis_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8861
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8862
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8863
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8864
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8865
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8866
  store i16 3, i16* %flag, align 8, !dbg !8867
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8868
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8869
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8869
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8868
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_select_axis.axis_mode_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.160, i64 0, i64 0)), !dbg !8870
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8871
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8872
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8872
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8871
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_select_axis.axis_items_xyz, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.163, i64 0, i64 0)), !dbg !8873
  ret void, !dbg !8874
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_axis_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8875 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %v_act = alloca %struct.BMVert*, align 8
  %axis = alloca i32, align 4
  %mode = alloca i32, align 4
  %v = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %limit = alloca float, align 4
  %value = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8880, metadata !DIExpression()), !dbg !8881
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8882
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8883
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8881
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8884, metadata !DIExpression()), !dbg !8885
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8886
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8887
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8885
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !8888, metadata !DIExpression()), !dbg !8889
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8890
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !8891
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !8891
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !8889
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_act, metadata !8892, metadata !DIExpression()), !dbg !8893
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8894
  %call3 = call %struct.BMVert* @BM_mesh_active_vert_get(%struct.BMesh* %4), !dbg !8895
  store %struct.BMVert* %call3, %struct.BMVert** %v_act, align 8, !dbg !8893
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !8896, metadata !DIExpression()), !dbg !8897
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8898
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !8899
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8899
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i64 0, i64 0)), !dbg !8900
  store i32 %call4, i32* %axis, align 4, !dbg !8897
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8901, metadata !DIExpression()), !dbg !8902
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8903
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !8904
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !8904
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i64 0, i64 0)), !dbg !8905
  store i32 %call6, i32* %mode, align 4, !dbg !8902
  %9 = load %struct.BMVert*, %struct.BMVert** %v_act, align 8, !dbg !8906
  %cmp = icmp eq %struct.BMVert* %9, null, !dbg !8908
  br i1 %cmp, label %if.then, label %if.else, !dbg !8909

if.then:                                          ; preds = %entry
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8910
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 8, !dbg !8912
  %11 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8912
  call void @BKE_report(%struct.ReportList* %11, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.225, i64 0, i64 0)), !dbg !8913
  store i32 2, i32* %retval, align 4, !dbg !8914
  br label %return, !dbg !8914

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !8915, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8918, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.declare(metadata float* %limit, metadata !8920, metadata !DIExpression()), !dbg !8921
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8922
  %call7 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %12), !dbg !8923
  %doublimit = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %call7, i32 0, i32 5, !dbg !8924
  %13 = load float, float* %doublimit, align 4, !dbg !8924
  store float %13, float* %limit, align 4, !dbg !8921
  call void @llvm.dbg.declare(metadata float* %value, metadata !8925, metadata !DIExpression()), !dbg !8926
  %14 = load %struct.BMVert*, %struct.BMVert** %v_act, align 8, !dbg !8927
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 2, !dbg !8928
  %15 = load i32, i32* %axis, align 4, !dbg !8929
  %idxprom = sext i32 %15 to i64, !dbg !8927
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom, !dbg !8927
  %16 = load float, float* %arrayidx, align 4, !dbg !8927
  store float %16, float* %value, align 4, !dbg !8926
  %17 = load i32, i32* %mode, align 4, !dbg !8930
  %cmp8 = icmp eq i32 %17, 0, !dbg !8932
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !8933

if.then9:                                         ; preds = %if.else
  %18 = load float, float* %limit, align 4, !dbg !8934
  %19 = load float, float* %value, align 4, !dbg !8935
  %sub = fsub float %19, %18, !dbg !8935
  store float %sub, float* %value, align 4, !dbg !8935
  br label %if.end13, !dbg !8936

if.else10:                                        ; preds = %if.else
  %20 = load i32, i32* %mode, align 4, !dbg !8937
  %cmp11 = icmp eq i32 %20, 1, !dbg !8939
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !8940

if.then12:                                        ; preds = %if.else10
  %21 = load float, float* %limit, align 4, !dbg !8941
  %22 = load float, float* %value, align 4, !dbg !8942
  %add = fadd float %22, %21, !dbg !8942
  store float %add, float* %value, align 4, !dbg !8942
  br label %if.end, !dbg !8943

if.end:                                           ; preds = %if.then12, %if.else10
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then9
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8944
  %call14 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %23, i8 zeroext 1, i8* null), !dbg !8944
  %24 = bitcast i8* %call14 to %struct.BMVert*, !dbg !8944
  store %struct.BMVert* %24, %struct.BMVert** %v, align 8, !dbg !8944
  br label %for.cond, !dbg !8944

for.cond:                                         ; preds = %for.inc, %if.end13
  %25 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8946
  %tobool = icmp ne %struct.BMVert* %25, null, !dbg !8944
  br i1 %tobool, label %for.body, label %for.end, !dbg !8944

for.body:                                         ; preds = %for.cond
  %26 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8948
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 0, !dbg !8948
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !8948
  %tobool16 = icmp ne i8 %call15, 0, !dbg !8948
  br i1 %tobool16, label %if.end39, label %if.then17, !dbg !8951

if.then17:                                        ; preds = %for.body
  %27 = load i32, i32* %mode, align 4, !dbg !8952
  switch i32 %27, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb25
    i32 1, label %sw.bb32
  ], !dbg !8954

sw.bb:                                            ; preds = %if.then17
  %28 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8955
  %co18 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 2, !dbg !8958
  %29 = load i32, i32* %axis, align 4, !dbg !8959
  %idxprom19 = sext i32 %29 to i64, !dbg !8955
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 %idxprom19, !dbg !8955
  %30 = load float, float* %arrayidx20, align 4, !dbg !8955
  %31 = load float, float* %value, align 4, !dbg !8960
  %sub21 = fsub float %30, %31, !dbg !8961
  %32 = call float @llvm.fabs.f32(float %sub21), !dbg !8962
  %33 = load float, float* %limit, align 4, !dbg !8963
  %cmp22 = fcmp olt float %32, %33, !dbg !8964
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8965

if.then23:                                        ; preds = %sw.bb
  %34 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8966
  %35 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8967
  call void @BM_vert_select_set(%struct.BMesh* %34, %struct.BMVert* %35, i8 zeroext 1), !dbg !8968
  br label %if.end24, !dbg !8968

if.end24:                                         ; preds = %if.then23, %sw.bb
  br label %sw.epilog, !dbg !8969

sw.bb25:                                          ; preds = %if.then17
  %36 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8970
  %co26 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %36, i32 0, i32 2, !dbg !8972
  %37 = load i32, i32* %axis, align 4, !dbg !8973
  %idxprom27 = sext i32 %37 to i64, !dbg !8970
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 %idxprom27, !dbg !8970
  %38 = load float, float* %arrayidx28, align 4, !dbg !8970
  %39 = load float, float* %value, align 4, !dbg !8974
  %cmp29 = fcmp ogt float %38, %39, !dbg !8975
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !8976

if.then30:                                        ; preds = %sw.bb25
  %40 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8977
  %41 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8978
  call void @BM_vert_select_set(%struct.BMesh* %40, %struct.BMVert* %41, i8 zeroext 1), !dbg !8979
  br label %if.end31, !dbg !8979

if.end31:                                         ; preds = %if.then30, %sw.bb25
  br label %sw.epilog, !dbg !8980

sw.bb32:                                          ; preds = %if.then17
  %42 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8981
  %co33 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %42, i32 0, i32 2, !dbg !8983
  %43 = load i32, i32* %axis, align 4, !dbg !8984
  %idxprom34 = sext i32 %43 to i64, !dbg !8981
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 %idxprom34, !dbg !8981
  %44 = load float, float* %arrayidx35, align 4, !dbg !8981
  %45 = load float, float* %value, align 4, !dbg !8985
  %cmp36 = fcmp olt float %44, %45, !dbg !8986
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !8987

if.then37:                                        ; preds = %sw.bb32
  %46 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8988
  %47 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8989
  call void @BM_vert_select_set(%struct.BMesh* %46, %struct.BMVert* %47, i8 zeroext 1), !dbg !8990
  br label %if.end38, !dbg !8990

if.end38:                                         ; preds = %if.then37, %sw.bb32
  br label %sw.epilog, !dbg !8991

sw.epilog:                                        ; preds = %if.then17, %if.end38, %if.end31, %if.end24
  br label %if.end39, !dbg !8992

if.end39:                                         ; preds = %sw.epilog, %for.body
  br label %for.inc, !dbg !8993

for.inc:                                          ; preds = %if.end39
  %call40 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8946
  %48 = bitcast i8* %call40 to %struct.BMVert*, !dbg !8946
  store %struct.BMVert* %48, %struct.BMVert** %v, align 8, !dbg !8946
  br label %for.cond, !dbg !8946, !llvm.loop !8994

for.end:                                          ; preds = %for.cond
  br label %if.end41

if.end41:                                         ; preds = %for.end
  %49 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8996
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %49), !dbg !8997
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8998
  %51 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8999
  %data = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 19, !dbg !9000
  %52 = load i8*, i8** %data, align 8, !dbg !9000
  call void @WM_event_add_notifier(%struct.bContext* %50, i32 274399232, i8* %52), !dbg !9001
  store i32 4, i32* %retval, align 4, !dbg !9002
  br label %return, !dbg !9002

return:                                           ; preds = %if.end41, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !9003
  ret i32 %53, !dbg !9003
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_select_next_loop(%struct.wmOperatorType* %ot) #0 !dbg !9004 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9007
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9008
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.164, i64 0, i64 0), i8** %name, align 8, !dbg !9009
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9010
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9011
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.165, i64 0, i64 0), i8** %idname, align 8, !dbg !9012
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9013
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9014
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.166, i64 0, i64 0), i8** %description, align 8, !dbg !9015
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9016
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9017
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_select_next_loop_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9018
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9019
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9020
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9021
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9022
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9023
  store i16 3, i16* %flag, align 8, !dbg !9024
  ret void, !dbg !9025
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_select_next_loop_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !9026 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %f = alloca %struct.BMFace*, align 8
  %v = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %liter = alloca %struct.BMIter, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9031, metadata !DIExpression()), !dbg !9032
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9033
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9034
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9032
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9035, metadata !DIExpression()), !dbg !9036
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9037
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9038
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9036
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !9041, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9043, metadata !DIExpression()), !dbg !9044
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9045
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !9045
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9045
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %3, i8 zeroext 1, i8* null), !dbg !9045
  %4 = bitcast i8* %call2 to %struct.BMVert*, !dbg !9045
  store %struct.BMVert* %4, %struct.BMVert** %v, align 8, !dbg !9045
  br label %for.cond, !dbg !9045

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9047
  %tobool = icmp ne %struct.BMVert* %5, null, !dbg !9045
  br i1 %tobool, label %for.body, label %for.end, !dbg !9045

for.body:                                         ; preds = %for.cond
  %6 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9049
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %6, i32 0, i32 0, !dbg !9049
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !9049
  br label %for.inc, !dbg !9051

for.inc:                                          ; preds = %for.body
  %call3 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9047
  %7 = bitcast i8* %call3 to %struct.BMVert*, !dbg !9047
  store %struct.BMVert* %7, %struct.BMVert** %v, align 8, !dbg !9047
  br label %for.cond, !dbg !9047, !llvm.loop !9052

for.end:                                          ; preds = %for.cond
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9054
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !9054
  %9 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !9054
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 3, i8* null), !dbg !9054
  %10 = bitcast i8* %call5 to %struct.BMFace*, !dbg !9054
  store %struct.BMFace* %10, %struct.BMFace** %f, align 8, !dbg !9054
  br label %for.cond6, !dbg !9054

for.cond6:                                        ; preds = %for.inc24, %for.end
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9056
  %tobool7 = icmp ne %struct.BMFace* %11, null, !dbg !9054
  br i1 %tobool7, label %for.body8, label %for.end26, !dbg !9054

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9058, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9061, metadata !DIExpression()), !dbg !9062
  %12 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9063
  %13 = bitcast %struct.BMFace* %12 to i8*, !dbg !9063
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %13), !dbg !9063
  %14 = bitcast i8* %call9 to %struct.BMLoop*, !dbg !9063
  store %struct.BMLoop* %14, %struct.BMLoop** %l, align 8, !dbg !9063
  br label %for.cond10, !dbg !9063

for.cond10:                                       ; preds = %for.inc21, %for.body8
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9065
  %tobool11 = icmp ne %struct.BMLoop* %15, null, !dbg !9063
  br i1 %tobool11, label %for.body12, label %for.end23, !dbg !9063

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9067
  %v13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 1, !dbg !9067
  %17 = load %struct.BMVert*, %struct.BMVert** %v13, align 8, !dbg !9067
  %head14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 0, !dbg !9067
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head14, i8 zeroext 1), !dbg !9067
  %tobool16 = icmp ne i8 %call15, 0, !dbg !9067
  br i1 %tobool16, label %if.then, label %if.end, !dbg !9070

if.then:                                          ; preds = %for.body12
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9071
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 6, !dbg !9071
  %19 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !9071
  %v17 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %19, i32 0, i32 1, !dbg !9071
  %20 = load %struct.BMVert*, %struct.BMVert** %v17, align 8, !dbg !9071
  %head18 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !9071
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head18, i8 zeroext 16), !dbg !9071
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9073
  %bm19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !9074
  %22 = load %struct.BMesh*, %struct.BMesh** %bm19, align 8, !dbg !9074
  %23 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9075
  %v20 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %23, i32 0, i32 1, !dbg !9076
  %24 = load %struct.BMVert*, %struct.BMVert** %v20, align 8, !dbg !9076
  call void @BM_vert_select_set(%struct.BMesh* %22, %struct.BMVert* %24, i8 zeroext 0), !dbg !9077
  br label %if.end, !dbg !9078

if.end:                                           ; preds = %if.then, %for.body12
  br label %for.inc21, !dbg !9079

for.inc21:                                        ; preds = %if.end
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9065
  %25 = bitcast i8* %call22 to %struct.BMLoop*, !dbg !9065
  store %struct.BMLoop* %25, %struct.BMLoop** %l, align 8, !dbg !9065
  br label %for.cond10, !dbg !9065, !llvm.loop !9080

for.end23:                                        ; preds = %for.cond10
  br label %for.inc24, !dbg !9082

for.inc24:                                        ; preds = %for.end23
  %call25 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9056
  %26 = bitcast i8* %call25 to %struct.BMFace*, !dbg !9056
  store %struct.BMFace* %26, %struct.BMFace** %f, align 8, !dbg !9056
  br label %for.cond6, !dbg !9056, !llvm.loop !9083

for.end26:                                        ; preds = %for.cond6
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9085
  %bm27 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !9085
  %28 = load %struct.BMesh*, %struct.BMesh** %bm27, align 8, !dbg !9085
  %call28 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %28, i8 zeroext 1, i8* null), !dbg !9085
  %29 = bitcast i8* %call28 to %struct.BMVert*, !dbg !9085
  store %struct.BMVert* %29, %struct.BMVert** %v, align 8, !dbg !9085
  br label %for.cond29, !dbg !9085

for.cond29:                                       ; preds = %for.inc38, %for.end26
  %30 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9087
  %tobool30 = icmp ne %struct.BMVert* %30, null, !dbg !9085
  br i1 %tobool30, label %for.body31, label %for.end40, !dbg !9085

for.body31:                                       ; preds = %for.cond29
  %31 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9089
  %head32 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 0, !dbg !9089
  %call33 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head32, i8 zeroext 16), !dbg !9089
  %tobool34 = icmp ne i8 %call33, 0, !dbg !9089
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !9092

if.then35:                                        ; preds = %for.body31
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9093
  %bm36 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !9095
  %33 = load %struct.BMesh*, %struct.BMesh** %bm36, align 8, !dbg !9095
  %34 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9096
  call void @BM_vert_select_set(%struct.BMesh* %33, %struct.BMVert* %34, i8 zeroext 1), !dbg !9097
  br label %if.end37, !dbg !9098

if.end37:                                         ; preds = %if.then35, %for.body31
  br label %for.inc38, !dbg !9099

for.inc38:                                        ; preds = %if.end37
  %call39 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9087
  %35 = bitcast i8* %call39 to %struct.BMVert*, !dbg !9087
  store %struct.BMVert* %35, %struct.BMVert** %v, align 8, !dbg !9087
  br label %for.cond29, !dbg !9087, !llvm.loop !9100

for.end40:                                        ; preds = %for.cond29
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9102
  %37 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9103
  %38 = bitcast %struct.Object* %37 to i8*, !dbg !9103
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 274333696, i8* %38), !dbg !9104
  ret i32 4, !dbg !9105
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_region_to_loop(%struct.wmOperatorType* %ot) #0 !dbg !9106 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9109
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9110
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.167, i64 0, i64 0), i8** %name, align 8, !dbg !9111
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9112
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9113
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.168, i64 0, i64 0), i8** %idname, align 8, !dbg !9114
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9115
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9116
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.169, i64 0, i64 0), i8** %description, align 8, !dbg !9117
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9118
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9119
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_region_to_loop_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9120
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9121
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9122
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9123
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9124
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9125
  store i16 3, i16* %flag, align 8, !dbg !9126
  ret void, !dbg !9127
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_region_to_loop_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !9128 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %f = alloca %struct.BMFace*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %l1 = alloca %struct.BMLoop*, align 8
  %l2 = alloca %struct.BMLoop*, align 8
  %liter1 = alloca %struct.BMIter, align 8
  %liter2 = alloca %struct.BMIter, align 8
  %tot = alloca i32, align 4
  %totsel = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !9131, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9133, metadata !DIExpression()), !dbg !9134
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9135
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9136
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9134
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9137, metadata !DIExpression()), !dbg !9138
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9139
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9140
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9138
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !9141, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !9143, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9145, metadata !DIExpression()), !dbg !9146
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9147
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !9148
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9148
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %3, i8 zeroext 2, i8 zeroext 16, i8 zeroext 0), !dbg !9149
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9150
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !9150
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !9150
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 3, i8* null), !dbg !9150
  %6 = bitcast i8* %call3 to %struct.BMFace*, !dbg !9150
  store %struct.BMFace* %6, %struct.BMFace** %f, align 8, !dbg !9150
  br label %for.cond, !dbg !9150

for.cond:                                         ; preds = %for.inc31, %entry
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9152
  %tobool = icmp ne %struct.BMFace* %7, null, !dbg !9150
  br i1 %tobool, label %for.body, label %for.end33, !dbg !9150

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l1, metadata !9154, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l2, metadata !9157, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter1, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter2, metadata !9161, metadata !DIExpression()), !dbg !9162
  %8 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9163
  %9 = bitcast %struct.BMFace* %8 to i8*, !dbg !9163
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %liter1, %struct.BMesh* null, i8 zeroext 11, i8* %9), !dbg !9163
  %10 = bitcast i8* %call4 to %struct.BMLoop*, !dbg !9163
  store %struct.BMLoop* %10, %struct.BMLoop** %l1, align 8, !dbg !9163
  br label %for.cond5, !dbg !9163

for.cond5:                                        ; preds = %for.inc28, %for.body
  %11 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !9165
  %tobool6 = icmp ne %struct.BMLoop* %11, null, !dbg !9163
  br i1 %tobool6, label %for.body7, label %for.end30, !dbg !9163

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !9167, metadata !DIExpression()), !dbg !9169
  store i32 0, i32* %tot, align 4, !dbg !9169
  call void @llvm.dbg.declare(metadata i32* %totsel, metadata !9170, metadata !DIExpression()), !dbg !9171
  store i32 0, i32* %totsel, align 4, !dbg !9171
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !9172
  %e8 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 2, !dbg !9172
  %13 = load %struct.BMEdge*, %struct.BMEdge** %e8, align 8, !dbg !9172
  %14 = bitcast %struct.BMEdge* %13 to i8*, !dbg !9172
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %liter2, %struct.BMesh* null, i8 zeroext 14, i8* %14), !dbg !9172
  %15 = bitcast i8* %call9 to %struct.BMLoop*, !dbg !9172
  store %struct.BMLoop* %15, %struct.BMLoop** %l2, align 8, !dbg !9172
  br label %for.cond10, !dbg !9172

for.cond10:                                       ; preds = %for.inc, %for.body7
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !9174
  %tobool11 = icmp ne %struct.BMLoop* %16, null, !dbg !9172
  br i1 %tobool11, label %for.body12, label %for.end, !dbg !9172

for.body12:                                       ; preds = %for.cond10
  %17 = load i32, i32* %tot, align 4, !dbg !9176
  %inc = add nsw i32 %17, 1, !dbg !9176
  store i32 %inc, i32* %tot, align 4, !dbg !9176
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !9178
  %f13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 3, !dbg !9178
  %19 = load %struct.BMFace*, %struct.BMFace** %f13, align 8, !dbg !9178
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %19, i32 0, i32 0, !dbg !9178
  %call14 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !9178
  %conv = zext i8 %call14 to i32, !dbg !9178
  %cmp = icmp ne i32 %conv, 0, !dbg !9179
  %conv15 = zext i1 %cmp to i32, !dbg !9179
  %20 = load i32, i32* %totsel, align 4, !dbg !9180
  %add = add nsw i32 %20, %conv15, !dbg !9180
  store i32 %add, i32* %totsel, align 4, !dbg !9180
  br label %for.inc, !dbg !9181

for.inc:                                          ; preds = %for.body12
  %call16 = call i8* @BM_iter_step(%struct.BMIter* %liter2), !dbg !9174
  %21 = bitcast i8* %call16 to %struct.BMLoop*, !dbg !9174
  store %struct.BMLoop* %21, %struct.BMLoop** %l2, align 8, !dbg !9174
  br label %for.cond10, !dbg !9174, !llvm.loop !9182

for.end:                                          ; preds = %for.cond10
  %22 = load i32, i32* %tot, align 4, !dbg !9184
  %23 = load i32, i32* %totsel, align 4, !dbg !9186
  %cmp17 = icmp ne i32 %22, %23, !dbg !9187
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false, !dbg !9188

land.lhs.true:                                    ; preds = %for.end
  %24 = load i32, i32* %totsel, align 4, !dbg !9189
  %cmp19 = icmp sgt i32 %24, 0, !dbg !9190
  br i1 %cmp19, label %if.then, label %lor.lhs.false, !dbg !9191

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.end
  %25 = load i32, i32* %totsel, align 4, !dbg !9192
  %cmp21 = icmp eq i32 %25, 1, !dbg !9193
  br i1 %cmp21, label %land.lhs.true23, label %if.end, !dbg !9194

land.lhs.true23:                                  ; preds = %lor.lhs.false
  %26 = load i32, i32* %tot, align 4, !dbg !9195
  %cmp24 = icmp eq i32 %26, 1, !dbg !9196
  br i1 %cmp24, label %if.then, label %if.end, !dbg !9197

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true
  %27 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !9198
  %e26 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %27, i32 0, i32 2, !dbg !9198
  %28 = load %struct.BMEdge*, %struct.BMEdge** %e26, align 8, !dbg !9198
  %head27 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %28, i32 0, i32 0, !dbg !9198
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head27, i8 zeroext 16), !dbg !9198
  br label %if.end, !dbg !9198

if.end:                                           ; preds = %if.then, %land.lhs.true23, %lor.lhs.false
  br label %for.inc28, !dbg !9199

for.inc28:                                        ; preds = %if.end
  %call29 = call i8* @BM_iter_step(%struct.BMIter* %liter1), !dbg !9165
  %29 = bitcast i8* %call29 to %struct.BMLoop*, !dbg !9165
  store %struct.BMLoop* %29, %struct.BMLoop** %l1, align 8, !dbg !9165
  br label %for.cond5, !dbg !9165, !llvm.loop !9200

for.end30:                                        ; preds = %for.cond5
  br label %for.inc31, !dbg !9202

for.inc31:                                        ; preds = %for.end30
  %call32 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9152
  %30 = bitcast i8* %call32 to %struct.BMFace*, !dbg !9152
  store %struct.BMFace* %30, %struct.BMFace** %f, align 8, !dbg !9152
  br label %for.cond, !dbg !9152, !llvm.loop !9203

for.end33:                                        ; preds = %for.cond
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9205
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %31, i8 zeroext 1), !dbg !9206
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9207
  %bm34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !9207
  %33 = load %struct.BMesh*, %struct.BMesh** %bm34, align 8, !dbg !9207
  %call35 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %33, i8 zeroext 2, i8* null), !dbg !9207
  %34 = bitcast i8* %call35 to %struct.BMEdge*, !dbg !9207
  store %struct.BMEdge* %34, %struct.BMEdge** %e, align 8, !dbg !9207
  br label %for.cond36, !dbg !9207

for.cond36:                                       ; preds = %for.inc45, %for.end33
  %35 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9209
  %tobool37 = icmp ne %struct.BMEdge* %35, null, !dbg !9207
  br i1 %tobool37, label %for.body38, label %for.end47, !dbg !9207

for.body38:                                       ; preds = %for.cond36
  %36 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9211
  %head39 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %36, i32 0, i32 0, !dbg !9211
  %call40 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head39, i8 zeroext 16), !dbg !9211
  %tobool41 = icmp ne i8 %call40, 0, !dbg !9211
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !9214

if.then42:                                        ; preds = %for.body38
  %37 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9215
  %bm43 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %37, i32 0, i32 0, !dbg !9217
  %38 = load %struct.BMesh*, %struct.BMesh** %bm43, align 8, !dbg !9217
  %39 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9218
  call void @BM_edge_select_set(%struct.BMesh* %38, %struct.BMEdge* %39, i8 zeroext 1), !dbg !9219
  br label %if.end44, !dbg !9220

if.end44:                                         ; preds = %if.then42, %for.body38
  br label %for.inc45, !dbg !9221

for.inc45:                                        ; preds = %if.end44
  %call46 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9209
  %40 = bitcast i8* %call46 to %struct.BMEdge*, !dbg !9209
  store %struct.BMEdge* %40, %struct.BMEdge** %e, align 8, !dbg !9209
  br label %for.cond36, !dbg !9209, !llvm.loop !9222

for.end47:                                        ; preds = %for.cond36
  %41 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9224
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %41, i32 0, i32 12, !dbg !9226
  %42 = load i16, i16* %selectmode, align 4, !dbg !9226
  %conv48 = sext i16 %42 to i32, !dbg !9224
  %cmp49 = icmp eq i32 %conv48, 4, !dbg !9227
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !9228

if.then51:                                        ; preds = %for.end47
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9229
  %selectmode52 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %43, i32 0, i32 12, !dbg !9231
  store i16 2, i16* %selectmode52, align 4, !dbg !9232
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9233
  call void @EDBM_selectmode_set(%struct.BMEditMesh* %44), !dbg !9234
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9235
  call void @EDBM_selectmode_to_scene(%struct.bContext* %45), !dbg !9236
  br label %if.end53, !dbg !9237

if.end53:                                         ; preds = %if.then51, %for.end47
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9238
  %47 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9239
  %data = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 19, !dbg !9240
  %48 = load i8*, i8** %data, align 8, !dbg !9240
  call void @WM_event_add_notifier(%struct.bContext* %46, i32 274333696, i8* %48), !dbg !9241
  ret i32 4, !dbg !9242
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_loop_to_region(%struct.wmOperatorType* %ot) #0 !dbg !9243 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9244, metadata !DIExpression()), !dbg !9245
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9246
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9247
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i64 0, i64 0), i8** %name, align 8, !dbg !9248
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9249
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9250
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.171, i64 0, i64 0), i8** %idname, align 8, !dbg !9251
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9252
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9253
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.172, i64 0, i64 0), i8** %description, align 8, !dbg !9254
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9255
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9256
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_loop_to_region_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9257
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9258
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9259
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9260
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9261
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9262
  store i16 3, i16* %flag, align 8, !dbg !9263
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9264
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9265
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9265
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9264
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.175, i64 0, i64 0)), !dbg !9266
  ret void, !dbg !9267
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_loop_to_region_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9268 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  %select_bigger = alloca i8, align 1
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9269, metadata !DIExpression()), !dbg !9270
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9273, metadata !DIExpression()), !dbg !9274
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9275
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9276
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9274
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9277, metadata !DIExpression()), !dbg !9278
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9279
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9280
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9278
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9281, metadata !DIExpression()), !dbg !9282
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !9283, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata i8* %select_bigger, metadata !9285, metadata !DIExpression()), !dbg !9286
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9287
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9288
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9288
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i64 0, i64 0)), !dbg !9289
  %conv = trunc i32 %call2 to i8, !dbg !9289
  store i8 %conv, i8* %select_bigger, align 1, !dbg !9286
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9290, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.declare(metadata i32* %b, metadata !9292, metadata !DIExpression()), !dbg !9293
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9294
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !9295
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9295
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %5, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !9296
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9297
  %7 = load i8, i8* %select_bigger, align 1, !dbg !9298
  %call3 = call i32 @loop_find_regions(%struct.BMEditMesh* %6, i8 zeroext %7), !dbg !9299
  store i32 %call3, i32* %a, align 4, !dbg !9300
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9301
  %9 = load i8, i8* %select_bigger, align 1, !dbg !9302
  %tobool = icmp ne i8 %9, 0, !dbg !9303
  %lnot = xor i1 %tobool, true, !dbg !9303
  %lnot.ext = zext i1 %lnot to i32, !dbg !9303
  %conv4 = trunc i32 %lnot.ext to i8, !dbg !9303
  %call5 = call i32 @loop_find_regions(%struct.BMEditMesh* %8, i8 zeroext %conv4), !dbg !9304
  store i32 %call5, i32* %b, align 4, !dbg !9305
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9306
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !9307
  %11 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !9307
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %11, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !9308
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9309
  %13 = load i32, i32* %a, align 4, !dbg !9310
  %14 = load i32, i32* %b, align 4, !dbg !9311
  %cmp = icmp sle i32 %13, %14, !dbg !9312
  %conv7 = zext i1 %cmp to i32, !dbg !9312
  %15 = load i8, i8* %select_bigger, align 1, !dbg !9313
  %conv8 = zext i8 %15 to i32, !dbg !9313
  %cmp9 = icmp ne i32 %conv7, %conv8, !dbg !9314
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !9315

cond.true:                                        ; preds = %entry
  %16 = load i8, i8* %select_bigger, align 1, !dbg !9316
  %conv11 = zext i8 %16 to i32, !dbg !9316
  br label %cond.end, !dbg !9315

cond.false:                                       ; preds = %entry
  %17 = load i8, i8* %select_bigger, align 1, !dbg !9317
  %tobool12 = icmp ne i8 %17, 0, !dbg !9318
  %lnot13 = xor i1 %tobool12, true, !dbg !9318
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9318
  br label %cond.end, !dbg !9315

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv11, %cond.true ], [ %lnot.ext14, %cond.false ], !dbg !9315
  %conv15 = trunc i32 %cond to i8, !dbg !9315
  %call16 = call i32 @loop_find_regions(%struct.BMEditMesh* %12, i8 zeroext %conv15), !dbg !9319
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9320
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %18, i8 zeroext 1), !dbg !9321
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9322
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !9322
  %20 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !9322
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %20, i8 zeroext 3, i8* null), !dbg !9322
  %21 = bitcast i8* %call18 to %struct.BMFace*, !dbg !9322
  store %struct.BMFace* %21, %struct.BMFace** %f, align 8, !dbg !9322
  br label %for.cond, !dbg !9322

for.cond:                                         ; preds = %for.inc, %cond.end
  %22 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9324
  %tobool19 = icmp ne %struct.BMFace* %22, null, !dbg !9322
  br i1 %tobool19, label %for.body, label %for.end, !dbg !9322

for.body:                                         ; preds = %for.cond
  %23 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9326
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %23, i32 0, i32 0, !dbg !9326
  %call20 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 16), !dbg !9326
  %conv21 = zext i8 %call20 to i32, !dbg !9326
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !9326
  br i1 %tobool22, label %land.lhs.true, label %if.end, !dbg !9329

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9330
  %head23 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %24, i32 0, i32 0, !dbg !9330
  %call24 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head23, i8 zeroext 2), !dbg !9330
  %tobool25 = icmp ne i8 %call24, 0, !dbg !9330
  br i1 %tobool25, label %if.end, label %if.then, !dbg !9331

if.then:                                          ; preds = %land.lhs.true
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9332
  %bm26 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 0, !dbg !9334
  %26 = load %struct.BMesh*, %struct.BMesh** %bm26, align 8, !dbg !9334
  %27 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9335
  call void @BM_face_select_set(%struct.BMesh* %26, %struct.BMFace* %27, i8 zeroext 1), !dbg !9336
  br label %if.end, !dbg !9337

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9338

for.inc:                                          ; preds = %if.end
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9324
  %28 = bitcast i8* %call27 to %struct.BMFace*, !dbg !9324
  store %struct.BMFace* %28, %struct.BMFace** %f, align 8, !dbg !9324
  br label %for.cond, !dbg !9324, !llvm.loop !9339

for.end:                                          ; preds = %for.cond
  %29 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9341
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %29), !dbg !9342
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9343
  %31 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9344
  %data = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 19, !dbg !9345
  %32 = load i8*, i8** %data, align 8, !dbg !9345
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 274333696, i8* %32), !dbg !9346
  ret i32 4, !dbg !9347
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !9348 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9357, metadata !DIExpression()), !dbg !9358
  %0 = load i8, i8* %itype.addr, align 1, !dbg !9359
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9360
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !9361
  store i8 %0, i8* %itype1, align 4, !dbg !9362
  %2 = load i8, i8* %itype.addr, align 1, !dbg !9363
  %conv = zext i8 %2 to i32, !dbg !9364
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !9365

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9366
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !9368
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !9369
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9370
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !9371
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !9372
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !9373
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !9374
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !9374
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9375
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !9376
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !9377
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !9378
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !9379
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !9380
  br label %sw.epilog, !dbg !9381

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9382
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !9383
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !9384
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9385
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !9386
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !9387
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !9388
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !9389
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !9389
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9390
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !9391
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !9392
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !9393
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !9394
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !9395
  br label %sw.epilog, !dbg !9396

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9397
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !9398
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !9399
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9400
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !9401
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !9402
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !9403
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !9404
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !9404
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9405
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !9406
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !9407
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !9408
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !9409
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !9410
  br label %sw.epilog, !dbg !9411

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9412
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !9413
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !9414
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9415
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !9416
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !9417
  %20 = load i8*, i8** %data.addr, align 8, !dbg !9418
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !9419
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9420
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !9421
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !9422
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !9423
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !9424
  br label %sw.epilog, !dbg !9425

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9426
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !9427
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !9428
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9429
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !9430
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !9431
  %25 = load i8*, i8** %data.addr, align 8, !dbg !9432
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !9433
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9434
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !9435
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !9436
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !9437
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !9438
  br label %sw.epilog, !dbg !9439

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9440
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !9441
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !9442
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9443
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !9444
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !9445
  %30 = load i8*, i8** %data.addr, align 8, !dbg !9446
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !9447
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9448
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !9449
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !9450
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !9451
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !9452
  br label %sw.epilog, !dbg !9453

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9454
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !9455
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !9456
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9457
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !9458
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !9459
  %35 = load i8*, i8** %data.addr, align 8, !dbg !9460
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !9461
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9462
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !9463
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !9464
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !9465
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !9466
  br label %sw.epilog, !dbg !9467

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9468
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !9469
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !9470
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9471
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !9472
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !9473
  %40 = load i8*, i8** %data.addr, align 8, !dbg !9474
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !9475
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9476
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !9477
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !9478
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !9479
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !9480
  br label %sw.epilog, !dbg !9481

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9482
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !9483
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !9484
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9485
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !9486
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !9487
  %45 = load i8*, i8** %data.addr, align 8, !dbg !9488
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !9489
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9490
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !9491
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !9492
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !9493
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !9494
  br label %sw.epilog, !dbg !9495

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9496
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !9497
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !9498
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9499
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !9500
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !9501
  %50 = load i8*, i8** %data.addr, align 8, !dbg !9502
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !9503
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9504
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !9505
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !9506
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !9507
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !9508
  br label %sw.epilog, !dbg !9509

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9510
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !9511
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !9512
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9513
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !9514
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !9515
  %55 = load i8*, i8** %data.addr, align 8, !dbg !9516
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !9517
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9518
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !9519
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !9520
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !9521
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !9522
  br label %sw.epilog, !dbg !9523

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9524
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !9525
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !9526
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9527
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !9528
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !9529
  %60 = load i8*, i8** %data.addr, align 8, !dbg !9530
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !9531
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9532
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !9533
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !9534
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !9535
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !9536
  br label %sw.epilog, !dbg !9537

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9538
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !9539
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !9540
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9541
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !9542
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !9543
  %65 = load i8*, i8** %data.addr, align 8, !dbg !9544
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !9545
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9546
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !9547
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !9548
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !9549
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !9550
  br label %sw.epilog, !dbg !9551

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9552
  br label %return, !dbg !9552

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9553
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !9554
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !9554
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !9555
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !9555
  call void %69(i8* %71), !dbg !9553
  store i8 1, i8* %retval, align 1, !dbg !9556
  br label %return, !dbg !9556

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !9557
  ret i8 %72, !dbg !9557
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !9558 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !9561, metadata !DIExpression()), !dbg !9562
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !9565
  %conv = zext i8 %0 to i32, !dbg !9565
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !9566
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !9567
  %2 = load i8, i8* %hflag1, align 1, !dbg !9568
  %conv2 = zext i8 %2 to i32, !dbg !9568
  %or = or i32 %conv2, %conv, !dbg !9568
  %conv3 = trunc i32 %or to i8, !dbg !9568
  store i8 %conv3, i8* %hflag1, align 1, !dbg !9568
  ret void, !dbg !9569
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !9570 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !9571, metadata !DIExpression()), !dbg !9572
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !9573, metadata !DIExpression()), !dbg !9574
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !9575
  %conv = zext i8 %0 to i32, !dbg !9575
  %neg = xor i32 %conv, -1, !dbg !9576
  %conv1 = trunc i32 %neg to i8, !dbg !9577
  %conv2 = zext i8 %conv1 to i32, !dbg !9577
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !9578
  %hflag3 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !9579
  %2 = load i8, i8* %hflag3, align 1, !dbg !9580
  %conv4 = zext i8 %2 to i32, !dbg !9580
  %and = and i32 %conv4, %conv2, !dbg !9580
  %conv5 = trunc i32 %and to i8, !dbg !9580
  store i8 %conv5, i8* %hflag3, align 1, !dbg !9580
  ret void, !dbg !9581
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_manhattan_v2v2(float* %a, float* %b) #0 !dbg !9582 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9586, metadata !DIExpression()), !dbg !9587
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9588, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !9590, metadata !DIExpression()), !dbg !9591
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9592
  %0 = load float*, float** %b.addr, align 8, !dbg !9593
  %1 = load float*, float** %a.addr, align 8, !dbg !9594
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !9595
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !9596
  %call = call float @len_manhattan_v2(float* %arraydecay1), !dbg !9597
  ret float %call, !dbg !9598
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !9599 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9602, metadata !DIExpression()), !dbg !9603
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9604, metadata !DIExpression()), !dbg !9605
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9606, metadata !DIExpression()), !dbg !9607
  %0 = load float*, float** %a.addr, align 8, !dbg !9608
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9608
  %1 = load float, float* %arrayidx, align 4, !dbg !9608
  %2 = load float*, float** %b.addr, align 8, !dbg !9609
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9609
  %3 = load float, float* %arrayidx1, align 4, !dbg !9609
  %sub = fsub float %1, %3, !dbg !9610
  %4 = load float*, float** %r.addr, align 8, !dbg !9611
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9611
  store float %sub, float* %arrayidx2, align 4, !dbg !9612
  %5 = load float*, float** %a.addr, align 8, !dbg !9613
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9613
  %6 = load float, float* %arrayidx3, align 4, !dbg !9613
  %7 = load float*, float** %b.addr, align 8, !dbg !9614
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9614
  %8 = load float, float* %arrayidx4, align 4, !dbg !9614
  %sub5 = fsub float %6, %8, !dbg !9615
  %9 = load float*, float** %r.addr, align 8, !dbg !9616
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9616
  store float %sub5, float* %arrayidx6, align 4, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_manhattan_v2(float* %v) #0 !dbg !9619 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  %0 = load float*, float** %v.addr, align 8, !dbg !9624
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9624
  %1 = load float, float* %arrayidx, align 4, !dbg !9624
  %2 = call float @llvm.fabs.f32(float %1), !dbg !9625
  %3 = load float*, float** %v.addr, align 8, !dbg !9626
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !9626
  %4 = load float, float* %arrayidx1, align 4, !dbg !9626
  %5 = call float @llvm.fabs.f32(float %4), !dbg !9627
  %add = fadd float %2, %5, !dbg !9628
  ret float %add, !dbg !9629
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local float @dist_to_line_segment_v2(float*, float*, float*) #2

declare dso_local float @line_point_factor_v2(float*, float*, float*) #2

declare dso_local zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D*, float*, i8 zeroext) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_property_float_set(%struct.PointerRNA*, %struct.PropertyRNA*, float) #2

declare dso_local float @RNA_property_float_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @similar_vert_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9630 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %type = alloca i32, align 4
  %thresh = alloca float, align 4
  %compare = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9631, metadata !DIExpression()), !dbg !9632
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9635, metadata !DIExpression()), !dbg !9636
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9637
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9638
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9636
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9639, metadata !DIExpression()), !dbg !9640
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9641
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9642
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9640
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !9643, metadata !DIExpression()), !dbg !9645
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9646, metadata !DIExpression()), !dbg !9647
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9648
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9649
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9649
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !9650
  store i32 %call2, i32* %type, align 4, !dbg !9647
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !9651, metadata !DIExpression()), !dbg !9652
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9653
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9654
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9654
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)), !dbg !9655
  store float %call4, float* %thresh, align 4, !dbg !9652
  call void @llvm.dbg.declare(metadata i32* %compare, metadata !9656, metadata !DIExpression()), !dbg !9657
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9658
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9659
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9659
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)), !dbg !9660
  store i32 %call6, i32* %compare, align 4, !dbg !9657
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9661
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9662
  %10 = load i32, i32* %type, align 4, !dbg !9663
  %11 = load float, float* %thresh, align 4, !dbg !9664
  %conv = fpext float %11 to double, !dbg !9664
  %12 = load i32, i32* %compare, align 4, !dbg !9665
  %call7 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %8, %struct.BMOperator* %bmop, %struct.wmOperator* %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.177, i64 0, i64 0), i32 1, i32 %10, double %conv, i32 %12), !dbg !9666
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9667
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !9668
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9668
  call void @BMO_op_exec(%struct.BMesh* %14, %struct.BMOperator* %bmop), !dbg !9669
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9670
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %15, i8 zeroext 1), !dbg !9671
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9672
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !9673
  %17 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !9673
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !9674
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !9675
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %17, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0), i8 zeroext 1, i8 zeroext 1, i8 zeroext 1), !dbg !9676
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9677
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9679
  %call9 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %18, %struct.BMOperator* %bmop, %struct.wmOperator* %19, i8 zeroext 1), !dbg !9680
  %tobool = icmp ne i8 %call9, 0, !dbg !9680
  br i1 %tobool, label %if.end, label %if.then, !dbg !9681

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9682
  br label %return, !dbg !9682

if.end:                                           ; preds = %entry
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9684
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %20), !dbg !9685
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9686
  call void @EDBM_update_generic(%struct.BMEditMesh* %21, i8 zeroext 0, i8 zeroext 0), !dbg !9687
  store i32 4, i32* %retval, align 4, !dbg !9688
  br label %return, !dbg !9688

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9689
  ret i32 %22, !dbg !9689
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @similar_edge_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9690 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %type = alloca i32, align 4
  %thresh = alloca float, align 4
  %compare = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9691, metadata !DIExpression()), !dbg !9692
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9693, metadata !DIExpression()), !dbg !9694
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9695, metadata !DIExpression()), !dbg !9696
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9697
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9698
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9696
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9699, metadata !DIExpression()), !dbg !9700
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9701
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9702
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9700
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !9703, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9705, metadata !DIExpression()), !dbg !9706
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9707
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9708
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9708
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !9709
  store i32 %call2, i32* %type, align 4, !dbg !9706
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !9710, metadata !DIExpression()), !dbg !9711
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9712
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9713
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9713
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)), !dbg !9714
  store float %call4, float* %thresh, align 4, !dbg !9711
  call void @llvm.dbg.declare(metadata i32* %compare, metadata !9715, metadata !DIExpression()), !dbg !9716
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9717
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9718
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9718
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)), !dbg !9719
  store i32 %call6, i32* %compare, align 4, !dbg !9716
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9720
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9721
  %10 = load i32, i32* %type, align 4, !dbg !9722
  %11 = load float, float* %thresh, align 4, !dbg !9723
  %conv = fpext float %11 to double, !dbg !9723
  %12 = load i32, i32* %compare, align 4, !dbg !9724
  %call7 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %8, %struct.BMOperator* %bmop, %struct.wmOperator* %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.179, i64 0, i64 0), i32 1, i32 %10, double %conv, i32 %12), !dbg !9725
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9726
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !9727
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9727
  call void @BMO_op_exec(%struct.BMesh* %14, %struct.BMOperator* %bmop), !dbg !9728
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9729
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %15, i8 zeroext 1), !dbg !9730
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9731
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !9732
  %17 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !9732
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !9733
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !9734
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %17, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.180, i64 0, i64 0), i8 zeroext 2, i8 zeroext 1, i8 zeroext 1), !dbg !9735
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9736
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %18), !dbg !9737
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9738
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9740
  %call9 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %19, %struct.BMOperator* %bmop, %struct.wmOperator* %20, i8 zeroext 1), !dbg !9741
  %tobool = icmp ne i8 %call9, 0, !dbg !9741
  br i1 %tobool, label %if.end, label %if.then, !dbg !9742

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9743
  br label %return, !dbg !9743

if.end:                                           ; preds = %entry
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9745
  call void @EDBM_update_generic(%struct.BMEditMesh* %21, i8 zeroext 0, i8 zeroext 0), !dbg !9746
  store i32 4, i32* %retval, align 4, !dbg !9747
  br label %return, !dbg !9747

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9748
  ret i32 %22, !dbg !9748
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @similar_face_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9749 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %type = alloca i32, align 4
  %thresh = alloca float, align 4
  %compare = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9750, metadata !DIExpression()), !dbg !9751
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9754, metadata !DIExpression()), !dbg !9755
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9756
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9757
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9755
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9758, metadata !DIExpression()), !dbg !9759
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9760
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9761
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9759
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !9762, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9764, metadata !DIExpression()), !dbg !9765
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9766
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9767
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9767
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !9768
  store i32 %call2, i32* %type, align 4, !dbg !9765
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !9769, metadata !DIExpression()), !dbg !9770
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9771
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9772
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9772
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)), !dbg !9773
  store float %call4, float* %thresh, align 4, !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %compare, metadata !9774, metadata !DIExpression()), !dbg !9775
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9776
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9777
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9777
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)), !dbg !9778
  store i32 %call6, i32* %compare, align 4, !dbg !9775
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9779
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9780
  %10 = load i32, i32* %type, align 4, !dbg !9781
  %11 = load float, float* %thresh, align 4, !dbg !9782
  %conv = fpext float %11 to double, !dbg !9782
  %12 = load i32, i32* %compare, align 4, !dbg !9783
  %call7 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %8, %struct.BMOperator* %bmop, %struct.wmOperator* %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.181, i64 0, i64 0), i32 1, i32 %10, double %conv, i32 %12), !dbg !9784
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9785
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !9786
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9786
  call void @BMO_op_exec(%struct.BMesh* %14, %struct.BMOperator* %bmop), !dbg !9787
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9788
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %15, i8 zeroext 1), !dbg !9789
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9790
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !9791
  %17 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !9791
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !9792
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !9793
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %17, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.182, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !9794
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9795
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9797
  %call9 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %18, %struct.BMOperator* %bmop, %struct.wmOperator* %19, i8 zeroext 1), !dbg !9798
  %tobool = icmp ne i8 %call9, 0, !dbg !9798
  br i1 %tobool, label %if.end, label %if.then, !dbg !9799

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9800
  br label %return, !dbg !9800

if.end:                                           ; preds = %entry
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9802
  call void @EDBM_update_generic(%struct.BMEditMesh* %20, i8 zeroext 0, i8 zeroext 0), !dbg !9803
  store i32 4, i32* %retval, align 4, !dbg !9804
  br label %return, !dbg !9804

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !9805
  ret i32 %21, !dbg !9805
}

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local zeroext i8 @EDBM_op_init(%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) #2

declare dso_local void @BMO_op_exec(%struct.BMesh*, %struct.BMOperator*) #2

declare dso_local void @BMO_slot_buffer_hflag_enable(%struct.BMesh*, %struct.BMOpSlot*, i8*, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local zeroext i8 @EDBM_op_finish(%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8 zeroext) #2

declare dso_local void @RNA_enum_items_add_value(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*, i32) #2

declare dso_local void @RNA_enum_item_end(%struct.EnumPropertyItem**, i32*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local i32 @BM_mesh_calc_face_groups(%struct.BMesh*, i32*, [2 x i32]**, i8 (%struct.BMElem*, i8*)*, i8*, i8 zeroext, i8 zeroext) #2

declare dso_local void @BM_mesh_elem_table_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local %struct.BMFace* @BM_face_at_index(%struct.BMesh*, i32) #2

declare dso_local i32 @BM_mesh_region_match(%struct.BMesh*, %struct.BMFace**, i32, %struct.ListBase*) #2

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #2

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @walker_select(%struct.BMEditMesh* %em, i32 %walkercode, i8* %start, i8 zeroext %select) #0 !dbg !9806 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %walkercode.addr = alloca i32, align 4
  %start.addr = alloca i8*, align 8
  %select.addr = alloca i8, align 1
  %bm = alloca %struct.BMesh*, align 8
  %ele = alloca %struct.BMElem*, align 8
  %walker = alloca %struct.BMWalker, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  store i32 %walkercode, i32* %walkercode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %walkercode.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !9817, metadata !DIExpression()), !dbg !9818
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !9819
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !9820
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !9820
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !9818
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele, metadata !9821, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.declare(metadata %struct.BMWalker* %walker, metadata !9823, metadata !DIExpression()), !dbg !9824
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9825
  %3 = load i32, i32* %walkercode.addr, align 4, !dbg !9826
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %2, i32 %3, i16 signext 0, i16 signext 0, i16 signext 0, i32 1, i32 0), !dbg !9827
  %4 = load i8*, i8** %start.addr, align 8, !dbg !9828
  %call = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %4), !dbg !9830
  %5 = bitcast i8* %call to %struct.BMElem*, !dbg !9830
  store %struct.BMElem* %5, %struct.BMElem** %ele, align 8, !dbg !9831
  br label %for.cond, !dbg !9832

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9833
  %tobool = icmp ne %struct.BMElem* %6, null, !dbg !9835
  br i1 %tobool, label %for.body, label %for.end, !dbg !9835

for.body:                                         ; preds = %for.cond
  %7 = load i8, i8* %select.addr, align 1, !dbg !9836
  %tobool2 = icmp ne i8 %7, 0, !dbg !9836
  br i1 %tobool2, label %if.end, label %if.then, !dbg !9839

if.then:                                          ; preds = %for.body
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9840
  %9 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9840
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %9, i32 0, i32 0, !dbg !9840
  %call3 = call zeroext i8 @_bm_select_history_remove(%struct.BMesh* %8, %struct.BMHeader* %head), !dbg !9840
  br label %if.end, !dbg !9842

if.end:                                           ; preds = %if.then, %for.body
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9843
  %11 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9844
  %12 = load i8, i8* %select.addr, align 1, !dbg !9845
  call void @BM_elem_select_set(%struct.BMesh* %10, %struct.BMElem* %11, i8 zeroext %12), !dbg !9846
  br label %for.inc, !dbg !9847

for.inc:                                          ; preds = %if.end
  %call4 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !9848
  %13 = bitcast i8* %call4 to %struct.BMElem*, !dbg !9848
  store %struct.BMElem* %13, %struct.BMElem** %ele, align 8, !dbg !9849
  br label %for.cond, !dbg !9850, !llvm.loop !9851

for.end:                                          ; preds = %for.cond
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !9853
  ret void, !dbg !9854
}

declare dso_local void @BMW_init(%struct.BMWalker*, %struct.BMesh*, i32, i16 signext, i16 signext, i16 signext, i32, i32) #2

declare dso_local i8* @BMW_begin(%struct.BMWalker*, i8*) #2

declare dso_local void @BM_elem_select_set(%struct.BMesh*, %struct.BMElem*, i8 zeroext) #2

declare dso_local i8* @BMW_step(%struct.BMWalker*) #2

declare dso_local void @BMW_end(%struct.BMWalker*) #2

declare dso_local void @view3d_operator_needs_opengl(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mouse_mesh_loop(%struct.bContext* %C, i32* %mval, i8 zeroext %extend, i8 zeroext %deselect, i8 zeroext %toggle, i8 zeroext %ring) #0 !dbg !9855 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %mval.addr = alloca i32*, align 8
  %extend.addr = alloca i8, align 1
  %deselect.addr = alloca i8, align 1
  %toggle.addr = alloca i8, align 1
  %ring.addr = alloca i8, align 1
  %vc = alloca %struct.ViewContext, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %select = alloca i8, align 1
  %select_clear = alloca i8, align 1
  %select_cycle = alloca i8, align 1
  %dist = alloca float, align 4
  %mvalf = alloca [2 x float], align 4
  %v1_co = alloca [2 x float], align 4
  %v2_co = alloca [2 x float], align 4
  %length_1 = alloca float, align 4
  %length_2 = alloca float, align 4
  %f = alloca %struct.BMFace*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iterf = alloca %struct.BMIter, align 8
  %best_dist = alloca float, align 4
  %cent = alloca [3 x float], align 4
  %co106 = alloca [2 x float], align 4
  %tdist = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  store i32* %mval, i32** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !9862, metadata !DIExpression()), !dbg !9863
  store i8 %deselect, i8* %deselect.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %deselect.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  store i8 %toggle, i8* %toggle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %toggle.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  store i8 %ring, i8* %ring.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ring.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata %struct.ViewContext* %vc, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9872, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !9874, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i8* %select, metadata !9876, metadata !DIExpression()), !dbg !9877
  store i8 1, i8* %select, align 1, !dbg !9877
  call void @llvm.dbg.declare(metadata i8* %select_clear, metadata !9878, metadata !DIExpression()), !dbg !9879
  store i8 0, i8* %select_clear, align 1, !dbg !9879
  call void @llvm.dbg.declare(metadata i8* %select_cycle, metadata !9880, metadata !DIExpression()), !dbg !9881
  store i8 1, i8* %select_cycle, align 1, !dbg !9881
  call void @llvm.dbg.declare(metadata float* %dist, metadata !9882, metadata !DIExpression()), !dbg !9883
  %call = call float @ED_view3d_select_dist_px(), !dbg !9884
  %mul = fmul float %call, 0x3FE554C980000000, !dbg !9885
  store float %mul, float* %dist, align 4, !dbg !9883
  call void @llvm.dbg.declare(metadata [2 x float]* %mvalf, metadata !9886, metadata !DIExpression()), !dbg !9887
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9888
  call void @em_setup_viewcontext(%struct.bContext* %0, %struct.ViewContext* %vc), !dbg !9889
  %1 = load i32*, i32** %mval.addr, align 8, !dbg !9890
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !9890
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9890
  %mval1 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 7, !dbg !9891
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 0, !dbg !9892
  store i32 %2, i32* %arrayidx2, align 8, !dbg !9893
  %conv = sitofp i32 %2 to float, !dbg !9894
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 0, !dbg !9895
  store float %conv, float* %arrayidx3, align 4, !dbg !9896
  %3 = load i32*, i32** %mval.addr, align 8, !dbg !9897
  %arrayidx4 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !9897
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !9897
  %mval5 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 7, !dbg !9898
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mval5, i64 0, i64 1, !dbg !9899
  store i32 %4, i32* %arrayidx6, align 4, !dbg !9900
  %conv7 = sitofp i32 %4 to float, !dbg !9901
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 1, !dbg !9902
  store float %conv7, float* %arrayidx8, align 4, !dbg !9903
  %em9 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 6, !dbg !9904
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em9, align 8, !dbg !9904
  store %struct.BMEditMesh* %5, %struct.BMEditMesh** %em, align 8, !dbg !9905
  call void @view3d_validate_backbuf(%struct.ViewContext* %vc), !dbg !9906
  %call10 = call %struct.BMEdge* @EDBM_edge_find_nearest(%struct.ViewContext* %vc, float* %dist), !dbg !9907
  store %struct.BMEdge* %call10, %struct.BMEdge** %eed, align 8, !dbg !9908
  %6 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !9909
  %cmp = icmp eq %struct.BMEdge* %6, null, !dbg !9911
  br i1 %cmp, label %if.then, label %if.end, !dbg !9912

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9913
  br label %return, !dbg !9913

if.end:                                           ; preds = %entry
  %7 = load i8, i8* %extend.addr, align 1, !dbg !9915
  %conv12 = zext i8 %7 to i32, !dbg !9915
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !9917
  br i1 %cmp13, label %land.lhs.true, label %if.end23, !dbg !9918

land.lhs.true:                                    ; preds = %if.end
  %8 = load i8, i8* %deselect.addr, align 1, !dbg !9919
  %conv15 = zext i8 %8 to i32, !dbg !9919
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !9920
  br i1 %cmp16, label %land.lhs.true18, label %if.end23, !dbg !9921

land.lhs.true18:                                  ; preds = %land.lhs.true
  %9 = load i8, i8* %toggle.addr, align 1, !dbg !9922
  %conv19 = zext i8 %9 to i32, !dbg !9922
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !9923
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !9924

if.then22:                                        ; preds = %land.lhs.true18
  store i8 1, i8* %select_clear, align 1, !dbg !9925
  br label %if.end23, !dbg !9927

if.end23:                                         ; preds = %if.then22, %land.lhs.true18, %land.lhs.true, %if.end
  %10 = load i8, i8* %extend.addr, align 1, !dbg !9928
  %tobool = icmp ne i8 %10, 0, !dbg !9928
  br i1 %tobool, label %if.then24, label %if.else, !dbg !9930

if.then24:                                        ; preds = %if.end23
  store i8 1, i8* %select, align 1, !dbg !9931
  br label %if.end41, !dbg !9933

if.else:                                          ; preds = %if.end23
  %11 = load i8, i8* %deselect.addr, align 1, !dbg !9934
  %tobool25 = icmp ne i8 %11, 0, !dbg !9934
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !9936

if.then26:                                        ; preds = %if.else
  store i8 0, i8* %select, align 1, !dbg !9937
  br label %if.end40, !dbg !9939

if.else27:                                        ; preds = %if.else
  %12 = load i8, i8* %select_clear, align 1, !dbg !9940
  %conv28 = zext i8 %12 to i32, !dbg !9940
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !9940
  br i1 %tobool29, label %if.then34, label %lor.lhs.false, !dbg !9942

lor.lhs.false:                                    ; preds = %if.else27
  %13 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !9943
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %13, i32 0, i32 0, !dbg !9943
  %call30 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !9943
  %conv31 = zext i8 %call30 to i32, !dbg !9943
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !9944
  br i1 %cmp32, label %if.then34, label %if.else35, !dbg !9945

if.then34:                                        ; preds = %lor.lhs.false, %if.else27
  store i8 1, i8* %select, align 1, !dbg !9946
  br label %if.end39, !dbg !9948

if.else35:                                        ; preds = %lor.lhs.false
  %14 = load i8, i8* %toggle.addr, align 1, !dbg !9949
  %tobool36 = icmp ne i8 %14, 0, !dbg !9949
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !9951

if.then37:                                        ; preds = %if.else35
  store i8 0, i8* %select, align 1, !dbg !9952
  store i8 0, i8* %select_cycle, align 1, !dbg !9954
  br label %if.end38, !dbg !9955

if.end38:                                         ; preds = %if.then37, %if.else35
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then34
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then26
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then24
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9956
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 12, !dbg !9958
  %16 = load i16, i16* %selectmode, align 4, !dbg !9958
  %conv42 = sext i16 %16 to i32, !dbg !9956
  %and = and i32 %conv42, 4, !dbg !9959
  %tobool43 = icmp ne i32 %and, 0, !dbg !9959
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !9960

if.then44:                                        ; preds = %if.end41
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9961
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !9963
  %19 = load i8, i8* %select, align 1, !dbg !9964
  %20 = load i8, i8* %select_clear, align 1, !dbg !9965
  call void @mouse_mesh_loop_face(%struct.BMEditMesh* %17, %struct.BMEdge* %18, i8 zeroext %19, i8 zeroext %20), !dbg !9966
  br label %if.end50, !dbg !9967

if.else45:                                        ; preds = %if.end41
  %21 = load i8, i8* %ring.addr, align 1, !dbg !9968
  %tobool46 = icmp ne i8 %21, 0, !dbg !9968
  br i1 %tobool46, label %if.then47, label %if.else48, !dbg !9971

if.then47:                                        ; preds = %if.else45
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9972
  %23 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !9974
  %24 = load i8, i8* %select, align 1, !dbg !9975
  %25 = load i8, i8* %select_clear, align 1, !dbg !9976
  call void @mouse_mesh_loop_edge_ring(%struct.BMEditMesh* %22, %struct.BMEdge* %23, i8 zeroext %24, i8 zeroext %25), !dbg !9977
  br label %if.end49, !dbg !9978

if.else48:                                        ; preds = %if.else45
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9979
  %27 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !9981
  %28 = load i8, i8* %select, align 1, !dbg !9982
  %29 = load i8, i8* %select_clear, align 1, !dbg !9983
  %30 = load i8, i8* %select_cycle, align 1, !dbg !9984
  call void @mouse_mesh_loop_edge(%struct.BMEditMesh* %26, %struct.BMEdge* %27, i8 zeroext %28, i8 zeroext %29, i8 zeroext %30), !dbg !9985
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then44
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9986
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %31), !dbg !9987
  %32 = load i8, i8* %select, align 1, !dbg !9988
  %tobool51 = icmp ne i8 %32, 0, !dbg !9988
  br i1 %tobool51, label %if.then52, label %if.end134, !dbg !9990

if.then52:                                        ; preds = %if.end50
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9991
  %selectmode53 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %33, i32 0, i32 12, !dbg !9994
  %34 = load i16, i16* %selectmode53, align 4, !dbg !9994
  %conv54 = sext i16 %34 to i32, !dbg !9991
  %and55 = and i32 %conv54, 1, !dbg !9995
  %tobool56 = icmp ne i32 %and55, 0, !dbg !9995
  br i1 %tobool56, label %if.then57, label %if.else84, !dbg !9996

if.then57:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata [2 x float]* %v1_co, metadata !9997, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata [2 x float]* %v2_co, metadata !10000, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata float* %length_1, metadata !10002, metadata !DIExpression()), !dbg !10003
  store float 0x47EFFFFFE0000000, float* %length_1, align 4, !dbg !10003
  call void @llvm.dbg.declare(metadata float* %length_2, metadata !10004, metadata !DIExpression()), !dbg !10005
  store float 0x47EFFFFFE0000000, float* %length_2, align 4, !dbg !10005
  %obedit = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !10006
  %35 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10006
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !10007
  %36 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10007
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %35, %struct.RegionView3D* %36), !dbg !10008
  %ar = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 3, !dbg !10009
  %37 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10009
  %38 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !10011
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %38, i32 0, i32 2, !dbg !10012
  %39 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10012
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %39, i32 0, i32 2, !dbg !10013
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10011
  %arraydecay58 = getelementptr inbounds [2 x float], [2 x float]* %v1_co, i64 0, i64 0, !dbg !10014
  %call59 = call i32 @ED_view3d_project_float_object(%struct.ARegion* %37, float* %arraydecay, float* %arraydecay58, i32 4), !dbg !10015
  %cmp60 = icmp eq i32 %call59, 0, !dbg !10016
  br i1 %cmp60, label %if.then62, label %if.end66, !dbg !10017

if.then62:                                        ; preds = %if.then57
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 0, !dbg !10018
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %v1_co, i64 0, i64 0, !dbg !10020
  %call65 = call float @len_squared_v2v2(float* %arraydecay63, float* %arraydecay64), !dbg !10021
  store float %call65, float* %length_1, align 4, !dbg !10022
  br label %if.end66, !dbg !10023

if.end66:                                         ; preds = %if.then62, %if.then57
  %ar67 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 3, !dbg !10024
  %40 = load %struct.ARegion*, %struct.ARegion** %ar67, align 8, !dbg !10024
  %41 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !10026
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %41, i32 0, i32 3, !dbg !10027
  %42 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10027
  %co68 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %42, i32 0, i32 2, !dbg !10028
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %co68, i64 0, i64 0, !dbg !10026
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %v2_co, i64 0, i64 0, !dbg !10029
  %call71 = call i32 @ED_view3d_project_float_object(%struct.ARegion* %40, float* %arraydecay69, float* %arraydecay70, i32 4), !dbg !10030
  %cmp72 = icmp eq i32 %call71, 0, !dbg !10031
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !10032

if.then74:                                        ; preds = %if.end66
  %arraydecay75 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 0, !dbg !10033
  %arraydecay76 = getelementptr inbounds [2 x float], [2 x float]* %v2_co, i64 0, i64 0, !dbg !10035
  %call77 = call float @len_squared_v2v2(float* %arraydecay75, float* %arraydecay76), !dbg !10036
  store float %call77, float* %length_2, align 4, !dbg !10037
  br label %if.end78, !dbg !10038

if.end78:                                         ; preds = %if.then74, %if.end66
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10039
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %43, i32 0, i32 0, !dbg !10039
  %44 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10039
  %45 = load float, float* %length_1, align 4, !dbg !10039
  %46 = load float, float* %length_2, align 4, !dbg !10039
  %cmp79 = fcmp olt float %45, %46, !dbg !10039
  br i1 %cmp79, label %cond.true, label %cond.false, !dbg !10039

cond.true:                                        ; preds = %if.end78
  %47 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !10039
  %v181 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %47, i32 0, i32 2, !dbg !10039
  %48 = load %struct.BMVert*, %struct.BMVert** %v181, align 8, !dbg !10039
  br label %cond.end, !dbg !10039

cond.false:                                       ; preds = %if.end78
  %49 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !10039
  %v282 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %49, i32 0, i32 3, !dbg !10039
  %50 = load %struct.BMVert*, %struct.BMVert** %v282, align 8, !dbg !10039
  br label %cond.end, !dbg !10039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMVert* [ %48, %cond.true ], [ %50, %cond.false ], !dbg !10039
  %head83 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %cond, i32 0, i32 0, !dbg !10039
  call void @_bm_select_history_store(%struct.BMesh* %44, %struct.BMHeader* %head83), !dbg !10039
  br label %if.end133, !dbg !10040

if.else84:                                        ; preds = %if.then52
  %51 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10041
  %selectmode85 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %51, i32 0, i32 12, !dbg !10043
  %52 = load i16, i16* %selectmode85, align 4, !dbg !10043
  %conv86 = sext i16 %52 to i32, !dbg !10041
  %and87 = and i32 %conv86, 2, !dbg !10044
  %tobool88 = icmp ne i32 %and87, 0, !dbg !10044
  br i1 %tobool88, label %if.then89, label %if.else92, !dbg !10045

if.then89:                                        ; preds = %if.else84
  %53 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10046
  %bm90 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %53, i32 0, i32 0, !dbg !10046
  %54 = load %struct.BMesh*, %struct.BMesh** %bm90, align 8, !dbg !10046
  %55 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !10046
  %head91 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %55, i32 0, i32 0, !dbg !10046
  call void @_bm_select_history_store(%struct.BMesh* %54, %struct.BMHeader* %head91), !dbg !10046
  br label %if.end132, !dbg !10048

if.else92:                                        ; preds = %if.else84
  %56 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10049
  %selectmode93 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %56, i32 0, i32 12, !dbg !10051
  %57 = load i16, i16* %selectmode93, align 4, !dbg !10051
  %conv94 = sext i16 %57 to i32, !dbg !10049
  %and95 = and i32 %conv94, 4, !dbg !10052
  %tobool96 = icmp ne i32 %and95, 0, !dbg !10052
  br i1 %tobool96, label %if.then97, label %if.end131, !dbg !10053

if.then97:                                        ; preds = %if.else92
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !10054, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !10057, metadata !DIExpression()), !dbg !10058
  store %struct.BMFace* null, %struct.BMFace** %efa, align 8, !dbg !10058
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iterf, metadata !10059, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.declare(metadata float* %best_dist, metadata !10061, metadata !DIExpression()), !dbg !10062
  store float 0x47EFFFFFE0000000, float* %best_dist, align 4, !dbg !10062
  %obedit98 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !10063
  %58 = load %struct.Object*, %struct.Object** %obedit98, align 8, !dbg !10063
  %rv3d99 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !10064
  %59 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d99, align 8, !dbg !10064
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %58, %struct.RegionView3D* %59), !dbg !10065
  %60 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !10066
  %61 = bitcast %struct.BMEdge* %60 to i8*, !dbg !10066
  %call100 = call i8* @BM_iter_new(%struct.BMIter* %iterf, %struct.BMesh* null, i8 zeroext 8, i8* %61), !dbg !10066
  %62 = bitcast i8* %call100 to %struct.BMFace*, !dbg !10066
  store %struct.BMFace* %62, %struct.BMFace** %f, align 8, !dbg !10066
  br label %for.cond, !dbg !10066

for.cond:                                         ; preds = %for.inc, %if.then97
  %63 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10068
  %tobool101 = icmp ne %struct.BMFace* %63, null, !dbg !10066
  br i1 %tobool101, label %for.body, label %for.end, !dbg !10066

for.body:                                         ; preds = %for.cond
  %64 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10070
  %head102 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %64, i32 0, i32 0, !dbg !10070
  %call103 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head102, i8 zeroext 1), !dbg !10070
  %tobool104 = icmp ne i8 %call103, 0, !dbg !10070
  br i1 %tobool104, label %if.then105, label %if.end123, !dbg !10073

if.then105:                                       ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !10074, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.declare(metadata [2 x float]* %co106, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata float* %tdist, metadata !10079, metadata !DIExpression()), !dbg !10080
  %65 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10081
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !10082
  call void @BM_face_calc_center_mean(%struct.BMFace* %65, float* %arraydecay107), !dbg !10083
  %ar108 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 3, !dbg !10084
  %66 = load %struct.ARegion*, %struct.ARegion** %ar108, align 8, !dbg !10084
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !10086
  %arraydecay110 = getelementptr inbounds [2 x float], [2 x float]* %co106, i64 0, i64 0, !dbg !10087
  %call111 = call i32 @ED_view3d_project_float_object(%struct.ARegion* %66, float* %arraydecay109, float* %arraydecay110, i32 4), !dbg !10088
  %cmp112 = icmp eq i32 %call111, 0, !dbg !10089
  br i1 %cmp112, label %if.then114, label %if.end122, !dbg !10090

if.then114:                                       ; preds = %if.then105
  %arraydecay115 = getelementptr inbounds [2 x float], [2 x float]* %mvalf, i64 0, i64 0, !dbg !10091
  %arraydecay116 = getelementptr inbounds [2 x float], [2 x float]* %co106, i64 0, i64 0, !dbg !10093
  %call117 = call float @len_squared_v2v2(float* %arraydecay115, float* %arraydecay116), !dbg !10094
  store float %call117, float* %tdist, align 4, !dbg !10095
  %67 = load float, float* %tdist, align 4, !dbg !10096
  %68 = load float, float* %best_dist, align 4, !dbg !10098
  %cmp118 = fcmp olt float %67, %68, !dbg !10099
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !10100

if.then120:                                       ; preds = %if.then114
  %69 = load float, float* %tdist, align 4, !dbg !10101
  store float %69, float* %best_dist, align 4, !dbg !10103
  %70 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10104
  store %struct.BMFace* %70, %struct.BMFace** %efa, align 8, !dbg !10105
  br label %if.end121, !dbg !10106

if.end121:                                        ; preds = %if.then120, %if.then114
  br label %if.end122, !dbg !10107

if.end122:                                        ; preds = %if.end121, %if.then105
  br label %if.end123, !dbg !10108

if.end123:                                        ; preds = %if.end122, %for.body
  br label %for.inc, !dbg !10109

for.inc:                                          ; preds = %if.end123
  %call124 = call i8* @BM_iter_step(%struct.BMIter* %iterf), !dbg !10068
  %71 = bitcast i8* %call124 to %struct.BMFace*, !dbg !10068
  store %struct.BMFace* %71, %struct.BMFace** %f, align 8, !dbg !10068
  br label %for.cond, !dbg !10068, !llvm.loop !10110

for.end:                                          ; preds = %for.cond
  %72 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10112
  %tobool125 = icmp ne %struct.BMFace* %72, null, !dbg !10112
  br i1 %tobool125, label %if.then126, label %if.end130, !dbg !10114

if.then126:                                       ; preds = %for.end
  %73 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10115
  %bm127 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %73, i32 0, i32 0, !dbg !10117
  %74 = load %struct.BMesh*, %struct.BMesh** %bm127, align 8, !dbg !10117
  %75 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10118
  call void @BM_mesh_active_face_set(%struct.BMesh* %74, %struct.BMFace* %75), !dbg !10119
  %76 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10120
  %bm128 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %76, i32 0, i32 0, !dbg !10120
  %77 = load %struct.BMesh*, %struct.BMesh** %bm128, align 8, !dbg !10120
  %78 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !10120
  %head129 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %78, i32 0, i32 0, !dbg !10120
  call void @_bm_select_history_store(%struct.BMesh* %77, %struct.BMHeader* %head129), !dbg !10120
  br label %if.end130, !dbg !10121

if.end130:                                        ; preds = %if.then126, %for.end
  br label %if.end131, !dbg !10122

if.end131:                                        ; preds = %if.end130, %if.else92
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then89
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %cond.end
  br label %if.end134, !dbg !10123

if.end134:                                        ; preds = %if.end133, %if.end50
  %79 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10124
  %obedit135 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 2, !dbg !10125
  %80 = load %struct.Object*, %struct.Object** %obedit135, align 8, !dbg !10125
  %81 = bitcast %struct.Object* %80 to i8*, !dbg !10126
  call void @WM_event_add_notifier(%struct.bContext* %79, i32 274333696, i8* %81), !dbg !10127
  store i8 1, i8* %retval, align 1, !dbg !10128
  br label %return, !dbg !10128

return:                                           ; preds = %if.end134, %if.then
  %82 = load i8, i8* %retval, align 1, !dbg !10129
  ret i8 %82, !dbg !10129
}

declare dso_local float @ED_view3d_select_dist_px() #2

; Function Attrs: noinline nounwind uwtable
define internal void @mouse_mesh_loop_face(%struct.BMEditMesh* %em, %struct.BMEdge* %eed, i8 zeroext %select, i8 zeroext %select_clear) #0 !dbg !10130 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %eed.addr = alloca %struct.BMEdge*, align 8
  %select.addr = alloca i8, align 1
  %select_clear.addr = alloca i8, align 1
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10133, metadata !DIExpression()), !dbg !10134
  store %struct.BMEdge* %eed, %struct.BMEdge** %eed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed.addr, metadata !10135, metadata !DIExpression()), !dbg !10136
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  store i8 %select_clear, i8* %select_clear.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select_clear.addr, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load i8, i8* %select_clear.addr, align 1, !dbg !10141
  %tobool = icmp ne i8 %0, 0, !dbg !10141
  br i1 %tobool, label %if.then, label %if.end, !dbg !10143

if.then:                                          ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10144
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %1, i8 zeroext 1), !dbg !10146
  br label %if.end, !dbg !10147

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10148
  %3 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10149
  %4 = bitcast %struct.BMEdge* %3 to i8*, !dbg !10149
  %5 = load i8, i8* %select.addr, align 1, !dbg !10150
  call void @walker_select(%struct.BMEditMesh* %2, i32 3, i8* %4, i8 zeroext %5), !dbg !10151
  ret void, !dbg !10152
}

; Function Attrs: noinline nounwind uwtable
define internal void @mouse_mesh_loop_edge_ring(%struct.BMEditMesh* %em, %struct.BMEdge* %eed, i8 zeroext %select, i8 zeroext %select_clear) #0 !dbg !10153 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %eed.addr = alloca %struct.BMEdge*, align 8
  %select.addr = alloca i8, align 1
  %select_clear.addr = alloca i8, align 1
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  store %struct.BMEdge* %eed, %struct.BMEdge** %eed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  store i8 %select_clear, i8* %select_clear.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select_clear.addr, metadata !10160, metadata !DIExpression()), !dbg !10161
  %0 = load i8, i8* %select_clear.addr, align 1, !dbg !10162
  %tobool = icmp ne i8 %0, 0, !dbg !10162
  br i1 %tobool, label %if.then, label %if.end, !dbg !10164

if.then:                                          ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10165
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %1, i8 zeroext 1), !dbg !10167
  br label %if.end, !dbg !10168

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10169
  %3 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10170
  %4 = bitcast %struct.BMEdge* %3 to i8*, !dbg !10170
  %5 = load i8, i8* %select.addr, align 1, !dbg !10171
  call void @walker_select(%struct.BMEditMesh* %2, i32 4, i8* %4, i8 zeroext %5), !dbg !10172
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind uwtable
define internal void @mouse_mesh_loop_edge(%struct.BMEditMesh* %em, %struct.BMEdge* %eed, i8 zeroext %select, i8 zeroext %select_clear, i8 zeroext %select_cycle) #0 !dbg !10174 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %eed.addr = alloca %struct.BMEdge*, align 8
  %select.addr = alloca i8, align 1
  %select_clear.addr = alloca i8, align 1
  %select_cycle.addr = alloca i8, align 1
  %edge_boundary = alloca i8, align 1
  %tot = alloca [2 x i32], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10177, metadata !DIExpression()), !dbg !10178
  store %struct.BMEdge* %eed, %struct.BMEdge** %eed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed.addr, metadata !10179, metadata !DIExpression()), !dbg !10180
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i8 %select_clear, i8* %select_clear.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select_clear.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i8 %select_cycle, i8* %select_cycle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select_cycle.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.declare(metadata i8* %edge_boundary, metadata !10187, metadata !DIExpression()), !dbg !10188
  store i8 0, i8* %edge_boundary, align 1, !dbg !10188
  %0 = load i8, i8* %select_cycle.addr, align 1, !dbg !10189
  %conv = zext i8 %0 to i32, !dbg !10189
  %tobool = icmp ne i32 %conv, 0, !dbg !10189
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !10191

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10192
  %call = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %1), !dbg !10193
  %conv1 = zext i8 %call to i32, !dbg !10193
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !10193
  br i1 %tobool2, label %if.then, label %if.end15, !dbg !10194

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x i32]* %tot, metadata !10195, metadata !DIExpression()), !dbg !10197
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10198
  %3 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10199
  %4 = bitcast %struct.BMEdge* %3 to i8*, !dbg !10199
  %5 = load i8, i8* %select.addr, align 1, !dbg !10200
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 0, !dbg !10201
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 1, !dbg !10202
  call void @walker_select_count(%struct.BMEditMesh* %2, i32 2, i8* %4, i8 zeroext %5, i8 zeroext 0, i32* %arrayidx, i32* %arrayidx3), !dbg !10203
  %6 = load i8, i8* %select.addr, align 1, !dbg !10204
  %idxprom = zext i8 %6 to i64, !dbg !10206
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 %idxprom, !dbg !10206
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !10206
  %cmp = icmp eq i32 %7, 0, !dbg !10207
  br i1 %cmp, label %if.then6, label %if.end14, !dbg !10208

if.then6:                                         ; preds = %if.then
  store i8 1, i8* %edge_boundary, align 1, !dbg !10209
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10211
  %9 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10212
  %10 = bitcast %struct.BMEdge* %9 to i8*, !dbg !10212
  %11 = load i8, i8* %select.addr, align 1, !dbg !10213
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 0, !dbg !10214
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 1, !dbg !10215
  call void @walker_select_count(%struct.BMEditMesh* %8, i32 5, i8* %10, i8 zeroext %11, i8 zeroext 0, i32* %arrayidx7, i32* %arrayidx8), !dbg !10216
  %12 = load i8, i8* %select.addr, align 1, !dbg !10217
  %idxprom9 = zext i8 %12 to i64, !dbg !10219
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 %idxprom9, !dbg !10219
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !10219
  %cmp11 = icmp eq i32 %13, 0, !dbg !10220
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !10221

if.then13:                                        ; preds = %if.then6
  store i8 0, i8* %edge_boundary, align 1, !dbg !10222
  br label %if.end, !dbg !10224

if.end:                                           ; preds = %if.then13, %if.then6
  br label %if.end14, !dbg !10225

if.end14:                                         ; preds = %if.end, %if.then
  br label %if.end15, !dbg !10226

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %entry
  %14 = load i8, i8* %select_clear.addr, align 1, !dbg !10227
  %tobool16 = icmp ne i8 %14, 0, !dbg !10227
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !10229

if.then17:                                        ; preds = %if.end15
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10230
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %15, i8 zeroext 1), !dbg !10232
  br label %if.end18, !dbg !10233

if.end18:                                         ; preds = %if.then17, %if.end15
  %16 = load i8, i8* %edge_boundary, align 1, !dbg !10234
  %tobool19 = icmp ne i8 %16, 0, !dbg !10234
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !10236

if.then20:                                        ; preds = %if.end18
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10237
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10239
  %19 = bitcast %struct.BMEdge* %18 to i8*, !dbg !10239
  %20 = load i8, i8* %select.addr, align 1, !dbg !10240
  call void @walker_select(%struct.BMEditMesh* %17, i32 5, i8* %19, i8 zeroext %20), !dbg !10241
  br label %if.end21, !dbg !10242

if.else:                                          ; preds = %if.end18
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10243
  %22 = load %struct.BMEdge*, %struct.BMEdge** %eed.addr, align 8, !dbg !10245
  %23 = bitcast %struct.BMEdge* %22 to i8*, !dbg !10245
  %24 = load i8, i8* %select.addr, align 1, !dbg !10246
  call void @walker_select(%struct.BMEditMesh* %21, i32 2, i8* %23, i8 zeroext %24), !dbg !10247
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  ret void, !dbg !10248
}

declare dso_local i32 @ED_view3d_project_float_object(%struct.ARegion*, float*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !10249 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10250, metadata !DIExpression()), !dbg !10251
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10252, metadata !DIExpression()), !dbg !10253
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !10254, metadata !DIExpression()), !dbg !10255
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !10256
  %0 = load float*, float** %b.addr, align 8, !dbg !10257
  %1 = load float*, float** %a.addr, align 8, !dbg !10258
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !10259
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !10260
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !10261
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !10262
  ret float %call, !dbg !10263
}

declare dso_local void @BM_face_calc_center_mean(%struct.BMFace*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %e) #0 !dbg !10264 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !10270, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10272, metadata !DIExpression()), !dbg !10275
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10276
  %l1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !10277
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !10277
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !10275
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10278
  %tobool = icmp ne %struct.BMLoop* %2, null, !dbg !10278
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10279

land.rhs:                                         ; preds = %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10280
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %3, i32 0, i32 4, !dbg !10281
  %4 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !10281
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10282
  %cmp = icmp eq %struct.BMLoop* %4, %5, !dbg !10283
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !10284
  %land.ext = zext i1 %6 to i32, !dbg !10279
  %conv = trunc i32 %land.ext to i8, !dbg !10285
  ret i8 %conv, !dbg !10286
}

; Function Attrs: noinline nounwind uwtable
define internal void @walker_select_count(%struct.BMEditMesh* %em, i32 %walkercode, i8* %start, i8 zeroext %select, i8 zeroext %select_mix, i32* %r_totsel, i32* %r_totunsel) #0 !dbg !10287 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %walkercode.addr = alloca i32, align 4
  %start.addr = alloca i8*, align 8
  %select.addr = alloca i8, align 1
  %select_mix.addr = alloca i8, align 1
  %r_totsel.addr = alloca i32*, align 8
  %r_totunsel.addr = alloca i32*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %ele = alloca %struct.BMElem*, align 8
  %walker = alloca %struct.BMWalker, align 8
  %tot = alloca [2 x i32], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10290, metadata !DIExpression()), !dbg !10291
  store i32 %walkercode, i32* %walkercode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %walkercode.addr, metadata !10292, metadata !DIExpression()), !dbg !10293
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !10294, metadata !DIExpression()), !dbg !10295
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !10296, metadata !DIExpression()), !dbg !10297
  store i8 %select_mix, i8* %select_mix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select_mix.addr, metadata !10298, metadata !DIExpression()), !dbg !10299
  store i32* %r_totsel, i32** %r_totsel.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totsel.addr, metadata !10300, metadata !DIExpression()), !dbg !10301
  store i32* %r_totunsel, i32** %r_totunsel.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totunsel.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !10304, metadata !DIExpression()), !dbg !10305
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10306
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !10307
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !10307
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !10305
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.declare(metadata %struct.BMWalker* %walker, metadata !10310, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.declare(metadata [2 x i32]* %tot, metadata !10312, metadata !DIExpression()), !dbg !10313
  %2 = bitcast [2 x i32]* %tot to i8*, !dbg !10313
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 8, i1 false), !dbg !10313
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10314
  %4 = load i32, i32* %walkercode.addr, align 4, !dbg !10315
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %3, i32 %4, i16 signext 0, i16 signext 0, i16 signext 0, i32 1, i32 0), !dbg !10316
  %5 = load i8*, i8** %start.addr, align 8, !dbg !10317
  %call = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %5), !dbg !10319
  %6 = bitcast i8* %call to %struct.BMElem*, !dbg !10319
  store %struct.BMElem* %6, %struct.BMElem** %ele, align 8, !dbg !10320
  br label %for.cond, !dbg !10321

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10322
  %tobool = icmp ne %struct.BMElem* %7, null, !dbg !10324
  br i1 %tobool, label %for.body, label %for.end, !dbg !10324

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10325
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %8, i32 0, i32 0, !dbg !10325
  %call2 = call zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10325
  %conv = zext i8 %call2 to i32, !dbg !10325
  %9 = load i8, i8* %select.addr, align 1, !dbg !10327
  %conv3 = zext i8 %9 to i32, !dbg !10327
  %cmp = icmp ne i32 %conv, %conv3, !dbg !10328
  %conv4 = zext i1 %cmp to i32, !dbg !10328
  %idxprom = sext i32 %conv4 to i64, !dbg !10329
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 %idxprom, !dbg !10329
  %10 = load i32, i32* %arrayidx, align 4, !dbg !10330
  %add = add nsw i32 %10, 1, !dbg !10330
  store i32 %add, i32* %arrayidx, align 4, !dbg !10330
  %11 = load i8, i8* %select_mix.addr, align 1, !dbg !10331
  %tobool5 = icmp ne i8 %11, 0, !dbg !10331
  br i1 %tobool5, label %if.end, label %land.lhs.true, !dbg !10333

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 0, !dbg !10334
  %12 = load i32, i32* %arrayidx6, align 4, !dbg !10334
  %tobool7 = icmp ne i32 %12, 0, !dbg !10334
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !10335

land.lhs.true8:                                   ; preds = %land.lhs.true
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 1, !dbg !10336
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !10336
  %tobool10 = icmp ne i32 %13, 0, !dbg !10336
  br i1 %tobool10, label %if.then, label %if.end, !dbg !10337

if.then:                                          ; preds = %land.lhs.true8
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 1, !dbg !10338
  store i32 -1, i32* %arrayidx11, align 4, !dbg !10340
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 0, !dbg !10341
  store i32 -1, i32* %arrayidx12, align 4, !dbg !10342
  br label %for.end, !dbg !10343

if.end:                                           ; preds = %land.lhs.true8, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10344

for.inc:                                          ; preds = %if.end
  %call13 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !10345
  %14 = bitcast i8* %call13 to %struct.BMElem*, !dbg !10345
  store %struct.BMElem* %14, %struct.BMElem** %ele, align 8, !dbg !10346
  br label %for.cond, !dbg !10347, !llvm.loop !10348

for.end:                                          ; preds = %if.then, %for.cond
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 0, !dbg !10350
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !10350
  %16 = load i32*, i32** %r_totsel.addr, align 8, !dbg !10351
  store i32 %15, i32* %16, align 4, !dbg !10352
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %tot, i64 0, i64 1, !dbg !10353
  %17 = load i32, i32* %arrayidx15, align 4, !dbg !10353
  %18 = load i32*, i32** %r_totunsel.addr, align 8, !dbg !10354
  store i32 %17, i32* %18, align 4, !dbg !10355
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !10356
  ret void, !dbg !10357
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !10358 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !10361, metadata !DIExpression()), !dbg !10362
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !10363, metadata !DIExpression()), !dbg !10364
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !10365
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !10366
  %1 = load i8, i8* %hflag1, align 1, !dbg !10366
  %conv = zext i8 %1 to i32, !dbg !10365
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !10367
  %conv2 = zext i8 %2 to i32, !dbg !10367
  %and = and i32 %conv, %conv2, !dbg !10368
  %cmp = icmp ne i32 %and, 0, !dbg !10369
  %conv3 = zext i1 %cmp to i32, !dbg !10369
  %conv4 = trunc i32 %conv3 to i8, !dbg !10370
  ret i8 %conv4, !dbg !10371
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !10372 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10375, metadata !DIExpression()), !dbg !10376
  %0 = load float*, float** %a.addr, align 8, !dbg !10377
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10377
  %1 = load float, float* %arrayidx, align 4, !dbg !10377
  %2 = load float*, float** %b.addr, align 8, !dbg !10378
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10378
  %3 = load float, float* %arrayidx1, align 4, !dbg !10378
  %mul = fmul float %1, %3, !dbg !10379
  %4 = load float*, float** %a.addr, align 8, !dbg !10380
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10380
  %5 = load float, float* %arrayidx2, align 4, !dbg !10380
  %6 = load float*, float** %b.addr, align 8, !dbg !10381
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10381
  %7 = load float, float* %arrayidx3, align 4, !dbg !10381
  %mul4 = fmul float %5, %7, !dbg !10382
  %add = fadd float %mul, %mul4, !dbg !10383
  ret float %add, !dbg !10384
}

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @linked_limit_default(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10385 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10392
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10394
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10394
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0)), !dbg !10395
  %tobool = icmp ne i8 %call, 0, !dbg !10395
  br i1 %tobool, label %if.end7, label %if.then, !dbg !10396

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10397, metadata !DIExpression()), !dbg !10399
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10400
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !10401
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !10399
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10402, metadata !DIExpression()), !dbg !10403
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10404
  %call2 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %3), !dbg !10405
  store %struct.BMEditMesh* %call2, %struct.BMEditMesh** %em, align 8, !dbg !10403
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10406
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 12, !dbg !10408
  %5 = load i16, i16* %selectmode, align 4, !dbg !10408
  %conv = sext i16 %5 to i32, !dbg !10406
  %cmp = icmp eq i32 %conv, 4, !dbg !10409
  br i1 %cmp, label %if.then4, label %if.else, !dbg !10410

if.then4:                                         ; preds = %if.then
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10411
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !10412
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !10412
  call void @RNA_boolean_set(%struct.PointerRNA* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 1), !dbg !10413
  br label %if.end, !dbg !10413

if.else:                                          ; preds = %if.then
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10414
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !10415
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !10415
  call void @RNA_boolean_set(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i32 0), !dbg !10416
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end7, !dbg !10417

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !10418
}

declare dso_local void @BM_mesh_elem_toolflags_ensure(%struct.BMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_bmo_elem_flag_set(%struct.BMesh* %bm, %struct.BMFlagLayer* %oflags, i16 signext %oflag, i32 %val) #0 !dbg !10419 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %oflags.addr = alloca %struct.BMFlagLayer*, align 8
  %oflag.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !10425, metadata !DIExpression()), !dbg !10426
  store %struct.BMFlagLayer* %oflags, %struct.BMFlagLayer** %oflags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFlagLayer** %oflags.addr, metadata !10427, metadata !DIExpression()), !dbg !10428
  store i16 %oflag, i16* %oflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %oflag.addr, metadata !10429, metadata !DIExpression()), !dbg !10430
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10431, metadata !DIExpression()), !dbg !10432
  %0 = load i32, i32* %val.addr, align 4, !dbg !10433
  %tobool = icmp ne i32 %0, 0, !dbg !10433
  br i1 %tobool, label %if.then, label %if.else, !dbg !10435

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %oflag.addr, align 2, !dbg !10436
  %conv = sext i16 %1 to i32, !dbg !10436
  %2 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags.addr, align 8, !dbg !10437
  %3 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10438
  %stackdepth = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 22, !dbg !10439
  %4 = load i32, i32* %stackdepth, align 8, !dbg !10439
  %sub = sub nsw i32 %4, 1, !dbg !10440
  %idxprom = sext i32 %sub to i64, !dbg !10437
  %arrayidx = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %2, i64 %idxprom, !dbg !10437
  %f = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %arrayidx, i32 0, i32 0, !dbg !10441
  %5 = load i16, i16* %f, align 2, !dbg !10442
  %conv1 = sext i16 %5 to i32, !dbg !10442
  %or = or i32 %conv1, %conv, !dbg !10442
  %conv2 = trunc i32 %or to i16, !dbg !10442
  store i16 %conv2, i16* %f, align 2, !dbg !10442
  br label %if.end, !dbg !10437

if.else:                                          ; preds = %entry
  %6 = load i16, i16* %oflag.addr, align 2, !dbg !10443
  %conv3 = sext i16 %6 to i32, !dbg !10443
  %neg = xor i32 %conv3, -1, !dbg !10444
  %conv4 = trunc i32 %neg to i16, !dbg !10445
  %conv5 = sext i16 %conv4 to i32, !dbg !10445
  %7 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags.addr, align 8, !dbg !10446
  %8 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10447
  %stackdepth6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 22, !dbg !10448
  %9 = load i32, i32* %stackdepth6, align 8, !dbg !10448
  %sub7 = sub nsw i32 %9, 1, !dbg !10449
  %idxprom8 = sext i32 %sub7 to i64, !dbg !10446
  %arrayidx9 = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %7, i64 %idxprom8, !dbg !10446
  %f10 = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %arrayidx9, i32 0, i32 0, !dbg !10450
  %10 = load i16, i16* %f10, align 2, !dbg !10451
  %conv11 = sext i16 %10 to i32, !dbg !10451
  %and = and i32 %conv11, %conv5, !dbg !10451
  %conv12 = trunc i32 %and to i16, !dbg !10451
  store i16 %conv12, i16* %f10, align 2, !dbg !10451
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10452
}

declare dso_local void @BM_mesh_elem_toolflags_clear(%struct.BMesh*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_wire(%struct.BMEdge* %e) #0 !dbg !10453 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10456
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !10457
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10457
  %cmp = icmp eq %struct.BMLoop* %1, null, !dbg !10458
  %conv = zext i1 %cmp to i32, !dbg !10458
  %conv1 = trunc i32 %conv to i8, !dbg !10459
  ret i8 %conv1, !dbg !10460
}

declare dso_local void @ED_mesh_report_mirror_ex(%struct.wmOperator*, i32, i32, i8 zeroext) #2

declare dso_local void @EDBM_select_more(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_select_less(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @mod_i(i32 %i, i32 %n) #0 !dbg !10461 {
entry:
  %i.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  %0 = load i32, i32* %i.addr, align 4, !dbg !10468
  %1 = load i32, i32* %n.addr, align 4, !dbg !10469
  %rem = srem i32 %0, %1, !dbg !10470
  %2 = load i32, i32* %n.addr, align 4, !dbg !10471
  %add = add nsw i32 %rem, %2, !dbg !10472
  %3 = load i32, i32* %n.addr, align 4, !dbg !10473
  %rem1 = srem i32 %add, %3, !dbg !10474
  ret i32 %rem1, !dbg !10475
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @edbm_deselect_nth(%struct.BMEditMesh* %em, i32 %nth, i32 %offset) #0 !dbg !10476 {
entry:
  %retval = alloca i8, align 1
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %nth.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %v = alloca %struct.BMVert*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store i32 %nth, i32* %nth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nth.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !10485, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !10487, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !10489, metadata !DIExpression()), !dbg !10490
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10491
  call void @deselect_nth_active(%struct.BMEditMesh* %0, %struct.BMVert** %v, %struct.BMEdge** %e, %struct.BMFace** %f), !dbg !10492
  %1 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10493
  %tobool = icmp ne %struct.BMVert* %1, null, !dbg !10493
  br i1 %tobool, label %if.then, label %if.else, !dbg !10495

if.then:                                          ; preds = %entry
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10496
  %3 = load i32, i32* %nth.addr, align 4, !dbg !10498
  %4 = load i32, i32* %offset.addr, align 4, !dbg !10499
  %5 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10500
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %5, i32 0, i32 0, !dbg !10501
  call void @walker_deselect_nth(%struct.BMEditMesh* %2, i32 %3, i32 %4, %struct.BMHeader* %head), !dbg !10502
  store i8 1, i8* %retval, align 1, !dbg !10503
  br label %return, !dbg !10503

if.else:                                          ; preds = %entry
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10504
  %tobool1 = icmp ne %struct.BMEdge* %6, null, !dbg !10504
  br i1 %tobool1, label %if.then2, label %if.else4, !dbg !10506

if.then2:                                         ; preds = %if.else
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10507
  %8 = load i32, i32* %nth.addr, align 4, !dbg !10509
  %9 = load i32, i32* %offset.addr, align 4, !dbg !10510
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10511
  %head3 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %10, i32 0, i32 0, !dbg !10512
  call void @walker_deselect_nth(%struct.BMEditMesh* %7, i32 %8, i32 %9, %struct.BMHeader* %head3), !dbg !10513
  store i8 1, i8* %retval, align 1, !dbg !10514
  br label %return, !dbg !10514

if.else4:                                         ; preds = %if.else
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10515
  %tobool5 = icmp ne %struct.BMFace* %11, null, !dbg !10515
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10517

if.then6:                                         ; preds = %if.else4
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10518
  %13 = load i32, i32* %nth.addr, align 4, !dbg !10520
  %14 = load i32, i32* %offset.addr, align 4, !dbg !10521
  %15 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10522
  %head7 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %15, i32 0, i32 0, !dbg !10523
  call void @walker_deselect_nth(%struct.BMEditMesh* %12, i32 %13, i32 %14, %struct.BMHeader* %head7), !dbg !10524
  store i8 1, i8* %retval, align 1, !dbg !10525
  br label %return, !dbg !10525

if.end:                                           ; preds = %if.else4
  br label %if.end8

if.end8:                                          ; preds = %if.end
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  store i8 0, i8* %retval, align 1, !dbg !10526
  br label %return, !dbg !10526

return:                                           ; preds = %if.end9, %if.then6, %if.then2, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !10527
  ret i8 %16, !dbg !10527
}

; Function Attrs: noinline nounwind uwtable
define internal void @deselect_nth_active(%struct.BMEditMesh* %em, %struct.BMVert** %r_eve, %struct.BMEdge** %r_eed, %struct.BMFace** %r_efa) #0 !dbg !10528 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %r_eve.addr = alloca %struct.BMVert**, align 8
  %r_eed.addr = alloca %struct.BMEdge**, align 8
  %r_efa.addr = alloca %struct.BMFace**, align 8
  %iter = alloca %struct.BMIter, align 8
  %ele = alloca %struct.BMElem*, align 8
  %v = alloca %struct.BMVert*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10531, metadata !DIExpression()), !dbg !10532
  store %struct.BMVert** %r_eve, %struct.BMVert*** %r_eve.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %r_eve.addr, metadata !10533, metadata !DIExpression()), !dbg !10534
  store %struct.BMEdge** %r_eed, %struct.BMEdge*** %r_eed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge*** %r_eed.addr, metadata !10535, metadata !DIExpression()), !dbg !10536
  store %struct.BMFace** %r_efa, %struct.BMFace*** %r_efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %r_efa.addr, metadata !10537, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10539, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele, metadata !10541, metadata !DIExpression()), !dbg !10542
  %0 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !10543
  store %struct.BMVert* null, %struct.BMVert** %0, align 8, !dbg !10544
  %1 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !10545
  store %struct.BMEdge* null, %struct.BMEdge** %1, align 8, !dbg !10546
  %2 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !10547
  store %struct.BMFace* null, %struct.BMFace** %2, align 8, !dbg !10548
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10549
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %3), !dbg !10550
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10551
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !10552
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10552
  %call = call %struct.BMElem* @BM_mesh_active_elem_get(%struct.BMesh* %5), !dbg !10553
  store %struct.BMElem* %call, %struct.BMElem** %ele, align 8, !dbg !10554
  %6 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10555
  %tobool = icmp ne %struct.BMElem* %6, null, !dbg !10555
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10557

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10558
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %7, i32 0, i32 0, !dbg !10558
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10558
  %conv = zext i8 %call1 to i32, !dbg !10558
  %tobool2 = icmp ne i32 %conv, 0, !dbg !10558
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10559

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10560
  %head3 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %8, i32 0, i32 0, !dbg !10562
  %htype = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head3, i32 0, i32 2, !dbg !10563
  %9 = load i8, i8* %htype, align 4, !dbg !10563
  %conv4 = zext i8 %9 to i32, !dbg !10560
  switch i32 %conv4, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
    i32 8, label %sw.bb6
  ], !dbg !10564

sw.bb:                                            ; preds = %if.then
  %10 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10565
  %11 = bitcast %struct.BMElem* %10 to %struct.BMVert*, !dbg !10567
  %12 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !10568
  store %struct.BMVert* %11, %struct.BMVert** %12, align 8, !dbg !10569
  br label %if.end55, !dbg !10570

sw.bb5:                                           ; preds = %if.then
  %13 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10571
  %14 = bitcast %struct.BMElem* %13 to %struct.BMEdge*, !dbg !10572
  %15 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !10573
  store %struct.BMEdge* %14, %struct.BMEdge** %15, align 8, !dbg !10574
  br label %if.end55, !dbg !10575

sw.bb6:                                           ; preds = %if.then
  %16 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10576
  %17 = bitcast %struct.BMElem* %16 to %struct.BMFace*, !dbg !10577
  %18 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !10578
  store %struct.BMFace* %17, %struct.BMFace** %18, align 8, !dbg !10579
  br label %if.end55, !dbg !10580

sw.epilog:                                        ; preds = %if.then
  br label %if.end, !dbg !10581

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %entry
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10582
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 12, !dbg !10584
  %20 = load i16, i16* %selectmode, align 4, !dbg !10584
  %conv7 = sext i16 %20 to i32, !dbg !10582
  %and = and i32 %conv7, 1, !dbg !10585
  %tobool8 = icmp ne i32 %and, 0, !dbg !10585
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10586

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !10587, metadata !DIExpression()), !dbg !10589
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10590
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !10590
  %22 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !10590
  %call11 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 1, i8* null), !dbg !10590
  %23 = bitcast i8* %call11 to %struct.BMVert*, !dbg !10590
  store %struct.BMVert* %23, %struct.BMVert** %v, align 8, !dbg !10590
  br label %for.cond, !dbg !10590

for.cond:                                         ; preds = %for.inc, %if.then9
  %24 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10592
  %tobool12 = icmp ne %struct.BMVert* %24, null, !dbg !10590
  br i1 %tobool12, label %for.body, label %for.end, !dbg !10590

for.body:                                         ; preds = %for.cond
  %25 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10594
  %head13 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 0, !dbg !10594
  %call14 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head13, i8 zeroext 1), !dbg !10594
  %tobool15 = icmp ne i8 %call14, 0, !dbg !10594
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10597

if.then16:                                        ; preds = %for.body
  %26 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10598
  %27 = load %struct.BMVert**, %struct.BMVert*** %r_eve.addr, align 8, !dbg !10600
  store %struct.BMVert* %26, %struct.BMVert** %27, align 8, !dbg !10601
  br label %if.end55, !dbg !10602

if.end17:                                         ; preds = %for.body
  br label %for.inc, !dbg !10603

for.inc:                                          ; preds = %if.end17
  %call18 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10592
  %28 = bitcast i8* %call18 to %struct.BMVert*, !dbg !10592
  store %struct.BMVert* %28, %struct.BMVert** %v, align 8, !dbg !10592
  br label %for.cond, !dbg !10592, !llvm.loop !10604

for.end:                                          ; preds = %for.cond
  br label %if.end55, !dbg !10606

if.else:                                          ; preds = %if.end
  %29 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10607
  %selectmode19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %29, i32 0, i32 12, !dbg !10609
  %30 = load i16, i16* %selectmode19, align 4, !dbg !10609
  %conv20 = sext i16 %30 to i32, !dbg !10607
  %and21 = and i32 %conv20, 2, !dbg !10610
  %tobool22 = icmp ne i32 %and21, 0, !dbg !10610
  br i1 %tobool22, label %if.then23, label %if.else37, !dbg !10611

if.then23:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !10612, metadata !DIExpression()), !dbg !10614
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10615
  %bm24 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %31, i32 0, i32 0, !dbg !10615
  %32 = load %struct.BMesh*, %struct.BMesh** %bm24, align 8, !dbg !10615
  %call25 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %32, i8 zeroext 2, i8* null), !dbg !10615
  %33 = bitcast i8* %call25 to %struct.BMEdge*, !dbg !10615
  store %struct.BMEdge* %33, %struct.BMEdge** %e, align 8, !dbg !10615
  br label %for.cond26, !dbg !10615

for.cond26:                                       ; preds = %for.inc34, %if.then23
  %34 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10617
  %tobool27 = icmp ne %struct.BMEdge* %34, null, !dbg !10615
  br i1 %tobool27, label %for.body28, label %for.end36, !dbg !10615

for.body28:                                       ; preds = %for.cond26
  %35 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10619
  %head29 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %35, i32 0, i32 0, !dbg !10619
  %call30 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head29, i8 zeroext 1), !dbg !10619
  %tobool31 = icmp ne i8 %call30, 0, !dbg !10619
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !10622

if.then32:                                        ; preds = %for.body28
  %36 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10623
  %37 = load %struct.BMEdge**, %struct.BMEdge*** %r_eed.addr, align 8, !dbg !10625
  store %struct.BMEdge* %36, %struct.BMEdge** %37, align 8, !dbg !10626
  br label %if.end55, !dbg !10627

if.end33:                                         ; preds = %for.body28
  br label %for.inc34, !dbg !10628

for.inc34:                                        ; preds = %if.end33
  %call35 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10617
  %38 = bitcast i8* %call35 to %struct.BMEdge*, !dbg !10617
  store %struct.BMEdge* %38, %struct.BMEdge** %e, align 8, !dbg !10617
  br label %for.cond26, !dbg !10617, !llvm.loop !10629

for.end36:                                        ; preds = %for.cond26
  br label %if.end54, !dbg !10631

if.else37:                                        ; preds = %if.else
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10632
  %selectmode38 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %39, i32 0, i32 12, !dbg !10634
  %40 = load i16, i16* %selectmode38, align 4, !dbg !10634
  %conv39 = sext i16 %40 to i32, !dbg !10632
  %and40 = and i32 %conv39, 4, !dbg !10635
  %tobool41 = icmp ne i32 %and40, 0, !dbg !10635
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !10636

if.then42:                                        ; preds = %if.else37
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !10637, metadata !DIExpression()), !dbg !10639
  %41 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10640
  %bm43 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %41, i32 0, i32 0, !dbg !10641
  %42 = load %struct.BMesh*, %struct.BMesh** %bm43, align 8, !dbg !10641
  %call44 = call %struct.BMFace* @BM_mesh_active_face_get(%struct.BMesh* %42, i8 zeroext 1, i8 zeroext 0), !dbg !10642
  store %struct.BMFace* %call44, %struct.BMFace** %f, align 8, !dbg !10639
  %43 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10643
  %tobool45 = icmp ne %struct.BMFace* %43, null, !dbg !10643
  br i1 %tobool45, label %land.lhs.true46, label %if.end52, !dbg !10645

land.lhs.true46:                                  ; preds = %if.then42
  %44 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10646
  %head47 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %44, i32 0, i32 0, !dbg !10646
  %call48 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head47, i8 zeroext 1), !dbg !10646
  %conv49 = zext i8 %call48 to i32, !dbg !10646
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !10646
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !10647

if.then51:                                        ; preds = %land.lhs.true46
  %45 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10648
  %46 = load %struct.BMFace**, %struct.BMFace*** %r_efa.addr, align 8, !dbg !10650
  store %struct.BMFace* %45, %struct.BMFace** %46, align 8, !dbg !10651
  br label %if.end55, !dbg !10652

if.end52:                                         ; preds = %land.lhs.true46, %if.then42
  br label %if.end53, !dbg !10653

if.end53:                                         ; preds = %if.end52, %if.else37
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %for.end36
  br label %if.end55

if.end55:                                         ; preds = %sw.bb, %sw.bb5, %sw.bb6, %if.then16, %if.then32, %if.then51, %if.end54, %for.end
  ret void, !dbg !10654
}

; Function Attrs: noinline nounwind uwtable
define internal void @walker_deselect_nth(%struct.BMEditMesh* %em, i32 %nth, i32 %offset, %struct.BMHeader* %h_act) #0 !dbg !10655 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %nth.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %h_act.addr = alloca %struct.BMHeader*, align 8
  %ele = alloca %struct.BMElem*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %walker = alloca %struct.BMWalker, align 8
  %iter = alloca %struct.BMIter, align 8
  %walktype = alloca i32, align 4
  %itertype = alloca i32, align 4
  %flushtype = alloca i32, align 4
  %mask_vert = alloca i16, align 2
  %mask_edge = alloca i16, align 2
  %mask_face = alloca i16, align 2
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10658, metadata !DIExpression()), !dbg !10659
  store i32 %nth, i32* %nth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nth.addr, metadata !10660, metadata !DIExpression()), !dbg !10661
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  store %struct.BMHeader* %h_act, %struct.BMHeader** %h_act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %h_act.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele, metadata !10666, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !10668, metadata !DIExpression()), !dbg !10669
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10670
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !10671
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !10671
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !10669
  call void @llvm.dbg.declare(metadata %struct.BMWalker* %walker, metadata !10672, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10674, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.declare(metadata i32* %walktype, metadata !10676, metadata !DIExpression()), !dbg !10677
  store i32 0, i32* %walktype, align 4, !dbg !10677
  call void @llvm.dbg.declare(metadata i32* %itertype, metadata !10678, metadata !DIExpression()), !dbg !10679
  store i32 0, i32* %itertype, align 4, !dbg !10679
  call void @llvm.dbg.declare(metadata i32* %flushtype, metadata !10680, metadata !DIExpression()), !dbg !10681
  store i32 0, i32* %flushtype, align 4, !dbg !10681
  call void @llvm.dbg.declare(metadata i16* %mask_vert, metadata !10682, metadata !DIExpression()), !dbg !10683
  store i16 0, i16* %mask_vert, align 2, !dbg !10683
  call void @llvm.dbg.declare(metadata i16* %mask_edge, metadata !10684, metadata !DIExpression()), !dbg !10685
  store i16 0, i16* %mask_edge, align 2, !dbg !10685
  call void @llvm.dbg.declare(metadata i16* %mask_face, metadata !10686, metadata !DIExpression()), !dbg !10687
  store i16 0, i16* %mask_face, align 2, !dbg !10687
  %2 = load %struct.BMHeader*, %struct.BMHeader** %h_act.addr, align 8, !dbg !10688
  %cmp = icmp eq %struct.BMHeader* %2, null, !dbg !10690
  br i1 %cmp, label %if.then, label %if.end, !dbg !10691

if.then:                                          ; preds = %entry
  br label %return, !dbg !10692

if.end:                                           ; preds = %entry
  %3 = load %struct.BMHeader*, %struct.BMHeader** %h_act.addr, align 8, !dbg !10694
  %htype = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %3, i32 0, i32 2, !dbg !10695
  %4 = load i8, i8* %htype, align 4, !dbg !10695
  %conv = zext i8 %4 to i32, !dbg !10694
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 8, label %sw.bb4
  ], !dbg !10696

sw.bb:                                            ; preds = %if.end
  store i32 1, i32* %itertype, align 4, !dbg !10697
  store i32 9, i32* %walktype, align 4, !dbg !10699
  store i32 1, i32* %flushtype, align 4, !dbg !10700
  store i16 1, i16* %mask_vert, align 2, !dbg !10701
  br label %sw.epilog, !dbg !10702

sw.bb2:                                           ; preds = %if.end
  store i32 2, i32* %itertype, align 4, !dbg !10703
  %5 = load %struct.BMHeader*, %struct.BMHeader** %h_act.addr, align 8, !dbg !10704
  %6 = bitcast %struct.BMHeader* %5 to %struct.BMEdge*, !dbg !10705
  %call = call zeroext i8 @bm_edge_is_select_isolated(%struct.BMEdge* %6), !dbg !10706
  %conv3 = zext i8 %call to i32, !dbg !10706
  %tobool = icmp ne i32 %conv3, 0, !dbg !10706
  %7 = zext i1 %tobool to i64, !dbg !10706
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !10706
  store i32 %cond, i32* %walktype, align 4, !dbg !10707
  store i32 2, i32* %flushtype, align 4, !dbg !10708
  store i16 1, i16* %mask_edge, align 2, !dbg !10709
  br label %sw.epilog, !dbg !10710

sw.bb4:                                           ; preds = %if.end
  store i32 3, i32* %itertype, align 4, !dbg !10711
  store i32 8, i32* %walktype, align 4, !dbg !10712
  store i32 4, i32* %flushtype, align 4, !dbg !10713
  store i16 1, i16* %mask_face, align 2, !dbg !10714
  br label %sw.epilog, !dbg !10715

sw.epilog:                                        ; preds = %if.end, %sw.bb4, %sw.bb2, %sw.bb
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10716
  call void @BM_mesh_elem_toolflags_ensure(%struct.BMesh* %8), !dbg !10717
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10718
  call void @BMO_push(%struct.BMesh* %9, %struct.BMOperator* null), !dbg !10719
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10720
  %11 = load i32, i32* %itertype, align 4, !dbg !10720
  %conv5 = trunc i32 %11 to i8, !dbg !10720
  %call6 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext %conv5, i8* null), !dbg !10720
  %12 = bitcast i8* %call6 to %struct.BMElem*, !dbg !10720
  store %struct.BMElem* %12, %struct.BMElem** %ele, align 8, !dbg !10720
  br label %for.cond, !dbg !10720

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %13 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10722
  %tobool7 = icmp ne %struct.BMElem* %13, null, !dbg !10720
  br i1 %tobool7, label %for.body, label %for.end, !dbg !10720

for.body:                                         ; preds = %for.cond
  %14 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10724
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %14, i32 0, i32 0, !dbg !10724
  %call8 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10724
  %tobool9 = icmp ne i8 %call8, 0, !dbg !10724
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10727

if.then10:                                        ; preds = %for.body
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10728
  %16 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10728
  %17 = bitcast %struct.BMElem* %16 to %struct.BMElemF*, !dbg !10728
  %oflags = getelementptr inbounds %struct.BMElemF, %struct.BMElemF* %17, i32 0, i32 1, !dbg !10728
  %18 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags, align 8, !dbg !10728
  call void @_bmo_elem_flag_enable(%struct.BMesh* %15, %struct.BMFlagLayer* %18, i16 signext 1), !dbg !10728
  br label %if.end11, !dbg !10730

if.end11:                                         ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !10731

for.inc:                                          ; preds = %if.end11
  %call12 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10722
  %19 = bitcast i8* %call12 to %struct.BMElem*, !dbg !10722
  store %struct.BMElem* %19, %struct.BMElem** %ele, align 8, !dbg !10722
  br label %for.cond, !dbg !10722, !llvm.loop !10732

for.end:                                          ; preds = %for.cond
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10734
  %21 = load i32, i32* %walktype, align 4, !dbg !10735
  %22 = load i16, i16* %mask_vert, align 2, !dbg !10736
  %23 = load i16, i16* %mask_edge, align 2, !dbg !10737
  %24 = load i16, i16* %mask_face, align 2, !dbg !10738
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %20, i32 %21, i16 signext %22, i16 signext %23, i16 signext %24, i32 0, i32 0), !dbg !10739
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10740
  %26 = load i32, i32* %itertype, align 4, !dbg !10740
  %conv13 = trunc i32 %26 to i8, !dbg !10740
  %call14 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %25, i8 zeroext %conv13, i8* null), !dbg !10740
  %27 = bitcast i8* %call14 to %struct.BMElem*, !dbg !10740
  store %struct.BMElem* %27, %struct.BMElem** %ele, align 8, !dbg !10740
  br label %for.cond15, !dbg !10740

for.cond15:                                       ; preds = %for.inc19, %for.end
  %28 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10742
  %tobool16 = icmp ne %struct.BMElem* %28, null, !dbg !10740
  br i1 %tobool16, label %for.body17, label %for.end21, !dbg !10740

for.body17:                                       ; preds = %for.cond15
  %29 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10744
  %head18 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %29, i32 0, i32 0, !dbg !10744
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head18, i8 zeroext 16), !dbg !10744
  br label %for.inc19, !dbg !10746

for.inc19:                                        ; preds = %for.body17
  %call20 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10742
  %30 = bitcast i8* %call20 to %struct.BMElem*, !dbg !10742
  store %struct.BMElem* %30, %struct.BMElem** %ele, align 8, !dbg !10742
  br label %for.cond15, !dbg !10742, !llvm.loop !10747

for.end21:                                        ; preds = %for.cond15
  %31 = load %struct.BMHeader*, %struct.BMHeader** %h_act.addr, align 8, !dbg !10749
  %32 = bitcast %struct.BMHeader* %31 to i8*, !dbg !10749
  %call22 = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %32), !dbg !10751
  %33 = bitcast i8* %call22 to %struct.BMElem*, !dbg !10751
  store %struct.BMElem* %33, %struct.BMElem** %ele, align 8, !dbg !10752
  br label %for.cond23, !dbg !10753

for.cond23:                                       ; preds = %for.inc37, %for.end21
  %34 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10754
  %cmp24 = icmp ne %struct.BMElem* %34, null, !dbg !10756
  br i1 %cmp24, label %for.body26, label %for.end39, !dbg !10757

for.body26:                                       ; preds = %for.cond23
  %35 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10758
  %head27 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %35, i32 0, i32 0, !dbg !10758
  %call28 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head27, i8 zeroext 16), !dbg !10758
  %tobool29 = icmp ne i8 %call28, 0, !dbg !10758
  br i1 %tobool29, label %if.end36, label %if.then30, !dbg !10761

if.then30:                                        ; preds = %for.body26
  %36 = load i32, i32* %offset.addr, align 4, !dbg !10762
  %call31 = call i32 @BMW_current_depth(%struct.BMWalker* %walker), !dbg !10765
  %add = add nsw i32 %36, %call31, !dbg !10766
  %37 = load i32, i32* %nth.addr, align 4, !dbg !10767
  %rem = srem i32 %add, %37, !dbg !10768
  %tobool32 = icmp ne i32 %rem, 0, !dbg !10768
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !10769

if.then33:                                        ; preds = %if.then30
  %38 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10770
  %39 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10772
  call void @BM_elem_select_set(%struct.BMesh* %38, %struct.BMElem* %39, i8 zeroext 0), !dbg !10773
  br label %if.end34, !dbg !10774

if.end34:                                         ; preds = %if.then33, %if.then30
  %40 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !10775
  %head35 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %40, i32 0, i32 0, !dbg !10775
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head35, i8 zeroext 16), !dbg !10775
  br label %if.end36, !dbg !10776

if.end36:                                         ; preds = %if.end34, %for.body26
  br label %for.inc37, !dbg !10777

for.inc37:                                        ; preds = %if.end36
  %call38 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !10778
  %41 = bitcast i8* %call38 to %struct.BMElem*, !dbg !10778
  store %struct.BMElem* %41, %struct.BMElem** %ele, align 8, !dbg !10779
  br label %for.cond23, !dbg !10780, !llvm.loop !10781

for.end39:                                        ; preds = %for.cond23
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !10783
  %42 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10784
  call void @BMO_pop(%struct.BMesh* %42), !dbg !10785
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10786
  %44 = load i32, i32* %flushtype, align 4, !dbg !10787
  %conv40 = trunc i32 %44 to i16, !dbg !10787
  call void @EDBM_selectmode_flush_ex(%struct.BMEditMesh* %43, i16 signext %conv40), !dbg !10788
  br label %return, !dbg !10789

return:                                           ; preds = %for.end39, %if.then
  ret void, !dbg !10789
}

declare dso_local %struct.BMElem* @BM_mesh_active_elem_get(%struct.BMesh*) #2

declare dso_local %struct.BMFace* @BM_mesh_active_face_get(%struct.BMesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bm_edge_is_select_isolated(%struct.BMEdge* %e) #0 !dbg !10790 {
entry:
  %retval = alloca i8, align 1
  %e.addr = alloca %struct.BMEdge*, align 8
  %viter = alloca %struct.BMIter, align 8
  %v = alloca %struct.BMVert*, align 8
  %eiter = alloca %struct.BMIter, align 8
  %e_other = alloca %struct.BMEdge*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !10793, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.declare(metadata %struct.BMIter* %viter, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !10797, metadata !DIExpression()), !dbg !10798
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10799
  %1 = bitcast %struct.BMEdge* %0 to i8*, !dbg !10799
  %call = call i8* @BM_iter_new(%struct.BMIter* %viter, %struct.BMesh* null, i8 zeroext 7, i8* %1), !dbg !10799
  %2 = bitcast i8* %call to %struct.BMVert*, !dbg !10799
  store %struct.BMVert* %2, %struct.BMVert** %v, align 8, !dbg !10799
  br label %for.cond, !dbg !10799

for.cond:                                         ; preds = %for.inc8, %entry
  %3 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10801
  %tobool = icmp ne %struct.BMVert* %3, null, !dbg !10799
  br i1 %tobool, label %for.body, label %for.end10, !dbg !10799

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !10803, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_other, metadata !10806, metadata !DIExpression()), !dbg !10807
  %4 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10808
  %5 = bitcast %struct.BMVert* %4 to i8*, !dbg !10808
  %call1 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %5), !dbg !10808
  %6 = bitcast i8* %call1 to %struct.BMEdge*, !dbg !10808
  store %struct.BMEdge* %6, %struct.BMEdge** %e_other, align 8, !dbg !10808
  br label %for.cond2, !dbg !10808

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e_other, align 8, !dbg !10810
  %tobool3 = icmp ne %struct.BMEdge* %7, null, !dbg !10808
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !10808

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e_other, align 8, !dbg !10812
  %9 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10815
  %cmp = icmp ne %struct.BMEdge* %8, %9, !dbg !10816
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10817

land.lhs.true:                                    ; preds = %for.body4
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e_other, align 8, !dbg !10818
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %10, i32 0, i32 0, !dbg !10818
  %call5 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10818
  %conv = zext i8 %call5 to i32, !dbg !10818
  %tobool6 = icmp ne i32 %conv, 0, !dbg !10818
  br i1 %tobool6, label %if.then, label %if.end, !dbg !10819

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !10820
  br label %return, !dbg !10820

if.end:                                           ; preds = %land.lhs.true, %for.body4
  br label %for.inc, !dbg !10822

for.inc:                                          ; preds = %if.end
  %call7 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !10810
  %11 = bitcast i8* %call7 to %struct.BMEdge*, !dbg !10810
  store %struct.BMEdge* %11, %struct.BMEdge** %e_other, align 8, !dbg !10810
  br label %for.cond2, !dbg !10810, !llvm.loop !10823

for.end:                                          ; preds = %for.cond2
  br label %for.inc8, !dbg !10825

for.inc8:                                         ; preds = %for.end
  %call9 = call i8* @BM_iter_step(%struct.BMIter* %viter), !dbg !10801
  %12 = bitcast i8* %call9 to %struct.BMVert*, !dbg !10801
  store %struct.BMVert* %12, %struct.BMVert** %v, align 8, !dbg !10801
  br label %for.cond, !dbg !10801, !llvm.loop !10826

for.end10:                                        ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !10828
  br label %return, !dbg !10828

return:                                           ; preds = %for.end10, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !10829
  ret i8 %13, !dbg !10829
}

declare dso_local void @BMO_push(%struct.BMesh*, %struct.BMOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_bmo_elem_flag_enable(%struct.BMesh* %bm, %struct.BMFlagLayer* %oflags, i16 signext %oflag) #0 !dbg !10830 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %oflags.addr = alloca %struct.BMFlagLayer*, align 8
  %oflag.addr = alloca i16, align 2
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  store %struct.BMFlagLayer* %oflags, %struct.BMFlagLayer** %oflags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFlagLayer** %oflags.addr, metadata !10835, metadata !DIExpression()), !dbg !10836
  store i16 %oflag, i16* %oflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %oflag.addr, metadata !10837, metadata !DIExpression()), !dbg !10838
  %0 = load i16, i16* %oflag.addr, align 2, !dbg !10839
  %conv = sext i16 %0 to i32, !dbg !10839
  %1 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags.addr, align 8, !dbg !10840
  %2 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10841
  %stackdepth = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 22, !dbg !10842
  %3 = load i32, i32* %stackdepth, align 8, !dbg !10842
  %sub = sub nsw i32 %3, 1, !dbg !10843
  %idxprom = sext i32 %sub to i64, !dbg !10840
  %arrayidx = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %1, i64 %idxprom, !dbg !10840
  %f = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %arrayidx, i32 0, i32 0, !dbg !10844
  %4 = load i16, i16* %f, align 2, !dbg !10845
  %conv1 = sext i16 %4 to i32, !dbg !10845
  %or = or i32 %conv1, %conv, !dbg !10845
  %conv2 = trunc i32 %or to i16, !dbg !10845
  store i16 %conv2, i16* %f, align 2, !dbg !10845
  ret void, !dbg !10846
}

declare dso_local i32 @BMW_current_depth(%struct.BMWalker*) #2

declare dso_local void @BMO_pop(%struct.BMesh*) #2

declare dso_local void @EDBM_selectmode_flush_ex(%struct.BMEditMesh*, i16 signext) #2

declare dso_local zeroext i8 @BM_edge_loop_pair(%struct.BMEdge*, %struct.BMLoop**, %struct.BMLoop**) #2

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

declare dso_local void @BM_mesh_elem_hflag_disable_all(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local %struct.BLI_mempool* @BLI_mempool_create(i32, i32, i32, i32) #2

declare dso_local void @BLI_linklist_prepend_pool(%struct.LinkNode**, i8*, %struct.BLI_mempool*) #2

declare dso_local i8* @BLI_linklist_pop_pool(%struct.LinkNode**, %struct.BLI_mempool*) #2

declare dso_local void @BLI_mempool_destroy(%struct.BLI_mempool*) #2

declare dso_local zeroext i8 @BM_vert_is_manifold(%struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_manifold(%struct.BMEdge* %e) #0 !dbg !10847 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10850, metadata !DIExpression()), !dbg !10851
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10852
  %l1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !10853
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !10853
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !10851
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10854
  %tobool = icmp ne %struct.BMLoop* %2, null, !dbg !10854
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !10855

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10856
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %3, i32 0, i32 4, !dbg !10857
  %4 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !10857
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10858
  %cmp = icmp ne %struct.BMLoop* %4, %5, !dbg !10859
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10860

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10861
  %radial_next2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %6, i32 0, i32 4, !dbg !10862
  %7 = load %struct.BMLoop*, %struct.BMLoop** %radial_next2, align 8, !dbg !10862
  %radial_next3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 4, !dbg !10863
  %8 = load %struct.BMLoop*, %struct.BMLoop** %radial_next3, align 8, !dbg !10863
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10864
  %cmp4 = icmp eq %struct.BMLoop* %8, %9, !dbg !10865
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !10866
  %land.ext = zext i1 %10 to i32, !dbg !10860
  %conv = trunc i32 %land.ext to i8, !dbg !10867
  ret i8 %conv, !dbg !10868
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_contiguous(%struct.BMEdge* %e) #0 !dbg !10869 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %l_other = alloca %struct.BMLoop*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10872, metadata !DIExpression()), !dbg !10873
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10874
  %l1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !10875
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !10875
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !10873
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_other, metadata !10876, metadata !DIExpression()), !dbg !10877
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10878
  %tobool = icmp ne %struct.BMLoop* %2, null, !dbg !10878
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !10879

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10880
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %3, i32 0, i32 4, !dbg !10881
  %4 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !10881
  store %struct.BMLoop* %4, %struct.BMLoop** %l_other, align 8, !dbg !10882
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10883
  %cmp = icmp ne %struct.BMLoop* %4, %5, !dbg !10884
  br i1 %cmp, label %land.lhs.true2, label %land.end, !dbg !10885

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l_other, align 8, !dbg !10886
  %radial_next3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %6, i32 0, i32 4, !dbg !10887
  %7 = load %struct.BMLoop*, %struct.BMLoop** %radial_next3, align 8, !dbg !10887
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10888
  %cmp4 = icmp eq %struct.BMLoop* %7, %8, !dbg !10889
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !10890

land.rhs:                                         ; preds = %land.lhs.true2
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l_other, align 8, !dbg !10891
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %9, i32 0, i32 1, !dbg !10892
  %10 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10892
  %11 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10893
  %v5 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %11, i32 0, i32 1, !dbg !10894
  %12 = load %struct.BMVert*, %struct.BMVert** %v5, align 8, !dbg !10894
  %cmp6 = icmp ne %struct.BMVert* %10, %12, !dbg !10895
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true2, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true2 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp6, %land.rhs ], !dbg !10896
  %land.ext = zext i1 %13 to i32, !dbg !10890
  %conv = trunc i32 %land.ext to i8, !dbg !10897
  ret i8 %conv, !dbg !10898
}

declare dso_local float @BLI_frand() #2

declare dso_local void @EDBM_deselect_flush(%struct.BMEditMesh*) #2

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

declare dso_local void @CTX_wm_operator_poll_msg_set(%struct.bContext*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !10899 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10907
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10908
  %1 = load i8*, i8** %first, align 8, !dbg !10908
  %cmp = icmp eq i8* %1, null, !dbg !10909
  %conv = zext i1 %cmp to i32, !dbg !10909
  %conv1 = trunc i32 %conv to i8, !dbg !10910
  ret i8 %conv1, !dbg !10911
}

declare dso_local %struct.BMVert* @BM_mesh_active_vert_get(%struct.BMesh*) #2

declare dso_local void @EDBM_selectmode_to_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @loop_find_regions(%struct.BMEditMesh* %em, i8 zeroext %selbigger) #0 !dbg !10912 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %selbigger.addr = alloca i8, align 1
  %visit_face_set = alloca %struct.GSet*, align 8
  %iter = alloca %struct.BMIter, align 8
  %edges_len = alloca i32, align 4
  %e = alloca %struct.BMEdge*, align 8
  %edges = alloca %struct.BMEdge**, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %liter = alloca %struct.BMIter, align 8
  %l = alloca %struct.BMLoop*, align 8
  %region = alloca %struct.BMFace**, align 8
  %region_out = alloca %struct.BMFace**, align 8
  %c = alloca i32, align 4
  %tot = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !10915, metadata !DIExpression()), !dbg !10916
  store i8 %selbigger, i8* %selbigger.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %selbigger.addr, metadata !10917, metadata !DIExpression()), !dbg !10918
  call void @llvm.dbg.declare(metadata %struct.GSet** %visit_face_set, metadata !10919, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10923, metadata !DIExpression()), !dbg !10924
  call void @llvm.dbg.declare(metadata i32* %edges_len, metadata !10925, metadata !DIExpression()), !dbg !10926
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10927
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !10928
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10928
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 5, !dbg !10929
  %2 = load i32, i32* %totedgesel, align 4, !dbg !10929
  store i32 %2, i32* %edges_len, align 4, !dbg !10926
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !10930, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.declare(metadata %struct.BMEdge*** %edges, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10934, metadata !DIExpression()), !dbg !10935
  store i32 0, i32* %count, align 4, !dbg !10935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10936, metadata !DIExpression()), !dbg !10937
  %3 = load i32, i32* %edges_len, align 4, !dbg !10938
  %call = call %struct.GSet* @BLI_gset_ptr_new_ex(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.loop_find_regions, i64 0, i64 0), i32 %3), !dbg !10939
  store %struct.GSet* %call, %struct.GSet** %visit_face_set, align 8, !dbg !10940
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10941
  %5 = load i32, i32* %edges_len, align 4, !dbg !10942
  %conv = sext i32 %5 to i64, !dbg !10942
  %mul = mul i64 8, %conv, !dbg !10943
  %call1 = call i8* %4(i64 %mul, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.loop_find_regions, i64 0, i64 0)), !dbg !10941
  %6 = bitcast i8* %call1 to %struct.BMEdge**, !dbg !10941
  store %struct.BMEdge** %6, %struct.BMEdge*** %edges, align 8, !dbg !10944
  store i32 0, i32* %i, align 4, !dbg !10945
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !10946
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !10946
  %8 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !10946
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 2, i8* null), !dbg !10946
  %9 = bitcast i8* %call3 to %struct.BMEdge*, !dbg !10946
  store %struct.BMEdge* %9, %struct.BMEdge** %e, align 8, !dbg !10946
  br label %for.cond, !dbg !10946

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10948
  %tobool = icmp ne %struct.BMEdge* %10, null, !dbg !10946
  br i1 %tobool, label %for.body, label %for.end, !dbg !10946

for.body:                                         ; preds = %for.cond
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10950
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %11, i32 0, i32 0, !dbg !10950
  %call4 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10950
  %tobool5 = icmp ne i8 %call4, 0, !dbg !10950
  br i1 %tobool5, label %if.then, label %if.else, !dbg !10953

if.then:                                          ; preds = %for.body
  %12 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10954
  %13 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !10956
  %14 = load i32, i32* %i, align 4, !dbg !10957
  %inc = add nsw i32 %14, 1, !dbg !10957
  store i32 %inc, i32* %i, align 4, !dbg !10957
  %idxprom = sext i32 %14 to i64, !dbg !10956
  %arrayidx = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %13, i64 %idxprom, !dbg !10956
  store %struct.BMEdge* %12, %struct.BMEdge** %arrayidx, align 8, !dbg !10958
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10959
  %head6 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %15, i32 0, i32 0, !dbg !10959
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head6, i8 zeroext 16), !dbg !10959
  br label %if.end, !dbg !10960

if.else:                                          ; preds = %for.body
  %16 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10961
  %head7 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %16, i32 0, i32 0, !dbg !10961
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head7, i8 zeroext 16), !dbg !10961
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !10963

for.inc:                                          ; preds = %if.end
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10948
  %17 = bitcast i8* %call8 to %struct.BMEdge*, !dbg !10948
  store %struct.BMEdge* %17, %struct.BMEdge** %e, align 8, !dbg !10948
  br label %for.cond, !dbg !10948, !llvm.loop !10964

for.end:                                          ; preds = %for.cond
  %18 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !10966
  %19 = bitcast %struct.BMEdge** %18 to i8*, !dbg !10966
  %20 = load i32, i32* %edges_len, align 4, !dbg !10967
  %conv9 = sext i32 %20 to i64, !dbg !10967
  call void @qsort(i8* %19, i64 %conv9, i64 8, i32 (i8*, i8*)* @verg_radial), !dbg !10968
  store i32 0, i32* %i, align 4, !dbg !10969
  br label %for.cond10, !dbg !10971

for.cond10:                                       ; preds = %for.inc69, %for.end
  %21 = load i32, i32* %i, align 4, !dbg !10972
  %22 = load i32, i32* %edges_len, align 4, !dbg !10974
  %cmp = icmp slt i32 %21, %22, !dbg !10975
  br i1 %cmp, label %for.body12, label %for.end71, !dbg !10976

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !10977, metadata !DIExpression()), !dbg !10979
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !10980, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %region, metadata !10982, metadata !DIExpression()), !dbg !10983
  store %struct.BMFace** null, %struct.BMFace*** %region, align 8, !dbg !10983
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %region_out, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10986, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10988, metadata !DIExpression()), !dbg !10989
  store i32 0, i32* %tot, align 4, !dbg !10989
  %23 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !10990
  %24 = load i32, i32* %i, align 4, !dbg !10991
  %idxprom13 = sext i32 %24 to i64, !dbg !10990
  %arrayidx14 = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %23, i64 %idxprom13, !dbg !10990
  %25 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx14, align 8, !dbg !10990
  store %struct.BMEdge* %25, %struct.BMEdge** %e, align 8, !dbg !10992
  %26 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10993
  %head15 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %26, i32 0, i32 0, !dbg !10993
  %call16 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head15, i8 zeroext 16), !dbg !10993
  %tobool17 = icmp ne i8 %call16, 0, !dbg !10993
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !10995

if.then18:                                        ; preds = %for.body12
  br label %for.inc69, !dbg !10996

if.end19:                                         ; preds = %for.body12
  %27 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10997
  %28 = bitcast %struct.BMEdge* %27 to i8*, !dbg !10997
  %call20 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 14, i8* %28), !dbg !10997
  %29 = bitcast i8* %call20 to %struct.BMLoop*, !dbg !10997
  store %struct.BMLoop* %29, %struct.BMLoop** %l, align 8, !dbg !10997
  br label %for.cond21, !dbg !10997

for.cond21:                                       ; preds = %for.inc42, %if.end19
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !10999
  %tobool22 = icmp ne %struct.BMLoop* %30, null, !dbg !10997
  br i1 %tobool22, label %for.body23, label %for.end44, !dbg !10997

for.body23:                                       ; preds = %for.cond21
  %31 = load %struct.GSet*, %struct.GSet** %visit_face_set, align 8, !dbg !11001
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11004
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 3, !dbg !11005
  %33 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11005
  %34 = bitcast %struct.BMFace* %33 to i8*, !dbg !11004
  %call24 = call zeroext i8 @BLI_gset_haskey(%struct.GSet* %31, i8* %34), !dbg !11006
  %tobool25 = icmp ne i8 %call24, 0, !dbg !11006
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !11007

if.then26:                                        ; preds = %for.body23
  br label %for.inc42, !dbg !11008

if.end27:                                         ; preds = %for.body23
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11009
  %36 = load %struct.GSet*, %struct.GSet** %visit_face_set, align 8, !dbg !11010
  %call28 = call i32 @loop_find_region(%struct.BMLoop* %35, i32 1, %struct.GSet* %36, %struct.BMFace*** %region_out), !dbg !11011
  store i32 %call28, i32* %c, align 4, !dbg !11012
  %37 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11013
  %tobool29 = icmp ne %struct.BMFace** %37, null, !dbg !11013
  br i1 %tobool29, label %lor.lhs.false, label %if.then36, !dbg !11015

lor.lhs.false:                                    ; preds = %if.end27
  %38 = load i8, i8* %selbigger.addr, align 1, !dbg !11016
  %conv30 = zext i8 %38 to i32, !dbg !11016
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !11016
  br i1 %tobool31, label %cond.true, label %cond.false, !dbg !11017

cond.true:                                        ; preds = %lor.lhs.false
  %39 = load i32, i32* %c, align 4, !dbg !11018
  %40 = load i32, i32* %tot, align 4, !dbg !11019
  %cmp32 = icmp sge i32 %39, %40, !dbg !11020
  br i1 %cmp32, label %if.then36, label %if.else40, !dbg !11016

cond.false:                                       ; preds = %lor.lhs.false
  %41 = load i32, i32* %c, align 4, !dbg !11021
  %42 = load i32, i32* %tot, align 4, !dbg !11022
  %cmp34 = icmp slt i32 %41, %42, !dbg !11023
  br i1 %cmp34, label %if.then36, label %if.else40, !dbg !11017

if.then36:                                        ; preds = %cond.false, %cond.true, %if.end27
  %43 = load i32, i32* %c, align 4, !dbg !11024
  store i32 %43, i32* %tot, align 4, !dbg !11026
  %44 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11027
  %tobool37 = icmp ne %struct.BMFace** %44, null, !dbg !11027
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11029

if.then38:                                        ; preds = %if.then36
  %45 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11030
  %46 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11032
  %47 = bitcast %struct.BMFace** %46 to i8*, !dbg !11032
  call void %45(i8* %47), !dbg !11030
  br label %if.end39, !dbg !11033

if.end39:                                         ; preds = %if.then38, %if.then36
  %48 = load %struct.BMFace**, %struct.BMFace*** %region_out, align 8, !dbg !11034
  store %struct.BMFace** %48, %struct.BMFace*** %region, align 8, !dbg !11035
  br label %if.end41, !dbg !11036

if.else40:                                        ; preds = %cond.false, %cond.true
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11037
  %50 = load %struct.BMFace**, %struct.BMFace*** %region_out, align 8, !dbg !11039
  %51 = bitcast %struct.BMFace** %50 to i8*, !dbg !11039
  call void %49(i8* %51), !dbg !11037
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.end39
  br label %for.inc42, !dbg !11040

for.inc42:                                        ; preds = %if.end41, %if.then26
  %call43 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !10999
  %52 = bitcast i8* %call43 to %struct.BMLoop*, !dbg !10999
  store %struct.BMLoop* %52, %struct.BMLoop** %l, align 8, !dbg !10999
  br label %for.cond21, !dbg !10999, !llvm.loop !11041

for.end44:                                        ; preds = %for.cond21
  %53 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11043
  %tobool45 = icmp ne %struct.BMFace** %53, null, !dbg !11043
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !11045

if.then46:                                        ; preds = %for.end44
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11046, metadata !DIExpression()), !dbg !11048
  store i32 0, i32* %j, align 4, !dbg !11049
  br label %for.cond47, !dbg !11051

for.cond47:                                       ; preds = %for.inc65, %if.then46
  %54 = load i32, i32* %j, align 4, !dbg !11052
  %55 = load i32, i32* %tot, align 4, !dbg !11054
  %cmp48 = icmp slt i32 %54, %55, !dbg !11055
  br i1 %cmp48, label %for.body50, label %for.end67, !dbg !11056

for.body50:                                       ; preds = %for.cond47
  %56 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11057
  %57 = load i32, i32* %j, align 4, !dbg !11057
  %idxprom51 = sext i32 %57 to i64, !dbg !11057
  %arrayidx52 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %56, i64 %idxprom51, !dbg !11057
  %58 = load %struct.BMFace*, %struct.BMFace** %arrayidx52, align 8, !dbg !11057
  %head53 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %58, i32 0, i32 0, !dbg !11057
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head53, i8 zeroext 16), !dbg !11057
  %59 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11059
  %60 = load i32, i32* %j, align 4, !dbg !11059
  %idxprom54 = sext i32 %60 to i64, !dbg !11059
  %arrayidx55 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %59, i64 %idxprom54, !dbg !11059
  %61 = load %struct.BMFace*, %struct.BMFace** %arrayidx55, align 8, !dbg !11059
  %62 = bitcast %struct.BMFace* %61 to i8*, !dbg !11059
  %call56 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %62), !dbg !11059
  %63 = bitcast i8* %call56 to %struct.BMLoop*, !dbg !11059
  store %struct.BMLoop* %63, %struct.BMLoop** %l, align 8, !dbg !11059
  br label %for.cond57, !dbg !11059

for.cond57:                                       ; preds = %for.inc62, %for.body50
  %64 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11061
  %tobool58 = icmp ne %struct.BMLoop* %64, null, !dbg !11059
  br i1 %tobool58, label %for.body59, label %for.end64, !dbg !11059

for.body59:                                       ; preds = %for.cond57
  %65 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11063
  %e60 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %65, i32 0, i32 2, !dbg !11063
  %66 = load %struct.BMEdge*, %struct.BMEdge** %e60, align 8, !dbg !11063
  %head61 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %66, i32 0, i32 0, !dbg !11063
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head61, i8 zeroext 16), !dbg !11063
  br label %for.inc62, !dbg !11065

for.inc62:                                        ; preds = %for.body59
  %call63 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !11061
  %67 = bitcast i8* %call63 to %struct.BMLoop*, !dbg !11061
  store %struct.BMLoop* %67, %struct.BMLoop** %l, align 8, !dbg !11061
  br label %for.cond57, !dbg !11061, !llvm.loop !11066

for.end64:                                        ; preds = %for.cond57
  br label %for.inc65, !dbg !11068

for.inc65:                                        ; preds = %for.end64
  %68 = load i32, i32* %j, align 4, !dbg !11069
  %inc66 = add nsw i32 %68, 1, !dbg !11069
  store i32 %inc66, i32* %j, align 4, !dbg !11069
  br label %for.cond47, !dbg !11070, !llvm.loop !11071

for.end67:                                        ; preds = %for.cond47
  %69 = load i32, i32* %tot, align 4, !dbg !11073
  %70 = load i32, i32* %count, align 4, !dbg !11074
  %add = add nsw i32 %70, %69, !dbg !11074
  store i32 %add, i32* %count, align 4, !dbg !11074
  %71 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11075
  %72 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11076
  %73 = bitcast %struct.BMFace** %72 to i8*, !dbg !11076
  call void %71(i8* %73), !dbg !11075
  br label %if.end68, !dbg !11077

if.end68:                                         ; preds = %for.end67, %for.end44
  br label %for.inc69, !dbg !11078

for.inc69:                                        ; preds = %if.end68, %if.then18
  %74 = load i32, i32* %i, align 4, !dbg !11079
  %inc70 = add nsw i32 %74, 1, !dbg !11079
  store i32 %inc70, i32* %i, align 4, !dbg !11079
  br label %for.cond10, !dbg !11080, !llvm.loop !11081

for.end71:                                        ; preds = %for.cond10
  %75 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11083
  %76 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !11084
  %77 = bitcast %struct.BMEdge** %76 to i8*, !dbg !11084
  call void %75(i8* %77), !dbg !11083
  %78 = load %struct.GSet*, %struct.GSet** %visit_face_set, align 8, !dbg !11085
  call void @BLI_gset_free(%struct.GSet* %78, void (i8*)* null), !dbg !11086
  %79 = load i32, i32* %count, align 4, !dbg !11087
  ret i32 %79, !dbg !11088
}

declare dso_local %struct.GSet* @BLI_gset_ptr_new_ex(i8*, i32) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @verg_radial(i8* %va, i8* %vb) #0 !dbg !11089 {
entry:
  %retval = alloca i32, align 4
  %va.addr = alloca i8*, align 8
  %vb.addr = alloca i8*, align 8
  %e_a = alloca %struct.BMEdge*, align 8
  %e_b = alloca %struct.BMEdge*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i8* %va, i8** %va.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %va.addr, metadata !11094, metadata !DIExpression()), !dbg !11095
  store i8* %vb, i8** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vb.addr, metadata !11096, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_a, metadata !11098, metadata !DIExpression()), !dbg !11099
  %0 = load i8*, i8** %va.addr, align 8, !dbg !11100
  %1 = bitcast i8* %0 to %struct.BMEdge**, !dbg !11101
  %2 = load %struct.BMEdge*, %struct.BMEdge** %1, align 8, !dbg !11102
  store %struct.BMEdge* %2, %struct.BMEdge** %e_a, align 8, !dbg !11099
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_b, metadata !11103, metadata !DIExpression()), !dbg !11104
  %3 = load i8*, i8** %vb.addr, align 8, !dbg !11105
  %4 = bitcast i8* %3 to %struct.BMEdge**, !dbg !11106
  %5 = load %struct.BMEdge*, %struct.BMEdge** %4, align 8, !dbg !11107
  store %struct.BMEdge* %5, %struct.BMEdge** %e_b, align 8, !dbg !11104
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11108, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11110, metadata !DIExpression()), !dbg !11111
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e_a, align 8, !dbg !11112
  %call = call i32 @BM_edge_face_count(%struct.BMEdge* %6), !dbg !11113
  store i32 %call, i32* %a, align 4, !dbg !11114
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e_b, align 8, !dbg !11115
  %call1 = call i32 @BM_edge_face_count(%struct.BMEdge* %7), !dbg !11116
  store i32 %call1, i32* %b, align 4, !dbg !11117
  %8 = load i32, i32* %a, align 4, !dbg !11118
  %9 = load i32, i32* %b, align 4, !dbg !11120
  %cmp = icmp sgt i32 %8, %9, !dbg !11121
  br i1 %cmp, label %if.then, label %if.end, !dbg !11122

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11123
  br label %return, !dbg !11123

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %a, align 4, !dbg !11124
  %11 = load i32, i32* %b, align 4, !dbg !11126
  %cmp2 = icmp slt i32 %10, %11, !dbg !11127
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11128

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11129
  br label %return, !dbg !11129

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11130
  br label %return, !dbg !11130

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !11131
  ret i32 %12, !dbg !11131
}

declare dso_local zeroext i8 @BLI_gset_haskey(%struct.GSet*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @loop_find_region(%struct.BMLoop* %l, i32 %flag, %struct.GSet* %visit_face_set, %struct.BMFace*** %region_out) #0 !dbg !11132 {
entry:
  %l.addr = alloca %struct.BMLoop*, align 8
  %flag.addr = alloca i32, align 4
  %visit_face_set.addr = alloca %struct.GSet*, align 8
  %region_out.addr = alloca %struct.BMFace***, align 8
  %region = alloca %struct.BMFace**, align 8
  %stack = alloca %struct.BMFace**, align 8
  %_region_count = alloca i32, align 4
  %_region_static = alloca i8*, align 8
  %_stack_count = alloca i32, align 4
  %_stack_static = alloca i8*, align 8
  %f = alloca %struct.BMFace*, align 8
  %liter1 = alloca %struct.BMIter, align 8
  %liter2 = alloca %struct.BMIter, align 8
  %l1 = alloca %struct.BMLoop*, align 8
  %l2 = alloca %struct.BMLoop*, align 8
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !11136, metadata !DIExpression()), !dbg !11137
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !11138, metadata !DIExpression()), !dbg !11139
  store %struct.GSet* %visit_face_set, %struct.GSet** %visit_face_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GSet** %visit_face_set.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  store %struct.BMFace*** %region_out, %struct.BMFace**** %region_out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace**** %region_out.addr, metadata !11142, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %region, metadata !11144, metadata !DIExpression()), !dbg !11145
  store %struct.BMFace** null, %struct.BMFace*** %region, align 8, !dbg !11145
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %stack, metadata !11146, metadata !DIExpression()), !dbg !11147
  store %struct.BMFace** null, %struct.BMFace*** %stack, align 8, !dbg !11147
  call void @llvm.dbg.declare(metadata i32* %_region_count, metadata !11148, metadata !DIExpression()), !dbg !11149
  store i32 0, i32* %_region_count, align 4, !dbg !11149
  call void @llvm.dbg.declare(metadata i8** %_region_static, metadata !11150, metadata !DIExpression()), !dbg !11149
  store i8* null, i8** %_region_static, align 8, !dbg !11149
  call void @llvm.dbg.declare(metadata i32* %_stack_count, metadata !11151, metadata !DIExpression()), !dbg !11152
  store i32 0, i32* %_stack_count, align 4, !dbg !11152
  call void @llvm.dbg.declare(metadata i8** %_stack_static, metadata !11153, metadata !DIExpression()), !dbg !11152
  store i8* null, i8** %_stack_static, align 8, !dbg !11152
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !11154, metadata !DIExpression()), !dbg !11155
  %0 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11156
  %1 = bitcast %struct.BMFace** %0 to i8*, !dbg !11156
  %cmp = icmp eq i8* %1, null, !dbg !11156
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !11156

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %_stack_static, align 8, !dbg !11156
  %cmp1 = icmp ne i8* %2, null, !dbg !11156
  br i1 %cmp1, label %land.lhs.true2, label %cond.false, !dbg !11156

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %_stack_count, align 4, !dbg !11156
  %add = add nsw i32 %3, 1, !dbg !11156
  %conv = sext i32 %add to i64, !dbg !11156
  %cmp3 = icmp uge i64 1, %conv, !dbg !11156
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !11156

cond.true:                                        ; preds = %land.lhs.true2
  %4 = load i8*, i8** %_stack_static, align 8, !dbg !11156
  %5 = bitcast i8* %4 to %struct.BMFace**, !dbg !11156
  store %struct.BMFace** %5, %struct.BMFace*** %stack, align 8, !dbg !11156
  br label %cond.end25, !dbg !11156

cond.false:                                       ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %6 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11156
  %7 = bitcast %struct.BMFace** %6 to i8*, !dbg !11156
  %8 = load i8*, i8** %_stack_static, align 8, !dbg !11156
  %cmp5 = icmp eq i8* %7, %8, !dbg !11156
  br i1 %cmp5, label %land.lhs.true7, label %cond.false11, !dbg !11156

land.lhs.true7:                                   ; preds = %cond.false
  %9 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11156
  %10 = bitcast %struct.BMFace** %9 to i8*, !dbg !11156
  %cmp8 = icmp ne i8* %10, null, !dbg !11156
  br i1 %cmp8, label %cond.true10, label %cond.false11, !dbg !11156

cond.true10:                                      ; preds = %land.lhs.true7
  br label %cond.end16, !dbg !11156

cond.false11:                                     ; preds = %land.lhs.true7, %cond.false
  %11 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11156
  %cmp12 = icmp eq %struct.BMFace** %11, null, !dbg !11156
  br i1 %cmp12, label %cond.true14, label %cond.false15, !dbg !11156

cond.true14:                                      ; preds = %cond.false11
  br label %cond.end, !dbg !11156

cond.false15:                                     ; preds = %cond.false11
  %12 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !11156
  %13 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11156
  %14 = bitcast %struct.BMFace** %13 to i8*, !dbg !11156
  %call = call i64 %12(i8* %14), !dbg !11156
  %div = udiv i64 %call, 8, !dbg !11156
  br label %cond.end, !dbg !11156

cond.end:                                         ; preds = %cond.false15, %cond.true14
  %cond = phi i64 [ 0, %cond.true14 ], [ %div, %cond.false15 ], !dbg !11156
  br label %cond.end16, !dbg !11156

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi i64 [ 1, %cond.true10 ], [ %cond, %cond.end ], !dbg !11156
  %15 = load i32, i32* %_stack_count, align 4, !dbg !11156
  %add18 = add nsw i32 %15, 1, !dbg !11156
  %conv19 = sext i32 %add18 to i64, !dbg !11156
  %cmp20 = icmp uge i64 %cond17, %conv19, !dbg !11156
  br i1 %cmp20, label %cond.true22, label %cond.false23, !dbg !11156

cond.true22:                                      ; preds = %cond.end16
  br label %cond.end24, !dbg !11156

cond.false23:                                     ; preds = %cond.end16
  %16 = bitcast %struct.BMFace*** %stack to i8**, !dbg !11156
  %17 = load i8*, i8** %_stack_static, align 8, !dbg !11156
  %18 = load i32, i32* %_stack_count, align 4, !dbg !11156
  call void @_bli_array_grow_func(i8** %16, i8* %17, i32 8, i32 %18, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.226, i64 0, i64 0)), !dbg !11156
  br label %cond.end24, !dbg !11156

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  br label %cond.end25, !dbg !11156

cond.end25:                                       ; preds = %cond.end24, %cond.true
  %19 = load i32, i32* %_stack_count, align 4, !dbg !11156
  %add26 = add nsw i32 %19, 1, !dbg !11156
  store i32 %add26, i32* %_stack_count, align 4, !dbg !11156
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !11156
  %f27 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 3, !dbg !11156
  %21 = load %struct.BMFace*, %struct.BMFace** %f27, align 8, !dbg !11156
  %22 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11156
  %23 = load i32, i32* %_stack_count, align 4, !dbg !11156
  %sub = sub nsw i32 %23, 1, !dbg !11156
  %idxprom = sext i32 %sub to i64, !dbg !11156
  %arrayidx = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %22, i64 %idxprom, !dbg !11156
  store %struct.BMFace* %21, %struct.BMFace** %arrayidx, align 8, !dbg !11156
  %24 = load %struct.GSet*, %struct.GSet** %visit_face_set.addr, align 8, !dbg !11157
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !11158
  %f28 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 3, !dbg !11159
  %26 = load %struct.BMFace*, %struct.BMFace** %f28, align 8, !dbg !11159
  %27 = bitcast %struct.BMFace* %26 to i8*, !dbg !11158
  call void @BLI_gset_insert(%struct.GSet* %24, i8* %27), !dbg !11160
  br label %while.cond, !dbg !11161

while.cond:                                       ; preds = %for.end146, %cond.end25
  %28 = load i32, i32* %_stack_count, align 4, !dbg !11162
  %cmp29 = icmp sgt i32 %28, 0, !dbg !11163
  br i1 %cmp29, label %while.body, label %while.end, !dbg !11161

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter1, metadata !11164, metadata !DIExpression()), !dbg !11166
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter2, metadata !11167, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l1, metadata !11169, metadata !DIExpression()), !dbg !11170
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l2, metadata !11171, metadata !DIExpression()), !dbg !11172
  %29 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11173
  %tobool = icmp ne %struct.BMFace** %29, null, !dbg !11173
  br i1 %tobool, label %land.lhs.true31, label %cond.false36, !dbg !11173

land.lhs.true31:                                  ; preds = %while.body
  %30 = load i32, i32* %_stack_count, align 4, !dbg !11173
  %tobool32 = icmp ne i32 %30, 0, !dbg !11173
  br i1 %tobool32, label %cond.true33, label %cond.false36, !dbg !11173

cond.true33:                                      ; preds = %land.lhs.true31
  %31 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11173
  %32 = load i32, i32* %_stack_count, align 4, !dbg !11173
  %dec = add nsw i32 %32, -1, !dbg !11173
  store i32 %dec, i32* %_stack_count, align 4, !dbg !11173
  %idxprom34 = sext i32 %dec to i64, !dbg !11173
  %arrayidx35 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %31, i64 %idxprom34, !dbg !11173
  %33 = load %struct.BMFace*, %struct.BMFace** %arrayidx35, align 8, !dbg !11173
  br label %cond.end37, !dbg !11173

cond.false36:                                     ; preds = %land.lhs.true31, %while.body
  br label %cond.end37, !dbg !11173

cond.end37:                                       ; preds = %cond.false36, %cond.true33
  %cond38 = phi %struct.BMFace* [ %33, %cond.true33 ], [ null, %cond.false36 ], !dbg !11173
  store %struct.BMFace* %cond38, %struct.BMFace** %f, align 8, !dbg !11174
  %34 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11175
  %35 = bitcast %struct.BMFace** %34 to i8*, !dbg !11175
  %cmp39 = icmp eq i8* %35, null, !dbg !11175
  br i1 %cmp39, label %land.lhs.true41, label %cond.false50, !dbg !11175

land.lhs.true41:                                  ; preds = %cond.end37
  %36 = load i8*, i8** %_region_static, align 8, !dbg !11175
  %cmp42 = icmp ne i8* %36, null, !dbg !11175
  br i1 %cmp42, label %land.lhs.true44, label %cond.false50, !dbg !11175

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %37 = load i32, i32* %_region_count, align 4, !dbg !11175
  %add45 = add nsw i32 %37, 1, !dbg !11175
  %conv46 = sext i32 %add45 to i64, !dbg !11175
  %cmp47 = icmp uge i64 1, %conv46, !dbg !11175
  br i1 %cmp47, label %cond.true49, label %cond.false50, !dbg !11175

cond.true49:                                      ; preds = %land.lhs.true44
  %38 = load i8*, i8** %_region_static, align 8, !dbg !11175
  %39 = bitcast i8* %38 to %struct.BMFace**, !dbg !11175
  store %struct.BMFace** %39, %struct.BMFace*** %region, align 8, !dbg !11175
  br label %cond.end75, !dbg !11175

cond.false50:                                     ; preds = %land.lhs.true44, %land.lhs.true41, %cond.end37
  %40 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11175
  %41 = bitcast %struct.BMFace** %40 to i8*, !dbg !11175
  %42 = load i8*, i8** %_region_static, align 8, !dbg !11175
  %cmp51 = icmp eq i8* %41, %42, !dbg !11175
  br i1 %cmp51, label %land.lhs.true53, label %cond.false57, !dbg !11175

land.lhs.true53:                                  ; preds = %cond.false50
  %43 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11175
  %44 = bitcast %struct.BMFace** %43 to i8*, !dbg !11175
  %cmp54 = icmp ne i8* %44, null, !dbg !11175
  br i1 %cmp54, label %cond.true56, label %cond.false57, !dbg !11175

cond.true56:                                      ; preds = %land.lhs.true53
  br label %cond.end66, !dbg !11175

cond.false57:                                     ; preds = %land.lhs.true53, %cond.false50
  %45 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11175
  %cmp58 = icmp eq %struct.BMFace** %45, null, !dbg !11175
  br i1 %cmp58, label %cond.true60, label %cond.false61, !dbg !11175

cond.true60:                                      ; preds = %cond.false57
  br label %cond.end64, !dbg !11175

cond.false61:                                     ; preds = %cond.false57
  %46 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !11175
  %47 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11175
  %48 = bitcast %struct.BMFace** %47 to i8*, !dbg !11175
  %call62 = call i64 %46(i8* %48), !dbg !11175
  %div63 = udiv i64 %call62, 8, !dbg !11175
  br label %cond.end64, !dbg !11175

cond.end64:                                       ; preds = %cond.false61, %cond.true60
  %cond65 = phi i64 [ 0, %cond.true60 ], [ %div63, %cond.false61 ], !dbg !11175
  br label %cond.end66, !dbg !11175

cond.end66:                                       ; preds = %cond.end64, %cond.true56
  %cond67 = phi i64 [ 1, %cond.true56 ], [ %cond65, %cond.end64 ], !dbg !11175
  %49 = load i32, i32* %_region_count, align 4, !dbg !11175
  %add68 = add nsw i32 %49, 1, !dbg !11175
  %conv69 = sext i32 %add68 to i64, !dbg !11175
  %cmp70 = icmp uge i64 %cond67, %conv69, !dbg !11175
  br i1 %cmp70, label %cond.true72, label %cond.false73, !dbg !11175

cond.true72:                                      ; preds = %cond.end66
  br label %cond.end74, !dbg !11175

cond.false73:                                     ; preds = %cond.end66
  %50 = bitcast %struct.BMFace*** %region to i8**, !dbg !11175
  %51 = load i8*, i8** %_region_static, align 8, !dbg !11175
  %52 = load i32, i32* %_region_count, align 4, !dbg !11175
  call void @_bli_array_grow_func(i8** %50, i8* %51, i32 8, i32 %52, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.227, i64 0, i64 0)), !dbg !11175
  br label %cond.end74, !dbg !11175

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  br label %cond.end75, !dbg !11175

cond.end75:                                       ; preds = %cond.end74, %cond.true49
  %53 = load i32, i32* %_region_count, align 4, !dbg !11175
  %add76 = add nsw i32 %53, 1, !dbg !11175
  store i32 %add76, i32* %_region_count, align 4, !dbg !11175
  %54 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11175
  %55 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11175
  %56 = load i32, i32* %_region_count, align 4, !dbg !11175
  %sub77 = sub nsw i32 %56, 1, !dbg !11175
  %idxprom78 = sext i32 %sub77 to i64, !dbg !11175
  %arrayidx79 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %55, i64 %idxprom78, !dbg !11175
  store %struct.BMFace* %54, %struct.BMFace** %arrayidx79, align 8, !dbg !11175
  %57 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11176
  %58 = bitcast %struct.BMFace* %57 to i8*, !dbg !11176
  %call80 = call i8* @BM_iter_new(%struct.BMIter* %liter1, %struct.BMesh* null, i8 zeroext 11, i8* %58), !dbg !11176
  %59 = bitcast i8* %call80 to %struct.BMLoop*, !dbg !11176
  store %struct.BMLoop* %59, %struct.BMLoop** %l1, align 8, !dbg !11176
  br label %for.cond, !dbg !11176

for.cond:                                         ; preds = %for.inc144, %cond.end75
  %60 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !11178
  %tobool81 = icmp ne %struct.BMLoop* %60, null, !dbg !11176
  br i1 %tobool81, label %for.body, label %for.end146, !dbg !11176

for.body:                                         ; preds = %for.cond
  %61 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !11180
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %61, i32 0, i32 2, !dbg !11180
  %62 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11180
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %62, i32 0, i32 0, !dbg !11180
  %63 = load i32, i32* %flag.addr, align 4, !dbg !11180
  %conv82 = trunc i32 %63 to i8, !dbg !11180
  %call83 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %conv82), !dbg !11180
  %tobool84 = icmp ne i8 %call83, 0, !dbg !11180
  br i1 %tobool84, label %if.then, label %if.end, !dbg !11183

if.then:                                          ; preds = %for.body
  br label %for.inc144, !dbg !11184

if.end:                                           ; preds = %for.body
  %64 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !11185
  %e85 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %64, i32 0, i32 2, !dbg !11185
  %65 = load %struct.BMEdge*, %struct.BMEdge** %e85, align 8, !dbg !11185
  %66 = bitcast %struct.BMEdge* %65 to i8*, !dbg !11185
  %call86 = call i8* @BM_iter_new(%struct.BMIter* %liter2, %struct.BMesh* null, i8 zeroext 14, i8* %66), !dbg !11185
  %67 = bitcast i8* %call86 to %struct.BMLoop*, !dbg !11185
  store %struct.BMLoop* %67, %struct.BMLoop** %l2, align 8, !dbg !11185
  br label %for.cond87, !dbg !11185

for.cond87:                                       ; preds = %for.inc, %if.end
  %68 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !11187
  %tobool88 = icmp ne %struct.BMLoop* %68, null, !dbg !11185
  br i1 %tobool88, label %for.body89, label %for.end, !dbg !11185

for.body89:                                       ; preds = %for.cond87
  %69 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !11189
  %f90 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %69, i32 0, i32 3, !dbg !11189
  %70 = load %struct.BMFace*, %struct.BMFace** %f90, align 8, !dbg !11189
  %head91 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %70, i32 0, i32 0, !dbg !11189
  %call92 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head91, i8 zeroext 16), !dbg !11189
  %tobool93 = icmp ne i8 %call92, 0, !dbg !11189
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !11192

if.then94:                                        ; preds = %for.body89
  br label %for.inc, !dbg !11193

if.end95:                                         ; preds = %for.body89
  %71 = load %struct.GSet*, %struct.GSet** %visit_face_set.addr, align 8, !dbg !11195
  %72 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !11197
  %f96 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %72, i32 0, i32 3, !dbg !11198
  %73 = load %struct.BMFace*, %struct.BMFace** %f96, align 8, !dbg !11198
  %74 = bitcast %struct.BMFace* %73 to i8*, !dbg !11197
  %call97 = call zeroext i8 @BLI_gset_add(%struct.GSet* %71, i8* %74), !dbg !11199
  %tobool98 = icmp ne i8 %call97, 0, !dbg !11199
  br i1 %tobool98, label %if.then99, label %if.end142, !dbg !11200

if.then99:                                        ; preds = %if.end95
  %75 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11201
  %76 = bitcast %struct.BMFace** %75 to i8*, !dbg !11201
  %cmp100 = icmp eq i8* %76, null, !dbg !11201
  br i1 %cmp100, label %land.lhs.true102, label %cond.false111, !dbg !11201

land.lhs.true102:                                 ; preds = %if.then99
  %77 = load i8*, i8** %_stack_static, align 8, !dbg !11201
  %cmp103 = icmp ne i8* %77, null, !dbg !11201
  br i1 %cmp103, label %land.lhs.true105, label %cond.false111, !dbg !11201

land.lhs.true105:                                 ; preds = %land.lhs.true102
  %78 = load i32, i32* %_stack_count, align 4, !dbg !11201
  %add106 = add nsw i32 %78, 1, !dbg !11201
  %conv107 = sext i32 %add106 to i64, !dbg !11201
  %cmp108 = icmp uge i64 1, %conv107, !dbg !11201
  br i1 %cmp108, label %cond.true110, label %cond.false111, !dbg !11201

cond.true110:                                     ; preds = %land.lhs.true105
  %79 = load i8*, i8** %_stack_static, align 8, !dbg !11201
  %80 = bitcast i8* %79 to %struct.BMFace**, !dbg !11201
  store %struct.BMFace** %80, %struct.BMFace*** %stack, align 8, !dbg !11201
  br label %cond.end136, !dbg !11201

cond.false111:                                    ; preds = %land.lhs.true105, %land.lhs.true102, %if.then99
  %81 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11201
  %82 = bitcast %struct.BMFace** %81 to i8*, !dbg !11201
  %83 = load i8*, i8** %_stack_static, align 8, !dbg !11201
  %cmp112 = icmp eq i8* %82, %83, !dbg !11201
  br i1 %cmp112, label %land.lhs.true114, label %cond.false118, !dbg !11201

land.lhs.true114:                                 ; preds = %cond.false111
  %84 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11201
  %85 = bitcast %struct.BMFace** %84 to i8*, !dbg !11201
  %cmp115 = icmp ne i8* %85, null, !dbg !11201
  br i1 %cmp115, label %cond.true117, label %cond.false118, !dbg !11201

cond.true117:                                     ; preds = %land.lhs.true114
  br label %cond.end127, !dbg !11201

cond.false118:                                    ; preds = %land.lhs.true114, %cond.false111
  %86 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11201
  %cmp119 = icmp eq %struct.BMFace** %86, null, !dbg !11201
  br i1 %cmp119, label %cond.true121, label %cond.false122, !dbg !11201

cond.true121:                                     ; preds = %cond.false118
  br label %cond.end125, !dbg !11201

cond.false122:                                    ; preds = %cond.false118
  %87 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !11201
  %88 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11201
  %89 = bitcast %struct.BMFace** %88 to i8*, !dbg !11201
  %call123 = call i64 %87(i8* %89), !dbg !11201
  %div124 = udiv i64 %call123, 8, !dbg !11201
  br label %cond.end125, !dbg !11201

cond.end125:                                      ; preds = %cond.false122, %cond.true121
  %cond126 = phi i64 [ 0, %cond.true121 ], [ %div124, %cond.false122 ], !dbg !11201
  br label %cond.end127, !dbg !11201

cond.end127:                                      ; preds = %cond.end125, %cond.true117
  %cond128 = phi i64 [ 1, %cond.true117 ], [ %cond126, %cond.end125 ], !dbg !11201
  %90 = load i32, i32* %_stack_count, align 4, !dbg !11201
  %add129 = add nsw i32 %90, 1, !dbg !11201
  %conv130 = sext i32 %add129 to i64, !dbg !11201
  %cmp131 = icmp uge i64 %cond128, %conv130, !dbg !11201
  br i1 %cmp131, label %cond.true133, label %cond.false134, !dbg !11201

cond.true133:                                     ; preds = %cond.end127
  br label %cond.end135, !dbg !11201

cond.false134:                                    ; preds = %cond.end127
  %91 = bitcast %struct.BMFace*** %stack to i8**, !dbg !11201
  %92 = load i8*, i8** %_stack_static, align 8, !dbg !11201
  %93 = load i32, i32* %_stack_count, align 4, !dbg !11201
  call void @_bli_array_grow_func(i8** %91, i8* %92, i32 8, i32 %93, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.226, i64 0, i64 0)), !dbg !11201
  br label %cond.end135, !dbg !11201

cond.end135:                                      ; preds = %cond.false134, %cond.true133
  br label %cond.end136, !dbg !11201

cond.end136:                                      ; preds = %cond.end135, %cond.true110
  %94 = load i32, i32* %_stack_count, align 4, !dbg !11201
  %add137 = add nsw i32 %94, 1, !dbg !11201
  store i32 %add137, i32* %_stack_count, align 4, !dbg !11201
  %95 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !11201
  %f138 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %95, i32 0, i32 3, !dbg !11201
  %96 = load %struct.BMFace*, %struct.BMFace** %f138, align 8, !dbg !11201
  %97 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11201
  %98 = load i32, i32* %_stack_count, align 4, !dbg !11201
  %sub139 = sub nsw i32 %98, 1, !dbg !11201
  %idxprom140 = sext i32 %sub139 to i64, !dbg !11201
  %arrayidx141 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %97, i64 %idxprom140, !dbg !11201
  store %struct.BMFace* %96, %struct.BMFace** %arrayidx141, align 8, !dbg !11201
  br label %if.end142, !dbg !11203

if.end142:                                        ; preds = %cond.end136, %if.end95
  br label %for.inc, !dbg !11204

for.inc:                                          ; preds = %if.end142, %if.then94
  %call143 = call i8* @BM_iter_step(%struct.BMIter* %liter2), !dbg !11187
  %99 = bitcast i8* %call143 to %struct.BMLoop*, !dbg !11187
  store %struct.BMLoop* %99, %struct.BMLoop** %l2, align 8, !dbg !11187
  br label %for.cond87, !dbg !11187, !llvm.loop !11205

for.end:                                          ; preds = %for.cond87
  br label %for.inc144, !dbg !11207

for.inc144:                                       ; preds = %for.end, %if.then
  %call145 = call i8* @BM_iter_step(%struct.BMIter* %liter1), !dbg !11178
  %100 = bitcast i8* %call145 to %struct.BMLoop*, !dbg !11178
  store %struct.BMLoop* %100, %struct.BMLoop** %l1, align 8, !dbg !11178
  br label %for.cond, !dbg !11178, !llvm.loop !11208

for.end146:                                       ; preds = %for.cond
  br label %while.cond, !dbg !11161, !llvm.loop !11210

while.end:                                        ; preds = %while.cond
  %101 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11212
  %tobool147 = icmp ne %struct.BMFace** %101, null, !dbg !11212
  br i1 %tobool147, label %land.lhs.true148, label %if.end152, !dbg !11212

land.lhs.true148:                                 ; preds = %while.end
  %102 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11212
  %103 = bitcast %struct.BMFace** %102 to i8*, !dbg !11212
  %104 = load i8*, i8** %_stack_static, align 8, !dbg !11212
  %cmp149 = icmp ne i8* %103, %104, !dbg !11212
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !11214

if.then151:                                       ; preds = %land.lhs.true148
  %105 = load i32, i32* %_stack_count, align 4, !dbg !11215
  %106 = load i8*, i8** %_stack_static, align 8, !dbg !11215
  %107 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11215
  %108 = load %struct.BMFace**, %struct.BMFace*** %stack, align 8, !dbg !11215
  %109 = bitcast %struct.BMFace** %108 to i8*, !dbg !11215
  call void %107(i8* %109), !dbg !11215
  br label %if.end152, !dbg !11215

if.end152:                                        ; preds = %if.then151, %land.lhs.true148, %while.end
  %110 = load %struct.BMFace**, %struct.BMFace*** %region, align 8, !dbg !11217
  %111 = load %struct.BMFace***, %struct.BMFace**** %region_out.addr, align 8, !dbg !11218
  store %struct.BMFace** %110, %struct.BMFace*** %111, align 8, !dbg !11219
  %112 = load i32, i32* %_region_count, align 4, !dbg !11220
  ret i32 %112, !dbg !11221
}

declare dso_local void @BLI_gset_free(%struct.GSet*, void (i8*)*) #2

declare dso_local void @_bli_array_grow_func(i8**, i8*, i32, i32, i32, i8*) #2

declare dso_local void @BLI_gset_insert(%struct.GSet*, i8*) #2

declare dso_local zeroext i8 @BLI_gset_add(%struct.GSet*, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3227, !3228, !3229}
!llvm.ident = !{!3230}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "bm_solidoffs", scope: !2, file: !3, line: 184, type: !7, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !276, globals: !2685, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/mesh/editmesh_select.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !17, !23, !29, !37, !44, !61, !71, !74, !84, !92, !99, !104, !138, !151, !157, !166, !176, !185, !196, !211, !215, !219, !227, !232}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !6, line: 94, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!15 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!16 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !6, line: 116, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20, !21, !22}
!19 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !6, line: 131, baseType: !7, size: 32, elements: !24)
!24 = !{!25, !26, !27, !28}
!25 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!26 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!27 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!28 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !6, line: 123, baseType: !7, size: 32, elements: !30)
!30 = !{!31, !32, !33, !34, !35, !36}
!31 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!32 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!33 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!34 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!35 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!36 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 182, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !45, line: 57, baseType: !7, size: 32, elements: !46)
!45 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!46 = !{!47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!47 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!52 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!53 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!54 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!55 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!56 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!57 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!58 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!59 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!60 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 260, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!63 = !{!64, !65, !66, !67, !68, !69, !70}
!64 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!67 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!68 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!69 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!70 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 200, baseType: !7, size: 32, elements: !72)
!72 = !{!73}
!73 = !DIEnumerator(name: "BMO_FLAG_RESPECT_HIDE", value: 1, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !75, line: 432, baseType: !7, size: 32, elements: !76)
!75 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!76 = !{!77, !78, !79, !80, !81, !82, !83}
!77 = !DIEnumerator(name: "OB_BOUNDBOX", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "OB_WIRE", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "OB_SOLID", value: 3, isUnsigned: true)
!80 = !DIEnumerator(name: "OB_MATERIAL", value: 4, isUnsigned: true)
!81 = !DIEnumerator(name: "OB_TEXTURE", value: 5, isUnsigned: true)
!82 = !DIEnumerator(name: "OB_RENDER", value: 6, isUnsigned: true)
!83 = !DIEnumerator(name: "OB_PAINT", value: 100, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !85, line: 119, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!86 = !{!87, !88, !89, !90, !91}
!87 = !DIEnumerator(name: "V3D_PROJ_TEST_NOP", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_BB", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_WIN", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_NEAR", value: 4, isUnsigned: true)
!91 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_ZERO", value: 8, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !93, line: 106, baseType: !7, size: 32, elements: !94)
!93 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!94 = !{!95, !96, !97, !98}
!95 = !DIEnumerator(name: "SIMVERT_NORMAL", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "SIMVERT_FACE", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "SIMVERT_VGROUP", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "SIMVERT_EDGE", value: 3, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !93, line: 58, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102, !103}
!101 = !DIEnumerator(name: "SIM_CMP_EQ", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "SIM_CMP_GT", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "SIM_CMP_LT", value: 2, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !105, line: 151, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137}
!107 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!109 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!111 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!112 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!113 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!114 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!115 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!116 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!117 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!118 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!119 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!120 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!121 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!122 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!123 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!124 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!125 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!126 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!127 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!128 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!129 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!130 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!131 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!132 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!133 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!134 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!135 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!136 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!137 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !75, line: 339, baseType: !7, size: 32, elements: !139)
!139 = !{!140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150}
!140 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!143 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!144 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!145 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!146 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!147 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!148 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!149 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!150 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 249, baseType: !7, size: 32, elements: !152)
!152 = !{!153, !154, !155, !156}
!153 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!154 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!155 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!156 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 351, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!159 = !{!160, !161, !162, !163, !164, !165}
!160 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!162 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!163 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!164 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!165 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !93, line: 91, baseType: !7, size: 32, elements: !167)
!167 = !{!168, !169, !170, !171, !172, !173, !174, !175}
!168 = !DIEnumerator(name: "SIMEDGE_LENGTH", value: 101, isUnsigned: true)
!169 = !DIEnumerator(name: "SIMEDGE_DIR", value: 102, isUnsigned: true)
!170 = !DIEnumerator(name: "SIMEDGE_FACE", value: 103, isUnsigned: true)
!171 = !DIEnumerator(name: "SIMEDGE_FACE_ANGLE", value: 104, isUnsigned: true)
!172 = !DIEnumerator(name: "SIMEDGE_CREASE", value: 105, isUnsigned: true)
!173 = !DIEnumerator(name: "SIMEDGE_BEVEL", value: 106, isUnsigned: true)
!174 = !DIEnumerator(name: "SIMEDGE_SEAM", value: 107, isUnsigned: true)
!175 = !DIEnumerator(name: "SIMEDGE_SHARP", value: 108, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !93, line: 77, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182, !183, !184}
!178 = !DIEnumerator(name: "SIMFACE_MATERIAL", value: 201, isUnsigned: true)
!179 = !DIEnumerator(name: "SIMFACE_IMAGE", value: 202, isUnsigned: true)
!180 = !DIEnumerator(name: "SIMFACE_AREA", value: 203, isUnsigned: true)
!181 = !DIEnumerator(name: "SIMFACE_SIDES", value: 204, isUnsigned: true)
!182 = !DIEnumerator(name: "SIMFACE_PERIMETER", value: 205, isUnsigned: true)
!183 = !DIEnumerator(name: "SIMFACE_NORMAL", value: 206, isUnsigned: true)
!184 = !DIEnumerator(name: "SIMFACE_COPLANAR", value: 207, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !158, line: 67, baseType: !7, size: 32, elements: !186)
!186 = !{!187, !188, !189, !190, !191, !192, !193, !194, !195}
!187 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!191 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!192 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!193 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!194 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!195 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !197, line: 109, baseType: !7, size: 32, elements: !198)
!197 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_walkers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!198 = !{!199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210}
!199 = !DIEnumerator(name: "BMW_VERT_SHELL", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "BMW_FACE_SHELL", value: 1, isUnsigned: true)
!201 = !DIEnumerator(name: "BMW_LOOP", value: 2, isUnsigned: true)
!202 = !DIEnumerator(name: "BMW_FACELOOP", value: 3, isUnsigned: true)
!203 = !DIEnumerator(name: "BMW_EDGERING", value: 4, isUnsigned: true)
!204 = !DIEnumerator(name: "BMW_EDGEBOUNDARY", value: 5, isUnsigned: true)
!205 = !DIEnumerator(name: "BMW_LOOPDATA_ISLAND", value: 6, isUnsigned: true)
!206 = !DIEnumerator(name: "BMW_ISLANDBOUND", value: 7, isUnsigned: true)
!207 = !DIEnumerator(name: "BMW_ISLAND", value: 8, isUnsigned: true)
!208 = !DIEnumerator(name: "BMW_CONNECTED_VERTEX", value: 9, isUnsigned: true)
!209 = !DIEnumerator(name: "BMW_CUSTOM", value: 10, isUnsigned: true)
!210 = !DIEnumerator(name: "BMW_MAXWALKERS", value: 11, isUnsigned: true)
!211 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !197, line: 34, baseType: !7, size: 32, elements: !212)
!212 = !{!213, !214}
!213 = !DIEnumerator(name: "BMW_DEPTH_FIRST", value: 0, isUnsigned: true)
!214 = !DIEnumerator(name: "BMW_BREADTH_FIRST", value: 1, isUnsigned: true)
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !197, line: 39, baseType: !7, size: 32, elements: !216)
!216 = !{!217, !218}
!217 = !DIEnumerator(name: "BMW_FLAG_NOP", value: 0, isUnsigned: true)
!218 = !DIEnumerator(name: "BMW_FLAG_TEST_HIDDEN", value: 1, isUnsigned: true)
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !85, line: 109, baseType: !7, size: 32, elements: !220)
!220 = !{!221, !222, !223, !224, !225, !226}
!221 = !DIEnumerator(name: "V3D_PROJ_RET_OK", value: 0, isUnsigned: true)
!222 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_NEAR", value: 1, isUnsigned: true)
!223 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_ZERO", value: 2, isUnsigned: true)
!224 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_BB", value: 3, isUnsigned: true)
!225 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_WIN", value: 4, isUnsigned: true)
!226 = !DIEnumerator(name: "V3D_PROJ_RET_OVERFLOW", value: 5, isUnsigned: true)
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !228, line: 83, baseType: !7, size: 32, elements: !229)
!228 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!229 = !{!230, !231}
!230 = !DIEnumerator(name: "BLI_MEMPOOL_NOP", value: 0, isUnsigned: true)
!231 = !DIEnumerator(name: "BLI_MEMPOOL_ALLOW_ITER", value: 1, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !233, line: 76, baseType: !7, size: 32, elements: !234)
!233 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!234 = !{!235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275}
!235 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!236 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!239 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!240 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!241 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!242 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!243 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!244 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!245 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!246 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!247 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!248 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!249 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!250 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!251 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!252 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!253 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!254 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!255 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!256 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!257 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!258 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!259 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!260 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!261 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!262 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!263 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!264 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!265 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!266 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!267 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!268 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!269 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!270 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!271 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!272 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!273 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!274 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!275 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!276 = !{!277, !288, !2666, !364, !2669, !2670, !2671, !620, !681, !685, !663, !304, !2675, !1037, !317, !2677, !983, !680, !2683, !726}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !279, line: 133, baseType: !280)
!279 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !279, line: 58, size: 11008, elements: !281)
!281 = !{!282, !354, !358, !370, !373, !377, !381, !388, !397, !493, !499, !506, !514, !525, !538, !551, !562, !571, !583, !591, !593, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !280, file: !279, line: 59, baseType: !283, size: 960)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !284, line: 130, baseType: !285)
!284 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !284, line: 117, size: 960, elements: !286)
!286 = !{!287, !289, !290, !292, !312, !316, !318, !320, !321, !322}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !285, file: !284, line: 118, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !285, file: !284, line: 118, baseType: !288, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !285, file: !284, line: 119, baseType: !291, size: 64, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !285, file: !284, line: 120, baseType: !293, size: 64, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !284, line: 136, size: 17600, elements: !295)
!295 = !{!296, !297, !299, !302, !307, !308, !309}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !294, file: !284, line: 137, baseType: !283, size: 960)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !294, file: !284, line: 138, baseType: !298, size: 64, offset: 960)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !294, file: !284, line: 139, baseType: !300, size: 64, offset: 1024)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !284, line: 43, flags: DIFlagFwdDecl)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !294, file: !284, line: 140, baseType: !303, size: 8192, offset: 1088)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 8192, elements: !305)
!304 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!305 = !{!306}
!306 = !DISubrange(count: 1024)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !294, file: !284, line: 141, baseType: !303, size: 8192, offset: 9280)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !294, file: !284, line: 148, baseType: !293, size: 64, offset: 17472)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !294, file: !284, line: 150, baseType: !310, size: 64, offset: 17536)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !284, line: 45, flags: DIFlagFwdDecl)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !285, file: !284, line: 121, baseType: !313, size: 528, offset: 256)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 528, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: 66)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !285, file: !284, line: 126, baseType: !317, size: 16, offset: 784)
!317 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !285, file: !284, line: 127, baseType: !319, size: 32, offset: 800)
!319 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !285, file: !284, line: 128, baseType: !319, size: 32, offset: 832)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !285, file: !284, line: 128, baseType: !319, size: 32, offset: 864)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !285, file: !284, line: 129, baseType: !323, size: 64, offset: 896)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !284, line: 75, baseType: !325)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !284, line: 62, size: 1024, elements: !326)
!326 = !{!327, !329, !330, !331, !332, !333, !337, !338, !352, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !325, file: !284, line: 63, baseType: !328, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !325, file: !284, line: 63, baseType: !328, size: 64, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !325, file: !284, line: 64, baseType: !304, size: 8, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !325, file: !284, line: 64, baseType: !304, size: 8, offset: 136)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !325, file: !284, line: 65, baseType: !317, size: 16, offset: 144)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !325, file: !284, line: 66, baseType: !334, size: 512, offset: 160)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 512, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !325, file: !284, line: 67, baseType: !319, size: 32, offset: 672)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !325, file: !284, line: 69, baseType: !339, size: 256, offset: 704)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !284, line: 60, baseType: !340)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !284, line: 48, size: 256, elements: !341)
!341 = !{!342, !343, !350, !351}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !340, file: !284, line: 49, baseType: !288, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !340, file: !284, line: 58, baseType: !344, size: 128, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !345, line: 71, baseType: !346)
!345 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !345, line: 69, size: 128, elements: !347)
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !346, file: !345, line: 70, baseType: !288, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !346, file: !345, line: 70, baseType: !288, size: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !340, file: !284, line: 59, baseType: !319, size: 32, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !340, file: !284, line: 59, baseType: !319, size: 32, offset: 224)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !325, file: !284, line: 70, baseType: !319, size: 32, offset: 960)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !325, file: !284, line: 74, baseType: !319, size: 32, offset: 992)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !280, file: !279, line: 60, baseType: !355, size: 64, offset: 960)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !357, line: 45, flags: DIFlagFwdDecl)
!357 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!358 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !280, file: !279, line: 62, baseType: !359, size: 64, offset: 1024)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !75, line: 97, size: 832, elements: !361)
!361 = !{!362, !368, !369}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !360, file: !75, line: 98, baseType: !363, size: 768)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 768, elements: !365)
!364 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!365 = !{!366, !367}
!366 = !DISubrange(count: 8)
!367 = !DISubrange(count: 3)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !360, file: !75, line: 99, baseType: !319, size: 32, offset: 768)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !360, file: !75, line: 99, baseType: !319, size: 32, offset: 800)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !280, file: !279, line: 64, baseType: !371, size: 64, offset: 1088)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !357, line: 46, flags: DIFlagFwdDecl)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !280, file: !279, line: 65, baseType: !374, size: 64, offset: 1152)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !376, line: 45, flags: DIFlagFwdDecl)
!376 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!377 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !280, file: !279, line: 66, baseType: !378, size: 64, offset: 1216)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !376, line: 46, flags: DIFlagFwdDecl)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !280, file: !279, line: 67, baseType: !382, size: 64, offset: 1280)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !384, line: 154, size: 64, elements: !385)
!384 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !383, file: !384, line: 155, baseType: !319, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !383, file: !384, line: 156, baseType: !319, size: 32, offset: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !280, file: !279, line: 71, baseType: !389, size: 64, offset: 1344)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !384, line: 79, size: 96, elements: !391)
!391 = !{!392, !393, !394, !395, !396}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !390, file: !384, line: 81, baseType: !319, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !390, file: !384, line: 82, baseType: !319, size: 32, offset: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !390, file: !384, line: 83, baseType: !317, size: 16, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !390, file: !384, line: 84, baseType: !304, size: 8, offset: 80)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !390, file: !384, line: 84, baseType: !304, size: 8, offset: 88)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !280, file: !279, line: 72, baseType: !398, size: 64, offset: 1408)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !384, line: 93, size: 128, elements: !400)
!400 = !{!401, !488, !489, !490, !491, !492}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !399, file: !384, line: 94, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !404, line: 77, size: 15424, elements: !405)
!404 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!405 = !{!406, !407, !408, !411, !414, !417, !420, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !439, !440, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !469, !470, !471, !477, !478, !482}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !403, file: !404, line: 78, baseType: !283, size: 960)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !403, file: !404, line: 80, baseType: !303, size: 8192, offset: 960)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !403, file: !404, line: 82, baseType: !409, size: 64, offset: 9152)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !404, line: 43, flags: DIFlagFwdDecl)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !403, file: !404, line: 83, baseType: !412, size: 64, offset: 9216)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !284, line: 46, flags: DIFlagFwdDecl)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !403, file: !404, line: 86, baseType: !415, size: 64, offset: 9280)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !404, line: 41, flags: DIFlagFwdDecl)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !403, file: !404, line: 87, baseType: !418, size: 64, offset: 9344)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !404, line: 44, flags: DIFlagFwdDecl)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !403, file: !404, line: 89, baseType: !421, size: 512, offset: 9408)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, size: 512, elements: !422)
!422 = !{!366}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !403, file: !404, line: 90, baseType: !317, size: 16, offset: 9920)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !403, file: !404, line: 90, baseType: !317, size: 16, offset: 9936)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !403, file: !404, line: 92, baseType: !317, size: 16, offset: 9952)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !403, file: !404, line: 92, baseType: !317, size: 16, offset: 9968)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !403, file: !404, line: 93, baseType: !317, size: 16, offset: 9984)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !403, file: !404, line: 93, baseType: !317, size: 16, offset: 10000)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !403, file: !404, line: 94, baseType: !319, size: 32, offset: 10016)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !403, file: !404, line: 97, baseType: !317, size: 16, offset: 10048)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !403, file: !404, line: 97, baseType: !317, size: 16, offset: 10064)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !403, file: !404, line: 98, baseType: !317, size: 16, offset: 10080)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !403, file: !404, line: 98, baseType: !317, size: 16, offset: 10096)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !403, file: !404, line: 99, baseType: !317, size: 16, offset: 10112)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !403, file: !404, line: 99, baseType: !317, size: 16, offset: 10128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !403, file: !404, line: 100, baseType: !7, size: 32, offset: 10144)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !403, file: !404, line: 101, baseType: !438, size: 64, offset: 10176)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !403, file: !404, line: 103, baseType: !310, size: 64, offset: 10240)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !403, file: !404, line: 104, baseType: !441, size: 64, offset: 10304)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !284, line: 159, size: 448, elements: !443)
!443 = !{!444, !448, !449, !451, !452, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !442, file: !284, line: 161, baseType: !445, size: 64)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 2)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !442, file: !284, line: 162, baseType: !445, size: 64, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !442, file: !284, line: 163, baseType: !450, size: 32, offset: 128)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 32, elements: !446)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !442, file: !284, line: 164, baseType: !450, size: 32, offset: 160)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !442, file: !284, line: 165, baseType: !453, size: 128, offset: 192)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 128, elements: !446)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !442, file: !284, line: 166, baseType: !455, size: 128, offset: 320)
!455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 128, elements: !446)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !403, file: !404, line: 107, baseType: !364, size: 32, offset: 10368)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !403, file: !404, line: 108, baseType: !319, size: 32, offset: 10400)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !403, file: !404, line: 109, baseType: !317, size: 16, offset: 10432)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !403, file: !404, line: 110, baseType: !317, size: 16, offset: 10448)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !403, file: !404, line: 113, baseType: !319, size: 32, offset: 10464)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !403, file: !404, line: 113, baseType: !319, size: 32, offset: 10496)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !403, file: !404, line: 114, baseType: !304, size: 8, offset: 10528)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !403, file: !404, line: 114, baseType: !304, size: 8, offset: 10536)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !403, file: !404, line: 115, baseType: !317, size: 16, offset: 10544)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !403, file: !404, line: 116, baseType: !466, size: 128, offset: 10560)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 128, elements: !467)
!467 = !{!468}
!468 = !DISubrange(count: 4)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !403, file: !404, line: 119, baseType: !364, size: 32, offset: 10688)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !403, file: !404, line: 119, baseType: !364, size: 32, offset: 10720)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !403, file: !404, line: 122, baseType: !472, size: 512, offset: 10752)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !473, line: 182, baseType: !474)
!473 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !473, line: 180, size: 512, elements: !475)
!475 = !{!476}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !474, file: !473, line: 181, baseType: !334, size: 512)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !403, file: !404, line: 123, baseType: !304, size: 8, offset: 11264)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !403, file: !404, line: 125, baseType: !479, size: 56, offset: 11272)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 56, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 7)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !403, file: !404, line: 126, baseType: !483, size: 4096, offset: 11328)
!483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 4096, elements: !422)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !404, line: 69, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !404, line: 67, size: 512, elements: !486)
!486 = !{!487}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !485, file: !404, line: 68, baseType: !334, size: 512)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !399, file: !384, line: 95, baseType: !304, size: 8, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !399, file: !384, line: 95, baseType: !304, size: 8, offset: 72)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !399, file: !384, line: 96, baseType: !317, size: 16, offset: 80)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !399, file: !384, line: 96, baseType: !317, size: 16, offset: 96)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !399, file: !384, line: 96, baseType: !317, size: 16, offset: 112)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !280, file: !279, line: 73, baseType: !494, size: 64, offset: 1472)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !384, line: 88, size: 64, elements: !496)
!496 = !{!497, !498}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !495, file: !384, line: 89, baseType: !7, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !495, file: !384, line: 90, baseType: !7, size: 32, offset: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !280, file: !279, line: 74, baseType: !500, size: 64, offset: 1536)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !384, line: 109, size: 96, elements: !502)
!502 = !{!503, !505}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !501, file: !384, line: 110, baseType: !504, size: 64)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 64, elements: !446)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !501, file: !384, line: 111, baseType: !319, size: 32, offset: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !280, file: !279, line: 75, baseType: !507, size: 64, offset: 1600)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !384, line: 129, size: 32, elements: !509)
!509 = !{!510, !511, !512, !513}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !508, file: !384, line: 130, baseType: !304, size: 8)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !508, file: !384, line: 130, baseType: !304, size: 8, offset: 8)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !508, file: !384, line: 130, baseType: !304, size: 8, offset: 16)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !508, file: !384, line: 130, baseType: !304, size: 8, offset: 24)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !280, file: !279, line: 80, baseType: !515, size: 64, offset: 1664)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !384, line: 42, size: 160, elements: !517)
!517 = !{!518, !519, !520, !521, !522, !523, !524}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !516, file: !384, line: 43, baseType: !7, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !516, file: !384, line: 43, baseType: !7, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !516, file: !384, line: 43, baseType: !7, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !516, file: !384, line: 43, baseType: !7, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !516, file: !384, line: 44, baseType: !317, size: 16, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !516, file: !384, line: 45, baseType: !304, size: 8, offset: 144)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !516, file: !384, line: 45, baseType: !304, size: 8, offset: 152)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !280, file: !279, line: 81, baseType: !526, size: 64, offset: 1728)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !384, line: 160, size: 384, elements: !528)
!528 = !{!529, !532, !533, !534, !535, !536, !537}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !527, file: !384, line: 161, baseType: !530, size: 256)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 256, elements: !531)
!531 = !{!468, !447}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !527, file: !384, line: 162, baseType: !402, size: 64, offset: 256)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !527, file: !384, line: 163, baseType: !304, size: 8, offset: 320)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !527, file: !384, line: 163, baseType: !304, size: 8, offset: 328)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !527, file: !384, line: 164, baseType: !317, size: 16, offset: 336)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !527, file: !384, line: 164, baseType: !317, size: 16, offset: 352)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !527, file: !384, line: 164, baseType: !317, size: 16, offset: 368)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !280, file: !279, line: 82, baseType: !539, size: 64, offset: 1792)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !279, line: 136, size: 512, elements: !541)
!541 = !{!542, !543, !544, !546, !547, !548, !549, !550}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !540, file: !279, line: 137, baseType: !288, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !540, file: !279, line: 138, baseType: !530, size: 256, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !540, file: !279, line: 139, baseType: !545, size: 128, offset: 320)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !467)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !540, file: !279, line: 140, baseType: !304, size: 8, offset: 448)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !540, file: !279, line: 140, baseType: !304, size: 8, offset: 456)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !540, file: !279, line: 141, baseType: !317, size: 16, offset: 464)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !540, file: !279, line: 141, baseType: !317, size: 16, offset: 480)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !540, file: !279, line: 141, baseType: !317, size: 16, offset: 496)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !280, file: !279, line: 83, baseType: !552, size: 64, offset: 1856)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !384, line: 65, size: 160, elements: !554)
!554 = !{!555, !558, !560, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !553, file: !384, line: 66, baseType: !556, size: 96)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 96, elements: !557)
!557 = !{!367}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !553, file: !384, line: 67, baseType: !559, size: 48, offset: 96)
!559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 48, elements: !557)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !553, file: !384, line: 68, baseType: !304, size: 8, offset: 144)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !553, file: !384, line: 68, baseType: !304, size: 8, offset: 152)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !280, file: !279, line: 84, baseType: !563, size: 64, offset: 1920)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !384, line: 48, size: 96, elements: !565)
!565 = !{!566, !567, !568, !569, !570}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !564, file: !384, line: 49, baseType: !7, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !564, file: !384, line: 49, baseType: !7, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !564, file: !384, line: 50, baseType: !304, size: 8, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !564, file: !384, line: 50, baseType: !304, size: 8, offset: 72)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !564, file: !384, line: 51, baseType: !317, size: 16, offset: 80)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !280, file: !279, line: 85, baseType: !572, size: 64, offset: 1984)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !384, line: 59, size: 128, elements: !574)
!574 = !{!575, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !573, file: !384, line: 60, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !384, line: 54, size: 64, elements: !578)
!578 = !{!579, !580}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !577, file: !384, line: 55, baseType: !319, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !577, file: !384, line: 56, baseType: !364, size: 32, offset: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !573, file: !384, line: 61, baseType: !319, size: 32, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !573, file: !384, line: 62, baseType: !319, size: 32, offset: 96)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !280, file: !279, line: 89, baseType: !584, size: 64, offset: 2048)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !384, line: 74, size: 32, elements: !586)
!586 = !{!587, !588, !589, !590}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !585, file: !384, line: 75, baseType: !304, size: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !585, file: !384, line: 75, baseType: !304, size: 8, offset: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !585, file: !384, line: 75, baseType: !304, size: 8, offset: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !585, file: !384, line: 75, baseType: !304, size: 8, offset: 24)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !280, file: !279, line: 90, baseType: !592, size: 64, offset: 2112)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !280, file: !279, line: 93, baseType: !594, size: 64, offset: 2176)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !596, line: 54, size: 896, elements: !597)
!596 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!597 = !{!598, !792, !793, !794, !797, !798, !801, !802, !810, !814, !815, !816, !817, !818, !819, !2617}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !595, file: !596, line: 55, baseType: !599, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !62, line: 186, size: 8064, elements: !601)
!601 = !{!602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !615, !616, !617, !618, !679, !683, !687, !688, !689, !690, !691, !692, !693, !694, !748, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !600, file: !62, line: 187, baseType: !319, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !600, file: !62, line: 187, baseType: !319, size: 32, offset: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !600, file: !62, line: 187, baseType: !319, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !600, file: !62, line: 187, baseType: !319, size: 32, offset: 96)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !600, file: !62, line: 188, baseType: !319, size: 32, offset: 128)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !600, file: !62, line: 188, baseType: !319, size: 32, offset: 160)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !600, file: !62, line: 188, baseType: !319, size: 32, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !600, file: !62, line: 193, baseType: !304, size: 8, offset: 224)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !600, file: !62, line: 197, baseType: !304, size: 8, offset: 232)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !600, file: !62, line: 201, baseType: !612, size: 64, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !614, line: 39, flags: DIFlagFwdDecl)
!614 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!615 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !600, file: !62, line: 201, baseType: !612, size: 64, offset: 320)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !600, file: !62, line: 201, baseType: !612, size: 64, offset: 384)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !600, file: !62, line: 201, baseType: !612, size: 64, offset: 448)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !600, file: !62, line: 208, baseType: !619, size: 64, offset: 512)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !62, line: 103, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !62, line: 90, size: 448, elements: !623)
!623 = !{!624, !633, !638, !639, !640}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !622, file: !62, line: 91, baseType: !625, size: 128)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !62, line: 82, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !62, line: 64, size: 128, elements: !627)
!627 = !{!628, !629, !630, !631, !632}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !626, file: !62, line: 65, baseType: !288, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !626, file: !62, line: 66, baseType: !319, size: 32, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !626, file: !62, line: 73, baseType: !304, size: 8, offset: 96)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !626, file: !62, line: 74, baseType: !304, size: 8, offset: 104)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !626, file: !62, line: 80, baseType: !304, size: 8, offset: 112)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !622, file: !62, line: 92, baseType: !634, size: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !62, line: 180, size: 16, elements: !636)
!636 = !{!637}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !635, file: !62, line: 181, baseType: !317, size: 16)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !622, file: !62, line: 94, baseType: !556, size: 96, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !622, file: !62, line: 95, baseType: !556, size: 96, offset: 288)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !622, file: !62, line: 102, baseType: !641, size: 64, offset: 384)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !62, line: 110, size: 640, elements: !643)
!643 = !{!644, !645, !646, !648, !649, !672, !678}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !642, file: !62, line: 111, baseType: !625, size: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !642, file: !62, line: 112, baseType: !634, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !642, file: !62, line: 114, baseType: !647, size: 64, offset: 192)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !642, file: !62, line: 114, baseType: !647, size: 64, offset: 256)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !642, file: !62, line: 118, baseType: !650, size: 64, offset: 320)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !62, line: 125, size: 576, elements: !652)
!652 = !{!653, !654, !655, !656, !668, !669, !670, !671}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !651, file: !62, line: 126, baseType: !625, size: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !651, file: !62, line: 129, baseType: !647, size: 64, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !651, file: !62, line: 130, baseType: !641, size: 64, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !651, file: !62, line: 131, baseType: !657, size: 64, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !62, line: 164, size: 448, elements: !659)
!659 = !{!660, !661, !662, !665, !666, !667}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !658, file: !62, line: 165, baseType: !625, size: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !658, file: !62, line: 166, baseType: !634, size: 64, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !658, file: !62, line: 172, baseType: !663, size: 64, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !62, line: 140, baseType: !651)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !658, file: !62, line: 174, baseType: !319, size: 32, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !658, file: !62, line: 175, baseType: !556, size: 96, offset: 288)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !658, file: !62, line: 176, baseType: !317, size: 16, offset: 384)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !651, file: !62, line: 135, baseType: !650, size: 64, offset: 320)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !651, file: !62, line: 135, baseType: !650, size: 64, offset: 384)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !651, file: !62, line: 139, baseType: !650, size: 64, offset: 448)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !651, file: !62, line: 139, baseType: !650, size: 64, offset: 512)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !642, file: !62, line: 122, baseType: !673, size: 128, offset: 384)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !62, line: 108, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !62, line: 106, size: 128, elements: !675)
!675 = !{!676, !677}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !674, file: !62, line: 107, baseType: !641, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !674, file: !62, line: 107, baseType: !641, size: 64, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !642, file: !62, line: 122, baseType: !673, size: 128, offset: 512)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !600, file: !62, line: 209, baseType: !680, size: 64, offset: 576)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !62, line: 123, baseType: !642)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !600, file: !62, line: 210, baseType: !684, size: 64, offset: 640)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !62, line: 178, baseType: !658)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !600, file: !62, line: 213, baseType: !319, size: 32, offset: 704)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !600, file: !62, line: 214, baseType: !319, size: 32, offset: 736)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !600, file: !62, line: 215, baseType: !319, size: 32, offset: 768)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !600, file: !62, line: 218, baseType: !612, size: 64, offset: 832)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !600, file: !62, line: 218, baseType: !612, size: 64, offset: 896)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !600, file: !62, line: 218, baseType: !612, size: 64, offset: 960)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !600, file: !62, line: 220, baseType: !319, size: 32, offset: 1024)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !600, file: !62, line: 221, baseType: !695, size: 64, offset: 1088)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !6, line: 190, size: 10496, elements: !697)
!697 = !{!698, !734, !735, !741, !744, !745, !747}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !696, file: !6, line: 191, baseType: !699, size: 5120)
!699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !700, size: 5120, elements: !732)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !6, line: 147, size: 320, elements: !701)
!701 = !{!702, !705, !707, !717, !718}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !700, file: !6, line: 148, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !700, file: !6, line: 149, baseType: !706, size: 32, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !6, line: 112, baseType: !5)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !700, file: !6, line: 150, baseType: !708, size: 32, offset: 96)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !6, line: 142, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !6, line: 138, size: 32, elements: !710)
!710 = !{!711, !713, !715}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !709, file: !6, line: 139, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !6, line: 122, baseType: !17)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !709, file: !6, line: 140, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !6, line: 136, baseType: !23)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !709, file: !6, line: 141, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !6, line: 130, baseType: !29)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !700, file: !6, line: 152, baseType: !319, size: 32, offset: 128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !700, file: !6, line: 162, baseType: !719, size: 128, offset: 192)
!719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !700, file: !6, line: 155, size: 128, elements: !720)
!720 = !{!721, !722, !723, !724, !725, !727}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !719, file: !6, line: 156, baseType: !319, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !719, file: !6, line: 157, baseType: !364, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !719, file: !6, line: 158, baseType: !288, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !719, file: !6, line: 159, baseType: !556, size: 96)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !719, file: !6, line: 160, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !719, file: !6, line: 161, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !730, line: 48, baseType: !731)
!730 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!731 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !376, line: 51, flags: DIFlagFwdDecl)
!732 = !{!733}
!733 = !DISubrange(count: 16)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !696, file: !6, line: 192, baseType: !699, size: 5120, offset: 5120)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !696, file: !6, line: 193, baseType: !736, size: 64, offset: 10240)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !739, !695}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !62, line: 246, baseType: !600)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !696, file: !6, line: 194, baseType: !742, size: 64, offset: 10304)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !614, line: 38, flags: DIFlagFwdDecl)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !696, file: !6, line: 195, baseType: !319, size: 32, offset: 10368)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !696, file: !6, line: 196, baseType: !746, size: 32, offset: 10400)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !6, line: 188, baseType: !37)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !696, file: !6, line: 197, baseType: !319, size: 32, offset: 10432)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !600, file: !62, line: 223, baseType: !749, size: 1600, offset: 1152)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !233, line: 73, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !233, line: 64, size: 1600, elements: !751)
!751 = !{!752, !767, !771, !772, !773, !774, !775}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !750, file: !233, line: 65, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !233, line: 53, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !233, line: 42, size: 832, elements: !756)
!756 = !{!757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !755, file: !233, line: 43, baseType: !319, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !755, file: !233, line: 44, baseType: !319, size: 32, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !755, file: !233, line: 45, baseType: !319, size: 32, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !755, file: !233, line: 46, baseType: !319, size: 32, offset: 96)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !755, file: !233, line: 47, baseType: !319, size: 32, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !755, file: !233, line: 48, baseType: !319, size: 32, offset: 160)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !755, file: !233, line: 49, baseType: !319, size: 32, offset: 192)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !755, file: !233, line: 50, baseType: !319, size: 32, offset: 224)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !755, file: !233, line: 51, baseType: !334, size: 512, offset: 256)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !755, file: !233, line: 52, baseType: !288, size: 64, offset: 768)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !750, file: !233, line: 66, baseType: !768, size: 1312, offset: 64)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 1312, elements: !769)
!769 = !{!770}
!770 = !DISubrange(count: 41)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !750, file: !233, line: 69, baseType: !319, size: 32, offset: 1376)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !750, file: !233, line: 69, baseType: !319, size: 32, offset: 1408)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !750, file: !233, line: 70, baseType: !319, size: 32, offset: 1440)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !750, file: !233, line: 71, baseType: !612, size: 64, offset: 1472)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !750, file: !233, line: 72, baseType: !776, size: 64, offset: 1536)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !233, line: 59, baseType: !778)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !233, line: 57, size: 8192, elements: !779)
!779 = !{!780}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !778, file: !233, line: 58, baseType: !303, size: 8192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !600, file: !62, line: 223, baseType: !749, size: 1600, offset: 2752)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !600, file: !62, line: 223, baseType: !749, size: 1600, offset: 4352)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !600, file: !62, line: 223, baseType: !749, size: 1600, offset: 5952)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !600, file: !62, line: 233, baseType: !317, size: 16, offset: 7552)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !600, file: !62, line: 236, baseType: !319, size: 32, offset: 7584)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !600, file: !62, line: 238, baseType: !319, size: 32, offset: 7616)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !600, file: !62, line: 238, baseType: !319, size: 32, offset: 7648)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !600, file: !62, line: 239, baseType: !344, size: 128, offset: 7680)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !600, file: !62, line: 241, baseType: !685, size: 64, offset: 7808)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !600, file: !62, line: 243, baseType: !344, size: 128, offset: 7872)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !600, file: !62, line: 245, baseType: !288, size: 64, offset: 8000)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !595, file: !596, line: 58, baseType: !594, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !595, file: !596, line: 59, baseType: !319, size: 32, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !595, file: !596, line: 63, baseType: !795, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 192, elements: !557)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !595, file: !596, line: 64, baseType: !319, size: 32, offset: 256)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !595, file: !596, line: 67, baseType: !799, size: 64, offset: 320)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !596, line: 38, flags: DIFlagFwdDecl)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !595, file: !596, line: 67, baseType: !799, size: 64, offset: 384)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !595, file: !596, line: 68, baseType: !803, size: 64, offset: 448)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !804, line: 48, baseType: !805)
!804 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !806, line: 27, baseType: !807)
!806 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !808, line: 45, baseType: !809)
!808 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!809 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !595, file: !596, line: 69, baseType: !811, size: 64, offset: 512)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 32, elements: !467)
!813 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !595, file: !596, line: 70, baseType: !319, size: 32, offset: 576)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !595, file: !596, line: 71, baseType: !811, size: 64, offset: 640)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !595, file: !596, line: 72, baseType: !319, size: 32, offset: 704)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !595, file: !596, line: 75, baseType: !317, size: 16, offset: 736)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !595, file: !596, line: 76, baseType: !317, size: 16, offset: 752)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !595, file: !596, line: 79, baseType: !820, size: 64, offset: 768)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !75, line: 115, size: 11392, elements: !822)
!822 = !{!823, !824, !825, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !912, !913, !953, !954, !958, !959, !975, !976, !977, !978, !979, !980, !981, !982, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1071, !1074, !1078, !1079, !1080, !1081, !1082, !1085, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1098, !1101, !1104, !1105, !2605, !2606}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !821, file: !75, line: 116, baseType: !283, size: 960)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !821, file: !75, line: 117, baseType: !355, size: 64, offset: 960)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !821, file: !75, line: 119, baseType: !826, size: 64, offset: 1024)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !828, line: 155, size: 1856, elements: !829)
!828 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!829 = !{!830, !833, !834, !835, !836, !837, !838, !840, !843, !845, !849, !850, !851, !852, !853, !856, !859, !860, !861, !862, !863, !867, !868, !869, !870, !871, !874, !875, !878, !881, !882, !883, !884}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !827, file: !828, line: 157, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !828, line: 157, flags: DIFlagFwdDecl)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !827, file: !828, line: 158, baseType: !552, size: 64, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !827, file: !828, line: 159, baseType: !389, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !827, file: !828, line: 160, baseType: !494, size: 64, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !827, file: !828, line: 161, baseType: !319, size: 32, offset: 256)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !827, file: !828, line: 161, baseType: !319, size: 32, offset: 288)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !827, file: !828, line: 162, baseType: !839, size: 64, offset: 320)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !827, file: !828, line: 163, baseType: !841, size: 64, offset: 384)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !828, line: 163, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !827, file: !828, line: 164, baseType: !844, size: 64, offset: 448)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !827, file: !828, line: 167, baseType: !846, size: 64, offset: 512)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !828, line: 44, flags: DIFlagFwdDecl)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !827, file: !828, line: 170, baseType: !599, size: 64, offset: 576)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !827, file: !828, line: 171, baseType: !319, size: 32, offset: 640)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !827, file: !828, line: 172, baseType: !319, size: 32, offset: 672)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !827, file: !828, line: 173, baseType: !813, size: 8, offset: 704)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !827, file: !828, line: 175, baseType: !854, size: 64, offset: 768)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !828, line: 175, flags: DIFlagFwdDecl)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !827, file: !828, line: 178, baseType: !857, size: 64, offset: 832)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !828, line: 55, flags: DIFlagFwdDecl)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !827, file: !828, line: 179, baseType: !813, size: 8, offset: 896)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !827, file: !828, line: 182, baseType: !813, size: 8, offset: 904)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !827, file: !828, line: 183, baseType: !839, size: 64, offset: 960)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !827, file: !828, line: 184, baseType: !839, size: 64, offset: 1024)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !827, file: !828, line: 185, baseType: !864, size: 64, offset: 1088)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 288, elements: !866)
!866 = !{!367, !367}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !827, file: !828, line: 188, baseType: !813, size: 8, offset: 1152)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !827, file: !828, line: 191, baseType: !7, size: 32, offset: 1184)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !827, file: !828, line: 191, baseType: !438, size: 64, offset: 1216)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !827, file: !828, line: 191, baseType: !7, size: 32, offset: 1280)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !827, file: !828, line: 192, baseType: !872, size: 64, offset: 1344)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !828, line: 61, flags: DIFlagFwdDecl)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !827, file: !828, line: 195, baseType: !839, size: 64, offset: 1408)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !827, file: !828, line: 197, baseType: !876, size: 64, offset: 1472)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !828, line: 197, flags: DIFlagFwdDecl)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !827, file: !828, line: 198, baseType: !879, size: 64, offset: 1536)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !828, line: 59, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !827, file: !828, line: 201, baseType: !813, size: 8, offset: 1600)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !827, file: !828, line: 202, baseType: !556, size: 96, offset: 1632)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !827, file: !828, line: 204, baseType: !556, size: 96, offset: 1728)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !827, file: !828, line: 205, baseType: !319, size: 32, offset: 1824)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !821, file: !75, line: 121, baseType: !317, size: 16, offset: 1088)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !821, file: !75, line: 121, baseType: !317, size: 16, offset: 1104)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !821, file: !75, line: 122, baseType: !319, size: 32, offset: 1120)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !821, file: !75, line: 122, baseType: !319, size: 32, offset: 1152)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !821, file: !75, line: 122, baseType: !319, size: 32, offset: 1184)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !821, file: !75, line: 123, baseType: !334, size: 512, offset: 1216)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !821, file: !75, line: 124, baseType: !820, size: 64, offset: 1728)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !821, file: !75, line: 124, baseType: !820, size: 64, offset: 1792)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !821, file: !75, line: 127, baseType: !820, size: 64, offset: 1856)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !821, file: !75, line: 127, baseType: !820, size: 64, offset: 1920)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !821, file: !75, line: 127, baseType: !820, size: 64, offset: 1984)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !821, file: !75, line: 128, baseType: !371, size: 64, offset: 2048)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !821, file: !75, line: 130, baseType: !359, size: 64, offset: 2112)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !821, file: !75, line: 131, baseType: !899, size: 64, offset: 2176)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !901, line: 486, size: 1600, elements: !902)
!901 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!902 = !{!903, !904, !905, !906, !907, !908, !909, !910, !911}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !900, file: !901, line: 487, baseType: !283, size: 960)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !900, file: !901, line: 489, baseType: !344, size: 128, offset: 960)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !900, file: !901, line: 490, baseType: !344, size: 128, offset: 1088)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !900, file: !901, line: 491, baseType: !344, size: 128, offset: 1216)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !900, file: !901, line: 492, baseType: !344, size: 128, offset: 1344)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !900, file: !901, line: 494, baseType: !319, size: 32, offset: 1472)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !900, file: !901, line: 495, baseType: !319, size: 32, offset: 1504)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !900, file: !901, line: 497, baseType: !319, size: 32, offset: 1536)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !900, file: !901, line: 498, baseType: !319, size: 32, offset: 1568)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !821, file: !75, line: 132, baseType: !899, size: 64, offset: 2240)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !821, file: !75, line: 133, baseType: !914, size: 64, offset: 2304)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !901, line: 334, size: 1728, elements: !916)
!916 = !{!917, !918, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !952}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !915, file: !901, line: 335, baseType: !344, size: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !915, file: !901, line: 336, baseType: !919, size: 64, offset: 128)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !915, file: !901, line: 338, baseType: !317, size: 16, offset: 192)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !915, file: !901, line: 338, baseType: !317, size: 16, offset: 208)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !915, file: !901, line: 339, baseType: !7, size: 32, offset: 224)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !915, file: !901, line: 340, baseType: !319, size: 32, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !915, file: !901, line: 342, baseType: !364, size: 32, offset: 288)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !915, file: !901, line: 343, baseType: !556, size: 96, offset: 320)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !915, file: !901, line: 344, baseType: !556, size: 96, offset: 416)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !915, file: !901, line: 347, baseType: !344, size: 128, offset: 512)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !915, file: !901, line: 349, baseType: !319, size: 32, offset: 640)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !915, file: !901, line: 350, baseType: !319, size: 32, offset: 672)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !915, file: !901, line: 351, baseType: !288, size: 64, offset: 704)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !915, file: !901, line: 352, baseType: !288, size: 64, offset: 768)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !915, file: !901, line: 354, baseType: !933, size: 384, offset: 832)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !901, line: 116, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !901, line: 94, size: 384, elements: !935)
!935 = !{!936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !934, file: !901, line: 96, baseType: !319, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !934, file: !901, line: 96, baseType: !319, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !934, file: !901, line: 97, baseType: !319, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !934, file: !901, line: 97, baseType: !319, size: 32, offset: 96)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !934, file: !901, line: 99, baseType: !317, size: 16, offset: 128)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !934, file: !901, line: 100, baseType: !317, size: 16, offset: 144)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !934, file: !901, line: 102, baseType: !317, size: 16, offset: 160)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !934, file: !901, line: 105, baseType: !317, size: 16, offset: 176)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !934, file: !901, line: 108, baseType: !317, size: 16, offset: 192)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !934, file: !901, line: 109, baseType: !317, size: 16, offset: 208)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !934, file: !901, line: 111, baseType: !317, size: 16, offset: 224)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !934, file: !901, line: 112, baseType: !317, size: 16, offset: 240)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !934, file: !901, line: 114, baseType: !319, size: 32, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !934, file: !901, line: 114, baseType: !319, size: 32, offset: 288)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !934, file: !901, line: 115, baseType: !319, size: 32, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !934, file: !901, line: 115, baseType: !319, size: 32, offset: 352)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !915, file: !901, line: 355, baseType: !334, size: 512, offset: 1216)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !821, file: !75, line: 134, baseType: !288, size: 64, offset: 2368)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !821, file: !75, line: 136, baseType: !955, size: 64, offset: 2432)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !957, line: 45, flags: DIFlagFwdDecl)
!957 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!958 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !821, file: !75, line: 138, baseType: !933, size: 384, offset: 2496)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !821, file: !75, line: 139, baseType: !960, size: 64, offset: 2880)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !901, line: 80, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !901, line: 72, size: 192, elements: !963)
!963 = !{!964, !971, !972, !973, !974}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !962, file: !901, line: 73, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !901, line: 59, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !901, line: 56, size: 128, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !967, file: !901, line: 57, baseType: !556, size: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !967, file: !901, line: 58, baseType: !319, size: 32, offset: 96)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !962, file: !901, line: 74, baseType: !319, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !962, file: !901, line: 76, baseType: !319, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !962, file: !901, line: 77, baseType: !319, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !962, file: !901, line: 79, baseType: !319, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !821, file: !75, line: 141, baseType: !344, size: 128, offset: 2944)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !821, file: !75, line: 142, baseType: !344, size: 128, offset: 3072)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !821, file: !75, line: 143, baseType: !344, size: 128, offset: 3200)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !821, file: !75, line: 144, baseType: !344, size: 128, offset: 3328)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !821, file: !75, line: 146, baseType: !319, size: 32, offset: 3456)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !821, file: !75, line: 147, baseType: !319, size: 32, offset: 3488)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !821, file: !75, line: 150, baseType: !378, size: 64, offset: 3520)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !821, file: !75, line: 151, baseType: !983, size: 64, offset: 3584)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !821, file: !75, line: 152, baseType: !319, size: 32, offset: 3648)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !821, file: !75, line: 153, baseType: !319, size: 32, offset: 3680)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !821, file: !75, line: 156, baseType: !556, size: 96, offset: 3712)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !821, file: !75, line: 156, baseType: !556, size: 96, offset: 3808)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !821, file: !75, line: 156, baseType: !556, size: 96, offset: 3904)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !821, file: !75, line: 157, baseType: !556, size: 96, offset: 4000)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !821, file: !75, line: 158, baseType: !556, size: 96, offset: 4096)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !821, file: !75, line: 159, baseType: !556, size: 96, offset: 4192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !821, file: !75, line: 160, baseType: !556, size: 96, offset: 4288)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !821, file: !75, line: 160, baseType: !556, size: 96, offset: 4384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !821, file: !75, line: 161, baseType: !466, size: 128, offset: 4480)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !821, file: !75, line: 161, baseType: !466, size: 128, offset: 4608)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !821, file: !75, line: 162, baseType: !556, size: 96, offset: 4736)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !821, file: !75, line: 162, baseType: !556, size: 96, offset: 4832)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !821, file: !75, line: 163, baseType: !364, size: 32, offset: 4928)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !821, file: !75, line: 163, baseType: !364, size: 32, offset: 4960)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !821, file: !75, line: 164, baseType: !1001, size: 512, offset: 4992)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 512, elements: !1002)
!1002 = !{!468, !468}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !821, file: !75, line: 165, baseType: !1001, size: 512, offset: 5504)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !821, file: !75, line: 166, baseType: !1001, size: 512, offset: 6016)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !821, file: !75, line: 167, baseType: !1001, size: 512, offset: 6528)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !821, file: !75, line: 176, baseType: !1001, size: 512, offset: 7040)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !821, file: !75, line: 178, baseType: !7, size: 32, offset: 7552)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !821, file: !75, line: 180, baseType: !317, size: 16, offset: 7584)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !821, file: !75, line: 181, baseType: !317, size: 16, offset: 7600)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !821, file: !75, line: 183, baseType: !317, size: 16, offset: 7616)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !821, file: !75, line: 183, baseType: !317, size: 16, offset: 7632)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !821, file: !75, line: 184, baseType: !317, size: 16, offset: 7648)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !821, file: !75, line: 184, baseType: !317, size: 16, offset: 7664)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !821, file: !75, line: 185, baseType: !317, size: 16, offset: 7680)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !821, file: !75, line: 186, baseType: !317, size: 16, offset: 7696)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !821, file: !75, line: 187, baseType: !317, size: 16, offset: 7712)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !821, file: !75, line: 188, baseType: !304, size: 8, offset: 7728)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !821, file: !75, line: 189, baseType: !304, size: 8, offset: 7736)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !821, file: !75, line: 192, baseType: !319, size: 32, offset: 7744)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !821, file: !75, line: 192, baseType: !319, size: 32, offset: 7776)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !821, file: !75, line: 192, baseType: !319, size: 32, offset: 7808)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !821, file: !75, line: 192, baseType: !319, size: 32, offset: 7840)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !821, file: !75, line: 194, baseType: !319, size: 32, offset: 7872)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !821, file: !75, line: 202, baseType: !364, size: 32, offset: 7904)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !821, file: !75, line: 202, baseType: !364, size: 32, offset: 7936)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !821, file: !75, line: 202, baseType: !364, size: 32, offset: 7968)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !821, file: !75, line: 211, baseType: !364, size: 32, offset: 8000)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !821, file: !75, line: 212, baseType: !364, size: 32, offset: 8032)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !821, file: !75, line: 213, baseType: !364, size: 32, offset: 8064)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !821, file: !75, line: 214, baseType: !364, size: 32, offset: 8096)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !821, file: !75, line: 215, baseType: !364, size: 32, offset: 8128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !821, file: !75, line: 216, baseType: !364, size: 32, offset: 8160)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !821, file: !75, line: 219, baseType: !364, size: 32, offset: 8192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !821, file: !75, line: 220, baseType: !364, size: 32, offset: 8224)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !821, file: !75, line: 221, baseType: !364, size: 32, offset: 8256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !821, file: !75, line: 224, baseType: !1037, size: 16, offset: 8288)
!1037 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !821, file: !75, line: 224, baseType: !1037, size: 16, offset: 8304)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !821, file: !75, line: 226, baseType: !317, size: 16, offset: 8320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !821, file: !75, line: 228, baseType: !304, size: 8, offset: 8336)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !821, file: !75, line: 229, baseType: !304, size: 8, offset: 8344)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !821, file: !75, line: 231, baseType: !317, size: 16, offset: 8352)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !821, file: !75, line: 232, baseType: !304, size: 8, offset: 8368)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !821, file: !75, line: 233, baseType: !304, size: 8, offset: 8376)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !821, file: !75, line: 234, baseType: !364, size: 32, offset: 8384)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !821, file: !75, line: 235, baseType: !364, size: 32, offset: 8416)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !821, file: !75, line: 237, baseType: !344, size: 128, offset: 8448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !821, file: !75, line: 238, baseType: !344, size: 128, offset: 8576)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !821, file: !75, line: 239, baseType: !344, size: 128, offset: 8704)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !821, file: !75, line: 240, baseType: !344, size: 128, offset: 8832)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !821, file: !75, line: 242, baseType: !364, size: 32, offset: 8960)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !821, file: !75, line: 244, baseType: !317, size: 16, offset: 8992)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !821, file: !75, line: 245, baseType: !1037, size: 16, offset: 9008)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !821, file: !75, line: 246, baseType: !466, size: 128, offset: 9024)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !821, file: !75, line: 248, baseType: !319, size: 32, offset: 9152)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !821, file: !75, line: 249, baseType: !319, size: 32, offset: 9184)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !821, file: !75, line: 251, baseType: !1058, size: 64, offset: 9216)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !75, line: 251, flags: DIFlagFwdDecl)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !821, file: !75, line: 253, baseType: !304, size: 8, offset: 9280)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !821, file: !75, line: 254, baseType: !304, size: 8, offset: 9288)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !821, file: !75, line: 255, baseType: !317, size: 16, offset: 9296)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !821, file: !75, line: 256, baseType: !556, size: 96, offset: 9312)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !821, file: !75, line: 258, baseType: !344, size: 128, offset: 9408)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !821, file: !75, line: 259, baseType: !344, size: 128, offset: 9536)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !821, file: !75, line: 260, baseType: !344, size: 128, offset: 9664)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !821, file: !75, line: 261, baseType: !344, size: 128, offset: 9792)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !821, file: !75, line: 263, baseType: !1069, size: 64, offset: 9920)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !75, line: 52, flags: DIFlagFwdDecl)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !821, file: !75, line: 264, baseType: !1072, size: 64, offset: 9984)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !75, line: 53, flags: DIFlagFwdDecl)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !821, file: !75, line: 265, baseType: !1075, size: 64, offset: 10048)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1077, line: 43, flags: DIFlagFwdDecl)
!1077 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !821, file: !75, line: 267, baseType: !304, size: 8, offset: 10112)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !821, file: !75, line: 268, baseType: !304, size: 8, offset: 10120)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !821, file: !75, line: 269, baseType: !317, size: 16, offset: 10128)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !821, file: !75, line: 270, baseType: !364, size: 32, offset: 10144)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !821, file: !75, line: 272, baseType: !1083, size: 64, offset: 10176)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !75, line: 54, flags: DIFlagFwdDecl)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !821, file: !75, line: 275, baseType: !1086, size: 64, offset: 10240)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !75, line: 275, flags: DIFlagFwdDecl)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !821, file: !75, line: 277, baseType: !799, size: 64, offset: 10304)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !821, file: !75, line: 277, baseType: !799, size: 64, offset: 10368)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !821, file: !75, line: 278, baseType: !805, size: 64, offset: 10432)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !821, file: !75, line: 279, baseType: !805, size: 64, offset: 10496)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !821, file: !75, line: 280, baseType: !7, size: 32, offset: 10560)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !821, file: !75, line: 281, baseType: !7, size: 32, offset: 10592)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !821, file: !75, line: 283, baseType: !344, size: 128, offset: 10624)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !821, file: !75, line: 284, baseType: !344, size: 128, offset: 10752)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !821, file: !75, line: 285, baseType: !1097, size: 64, offset: 10880)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !821, file: !75, line: 287, baseType: !1099, size: 64, offset: 10944)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !75, line: 59, flags: DIFlagFwdDecl)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !821, file: !75, line: 288, baseType: !1102, size: 64, offset: 11008)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !75, line: 288, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !821, file: !75, line: 290, baseType: !504, size: 64, offset: 11072)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !821, file: !75, line: 291, baseType: !1106, size: 64, offset: 11136)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !404, line: 65, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !404, line: 50, size: 320, elements: !1109)
!1109 = !{!1110, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1108, file: !404, line: 51, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1113, line: 1216, size: 39680, elements: !1114)
!1113 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1114 = !{!1115, !1116, !1117, !1118, !1121, !1122, !1123, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1149, !1222, !1567, !2226, !2229, !2468, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2490, !2491, !2492, !2493, !2494, !2502, !2568, !2575, !2576, !2583, !2584, !2585, !2586, !2587, !2588, !2589}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1112, file: !1113, line: 1217, baseType: !283, size: 960)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1112, file: !1113, line: 1218, baseType: !355, size: 64, offset: 960)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1112, file: !1113, line: 1220, baseType: !820, size: 64, offset: 1024)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1112, file: !1113, line: 1221, baseType: !1119, size: 64, offset: 1088)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1113, line: 52, flags: DIFlagFwdDecl)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1112, file: !1113, line: 1223, baseType: !1111, size: 64, offset: 1152)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1112, file: !1113, line: 1225, baseType: !344, size: 128, offset: 1216)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1112, file: !1113, line: 1226, baseType: !1124, size: 64, offset: 1344)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1113, line: 69, size: 320, elements: !1126)
!1126 = !{!1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1125, file: !1113, line: 70, baseType: !1124, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1125, file: !1113, line: 70, baseType: !1124, size: 64, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1125, file: !1113, line: 71, baseType: !7, size: 32, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1125, file: !1113, line: 71, baseType: !7, size: 32, offset: 160)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1125, file: !1113, line: 72, baseType: !319, size: 32, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1125, file: !1113, line: 73, baseType: !317, size: 16, offset: 224)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1125, file: !1113, line: 73, baseType: !317, size: 16, offset: 240)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1125, file: !1113, line: 74, baseType: !820, size: 64, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1112, file: !1113, line: 1227, baseType: !820, size: 64, offset: 1408)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1112, file: !1113, line: 1229, baseType: !556, size: 96, offset: 1472)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1112, file: !1113, line: 1230, baseType: !556, size: 96, offset: 1568)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1112, file: !1113, line: 1231, baseType: !556, size: 96, offset: 1664)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1112, file: !1113, line: 1231, baseType: !556, size: 96, offset: 1760)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1112, file: !1113, line: 1233, baseType: !7, size: 32, offset: 1856)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1112, file: !1113, line: 1234, baseType: !319, size: 32, offset: 1888)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1112, file: !1113, line: 1235, baseType: !7, size: 32, offset: 1920)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1112, file: !1113, line: 1237, baseType: !317, size: 16, offset: 1952)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1112, file: !1113, line: 1239, baseType: !304, size: 8, offset: 1968)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1112, file: !1113, line: 1240, baseType: !1146, size: 8, offset: 1976)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 8, elements: !1147)
!1147 = !{!1148}
!1148 = !DISubrange(count: 1)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1112, file: !1113, line: 1242, baseType: !1150, size: 64, offset: 1984)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1152, line: 328, size: 3456, elements: !1153)
!1152 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1153 = !{!1154, !1155, !1156, !1159, !1160, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1188, !1189, !1190, !1193, !1198, !1199, !1202, !1206, !1210, !1214, !1218, !1219, !1220, !1221}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1151, file: !1152, line: 329, baseType: !283, size: 960)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1151, file: !1152, line: 330, baseType: !355, size: 64, offset: 960)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1151, file: !1152, line: 332, baseType: !1157, size: 64, offset: 1024)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1152, line: 332, flags: DIFlagFwdDecl)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1151, file: !1152, line: 333, baseType: !334, size: 512, offset: 1088)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1151, file: !1152, line: 335, baseType: !1161, size: 64, offset: 1600)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !105, line: 41, flags: DIFlagFwdDecl)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1151, file: !1152, line: 337, baseType: !955, size: 64, offset: 1664)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1151, file: !1152, line: 338, baseType: !504, size: 64, offset: 1728)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1151, file: !1152, line: 340, baseType: !344, size: 128, offset: 1792)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1151, file: !1152, line: 340, baseType: !344, size: 128, offset: 1920)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1151, file: !1152, line: 342, baseType: !319, size: 32, offset: 2048)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1151, file: !1152, line: 342, baseType: !319, size: 32, offset: 2080)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1151, file: !1152, line: 343, baseType: !319, size: 32, offset: 2112)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1151, file: !1152, line: 345, baseType: !319, size: 32, offset: 2144)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1151, file: !1152, line: 346, baseType: !319, size: 32, offset: 2176)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1151, file: !1152, line: 347, baseType: !317, size: 16, offset: 2208)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1151, file: !1152, line: 348, baseType: !317, size: 16, offset: 2224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1151, file: !1152, line: 349, baseType: !319, size: 32, offset: 2240)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1151, file: !1152, line: 351, baseType: !319, size: 32, offset: 2272)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1151, file: !1152, line: 353, baseType: !317, size: 16, offset: 2304)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1151, file: !1152, line: 354, baseType: !317, size: 16, offset: 2320)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1151, file: !1152, line: 355, baseType: !319, size: 32, offset: 2336)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1151, file: !1152, line: 357, baseType: !1180, size: 128, offset: 2368)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1181, line: 95, baseType: !1182)
!1181 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1181, line: 92, size: 128, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1182, file: !1181, line: 93, baseType: !364, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1182, file: !1181, line: 93, baseType: !364, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1182, file: !1181, line: 94, baseType: !364, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1182, file: !1181, line: 94, baseType: !364, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1151, file: !1152, line: 363, baseType: !344, size: 128, offset: 2496)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1151, file: !1152, line: 363, baseType: !344, size: 128, offset: 2624)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1151, file: !1152, line: 368, baseType: !1191, size: 64, offset: 2752)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1152, line: 48, flags: DIFlagFwdDecl)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1151, file: !1152, line: 372, baseType: !1194, size: 32, offset: 2816)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1152, line: 274, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1152, line: 271, size: 32, elements: !1196)
!1196 = !{!1197}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1195, file: !1152, line: 273, baseType: !7, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1151, file: !1152, line: 373, baseType: !319, size: 32, offset: 2848)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1151, file: !1152, line: 382, baseType: !1200, size: 64, offset: 2880)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1152, line: 46, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1151, file: !1152, line: 385, baseType: !1203, size: 64, offset: 2944)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !288, !364}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1151, file: !1152, line: 386, baseType: !1207, size: 64, offset: 3008)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{null, !288, !983}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1151, file: !1152, line: 387, baseType: !1211, size: 64, offset: 3072)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!319, !288}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1151, file: !1152, line: 388, baseType: !1215, size: 64, offset: 3136)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{null, !288}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1151, file: !1152, line: 389, baseType: !288, size: 64, offset: 3200)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1151, file: !1152, line: 389, baseType: !288, size: 64, offset: 3264)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1151, file: !1152, line: 389, baseType: !288, size: 64, offset: 3328)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1151, file: !1152, line: 389, baseType: !288, size: 64, offset: 3392)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1112, file: !1113, line: 1244, baseType: !1223, size: 64, offset: 2048)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1225, line: 200, size: 17024, elements: !1226)
!1225 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1226 = !{!1227, !1228, !1229, !1230, !1560, !1561, !1562, !1563, !1564, !1565, !1566}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1224, file: !1225, line: 201, baseType: !1097, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1224, file: !1225, line: 202, baseType: !344, size: 128, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1224, file: !1225, line: 203, baseType: !344, size: 128, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1224, file: !1225, line: 206, baseType: !1231, size: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1225, line: 190, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1225, line: 126, size: 2816, elements: !1234)
!1234 = !{!1235, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1326, !1327, !1328, !1329, !1531, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1559}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1233, file: !1225, line: 127, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1233, file: !1225, line: 127, baseType: !1236, size: 64, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1233, file: !1225, line: 128, baseType: !288, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1233, file: !1225, line: 129, baseType: !288, size: 64, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1233, file: !1225, line: 130, baseType: !334, size: 512, offset: 256)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1233, file: !1225, line: 132, baseType: !319, size: 32, offset: 768)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1233, file: !1225, line: 132, baseType: !319, size: 32, offset: 800)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1233, file: !1225, line: 133, baseType: !319, size: 32, offset: 832)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1233, file: !1225, line: 134, baseType: !319, size: 32, offset: 864)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1233, file: !1225, line: 134, baseType: !319, size: 32, offset: 896)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1233, file: !1225, line: 134, baseType: !319, size: 32, offset: 928)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1233, file: !1225, line: 135, baseType: !319, size: 32, offset: 960)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1233, file: !1225, line: 135, baseType: !319, size: 32, offset: 992)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1233, file: !1225, line: 136, baseType: !319, size: 32, offset: 1024)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1233, file: !1225, line: 136, baseType: !319, size: 32, offset: 1056)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1233, file: !1225, line: 137, baseType: !319, size: 32, offset: 1088)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1233, file: !1225, line: 137, baseType: !319, size: 32, offset: 1120)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1233, file: !1225, line: 138, baseType: !364, size: 32, offset: 1152)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1233, file: !1225, line: 139, baseType: !364, size: 32, offset: 1184)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1233, file: !1225, line: 139, baseType: !364, size: 32, offset: 1216)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1233, file: !1225, line: 141, baseType: !317, size: 16, offset: 1248)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1233, file: !1225, line: 142, baseType: !317, size: 16, offset: 1264)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1233, file: !1225, line: 143, baseType: !319, size: 32, offset: 1280)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1233, file: !1225, line: 144, baseType: !319, size: 32, offset: 1312)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1233, file: !1225, line: 146, baseType: !1261, size: 64, offset: 1344)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1225, line: 114, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1225, line: 99, size: 7232, elements: !1264)
!1264 = !{!1265, !1267, !1268, !1269, !1270, !1271, !1272, !1283, !1287, !1299, !1308, !1315, !1325}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1263, file: !1225, line: 100, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1263, file: !1225, line: 100, baseType: !1266, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1263, file: !1225, line: 101, baseType: !319, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1263, file: !1225, line: 101, baseType: !319, size: 32, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1263, file: !1225, line: 102, baseType: !319, size: 32, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1263, file: !1225, line: 102, baseType: !319, size: 32, offset: 224)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1263, file: !1225, line: 103, baseType: !1273, size: 64, offset: 256)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1225, line: 59, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1225, line: 56, size: 2112, elements: !1276)
!1276 = !{!1277, !1281, !1282}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1275, file: !1225, line: 57, baseType: !1278, size: 2048)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 2048, elements: !1279)
!1279 = !{!1280}
!1280 = !DISubrange(count: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1275, file: !1225, line: 58, baseType: !319, size: 32, offset: 2048)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1275, file: !1225, line: 58, baseType: !319, size: 32, offset: 2080)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1263, file: !1225, line: 106, baseType: !1284, size: 6144, offset: 320)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 6144, elements: !1285)
!1285 = !{!1286}
!1286 = !DISubrange(count: 768)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1263, file: !1225, line: 107, baseType: !1288, size: 64, offset: 6464)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1225, line: 97, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1225, line: 83, size: 8320, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296, !1297, !1298}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1290, file: !1225, line: 84, baseType: !1284, size: 6144)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1290, file: !1225, line: 87, baseType: !1278, size: 2048, offset: 6144)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1290, file: !1225, line: 88, baseType: !415, size: 64, offset: 8192)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1290, file: !1225, line: 90, baseType: !317, size: 16, offset: 8256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1290, file: !1225, line: 92, baseType: !317, size: 16, offset: 8272)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1290, file: !1225, line: 93, baseType: !317, size: 16, offset: 8288)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1290, file: !1225, line: 95, baseType: !317, size: 16, offset: 8304)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1263, file: !1225, line: 108, baseType: !1300, size: 64, offset: 6528)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1225, line: 66, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1225, line: 61, size: 128, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1302, file: !1225, line: 62, baseType: !319, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1302, file: !1225, line: 63, baseType: !319, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1302, file: !1225, line: 64, baseType: !319, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1302, file: !1225, line: 65, baseType: !319, size: 32, offset: 96)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1263, file: !1225, line: 109, baseType: !1309, size: 64, offset: 6592)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1225, line: 71, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1225, line: 68, size: 64, elements: !1312)
!1312 = !{!1313, !1314}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1311, file: !1225, line: 69, baseType: !319, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1311, file: !1225, line: 70, baseType: !319, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1263, file: !1225, line: 110, baseType: !1316, size: 64, offset: 6656)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1225, line: 81, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1225, line: 73, size: 352, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1318, file: !1225, line: 74, baseType: !556, size: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1318, file: !1225, line: 75, baseType: !556, size: 96, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1318, file: !1225, line: 76, baseType: !556, size: 96, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1318, file: !1225, line: 77, baseType: !319, size: 32, offset: 288)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1318, file: !1225, line: 78, baseType: !319, size: 32, offset: 320)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1263, file: !1225, line: 113, baseType: !472, size: 512, offset: 6720)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1233, file: !1225, line: 148, baseType: !371, size: 64, offset: 1408)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1233, file: !1225, line: 151, baseType: !1111, size: 64, offset: 1472)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1233, file: !1225, line: 152, baseType: !820, size: 64, offset: 1536)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1233, file: !1225, line: 153, baseType: !1330, size: 64, offset: 1600)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1332, line: 64, size: 19136, elements: !1333)
!1332 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1339, !1341, !1342, !1343, !1344, !1347, !1348, !1517, !1518, !1526, !1527, !1528, !1529, !1530}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1331, file: !1332, line: 65, baseType: !283, size: 960)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1331, file: !1332, line: 66, baseType: !355, size: 64, offset: 960)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1331, file: !1332, line: 68, baseType: !303, size: 8192, offset: 1024)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1331, file: !1332, line: 70, baseType: !319, size: 32, offset: 9216)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1331, file: !1332, line: 71, baseType: !319, size: 32, offset: 9248)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1331, file: !1332, line: 72, baseType: !1340, size: 64, offset: 9280)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 64, elements: !446)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1331, file: !1332, line: 74, baseType: !364, size: 32, offset: 9344)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1331, file: !1332, line: 74, baseType: !364, size: 32, offset: 9376)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1331, file: !1332, line: 76, baseType: !415, size: 64, offset: 9408)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1331, file: !1332, line: 77, baseType: !1345, size: 64, offset: 9472)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1332, line: 77, flags: DIFlagFwdDecl)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1331, file: !1332, line: 78, baseType: !955, size: 64, offset: 9536)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1331, file: !1332, line: 80, baseType: !1349, size: 2624, offset: 9600)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !957, line: 340, size: 2624, elements: !1350)
!1350 = !{!1351, !1379, !1397, !1398, !1399, !1414, !1470, !1471, !1497, !1498, !1499, !1500, !1506}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1349, file: !957, line: 341, baseType: !1352, size: 576)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !957, line: 251, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !957, line: 207, size: 576, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1353, file: !957, line: 208, baseType: !319, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1353, file: !957, line: 211, baseType: !317, size: 16, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1353, file: !957, line: 212, baseType: !317, size: 16, offset: 48)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1353, file: !957, line: 213, baseType: !364, size: 32, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1353, file: !957, line: 214, baseType: !317, size: 16, offset: 96)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1353, file: !957, line: 215, baseType: !317, size: 16, offset: 112)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1353, file: !957, line: 216, baseType: !317, size: 16, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1353, file: !957, line: 217, baseType: !317, size: 16, offset: 144)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1353, file: !957, line: 218, baseType: !317, size: 16, offset: 160)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1353, file: !957, line: 219, baseType: !317, size: 16, offset: 176)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1353, file: !957, line: 220, baseType: !364, size: 32, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1353, file: !957, line: 222, baseType: !317, size: 16, offset: 224)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1353, file: !957, line: 225, baseType: !317, size: 16, offset: 240)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1353, file: !957, line: 228, baseType: !319, size: 32, offset: 256)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1353, file: !957, line: 229, baseType: !319, size: 32, offset: 288)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1353, file: !957, line: 233, baseType: !319, size: 32, offset: 320)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1353, file: !957, line: 236, baseType: !317, size: 16, offset: 352)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1353, file: !957, line: 236, baseType: !317, size: 16, offset: 368)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1353, file: !957, line: 241, baseType: !364, size: 32, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1353, file: !957, line: 244, baseType: !319, size: 32, offset: 416)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1353, file: !957, line: 244, baseType: !319, size: 32, offset: 448)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1353, file: !957, line: 245, baseType: !364, size: 32, offset: 480)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1353, file: !957, line: 248, baseType: !364, size: 32, offset: 512)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1353, file: !957, line: 250, baseType: !319, size: 32, offset: 544)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1349, file: !957, line: 342, baseType: !1380, size: 448, offset: 576)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !957, line: 79, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !957, line: 61, size: 448, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1381, file: !957, line: 62, baseType: !288, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1381, file: !957, line: 64, baseType: !317, size: 16, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1381, file: !957, line: 65, baseType: !317, size: 16, offset: 80)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1381, file: !957, line: 67, baseType: !364, size: 32, offset: 96)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1381, file: !957, line: 68, baseType: !364, size: 32, offset: 128)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1381, file: !957, line: 69, baseType: !364, size: 32, offset: 160)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1381, file: !957, line: 70, baseType: !317, size: 16, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1381, file: !957, line: 71, baseType: !317, size: 16, offset: 208)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1381, file: !957, line: 72, baseType: !504, size: 64, offset: 224)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1381, file: !957, line: 75, baseType: !364, size: 32, offset: 288)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1381, file: !957, line: 75, baseType: !364, size: 32, offset: 320)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1381, file: !957, line: 75, baseType: !364, size: 32, offset: 352)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1381, file: !957, line: 78, baseType: !364, size: 32, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1381, file: !957, line: 78, baseType: !364, size: 32, offset: 416)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1349, file: !957, line: 343, baseType: !344, size: 128, offset: 1024)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1349, file: !957, line: 344, baseType: !344, size: 128, offset: 1152)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1349, file: !957, line: 345, baseType: !1400, size: 192, offset: 1280)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !957, line: 278, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !957, line: 270, size: 192, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1401, file: !957, line: 271, baseType: !319, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1401, file: !957, line: 273, baseType: !364, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1401, file: !957, line: 275, baseType: !319, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1401, file: !957, line: 276, baseType: !319, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1401, file: !957, line: 277, baseType: !1408, size: 64, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !957, line: 55, size: 576, elements: !1410)
!1410 = !{!1411, !1412, !1413}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1409, file: !957, line: 56, baseType: !319, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1409, file: !957, line: 57, baseType: !364, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1409, file: !957, line: 58, baseType: !1001, size: 512, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1349, file: !957, line: 346, baseType: !1415, size: 384, offset: 1472)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !957, line: 268, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !957, line: 253, size: 384, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422, !1464, !1465, !1466, !1467, !1468, !1469}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1416, file: !957, line: 254, baseType: !319, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1416, file: !957, line: 255, baseType: !319, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1416, file: !957, line: 255, baseType: !319, size: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1416, file: !957, line: 258, baseType: !364, size: 32, offset: 96)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1416, file: !957, line: 259, baseType: !1423, size: 64, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !957, line: 164, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !957, line: 108, size: 1664, elements: !1426)
!1426 = !{!1427, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1425, file: !957, line: 109, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1425, file: !957, line: 109, baseType: !1428, size: 64, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1425, file: !957, line: 111, baseType: !334, size: 512, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1425, file: !957, line: 119, baseType: !504, size: 64, offset: 640)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1425, file: !957, line: 119, baseType: !504, size: 64, offset: 704)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1425, file: !957, line: 125, baseType: !504, size: 64, offset: 768)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1425, file: !957, line: 125, baseType: !504, size: 64, offset: 832)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1425, file: !957, line: 127, baseType: !504, size: 64, offset: 896)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1425, file: !957, line: 130, baseType: !319, size: 32, offset: 960)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1425, file: !957, line: 131, baseType: !319, size: 32, offset: 992)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1425, file: !957, line: 132, baseType: !1439, size: 64, offset: 1024)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !957, line: 106, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !957, line: 81, size: 512, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446, !1447, !1448}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1441, file: !957, line: 82, baseType: !504, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1441, file: !957, line: 97, baseType: !530, size: 256, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1441, file: !957, line: 102, baseType: !504, size: 64, offset: 320)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1441, file: !957, line: 102, baseType: !504, size: 64, offset: 384)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1441, file: !957, line: 104, baseType: !319, size: 32, offset: 448)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1441, file: !957, line: 105, baseType: !319, size: 32, offset: 480)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1425, file: !957, line: 135, baseType: !556, size: 96, offset: 1088)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1425, file: !957, line: 136, baseType: !364, size: 32, offset: 1184)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1425, file: !957, line: 139, baseType: !319, size: 32, offset: 1216)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1425, file: !957, line: 139, baseType: !319, size: 32, offset: 1248)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1425, file: !957, line: 139, baseType: !319, size: 32, offset: 1280)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1425, file: !957, line: 140, baseType: !556, size: 96, offset: 1312)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1425, file: !957, line: 143, baseType: !317, size: 16, offset: 1408)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1425, file: !957, line: 144, baseType: !317, size: 16, offset: 1424)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1425, file: !957, line: 145, baseType: !317, size: 16, offset: 1440)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1425, file: !957, line: 148, baseType: !317, size: 16, offset: 1456)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1425, file: !957, line: 149, baseType: !319, size: 32, offset: 1472)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1425, file: !957, line: 150, baseType: !364, size: 32, offset: 1504)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1425, file: !957, line: 152, baseType: !955, size: 64, offset: 1536)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1425, file: !957, line: 163, baseType: !364, size: 32, offset: 1600)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1425, file: !957, line: 163, baseType: !364, size: 32, offset: 1632)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1416, file: !957, line: 261, baseType: !364, size: 32, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1416, file: !957, line: 261, baseType: !364, size: 32, offset: 224)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1416, file: !957, line: 261, baseType: !364, size: 32, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1416, file: !957, line: 263, baseType: !319, size: 32, offset: 288)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1416, file: !957, line: 266, baseType: !319, size: 32, offset: 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1416, file: !957, line: 267, baseType: !364, size: 32, offset: 352)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1349, file: !957, line: 347, baseType: !1423, size: 64, offset: 1856)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1349, file: !957, line: 348, baseType: !1472, size: 64, offset: 1920)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !957, line: 205, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !957, line: 186, size: 1024, elements: !1475)
!1475 = !{!1476, !1478, !1479, !1480, !1482, !1483, !1484, !1492, !1493, !1494, !1495, !1496}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1474, file: !957, line: 187, baseType: !1477, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1474, file: !957, line: 187, baseType: !1477, size: 64, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1474, file: !957, line: 189, baseType: !334, size: 512, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1474, file: !957, line: 191, baseType: !1481, size: 64, offset: 640)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1474, file: !957, line: 193, baseType: !319, size: 32, offset: 704)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1474, file: !957, line: 193, baseType: !319, size: 32, offset: 736)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1474, file: !957, line: 195, baseType: !1485, size: 64, offset: 768)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !957, line: 184, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !957, line: 166, size: 320, elements: !1488)
!1488 = !{!1489, !1490, !1491}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1487, file: !957, line: 180, baseType: !530, size: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1487, file: !957, line: 182, baseType: !319, size: 32, offset: 256)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1487, file: !957, line: 183, baseType: !319, size: 32, offset: 288)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1474, file: !957, line: 196, baseType: !319, size: 32, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1474, file: !957, line: 198, baseType: !319, size: 32, offset: 864)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1474, file: !957, line: 200, baseType: !402, size: 64, offset: 896)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1474, file: !957, line: 201, baseType: !364, size: 32, offset: 960)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1474, file: !957, line: 204, baseType: !319, size: 32, offset: 992)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1349, file: !957, line: 350, baseType: !344, size: 128, offset: 1984)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1349, file: !957, line: 351, baseType: !319, size: 32, offset: 2112)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1349, file: !957, line: 351, baseType: !319, size: 32, offset: 2144)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1349, file: !957, line: 353, baseType: !1501, size: 64, offset: 2176)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !957, line: 297, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !957, line: 295, size: 2048, elements: !1504)
!1504 = !{!1505}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1503, file: !957, line: 296, baseType: !1278, size: 2048)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1349, file: !957, line: 355, baseType: !1507, size: 384, offset: 2240)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !957, line: 338, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !957, line: 322, size: 384, elements: !1509)
!1509 = !{!1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1508, file: !957, line: 323, baseType: !319, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1508, file: !957, line: 325, baseType: !317, size: 16, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1508, file: !957, line: 326, baseType: !317, size: 16, offset: 48)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1508, file: !957, line: 331, baseType: !344, size: 128, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1508, file: !957, line: 334, baseType: !344, size: 128, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1508, file: !957, line: 335, baseType: !319, size: 32, offset: 320)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1508, file: !957, line: 337, baseType: !319, size: 32, offset: 352)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1331, file: !1332, line: 81, baseType: !288, size: 64, offset: 12224)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1331, file: !1332, line: 85, baseType: !1519, size: 6208, offset: 12288)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1332, line: 55, size: 6208, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1519, file: !1332, line: 56, baseType: !1284, size: 6144)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1519, file: !1332, line: 58, baseType: !317, size: 16, offset: 6144)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1519, file: !1332, line: 59, baseType: !317, size: 16, offset: 6160)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1519, file: !1332, line: 60, baseType: !317, size: 16, offset: 6176)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1519, file: !1332, line: 61, baseType: !317, size: 16, offset: 6192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1331, file: !1332, line: 86, baseType: !319, size: 32, offset: 18496)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1331, file: !1332, line: 88, baseType: !319, size: 32, offset: 18528)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1331, file: !1332, line: 90, baseType: !319, size: 32, offset: 18560)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1331, file: !1332, line: 94, baseType: !319, size: 32, offset: 18592)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1331, file: !1332, line: 100, baseType: !472, size: 512, offset: 18624)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1233, file: !1225, line: 154, baseType: !1532, size: 64, offset: 1664)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1534, line: 264, flags: DIFlagFwdDecl)
!1534 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1233, file: !1225, line: 156, baseType: !415, size: 64, offset: 1728)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1233, file: !1225, line: 158, baseType: !364, size: 32, offset: 1792)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1233, file: !1225, line: 159, baseType: !364, size: 32, offset: 1824)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1233, file: !1225, line: 162, baseType: !1236, size: 64, offset: 1856)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1233, file: !1225, line: 162, baseType: !1236, size: 64, offset: 1920)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1233, file: !1225, line: 162, baseType: !1236, size: 64, offset: 1984)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1233, file: !1225, line: 164, baseType: !344, size: 128, offset: 2048)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1233, file: !1225, line: 166, baseType: !1543, size: 64, offset: 2176)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1225, line: 51, flags: DIFlagFwdDecl)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1233, file: !1225, line: 167, baseType: !288, size: 64, offset: 2240)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1233, file: !1225, line: 168, baseType: !364, size: 32, offset: 2304)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1233, file: !1225, line: 170, baseType: !364, size: 32, offset: 2336)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1233, file: !1225, line: 170, baseType: !364, size: 32, offset: 2368)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1233, file: !1225, line: 171, baseType: !364, size: 32, offset: 2400)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1233, file: !1225, line: 173, baseType: !288, size: 64, offset: 2432)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1233, file: !1225, line: 175, baseType: !319, size: 32, offset: 2496)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1233, file: !1225, line: 176, baseType: !319, size: 32, offset: 2528)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1233, file: !1225, line: 179, baseType: !319, size: 32, offset: 2560)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1233, file: !1225, line: 180, baseType: !364, size: 32, offset: 2592)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1233, file: !1225, line: 183, baseType: !319, size: 32, offset: 2624)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1233, file: !1225, line: 185, baseType: !304, size: 8, offset: 2656)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1233, file: !1225, line: 186, baseType: !1558, size: 24, offset: 2664)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 24, elements: !557)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1233, file: !1225, line: 189, baseType: !344, size: 128, offset: 2688)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1224, file: !1225, line: 207, baseType: !303, size: 8192, offset: 384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1224, file: !1225, line: 208, baseType: !303, size: 8192, offset: 8576)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1224, file: !1225, line: 210, baseType: !319, size: 32, offset: 16768)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1224, file: !1225, line: 210, baseType: !319, size: 32, offset: 16800)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1224, file: !1225, line: 211, baseType: !319, size: 32, offset: 16832)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1224, file: !1225, line: 211, baseType: !319, size: 32, offset: 16864)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1224, file: !1225, line: 212, baseType: !1180, size: 128, offset: 16896)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1112, file: !1113, line: 1246, baseType: !1568, size: 64, offset: 2112)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1113, line: 1067, size: 5184, elements: !1570)
!1570 = !{!1571, !2048, !2049, !2063, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2085, !2101, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2209}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1569, file: !1113, line: 1068, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1113, line: 934, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1113, line: 925, size: 576, elements: !1575)
!1575 = !{!1576, !2042, !2043, !2044, !2045, !2046, !2047}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1574, file: !1113, line: 926, baseType: !1577, size: 320)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1113, line: 830, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1113, line: 813, size: 320, elements: !1579)
!1579 = !{!1580, !2028, !2037, !2038, !2039, !2040, !2041}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1578, file: !1113, line: 814, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1583, line: 54, size: 16448, elements: !1584)
!1583 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1584 = !{!1585, !1586, !1593, !1632, !1940, !1941, !1942, !1943, !1946, !1947, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1582, file: !1583, line: 55, baseType: !283, size: 960)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1582, file: !1583, line: 57, baseType: !1587, size: 192, offset: 960)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !1583, line: 48, size: 192, elements: !1588)
!1588 = !{!1589, !1590, !1591, !1592}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1587, file: !1583, line: 49, baseType: !402, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1587, file: !1583, line: 50, baseType: !504, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1587, file: !1583, line: 51, baseType: !364, size: 32, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1587, file: !1583, line: 51, baseType: !364, size: 32, offset: 160)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1582, file: !1583, line: 58, baseType: !1594, size: 64, offset: 1152)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !473, line: 72, size: 3072, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603, !1628, !1629, !1630, !1631}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1595, file: !473, line: 73, baseType: !319, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1595, file: !473, line: 73, baseType: !319, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1595, file: !473, line: 74, baseType: !319, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1595, file: !473, line: 75, baseType: !319, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1595, file: !473, line: 77, baseType: !1180, size: 128, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1595, file: !473, line: 77, baseType: !1180, size: 128, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1595, file: !473, line: 79, baseType: !1604, size: 2304, offset: 384)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1605, size: 2304, elements: !467)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !473, line: 67, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !473, line: 55, size: 576, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1624, !1625, !1626, !1627}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1606, file: !473, line: 56, baseType: !317, size: 16)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1606, file: !473, line: 56, baseType: !317, size: 16, offset: 16)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1606, file: !473, line: 58, baseType: !364, size: 32, offset: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1606, file: !473, line: 59, baseType: !364, size: 32, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1606, file: !473, line: 59, baseType: !364, size: 32, offset: 96)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1606, file: !473, line: 60, baseType: !504, size: 64, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1606, file: !473, line: 60, baseType: !504, size: 64, offset: 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1606, file: !473, line: 61, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !473, line: 47, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !473, line: 44, size: 96, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1618, file: !473, line: 45, baseType: !364, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1618, file: !473, line: 45, baseType: !364, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1618, file: !473, line: 46, baseType: !317, size: 16, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1618, file: !473, line: 46, baseType: !317, size: 16, offset: 80)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1606, file: !473, line: 62, baseType: !1616, size: 64, offset: 320)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1606, file: !473, line: 64, baseType: !1616, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1606, file: !473, line: 65, baseType: !504, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1606, file: !473, line: 66, baseType: !504, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1595, file: !473, line: 80, baseType: !556, size: 96, offset: 2688)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1595, file: !473, line: 80, baseType: !556, size: 96, offset: 2784)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1595, file: !473, line: 81, baseType: !556, size: 96, offset: 2880)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1595, file: !473, line: 83, baseType: !556, size: 96, offset: 2976)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1582, file: !1583, line: 59, baseType: !1633, size: 2496, offset: 1216)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !357, line: 57, size: 2496, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639, !1640, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1633, file: !357, line: 59, baseType: !317, size: 16)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1633, file: !357, line: 59, baseType: !317, size: 16, offset: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1633, file: !357, line: 59, baseType: !317, size: 16, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1633, file: !357, line: 59, baseType: !317, size: 16, offset: 48)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1633, file: !357, line: 60, baseType: !820, size: 64, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1633, file: !357, line: 61, baseType: !1641, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !357, line: 202, size: 3328, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1722, !1820, !1821, !1850, !1871, !1879, !1880}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1642, file: !357, line: 203, baseType: !283, size: 960)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1642, file: !357, line: 204, baseType: !355, size: 64, offset: 960)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1642, file: !357, line: 206, baseType: !364, size: 32, offset: 1024)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1642, file: !357, line: 206, baseType: !364, size: 32, offset: 1056)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1642, file: !357, line: 207, baseType: !364, size: 32, offset: 1088)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1642, file: !357, line: 207, baseType: !364, size: 32, offset: 1120)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1642, file: !357, line: 207, baseType: !364, size: 32, offset: 1152)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1642, file: !357, line: 207, baseType: !364, size: 32, offset: 1184)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1642, file: !357, line: 207, baseType: !364, size: 32, offset: 1216)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1642, file: !357, line: 207, baseType: !364, size: 32, offset: 1248)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1642, file: !357, line: 208, baseType: !364, size: 32, offset: 1280)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1642, file: !357, line: 208, baseType: !364, size: 32, offset: 1312)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1642, file: !357, line: 211, baseType: !364, size: 32, offset: 1344)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1642, file: !357, line: 211, baseType: !364, size: 32, offset: 1376)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1642, file: !357, line: 211, baseType: !364, size: 32, offset: 1408)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1642, file: !357, line: 211, baseType: !364, size: 32, offset: 1440)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1642, file: !357, line: 211, baseType: !364, size: 32, offset: 1472)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1642, file: !357, line: 214, baseType: !364, size: 32, offset: 1504)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1642, file: !357, line: 214, baseType: !364, size: 32, offset: 1536)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1642, file: !357, line: 217, baseType: !364, size: 32, offset: 1568)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1642, file: !357, line: 218, baseType: !364, size: 32, offset: 1600)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1642, file: !357, line: 219, baseType: !364, size: 32, offset: 1632)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1642, file: !357, line: 220, baseType: !364, size: 32, offset: 1664)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1642, file: !357, line: 221, baseType: !364, size: 32, offset: 1696)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1642, file: !357, line: 222, baseType: !317, size: 16, offset: 1728)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1642, file: !357, line: 222, baseType: !317, size: 16, offset: 1744)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1642, file: !357, line: 224, baseType: !317, size: 16, offset: 1760)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1642, file: !357, line: 224, baseType: !317, size: 16, offset: 1776)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1642, file: !357, line: 227, baseType: !317, size: 16, offset: 1792)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1642, file: !357, line: 227, baseType: !317, size: 16, offset: 1808)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1642, file: !357, line: 229, baseType: !317, size: 16, offset: 1824)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1642, file: !357, line: 229, baseType: !317, size: 16, offset: 1840)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1642, file: !357, line: 230, baseType: !317, size: 16, offset: 1856)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1642, file: !357, line: 230, baseType: !317, size: 16, offset: 1872)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1642, file: !357, line: 232, baseType: !364, size: 32, offset: 1888)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1642, file: !357, line: 232, baseType: !364, size: 32, offset: 1920)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1642, file: !357, line: 232, baseType: !364, size: 32, offset: 1952)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1642, file: !357, line: 232, baseType: !364, size: 32, offset: 1984)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1642, file: !357, line: 233, baseType: !319, size: 32, offset: 2016)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1642, file: !357, line: 234, baseType: !319, size: 32, offset: 2048)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1642, file: !357, line: 235, baseType: !317, size: 16, offset: 2080)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1642, file: !357, line: 235, baseType: !317, size: 16, offset: 2096)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1642, file: !357, line: 236, baseType: !317, size: 16, offset: 2112)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1642, file: !357, line: 239, baseType: !317, size: 16, offset: 2128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1642, file: !357, line: 240, baseType: !319, size: 32, offset: 2144)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1642, file: !357, line: 241, baseType: !319, size: 32, offset: 2176)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1642, file: !357, line: 241, baseType: !319, size: 32, offset: 2208)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1642, file: !357, line: 241, baseType: !319, size: 32, offset: 2240)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1642, file: !357, line: 243, baseType: !364, size: 32, offset: 2272)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1642, file: !357, line: 243, baseType: !364, size: 32, offset: 2304)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1642, file: !357, line: 244, baseType: !364, size: 32, offset: 2336)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1642, file: !357, line: 246, baseType: !1108, size: 320, offset: 2368)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1642, file: !357, line: 248, baseType: !1150, size: 64, offset: 2688)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1642, file: !357, line: 249, baseType: !371, size: 64, offset: 2752)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1642, file: !357, line: 250, baseType: !402, size: 64, offset: 2816)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1642, file: !357, line: 251, baseType: !1700, size: 64, offset: 2880)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !357, line: 113, size: 6208, elements: !1702)
!1702 = !{!1703, !1704, !1705, !1706, !1707, !1708, !1709}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1701, file: !357, line: 114, baseType: !317, size: 16)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1701, file: !357, line: 114, baseType: !317, size: 16, offset: 16)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1701, file: !357, line: 115, baseType: !304, size: 8, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1701, file: !357, line: 115, baseType: !304, size: 8, offset: 40)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1701, file: !357, line: 116, baseType: !304, size: 8, offset: 48)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1701, file: !357, line: 117, baseType: !1146, size: 8, offset: 56)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1701, file: !357, line: 119, baseType: !1710, size: 6144, offset: 64)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1711, size: 6144, elements: !1720)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !357, line: 109, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !357, line: 106, size: 192, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1712, file: !357, line: 107, baseType: !364, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1712, file: !357, line: 107, baseType: !364, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1712, file: !357, line: 107, baseType: !364, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1712, file: !357, line: 107, baseType: !364, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1712, file: !357, line: 107, baseType: !364, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1712, file: !357, line: 108, baseType: !319, size: 32, offset: 160)
!1720 = !{!1721}
!1721 = !DISubrange(count: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1642, file: !357, line: 252, baseType: !1723, size: 64, offset: 2944)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !357, line: 122, size: 1600, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1724, file: !357, line: 123, baseType: !820, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1724, file: !357, line: 124, baseType: !402, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1724, file: !357, line: 125, baseType: !1729, size: 384, offset: 128)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 384, elements: !1804)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1732, line: 70, size: 19840, elements: !1733)
!1732 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1747, !1748, !1749, !1750, !1751, !1753, !1755, !1756, !1757, !1761, !1762, !1763, !1764, !1765, !1768, !1769, !1770, !1771, !1772, !1775, !1776, !1778, !1779, !1780, !1783, !1784, !1785, !1788, !1789, !1797}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1731, file: !1732, line: 71, baseType: !1730, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1731, file: !1732, line: 71, baseType: !1730, size: 64, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1731, file: !1732, line: 74, baseType: !319, size: 32, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1731, file: !1732, line: 74, baseType: !319, size: 32, offset: 160)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1731, file: !1732, line: 79, baseType: !813, size: 8, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1731, file: !1732, line: 80, baseType: !319, size: 32, offset: 224)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1731, file: !1732, line: 83, baseType: !319, size: 32, offset: 256)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1731, file: !1732, line: 84, baseType: !319, size: 32, offset: 288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1731, file: !1732, line: 87, baseType: !438, size: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1731, file: !1732, line: 88, baseType: !844, size: 64, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1731, file: !1732, line: 93, baseType: !1745, size: 128, offset: 448)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1746, size: 128, elements: !446)
!1746 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1731, file: !1732, line: 96, baseType: !319, size: 32, offset: 576)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1731, file: !1732, line: 96, baseType: !319, size: 32, offset: 608)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1731, file: !1732, line: 97, baseType: !319, size: 32, offset: 640)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1731, file: !1732, line: 97, baseType: !319, size: 32, offset: 672)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1731, file: !1732, line: 98, baseType: !1752, size: 64, offset: 704)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1731, file: !1732, line: 101, baseType: !1754, size: 64, offset: 768)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1731, file: !1732, line: 102, baseType: !844, size: 64, offset: 832)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1731, file: !1732, line: 105, baseType: !364, size: 32, offset: 896)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1731, file: !1732, line: 108, baseType: !1758, size: 1280, offset: 960)
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 1280, elements: !1759)
!1759 = !{!1760}
!1760 = !DISubrange(count: 20)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1731, file: !1732, line: 109, baseType: !319, size: 32, offset: 2240)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1731, file: !1732, line: 109, baseType: !319, size: 32, offset: 2272)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1731, file: !1732, line: 112, baseType: !319, size: 32, offset: 2304)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1731, file: !1732, line: 113, baseType: !319, size: 32, offset: 2336)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1731, file: !1732, line: 114, baseType: !1766, size: 64, offset: 2368)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1732, line: 50, flags: DIFlagFwdDecl)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1731, file: !1732, line: 115, baseType: !288, size: 64, offset: 2432)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1731, file: !1732, line: 118, baseType: !319, size: 32, offset: 2496)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1731, file: !1732, line: 119, baseType: !303, size: 8192, offset: 2528)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1731, file: !1732, line: 120, baseType: !303, size: 8192, offset: 10720)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1731, file: !1732, line: 123, baseType: !1773, size: 64, offset: 18944)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1732, line: 123, flags: DIFlagFwdDecl)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1731, file: !1732, line: 124, baseType: !319, size: 32, offset: 19008)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1731, file: !1732, line: 127, baseType: !1777, size: 64, offset: 19072)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1731, file: !1732, line: 128, baseType: !7, size: 32, offset: 19136)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1731, file: !1732, line: 129, baseType: !7, size: 32, offset: 19168)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1731, file: !1732, line: 132, baseType: !1781, size: 64, offset: 19200)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1732, line: 132, flags: DIFlagFwdDecl)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1731, file: !1732, line: 133, baseType: !1781, size: 64, offset: 19264)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1731, file: !1732, line: 134, baseType: !438, size: 64, offset: 19328)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1731, file: !1732, line: 135, baseType: !1786, size: 64, offset: 19392)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1732, line: 135, flags: DIFlagFwdDecl)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1731, file: !1732, line: 136, baseType: !319, size: 32, offset: 19456)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1731, file: !1732, line: 137, baseType: !1790, size: 128, offset: 19488)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1181, line: 89, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1181, line: 86, size: 128, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1791, file: !1181, line: 87, baseType: !319, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1791, file: !1181, line: 87, baseType: !319, size: 32, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1791, file: !1181, line: 88, baseType: !319, size: 32, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1791, file: !1181, line: 88, baseType: !319, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1731, file: !1732, line: 140, baseType: !1798, size: 192, offset: 19648)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1732, line: 55, size: 192, elements: !1799)
!1799 = !{!1800, !1801, !1802, !1803}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1798, file: !1732, line: 56, baseType: !7, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1798, file: !1732, line: 57, baseType: !7, size: 32, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1798, file: !1732, line: 58, baseType: !1777, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1798, file: !1732, line: 59, baseType: !7, size: 32, offset: 128)
!1804 = !{!1805}
!1805 = !DISubrange(count: 6)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1724, file: !357, line: 126, baseType: !1001, size: 512, offset: 512)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1724, file: !357, line: 127, baseType: !865, size: 288, offset: 1024)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1724, file: !357, line: 128, baseType: !317, size: 16, offset: 1312)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1724, file: !357, line: 128, baseType: !317, size: 16, offset: 1328)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1724, file: !357, line: 129, baseType: !364, size: 32, offset: 1344)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1724, file: !357, line: 129, baseType: !364, size: 32, offset: 1376)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1724, file: !357, line: 130, baseType: !364, size: 32, offset: 1408)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1724, file: !357, line: 131, baseType: !7, size: 32, offset: 1440)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1724, file: !357, line: 132, baseType: !317, size: 16, offset: 1472)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1724, file: !357, line: 132, baseType: !317, size: 16, offset: 1488)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1724, file: !357, line: 133, baseType: !319, size: 32, offset: 1504)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1724, file: !357, line: 133, baseType: !319, size: 32, offset: 1536)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1724, file: !357, line: 134, baseType: !317, size: 16, offset: 1568)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1724, file: !357, line: 134, baseType: !317, size: 16, offset: 1584)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1642, file: !357, line: 253, baseType: !441, size: 64, offset: 3008)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1642, file: !357, line: 254, baseType: !1822, size: 64, offset: 3072)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !357, line: 137, size: 832, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1823, file: !357, line: 138, baseType: !317, size: 16)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1823, file: !357, line: 140, baseType: !317, size: 16, offset: 16)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1823, file: !357, line: 141, baseType: !364, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1823, file: !357, line: 142, baseType: !364, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1823, file: !357, line: 143, baseType: !317, size: 16, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1823, file: !357, line: 144, baseType: !317, size: 16, offset: 112)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1823, file: !357, line: 145, baseType: !319, size: 32, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1823, file: !357, line: 147, baseType: !319, size: 32, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1823, file: !357, line: 149, baseType: !820, size: 64, offset: 192)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1823, file: !357, line: 150, baseType: !319, size: 32, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1823, file: !357, line: 151, baseType: !317, size: 16, offset: 288)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1823, file: !357, line: 152, baseType: !317, size: 16, offset: 304)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1823, file: !357, line: 154, baseType: !288, size: 64, offset: 320)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1823, file: !357, line: 155, baseType: !844, size: 64, offset: 384)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1823, file: !357, line: 157, baseType: !364, size: 32, offset: 448)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1823, file: !357, line: 158, baseType: !317, size: 16, offset: 480)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1823, file: !357, line: 159, baseType: !317, size: 16, offset: 496)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1823, file: !357, line: 160, baseType: !317, size: 16, offset: 512)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1823, file: !357, line: 161, baseType: !559, size: 48, offset: 528)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1823, file: !357, line: 162, baseType: !364, size: 32, offset: 576)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1823, file: !357, line: 164, baseType: !364, size: 32, offset: 608)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1823, file: !357, line: 164, baseType: !364, size: 32, offset: 640)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1823, file: !357, line: 164, baseType: !364, size: 32, offset: 672)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1823, file: !357, line: 165, baseType: !1700, size: 64, offset: 704)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1823, file: !357, line: 167, baseType: !1594, size: 64, offset: 768)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1642, file: !357, line: 255, baseType: !1851, size: 64, offset: 3136)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !357, line: 170, size: 8704, elements: !1853)
!1853 = !{!1854, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1852, file: !357, line: 171, baseType: !1855, size: 96)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 96, elements: !557)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1852, file: !357, line: 172, baseType: !319, size: 32, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1852, file: !357, line: 173, baseType: !317, size: 16, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1852, file: !357, line: 174, baseType: !317, size: 16, offset: 144)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1852, file: !357, line: 175, baseType: !317, size: 16, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1852, file: !357, line: 176, baseType: !317, size: 16, offset: 176)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1852, file: !357, line: 177, baseType: !317, size: 16, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1852, file: !357, line: 178, baseType: !317, size: 16, offset: 208)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1852, file: !357, line: 179, baseType: !319, size: 32, offset: 224)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1852, file: !357, line: 181, baseType: !820, size: 64, offset: 256)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1852, file: !357, line: 182, baseType: !364, size: 32, offset: 320)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1852, file: !357, line: 183, baseType: !319, size: 32, offset: 352)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1852, file: !357, line: 184, baseType: !303, size: 8192, offset: 384)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1852, file: !357, line: 187, baseType: !844, size: 64, offset: 8576)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1852, file: !357, line: 188, baseType: !319, size: 32, offset: 8640)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1852, file: !357, line: 189, baseType: !319, size: 32, offset: 8672)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1642, file: !357, line: 256, baseType: !1872, size: 64, offset: 3200)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !357, line: 193, size: 640, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1878}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1873, file: !357, line: 194, baseType: !820, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1873, file: !357, line: 195, baseType: !334, size: 512, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1873, file: !357, line: 197, baseType: !319, size: 32, offset: 576)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1873, file: !357, line: 198, baseType: !319, size: 32, offset: 608)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1642, file: !357, line: 258, baseType: !304, size: 8, offset: 3264)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1642, file: !357, line: 259, baseType: !479, size: 56, offset: 3272)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1633, file: !357, line: 62, baseType: !334, size: 512, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1633, file: !357, line: 64, baseType: !304, size: 8, offset: 704)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1633, file: !357, line: 64, baseType: !304, size: 8, offset: 712)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1633, file: !357, line: 64, baseType: !304, size: 8, offset: 720)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1633, file: !357, line: 64, baseType: !304, size: 8, offset: 728)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1633, file: !357, line: 65, baseType: !556, size: 96, offset: 736)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1633, file: !357, line: 65, baseType: !556, size: 96, offset: 832)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1633, file: !357, line: 65, baseType: !364, size: 32, offset: 928)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1633, file: !357, line: 67, baseType: !317, size: 16, offset: 960)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1633, file: !357, line: 67, baseType: !317, size: 16, offset: 976)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1633, file: !357, line: 67, baseType: !317, size: 16, offset: 992)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1633, file: !357, line: 67, baseType: !317, size: 16, offset: 1008)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1633, file: !357, line: 68, baseType: !317, size: 16, offset: 1024)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1633, file: !357, line: 68, baseType: !317, size: 16, offset: 1040)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1633, file: !357, line: 69, baseType: !304, size: 8, offset: 1056)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1633, file: !357, line: 69, baseType: !479, size: 56, offset: 1064)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1633, file: !357, line: 70, baseType: !364, size: 32, offset: 1120)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1633, file: !357, line: 70, baseType: !364, size: 32, offset: 1152)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1633, file: !357, line: 70, baseType: !364, size: 32, offset: 1184)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1633, file: !357, line: 70, baseType: !364, size: 32, offset: 1216)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1633, file: !357, line: 71, baseType: !364, size: 32, offset: 1248)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1633, file: !357, line: 71, baseType: !364, size: 32, offset: 1280)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1633, file: !357, line: 74, baseType: !364, size: 32, offset: 1312)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1633, file: !357, line: 74, baseType: !364, size: 32, offset: 1344)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1633, file: !357, line: 77, baseType: !364, size: 32, offset: 1376)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1633, file: !357, line: 77, baseType: !364, size: 32, offset: 1408)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1633, file: !357, line: 77, baseType: !364, size: 32, offset: 1440)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1633, file: !357, line: 78, baseType: !364, size: 32, offset: 1472)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1633, file: !357, line: 78, baseType: !364, size: 32, offset: 1504)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1633, file: !357, line: 78, baseType: !364, size: 32, offset: 1536)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1633, file: !357, line: 79, baseType: !364, size: 32, offset: 1568)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1633, file: !357, line: 79, baseType: !364, size: 32, offset: 1600)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1633, file: !357, line: 79, baseType: !364, size: 32, offset: 1632)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1633, file: !357, line: 79, baseType: !364, size: 32, offset: 1664)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1633, file: !357, line: 80, baseType: !364, size: 32, offset: 1696)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1633, file: !357, line: 80, baseType: !364, size: 32, offset: 1728)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1633, file: !357, line: 80, baseType: !364, size: 32, offset: 1760)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1633, file: !357, line: 81, baseType: !364, size: 32, offset: 1792)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1633, file: !357, line: 81, baseType: !364, size: 32, offset: 1824)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1633, file: !357, line: 81, baseType: !364, size: 32, offset: 1856)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1633, file: !357, line: 82, baseType: !364, size: 32, offset: 1888)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1633, file: !357, line: 82, baseType: !364, size: 32, offset: 1920)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1633, file: !357, line: 82, baseType: !364, size: 32, offset: 1952)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1633, file: !357, line: 85, baseType: !364, size: 32, offset: 1984)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1633, file: !357, line: 85, baseType: !364, size: 32, offset: 2016)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1633, file: !357, line: 85, baseType: !364, size: 32, offset: 2048)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1633, file: !357, line: 85, baseType: !364, size: 32, offset: 2080)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1633, file: !357, line: 86, baseType: !364, size: 32, offset: 2112)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1633, file: !357, line: 86, baseType: !364, size: 32, offset: 2144)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1633, file: !357, line: 86, baseType: !364, size: 32, offset: 2176)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1633, file: !357, line: 86, baseType: !364, size: 32, offset: 2208)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1633, file: !357, line: 87, baseType: !364, size: 32, offset: 2240)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1633, file: !357, line: 87, baseType: !364, size: 32, offset: 2272)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1633, file: !357, line: 87, baseType: !364, size: 32, offset: 2304)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1633, file: !357, line: 87, baseType: !364, size: 32, offset: 2336)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1633, file: !357, line: 90, baseType: !364, size: 32, offset: 2368)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1633, file: !357, line: 93, baseType: !364, size: 32, offset: 2400)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1633, file: !357, line: 93, baseType: !364, size: 32, offset: 2432)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1633, file: !357, line: 93, baseType: !364, size: 32, offset: 2464)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1582, file: !1583, line: 60, baseType: !1633, size: 2496, offset: 3712)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1582, file: !1583, line: 62, baseType: !1581, size: 64, offset: 6208)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1582, file: !1583, line: 64, baseType: !1730, size: 64, offset: 6272)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1582, file: !1583, line: 65, baseType: !1944, size: 64, offset: 6336)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !284, line: 167, baseType: !442)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1582, file: !1583, line: 66, baseType: !1700, size: 64, offset: 6400)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1582, file: !1583, line: 67, baseType: !1948, size: 64, offset: 6464)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !1583, line: 166, size: 1088, elements: !1950)
!1950 = !{!1951, !1952, !1979, !1980}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1949, file: !1583, line: 168, baseType: !283, size: 960)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1949, file: !1583, line: 169, baseType: !1953, size: 64, offset: 960)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !1583, line: 164, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !1583, line: 160, size: 608, elements: !1956)
!1956 = !{!1957, !1978}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1955, file: !1583, line: 162, baseType: !1958, size: 576)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !376, line: 133, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !376, line: 117, size: 576, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1959, file: !376, line: 118, baseType: !865, size: 288)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1959, file: !376, line: 119, baseType: !364, size: 32, offset: 288)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1959, file: !376, line: 119, baseType: !364, size: 32, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1959, file: !376, line: 119, baseType: !364, size: 32, offset: 352)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1959, file: !376, line: 121, baseType: !304, size: 8, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1959, file: !376, line: 123, baseType: !304, size: 8, offset: 392)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1959, file: !376, line: 123, baseType: !304, size: 8, offset: 400)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1959, file: !376, line: 124, baseType: !304, size: 8, offset: 408)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1959, file: !376, line: 124, baseType: !304, size: 8, offset: 416)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1959, file: !376, line: 124, baseType: !304, size: 8, offset: 424)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1959, file: !376, line: 126, baseType: !304, size: 8, offset: 432)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1959, file: !376, line: 128, baseType: !304, size: 8, offset: 440)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1959, file: !376, line: 129, baseType: !364, size: 32, offset: 448)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1959, file: !376, line: 130, baseType: !364, size: 32, offset: 480)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1959, file: !376, line: 130, baseType: !364, size: 32, offset: 512)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1959, file: !376, line: 132, baseType: !1977, size: 32, offset: 544)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 32, elements: !467)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1955, file: !1583, line: 163, baseType: !364, size: 32, offset: 576)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1949, file: !1583, line: 170, baseType: !319, size: 32, offset: 1024)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1949, file: !1583, line: 171, baseType: !319, size: 32, offset: 1056)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1582, file: !1583, line: 69, baseType: !303, size: 8192, offset: 6528)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1582, file: !1583, line: 71, baseType: !364, size: 32, offset: 14720)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1582, file: !1583, line: 73, baseType: !317, size: 16, offset: 14752)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1582, file: !1583, line: 74, baseType: !317, size: 16, offset: 14768)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1582, file: !1583, line: 75, baseType: !364, size: 32, offset: 14784)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1582, file: !1583, line: 76, baseType: !319, size: 32, offset: 14816)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1582, file: !1583, line: 77, baseType: !319, size: 32, offset: 14848)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1582, file: !1583, line: 78, baseType: !319, size: 32, offset: 14880)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1582, file: !1583, line: 79, baseType: !364, size: 32, offset: 14912)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1582, file: !1583, line: 80, baseType: !319, size: 32, offset: 14944)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1582, file: !1583, line: 81, baseType: !319, size: 32, offset: 14976)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1582, file: !1583, line: 82, baseType: !319, size: 32, offset: 15008)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1582, file: !1583, line: 83, baseType: !319, size: 32, offset: 15040)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1582, file: !1583, line: 84, baseType: !364, size: 32, offset: 15072)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1582, file: !1583, line: 85, baseType: !364, size: 32, offset: 15104)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1582, file: !1583, line: 87, baseType: !556, size: 96, offset: 15136)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1582, file: !1583, line: 88, baseType: !364, size: 32, offset: 15232)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1582, file: !1583, line: 90, baseType: !556, size: 96, offset: 15264)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1582, file: !1583, line: 92, baseType: !319, size: 32, offset: 15360)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1582, file: !1583, line: 94, baseType: !364, size: 32, offset: 15392)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1582, file: !1583, line: 96, baseType: !364, size: 32, offset: 15424)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1582, file: !1583, line: 97, baseType: !319, size: 32, offset: 15456)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1582, file: !1583, line: 98, baseType: !319, size: 32, offset: 15488)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1582, file: !1583, line: 99, baseType: !319, size: 32, offset: 15520)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1582, file: !1583, line: 101, baseType: !304, size: 8, offset: 15552)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1582, file: !1583, line: 102, baseType: !304, size: 8, offset: 15560)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1582, file: !1583, line: 103, baseType: !304, size: 8, offset: 15568)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1582, file: !1583, line: 104, baseType: !304, size: 8, offset: 15576)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1582, file: !1583, line: 106, baseType: !364, size: 32, offset: 15584)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1582, file: !1583, line: 108, baseType: !364, size: 32, offset: 15616)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1582, file: !1583, line: 110, baseType: !364, size: 32, offset: 15648)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1582, file: !1583, line: 111, baseType: !364, size: 32, offset: 15680)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1582, file: !1583, line: 113, baseType: !364, size: 32, offset: 15712)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1582, file: !1583, line: 116, baseType: !319, size: 32, offset: 15744)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1582, file: !1583, line: 117, baseType: !319, size: 32, offset: 15776)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1582, file: !1583, line: 118, baseType: !319, size: 32, offset: 15808)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1582, file: !1583, line: 120, baseType: !364, size: 32, offset: 15840)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1582, file: !1583, line: 123, baseType: !364, size: 32, offset: 15872)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1582, file: !1583, line: 124, baseType: !319, size: 32, offset: 15904)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1582, file: !1583, line: 125, baseType: !319, size: 32, offset: 15936)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1582, file: !1583, line: 128, baseType: !364, size: 32, offset: 15968)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1582, file: !1583, line: 130, baseType: !556, size: 96, offset: 16000)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1582, file: !1583, line: 131, baseType: !556, size: 96, offset: 16096)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1582, file: !1583, line: 133, baseType: !504, size: 64, offset: 16192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1582, file: !1583, line: 134, baseType: !504, size: 64, offset: 16256)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1582, file: !1583, line: 136, baseType: !504, size: 64, offset: 16320)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1582, file: !1583, line: 137, baseType: !504, size: 64, offset: 16384)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1578, file: !1113, line: 815, baseType: !2029, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1583, line: 148, size: 1280, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035, !2036}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2030, file: !1583, line: 150, baseType: !283, size: 960)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !2030, file: !1583, line: 153, baseType: !344, size: 128, offset: 960)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !2030, file: !1583, line: 154, baseType: !344, size: 128, offset: 1088)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !2030, file: !1583, line: 156, baseType: !319, size: 32, offset: 1216)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2030, file: !1583, line: 157, baseType: !319, size: 32, offset: 1248)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1578, file: !1113, line: 818, baseType: !288, size: 64, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1578, file: !1113, line: 819, baseType: !812, size: 32, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1578, file: !1113, line: 822, baseType: !319, size: 32, offset: 224)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1578, file: !1113, line: 826, baseType: !319, size: 32, offset: 256)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1578, file: !1113, line: 829, baseType: !319, size: 32, offset: 288)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1574, file: !1113, line: 928, baseType: !317, size: 16, offset: 320)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1574, file: !1113, line: 928, baseType: !317, size: 16, offset: 336)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1574, file: !1113, line: 929, baseType: !319, size: 32, offset: 352)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1574, file: !1113, line: 930, baseType: !438, size: 64, offset: 384)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1574, file: !1113, line: 931, baseType: !572, size: 64, offset: 448)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1574, file: !1113, line: 933, baseType: !288, size: 64, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1569, file: !1113, line: 1069, baseType: !1572, size: 64, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1569, file: !1113, line: 1070, baseType: !2050, size: 64, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1113, line: 916, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1113, line: 891, size: 704, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2052, file: !1113, line: 892, baseType: !1577, size: 320)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2052, file: !1113, line: 896, baseType: !319, size: 32, offset: 320)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2052, file: !1113, line: 900, baseType: !1855, size: 96, offset: 352)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2052, file: !1113, line: 903, baseType: !364, size: 32, offset: 448)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2052, file: !1113, line: 906, baseType: !319, size: 32, offset: 480)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2052, file: !1113, line: 909, baseType: !364, size: 32, offset: 512)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2052, file: !1113, line: 912, baseType: !364, size: 32, offset: 544)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2052, file: !1113, line: 914, baseType: !820, size: 64, offset: 576)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2052, file: !1113, line: 915, baseType: !288, size: 64, offset: 640)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1569, file: !1113, line: 1071, baseType: !2064, size: 64, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1113, line: 920, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1113, line: 918, size: 320, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2066, file: !1113, line: 919, baseType: !1577, size: 320)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1569, file: !1113, line: 1075, baseType: !364, size: 32, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1569, file: !1113, line: 1077, baseType: !364, size: 32, offset: 288)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1569, file: !1113, line: 1078, baseType: !364, size: 32, offset: 320)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1569, file: !1113, line: 1079, baseType: !317, size: 16, offset: 352)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1569, file: !1113, line: 1082, baseType: !317, size: 16, offset: 368)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1569, file: !1113, line: 1085, baseType: !304, size: 8, offset: 384)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1569, file: !1113, line: 1086, baseType: !304, size: 8, offset: 392)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1569, file: !1113, line: 1087, baseType: !304, size: 8, offset: 400)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1569, file: !1113, line: 1088, baseType: !304, size: 8, offset: 408)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1569, file: !1113, line: 1090, baseType: !364, size: 32, offset: 416)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1569, file: !1113, line: 1093, baseType: !317, size: 16, offset: 448)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1569, file: !1113, line: 1096, baseType: !304, size: 8, offset: 464)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1569, file: !1113, line: 1098, baseType: !2082, size: 40, offset: 472)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 40, elements: !2083)
!2083 = !{!2084}
!2084 = !DISubrange(count: 5)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1569, file: !1113, line: 1101, baseType: !2086, size: 832, offset: 512)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1113, line: 836, size: 832, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2086, file: !1113, line: 837, baseType: !1577, size: 320)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2086, file: !1113, line: 839, baseType: !317, size: 16, offset: 320)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2086, file: !1113, line: 839, baseType: !317, size: 16, offset: 336)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2086, file: !1113, line: 842, baseType: !317, size: 16, offset: 352)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2086, file: !1113, line: 842, baseType: !317, size: 16, offset: 368)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2086, file: !1113, line: 843, baseType: !450, size: 32, offset: 384)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2086, file: !1113, line: 845, baseType: !319, size: 32, offset: 416)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2086, file: !1113, line: 847, baseType: !288, size: 64, offset: 448)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2086, file: !1113, line: 848, baseType: !402, size: 64, offset: 512)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2086, file: !1113, line: 849, baseType: !402, size: 64, offset: 576)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2086, file: !1113, line: 850, baseType: !402, size: 64, offset: 640)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2086, file: !1113, line: 851, baseType: !556, size: 96, offset: 704)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2086, file: !1113, line: 852, baseType: !364, size: 32, offset: 800)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1569, file: !1113, line: 1104, baseType: !2102, size: 1344, offset: 1344)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1113, line: 867, size: 1344, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2102, file: !1113, line: 868, baseType: !317, size: 16)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2102, file: !1113, line: 869, baseType: !317, size: 16, offset: 16)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2102, file: !1113, line: 870, baseType: !317, size: 16, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2102, file: !1113, line: 871, baseType: !317, size: 16, offset: 48)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2102, file: !1113, line: 873, baseType: !2109, size: 896, offset: 64)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 896, elements: !480)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1113, line: 864, baseType: !2111)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1113, line: 859, size: 128, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116, !2117, !2118}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2111, file: !1113, line: 860, baseType: !317, size: 16)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2111, file: !1113, line: 861, baseType: !317, size: 16, offset: 16)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2111, file: !1113, line: 861, baseType: !317, size: 16, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2111, file: !1113, line: 861, baseType: !317, size: 16, offset: 48)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2111, file: !1113, line: 862, baseType: !319, size: 32, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2111, file: !1113, line: 863, baseType: !364, size: 32, offset: 96)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2102, file: !1113, line: 874, baseType: !288, size: 64, offset: 960)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2102, file: !1113, line: 876, baseType: !364, size: 32, offset: 1024)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2102, file: !1113, line: 876, baseType: !364, size: 32, offset: 1056)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2102, file: !1113, line: 878, baseType: !319, size: 32, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2102, file: !1113, line: 879, baseType: !319, size: 32, offset: 1120)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2102, file: !1113, line: 881, baseType: !319, size: 32, offset: 1152)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2102, file: !1113, line: 881, baseType: !319, size: 32, offset: 1184)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2102, file: !1113, line: 883, baseType: !1111, size: 64, offset: 1216)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2102, file: !1113, line: 884, baseType: !820, size: 64, offset: 1280)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1569, file: !1113, line: 1107, baseType: !364, size: 32, offset: 2688)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1569, file: !1113, line: 1110, baseType: !364, size: 32, offset: 2720)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1569, file: !1113, line: 1113, baseType: !317, size: 16, offset: 2752)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1569, file: !1113, line: 1113, baseType: !317, size: 16, offset: 2768)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1569, file: !1113, line: 1116, baseType: !304, size: 8, offset: 2784)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1569, file: !1113, line: 1117, baseType: !1146, size: 8, offset: 2792)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1569, file: !1113, line: 1120, baseType: !317, size: 16, offset: 2800)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1569, file: !1113, line: 1121, baseType: !364, size: 32, offset: 2816)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1569, file: !1113, line: 1122, baseType: !364, size: 32, offset: 2848)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1569, file: !1113, line: 1123, baseType: !364, size: 32, offset: 2880)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1569, file: !1113, line: 1124, baseType: !364, size: 32, offset: 2912)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1569, file: !1113, line: 1125, baseType: !364, size: 32, offset: 2944)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1569, file: !1113, line: 1126, baseType: !364, size: 32, offset: 2976)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1569, file: !1113, line: 1127, baseType: !364, size: 32, offset: 3008)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1569, file: !1113, line: 1128, baseType: !364, size: 32, offset: 3040)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1569, file: !1113, line: 1129, baseType: !364, size: 32, offset: 3072)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1569, file: !1113, line: 1130, baseType: !364, size: 32, offset: 3104)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1569, file: !1113, line: 1131, baseType: !317, size: 16, offset: 3136)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1569, file: !1113, line: 1132, baseType: !304, size: 8, offset: 3152)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1569, file: !1113, line: 1133, baseType: !304, size: 8, offset: 3160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1569, file: !1113, line: 1134, baseType: !1558, size: 24, offset: 3168)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1569, file: !1113, line: 1135, baseType: !304, size: 8, offset: 3192)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1569, file: !1113, line: 1138, baseType: !820, size: 64, offset: 3200)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1569, file: !1113, line: 1139, baseType: !304, size: 8, offset: 3264)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1569, file: !1113, line: 1140, baseType: !304, size: 8, offset: 3272)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1569, file: !1113, line: 1141, baseType: !304, size: 8, offset: 3280)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1569, file: !1113, line: 1142, baseType: !304, size: 8, offset: 3288)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1569, file: !1113, line: 1143, baseType: !304, size: 8, offset: 3296)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1569, file: !1113, line: 1144, baseType: !2157, size: 64, offset: 3304)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 64, elements: !422)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1569, file: !1113, line: 1145, baseType: !2157, size: 64, offset: 3368)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1569, file: !1113, line: 1148, baseType: !304, size: 8, offset: 3432)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1569, file: !1113, line: 1149, baseType: !304, size: 8, offset: 3440)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1569, file: !1113, line: 1152, baseType: !304, size: 8, offset: 3448)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1569, file: !1113, line: 1152, baseType: !304, size: 8, offset: 3456)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1569, file: !1113, line: 1153, baseType: !304, size: 8, offset: 3464)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1569, file: !1113, line: 1154, baseType: !317, size: 16, offset: 3472)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1569, file: !1113, line: 1154, baseType: !317, size: 16, offset: 3488)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1569, file: !1113, line: 1155, baseType: !317, size: 16, offset: 3504)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1569, file: !1113, line: 1155, baseType: !317, size: 16, offset: 3520)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1569, file: !1113, line: 1156, baseType: !304, size: 8, offset: 3536)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1569, file: !1113, line: 1157, baseType: !304, size: 8, offset: 3544)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1569, file: !1113, line: 1159, baseType: !304, size: 8, offset: 3552)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1569, file: !1113, line: 1160, baseType: !304, size: 8, offset: 3560)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1569, file: !1113, line: 1161, baseType: !304, size: 8, offset: 3568)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1569, file: !1113, line: 1162, baseType: !304, size: 8, offset: 3576)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1569, file: !1113, line: 1165, baseType: !319, size: 32, offset: 3584)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1569, file: !1113, line: 1166, baseType: !319, size: 32, offset: 3616)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1569, file: !1113, line: 1167, baseType: !319, size: 32, offset: 3648)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1569, file: !1113, line: 1168, baseType: !319, size: 32, offset: 3680)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1569, file: !1113, line: 1171, baseType: !317, size: 16, offset: 3712)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1569, file: !1113, line: 1171, baseType: !317, size: 16, offset: 3728)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1569, file: !1113, line: 1172, baseType: !319, size: 32, offset: 3744)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1569, file: !1113, line: 1173, baseType: !364, size: 32, offset: 3776)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1569, file: !1113, line: 1174, baseType: !364, size: 32, offset: 3808)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1569, file: !1113, line: 1177, baseType: !2184, size: 1024, offset: 3840)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1113, line: 963, size: 1024, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2184, file: !1113, line: 965, baseType: !319, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2184, file: !1113, line: 968, baseType: !364, size: 32, offset: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2184, file: !1113, line: 971, baseType: !364, size: 32, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2184, file: !1113, line: 974, baseType: !364, size: 32, offset: 96)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2184, file: !1113, line: 977, baseType: !556, size: 96, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2184, file: !1113, line: 979, baseType: !556, size: 96, offset: 224)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2184, file: !1113, line: 982, baseType: !319, size: 32, offset: 320)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2184, file: !1113, line: 987, baseType: !504, size: 64, offset: 352)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2184, file: !1113, line: 989, baseType: !364, size: 32, offset: 416)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2184, file: !1113, line: 994, baseType: !319, size: 32, offset: 448)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2184, file: !1113, line: 995, baseType: !319, size: 32, offset: 480)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2184, file: !1113, line: 997, baseType: !304, size: 8, offset: 512)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2184, file: !1113, line: 998, baseType: !479, size: 56, offset: 520)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2184, file: !1113, line: 1000, baseType: !364, size: 32, offset: 576)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2184, file: !1113, line: 1003, baseType: !504, size: 64, offset: 608)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2184, file: !1113, line: 1006, baseType: !319, size: 32, offset: 672)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2184, file: !1113, line: 1009, baseType: !364, size: 32, offset: 704)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2184, file: !1113, line: 1012, baseType: !504, size: 64, offset: 736)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2184, file: !1113, line: 1015, baseType: !504, size: 64, offset: 800)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2184, file: !1113, line: 1018, baseType: !319, size: 32, offset: 864)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2184, file: !1113, line: 1019, baseType: !1781, size: 64, offset: 896)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2184, file: !1113, line: 1023, baseType: !364, size: 32, offset: 960)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2184, file: !1113, line: 1024, baseType: !319, size: 32, offset: 992)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1569, file: !1113, line: 1179, baseType: !2210, size: 320, offset: 4864)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1113, line: 1043, size: 320, elements: !2211)
!2211 = !{!2212, !2213, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2210, file: !1113, line: 1044, baseType: !304, size: 8)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2210, file: !1113, line: 1045, baseType: !2214, size: 16, offset: 8)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 16, elements: !446)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2210, file: !1113, line: 1048, baseType: !304, size: 8, offset: 24)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2210, file: !1113, line: 1049, baseType: !364, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2210, file: !1113, line: 1049, baseType: !364, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2210, file: !1113, line: 1052, baseType: !364, size: 32, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2210, file: !1113, line: 1052, baseType: !364, size: 32, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2210, file: !1113, line: 1053, baseType: !304, size: 8, offset: 160)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2210, file: !1113, line: 1054, baseType: !1558, size: 24, offset: 168)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2210, file: !1113, line: 1057, baseType: !364, size: 32, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2210, file: !1113, line: 1057, baseType: !364, size: 32, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2210, file: !1113, line: 1060, baseType: !364, size: 32, offset: 256)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2210, file: !1113, line: 1060, baseType: !364, size: 32, offset: 288)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1112, file: !1113, line: 1247, baseType: !2227, size: 64, offset: 2176)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1113, line: 60, flags: DIFlagFwdDecl)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1112, file: !1113, line: 1251, baseType: !2230, size: 31872, offset: 2240)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1113, line: 403, size: 31872, elements: !2231)
!2231 = !{!2232, !2267, !2287, !2296, !2316, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2446, !2447, !2448, !2450, !2466, !2467}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2230, file: !1113, line: 404, baseType: !2233, size: 1984)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1113, line: 259, size: 1984, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2250, !2262}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2233, file: !1113, line: 260, baseType: !304, size: 8)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2233, file: !1113, line: 263, baseType: !304, size: 8, offset: 8)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2233, file: !1113, line: 266, baseType: !304, size: 8, offset: 16)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2233, file: !1113, line: 267, baseType: !304, size: 8, offset: 24)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2233, file: !1113, line: 269, baseType: !304, size: 8, offset: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2233, file: !1113, line: 270, baseType: !304, size: 8, offset: 40)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2233, file: !1113, line: 276, baseType: !304, size: 8, offset: 48)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2233, file: !1113, line: 279, baseType: !304, size: 8, offset: 56)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2233, file: !1113, line: 280, baseType: !317, size: 16, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2233, file: !1113, line: 280, baseType: !317, size: 16, offset: 80)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2233, file: !1113, line: 281, baseType: !364, size: 32, offset: 96)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2233, file: !1113, line: 284, baseType: !304, size: 8, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2233, file: !1113, line: 285, baseType: !304, size: 8, offset: 136)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2233, file: !1113, line: 287, baseType: !2249, size: 48, offset: 144)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 48, elements: !1804)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2233, file: !1113, line: 290, baseType: !2251, size: 1280, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !473, line: 174, baseType: !2252)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !473, line: 166, size: 1280, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2252, file: !473, line: 167, baseType: !319, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2252, file: !473, line: 167, baseType: !319, size: 32, offset: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2252, file: !473, line: 168, baseType: !334, size: 512, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2252, file: !473, line: 169, baseType: !334, size: 512, offset: 576)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2252, file: !473, line: 170, baseType: !364, size: 32, offset: 1088)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2252, file: !473, line: 171, baseType: !364, size: 32, offset: 1120)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2252, file: !473, line: 172, baseType: !1594, size: 64, offset: 1152)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2252, file: !473, line: 173, baseType: !288, size: 64, offset: 1216)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2233, file: !1113, line: 291, baseType: !2263, size: 512, offset: 1472)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !473, line: 178, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !473, line: 176, size: 512, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2264, file: !473, line: 177, baseType: !334, size: 512)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2230, file: !1113, line: 406, baseType: !2268, size: 64, offset: 1984)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1113, line: 80, size: 1472, elements: !2270)
!2270 = !{!2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2269, file: !1113, line: 81, baseType: !288, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2269, file: !1113, line: 82, baseType: !288, size: 64, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2269, file: !1113, line: 83, baseType: !7, size: 32, offset: 128)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2269, file: !1113, line: 84, baseType: !7, size: 32, offset: 160)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2269, file: !1113, line: 86, baseType: !7, size: 32, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2269, file: !1113, line: 87, baseType: !7, size: 32, offset: 224)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2269, file: !1113, line: 88, baseType: !7, size: 32, offset: 256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2269, file: !1113, line: 89, baseType: !7, size: 32, offset: 288)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2269, file: !1113, line: 90, baseType: !7, size: 32, offset: 320)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2269, file: !1113, line: 91, baseType: !7, size: 32, offset: 352)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2269, file: !1113, line: 92, baseType: !7, size: 32, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2269, file: !1113, line: 93, baseType: !7, size: 32, offset: 416)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2269, file: !1113, line: 95, baseType: !2284, size: 1024, offset: 448)
!2284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 1024, elements: !2285)
!2285 = !{!2286}
!2286 = !DISubrange(count: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2230, file: !1113, line: 407, baseType: !2288, size: 64, offset: 2048)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1113, line: 98, size: 1216, elements: !2290)
!2290 = !{!2291, !2292, !2293, !2294, !2295}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2289, file: !1113, line: 100, baseType: !288, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2289, file: !1113, line: 101, baseType: !288, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2289, file: !1113, line: 103, baseType: !7, size: 32, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2289, file: !1113, line: 104, baseType: !7, size: 32, offset: 160)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2289, file: !1113, line: 106, baseType: !2284, size: 1024, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2230, file: !1113, line: 408, baseType: !2297, size: 512, offset: 2112)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1113, line: 109, size: 512, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2297, file: !1113, line: 111, baseType: !319, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2297, file: !1113, line: 112, baseType: !319, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2297, file: !1113, line: 115, baseType: !319, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2297, file: !1113, line: 116, baseType: !319, size: 32, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2297, file: !1113, line: 117, baseType: !319, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2297, file: !1113, line: 118, baseType: !319, size: 32, offset: 160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2297, file: !1113, line: 119, baseType: !319, size: 32, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2297, file: !1113, line: 120, baseType: !319, size: 32, offset: 224)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2297, file: !1113, line: 121, baseType: !319, size: 32, offset: 256)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2297, file: !1113, line: 122, baseType: !319, size: 32, offset: 288)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2297, file: !1113, line: 125, baseType: !319, size: 32, offset: 320)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2297, file: !1113, line: 126, baseType: !319, size: 32, offset: 352)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2297, file: !1113, line: 127, baseType: !317, size: 16, offset: 384)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2297, file: !1113, line: 128, baseType: !317, size: 16, offset: 400)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2297, file: !1113, line: 129, baseType: !319, size: 32, offset: 416)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2297, file: !1113, line: 130, baseType: !319, size: 32, offset: 448)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2297, file: !1113, line: 131, baseType: !319, size: 32, offset: 480)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2230, file: !1113, line: 409, baseType: !2317, size: 576, offset: 2624)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1113, line: 134, size: 576, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2317, file: !1113, line: 135, baseType: !319, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2317, file: !1113, line: 136, baseType: !319, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2317, file: !1113, line: 137, baseType: !319, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2317, file: !1113, line: 138, baseType: !319, size: 32, offset: 96)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2317, file: !1113, line: 139, baseType: !319, size: 32, offset: 128)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2317, file: !1113, line: 140, baseType: !319, size: 32, offset: 160)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2317, file: !1113, line: 141, baseType: !319, size: 32, offset: 192)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2317, file: !1113, line: 142, baseType: !319, size: 32, offset: 224)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2317, file: !1113, line: 143, baseType: !364, size: 32, offset: 256)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2317, file: !1113, line: 144, baseType: !319, size: 32, offset: 288)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2317, file: !1113, line: 145, baseType: !319, size: 32, offset: 320)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2317, file: !1113, line: 147, baseType: !319, size: 32, offset: 352)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2317, file: !1113, line: 148, baseType: !319, size: 32, offset: 384)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2317, file: !1113, line: 149, baseType: !319, size: 32, offset: 416)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2317, file: !1113, line: 150, baseType: !319, size: 32, offset: 448)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2317, file: !1113, line: 151, baseType: !319, size: 32, offset: 480)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2317, file: !1113, line: 152, baseType: !323, size: 64, offset: 512)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2230, file: !1113, line: 411, baseType: !319, size: 32, offset: 3200)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2230, file: !1113, line: 411, baseType: !319, size: 32, offset: 3232)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2230, file: !1113, line: 411, baseType: !319, size: 32, offset: 3264)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2230, file: !1113, line: 412, baseType: !364, size: 32, offset: 3296)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2230, file: !1113, line: 413, baseType: !319, size: 32, offset: 3328)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2230, file: !1113, line: 413, baseType: !319, size: 32, offset: 3360)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2230, file: !1113, line: 415, baseType: !319, size: 32, offset: 3392)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2230, file: !1113, line: 415, baseType: !319, size: 32, offset: 3424)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2230, file: !1113, line: 416, baseType: !317, size: 16, offset: 3456)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2230, file: !1113, line: 416, baseType: !317, size: 16, offset: 3472)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2230, file: !1113, line: 418, baseType: !364, size: 32, offset: 3488)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2230, file: !1113, line: 418, baseType: !364, size: 32, offset: 3520)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2230, file: !1113, line: 421, baseType: !364, size: 32, offset: 3552)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2230, file: !1113, line: 421, baseType: !364, size: 32, offset: 3584)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2230, file: !1113, line: 421, baseType: !364, size: 32, offset: 3616)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2230, file: !1113, line: 425, baseType: !317, size: 16, offset: 3648)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2230, file: !1113, line: 425, baseType: !317, size: 16, offset: 3664)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2230, file: !1113, line: 425, baseType: !317, size: 16, offset: 3680)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2230, file: !1113, line: 426, baseType: !317, size: 16, offset: 3696)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2230, file: !1113, line: 428, baseType: !317, size: 16, offset: 3712)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2230, file: !1113, line: 428, baseType: !317, size: 16, offset: 3728)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2230, file: !1113, line: 431, baseType: !319, size: 32, offset: 3744)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2230, file: !1113, line: 433, baseType: !317, size: 16, offset: 3776)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2230, file: !1113, line: 435, baseType: !317, size: 16, offset: 3792)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2230, file: !1113, line: 437, baseType: !317, size: 16, offset: 3808)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2230, file: !1113, line: 439, baseType: !317, size: 16, offset: 3824)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2230, file: !1113, line: 441, baseType: !317, size: 16, offset: 3840)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2230, file: !1113, line: 443, baseType: !317, size: 16, offset: 3856)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2230, file: !1113, line: 449, baseType: !319, size: 32, offset: 3872)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2230, file: !1113, line: 453, baseType: !319, size: 32, offset: 3904)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2230, file: !1113, line: 458, baseType: !317, size: 16, offset: 3936)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2230, file: !1113, line: 462, baseType: !317, size: 16, offset: 3952)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2230, file: !1113, line: 467, baseType: !319, size: 32, offset: 3968)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2230, file: !1113, line: 467, baseType: !319, size: 32, offset: 4000)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2230, file: !1113, line: 469, baseType: !317, size: 16, offset: 4032)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2230, file: !1113, line: 469, baseType: !317, size: 16, offset: 4048)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2230, file: !1113, line: 469, baseType: !317, size: 16, offset: 4064)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2230, file: !1113, line: 469, baseType: !317, size: 16, offset: 4080)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2230, file: !1113, line: 474, baseType: !317, size: 16, offset: 4096)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2230, file: !1113, line: 475, baseType: !304, size: 8, offset: 4112)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2230, file: !1113, line: 476, baseType: !304, size: 8, offset: 4120)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2230, file: !1113, line: 481, baseType: !319, size: 32, offset: 4128)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2230, file: !1113, line: 486, baseType: !319, size: 32, offset: 4160)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2230, file: !1113, line: 491, baseType: !319, size: 32, offset: 4192)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2230, file: !1113, line: 496, baseType: !317, size: 16, offset: 4224)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2230, file: !1113, line: 498, baseType: !317, size: 16, offset: 4240)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2230, file: !1113, line: 501, baseType: !317, size: 16, offset: 4256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2230, file: !1113, line: 502, baseType: !317, size: 16, offset: 4272)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2230, file: !1113, line: 508, baseType: !317, size: 16, offset: 4288)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2230, file: !1113, line: 513, baseType: !317, size: 16, offset: 4304)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2230, file: !1113, line: 515, baseType: !317, size: 16, offset: 4320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2230, file: !1113, line: 515, baseType: !317, size: 16, offset: 4336)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2230, file: !1113, line: 519, baseType: !1180, size: 128, offset: 4352)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2230, file: !1113, line: 519, baseType: !1180, size: 128, offset: 4480)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2230, file: !1113, line: 520, baseType: !1790, size: 128, offset: 4608)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2230, file: !1113, line: 523, baseType: !344, size: 128, offset: 4736)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2230, file: !1113, line: 524, baseType: !317, size: 16, offset: 4864)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2230, file: !1113, line: 527, baseType: !317, size: 16, offset: 4880)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2230, file: !1113, line: 532, baseType: !364, size: 32, offset: 4896)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2230, file: !1113, line: 532, baseType: !364, size: 32, offset: 4928)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2230, file: !1113, line: 534, baseType: !364, size: 32, offset: 4960)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2230, file: !1113, line: 538, baseType: !364, size: 32, offset: 4992)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2230, file: !1113, line: 542, baseType: !319, size: 32, offset: 5024)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2230, file: !1113, line: 545, baseType: !364, size: 32, offset: 5056)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2230, file: !1113, line: 545, baseType: !364, size: 32, offset: 5088)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2230, file: !1113, line: 545, baseType: !364, size: 32, offset: 5120)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2230, file: !1113, line: 548, baseType: !364, size: 32, offset: 5152)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2230, file: !1113, line: 551, baseType: !317, size: 16, offset: 5184)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2230, file: !1113, line: 551, baseType: !317, size: 16, offset: 5200)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2230, file: !1113, line: 551, baseType: !317, size: 16, offset: 5216)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2230, file: !1113, line: 551, baseType: !317, size: 16, offset: 5232)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2230, file: !1113, line: 552, baseType: !317, size: 16, offset: 5248)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2230, file: !1113, line: 552, baseType: !317, size: 16, offset: 5264)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2230, file: !1113, line: 553, baseType: !364, size: 32, offset: 5280)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2230, file: !1113, line: 553, baseType: !364, size: 32, offset: 5312)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2230, file: !1113, line: 554, baseType: !317, size: 16, offset: 5344)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2230, file: !1113, line: 554, baseType: !317, size: 16, offset: 5360)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2230, file: !1113, line: 555, baseType: !364, size: 32, offset: 5376)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2230, file: !1113, line: 555, baseType: !364, size: 32, offset: 5408)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2230, file: !1113, line: 558, baseType: !303, size: 8192, offset: 5440)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2230, file: !1113, line: 561, baseType: !319, size: 32, offset: 13632)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2230, file: !1113, line: 562, baseType: !317, size: 16, offset: 13664)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2230, file: !1113, line: 562, baseType: !317, size: 16, offset: 13680)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2230, file: !1113, line: 565, baseType: !1284, size: 6144, offset: 13696)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2230, file: !1113, line: 568, baseType: !466, size: 128, offset: 19840)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2230, file: !1113, line: 569, baseType: !466, size: 128, offset: 19968)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2230, file: !1113, line: 572, baseType: !304, size: 8, offset: 20096)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2230, file: !1113, line: 573, baseType: !304, size: 8, offset: 20104)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2230, file: !1113, line: 574, baseType: !304, size: 8, offset: 20112)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2230, file: !1113, line: 575, baseType: !2082, size: 40, offset: 20120)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2230, file: !1113, line: 578, baseType: !319, size: 32, offset: 20160)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2230, file: !1113, line: 579, baseType: !317, size: 16, offset: 20192)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2230, file: !1113, line: 580, baseType: !317, size: 16, offset: 20208)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2230, file: !1113, line: 581, baseType: !364, size: 32, offset: 20224)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2230, file: !1113, line: 582, baseType: !364, size: 32, offset: 20256)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2230, file: !1113, line: 585, baseType: !317, size: 16, offset: 20288)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2230, file: !1113, line: 585, baseType: !317, size: 16, offset: 20304)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2230, file: !1113, line: 586, baseType: !364, size: 32, offset: 20320)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2230, file: !1113, line: 589, baseType: !317, size: 16, offset: 20352)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2230, file: !1113, line: 589, baseType: !317, size: 16, offset: 20368)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2230, file: !1113, line: 590, baseType: !319, size: 32, offset: 20384)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2230, file: !1113, line: 593, baseType: !317, size: 16, offset: 20416)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2230, file: !1113, line: 593, baseType: !317, size: 16, offset: 20432)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2230, file: !1113, line: 594, baseType: !317, size: 16, offset: 20448)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2230, file: !1113, line: 594, baseType: !317, size: 16, offset: 20464)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2230, file: !1113, line: 595, baseType: !364, size: 32, offset: 20480)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2230, file: !1113, line: 596, baseType: !364, size: 32, offset: 20512)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2230, file: !1113, line: 597, baseType: !2444, size: 64, offset: 20544)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1534, line: 55, flags: DIFlagFwdDecl)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2230, file: !1113, line: 600, baseType: !319, size: 32, offset: 20608)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2230, file: !1113, line: 601, baseType: !364, size: 32, offset: 20640)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2230, file: !1113, line: 604, baseType: !2449, size: 256, offset: 20672)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 256, elements: !1720)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2230, file: !1113, line: 607, baseType: !2451, size: 10880, offset: 20928)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1113, line: 364, size: 10880, elements: !2452)
!2452 = !{!2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2451, file: !1113, line: 365, baseType: !2233, size: 1984)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2451, file: !1113, line: 367, baseType: !303, size: 8192, offset: 1984)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2451, file: !1113, line: 369, baseType: !317, size: 16, offset: 10176)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2451, file: !1113, line: 369, baseType: !317, size: 16, offset: 10192)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2451, file: !1113, line: 370, baseType: !317, size: 16, offset: 10208)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2451, file: !1113, line: 370, baseType: !317, size: 16, offset: 10224)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2451, file: !1113, line: 372, baseType: !364, size: 32, offset: 10240)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2451, file: !1113, line: 373, baseType: !364, size: 32, offset: 10272)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2451, file: !1113, line: 375, baseType: !1558, size: 24, offset: 10304)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2451, file: !1113, line: 376, baseType: !304, size: 8, offset: 10328)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2451, file: !1113, line: 378, baseType: !304, size: 8, offset: 10336)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2451, file: !1113, line: 379, baseType: !1558, size: 24, offset: 10344)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2451, file: !1113, line: 381, baseType: !334, size: 512, offset: 10368)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2230, file: !1113, line: 609, baseType: !319, size: 32, offset: 31808)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2230, file: !1113, line: 610, baseType: !319, size: 32, offset: 31840)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1112, file: !1113, line: 1252, baseType: !2469, size: 256, offset: 34112)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1113, line: 158, size: 256, elements: !2470)
!2470 = !{!2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2469, file: !1113, line: 159, baseType: !319, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2469, file: !1113, line: 160, baseType: !364, size: 32, offset: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2469, file: !1113, line: 161, baseType: !364, size: 32, offset: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2469, file: !1113, line: 162, baseType: !364, size: 32, offset: 96)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2469, file: !1113, line: 163, baseType: !319, size: 32, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2469, file: !1113, line: 164, baseType: !317, size: 16, offset: 160)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2469, file: !1113, line: 165, baseType: !317, size: 16, offset: 176)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2469, file: !1113, line: 166, baseType: !364, size: 32, offset: 192)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2469, file: !1113, line: 167, baseType: !364, size: 32, offset: 224)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1112, file: !1113, line: 1254, baseType: !344, size: 128, offset: 34368)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1112, file: !1113, line: 1255, baseType: !344, size: 128, offset: 34496)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1112, file: !1113, line: 1257, baseType: !288, size: 64, offset: 34624)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1112, file: !1113, line: 1258, baseType: !288, size: 64, offset: 34688)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1112, file: !1113, line: 1259, baseType: !288, size: 64, offset: 34752)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1112, file: !1113, line: 1260, baseType: !288, size: 64, offset: 34816)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1112, file: !1113, line: 1262, baseType: !288, size: 64, offset: 34880)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1112, file: !1113, line: 1265, baseType: !2488, size: 64, offset: 34944)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1113, line: 1265, flags: DIFlagFwdDecl)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1112, file: !1113, line: 1266, baseType: !317, size: 16, offset: 35008)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1112, file: !1113, line: 1267, baseType: !317, size: 16, offset: 35024)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1112, file: !1113, line: 1270, baseType: !319, size: 32, offset: 35040)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1112, file: !1113, line: 1271, baseType: !344, size: 128, offset: 35072)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1112, file: !1113, line: 1274, baseType: !2495, size: 128, offset: 35200)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1113, line: 650, size: 128, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2495, file: !1113, line: 651, baseType: !556, size: 96)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2495, file: !1113, line: 652, baseType: !304, size: 8, offset: 96)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2495, file: !1113, line: 652, baseType: !304, size: 8, offset: 104)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2495, file: !1113, line: 652, baseType: !304, size: 8, offset: 112)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2495, file: !1113, line: 652, baseType: !304, size: 8, offset: 120)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1112, file: !1113, line: 1275, baseType: !2503, size: 1472, offset: 35328)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1113, line: 676, size: 1472, elements: !2504)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2526, !2527, !2528, !2529, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2503, file: !1113, line: 679, baseType: !2495, size: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2503, file: !1113, line: 680, baseType: !317, size: 16, offset: 128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2503, file: !1113, line: 680, baseType: !317, size: 16, offset: 144)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2503, file: !1113, line: 680, baseType: !317, size: 16, offset: 160)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2503, file: !1113, line: 680, baseType: !317, size: 16, offset: 176)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2503, file: !1113, line: 681, baseType: !317, size: 16, offset: 192)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2503, file: !1113, line: 681, baseType: !317, size: 16, offset: 208)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2503, file: !1113, line: 681, baseType: !317, size: 16, offset: 224)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2503, file: !1113, line: 681, baseType: !317, size: 16, offset: 240)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2503, file: !1113, line: 682, baseType: !317, size: 16, offset: 256)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2503, file: !1113, line: 682, baseType: !559, size: 48, offset: 272)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2503, file: !1113, line: 685, baseType: !2517, size: 192, offset: 320)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1113, line: 633, size: 192, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2517, file: !1113, line: 634, baseType: !317, size: 16)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2517, file: !1113, line: 634, baseType: !317, size: 16, offset: 16)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2517, file: !1113, line: 635, baseType: !317, size: 16, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2517, file: !1113, line: 635, baseType: !317, size: 16, offset: 48)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2517, file: !1113, line: 636, baseType: !364, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2517, file: !1113, line: 636, baseType: !364, size: 32, offset: 96)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2517, file: !1113, line: 637, baseType: !2444, size: 64, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2503, file: !1113, line: 686, baseType: !317, size: 16, offset: 512)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2503, file: !1113, line: 686, baseType: !317, size: 16, offset: 528)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2503, file: !1113, line: 687, baseType: !364, size: 32, offset: 544)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2503, file: !1113, line: 688, baseType: !2530, size: 448, offset: 576)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1113, line: 674, baseType: !2531)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1113, line: 659, size: 448, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2531, file: !1113, line: 660, baseType: !364, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2531, file: !1113, line: 661, baseType: !364, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2531, file: !1113, line: 662, baseType: !364, size: 32, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2531, file: !1113, line: 663, baseType: !364, size: 32, offset: 96)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2531, file: !1113, line: 664, baseType: !364, size: 32, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2531, file: !1113, line: 665, baseType: !364, size: 32, offset: 160)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2531, file: !1113, line: 666, baseType: !364, size: 32, offset: 192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2531, file: !1113, line: 667, baseType: !364, size: 32, offset: 224)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2531, file: !1113, line: 668, baseType: !364, size: 32, offset: 256)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2531, file: !1113, line: 669, baseType: !364, size: 32, offset: 288)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2531, file: !1113, line: 670, baseType: !319, size: 32, offset: 320)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2531, file: !1113, line: 671, baseType: !364, size: 32, offset: 352)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2531, file: !1113, line: 672, baseType: !364, size: 32, offset: 384)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2531, file: !1113, line: 673, baseType: !317, size: 16, offset: 416)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2531, file: !1113, line: 673, baseType: !317, size: 16, offset: 432)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2503, file: !1113, line: 692, baseType: !364, size: 32, offset: 1024)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2503, file: !1113, line: 697, baseType: !364, size: 32, offset: 1056)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2503, file: !1113, line: 703, baseType: !319, size: 32, offset: 1088)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2503, file: !1113, line: 704, baseType: !317, size: 16, offset: 1120)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2503, file: !1113, line: 704, baseType: !317, size: 16, offset: 1136)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2503, file: !1113, line: 705, baseType: !317, size: 16, offset: 1152)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2503, file: !1113, line: 706, baseType: !317, size: 16, offset: 1168)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2503, file: !1113, line: 707, baseType: !317, size: 16, offset: 1184)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2503, file: !1113, line: 708, baseType: !317, size: 16, offset: 1200)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2503, file: !1113, line: 709, baseType: !317, size: 16, offset: 1216)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2503, file: !1113, line: 709, baseType: !317, size: 16, offset: 1232)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2503, file: !1113, line: 709, baseType: !317, size: 16, offset: 1248)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2503, file: !1113, line: 709, baseType: !317, size: 16, offset: 1264)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2503, file: !1113, line: 710, baseType: !317, size: 16, offset: 1280)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2503, file: !1113, line: 711, baseType: !317, size: 16, offset: 1296)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2503, file: !1113, line: 712, baseType: !364, size: 32, offset: 1312)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2503, file: !1113, line: 713, baseType: !364, size: 32, offset: 1344)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2503, file: !1113, line: 713, baseType: !364, size: 32, offset: 1376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2503, file: !1113, line: 713, baseType: !364, size: 32, offset: 1408)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2503, file: !1113, line: 713, baseType: !364, size: 32, offset: 1440)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1112, file: !1113, line: 1278, baseType: !2569, size: 64, offset: 36800)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1113, line: 1197, size: 64, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2574}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2569, file: !1113, line: 1199, baseType: !364, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2569, file: !1113, line: 1200, baseType: !304, size: 8, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2569, file: !1113, line: 1201, baseType: !304, size: 8, offset: 40)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2569, file: !1113, line: 1202, baseType: !317, size: 16, offset: 48)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1112, file: !1113, line: 1281, baseType: !955, size: 64, offset: 36864)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1112, file: !1113, line: 1284, baseType: !2577, size: 192, offset: 36928)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1113, line: 1208, size: 192, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2577, file: !1113, line: 1209, baseType: !556, size: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2577, file: !1113, line: 1210, baseType: !319, size: 32, offset: 96)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2577, file: !1113, line: 1210, baseType: !319, size: 32, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2577, file: !1113, line: 1210, baseType: !319, size: 32, offset: 160)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1112, file: !1113, line: 1287, baseType: !1330, size: 64, offset: 37120)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1112, file: !1113, line: 1289, baseType: !805, size: 64, offset: 37184)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1112, file: !1113, line: 1290, baseType: !805, size: 64, offset: 37248)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1112, file: !1113, line: 1293, baseType: !2251, size: 1280, offset: 37312)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1112, file: !1113, line: 1294, baseType: !2263, size: 512, offset: 38592)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1112, file: !1113, line: 1295, baseType: !472, size: 512, offset: 39104)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1112, file: !1113, line: 1298, baseType: !2590, size: 64, offset: 39616)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1113, line: 1298, flags: DIFlagFwdDecl)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1108, file: !404, line: 53, baseType: !319, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1108, file: !404, line: 54, baseType: !319, size: 32, offset: 96)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1108, file: !404, line: 55, baseType: !319, size: 32, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1108, file: !404, line: 55, baseType: !319, size: 32, offset: 160)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1108, file: !404, line: 56, baseType: !304, size: 8, offset: 192)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1108, file: !404, line: 56, baseType: !304, size: 8, offset: 200)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1108, file: !404, line: 57, baseType: !304, size: 8, offset: 208)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1108, file: !404, line: 57, baseType: !304, size: 8, offset: 216)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1108, file: !404, line: 59, baseType: !317, size: 16, offset: 224)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1108, file: !404, line: 59, baseType: !317, size: 16, offset: 240)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1108, file: !404, line: 59, baseType: !317, size: 16, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1108, file: !404, line: 61, baseType: !317, size: 16, offset: 272)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1108, file: !404, line: 63, baseType: !319, size: 32, offset: 288)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !821, file: !75, line: 293, baseType: !344, size: 128, offset: 11200)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !821, file: !75, line: 294, baseType: !2607, size: 64, offset: 11328)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !75, line: 113, baseType: !2609)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !75, line: 108, size: 256, elements: !2610)
!2610 = !{!2611, !2613, !2614, !2615, !2616}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2609, file: !75, line: 109, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2609, file: !75, line: 109, baseType: !2612, size: 64, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2609, file: !75, line: 110, baseType: !820, size: 64, offset: 128)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2609, file: !75, line: 111, baseType: !319, size: 32, offset: 192)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2609, file: !75, line: 112, baseType: !364, size: 32, offset: 224)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !595, file: !596, line: 82, baseType: !319, size: 32, offset: 832)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !280, file: !279, line: 95, baseType: !750, size: 1600, offset: 2240)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !280, file: !279, line: 95, baseType: !750, size: 1600, offset: 3840)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !280, file: !279, line: 95, baseType: !750, size: 1600, offset: 5440)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !280, file: !279, line: 98, baseType: !750, size: 1600, offset: 7040)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !280, file: !279, line: 98, baseType: !750, size: 1600, offset: 8640)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !280, file: !279, line: 101, baseType: !319, size: 32, offset: 10240)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !280, file: !279, line: 101, baseType: !319, size: 32, offset: 10272)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !280, file: !279, line: 101, baseType: !319, size: 32, offset: 10304)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !280, file: !279, line: 101, baseType: !319, size: 32, offset: 10336)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !280, file: !279, line: 104, baseType: !319, size: 32, offset: 10368)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !280, file: !279, line: 104, baseType: !319, size: 32, offset: 10400)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !280, file: !279, line: 111, baseType: !319, size: 32, offset: 10432)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !280, file: !279, line: 114, baseType: !556, size: 96, offset: 10464)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !280, file: !279, line: 115, baseType: !556, size: 96, offset: 10560)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !280, file: !279, line: 116, baseType: !556, size: 96, offset: 10656)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !280, file: !279, line: 118, baseType: !319, size: 32, offset: 10752)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !280, file: !279, line: 119, baseType: !317, size: 16, offset: 10784)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !280, file: !279, line: 119, baseType: !317, size: 16, offset: 10800)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !280, file: !279, line: 120, baseType: !364, size: 32, offset: 10816)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !280, file: !279, line: 121, baseType: !319, size: 32, offset: 10848)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !280, file: !279, line: 124, baseType: !304, size: 8, offset: 10880)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !280, file: !279, line: 124, baseType: !304, size: 8, offset: 10888)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !280, file: !279, line: 126, baseType: !304, size: 8, offset: 10896)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !280, file: !279, line: 126, baseType: !304, size: 8, offset: 10904)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !280, file: !279, line: 127, baseType: !304, size: 8, offset: 10912)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !280, file: !279, line: 128, baseType: !304, size: 8, offset: 10920)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !280, file: !279, line: 130, baseType: !317, size: 16, offset: 10928)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !280, file: !279, line: 132, baseType: !2646, size: 64, offset: 10944)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !384, line: 233, size: 3584, elements: !2648)
!2648 = !{!2649, !2650, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2665}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2647, file: !384, line: 234, baseType: !344, size: 128)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2647, file: !384, line: 235, baseType: !2651, size: 64, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !384, line: 69, baseType: !553)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2647, file: !384, line: 237, baseType: !813, size: 8, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2647, file: !384, line: 237, baseType: !813, size: 8, offset: 200)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2647, file: !384, line: 237, baseType: !813, size: 8, offset: 208)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2647, file: !384, line: 237, baseType: !813, size: 8, offset: 216)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2647, file: !384, line: 237, baseType: !813, size: 8, offset: 224)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2647, file: !384, line: 237, baseType: !813, size: 8, offset: 232)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2647, file: !384, line: 238, baseType: !813, size: 8, offset: 240)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2647, file: !384, line: 238, baseType: !813, size: 8, offset: 248)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2647, file: !384, line: 241, baseType: !749, size: 1600, offset: 256)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2647, file: !384, line: 242, baseType: !749, size: 1600, offset: 1856)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2647, file: !384, line: 243, baseType: !2664, size: 64, offset: 3456)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2647, file: !384, line: 244, baseType: !983, size: 64, offset: 3520)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !2668, line: 33, baseType: !7)
!2668 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !45, line: 79, baseType: !44)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !45, line: 158, baseType: !1215)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !45, line: 159, baseType: !2672)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!288, !288}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !596, line: 83, baseType: !595)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMElemF", file: !62, line: 149, baseType: !2679)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMElemF", file: !62, line: 143, size: 192, elements: !2680)
!2680 = !{!2681, !2682}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2679, file: !62, line: 144, baseType: !625, size: 128)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2679, file: !62, line: 148, baseType: !634, size: 64, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2684, line: 46, baseType: !809)
!2684 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!2685 = !{!0, !2686, !2688, !2690, !3059, !3061, !3066, !3068, !3208, !3210, !3215, !3218, !3220, !3222, !3225}
!2686 = !DIGlobalVariableExpression(var: !2687, expr: !DIExpression())
!2687 = distinct !DIGlobalVariable(name: "bm_wireoffs", scope: !2, file: !3, line: 184, type: !7, isLocal: false, isDefinition: true)
!2688 = !DIGlobalVariableExpression(var: !2689, expr: !DIExpression())
!2689 = distinct !DIGlobalVariable(name: "bm_vertoffs", scope: !2, file: !3, line: 184, type: !7, isLocal: false, isDefinition: true)
!2690 = !DIGlobalVariableExpression(var: !2691, expr: !DIExpression())
!2691 = distinct !DIGlobalVariable(name: "lastSelectedIndex", scope: !2692, file: !3, line: 435, type: !319, isLocal: true, isDefinition: true)
!2692 = distinct !DISubprogram(name: "EDBM_vert_find_nearest", scope: !3, file: !3, line: 406, type: !2693, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!647, !2695, !844, !3057, !3057}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewContext", file: !85, line: 75, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewContext", file: !85, line: 66, size: 512, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2903, !2995, !3055, !3056}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2697, file: !85, line: 67, baseType: !1111, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !2697, file: !85, line: 68, baseType: !820, size: 64, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !2697, file: !85, line: 69, baseType: !820, size: 64, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !2697, file: !85, line: 70, baseType: !2703, size: 64, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !2705, line: 230, size: 3072, elements: !2706)
!2705 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2706 = !{!2707, !2708, !2709, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2704, file: !2705, line: 231, baseType: !2703, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2704, file: !2705, line: 231, baseType: !2703, size: 64, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2704, file: !2705, line: 233, baseType: !2710, size: 1280, offset: 128)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !2711, line: 71, baseType: !2712)
!2711 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !2711, line: 40, size: 1280, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2741}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2712, file: !2711, line: 41, baseType: !1180, size: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2712, file: !2711, line: 41, baseType: !1180, size: 128, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2712, file: !2711, line: 42, baseType: !1790, size: 128, offset: 256)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !2712, file: !2711, line: 42, baseType: !1790, size: 128, offset: 384)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2712, file: !2711, line: 43, baseType: !1790, size: 128, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2712, file: !2711, line: 45, baseType: !504, size: 64, offset: 640)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2712, file: !2711, line: 45, baseType: !504, size: 64, offset: 704)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !2712, file: !2711, line: 46, baseType: !364, size: 32, offset: 768)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !2712, file: !2711, line: 46, baseType: !364, size: 32, offset: 800)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !2712, file: !2711, line: 48, baseType: !317, size: 16, offset: 832)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !2712, file: !2711, line: 49, baseType: !317, size: 16, offset: 848)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !2712, file: !2711, line: 51, baseType: !317, size: 16, offset: 864)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !2712, file: !2711, line: 52, baseType: !317, size: 16, offset: 880)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !2712, file: !2711, line: 53, baseType: !317, size: 16, offset: 896)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2712, file: !2711, line: 55, baseType: !317, size: 16, offset: 912)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2712, file: !2711, line: 56, baseType: !317, size: 16, offset: 928)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2712, file: !2711, line: 58, baseType: !317, size: 16, offset: 944)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2712, file: !2711, line: 58, baseType: !317, size: 16, offset: 960)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !2712, file: !2711, line: 59, baseType: !317, size: 16, offset: 976)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !2712, file: !2711, line: 59, baseType: !317, size: 16, offset: 992)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2712, file: !2711, line: 61, baseType: !317, size: 16, offset: 1008)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !2712, file: !2711, line: 63, baseType: !844, size: 64, offset: 1024)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !2712, file: !2711, line: 64, baseType: !319, size: 32, offset: 1088)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !2712, file: !2711, line: 65, baseType: !319, size: 32, offset: 1120)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2712, file: !2711, line: 68, baseType: !2739, size: 64, offset: 1152)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !2711, line: 68, flags: DIFlagFwdDecl)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2712, file: !2711, line: 69, baseType: !2742, size: 64, offset: 1216)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !2744, line: 490, size: 768, elements: !2745)
!2744 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2745 = !{!2746, !2747, !2748, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2743, file: !2744, line: 491, baseType: !2742, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2743, file: !2744, line: 491, baseType: !2742, size: 64, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !2743, file: !2744, line: 493, baseType: !2749, size: 64, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !158, line: 169, size: 2048, elements: !2751)
!2751 = !{!2752, !2753, !2754, !2755, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2839, !2842, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2750, file: !158, line: 170, baseType: !2749, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2750, file: !158, line: 170, baseType: !2749, size: 64, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !2750, file: !158, line: 172, baseType: !288, size: 64, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2750, file: !158, line: 174, baseType: !2756, size: 64, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !2705, line: 49, size: 1984, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2757, file: !2705, line: 50, baseType: !283, size: 960)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !2757, file: !2705, line: 52, baseType: !344, size: 128, offset: 960)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !2757, file: !2705, line: 53, baseType: !344, size: 128, offset: 1088)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !2757, file: !2705, line: 54, baseType: !344, size: 128, offset: 1216)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2757, file: !2705, line: 55, baseType: !344, size: 128, offset: 1344)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2757, file: !2705, line: 57, baseType: !1111, size: 64, offset: 1472)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !2757, file: !2705, line: 58, baseType: !1111, size: 64, offset: 1536)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !2757, file: !2705, line: 60, baseType: !319, size: 32, offset: 1600)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2757, file: !2705, line: 61, baseType: !319, size: 32, offset: 1632)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2757, file: !2705, line: 63, baseType: !317, size: 16, offset: 1664)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2757, file: !2705, line: 64, baseType: !317, size: 16, offset: 1680)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !2757, file: !2705, line: 65, baseType: !317, size: 16, offset: 1696)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2757, file: !2705, line: 66, baseType: !317, size: 16, offset: 1712)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2757, file: !2705, line: 67, baseType: !317, size: 16, offset: 1728)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !2757, file: !2705, line: 68, baseType: !317, size: 16, offset: 1744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !2757, file: !2705, line: 69, baseType: !317, size: 16, offset: 1760)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !2757, file: !2705, line: 70, baseType: !317, size: 16, offset: 1776)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2757, file: !2705, line: 71, baseType: !317, size: 16, offset: 1792)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !2757, file: !2705, line: 73, baseType: !317, size: 16, offset: 1808)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !2757, file: !2705, line: 74, baseType: !317, size: 16, offset: 1824)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2757, file: !2705, line: 76, baseType: !317, size: 16, offset: 1840)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !2757, file: !2705, line: 78, baseType: !2742, size: 64, offset: 1856)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2757, file: !2705, line: 79, baseType: !288, size: 64, offset: 1920)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !2750, file: !158, line: 175, baseType: !2756, size: 64, offset: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !2750, file: !158, line: 176, baseType: !334, size: 512, offset: 320)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !2750, file: !158, line: 178, baseType: !317, size: 16, offset: 832)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !2750, file: !158, line: 178, baseType: !317, size: 16, offset: 848)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2750, file: !158, line: 178, baseType: !317, size: 16, offset: 864)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2750, file: !158, line: 178, baseType: !317, size: 16, offset: 880)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !2750, file: !158, line: 179, baseType: !317, size: 16, offset: 896)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !2750, file: !158, line: 180, baseType: !317, size: 16, offset: 912)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2750, file: !158, line: 181, baseType: !317, size: 16, offset: 928)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2750, file: !158, line: 182, baseType: !317, size: 16, offset: 944)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !2750, file: !158, line: 183, baseType: !317, size: 16, offset: 960)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !2750, file: !158, line: 184, baseType: !317, size: 16, offset: 976)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !2750, file: !158, line: 185, baseType: !317, size: 16, offset: 992)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !2750, file: !158, line: 186, baseType: !317, size: 16, offset: 1008)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !2750, file: !158, line: 188, baseType: !319, size: 32, offset: 1024)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !2750, file: !158, line: 190, baseType: !317, size: 16, offset: 1056)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !2750, file: !158, line: 191, baseType: !317, size: 16, offset: 1072)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !2750, file: !158, line: 194, baseType: !2800, size: 64, offset: 1088)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !2744, line: 421, size: 960, elements: !2802)
!2802 = !{!2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2835, !2836, !2837, !2838}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2801, file: !2744, line: 422, baseType: !2800, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2801, file: !2744, line: 422, baseType: !2800, size: 64, offset: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2801, file: !2744, line: 424, baseType: !317, size: 16, offset: 128)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2801, file: !2744, line: 425, baseType: !317, size: 16, offset: 144)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2801, file: !2744, line: 426, baseType: !319, size: 32, offset: 160)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2801, file: !2744, line: 426, baseType: !319, size: 32, offset: 192)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2801, file: !2744, line: 427, baseType: !1340, size: 64, offset: 224)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2801, file: !2744, line: 428, baseType: !2249, size: 48, offset: 288)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2801, file: !2744, line: 431, baseType: !304, size: 8, offset: 336)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2801, file: !2744, line: 432, baseType: !304, size: 8, offset: 344)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2801, file: !2744, line: 435, baseType: !317, size: 16, offset: 352)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2801, file: !2744, line: 436, baseType: !317, size: 16, offset: 368)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2801, file: !2744, line: 437, baseType: !319, size: 32, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2801, file: !2744, line: 437, baseType: !319, size: 32, offset: 416)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2801, file: !2744, line: 438, baseType: !1746, size: 64, offset: 448)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2801, file: !2744, line: 439, baseType: !319, size: 32, offset: 512)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2801, file: !2744, line: 439, baseType: !319, size: 32, offset: 544)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2801, file: !2744, line: 442, baseType: !317, size: 16, offset: 576)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2801, file: !2744, line: 442, baseType: !317, size: 16, offset: 592)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2801, file: !2744, line: 442, baseType: !317, size: 16, offset: 608)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2801, file: !2744, line: 442, baseType: !317, size: 16, offset: 624)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2801, file: !2744, line: 443, baseType: !317, size: 16, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2801, file: !2744, line: 446, baseType: !317, size: 16, offset: 656)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2801, file: !2744, line: 449, baseType: !703, size: 64, offset: 704)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2801, file: !2744, line: 452, baseType: !2828, size: 64, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !2744, line: 463, size: 128, elements: !2830)
!2830 = !{!2831, !2832, !2833, !2834}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2829, file: !2744, line: 464, baseType: !319, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2829, file: !2744, line: 465, baseType: !364, size: 32, offset: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2829, file: !2744, line: 466, baseType: !364, size: 32, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2829, file: !2744, line: 467, baseType: !364, size: 32, offset: 96)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2801, file: !2744, line: 455, baseType: !317, size: 16, offset: 832)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2801, file: !2744, line: 456, baseType: !317, size: 16, offset: 848)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2801, file: !2744, line: 457, baseType: !319, size: 32, offset: 864)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2801, file: !2744, line: 458, baseType: !288, size: 64, offset: 896)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !2750, file: !158, line: 196, baseType: !2840, size: 64, offset: 1152)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !158, line: 55, flags: DIFlagFwdDecl)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !2750, file: !158, line: 198, baseType: !2843, size: 64, offset: 1216)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !2744, line: 398, size: 448, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2844, file: !2744, line: 399, baseType: !2843, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2844, file: !2744, line: 399, baseType: !2843, size: 64, offset: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2844, file: !2744, line: 400, baseType: !319, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2844, file: !2744, line: 401, baseType: !319, size: 32, offset: 160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2844, file: !2744, line: 402, baseType: !319, size: 32, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2844, file: !2744, line: 403, baseType: !319, size: 32, offset: 224)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2844, file: !2744, line: 404, baseType: !319, size: 32, offset: 256)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2844, file: !2744, line: 405, baseType: !319, size: 32, offset: 288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2844, file: !2744, line: 407, baseType: !288, size: 64, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2844, file: !2744, line: 414, baseType: !288, size: 64, offset: 384)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !2750, file: !158, line: 200, baseType: !319, size: 32, offset: 1280)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !2750, file: !158, line: 200, baseType: !319, size: 32, offset: 1312)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !2750, file: !158, line: 201, baseType: !288, size: 64, offset: 1344)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2750, file: !158, line: 203, baseType: !344, size: 128, offset: 1408)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2750, file: !158, line: 204, baseType: !344, size: 128, offset: 1536)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !2750, file: !158, line: 205, baseType: !344, size: 128, offset: 1664)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !2750, file: !158, line: 207, baseType: !344, size: 128, offset: 1792)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !2750, file: !158, line: 208, baseType: !344, size: 128, offset: 1920)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !2743, file: !2744, line: 495, baseType: !1746, size: 64, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2743, file: !2744, line: 496, baseType: !319, size: 32, offset: 256)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2743, file: !2744, line: 497, baseType: !288, size: 64, offset: 320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2743, file: !2744, line: 499, baseType: !1746, size: 64, offset: 384)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2743, file: !2744, line: 500, baseType: !1746, size: 64, offset: 448)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !2743, file: !2744, line: 502, baseType: !1746, size: 64, offset: 512)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !2743, file: !2744, line: 503, baseType: !1746, size: 64, offset: 576)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2743, file: !2744, line: 504, baseType: !1746, size: 64, offset: 640)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !2743, file: !2744, line: 505, baseType: !319, size: 32, offset: 704)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !2704, file: !2705, line: 234, baseType: !1790, size: 128, offset: 1408)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !2704, file: !2705, line: 235, baseType: !1790, size: 128, offset: 1536)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2704, file: !2705, line: 236, baseType: !317, size: 16, offset: 1664)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2704, file: !2705, line: 236, baseType: !317, size: 16, offset: 1680)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2704, file: !2705, line: 238, baseType: !317, size: 16, offset: 1696)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !2704, file: !2705, line: 239, baseType: !317, size: 16, offset: 1712)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2704, file: !2705, line: 240, baseType: !317, size: 16, offset: 1728)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2704, file: !2705, line: 241, baseType: !317, size: 16, offset: 1744)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2704, file: !2705, line: 243, baseType: !364, size: 32, offset: 1760)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2704, file: !2705, line: 244, baseType: !317, size: 16, offset: 1792)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2704, file: !2705, line: 244, baseType: !317, size: 16, offset: 1808)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2704, file: !2705, line: 246, baseType: !317, size: 16, offset: 1824)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !2704, file: !2705, line: 247, baseType: !317, size: 16, offset: 1840)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2704, file: !2705, line: 248, baseType: !317, size: 16, offset: 1856)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !2704, file: !2705, line: 249, baseType: !317, size: 16, offset: 1872)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !2704, file: !2705, line: 250, baseType: !317, size: 16, offset: 1888)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2704, file: !2705, line: 251, baseType: !317, size: 16, offset: 1904)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2704, file: !2705, line: 253, baseType: !2891, size: 64, offset: 1920)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !2705, line: 42, flags: DIFlagFwdDecl)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !2704, file: !2705, line: 255, baseType: !344, size: 128, offset: 1984)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !2704, file: !2705, line: 256, baseType: !344, size: 128, offset: 2112)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !2704, file: !2705, line: 257, baseType: !344, size: 128, offset: 2240)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !2704, file: !2705, line: 258, baseType: !344, size: 128, offset: 2368)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !2704, file: !2705, line: 259, baseType: !344, size: 128, offset: 2496)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2704, file: !2705, line: 260, baseType: !344, size: 128, offset: 2624)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !2704, file: !2705, line: 261, baseType: !344, size: 128, offset: 2752)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !2704, file: !2705, line: 263, baseType: !2742, size: 64, offset: 2880)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !2704, file: !2705, line: 265, baseType: !983, size: 64, offset: 2944)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !2704, file: !2705, line: 266, baseType: !288, size: 64, offset: 3008)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !2697, file: !85, line: 71, baseType: !2904, size: 64, offset: 256)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !2906, line: 151, size: 3008, elements: !2907)
!2906 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2907 = !{!2908, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2905, file: !2906, line: 152, baseType: !2909, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !2911, line: 85, size: 448, elements: !2912)
!2911 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2912 = !{!2913, !2914, !2915, !2916, !2917, !2918}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2910, file: !2911, line: 86, baseType: !2909, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2910, file: !2911, line: 86, baseType: !2909, size: 64, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2910, file: !2911, line: 87, baseType: !344, size: 128, offset: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2910, file: !2911, line: 88, baseType: !319, size: 32, offset: 256)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2910, file: !2911, line: 89, baseType: !364, size: 32, offset: 288)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2910, file: !2911, line: 90, baseType: !2919, size: 128, offset: 320)
!2919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !422)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2905, file: !2906, line: 152, baseType: !2909, size: 64, offset: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2905, file: !2906, line: 153, baseType: !344, size: 128, offset: 128)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2905, file: !2906, line: 154, baseType: !319, size: 32, offset: 256)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2905, file: !2906, line: 155, baseType: !364, size: 32, offset: 288)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2905, file: !2906, line: 156, baseType: !2919, size: 128, offset: 320)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2905, file: !2906, line: 158, baseType: !466, size: 128, offset: 448)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2905, file: !2906, line: 159, baseType: !364, size: 32, offset: 576)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !2905, file: !2906, line: 161, baseType: !364, size: 32, offset: 608)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !2905, file: !2906, line: 162, baseType: !304, size: 8, offset: 640)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2905, file: !2906, line: 163, baseType: !1558, size: 24, offset: 648)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !2905, file: !2906, line: 165, baseType: !7, size: 32, offset: 672)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !2905, file: !2906, line: 166, baseType: !7, size: 32, offset: 704)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2905, file: !2906, line: 168, baseType: !317, size: 16, offset: 736)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2905, file: !2906, line: 169, baseType: !317, size: 16, offset: 752)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2905, file: !2906, line: 171, baseType: !820, size: 64, offset: 768)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !2905, file: !2906, line: 171, baseType: !820, size: 64, offset: 832)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !2905, file: !2906, line: 172, baseType: !1180, size: 128, offset: 896)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !2905, file: !2906, line: 174, baseType: !346, size: 128, offset: 1024)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !2905, file: !2906, line: 175, baseType: !2939, size: 64, offset: 1152)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !2906, line: 70, size: 832, elements: !2941)
!2941 = !{!2942, !2943, !2944, !2945, !2946, !2947, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2940, file: !2906, line: 71, baseType: !2939, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2940, file: !2906, line: 71, baseType: !2939, size: 64, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2940, file: !2906, line: 73, baseType: !402, size: 64, offset: 128)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2940, file: !2906, line: 74, baseType: !1108, size: 320, offset: 192)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2940, file: !2906, line: 75, baseType: !1330, size: 64, offset: 512)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !2940, file: !2906, line: 76, baseType: !2948, size: 64, offset: 576)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1332, line: 50, size: 64, elements: !2949)
!2949 = !{!2950, !2951, !2952}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2948, file: !1332, line: 51, baseType: !319, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !2948, file: !1332, line: 52, baseType: !317, size: 16, offset: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !2948, file: !1332, line: 52, baseType: !317, size: 16, offset: 48)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2940, file: !2906, line: 77, baseType: !364, size: 32, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2940, file: !2906, line: 77, baseType: !364, size: 32, offset: 672)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2940, file: !2906, line: 77, baseType: !364, size: 32, offset: 704)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2940, file: !2906, line: 77, baseType: !364, size: 32, offset: 736)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2940, file: !2906, line: 78, baseType: !317, size: 16, offset: 768)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2940, file: !2906, line: 79, baseType: !317, size: 16, offset: 784)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2940, file: !2906, line: 80, baseType: !317, size: 16, offset: 800)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2940, file: !2906, line: 80, baseType: !317, size: 16, offset: 816)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2905, file: !2906, line: 177, baseType: !2904, size: 64, offset: 1216)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !2905, file: !2906, line: 179, baseType: !334, size: 512, offset: 1280)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2905, file: !2906, line: 181, baseType: !7, size: 32, offset: 1792)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !2905, file: !2906, line: 182, baseType: !319, size: 32, offset: 1824)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !2905, file: !2906, line: 187, baseType: !317, size: 16, offset: 1856)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !2905, file: !2906, line: 188, baseType: !317, size: 16, offset: 1872)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !2905, file: !2906, line: 189, baseType: !317, size: 16, offset: 1888)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2905, file: !2906, line: 189, baseType: !317, size: 16, offset: 1904)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2905, file: !2906, line: 190, baseType: !317, size: 16, offset: 1920)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !2905, file: !2906, line: 190, baseType: !317, size: 16, offset: 1936)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !2905, file: !2906, line: 192, baseType: !364, size: 32, offset: 1952)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !2905, file: !2906, line: 192, baseType: !364, size: 32, offset: 1984)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !2905, file: !2906, line: 193, baseType: !364, size: 32, offset: 2016)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !2905, file: !2906, line: 193, baseType: !364, size: 32, offset: 2048)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2905, file: !2906, line: 194, baseType: !556, size: 96, offset: 2080)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2905, file: !2906, line: 195, baseType: !556, size: 96, offset: 2176)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !2905, file: !2906, line: 197, baseType: !317, size: 16, offset: 2272)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !2905, file: !2906, line: 199, baseType: !317, size: 16, offset: 2288)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !2905, file: !2906, line: 200, baseType: !317, size: 16, offset: 2304)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !2905, file: !2906, line: 201, baseType: !304, size: 8, offset: 2320)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !2905, file: !2906, line: 204, baseType: !304, size: 8, offset: 2328)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !2905, file: !2906, line: 204, baseType: !304, size: 8, offset: 2336)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !2905, file: !2906, line: 204, baseType: !304, size: 8, offset: 2344)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2905, file: !2906, line: 204, baseType: !2214, size: 16, offset: 2352)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !2905, file: !2906, line: 207, baseType: !346, size: 128, offset: 2368)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !2905, file: !2906, line: 208, baseType: !346, size: 128, offset: 2496)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !2905, file: !2906, line: 209, baseType: !346, size: 128, offset: 2624)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !2905, file: !2906, line: 212, baseType: !304, size: 8, offset: 2752)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2905, file: !2906, line: 212, baseType: !304, size: 8, offset: 2760)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !2905, file: !2906, line: 212, baseType: !304, size: 8, offset: 2768)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2905, file: !2906, line: 213, baseType: !2082, size: 40, offset: 2776)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !2905, file: !2906, line: 215, baseType: !288, size: 64, offset: 2816)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !2905, file: !2906, line: 216, baseType: !379, size: 64, offset: 2880)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2905, file: !2906, line: 219, baseType: !955, size: 64, offset: 2944)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !2697, file: !85, line: 72, baseType: !2996, size: 64, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !2906, line: 85, size: 7040, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3009, !3010, !3011, !3012, !3015, !3026, !3027, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2997, file: !2906, line: 87, baseType: !1001, size: 512)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2997, file: !2906, line: 88, baseType: !1001, size: 512, offset: 512)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2997, file: !2906, line: 89, baseType: !1001, size: 512, offset: 1024)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !2997, file: !2906, line: 90, baseType: !1001, size: 512, offset: 1536)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !2997, file: !2906, line: 91, baseType: !1001, size: 512, offset: 2048)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !2997, file: !2906, line: 94, baseType: !1001, size: 512, offset: 2560)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !2997, file: !2906, line: 95, baseType: !1001, size: 512, offset: 3072)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2997, file: !2906, line: 99, baseType: !3007, size: 768, offset: 3584)
!3007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 768, elements: !3008)
!3008 = !{!1805, !468}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !2997, file: !2906, line: 100, baseType: !3007, size: 768, offset: 4352)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !2997, file: !2906, line: 101, baseType: !359, size: 64, offset: 5120)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2997, file: !2906, line: 103, baseType: !2996, size: 64, offset: 5184)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !2997, file: !2906, line: 104, baseType: !3013, size: 64, offset: 5248)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2906, line: 44, flags: DIFlagFwdDecl)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2997, file: !2906, line: 105, baseType: !3016, size: 64, offset: 5312)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !85, line: 77, size: 320, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3017, file: !85, line: 78, baseType: !1037, size: 16)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3017, file: !85, line: 78, baseType: !1037, size: 16, offset: 16)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3017, file: !85, line: 79, baseType: !317, size: 16, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3017, file: !85, line: 79, baseType: !317, size: 16, offset: 48)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !3017, file: !85, line: 80, baseType: !844, size: 64, offset: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !3017, file: !85, line: 81, baseType: !1745, size: 128, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !3017, file: !85, line: 83, baseType: !813, size: 8, offset: 256)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !2997, file: !2906, line: 106, baseType: !288, size: 64, offset: 5376)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2997, file: !2906, line: 109, baseType: !3028, size: 64, offset: 5440)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !2906, line: 46, flags: DIFlagFwdDecl)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2997, file: !2906, line: 110, baseType: !2742, size: 64, offset: 5504)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !2997, file: !2906, line: 114, baseType: !1001, size: 512, offset: 5568)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2997, file: !2906, line: 116, baseType: !466, size: 128, offset: 6080)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2997, file: !2906, line: 117, baseType: !364, size: 32, offset: 6208)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !2997, file: !2906, line: 118, baseType: !364, size: 32, offset: 6240)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !2997, file: !2906, line: 118, baseType: !364, size: 32, offset: 6272)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !2997, file: !2906, line: 119, baseType: !364, size: 32, offset: 6304)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2997, file: !2906, line: 120, baseType: !556, size: 96, offset: 6336)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !2997, file: !2906, line: 122, baseType: !364, size: 32, offset: 6432)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !2997, file: !2906, line: 123, baseType: !304, size: 8, offset: 6464)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2997, file: !2906, line: 125, baseType: !304, size: 8, offset: 6472)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2997, file: !2906, line: 126, baseType: !304, size: 8, offset: 6480)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !2997, file: !2906, line: 127, baseType: !304, size: 8, offset: 6488)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !2997, file: !2906, line: 128, baseType: !304, size: 8, offset: 6496)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2997, file: !2906, line: 129, baseType: !1558, size: 24, offset: 6504)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !2997, file: !2906, line: 130, baseType: !504, size: 64, offset: 6528)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !2997, file: !2906, line: 132, baseType: !317, size: 16, offset: 6592)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !2997, file: !2906, line: 133, baseType: !317, size: 16, offset: 6608)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !2997, file: !2906, line: 137, baseType: !466, size: 128, offset: 6624)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !2997, file: !2906, line: 138, baseType: !317, size: 16, offset: 6752)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !2997, file: !2906, line: 138, baseType: !317, size: 16, offset: 6768)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !2997, file: !2906, line: 140, baseType: !364, size: 32, offset: 6784)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !2997, file: !2906, line: 141, baseType: !556, size: 96, offset: 6816)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !2997, file: !2906, line: 145, baseType: !364, size: 32, offset: 6912)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !2997, file: !2906, line: 146, baseType: !556, size: 96, offset: 6944)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !2697, file: !85, line: 73, baseType: !594, size: 64, offset: 384)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2697, file: !85, line: 74, baseType: !1340, size: 64, offset: 448)
!3057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!3058 = !{}
!3059 = !DIGlobalVariableExpression(var: !3060, expr: !DIExpression())
!3060 = distinct !DIGlobalVariable(name: "lastSelected", scope: !2692, file: !3, line: 436, type: !620, isLocal: true, isDefinition: true)
!3061 = !DIGlobalVariableExpression(var: !3062, expr: !DIExpression())
!3062 = distinct !DIGlobalVariable(name: "lastSelectedIndex", scope: !3063, file: !3, line: 611, type: !319, isLocal: true, isDefinition: true)
!3063 = distinct !DISubprogram(name: "EDBM_face_find_nearest", scope: !3, file: !3, line: 577, type: !3064, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!657, !2695, !844}
!3066 = !DIGlobalVariableExpression(var: !3067, expr: !DIExpression())
!3067 = distinct !DIGlobalVariable(name: "lastSelected", scope: !3063, file: !3, line: 612, type: !685, isLocal: true, isDefinition: true)
!3068 = !DIGlobalVariableExpression(var: !3069, expr: !DIExpression())
!3069 = distinct !DIGlobalVariable(name: "elem_items", scope: !3070, file: !3, line: 1057, type: !3199, isLocal: true, isDefinition: true)
!3070 = distinct !DISubprogram(name: "MESH_OT_select_mode", scope: !3, file: !3, line: 1053, type: !3071, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{null, !3073}
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !2744, line: 568, baseType: !3075)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !2744, line: 508, size: 1536, elements: !3076)
!3076 = !{!3077, !3078, !3079, !3080, !3081, !3125, !3129, !3135, !3139, !3140, !3144, !3145, !3146, !3147, !3151, !3152, !3167, !3168, !3172, !3198}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3075, file: !2744, line: 509, baseType: !703, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3075, file: !2744, line: 510, baseType: !703, size: 64, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3075, file: !2744, line: 511, baseType: !703, size: 64, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3075, file: !2744, line: 512, baseType: !703, size: 64, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3075, file: !2744, line: 518, baseType: !3082, size: 64, offset: 256)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{!319, !3085, !3087}
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !105, line: 44, flags: DIFlagFwdDecl)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !158, line: 328, size: 1344, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093, !3094, !3096, !3097, !3098, !3108, !3118, !3119, !3120, !3123, !3124}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3088, file: !158, line: 329, baseType: !3087, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3088, file: !158, line: 329, baseType: !3087, size: 64, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3088, file: !158, line: 332, baseType: !334, size: 512, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3088, file: !158, line: 333, baseType: !323, size: 64, offset: 640)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3088, file: !158, line: 336, baseType: !3095, size: 64, offset: 704)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3088, file: !158, line: 337, baseType: !288, size: 64, offset: 768)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3088, file: !158, line: 338, baseType: !288, size: 64, offset: 832)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3088, file: !158, line: 340, baseType: !3099, size: 64, offset: 896)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !105, line: 55, size: 192, elements: !3101)
!3101 = !{!3102, !3106, !3107}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3100, file: !105, line: 58, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3100, file: !105, line: 56, size: 64, elements: !3104)
!3104 = !{!3105}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3103, file: !105, line: 57, baseType: !288, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3100, file: !105, line: 60, baseType: !1161, size: 64, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3100, file: !105, line: 61, baseType: !288, size: 64, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3088, file: !158, line: 341, baseType: !3109, size: 64, offset: 960)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !158, line: 106, size: 320, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3110, file: !158, line: 107, baseType: !344, size: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3110, file: !158, line: 108, baseType: !319, size: 32, offset: 128)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3110, file: !158, line: 109, baseType: !319, size: 32, offset: 160)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3110, file: !158, line: 110, baseType: !319, size: 32, offset: 192)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3110, file: !158, line: 110, baseType: !319, size: 32, offset: 224)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3110, file: !158, line: 111, baseType: !2742, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3088, file: !158, line: 343, baseType: !344, size: 128, offset: 1024)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3088, file: !158, line: 344, baseType: !3087, size: 64, offset: 1152)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3088, file: !158, line: 345, baseType: !3121, size: 64, offset: 1216)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !158, line: 61, flags: DIFlagFwdDecl)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3088, file: !158, line: 346, baseType: !317, size: 16, offset: 1280)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3088, file: !158, line: 346, baseType: !559, size: 48, offset: 1296)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3075, file: !2744, line: 524, baseType: !3126, size: 64, offset: 320)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!813, !3085, !3087}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3075, file: !2744, line: 530, baseType: !3130, size: 64, offset: 384)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!319, !3085, !3087, !3133}
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2801)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3075, file: !2744, line: 531, baseType: !3136, size: 64, offset: 448)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{null, !3085, !3087}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3075, file: !2744, line: 532, baseType: !3130, size: 64, offset: 512)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3075, file: !2744, line: 536, baseType: !3141, size: 64, offset: 576)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!319, !3085}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3075, file: !2744, line: 539, baseType: !3136, size: 64, offset: 640)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3075, file: !2744, line: 542, baseType: !1161, size: 64, offset: 704)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3075, file: !2744, line: 545, baseType: !328, size: 64, offset: 768)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3075, file: !2744, line: 549, baseType: !3148, size: 64, offset: 832)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !105, line: 333, baseType: !3150)
!3150 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !105, line: 39, flags: DIFlagFwdDecl)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3075, file: !2744, line: 552, baseType: !344, size: 128, offset: 896)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3075, file: !2744, line: 555, baseType: !3153, size: 64, offset: 1024)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !158, line: 281, size: 1088, elements: !3155)
!3155 = !{!3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3154, file: !158, line: 282, baseType: !3153, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3154, file: !158, line: 282, baseType: !3153, size: 64, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3154, file: !158, line: 284, baseType: !344, size: 128, offset: 128)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3154, file: !158, line: 285, baseType: !344, size: 128, offset: 256)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3154, file: !158, line: 287, baseType: !334, size: 512, offset: 384)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3154, file: !158, line: 288, baseType: !317, size: 16, offset: 896)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3154, file: !158, line: 289, baseType: !317, size: 16, offset: 912)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3154, file: !158, line: 291, baseType: !317, size: 16, offset: 928)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3154, file: !158, line: 292, baseType: !317, size: 16, offset: 944)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3154, file: !158, line: 295, baseType: !3141, size: 64, offset: 960)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3154, file: !158, line: 296, baseType: !288, size: 64, offset: 1024)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3075, file: !2744, line: 559, baseType: !288, size: 64, offset: 1088)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3075, file: !2744, line: 560, baseType: !3169, size: 64, offset: 1152)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!319, !3085, !3095}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3075, file: !2744, line: 563, baseType: !3173, size: 256, offset: 1216)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !105, line: 436, baseType: !3174)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !105, line: 430, size: 256, elements: !3175)
!3175 = !{!3176, !3177, !3180, !3196}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3174, file: !105, line: 431, baseType: !288, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3174, file: !105, line: 432, baseType: !3178, size: 64, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !105, line: 417, baseType: !1162)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3174, file: !105, line: 433, baseType: !3181, size: 64, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !105, line: 408, baseType: !3182)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!319, !3085, !3099, !3185, !3187}
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !105, line: 38, flags: DIFlagFwdDecl)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !105, line: 348, baseType: !3189)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !105, line: 337, size: 256, elements: !3190)
!3190 = !{!3191, !3192, !3193, !3194, !3195}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3189, file: !105, line: 339, baseType: !288, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3189, file: !105, line: 342, baseType: !3185, size: 64, offset: 64)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3189, file: !105, line: 345, baseType: !319, size: 32, offset: 128)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3189, file: !105, line: 347, baseType: !319, size: 32, offset: 160)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3189, file: !105, line: 347, baseType: !319, size: 32, offset: 192)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3174, file: !105, line: 434, baseType: !3197, size: 64, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !105, line: 409, baseType: !1215)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3075, file: !2744, line: 566, baseType: !317, size: 16, offset: 1472)
!3199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3200, size: 1280, elements: !467)
!3200 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !105, line: 308, baseType: !3201)
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !105, line: 302, size: 320, elements: !3202)
!3202 = !{!3203, !3204, !3205, !3206, !3207}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3201, file: !105, line: 303, baseType: !319, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3201, file: !105, line: 304, baseType: !703, size: 64, offset: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3201, file: !105, line: 305, baseType: !319, size: 32, offset: 128)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3201, file: !105, line: 306, baseType: !703, size: 64, offset: 192)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3201, file: !105, line: 307, baseType: !703, size: 64, offset: 256)
!3208 = !DIGlobalVariableExpression(var: !3209, expr: !DIExpression())
!3209 = distinct !DIGlobalVariable(name: "actions_items", scope: !3070, file: !3, line: 1064, type: !3199, isLocal: true, isDefinition: true)
!3210 = !DIGlobalVariableExpression(var: !3211, expr: !DIExpression())
!3211 = distinct !DIGlobalVariable(name: "type_items", scope: !3212, file: !3, line: 2337, type: !3213, isLocal: true, isDefinition: true)
!3212 = distinct !DISubprogram(name: "MESH_OT_select_face_by_sides", scope: !3, file: !3, line: 2335, type: !3071, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3214, size: 1600, elements: !2083)
!3214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3200)
!3215 = !DIGlobalVariableExpression(var: !3216, expr: !DIExpression())
!3216 = distinct !DIGlobalVariable(name: "axis_mode_items", scope: !3217, file: !3, line: 3172, type: !3199, isLocal: true, isDefinition: true)
!3217 = distinct !DISubprogram(name: "MESH_OT_select_axis", scope: !3, file: !3, line: 3170, type: !3071, scopeLine: 3171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3218 = !DIGlobalVariableExpression(var: !3219, expr: !DIExpression())
!3219 = distinct !DIGlobalVariable(name: "axis_items_xyz", scope: !3217, file: !3, line: 3179, type: !3199, isLocal: true, isDefinition: true)
!3220 = !DIGlobalVariableExpression(var: !3221, expr: !DIExpression())
!3221 = distinct !DIGlobalVariable(name: "selbuf", scope: !2, file: !3, line: 187, type: !2666, isLocal: true, isDefinition: true)
!3222 = !DIGlobalVariableExpression(var: !3223, expr: !DIExpression())
!3223 = distinct !DIGlobalVariable(name: "prop_similar_types", scope: !2, file: !3, line: 689, type: !3224, isLocal: true, isDefinition: true)
!3224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3200, size: 6400, elements: !1759)
!3225 = !DIGlobalVariableExpression(var: !3226, expr: !DIExpression())
!3226 = distinct !DIGlobalVariable(name: "prop_similar_compare_types", scope: !2, file: !3, line: 681, type: !3199, isLocal: true, isDefinition: true)
!3227 = !{i32 7, !"Dwarf Version", i32 4}
!3228 = !{i32 2, !"Debug Info Version", i32 3}
!3229 = !{i32 1, !"wchar_size", i32 4}
!3230 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3231 = distinct !DISubprogram(name: "EDBM_select_mirrored", scope: !3, file: !3, line: 78, type: !3232, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !2675, !813, !1754, !1754}
!3234 = !DILocalVariable(name: "em", arg: 1, scope: !3231, file: !3, line: 78, type: !2675)
!3235 = !DILocation(line: 78, column: 39, scope: !3231)
!3236 = !DILocalVariable(name: "extend", arg: 2, scope: !3231, file: !3, line: 78, type: !813)
!3237 = !DILocation(line: 78, column: 48, scope: !3231)
!3238 = !DILocalVariable(name: "r_totmirr", arg: 3, scope: !3231, file: !3, line: 79, type: !1754)
!3239 = !DILocation(line: 79, column: 32, scope: !3231)
!3240 = !DILocalVariable(name: "r_totfail", arg: 4, scope: !3231, file: !3, line: 79, type: !1754)
!3241 = !DILocation(line: 79, column: 48, scope: !3231)
!3242 = !DILocalVariable(name: "me", scope: !3231, file: !3, line: 81, type: !277)
!3243 = !DILocation(line: 81, column: 8, scope: !3231)
!3244 = !DILocation(line: 81, column: 21, scope: !3231)
!3245 = !DILocation(line: 81, column: 25, scope: !3231)
!3246 = !DILocation(line: 81, column: 29, scope: !3231)
!3247 = !DILocation(line: 81, column: 13, scope: !3231)
!3248 = !DILocalVariable(name: "bm", scope: !3231, file: !3, line: 82, type: !739)
!3249 = !DILocation(line: 82, column: 9, scope: !3231)
!3250 = !DILocation(line: 82, column: 14, scope: !3231)
!3251 = !DILocation(line: 82, column: 18, scope: !3231)
!3252 = !DILocalVariable(name: "iter", scope: !3231, file: !3, line: 83, type: !3253)
!3253 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !45, line: 186, baseType: !3254)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !45, line: 164, size: 512, elements: !3255)
!3255 = !{!3256, !3335, !3336, !3337, !3338}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3254, file: !45, line: 179, baseType: !3257, size: 320)
!3257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !45, line: 166, size: 320, elements: !3258)
!3258 = !{!3259, !3273, !3279, !3287, !3295, !3301, !3307, !3313, !3317, !3323, !3329}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3257, file: !45, line: 167, baseType: !3260, size: 192)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !45, line: 113, size: 192, elements: !3261)
!3261 = !{!3262}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3260, file: !45, line: 114, baseType: !3263, size: 192)
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !228, line: 80, baseType: !3264)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !228, line: 76, size: 192, elements: !3265)
!3265 = !{!3266, !3269, !3272}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3264, file: !228, line: 77, baseType: !3267, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !228, line: 47, baseType: !613)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3264, file: !228, line: 78, baseType: !3270, size: 64, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !228, line: 45, flags: DIFlagFwdDecl)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3264, file: !228, line: 79, baseType: !7, size: 32, offset: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3257, file: !45, line: 169, baseType: !3274, size: 192)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !45, line: 116, size: 192, elements: !3275)
!3275 = !{!3276, !3277, !3278}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3274, file: !45, line: 117, baseType: !620, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3274, file: !45, line: 118, baseType: !681, size: 64, offset: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3274, file: !45, line: 118, baseType: !681, size: 64, offset: 128)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3257, file: !45, line: 170, baseType: !3280, size: 320)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !45, line: 120, size: 320, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285, !3286}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3280, file: !45, line: 121, baseType: !620, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3280, file: !45, line: 122, baseType: !663, size: 64, offset: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3280, file: !45, line: 122, baseType: !663, size: 64, offset: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3280, file: !45, line: 123, baseType: !681, size: 64, offset: 192)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3280, file: !45, line: 123, baseType: !681, size: 64, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3257, file: !45, line: 171, baseType: !3288, size: 320)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !45, line: 125, size: 320, elements: !3289)
!3289 = !{!3290, !3291, !3292, !3293, !3294}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3288, file: !45, line: 126, baseType: !620, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3288, file: !45, line: 127, baseType: !663, size: 64, offset: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3288, file: !45, line: 127, baseType: !663, size: 64, offset: 128)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3288, file: !45, line: 128, baseType: !681, size: 64, offset: 192)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3288, file: !45, line: 128, baseType: !681, size: 64, offset: 256)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3257, file: !45, line: 172, baseType: !3296, size: 192)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !45, line: 130, size: 192, elements: !3297)
!3297 = !{!3298, !3299, !3300}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3296, file: !45, line: 131, baseType: !681, size: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3296, file: !45, line: 132, baseType: !663, size: 64, offset: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3296, file: !45, line: 132, baseType: !663, size: 64, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3257, file: !45, line: 173, baseType: !3302, size: 192)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !45, line: 134, size: 192, elements: !3303)
!3303 = !{!3304, !3305, !3306}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3302, file: !45, line: 135, baseType: !663, size: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3302, file: !45, line: 136, baseType: !663, size: 64, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3302, file: !45, line: 136, baseType: !663, size: 64, offset: 128)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3257, file: !45, line: 174, baseType: !3308, size: 192)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !45, line: 138, size: 192, elements: !3309)
!3309 = !{!3310, !3311, !3312}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3308, file: !45, line: 139, baseType: !681, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3308, file: !45, line: 140, baseType: !663, size: 64, offset: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3308, file: !45, line: 140, baseType: !663, size: 64, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3257, file: !45, line: 175, baseType: !3314, size: 64)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !45, line: 142, size: 64, elements: !3315)
!3315 = !{!3316}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3314, file: !45, line: 143, baseType: !681, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3257, file: !45, line: 176, baseType: !3318, size: 192)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !45, line: 145, size: 192, elements: !3319)
!3319 = !{!3320, !3321, !3322}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3318, file: !45, line: 146, baseType: !685, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3318, file: !45, line: 147, baseType: !663, size: 64, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3318, file: !45, line: 147, baseType: !663, size: 64, offset: 128)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3257, file: !45, line: 177, baseType: !3324, size: 192)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !45, line: 149, size: 192, elements: !3325)
!3325 = !{!3326, !3327, !3328}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3324, file: !45, line: 150, baseType: !685, size: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3324, file: !45, line: 151, baseType: !663, size: 64, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3324, file: !45, line: 151, baseType: !663, size: 64, offset: 128)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3257, file: !45, line: 178, baseType: !3330, size: 192)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !45, line: 153, size: 192, elements: !3331)
!3331 = !{!3332, !3333, !3334}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3330, file: !45, line: 154, baseType: !685, size: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3330, file: !45, line: 155, baseType: !663, size: 64, offset: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3330, file: !45, line: 155, baseType: !663, size: 64, offset: 128)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3254, file: !45, line: 181, baseType: !2670, size: 64, offset: 320)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3254, file: !45, line: 182, baseType: !2671, size: 64, offset: 384)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3254, file: !45, line: 184, baseType: !319, size: 32, offset: 448)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !3254, file: !45, line: 185, baseType: !304, size: 8, offset: 480)
!3339 = !DILocation(line: 83, column: 9, scope: !3231)
!3340 = !DILocalVariable(name: "totmirr", scope: !3231, file: !3, line: 84, type: !319)
!3341 = !DILocation(line: 84, column: 6, scope: !3231)
!3342 = !DILocalVariable(name: "totfail", scope: !3231, file: !3, line: 85, type: !319)
!3343 = !DILocation(line: 85, column: 6, scope: !3231)
!3344 = !DILocalVariable(name: "use_topology", scope: !3231, file: !3, line: 86, type: !813)
!3345 = !DILocation(line: 86, column: 7, scope: !3231)
!3346 = !DILocation(line: 86, column: 23, scope: !3231)
!3347 = !DILocation(line: 86, column: 26, scope: !3231)
!3348 = !DILocation(line: 86, column: 30, scope: !3231)
!3349 = !DILocation(line: 86, column: 34, scope: !3231)
!3350 = !DILocation(line: 86, column: 43, scope: !3231)
!3351 = !DILocation(line: 0, scope: !3231)
!3352 = !DILocation(line: 86, column: 22, scope: !3231)
!3353 = !DILocation(line: 88, column: 16, scope: !3231)
!3354 = !DILocation(line: 88, column: 26, scope: !3231)
!3355 = !DILocation(line: 88, column: 3, scope: !3231)
!3356 = !DILocation(line: 88, column: 13, scope: !3231)
!3357 = !DILocation(line: 91, column: 6, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 91, column: 6)
!3359 = !DILocation(line: 91, column: 10, scope: !3358)
!3360 = !DILocation(line: 91, column: 21, scope: !3358)
!3361 = !DILocation(line: 91, column: 6, scope: !3231)
!3362 = !DILocalVariable(name: "v", scope: !3363, file: !3, line: 92, type: !620)
!3363 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 91, column: 42)
!3364 = !DILocation(line: 92, column: 11, scope: !3363)
!3365 = !DILocation(line: 93, column: 3, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 93, column: 3)
!3367 = !DILocation(line: 93, column: 3, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 93, column: 3)
!3369 = !DILocation(line: 94, column: 4, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 93, column: 49)
!3371 = !DILocation(line: 95, column: 3, scope: !3370)
!3372 = distinct !{!3372, !3365, !3373}
!3373 = !DILocation(line: 95, column: 3, scope: !3366)
!3374 = !DILocation(line: 96, column: 2, scope: !3363)
!3375 = !DILocation(line: 97, column: 11, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 97, column: 11)
!3377 = !DILocation(line: 97, column: 15, scope: !3376)
!3378 = !DILocation(line: 97, column: 26, scope: !3376)
!3379 = !DILocation(line: 97, column: 11, scope: !3358)
!3380 = !DILocalVariable(name: "e", scope: !3381, file: !3, line: 98, type: !681)
!3381 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 97, column: 45)
!3382 = !DILocation(line: 98, column: 11, scope: !3381)
!3383 = !DILocation(line: 99, column: 3, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 99, column: 3)
!3385 = !DILocation(line: 99, column: 3, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 99, column: 3)
!3387 = !DILocation(line: 100, column: 4, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 99, column: 49)
!3389 = !DILocation(line: 101, column: 3, scope: !3388)
!3390 = distinct !{!3390, !3383, !3391}
!3391 = !DILocation(line: 101, column: 3, scope: !3384)
!3392 = !DILocation(line: 102, column: 2, scope: !3381)
!3393 = !DILocalVariable(name: "f", scope: !3394, file: !3, line: 104, type: !685)
!3394 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 103, column: 7)
!3395 = !DILocation(line: 104, column: 11, scope: !3394)
!3396 = !DILocation(line: 105, column: 3, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 105, column: 3)
!3398 = !DILocation(line: 105, column: 3, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 105, column: 3)
!3400 = !DILocation(line: 106, column: 4, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 105, column: 49)
!3402 = !DILocation(line: 107, column: 3, scope: !3401)
!3403 = distinct !{!3403, !3396, !3404}
!3404 = !DILocation(line: 107, column: 3, scope: !3397)
!3405 = !DILocation(line: 110, column: 32, scope: !3231)
!3406 = !DILocation(line: 110, column: 51, scope: !3231)
!3407 = !DILocation(line: 110, column: 2, scope: !3231)
!3408 = !DILocation(line: 112, column: 7, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 112, column: 6)
!3410 = !DILocation(line: 112, column: 6, scope: !3231)
!3411 = !DILocation(line: 113, column: 25, scope: !3409)
!3412 = !DILocation(line: 113, column: 3, scope: !3409)
!3413 = !DILocation(line: 116, column: 6, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 116, column: 6)
!3415 = !DILocation(line: 116, column: 10, scope: !3414)
!3416 = !DILocation(line: 116, column: 21, scope: !3414)
!3417 = !DILocation(line: 116, column: 6, scope: !3231)
!3418 = !DILocalVariable(name: "v", scope: !3419, file: !3, line: 117, type: !620)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 116, column: 42)
!3420 = !DILocation(line: 117, column: 11, scope: !3419)
!3421 = !DILocation(line: 118, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 118, column: 3)
!3423 = !DILocation(line: 118, column: 3, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 118, column: 3)
!3425 = !DILocation(line: 119, column: 9, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 119, column: 8)
!3427 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 118, column: 49)
!3428 = !DILocation(line: 119, column: 46, scope: !3426)
!3429 = !DILocation(line: 119, column: 49, scope: !3426)
!3430 = !DILocation(line: 119, column: 8, scope: !3427)
!3431 = !DILocalVariable(name: "v_mirr", scope: !3432, file: !3, line: 120, type: !620)
!3432 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 119, column: 84)
!3433 = !DILocation(line: 120, column: 13, scope: !3432)
!3434 = !DILocation(line: 120, column: 44, scope: !3432)
!3435 = !DILocation(line: 120, column: 48, scope: !3432)
!3436 = !DILocation(line: 120, column: 22, scope: !3432)
!3437 = !DILocation(line: 121, column: 9, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 121, column: 9)
!3439 = !DILocation(line: 121, column: 16, scope: !3438)
!3440 = !DILocation(line: 121, column: 20, scope: !3438)
!3441 = !DILocation(line: 121, column: 9, scope: !3432)
!3442 = !DILocation(line: 122, column: 25, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 121, column: 63)
!3444 = !DILocation(line: 122, column: 29, scope: !3443)
!3445 = !DILocation(line: 122, column: 6, scope: !3443)
!3446 = !DILocation(line: 123, column: 13, scope: !3443)
!3447 = !DILocation(line: 124, column: 5, scope: !3443)
!3448 = !DILocation(line: 126, column: 13, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 125, column: 10)
!3450 = !DILocation(line: 128, column: 4, scope: !3432)
!3451 = !DILocation(line: 129, column: 3, scope: !3427)
!3452 = distinct !{!3452, !3421, !3453}
!3453 = !DILocation(line: 129, column: 3, scope: !3422)
!3454 = !DILocation(line: 130, column: 2, scope: !3419)
!3455 = !DILocation(line: 131, column: 11, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 131, column: 11)
!3457 = !DILocation(line: 131, column: 15, scope: !3456)
!3458 = !DILocation(line: 131, column: 26, scope: !3456)
!3459 = !DILocation(line: 131, column: 11, scope: !3414)
!3460 = !DILocalVariable(name: "e", scope: !3461, file: !3, line: 132, type: !681)
!3461 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 131, column: 45)
!3462 = !DILocation(line: 132, column: 11, scope: !3461)
!3463 = !DILocation(line: 133, column: 3, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 133, column: 3)
!3465 = !DILocation(line: 133, column: 3, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 133, column: 3)
!3467 = !DILocation(line: 134, column: 9, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 134, column: 8)
!3469 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 133, column: 49)
!3470 = !DILocation(line: 134, column: 46, scope: !3468)
!3471 = !DILocation(line: 134, column: 49, scope: !3468)
!3472 = !DILocation(line: 134, column: 8, scope: !3469)
!3473 = !DILocalVariable(name: "e_mirr", scope: !3474, file: !3, line: 135, type: !681)
!3474 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 134, column: 84)
!3475 = !DILocation(line: 135, column: 13, scope: !3474)
!3476 = !DILocation(line: 135, column: 49, scope: !3474)
!3477 = !DILocation(line: 135, column: 53, scope: !3474)
!3478 = !DILocation(line: 135, column: 22, scope: !3474)
!3479 = !DILocation(line: 136, column: 9, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 136, column: 9)
!3481 = !DILocation(line: 136, column: 16, scope: !3480)
!3482 = !DILocation(line: 136, column: 20, scope: !3480)
!3483 = !DILocation(line: 136, column: 9, scope: !3474)
!3484 = !DILocation(line: 137, column: 25, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 136, column: 63)
!3486 = !DILocation(line: 137, column: 29, scope: !3485)
!3487 = !DILocation(line: 137, column: 6, scope: !3485)
!3488 = !DILocation(line: 138, column: 13, scope: !3485)
!3489 = !DILocation(line: 139, column: 5, scope: !3485)
!3490 = !DILocation(line: 141, column: 13, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 140, column: 10)
!3492 = !DILocation(line: 143, column: 4, scope: !3474)
!3493 = !DILocation(line: 144, column: 3, scope: !3469)
!3494 = distinct !{!3494, !3463, !3495}
!3495 = !DILocation(line: 144, column: 3, scope: !3464)
!3496 = !DILocation(line: 145, column: 2, scope: !3461)
!3497 = !DILocalVariable(name: "f", scope: !3498, file: !3, line: 147, type: !685)
!3498 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 146, column: 7)
!3499 = !DILocation(line: 147, column: 11, scope: !3498)
!3500 = !DILocation(line: 148, column: 3, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 148, column: 3)
!3502 = !DILocation(line: 148, column: 3, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 148, column: 3)
!3504 = !DILocation(line: 149, column: 9, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 149, column: 8)
!3506 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 148, column: 49)
!3507 = !DILocation(line: 149, column: 46, scope: !3505)
!3508 = !DILocation(line: 149, column: 49, scope: !3505)
!3509 = !DILocation(line: 149, column: 8, scope: !3506)
!3510 = !DILocalVariable(name: "f_mirr", scope: !3511, file: !3, line: 150, type: !685)
!3511 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 149, column: 84)
!3512 = !DILocation(line: 150, column: 13, scope: !3511)
!3513 = !DILocation(line: 150, column: 49, scope: !3511)
!3514 = !DILocation(line: 150, column: 53, scope: !3511)
!3515 = !DILocation(line: 150, column: 22, scope: !3511)
!3516 = !DILocation(line: 151, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 151, column: 9)
!3518 = !DILocation(line: 151, column: 16, scope: !3517)
!3519 = !DILocation(line: 151, column: 20, scope: !3517)
!3520 = !DILocation(line: 151, column: 9, scope: !3511)
!3521 = !DILocation(line: 152, column: 25, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 151, column: 63)
!3523 = !DILocation(line: 152, column: 29, scope: !3522)
!3524 = !DILocation(line: 152, column: 6, scope: !3522)
!3525 = !DILocation(line: 153, column: 13, scope: !3522)
!3526 = !DILocation(line: 154, column: 5, scope: !3522)
!3527 = !DILocation(line: 156, column: 13, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 155, column: 10)
!3529 = !DILocation(line: 158, column: 4, scope: !3511)
!3530 = !DILocation(line: 159, column: 3, scope: !3506)
!3531 = distinct !{!3531, !3500, !3532}
!3532 = !DILocation(line: 159, column: 3, scope: !3501)
!3533 = !DILocation(line: 162, column: 30, scope: !3231)
!3534 = !DILocation(line: 162, column: 2, scope: !3231)
!3535 = !DILocation(line: 164, column: 15, scope: !3231)
!3536 = !DILocation(line: 164, column: 3, scope: !3231)
!3537 = !DILocation(line: 164, column: 13, scope: !3231)
!3538 = !DILocation(line: 165, column: 15, scope: !3231)
!3539 = !DILocation(line: 165, column: 3, scope: !3231)
!3540 = !DILocation(line: 165, column: 13, scope: !3231)
!3541 = !DILocation(line: 166, column: 1, scope: !3231)
!3542 = distinct !DISubprogram(name: "BM_iter_new", scope: !3543, file: !3543, line: 172, type: !3544, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3543 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!288, !3546, !739, !704, !288}
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3547 = !DILocalVariable(name: "iter", arg: 1, scope: !3542, file: !3543, line: 172, type: !3546)
!3548 = !DILocation(line: 172, column: 38, scope: !3542)
!3549 = !DILocalVariable(name: "bm", arg: 2, scope: !3542, file: !3543, line: 172, type: !739)
!3550 = !DILocation(line: 172, column: 51, scope: !3542)
!3551 = !DILocalVariable(name: "itype", arg: 3, scope: !3542, file: !3543, line: 172, type: !704)
!3552 = !DILocation(line: 172, column: 66, scope: !3542)
!3553 = !DILocalVariable(name: "data", arg: 4, scope: !3542, file: !3543, line: 172, type: !288)
!3554 = !DILocation(line: 172, column: 79, scope: !3542)
!3555 = !DILocation(line: 174, column: 6, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3542, file: !3543, line: 174, column: 6)
!3557 = !DILocation(line: 174, column: 6, scope: !3542)
!3558 = !DILocation(line: 175, column: 23, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3556, file: !3543, line: 174, column: 51)
!3560 = !DILocation(line: 175, column: 10, scope: !3559)
!3561 = !DILocation(line: 175, column: 3, scope: !3559)
!3562 = !DILocation(line: 178, column: 3, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3556, file: !3543, line: 177, column: 7)
!3564 = !DILocation(line: 180, column: 1, scope: !3542)
!3565 = distinct !DISubprogram(name: "_bm_elem_flag_set", scope: !3566, file: !3566, line: 62, type: !3567, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3566 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !3569, !704, !3570}
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !319)
!3571 = !DILocalVariable(name: "head", arg: 1, scope: !3565, file: !3566, line: 62, type: !3569)
!3572 = !DILocation(line: 62, column: 45, scope: !3565)
!3573 = !DILocalVariable(name: "hflag", arg: 2, scope: !3565, file: !3566, line: 62, type: !704)
!3574 = !DILocation(line: 62, column: 62, scope: !3565)
!3575 = !DILocalVariable(name: "val", arg: 3, scope: !3565, file: !3566, line: 62, type: !3570)
!3576 = !DILocation(line: 62, column: 79, scope: !3565)
!3577 = !DILocation(line: 64, column: 6, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3565, file: !3566, line: 64, column: 6)
!3579 = !DILocation(line: 64, column: 6, scope: !3565)
!3580 = !DILocation(line: 64, column: 33, scope: !3578)
!3581 = !DILocation(line: 64, column: 40, scope: !3578)
!3582 = !DILocation(line: 64, column: 12, scope: !3578)
!3583 = !DILocation(line: 65, column: 34, scope: !3578)
!3584 = !DILocation(line: 65, column: 40, scope: !3578)
!3585 = !DILocation(line: 65, column: 12, scope: !3578)
!3586 = !DILocation(line: 66, column: 1, scope: !3565)
!3587 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !3566, file: !3566, line: 42, type: !3588, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!304, !3590, !704}
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !625)
!3592 = !DILocalVariable(name: "head", arg: 1, scope: !3587, file: !3566, line: 42, type: !3590)
!3593 = !DILocation(line: 42, column: 52, scope: !3587)
!3594 = !DILocalVariable(name: "hflag", arg: 2, scope: !3587, file: !3566, line: 42, type: !704)
!3595 = !DILocation(line: 42, column: 69, scope: !3587)
!3596 = !DILocation(line: 44, column: 9, scope: !3587)
!3597 = !DILocation(line: 44, column: 15, scope: !3587)
!3598 = !DILocation(line: 44, column: 23, scope: !3587)
!3599 = !DILocation(line: 44, column: 21, scope: !3587)
!3600 = !DILocation(line: 44, column: 2, scope: !3587)
!3601 = distinct !DISubprogram(name: "BM_iter_step", scope: !3543, file: !3543, line: 40, type: !3602, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!288, !3546}
!3604 = !DILocalVariable(name: "iter", arg: 1, scope: !3601, file: !3543, line: 40, type: !3546)
!3605 = !DILocation(line: 40, column: 39, scope: !3601)
!3606 = !DILocation(line: 42, column: 9, scope: !3601)
!3607 = !DILocation(line: 42, column: 15, scope: !3601)
!3608 = !DILocation(line: 42, column: 20, scope: !3601)
!3609 = !DILocation(line: 42, column: 2, scope: !3601)
!3610 = distinct !DISubprogram(name: "EDBM_automerge", scope: !3, file: !3, line: 168, type: !3611, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !3613, !3615, !813, !704}
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1113, line: 1299, baseType: !1112)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !75, line: 295, baseType: !821)
!3617 = !DILocalVariable(name: "scene", arg: 1, scope: !3610, file: !3, line: 168, type: !3613)
!3618 = !DILocation(line: 168, column: 28, scope: !3610)
!3619 = !DILocalVariable(name: "obedit", arg: 2, scope: !3610, file: !3, line: 168, type: !3615)
!3620 = !DILocation(line: 168, column: 43, scope: !3610)
!3621 = !DILocalVariable(name: "update", arg: 3, scope: !3610, file: !3, line: 168, type: !813)
!3622 = !DILocation(line: 168, column: 56, scope: !3610)
!3623 = !DILocalVariable(name: "hflag", arg: 4, scope: !3610, file: !3, line: 168, type: !704)
!3624 = !DILocation(line: 168, column: 75, scope: !3610)
!3625 = !DILocalVariable(name: "ok", scope: !3610, file: !3, line: 170, type: !813)
!3626 = !DILocation(line: 170, column: 7, scope: !3610)
!3627 = !DILocalVariable(name: "em", scope: !3610, file: !3, line: 171, type: !2675)
!3628 = !DILocation(line: 171, column: 14, scope: !3610)
!3629 = !DILocation(line: 171, column: 44, scope: !3610)
!3630 = !DILocation(line: 171, column: 19, scope: !3610)
!3631 = !DILocation(line: 173, column: 20, scope: !3610)
!3632 = !DILocation(line: 173, column: 24, scope: !3610)
!3633 = !DILocation(line: 175, column: 20, scope: !3610)
!3634 = !DILocation(line: 175, column: 27, scope: !3610)
!3635 = !DILocation(line: 175, column: 34, scope: !3610)
!3636 = !DILocation(line: 175, column: 48, scope: !3610)
!3637 = !DILocation(line: 173, column: 7, scope: !3610)
!3638 = !DILocation(line: 173, column: 5, scope: !3610)
!3639 = !DILocation(line: 177, column: 6, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 177, column: 6)
!3641 = !DILocation(line: 177, column: 17, scope: !3640)
!3642 = !DILocation(line: 177, column: 20, scope: !3640)
!3643 = !DILocation(line: 177, column: 6, scope: !3610)
!3644 = !DILocation(line: 178, column: 23, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 177, column: 28)
!3646 = !DILocation(line: 178, column: 3, scope: !3645)
!3647 = !DILocation(line: 179, column: 2, scope: !3645)
!3648 = !DILocation(line: 180, column: 1, scope: !3610)
!3649 = distinct !DISubprogram(name: "EDBM_backbuf_border_init", scope: !3, file: !3, line: 196, type: !3650, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!813, !2695, !317, !317, !317, !317}
!3652 = !DILocalVariable(name: "vc", arg: 1, scope: !3649, file: !3, line: 196, type: !2695)
!3653 = !DILocation(line: 196, column: 44, scope: !3649)
!3654 = !DILocalVariable(name: "xmin", arg: 2, scope: !3649, file: !3, line: 196, type: !317)
!3655 = !DILocation(line: 196, column: 54, scope: !3649)
!3656 = !DILocalVariable(name: "ymin", arg: 3, scope: !3649, file: !3, line: 196, type: !317)
!3657 = !DILocation(line: 196, column: 66, scope: !3649)
!3658 = !DILocalVariable(name: "xmax", arg: 4, scope: !3649, file: !3, line: 196, type: !317)
!3659 = !DILocation(line: 196, column: 78, scope: !3649)
!3660 = !DILocalVariable(name: "ymax", arg: 5, scope: !3649, file: !3, line: 196, type: !317)
!3661 = !DILocation(line: 196, column: 90, scope: !3649)
!3662 = !DILocalVariable(name: "buf", scope: !3649, file: !3, line: 198, type: !1730)
!3663 = !DILocation(line: 198, column: 16, scope: !3649)
!3664 = !DILocalVariable(name: "dr", scope: !3649, file: !3, line: 199, type: !438)
!3665 = !DILocation(line: 199, column: 16, scope: !3649)
!3666 = !DILocalVariable(name: "a", scope: !3649, file: !3, line: 200, type: !319)
!3667 = !DILocation(line: 200, column: 6, scope: !3649)
!3668 = !DILocation(line: 202, column: 6, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 202, column: 6)
!3670 = !DILocation(line: 202, column: 10, scope: !3669)
!3671 = !DILocation(line: 202, column: 17, scope: !3669)
!3672 = !DILocation(line: 202, column: 25, scope: !3669)
!3673 = !DILocation(line: 202, column: 28, scope: !3669)
!3674 = !DILocation(line: 202, column: 32, scope: !3669)
!3675 = !DILocation(line: 202, column: 37, scope: !3669)
!3676 = !DILocation(line: 202, column: 46, scope: !3669)
!3677 = !DILocation(line: 202, column: 57, scope: !3669)
!3678 = !DILocation(line: 202, column: 61, scope: !3669)
!3679 = !DILocation(line: 202, column: 65, scope: !3669)
!3680 = !DILocation(line: 202, column: 70, scope: !3669)
!3681 = !DILocation(line: 202, column: 75, scope: !3669)
!3682 = !DILocation(line: 202, column: 94, scope: !3669)
!3683 = !DILocation(line: 202, column: 6, scope: !3649)
!3684 = !DILocation(line: 203, column: 3, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 202, column: 100)
!3686 = !DILocation(line: 206, column: 28, scope: !3649)
!3687 = !DILocation(line: 206, column: 32, scope: !3649)
!3688 = !DILocation(line: 206, column: 38, scope: !3649)
!3689 = !DILocation(line: 206, column: 44, scope: !3649)
!3690 = !DILocation(line: 206, column: 50, scope: !3649)
!3691 = !DILocation(line: 206, column: 8, scope: !3649)
!3692 = !DILocation(line: 206, column: 6, scope: !3649)
!3693 = !DILocation(line: 207, column: 6, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 207, column: 6)
!3695 = !DILocation(line: 207, column: 10, scope: !3694)
!3696 = !DILocation(line: 207, column: 6, scope: !3649)
!3697 = !DILocation(line: 207, column: 19, scope: !3694)
!3698 = !DILocation(line: 208, column: 6, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 208, column: 6)
!3700 = !DILocation(line: 208, column: 18, scope: !3699)
!3701 = !DILocation(line: 208, column: 6, scope: !3649)
!3702 = !DILocation(line: 208, column: 24, scope: !3699)
!3703 = !DILocation(line: 210, column: 7, scope: !3649)
!3704 = !DILocation(line: 210, column: 12, scope: !3649)
!3705 = !DILocation(line: 210, column: 5, scope: !3649)
!3706 = !DILocation(line: 213, column: 30, scope: !3649)
!3707 = !DILocation(line: 213, column: 42, scope: !3649)
!3708 = !DILocation(line: 213, column: 11, scope: !3649)
!3709 = !DILocation(line: 213, column: 9, scope: !3649)
!3710 = !DILocation(line: 215, column: 7, scope: !3649)
!3711 = !DILocation(line: 215, column: 14, scope: !3649)
!3712 = !DILocation(line: 215, column: 12, scope: !3649)
!3713 = !DILocation(line: 215, column: 19, scope: !3649)
!3714 = !DILocation(line: 215, column: 27, scope: !3649)
!3715 = !DILocation(line: 215, column: 34, scope: !3649)
!3716 = !DILocation(line: 215, column: 32, scope: !3649)
!3717 = !DILocation(line: 215, column: 39, scope: !3649)
!3718 = !DILocation(line: 215, column: 24, scope: !3649)
!3719 = !DILocation(line: 215, column: 4, scope: !3649)
!3720 = !DILocation(line: 216, column: 2, scope: !3649)
!3721 = !DILocation(line: 216, column: 10, scope: !3649)
!3722 = !DILocation(line: 217, column: 8, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 217, column: 7)
!3724 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 216, column: 14)
!3725 = !DILocation(line: 217, column: 7, scope: !3723)
!3726 = !DILocation(line: 217, column: 11, scope: !3723)
!3727 = !DILocation(line: 217, column: 15, scope: !3723)
!3728 = !DILocation(line: 217, column: 19, scope: !3723)
!3729 = !DILocation(line: 217, column: 18, scope: !3723)
!3730 = !DILocation(line: 217, column: 25, scope: !3723)
!3731 = !DILocation(line: 217, column: 22, scope: !3723)
!3732 = !DILocation(line: 217, column: 7, scope: !3724)
!3733 = !DILocation(line: 218, column: 4, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3723, file: !3, line: 217, column: 38)
!3735 = !DILocation(line: 219, column: 3, scope: !3734)
!3736 = !DILocation(line: 220, column: 5, scope: !3724)
!3737 = distinct !{!3737, !3720, !3738}
!3738 = !DILocation(line: 221, column: 2, scope: !3649)
!3739 = !DILocation(line: 222, column: 16, scope: !3649)
!3740 = !DILocation(line: 222, column: 2, scope: !3649)
!3741 = !DILocation(line: 223, column: 2, scope: !3649)
!3742 = !DILocation(line: 224, column: 1, scope: !3649)
!3743 = distinct !DISubprogram(name: "edbm_backbuf_alloc", scope: !3, file: !3, line: 189, type: !3744, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!2666, !3570}
!3746 = !DILocalVariable(name: "size", arg: 1, scope: !3743, file: !3, line: 189, type: !3570)
!3747 = !DILocation(line: 189, column: 49, scope: !3743)
!3748 = !DILocation(line: 191, column: 9, scope: !3743)
!3749 = !DILocation(line: 191, column: 2, scope: !3743)
!3750 = distinct !DISubprogram(name: "EDBM_backbuf_check", scope: !3, file: !3, line: 226, type: !3751, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!813, !7}
!3753 = !DILocalVariable(name: "index", arg: 1, scope: !3750, file: !3, line: 226, type: !7)
!3754 = !DILocation(line: 226, column: 38, scope: !3750)
!3755 = !DILocation(line: 231, column: 6, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 231, column: 6)
!3757 = !DILocation(line: 231, column: 13, scope: !3756)
!3758 = !DILocation(line: 231, column: 6, scope: !3750)
!3759 = !DILocation(line: 232, column: 3, scope: !3756)
!3760 = !DILocation(line: 234, column: 6, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 234, column: 6)
!3762 = !DILocation(line: 234, column: 12, scope: !3761)
!3763 = !DILocation(line: 234, column: 16, scope: !3761)
!3764 = !DILocation(line: 234, column: 19, scope: !3761)
!3765 = !DILocation(line: 234, column: 28, scope: !3761)
!3766 = !DILocation(line: 234, column: 25, scope: !3761)
!3767 = !DILocation(line: 234, column: 6, scope: !3750)
!3768 = !DILocation(line: 235, column: 10, scope: !3761)
!3769 = !DILocation(line: 235, column: 3, scope: !3761)
!3770 = !DILocation(line: 237, column: 2, scope: !3750)
!3771 = !DILocation(line: 238, column: 1, scope: !3750)
!3772 = distinct !DISubprogram(name: "EDBM_backbuf_free", scope: !3, file: !3, line: 240, type: !3773, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{null}
!3775 = !DILocation(line: 242, column: 6, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 242, column: 6)
!3777 = !DILocation(line: 242, column: 6, scope: !3772)
!3778 = !DILocation(line: 242, column: 14, scope: !3776)
!3779 = !DILocation(line: 242, column: 24, scope: !3776)
!3780 = !DILocation(line: 243, column: 9, scope: !3772)
!3781 = !DILocation(line: 244, column: 1, scope: !3772)
!3782 = distinct !DISubprogram(name: "EDBM_backbuf_border_mask_init", scope: !3, file: !3, line: 264, type: !3783, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{!813, !2695, !3785, !317, !317, !317, !317, !317}
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3570, size: 64, elements: !446)
!3787 = !DILocalVariable(name: "vc", arg: 1, scope: !3782, file: !3, line: 264, type: !2695)
!3788 = !DILocation(line: 264, column: 49, scope: !3782)
!3789 = !DILocalVariable(name: "mcords", arg: 2, scope: !3782, file: !3, line: 264, type: !3785)
!3790 = !DILocation(line: 264, column: 63, scope: !3782)
!3791 = !DILocalVariable(name: "tot", arg: 3, scope: !3782, file: !3, line: 264, type: !317)
!3792 = !DILocation(line: 264, column: 82, scope: !3782)
!3793 = !DILocalVariable(name: "xmin", arg: 4, scope: !3782, file: !3, line: 264, type: !317)
!3794 = !DILocation(line: 264, column: 93, scope: !3782)
!3795 = !DILocalVariable(name: "ymin", arg: 5, scope: !3782, file: !3, line: 264, type: !317)
!3796 = !DILocation(line: 264, column: 105, scope: !3782)
!3797 = !DILocalVariable(name: "xmax", arg: 6, scope: !3782, file: !3, line: 264, type: !317)
!3798 = !DILocation(line: 264, column: 117, scope: !3782)
!3799 = !DILocalVariable(name: "ymax", arg: 7, scope: !3782, file: !3, line: 264, type: !317)
!3800 = !DILocation(line: 264, column: 129, scope: !3782)
!3801 = !DILocalVariable(name: "dr", scope: !3782, file: !3, line: 266, type: !438)
!3802 = !DILocation(line: 266, column: 16, scope: !3782)
!3803 = !DILocalVariable(name: "dr_mask", scope: !3782, file: !3, line: 266, type: !438)
!3804 = !DILocation(line: 266, column: 21, scope: !3782)
!3805 = !DILocalVariable(name: "dr_mask_arr", scope: !3782, file: !3, line: 266, type: !438)
!3806 = !DILocation(line: 266, column: 31, scope: !3782)
!3807 = !DILocalVariable(name: "buf", scope: !3782, file: !3, line: 267, type: !1730)
!3808 = !DILocation(line: 267, column: 16, scope: !3782)
!3809 = !DILocalVariable(name: "a", scope: !3782, file: !3, line: 268, type: !319)
!3810 = !DILocation(line: 268, column: 6, scope: !3782)
!3811 = !DILocalVariable(name: "lasso_mask_data", scope: !3782, file: !3, line: 269, type: !3812)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LassoMaskData", file: !3, line: 246, size: 128, elements: !3813)
!3813 = !{!3814, !3815}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "px", scope: !3812, file: !3, line: 247, baseType: !438, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3812, file: !3, line: 248, baseType: !319, size: 32, offset: 64)
!3816 = !DILocation(line: 269, column: 23, scope: !3782)
!3817 = !DILocation(line: 272, column: 6, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 272, column: 6)
!3819 = !DILocation(line: 272, column: 10, scope: !3818)
!3820 = !DILocation(line: 272, column: 17, scope: !3818)
!3821 = !DILocation(line: 272, column: 6, scope: !3782)
!3822 = !DILocation(line: 273, column: 35, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 273, column: 7)
!3824 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 272, column: 26)
!3825 = !DILocation(line: 273, column: 39, scope: !3823)
!3826 = !DILocation(line: 273, column: 8, scope: !3823)
!3827 = !DILocation(line: 273, column: 7, scope: !3824)
!3828 = !DILocation(line: 274, column: 4, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 273, column: 47)
!3830 = !DILocation(line: 276, column: 2, scope: !3824)
!3831 = !DILocation(line: 277, column: 11, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 277, column: 11)
!3833 = !DILocation(line: 277, column: 15, scope: !3832)
!3834 = !DILocation(line: 277, column: 20, scope: !3832)
!3835 = !DILocation(line: 277, column: 29, scope: !3832)
!3836 = !DILocation(line: 277, column: 40, scope: !3832)
!3837 = !DILocation(line: 277, column: 44, scope: !3832)
!3838 = !DILocation(line: 277, column: 48, scope: !3832)
!3839 = !DILocation(line: 277, column: 53, scope: !3832)
!3840 = !DILocation(line: 277, column: 58, scope: !3832)
!3841 = !DILocation(line: 277, column: 77, scope: !3832)
!3842 = !DILocation(line: 277, column: 11, scope: !3818)
!3843 = !DILocation(line: 278, column: 3, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 277, column: 83)
!3845 = !DILocation(line: 281, column: 28, scope: !3782)
!3846 = !DILocation(line: 281, column: 32, scope: !3782)
!3847 = !DILocation(line: 281, column: 38, scope: !3782)
!3848 = !DILocation(line: 281, column: 44, scope: !3782)
!3849 = !DILocation(line: 281, column: 50, scope: !3782)
!3850 = !DILocation(line: 281, column: 8, scope: !3782)
!3851 = !DILocation(line: 281, column: 6, scope: !3782)
!3852 = !DILocation(line: 282, column: 6, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 282, column: 6)
!3854 = !DILocation(line: 282, column: 10, scope: !3853)
!3855 = !DILocation(line: 282, column: 6, scope: !3782)
!3856 = !DILocation(line: 282, column: 19, scope: !3853)
!3857 = !DILocation(line: 283, column: 6, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 283, column: 6)
!3859 = !DILocation(line: 283, column: 18, scope: !3858)
!3860 = !DILocation(line: 283, column: 6, scope: !3782)
!3861 = !DILocation(line: 283, column: 24, scope: !3858)
!3862 = !DILocation(line: 285, column: 7, scope: !3782)
!3863 = !DILocation(line: 285, column: 12, scope: !3782)
!3864 = !DILocation(line: 285, column: 5, scope: !3782)
!3865 = !DILocation(line: 287, column: 26, scope: !3782)
!3866 = !DILocation(line: 287, column: 57, scope: !3782)
!3867 = !DILocation(line: 287, column: 62, scope: !3782)
!3868 = !DILocation(line: 287, column: 55, scope: !3782)
!3869 = !DILocation(line: 287, column: 66, scope: !3782)
!3870 = !DILocation(line: 287, column: 71, scope: !3782)
!3871 = !DILocation(line: 287, column: 64, scope: !3782)
!3872 = !DILocation(line: 287, column: 24, scope: !3782)
!3873 = !DILocation(line: 287, column: 10, scope: !3782)
!3874 = !DILocation(line: 288, column: 23, scope: !3782)
!3875 = !DILocation(line: 288, column: 18, scope: !3782)
!3876 = !DILocation(line: 288, column: 21, scope: !3782)
!3877 = !DILocation(line: 289, column: 27, scope: !3782)
!3878 = !DILocation(line: 289, column: 34, scope: !3782)
!3879 = !DILocation(line: 289, column: 32, scope: !3782)
!3880 = !DILocation(line: 289, column: 40, scope: !3782)
!3881 = !DILocation(line: 289, column: 18, scope: !3782)
!3882 = !DILocation(line: 289, column: 24, scope: !3782)
!3883 = !DILocation(line: 292, column: 9, scope: !3782)
!3884 = !DILocation(line: 292, column: 15, scope: !3782)
!3885 = !DILocation(line: 292, column: 21, scope: !3782)
!3886 = !DILocation(line: 292, column: 26, scope: !3782)
!3887 = !DILocation(line: 292, column: 31, scope: !3782)
!3888 = !DILocation(line: 292, column: 36, scope: !3782)
!3889 = !DILocation(line: 293, column: 9, scope: !3782)
!3890 = !DILocation(line: 293, column: 17, scope: !3782)
!3891 = !DILocation(line: 294, column: 32, scope: !3782)
!3892 = !DILocation(line: 291, column: 2, scope: !3782)
!3893 = !DILocation(line: 297, column: 30, scope: !3782)
!3894 = !DILocation(line: 297, column: 42, scope: !3782)
!3895 = !DILocation(line: 297, column: 11, scope: !3782)
!3896 = !DILocation(line: 297, column: 9, scope: !3782)
!3897 = !DILocation(line: 299, column: 7, scope: !3782)
!3898 = !DILocation(line: 299, column: 14, scope: !3782)
!3899 = !DILocation(line: 299, column: 12, scope: !3782)
!3900 = !DILocation(line: 299, column: 19, scope: !3782)
!3901 = !DILocation(line: 299, column: 27, scope: !3782)
!3902 = !DILocation(line: 299, column: 34, scope: !3782)
!3903 = !DILocation(line: 299, column: 32, scope: !3782)
!3904 = !DILocation(line: 299, column: 39, scope: !3782)
!3905 = !DILocation(line: 299, column: 24, scope: !3782)
!3906 = !DILocation(line: 299, column: 4, scope: !3782)
!3907 = !DILocation(line: 300, column: 2, scope: !3782)
!3908 = !DILocation(line: 300, column: 10, scope: !3782)
!3909 = !DILocation(line: 301, column: 8, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 301, column: 7)
!3911 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 300, column: 14)
!3912 = !DILocation(line: 301, column: 7, scope: !3910)
!3913 = !DILocation(line: 301, column: 11, scope: !3910)
!3914 = !DILocation(line: 301, column: 15, scope: !3910)
!3915 = !DILocation(line: 301, column: 19, scope: !3910)
!3916 = !DILocation(line: 301, column: 18, scope: !3910)
!3917 = !DILocation(line: 301, column: 25, scope: !3910)
!3918 = !DILocation(line: 301, column: 22, scope: !3910)
!3919 = !DILocation(line: 301, column: 37, scope: !3910)
!3920 = !DILocation(line: 301, column: 41, scope: !3910)
!3921 = !DILocation(line: 301, column: 40, scope: !3910)
!3922 = !DILocation(line: 301, column: 49, scope: !3910)
!3923 = !DILocation(line: 301, column: 7, scope: !3911)
!3924 = !DILocation(line: 302, column: 4, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 301, column: 58)
!3926 = !DILocation(line: 303, column: 3, scope: !3925)
!3927 = !DILocation(line: 304, column: 5, scope: !3911)
!3928 = !DILocation(line: 304, column: 16, scope: !3911)
!3929 = distinct !{!3929, !3907, !3930}
!3930 = !DILocation(line: 305, column: 2, scope: !3782)
!3931 = !DILocation(line: 306, column: 16, scope: !3782)
!3932 = !DILocation(line: 306, column: 2, scope: !3782)
!3933 = !DILocation(line: 307, column: 2, scope: !3782)
!3934 = !DILocation(line: 307, column: 12, scope: !3782)
!3935 = !DILocation(line: 309, column: 2, scope: !3782)
!3936 = !DILocation(line: 310, column: 1, scope: !3782)
!3937 = distinct !DISubprogram(name: "edbm_mask_lasso_px_cb", scope: !3, file: !3, line: 251, type: !3938, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !319, !319, !288}
!3940 = !DILocalVariable(name: "x", arg: 1, scope: !3937, file: !3, line: 251, type: !319)
!3941 = !DILocation(line: 251, column: 39, scope: !3937)
!3942 = !DILocalVariable(name: "y", arg: 2, scope: !3937, file: !3, line: 251, type: !319)
!3943 = !DILocation(line: 251, column: 46, scope: !3937)
!3944 = !DILocalVariable(name: "user_data", arg: 3, scope: !3937, file: !3, line: 251, type: !288)
!3945 = !DILocation(line: 251, column: 55, scope: !3937)
!3946 = !DILocalVariable(name: "data", scope: !3937, file: !3, line: 253, type: !3947)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64)
!3948 = !DILocation(line: 253, column: 24, scope: !3937)
!3949 = !DILocation(line: 253, column: 31, scope: !3937)
!3950 = !DILocation(line: 254, column: 2, scope: !3937)
!3951 = !DILocation(line: 254, column: 8, scope: !3937)
!3952 = !DILocation(line: 254, column: 12, scope: !3937)
!3953 = !DILocation(line: 254, column: 16, scope: !3937)
!3954 = !DILocation(line: 254, column: 22, scope: !3937)
!3955 = !DILocation(line: 254, column: 14, scope: !3937)
!3956 = !DILocation(line: 254, column: 31, scope: !3937)
!3957 = !DILocation(line: 254, column: 29, scope: !3937)
!3958 = !DILocation(line: 254, column: 34, scope: !3937)
!3959 = !DILocation(line: 255, column: 1, scope: !3937)
!3960 = distinct !DISubprogram(name: "EDBM_backbuf_circle_init", scope: !3, file: !3, line: 313, type: !3961, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{!813, !2695, !317, !317, !317}
!3963 = !DILocalVariable(name: "vc", arg: 1, scope: !3960, file: !3, line: 313, type: !2695)
!3964 = !DILocation(line: 313, column: 44, scope: !3960)
!3965 = !DILocalVariable(name: "xs", arg: 2, scope: !3960, file: !3, line: 313, type: !317)
!3966 = !DILocation(line: 313, column: 54, scope: !3960)
!3967 = !DILocalVariable(name: "ys", arg: 3, scope: !3960, file: !3, line: 313, type: !317)
!3968 = !DILocation(line: 313, column: 64, scope: !3960)
!3969 = !DILocalVariable(name: "rads", arg: 4, scope: !3960, file: !3, line: 313, type: !317)
!3970 = !DILocation(line: 313, column: 74, scope: !3960)
!3971 = !DILocalVariable(name: "buf", scope: !3960, file: !3, line: 315, type: !1730)
!3972 = !DILocation(line: 315, column: 16, scope: !3960)
!3973 = !DILocalVariable(name: "dr", scope: !3960, file: !3, line: 316, type: !438)
!3974 = !DILocation(line: 316, column: 16, scope: !3960)
!3975 = !DILocalVariable(name: "xmin", scope: !3960, file: !3, line: 317, type: !317)
!3976 = !DILocation(line: 317, column: 8, scope: !3960)
!3977 = !DILocalVariable(name: "ymin", scope: !3960, file: !3, line: 317, type: !317)
!3978 = !DILocation(line: 317, column: 14, scope: !3960)
!3979 = !DILocalVariable(name: "xmax", scope: !3960, file: !3, line: 317, type: !317)
!3980 = !DILocation(line: 317, column: 20, scope: !3960)
!3981 = !DILocalVariable(name: "ymax", scope: !3960, file: !3, line: 317, type: !317)
!3982 = !DILocation(line: 317, column: 26, scope: !3960)
!3983 = !DILocalVariable(name: "xc", scope: !3960, file: !3, line: 317, type: !317)
!3984 = !DILocation(line: 317, column: 32, scope: !3960)
!3985 = !DILocalVariable(name: "yc", scope: !3960, file: !3, line: 317, type: !317)
!3986 = !DILocation(line: 317, column: 36, scope: !3960)
!3987 = !DILocalVariable(name: "radsq", scope: !3960, file: !3, line: 318, type: !319)
!3988 = !DILocation(line: 318, column: 6, scope: !3960)
!3989 = !DILocation(line: 321, column: 6, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 321, column: 6)
!3991 = !DILocation(line: 321, column: 10, scope: !3990)
!3992 = !DILocation(line: 321, column: 17, scope: !3990)
!3993 = !DILocation(line: 321, column: 6, scope: !3960)
!3994 = !DILocation(line: 322, column: 35, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 322, column: 7)
!3996 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 321, column: 26)
!3997 = !DILocation(line: 322, column: 39, scope: !3995)
!3998 = !DILocation(line: 322, column: 8, scope: !3995)
!3999 = !DILocation(line: 322, column: 7, scope: !3996)
!4000 = !DILocation(line: 323, column: 4, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 322, column: 47)
!4002 = !DILocation(line: 325, column: 2, scope: !3996)
!4003 = !DILocation(line: 326, column: 11, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 326, column: 11)
!4005 = !DILocation(line: 326, column: 15, scope: !4004)
!4006 = !DILocation(line: 326, column: 20, scope: !4004)
!4007 = !DILocation(line: 326, column: 29, scope: !4004)
!4008 = !DILocation(line: 326, column: 40, scope: !4004)
!4009 = !DILocation(line: 326, column: 44, scope: !4004)
!4010 = !DILocation(line: 326, column: 48, scope: !4004)
!4011 = !DILocation(line: 326, column: 53, scope: !4004)
!4012 = !DILocation(line: 326, column: 58, scope: !4004)
!4013 = !DILocation(line: 326, column: 77, scope: !4004)
!4014 = !DILocation(line: 326, column: 11, scope: !3990)
!4015 = !DILocation(line: 327, column: 3, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 326, column: 83)
!4017 = !DILocation(line: 330, column: 9, scope: !3960)
!4018 = !DILocation(line: 330, column: 14, scope: !3960)
!4019 = !DILocation(line: 330, column: 12, scope: !3960)
!4020 = !DILocation(line: 330, column: 7, scope: !3960)
!4021 = !DILocation(line: 330, column: 27, scope: !3960)
!4022 = !DILocation(line: 330, column: 32, scope: !3960)
!4023 = !DILocation(line: 330, column: 30, scope: !3960)
!4024 = !DILocation(line: 330, column: 25, scope: !3960)
!4025 = !DILocation(line: 331, column: 9, scope: !3960)
!4026 = !DILocation(line: 331, column: 14, scope: !3960)
!4027 = !DILocation(line: 331, column: 12, scope: !3960)
!4028 = !DILocation(line: 331, column: 7, scope: !3960)
!4029 = !DILocation(line: 331, column: 27, scope: !3960)
!4030 = !DILocation(line: 331, column: 32, scope: !3960)
!4031 = !DILocation(line: 331, column: 30, scope: !3960)
!4032 = !DILocation(line: 331, column: 25, scope: !3960)
!4033 = !DILocation(line: 332, column: 28, scope: !3960)
!4034 = !DILocation(line: 332, column: 32, scope: !3960)
!4035 = !DILocation(line: 332, column: 38, scope: !3960)
!4036 = !DILocation(line: 332, column: 44, scope: !3960)
!4037 = !DILocation(line: 332, column: 50, scope: !3960)
!4038 = !DILocation(line: 332, column: 8, scope: !3960)
!4039 = !DILocation(line: 332, column: 6, scope: !3960)
!4040 = !DILocation(line: 333, column: 6, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 333, column: 6)
!4042 = !DILocation(line: 333, column: 18, scope: !4041)
!4043 = !DILocation(line: 333, column: 6, scope: !3960)
!4044 = !DILocation(line: 333, column: 24, scope: !4041)
!4045 = !DILocation(line: 334, column: 6, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 334, column: 6)
!4047 = !DILocation(line: 334, column: 10, scope: !4046)
!4048 = !DILocation(line: 334, column: 6, scope: !3960)
!4049 = !DILocation(line: 334, column: 19, scope: !4046)
!4050 = !DILocation(line: 336, column: 7, scope: !3960)
!4051 = !DILocation(line: 336, column: 12, scope: !3960)
!4052 = !DILocation(line: 336, column: 5, scope: !3960)
!4053 = !DILocation(line: 339, column: 30, scope: !3960)
!4054 = !DILocation(line: 339, column: 42, scope: !3960)
!4055 = !DILocation(line: 339, column: 11, scope: !3960)
!4056 = !DILocation(line: 339, column: 9, scope: !3960)
!4057 = !DILocation(line: 340, column: 10, scope: !3960)
!4058 = !DILocation(line: 340, column: 17, scope: !3960)
!4059 = !DILocation(line: 340, column: 15, scope: !3960)
!4060 = !DILocation(line: 340, column: 8, scope: !3960)
!4061 = !DILocation(line: 341, column: 13, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 341, column: 2)
!4063 = !DILocation(line: 341, column: 12, scope: !4062)
!4064 = !DILocation(line: 341, column: 10, scope: !4062)
!4065 = !DILocation(line: 341, column: 7, scope: !4062)
!4066 = !DILocation(line: 341, column: 19, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 341, column: 2)
!4068 = !DILocation(line: 341, column: 25, scope: !4067)
!4069 = !DILocation(line: 341, column: 22, scope: !4067)
!4070 = !DILocation(line: 341, column: 2, scope: !4062)
!4071 = !DILocation(line: 342, column: 14, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 342, column: 3)
!4073 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 341, column: 37)
!4074 = !DILocation(line: 342, column: 13, scope: !4072)
!4075 = !DILocation(line: 342, column: 11, scope: !4072)
!4076 = !DILocation(line: 342, column: 8, scope: !4072)
!4077 = !DILocation(line: 342, column: 20, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 342, column: 3)
!4079 = !DILocation(line: 342, column: 26, scope: !4078)
!4080 = !DILocation(line: 342, column: 23, scope: !4078)
!4081 = !DILocation(line: 342, column: 3, scope: !4072)
!4082 = !DILocation(line: 343, column: 8, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 343, column: 8)
!4084 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 342, column: 44)
!4085 = !DILocation(line: 343, column: 13, scope: !4083)
!4086 = !DILocation(line: 343, column: 11, scope: !4083)
!4087 = !DILocation(line: 343, column: 18, scope: !4083)
!4088 = !DILocation(line: 343, column: 23, scope: !4083)
!4089 = !DILocation(line: 343, column: 21, scope: !4083)
!4090 = !DILocation(line: 343, column: 16, scope: !4083)
!4091 = !DILocation(line: 343, column: 28, scope: !4083)
!4092 = !DILocation(line: 343, column: 26, scope: !4083)
!4093 = !DILocation(line: 343, column: 8, scope: !4084)
!4094 = !DILocation(line: 344, column: 10, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 344, column: 9)
!4096 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 343, column: 35)
!4097 = !DILocation(line: 344, column: 9, scope: !4095)
!4098 = !DILocation(line: 344, column: 13, scope: !4095)
!4099 = !DILocation(line: 344, column: 17, scope: !4095)
!4100 = !DILocation(line: 344, column: 21, scope: !4095)
!4101 = !DILocation(line: 344, column: 20, scope: !4095)
!4102 = !DILocation(line: 344, column: 27, scope: !4095)
!4103 = !DILocation(line: 344, column: 24, scope: !4095)
!4104 = !DILocation(line: 344, column: 9, scope: !4096)
!4105 = !DILocation(line: 345, column: 6, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 344, column: 40)
!4107 = !DILocation(line: 346, column: 5, scope: !4106)
!4108 = !DILocation(line: 347, column: 4, scope: !4096)
!4109 = !DILocation(line: 348, column: 3, scope: !4084)
!4110 = !DILocation(line: 342, column: 34, scope: !4078)
!4111 = !DILocation(line: 342, column: 40, scope: !4078)
!4112 = !DILocation(line: 342, column: 3, scope: !4078)
!4113 = distinct !{!4113, !4081, !4114}
!4114 = !DILocation(line: 348, column: 3, scope: !4072)
!4115 = !DILocation(line: 349, column: 2, scope: !4073)
!4116 = !DILocation(line: 341, column: 33, scope: !4067)
!4117 = !DILocation(line: 341, column: 2, scope: !4067)
!4118 = distinct !{!4118, !4070, !4119}
!4119 = !DILocation(line: 349, column: 2, scope: !4062)
!4120 = !DILocation(line: 351, column: 16, scope: !3960)
!4121 = !DILocation(line: 351, column: 2, scope: !3960)
!4122 = !DILocation(line: 352, column: 2, scope: !3960)
!4123 = !DILocation(line: 354, column: 1, scope: !3960)
!4124 = !DILocalVariable(name: "vc", arg: 1, scope: !2692, file: !3, line: 406, type: !2695)
!4125 = !DILocation(line: 406, column: 45, scope: !2692)
!4126 = !DILocalVariable(name: "r_dist", arg: 2, scope: !2692, file: !3, line: 406, type: !844)
!4127 = !DILocation(line: 406, column: 56, scope: !2692)
!4128 = !DILocalVariable(name: "sel", arg: 3, scope: !2692, file: !3, line: 406, type: !3057)
!4129 = !DILocation(line: 406, column: 75, scope: !2692)
!4130 = !DILocalVariable(name: "strict", arg: 4, scope: !2692, file: !3, line: 406, type: !3057)
!4131 = !DILocation(line: 406, column: 91, scope: !2692)
!4132 = !DILocation(line: 408, column: 6, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 408, column: 6)
!4134 = !DILocation(line: 408, column: 10, scope: !4133)
!4135 = !DILocation(line: 408, column: 15, scope: !4133)
!4136 = !DILocation(line: 408, column: 24, scope: !4133)
!4137 = !DILocation(line: 408, column: 34, scope: !4133)
!4138 = !DILocation(line: 408, column: 38, scope: !4133)
!4139 = !DILocation(line: 408, column: 42, scope: !4133)
!4140 = !DILocation(line: 408, column: 47, scope: !4133)
!4141 = !DILocation(line: 408, column: 52, scope: !4133)
!4142 = !DILocation(line: 408, column: 6, scope: !2692)
!4143 = !DILocalVariable(name: "distance", scope: !4144, file: !3, line: 409, type: !364)
!4144 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 408, column: 72)
!4145 = !DILocation(line: 409, column: 9, scope: !4144)
!4146 = !DILocalVariable(name: "index", scope: !4144, file: !3, line: 410, type: !7)
!4147 = !DILocation(line: 410, column: 16, scope: !4144)
!4148 = !DILocalVariable(name: "eve", scope: !4144, file: !3, line: 411, type: !620)
!4149 = !DILocation(line: 411, column: 11, scope: !4144)
!4150 = !DILocation(line: 413, column: 7, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 413, column: 7)
!4152 = !DILocation(line: 413, column: 7, scope: !4144)
!4153 = !DILocation(line: 414, column: 39, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 413, column: 15)
!4155 = !DILocation(line: 414, column: 43, scope: !4154)
!4156 = !DILocation(line: 414, column: 47, scope: !4154)
!4157 = !DILocation(line: 414, column: 57, scope: !4154)
!4158 = !DILocation(line: 415, column: 39, scope: !4154)
!4159 = !DILocation(line: 415, column: 47, scope: !4154)
!4160 = !DILocation(line: 415, column: 51, scope: !4154)
!4161 = !DILocation(line: 414, column: 12, scope: !4154)
!4162 = !DILocation(line: 414, column: 10, scope: !4154)
!4163 = !DILocation(line: 416, column: 3, scope: !4154)
!4164 = !DILocation(line: 418, column: 39, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 417, column: 8)
!4166 = !DILocation(line: 418, column: 43, scope: !4165)
!4167 = !DILocation(line: 418, column: 47, scope: !4165)
!4168 = !DILocation(line: 418, column: 57, scope: !4165)
!4169 = !DILocation(line: 418, column: 12, scope: !4165)
!4170 = !DILocation(line: 418, column: 10, scope: !4165)
!4171 = !DILocation(line: 422, column: 9, scope: !4144)
!4172 = !DILocation(line: 422, column: 39, scope: !4144)
!4173 = !DILocation(line: 422, column: 43, scope: !4144)
!4174 = !DILocation(line: 422, column: 47, scope: !4144)
!4175 = !DILocation(line: 422, column: 51, scope: !4144)
!4176 = !DILocation(line: 422, column: 57, scope: !4144)
!4177 = !DILocation(line: 422, column: 17, scope: !4144)
!4178 = !DILocation(line: 422, column: 7, scope: !4144)
!4179 = !DILocation(line: 424, column: 7, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 424, column: 7)
!4181 = !DILocation(line: 424, column: 11, scope: !4180)
!4182 = !DILocation(line: 424, column: 14, scope: !4180)
!4183 = !DILocation(line: 424, column: 26, scope: !4180)
!4184 = !DILocation(line: 424, column: 25, scope: !4180)
!4185 = !DILocation(line: 424, column: 23, scope: !4180)
!4186 = !DILocation(line: 424, column: 7, scope: !4144)
!4187 = !DILocation(line: 425, column: 14, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 424, column: 34)
!4189 = !DILocation(line: 425, column: 5, scope: !4188)
!4190 = !DILocation(line: 425, column: 12, scope: !4188)
!4191 = !DILocation(line: 426, column: 11, scope: !4188)
!4192 = !DILocation(line: 426, column: 4, scope: !4188)
!4193 = !DILocation(line: 429, column: 4, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 428, column: 8)
!4195 = !DILocalVariable(name: "data", scope: !4196, file: !3, line: 434, type: !4197)
!4196 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 433, column: 7)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2692, file: !3, line: 434, size: 320, elements: !4198)
!4198 = !{!4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4197, file: !3, line: 434, baseType: !504, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !4197, file: !3, line: 434, baseType: !364, size: 32, offset: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4197, file: !3, line: 434, baseType: !364, size: 32, offset: 96)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "strict", scope: !4197, file: !3, line: 434, baseType: !364, size: 32, offset: 128)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4197, file: !3, line: 434, baseType: !364, size: 32, offset: 160)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "lastIndex", scope: !4197, file: !3, line: 434, baseType: !364, size: 32, offset: 192)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "closestIndex", scope: !4197, file: !3, line: 434, baseType: !364, size: 32, offset: 224)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "closest", scope: !4197, file: !3, line: 434, baseType: !620, size: 64, offset: 256)
!4207 = !DILocation(line: 434, column: 108, scope: !4196)
!4208 = !DILocation(line: 438, column: 7, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 438, column: 7)
!4210 = !DILocation(line: 438, column: 20, scope: !4209)
!4211 = !DILocation(line: 438, column: 45, scope: !4209)
!4212 = !DILocation(line: 438, column: 49, scope: !4209)
!4213 = !DILocation(line: 438, column: 53, scope: !4209)
!4214 = !DILocation(line: 438, column: 57, scope: !4209)
!4215 = !DILocation(line: 438, column: 23, scope: !4209)
!4216 = !DILocation(line: 438, column: 79, scope: !4209)
!4217 = !DILocation(line: 438, column: 76, scope: !4209)
!4218 = !DILocation(line: 438, column: 7, scope: !4196)
!4219 = !DILocation(line: 439, column: 22, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 438, column: 93)
!4221 = !DILocation(line: 440, column: 17, scope: !4220)
!4222 = !DILocation(line: 441, column: 3, scope: !4220)
!4223 = !DILocation(line: 443, column: 20, scope: !4196)
!4224 = !DILocation(line: 443, column: 8, scope: !4196)
!4225 = !DILocation(line: 443, column: 18, scope: !4196)
!4226 = !DILocation(line: 444, column: 21, scope: !4196)
!4227 = !DILocation(line: 444, column: 25, scope: !4196)
!4228 = !DILocation(line: 444, column: 8, scope: !4196)
!4229 = !DILocation(line: 444, column: 3, scope: !4196)
!4230 = !DILocation(line: 444, column: 19, scope: !4196)
!4231 = !DILocation(line: 445, column: 21, scope: !4196)
!4232 = !DILocation(line: 445, column: 25, scope: !4196)
!4233 = !DILocation(line: 445, column: 8, scope: !4196)
!4234 = !DILocation(line: 445, column: 3, scope: !4196)
!4235 = !DILocation(line: 445, column: 19, scope: !4196)
!4236 = !DILocation(line: 446, column: 17, scope: !4196)
!4237 = !DILocation(line: 446, column: 8, scope: !4196)
!4238 = !DILocation(line: 446, column: 15, scope: !4196)
!4239 = !DILocation(line: 447, column: 16, scope: !4196)
!4240 = !DILocation(line: 447, column: 15, scope: !4196)
!4241 = !DILocation(line: 447, column: 8, scope: !4196)
!4242 = !DILocation(line: 447, column: 13, scope: !4196)
!4243 = !DILocation(line: 448, column: 17, scope: !4196)
!4244 = !DILocation(line: 448, column: 8, scope: !4196)
!4245 = !DILocation(line: 448, column: 15, scope: !4196)
!4246 = !DILocation(line: 449, column: 8, scope: !4196)
!4247 = !DILocation(line: 449, column: 16, scope: !4196)
!4248 = !DILocation(line: 450, column: 8, scope: !4196)
!4249 = !DILocation(line: 450, column: 21, scope: !4196)
!4250 = !DILocation(line: 452, column: 8, scope: !4196)
!4251 = !DILocation(line: 452, column: 13, scope: !4196)
!4252 = !DILocation(line: 454, column: 28, scope: !4196)
!4253 = !DILocation(line: 454, column: 32, scope: !4196)
!4254 = !DILocation(line: 454, column: 40, scope: !4196)
!4255 = !DILocation(line: 454, column: 44, scope: !4196)
!4256 = !DILocation(line: 454, column: 3, scope: !4196)
!4257 = !DILocation(line: 456, column: 26, scope: !4196)
!4258 = !DILocation(line: 456, column: 58, scope: !4196)
!4259 = !DILocation(line: 456, column: 3, scope: !4196)
!4260 = !DILocation(line: 458, column: 12, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 458, column: 7)
!4262 = !DILocation(line: 458, column: 17, scope: !4261)
!4263 = !DILocation(line: 458, column: 7, scope: !4196)
!4264 = !DILocation(line: 459, column: 9, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 458, column: 22)
!4266 = !DILocation(line: 459, column: 14, scope: !4265)
!4267 = !DILocation(line: 460, column: 27, scope: !4265)
!4268 = !DILocation(line: 460, column: 59, scope: !4265)
!4269 = !DILocation(line: 460, column: 4, scope: !4265)
!4270 = !DILocation(line: 461, column: 3, scope: !4265)
!4271 = !DILocation(line: 463, column: 18, scope: !4196)
!4272 = !DILocation(line: 463, column: 4, scope: !4196)
!4273 = !DILocation(line: 463, column: 11, scope: !4196)
!4274 = !DILocation(line: 464, column: 23, scope: !4196)
!4275 = !DILocation(line: 464, column: 16, scope: !4196)
!4276 = !DILocation(line: 465, column: 28, scope: !4196)
!4277 = !DILocation(line: 465, column: 23, scope: !4196)
!4278 = !DILocation(line: 465, column: 21, scope: !4196)
!4279 = !DILocation(line: 467, column: 15, scope: !4196)
!4280 = !DILocation(line: 467, column: 3, scope: !4196)
!4281 = !DILocation(line: 469, column: 1, scope: !2692)
!4282 = distinct !DISubprogram(name: "findnearestvert__backbufIndextest", scope: !3, file: !3, line: 391, type: !4283, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!813, !288, !7}
!4285 = !DILocalVariable(name: "handle", arg: 1, scope: !4282, file: !3, line: 391, type: !288)
!4286 = !DILocation(line: 391, column: 53, scope: !4282)
!4287 = !DILocalVariable(name: "index", arg: 2, scope: !4282, file: !3, line: 391, type: !7)
!4288 = !DILocation(line: 391, column: 74, scope: !4282)
!4289 = !DILocalVariable(name: "em", scope: !4282, file: !3, line: 393, type: !2675)
!4290 = !DILocation(line: 393, column: 14, scope: !4282)
!4291 = !DILocation(line: 393, column: 33, scope: !4282)
!4292 = !DILocation(line: 393, column: 19, scope: !4282)
!4293 = !DILocalVariable(name: "eve", scope: !4282, file: !3, line: 394, type: !620)
!4294 = !DILocation(line: 394, column: 10, scope: !4282)
!4295 = !DILocation(line: 394, column: 38, scope: !4282)
!4296 = !DILocation(line: 394, column: 42, scope: !4282)
!4297 = !DILocation(line: 394, column: 46, scope: !4282)
!4298 = !DILocation(line: 394, column: 52, scope: !4282)
!4299 = !DILocation(line: 394, column: 16, scope: !4282)
!4300 = !DILocation(line: 395, column: 11, scope: !4282)
!4301 = !DILocation(line: 395, column: 15, scope: !4282)
!4302 = !DILocation(line: 395, column: 18, scope: !4282)
!4303 = !DILocation(line: 0, scope: !4282)
!4304 = !DILocation(line: 395, column: 9, scope: !4282)
!4305 = !DILocation(line: 395, column: 2, scope: !4282)
!4306 = distinct !DISubprogram(name: "findnearestvert__doClosest", scope: !3, file: !3, line: 356, type: !4307, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{null, !288, !620, !4309, !319}
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!4311 = !DILocalVariable(name: "userData", arg: 1, scope: !4306, file: !3, line: 356, type: !288)
!4312 = !DILocation(line: 356, column: 46, scope: !4306)
!4313 = !DILocalVariable(name: "eve", arg: 2, scope: !4306, file: !3, line: 356, type: !620)
!4314 = !DILocation(line: 356, column: 64, scope: !4306)
!4315 = !DILocalVariable(name: "screen_co", arg: 3, scope: !4306, file: !3, line: 356, type: !4309)
!4316 = !DILocation(line: 356, column: 81, scope: !4306)
!4317 = !DILocalVariable(name: "index", arg: 4, scope: !4306, file: !3, line: 356, type: !319)
!4318 = !DILocation(line: 356, column: 99, scope: !4306)
!4319 = !DILocalVariable(name: "data", scope: !4306, file: !3, line: 358, type: !4320)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4306, file: !3, line: 358, size: 320, elements: !4322)
!4322 = !{!4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4321, file: !3, line: 358, baseType: !504, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !4321, file: !3, line: 358, baseType: !364, size: 32, offset: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4321, file: !3, line: 358, baseType: !364, size: 32, offset: 96)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "strict", scope: !4321, file: !3, line: 358, baseType: !364, size: 32, offset: 128)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4321, file: !3, line: 358, baseType: !364, size: 32, offset: 160)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "lastIndex", scope: !4321, file: !3, line: 358, baseType: !364, size: 32, offset: 192)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "closestIndex", scope: !4321, file: !3, line: 358, baseType: !364, size: 32, offset: 224)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "closest", scope: !4321, file: !3, line: 358, baseType: !620, size: 64, offset: 256)
!4331 = !DILocation(line: 358, column: 108, scope: !4306)
!4332 = !DILocation(line: 358, column: 115, scope: !4306)
!4333 = !DILocation(line: 360, column: 6, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 360, column: 6)
!4335 = !DILocation(line: 360, column: 12, scope: !4334)
!4336 = !DILocation(line: 360, column: 17, scope: !4334)
!4337 = !DILocation(line: 360, column: 6, scope: !4306)
!4338 = !DILocation(line: 361, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 361, column: 7)
!4340 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 360, column: 23)
!4341 = !DILocation(line: 361, column: 16, scope: !4339)
!4342 = !DILocation(line: 361, column: 22, scope: !4339)
!4343 = !DILocation(line: 361, column: 13, scope: !4339)
!4344 = !DILocation(line: 361, column: 7, scope: !4340)
!4345 = !DILocation(line: 362, column: 4, scope: !4339)
!4346 = !DILocation(line: 363, column: 2, scope: !4340)
!4347 = !DILocation(line: 365, column: 7, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 365, column: 7)
!4349 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 364, column: 7)
!4350 = !DILocation(line: 365, column: 15, scope: !4348)
!4351 = !DILocation(line: 365, column: 21, scope: !4348)
!4352 = !DILocation(line: 365, column: 13, scope: !4348)
!4353 = !DILocation(line: 365, column: 7, scope: !4349)
!4354 = !DILocation(line: 366, column: 4, scope: !4348)
!4355 = !DILocation(line: 369, column: 6, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 369, column: 6)
!4357 = !DILocation(line: 369, column: 12, scope: !4356)
!4358 = !DILocation(line: 369, column: 17, scope: !4356)
!4359 = !DILocation(line: 369, column: 6, scope: !4306)
!4360 = !DILocalVariable(name: "dist_test", scope: !4361, file: !3, line: 370, type: !364)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 369, column: 22)
!4362 = !DILocation(line: 370, column: 9, scope: !4361)
!4363 = !DILocation(line: 370, column: 40, scope: !4361)
!4364 = !DILocation(line: 370, column: 46, scope: !4361)
!4365 = !DILocation(line: 370, column: 55, scope: !4361)
!4366 = !DILocation(line: 370, column: 21, scope: !4361)
!4367 = !DILocation(line: 371, column: 7, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 371, column: 7)
!4369 = !DILocation(line: 371, column: 49, scope: !4368)
!4370 = !DILocation(line: 371, column: 55, scope: !4368)
!4371 = !DILocation(line: 371, column: 46, scope: !4368)
!4372 = !DILocation(line: 371, column: 7, scope: !4361)
!4373 = !DILocation(line: 372, column: 8, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 372, column: 8)
!4375 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 371, column: 63)
!4376 = !DILocation(line: 372, column: 14, scope: !4374)
!4377 = !DILocation(line: 372, column: 21, scope: !4374)
!4378 = !DILocation(line: 372, column: 8, scope: !4375)
!4379 = !DILocation(line: 373, column: 5, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 372, column: 27)
!4381 = !DILocation(line: 376, column: 15, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 375, column: 9)
!4383 = !DILocation(line: 378, column: 3, scope: !4375)
!4384 = !DILocation(line: 380, column: 7, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 380, column: 7)
!4386 = !DILocation(line: 380, column: 19, scope: !4385)
!4387 = !DILocation(line: 380, column: 25, scope: !4385)
!4388 = !DILocation(line: 380, column: 17, scope: !4385)
!4389 = !DILocation(line: 380, column: 7, scope: !4361)
!4390 = !DILocation(line: 381, column: 17, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 380, column: 31)
!4392 = !DILocation(line: 381, column: 4, scope: !4391)
!4393 = !DILocation(line: 381, column: 10, scope: !4391)
!4394 = !DILocation(line: 381, column: 15, scope: !4391)
!4395 = !DILocation(line: 382, column: 20, scope: !4391)
!4396 = !DILocation(line: 382, column: 4, scope: !4391)
!4397 = !DILocation(line: 382, column: 10, scope: !4391)
!4398 = !DILocation(line: 382, column: 18, scope: !4391)
!4399 = !DILocation(line: 383, column: 25, scope: !4391)
!4400 = !DILocation(line: 383, column: 4, scope: !4391)
!4401 = !DILocation(line: 383, column: 10, scope: !4391)
!4402 = !DILocation(line: 383, column: 23, scope: !4391)
!4403 = !DILocation(line: 384, column: 3, scope: !4391)
!4404 = !DILocation(line: 385, column: 2, scope: !4361)
!4405 = !DILocation(line: 386, column: 1, scope: !4306)
!4406 = distinct !DISubprogram(name: "EDBM_edge_find_nearest", scope: !3, file: !3, line: 503, type: !4407, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!641, !2695, !844}
!4409 = !DILocalVariable(name: "vc", arg: 1, scope: !4406, file: !3, line: 503, type: !2695)
!4410 = !DILocation(line: 503, column: 45, scope: !4406)
!4411 = !DILocalVariable(name: "r_dist", arg: 2, scope: !4406, file: !3, line: 503, type: !844)
!4412 = !DILocation(line: 503, column: 56, scope: !4406)
!4413 = !DILocation(line: 506, column: 6, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 506, column: 6)
!4415 = !DILocation(line: 506, column: 10, scope: !4414)
!4416 = !DILocation(line: 506, column: 15, scope: !4414)
!4417 = !DILocation(line: 506, column: 24, scope: !4414)
!4418 = !DILocation(line: 506, column: 34, scope: !4414)
!4419 = !DILocation(line: 506, column: 38, scope: !4414)
!4420 = !DILocation(line: 506, column: 42, scope: !4414)
!4421 = !DILocation(line: 506, column: 47, scope: !4414)
!4422 = !DILocation(line: 506, column: 52, scope: !4414)
!4423 = !DILocation(line: 506, column: 6, scope: !4406)
!4424 = !DILocalVariable(name: "distance", scope: !4425, file: !3, line: 507, type: !364)
!4425 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 506, column: 72)
!4426 = !DILocation(line: 507, column: 9, scope: !4425)
!4427 = !DILocalVariable(name: "index", scope: !4425, file: !3, line: 508, type: !7)
!4428 = !DILocation(line: 508, column: 16, scope: !4425)
!4429 = !DILocalVariable(name: "eed", scope: !4425, file: !3, line: 509, type: !681)
!4430 = !DILocation(line: 509, column: 11, scope: !4425)
!4431 = !DILocation(line: 511, column: 27, scope: !4425)
!4432 = !DILocation(line: 511, column: 3, scope: !4425)
!4433 = !DILocation(line: 513, column: 38, scope: !4425)
!4434 = !DILocation(line: 513, column: 42, scope: !4425)
!4435 = !DILocation(line: 513, column: 46, scope: !4425)
!4436 = !DILocation(line: 513, column: 56, scope: !4425)
!4437 = !DILocation(line: 513, column: 70, scope: !4425)
!4438 = !DILocation(line: 513, column: 11, scope: !4425)
!4439 = !DILocation(line: 513, column: 9, scope: !4425)
!4440 = !DILocation(line: 514, column: 9, scope: !4425)
!4441 = !DILocation(line: 514, column: 39, scope: !4425)
!4442 = !DILocation(line: 514, column: 43, scope: !4425)
!4443 = !DILocation(line: 514, column: 47, scope: !4425)
!4444 = !DILocation(line: 514, column: 51, scope: !4425)
!4445 = !DILocation(line: 514, column: 57, scope: !4425)
!4446 = !DILocation(line: 514, column: 17, scope: !4425)
!4447 = !DILocation(line: 514, column: 7, scope: !4425)
!4448 = !DILocation(line: 516, column: 7, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 516, column: 7)
!4450 = !DILocation(line: 516, column: 11, scope: !4449)
!4451 = !DILocation(line: 516, column: 14, scope: !4449)
!4452 = !DILocation(line: 516, column: 26, scope: !4449)
!4453 = !DILocation(line: 516, column: 25, scope: !4449)
!4454 = !DILocation(line: 516, column: 23, scope: !4449)
!4455 = !DILocation(line: 516, column: 7, scope: !4425)
!4456 = !DILocation(line: 517, column: 14, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 516, column: 34)
!4458 = !DILocation(line: 517, column: 5, scope: !4457)
!4459 = !DILocation(line: 517, column: 12, scope: !4457)
!4460 = !DILocation(line: 518, column: 11, scope: !4457)
!4461 = !DILocation(line: 518, column: 4, scope: !4457)
!4462 = !DILocation(line: 521, column: 4, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 520, column: 8)
!4464 = !DILocalVariable(name: "data", scope: !4465, file: !3, line: 525, type: !4466)
!4465 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 524, column: 7)
!4466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4406, file: !3, line: 525, size: 704, elements: !4467)
!4467 = !{!4468, !4469, !4470, !4471}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !4466, file: !3, line: 525, baseType: !2696, size: 512)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4466, file: !3, line: 525, baseType: !504, size: 64, offset: 512)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4466, file: !3, line: 525, baseType: !364, size: 32, offset: 576)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "closest", scope: !4466, file: !3, line: 525, baseType: !681, size: 64, offset: 640)
!4472 = !DILocation(line: 525, column: 77, scope: !4465)
!4473 = !DILocation(line: 527, column: 8, scope: !4465)
!4474 = !DILocation(line: 527, column: 14, scope: !4465)
!4475 = !DILocation(line: 527, column: 13, scope: !4465)
!4476 = !DILocation(line: 528, column: 21, scope: !4465)
!4477 = !DILocation(line: 528, column: 25, scope: !4465)
!4478 = !DILocation(line: 528, column: 8, scope: !4465)
!4479 = !DILocation(line: 528, column: 3, scope: !4465)
!4480 = !DILocation(line: 528, column: 19, scope: !4465)
!4481 = !DILocation(line: 529, column: 21, scope: !4465)
!4482 = !DILocation(line: 529, column: 25, scope: !4465)
!4483 = !DILocation(line: 529, column: 8, scope: !4465)
!4484 = !DILocation(line: 529, column: 3, scope: !4465)
!4485 = !DILocation(line: 529, column: 19, scope: !4465)
!4486 = !DILocation(line: 530, column: 16, scope: !4465)
!4487 = !DILocation(line: 530, column: 15, scope: !4465)
!4488 = !DILocation(line: 530, column: 8, scope: !4465)
!4489 = !DILocation(line: 530, column: 13, scope: !4465)
!4490 = !DILocation(line: 531, column: 8, scope: !4465)
!4491 = !DILocation(line: 531, column: 16, scope: !4465)
!4492 = !DILocation(line: 532, column: 28, scope: !4465)
!4493 = !DILocation(line: 532, column: 32, scope: !4465)
!4494 = !DILocation(line: 532, column: 40, scope: !4465)
!4495 = !DILocation(line: 532, column: 44, scope: !4465)
!4496 = !DILocation(line: 532, column: 3, scope: !4465)
!4497 = !DILocation(line: 534, column: 26, scope: !4465)
!4498 = !DILocation(line: 534, column: 58, scope: !4465)
!4499 = !DILocation(line: 534, column: 3, scope: !4465)
!4500 = !DILocation(line: 536, column: 18, scope: !4465)
!4501 = !DILocation(line: 536, column: 4, scope: !4465)
!4502 = !DILocation(line: 536, column: 11, scope: !4465)
!4503 = !DILocation(line: 537, column: 15, scope: !4465)
!4504 = !DILocation(line: 537, column: 3, scope: !4465)
!4505 = !DILocation(line: 539, column: 1, scope: !4406)
!4506 = distinct !DISubprogram(name: "findnearestedge__doClosest", scope: !3, file: !3, line: 472, type: !4507, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{null, !288, !681, !4309, !4309, !319}
!4509 = !DILocalVariable(name: "userData", arg: 1, scope: !4506, file: !3, line: 472, type: !288)
!4510 = !DILocation(line: 472, column: 46, scope: !4506)
!4511 = !DILocalVariable(name: "eed", arg: 2, scope: !4506, file: !3, line: 472, type: !681)
!4512 = !DILocation(line: 472, column: 64, scope: !4506)
!4513 = !DILocalVariable(name: "screen_co_a", arg: 3, scope: !4506, file: !3, line: 472, type: !4309)
!4514 = !DILocation(line: 472, column: 81, scope: !4506)
!4515 = !DILocalVariable(name: "screen_co_b", arg: 4, scope: !4506, file: !3, line: 472, type: !4309)
!4516 = !DILocation(line: 472, column: 109, scope: !4506)
!4517 = !DILocalVariable(name: "UNUSED_index", arg: 5, scope: !4506, file: !3, line: 472, type: !319)
!4518 = !DILocation(line: 472, column: 129, scope: !4506)
!4519 = !DILocalVariable(name: "data", scope: !4506, file: !3, line: 474, type: !4520)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4506, file: !3, line: 474, size: 704, elements: !4522)
!4522 = !{!4523, !4524, !4525, !4526}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !4521, file: !3, line: 474, baseType: !2696, size: 512)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4521, file: !3, line: 474, baseType: !504, size: 64, offset: 512)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4521, file: !3, line: 474, baseType: !364, size: 32, offset: 576)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "closest", scope: !4521, file: !3, line: 474, baseType: !681, size: 64, offset: 640)
!4527 = !DILocation(line: 474, column: 77, scope: !4506)
!4528 = !DILocation(line: 474, column: 84, scope: !4506)
!4529 = !DILocalVariable(name: "distance", scope: !4506, file: !3, line: 475, type: !319)
!4530 = !DILocation(line: 475, column: 6, scope: !4506)
!4531 = !DILocation(line: 477, column: 37, scope: !4506)
!4532 = !DILocation(line: 477, column: 43, scope: !4506)
!4533 = !DILocation(line: 477, column: 52, scope: !4506)
!4534 = !DILocation(line: 477, column: 65, scope: !4506)
!4535 = !DILocation(line: 477, column: 13, scope: !4506)
!4536 = !DILocation(line: 477, column: 11, scope: !4506)
!4537 = !DILocation(line: 479, column: 6, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 479, column: 6)
!4539 = !DILocation(line: 479, column: 6, scope: !4506)
!4540 = !DILocation(line: 480, column: 12, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 479, column: 46)
!4542 = !DILocation(line: 481, column: 2, scope: !4541)
!4543 = !DILocation(line: 483, column: 6, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 483, column: 6)
!4545 = !DILocation(line: 483, column: 17, scope: !4544)
!4546 = !DILocation(line: 483, column: 23, scope: !4544)
!4547 = !DILocation(line: 483, column: 15, scope: !4544)
!4548 = !DILocation(line: 483, column: 6, scope: !4506)
!4549 = !DILocation(line: 484, column: 7, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 484, column: 7)
!4551 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 483, column: 29)
!4552 = !DILocation(line: 484, column: 13, scope: !4550)
!4553 = !DILocation(line: 484, column: 16, scope: !4550)
!4554 = !DILocation(line: 484, column: 22, scope: !4550)
!4555 = !DILocation(line: 484, column: 28, scope: !4550)
!4556 = !DILocation(line: 484, column: 7, scope: !4551)
!4557 = !DILocalVariable(name: "lambda", scope: !4558, file: !3, line: 485, type: !364)
!4558 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 484, column: 45)
!4559 = !DILocation(line: 485, column: 10, scope: !4558)
!4560 = !DILocation(line: 485, column: 40, scope: !4558)
!4561 = !DILocation(line: 485, column: 46, scope: !4558)
!4562 = !DILocation(line: 485, column: 55, scope: !4558)
!4563 = !DILocation(line: 485, column: 68, scope: !4558)
!4564 = !DILocation(line: 485, column: 19, scope: !4558)
!4565 = !DILocalVariable(name: "vec", scope: !4558, file: !3, line: 486, type: !556)
!4566 = !DILocation(line: 486, column: 10, scope: !4558)
!4567 = !DILocation(line: 488, column: 13, scope: !4558)
!4568 = !DILocation(line: 488, column: 18, scope: !4558)
!4569 = !DILocation(line: 488, column: 22, scope: !4558)
!4570 = !DILocation(line: 488, column: 30, scope: !4558)
!4571 = !DILocation(line: 488, column: 40, scope: !4558)
!4572 = !DILocation(line: 488, column: 45, scope: !4558)
!4573 = !DILocation(line: 488, column: 49, scope: !4558)
!4574 = !DILocation(line: 488, column: 57, scope: !4558)
!4575 = !DILocation(line: 488, column: 62, scope: !4558)
!4576 = !DILocation(line: 488, column: 66, scope: !4558)
!4577 = !DILocation(line: 488, column: 55, scope: !4558)
!4578 = !DILocation(line: 488, column: 37, scope: !4558)
!4579 = !DILocation(line: 488, column: 28, scope: !4558)
!4580 = !DILocation(line: 488, column: 4, scope: !4558)
!4581 = !DILocation(line: 488, column: 11, scope: !4558)
!4582 = !DILocation(line: 489, column: 13, scope: !4558)
!4583 = !DILocation(line: 489, column: 18, scope: !4558)
!4584 = !DILocation(line: 489, column: 22, scope: !4558)
!4585 = !DILocation(line: 489, column: 30, scope: !4558)
!4586 = !DILocation(line: 489, column: 40, scope: !4558)
!4587 = !DILocation(line: 489, column: 45, scope: !4558)
!4588 = !DILocation(line: 489, column: 49, scope: !4558)
!4589 = !DILocation(line: 489, column: 57, scope: !4558)
!4590 = !DILocation(line: 489, column: 62, scope: !4558)
!4591 = !DILocation(line: 489, column: 66, scope: !4558)
!4592 = !DILocation(line: 489, column: 55, scope: !4558)
!4593 = !DILocation(line: 489, column: 37, scope: !4558)
!4594 = !DILocation(line: 489, column: 28, scope: !4558)
!4595 = !DILocation(line: 489, column: 4, scope: !4558)
!4596 = !DILocation(line: 489, column: 11, scope: !4558)
!4597 = !DILocation(line: 490, column: 13, scope: !4558)
!4598 = !DILocation(line: 490, column: 18, scope: !4558)
!4599 = !DILocation(line: 490, column: 22, scope: !4558)
!4600 = !DILocation(line: 490, column: 30, scope: !4558)
!4601 = !DILocation(line: 490, column: 40, scope: !4558)
!4602 = !DILocation(line: 490, column: 45, scope: !4558)
!4603 = !DILocation(line: 490, column: 49, scope: !4558)
!4604 = !DILocation(line: 490, column: 57, scope: !4558)
!4605 = !DILocation(line: 490, column: 62, scope: !4558)
!4606 = !DILocation(line: 490, column: 66, scope: !4558)
!4607 = !DILocation(line: 490, column: 55, scope: !4558)
!4608 = !DILocation(line: 490, column: 37, scope: !4558)
!4609 = !DILocation(line: 490, column: 28, scope: !4558)
!4610 = !DILocation(line: 490, column: 4, scope: !4558)
!4611 = !DILocation(line: 490, column: 11, scope: !4558)
!4612 = !DILocation(line: 492, column: 32, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 492, column: 8)
!4614 = !DILocation(line: 492, column: 38, scope: !4613)
!4615 = !DILocation(line: 492, column: 41, scope: !4613)
!4616 = !DILocation(line: 492, column: 47, scope: !4613)
!4617 = !DILocation(line: 492, column: 8, scope: !4613)
!4618 = !DILocation(line: 492, column: 58, scope: !4613)
!4619 = !DILocation(line: 492, column: 8, scope: !4558)
!4620 = !DILocation(line: 493, column: 18, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 492, column: 64)
!4622 = !DILocation(line: 493, column: 5, scope: !4621)
!4623 = !DILocation(line: 493, column: 11, scope: !4621)
!4624 = !DILocation(line: 493, column: 16, scope: !4621)
!4625 = !DILocation(line: 494, column: 21, scope: !4621)
!4626 = !DILocation(line: 494, column: 5, scope: !4621)
!4627 = !DILocation(line: 494, column: 11, scope: !4621)
!4628 = !DILocation(line: 494, column: 19, scope: !4621)
!4629 = !DILocation(line: 495, column: 4, scope: !4621)
!4630 = !DILocation(line: 496, column: 3, scope: !4558)
!4631 = !DILocation(line: 498, column: 17, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 497, column: 8)
!4633 = !DILocation(line: 498, column: 4, scope: !4632)
!4634 = !DILocation(line: 498, column: 10, scope: !4632)
!4635 = !DILocation(line: 498, column: 15, scope: !4632)
!4636 = !DILocation(line: 499, column: 20, scope: !4632)
!4637 = !DILocation(line: 499, column: 4, scope: !4632)
!4638 = !DILocation(line: 499, column: 10, scope: !4632)
!4639 = !DILocation(line: 499, column: 18, scope: !4632)
!4640 = !DILocation(line: 501, column: 2, scope: !4551)
!4641 = !DILocation(line: 502, column: 1, scope: !4506)
!4642 = !DILocalVariable(name: "vc", arg: 1, scope: !3063, file: !3, line: 577, type: !2695)
!4643 = !DILocation(line: 577, column: 45, scope: !3063)
!4644 = !DILocalVariable(name: "r_dist", arg: 2, scope: !3063, file: !3, line: 577, type: !844)
!4645 = !DILocation(line: 577, column: 56, scope: !3063)
!4646 = !DILocation(line: 580, column: 6, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 580, column: 6)
!4648 = !DILocation(line: 580, column: 10, scope: !4647)
!4649 = !DILocation(line: 580, column: 15, scope: !4647)
!4650 = !DILocation(line: 580, column: 24, scope: !4647)
!4651 = !DILocation(line: 580, column: 34, scope: !4647)
!4652 = !DILocation(line: 580, column: 38, scope: !4647)
!4653 = !DILocation(line: 580, column: 42, scope: !4647)
!4654 = !DILocation(line: 580, column: 47, scope: !4647)
!4655 = !DILocation(line: 580, column: 52, scope: !4647)
!4656 = !DILocation(line: 580, column: 6, scope: !3063)
!4657 = !DILocalVariable(name: "index", scope: !4658, file: !3, line: 581, type: !7)
!4658 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 580, column: 72)
!4659 = !DILocation(line: 581, column: 16, scope: !4658)
!4660 = !DILocalVariable(name: "efa", scope: !4658, file: !3, line: 582, type: !685)
!4661 = !DILocation(line: 582, column: 11, scope: !4658)
!4662 = !DILocation(line: 584, column: 27, scope: !4658)
!4663 = !DILocation(line: 584, column: 3, scope: !4658)
!4664 = !DILocation(line: 586, column: 33, scope: !4658)
!4665 = !DILocation(line: 586, column: 37, scope: !4658)
!4666 = !DILocation(line: 586, column: 41, scope: !4658)
!4667 = !DILocation(line: 586, column: 50, scope: !4658)
!4668 = !DILocation(line: 586, column: 54, scope: !4658)
!4669 = !DILocation(line: 586, column: 11, scope: !4658)
!4670 = !DILocation(line: 586, column: 9, scope: !4658)
!4671 = !DILocation(line: 587, column: 9, scope: !4658)
!4672 = !DILocation(line: 587, column: 39, scope: !4658)
!4673 = !DILocation(line: 587, column: 43, scope: !4658)
!4674 = !DILocation(line: 587, column: 47, scope: !4658)
!4675 = !DILocation(line: 587, column: 51, scope: !4658)
!4676 = !DILocation(line: 587, column: 57, scope: !4658)
!4677 = !DILocation(line: 587, column: 17, scope: !4658)
!4678 = !DILocation(line: 587, column: 7, scope: !4658)
!4679 = !DILocation(line: 589, column: 7, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 589, column: 7)
!4681 = !DILocation(line: 589, column: 7, scope: !4658)
!4682 = !DILocalVariable(name: "data", scope: !4683, file: !3, line: 590, type: !4684)
!4683 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 589, column: 12)
!4684 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3063, file: !3, line: 590, size: 192, elements: !4685)
!4685 = !{!4686, !4687, !4688}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4684, file: !3, line: 590, baseType: !504, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4684, file: !3, line: 590, baseType: !364, size: 32, offset: 64)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "toFace", scope: !4684, file: !3, line: 590, baseType: !685, size: 64, offset: 128)
!4689 = !DILocation(line: 590, column: 61, scope: !4683)
!4690 = !DILocation(line: 592, column: 22, scope: !4683)
!4691 = !DILocation(line: 592, column: 26, scope: !4683)
!4692 = !DILocation(line: 592, column: 9, scope: !4683)
!4693 = !DILocation(line: 592, column: 4, scope: !4683)
!4694 = !DILocation(line: 592, column: 20, scope: !4683)
!4695 = !DILocation(line: 593, column: 22, scope: !4683)
!4696 = !DILocation(line: 593, column: 26, scope: !4683)
!4697 = !DILocation(line: 593, column: 9, scope: !4683)
!4698 = !DILocation(line: 593, column: 4, scope: !4683)
!4699 = !DILocation(line: 593, column: 20, scope: !4683)
!4700 = !DILocation(line: 594, column: 9, scope: !4683)
!4701 = !DILocation(line: 594, column: 14, scope: !4683)
!4702 = !DILocation(line: 595, column: 18, scope: !4683)
!4703 = !DILocation(line: 595, column: 9, scope: !4683)
!4704 = !DILocation(line: 595, column: 16, scope: !4683)
!4705 = !DILocation(line: 597, column: 29, scope: !4683)
!4706 = !DILocation(line: 597, column: 33, scope: !4683)
!4707 = !DILocation(line: 597, column: 41, scope: !4683)
!4708 = !DILocation(line: 597, column: 45, scope: !4683)
!4709 = !DILocation(line: 597, column: 4, scope: !4683)
!4710 = !DILocation(line: 599, column: 27, scope: !4683)
!4711 = !DILocation(line: 599, column: 61, scope: !4683)
!4712 = !DILocation(line: 599, column: 4, scope: !4683)
!4713 = !DILocation(line: 601, column: 9, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 601, column: 8)
!4715 = !DILocation(line: 601, column: 13, scope: !4714)
!4716 = !DILocation(line: 601, column: 17, scope: !4714)
!4717 = !DILocation(line: 601, column: 28, scope: !4714)
!4718 = !DILocation(line: 601, column: 48, scope: !4714)
!4719 = !DILocation(line: 601, column: 57, scope: !4714)
!4720 = !DILocation(line: 601, column: 65, scope: !4714)
!4721 = !DILocation(line: 601, column: 64, scope: !4714)
!4722 = !DILocation(line: 601, column: 62, scope: !4714)
!4723 = !DILocation(line: 601, column: 8, scope: !4683)
!4724 = !DILocation(line: 602, column: 20, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 601, column: 74)
!4726 = !DILocation(line: 602, column: 6, scope: !4725)
!4727 = !DILocation(line: 602, column: 13, scope: !4725)
!4728 = !DILocation(line: 603, column: 12, scope: !4725)
!4729 = !DILocation(line: 603, column: 5, scope: !4725)
!4730 = !DILocation(line: 605, column: 3, scope: !4683)
!4731 = !DILocation(line: 607, column: 3, scope: !4658)
!4732 = !DILocalVariable(name: "data", scope: !4733, file: !3, line: 610, type: !4734)
!4733 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 609, column: 7)
!4734 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3063, file: !3, line: 610, size: 256, elements: !4735)
!4735 = !{!4736, !4737, !4738, !4739, !4740, !4741}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4734, file: !3, line: 610, baseType: !504, size: 64)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !4734, file: !3, line: 610, baseType: !364, size: 32, offset: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4734, file: !3, line: 610, baseType: !364, size: 32, offset: 96)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "lastIndex", scope: !4734, file: !3, line: 610, baseType: !364, size: 32, offset: 128)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "closestIndex", scope: !4734, file: !3, line: 610, baseType: !364, size: 32, offset: 160)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "closest", scope: !4734, file: !3, line: 610, baseType: !685, size: 64, offset: 192)
!4742 = !DILocation(line: 610, column: 92, scope: !4733)
!4743 = !DILocation(line: 614, column: 7, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 614, column: 7)
!4745 = !DILocation(line: 614, column: 20, scope: !4744)
!4746 = !DILocation(line: 614, column: 45, scope: !4744)
!4747 = !DILocation(line: 614, column: 49, scope: !4744)
!4748 = !DILocation(line: 614, column: 53, scope: !4744)
!4749 = !DILocation(line: 614, column: 57, scope: !4744)
!4750 = !DILocation(line: 614, column: 23, scope: !4744)
!4751 = !DILocation(line: 614, column: 79, scope: !4744)
!4752 = !DILocation(line: 614, column: 76, scope: !4744)
!4753 = !DILocation(line: 614, column: 7, scope: !4733)
!4754 = !DILocation(line: 615, column: 22, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 614, column: 93)
!4756 = !DILocation(line: 616, column: 17, scope: !4755)
!4757 = !DILocation(line: 617, column: 3, scope: !4755)
!4758 = !DILocation(line: 619, column: 20, scope: !4733)
!4759 = !DILocation(line: 619, column: 8, scope: !4733)
!4760 = !DILocation(line: 619, column: 18, scope: !4733)
!4761 = !DILocation(line: 620, column: 21, scope: !4733)
!4762 = !DILocation(line: 620, column: 25, scope: !4733)
!4763 = !DILocation(line: 620, column: 8, scope: !4733)
!4764 = !DILocation(line: 620, column: 3, scope: !4733)
!4765 = !DILocation(line: 620, column: 19, scope: !4733)
!4766 = !DILocation(line: 621, column: 21, scope: !4733)
!4767 = !DILocation(line: 621, column: 25, scope: !4733)
!4768 = !DILocation(line: 621, column: 8, scope: !4733)
!4769 = !DILocation(line: 621, column: 3, scope: !4733)
!4770 = !DILocation(line: 621, column: 19, scope: !4733)
!4771 = !DILocation(line: 622, column: 16, scope: !4733)
!4772 = !DILocation(line: 622, column: 15, scope: !4733)
!4773 = !DILocation(line: 622, column: 8, scope: !4733)
!4774 = !DILocation(line: 622, column: 13, scope: !4733)
!4775 = !DILocation(line: 623, column: 8, scope: !4733)
!4776 = !DILocation(line: 623, column: 16, scope: !4733)
!4777 = !DILocation(line: 624, column: 8, scope: !4733)
!4778 = !DILocation(line: 624, column: 21, scope: !4733)
!4779 = !DILocation(line: 626, column: 8, scope: !4733)
!4780 = !DILocation(line: 626, column: 13, scope: !4733)
!4781 = !DILocation(line: 627, column: 28, scope: !4733)
!4782 = !DILocation(line: 627, column: 32, scope: !4733)
!4783 = !DILocation(line: 627, column: 40, scope: !4733)
!4784 = !DILocation(line: 627, column: 44, scope: !4733)
!4785 = !DILocation(line: 627, column: 3, scope: !4733)
!4786 = !DILocation(line: 628, column: 26, scope: !4733)
!4787 = !DILocation(line: 628, column: 58, scope: !4733)
!4788 = !DILocation(line: 628, column: 3, scope: !4733)
!4789 = !DILocation(line: 630, column: 12, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 630, column: 7)
!4791 = !DILocation(line: 630, column: 17, scope: !4790)
!4792 = !DILocation(line: 630, column: 7, scope: !4733)
!4793 = !DILocation(line: 631, column: 9, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 630, column: 25)
!4795 = !DILocation(line: 631, column: 14, scope: !4794)
!4796 = !DILocation(line: 632, column: 27, scope: !4794)
!4797 = !DILocation(line: 632, column: 59, scope: !4794)
!4798 = !DILocation(line: 632, column: 4, scope: !4794)
!4799 = !DILocation(line: 633, column: 3, scope: !4794)
!4800 = !DILocation(line: 635, column: 18, scope: !4733)
!4801 = !DILocation(line: 635, column: 4, scope: !4733)
!4802 = !DILocation(line: 635, column: 11, scope: !4733)
!4803 = !DILocation(line: 636, column: 23, scope: !4733)
!4804 = !DILocation(line: 636, column: 16, scope: !4733)
!4805 = !DILocation(line: 637, column: 28, scope: !4733)
!4806 = !DILocation(line: 637, column: 23, scope: !4733)
!4807 = !DILocation(line: 637, column: 21, scope: !4733)
!4808 = !DILocation(line: 639, column: 15, scope: !4733)
!4809 = !DILocation(line: 639, column: 3, scope: !4733)
!4810 = !DILocation(line: 641, column: 1, scope: !3063)
!4811 = distinct !DISubprogram(name: "findnearestface__getDistance", scope: !3, file: !3, line: 541, type: !4812, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{null, !288, !685, !4309, !319}
!4814 = !DILocalVariable(name: "userData", arg: 1, scope: !4811, file: !3, line: 541, type: !288)
!4815 = !DILocation(line: 541, column: 48, scope: !4811)
!4816 = !DILocalVariable(name: "efa", arg: 2, scope: !4811, file: !3, line: 541, type: !685)
!4817 = !DILocation(line: 541, column: 66, scope: !4811)
!4818 = !DILocalVariable(name: "screen_co", arg: 3, scope: !4811, file: !3, line: 541, type: !4309)
!4819 = !DILocation(line: 541, column: 83, scope: !4811)
!4820 = !DILocalVariable(name: "UNUSED_index", arg: 4, scope: !4811, file: !3, line: 541, type: !319)
!4821 = !DILocation(line: 541, column: 101, scope: !4811)
!4822 = !DILocalVariable(name: "data", scope: !4811, file: !3, line: 543, type: !4823)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4811, file: !3, line: 543, size: 192, elements: !4825)
!4825 = !{!4826, !4827, !4828}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4824, file: !3, line: 543, baseType: !504, size: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4824, file: !3, line: 543, baseType: !364, size: 32, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "toFace", scope: !4824, file: !3, line: 543, baseType: !685, size: 64, offset: 128)
!4829 = !DILocation(line: 543, column: 60, scope: !4811)
!4830 = !DILocation(line: 543, column: 67, scope: !4811)
!4831 = !DILocation(line: 545, column: 6, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 545, column: 6)
!4833 = !DILocation(line: 545, column: 13, scope: !4832)
!4834 = !DILocation(line: 545, column: 19, scope: !4832)
!4835 = !DILocation(line: 545, column: 10, scope: !4832)
!4836 = !DILocation(line: 545, column: 6, scope: !4811)
!4837 = !DILocalVariable(name: "dist_test", scope: !4838, file: !3, line: 546, type: !4310)
!4838 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 545, column: 27)
!4839 = !DILocation(line: 546, column: 15, scope: !4838)
!4840 = !DILocation(line: 546, column: 46, scope: !4838)
!4841 = !DILocation(line: 546, column: 52, scope: !4838)
!4842 = !DILocation(line: 546, column: 61, scope: !4838)
!4843 = !DILocation(line: 546, column: 27, scope: !4838)
!4844 = !DILocation(line: 548, column: 7, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 548, column: 7)
!4846 = !DILocation(line: 548, column: 19, scope: !4845)
!4847 = !DILocation(line: 548, column: 25, scope: !4845)
!4848 = !DILocation(line: 548, column: 17, scope: !4845)
!4849 = !DILocation(line: 548, column: 7, scope: !4838)
!4850 = !DILocation(line: 549, column: 17, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 548, column: 31)
!4852 = !DILocation(line: 549, column: 4, scope: !4851)
!4853 = !DILocation(line: 549, column: 10, scope: !4851)
!4854 = !DILocation(line: 549, column: 15, scope: !4851)
!4855 = !DILocation(line: 550, column: 3, scope: !4851)
!4856 = !DILocation(line: 551, column: 2, scope: !4838)
!4857 = !DILocation(line: 552, column: 1, scope: !4811)
!4858 = distinct !DISubprogram(name: "findnearestface__doClosest", scope: !3, file: !3, line: 553, type: !4812, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4859 = !DILocalVariable(name: "userData", arg: 1, scope: !4858, file: !3, line: 553, type: !288)
!4860 = !DILocation(line: 553, column: 46, scope: !4858)
!4861 = !DILocalVariable(name: "efa", arg: 2, scope: !4858, file: !3, line: 553, type: !685)
!4862 = !DILocation(line: 553, column: 64, scope: !4858)
!4863 = !DILocalVariable(name: "screen_co", arg: 3, scope: !4858, file: !3, line: 553, type: !4309)
!4864 = !DILocation(line: 553, column: 81, scope: !4858)
!4865 = !DILocalVariable(name: "index", arg: 4, scope: !4858, file: !3, line: 553, type: !319)
!4866 = !DILocation(line: 553, column: 99, scope: !4858)
!4867 = !DILocalVariable(name: "data", scope: !4858, file: !3, line: 555, type: !4868)
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 64)
!4869 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4858, file: !3, line: 555, size: 256, elements: !4870)
!4870 = !{!4871, !4872, !4873, !4874, !4875, !4876}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "mval_fl", scope: !4869, file: !3, line: 555, baseType: !504, size: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !4869, file: !3, line: 555, baseType: !364, size: 32, offset: 64)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4869, file: !3, line: 555, baseType: !364, size: 32, offset: 96)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "lastIndex", scope: !4869, file: !3, line: 555, baseType: !364, size: 32, offset: 128)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "closestIndex", scope: !4869, file: !3, line: 555, baseType: !364, size: 32, offset: 160)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "closest", scope: !4869, file: !3, line: 555, baseType: !685, size: 64, offset: 192)
!4877 = !DILocation(line: 555, column: 92, scope: !4858)
!4878 = !DILocation(line: 555, column: 99, scope: !4858)
!4879 = !DILocation(line: 557, column: 6, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 557, column: 6)
!4881 = !DILocation(line: 557, column: 12, scope: !4880)
!4882 = !DILocation(line: 557, column: 17, scope: !4880)
!4883 = !DILocation(line: 557, column: 6, scope: !4858)
!4884 = !DILocation(line: 558, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 558, column: 7)
!4886 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 557, column: 23)
!4887 = !DILocation(line: 558, column: 16, scope: !4885)
!4888 = !DILocation(line: 558, column: 22, scope: !4885)
!4889 = !DILocation(line: 558, column: 13, scope: !4885)
!4890 = !DILocation(line: 558, column: 7, scope: !4886)
!4891 = !DILocation(line: 559, column: 4, scope: !4885)
!4892 = !DILocation(line: 560, column: 2, scope: !4886)
!4893 = !DILocation(line: 562, column: 7, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 562, column: 7)
!4895 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 561, column: 7)
!4896 = !DILocation(line: 562, column: 15, scope: !4894)
!4897 = !DILocation(line: 562, column: 21, scope: !4894)
!4898 = !DILocation(line: 562, column: 13, scope: !4894)
!4899 = !DILocation(line: 562, column: 7, scope: !4895)
!4900 = !DILocation(line: 563, column: 4, scope: !4894)
!4901 = !DILocation(line: 566, column: 6, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 566, column: 6)
!4903 = !DILocation(line: 566, column: 12, scope: !4902)
!4904 = !DILocation(line: 566, column: 17, scope: !4902)
!4905 = !DILocation(line: 566, column: 6, scope: !4858)
!4906 = !DILocalVariable(name: "dist_test", scope: !4907, file: !3, line: 567, type: !4310)
!4907 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 566, column: 22)
!4908 = !DILocation(line: 567, column: 15, scope: !4907)
!4909 = !DILocation(line: 567, column: 46, scope: !4907)
!4910 = !DILocation(line: 567, column: 52, scope: !4907)
!4911 = !DILocation(line: 567, column: 61, scope: !4907)
!4912 = !DILocation(line: 567, column: 27, scope: !4907)
!4913 = !DILocation(line: 569, column: 7, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 569, column: 7)
!4915 = !DILocation(line: 569, column: 19, scope: !4914)
!4916 = !DILocation(line: 569, column: 25, scope: !4914)
!4917 = !DILocation(line: 569, column: 17, scope: !4914)
!4918 = !DILocation(line: 569, column: 7, scope: !4907)
!4919 = !DILocation(line: 570, column: 17, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 569, column: 31)
!4921 = !DILocation(line: 570, column: 4, scope: !4920)
!4922 = !DILocation(line: 570, column: 10, scope: !4920)
!4923 = !DILocation(line: 570, column: 15, scope: !4920)
!4924 = !DILocation(line: 571, column: 20, scope: !4920)
!4925 = !DILocation(line: 571, column: 4, scope: !4920)
!4926 = !DILocation(line: 571, column: 10, scope: !4920)
!4927 = !DILocation(line: 571, column: 18, scope: !4920)
!4928 = !DILocation(line: 572, column: 25, scope: !4920)
!4929 = !DILocation(line: 572, column: 4, scope: !4920)
!4930 = !DILocation(line: 572, column: 10, scope: !4920)
!4931 = !DILocation(line: 572, column: 23, scope: !4920)
!4932 = !DILocation(line: 573, column: 3, scope: !4920)
!4933 = !DILocation(line: 574, column: 2, scope: !4907)
!4934 = !DILocation(line: 575, column: 1, scope: !4858)
!4935 = distinct !DISubprogram(name: "MESH_OT_select_similar", scope: !3, file: !3, line: 907, type: !3071, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4936 = !DILocalVariable(name: "ot", arg: 1, scope: !4935, file: !3, line: 907, type: !3073)
!4937 = !DILocation(line: 907, column: 45, scope: !4935)
!4938 = !DILocalVariable(name: "prop", scope: !4935, file: !3, line: 909, type: !3148)
!4939 = !DILocation(line: 909, column: 15, scope: !4935)
!4940 = !DILocation(line: 912, column: 2, scope: !4935)
!4941 = !DILocation(line: 912, column: 6, scope: !4935)
!4942 = !DILocation(line: 912, column: 11, scope: !4935)
!4943 = !DILocation(line: 913, column: 2, scope: !4935)
!4944 = !DILocation(line: 913, column: 6, scope: !4935)
!4945 = !DILocation(line: 913, column: 13, scope: !4935)
!4946 = !DILocation(line: 914, column: 2, scope: !4935)
!4947 = !DILocation(line: 914, column: 6, scope: !4935)
!4948 = !DILocation(line: 914, column: 18, scope: !4935)
!4949 = !DILocation(line: 917, column: 2, scope: !4935)
!4950 = !DILocation(line: 917, column: 6, scope: !4935)
!4951 = !DILocation(line: 917, column: 13, scope: !4935)
!4952 = !DILocation(line: 918, column: 2, scope: !4935)
!4953 = !DILocation(line: 918, column: 6, scope: !4935)
!4954 = !DILocation(line: 918, column: 11, scope: !4935)
!4955 = !DILocation(line: 919, column: 2, scope: !4935)
!4956 = !DILocation(line: 919, column: 6, scope: !4935)
!4957 = !DILocation(line: 919, column: 11, scope: !4935)
!4958 = !DILocation(line: 922, column: 2, scope: !4935)
!4959 = !DILocation(line: 922, column: 6, scope: !4935)
!4960 = !DILocation(line: 922, column: 11, scope: !4935)
!4961 = !DILocation(line: 925, column: 33, scope: !4935)
!4962 = !DILocation(line: 925, column: 37, scope: !4935)
!4963 = !DILocation(line: 925, column: 20, scope: !4935)
!4964 = !DILocation(line: 925, column: 9, scope: !4935)
!4965 = !DILocation(line: 925, column: 13, scope: !4935)
!4966 = !DILocation(line: 925, column: 18, scope: !4935)
!4967 = !DILocation(line: 925, column: 7, scope: !4935)
!4968 = !DILocation(line: 926, column: 21, scope: !4935)
!4969 = !DILocation(line: 926, column: 2, scope: !4935)
!4970 = !DILocation(line: 928, column: 15, scope: !4935)
!4971 = !DILocation(line: 928, column: 19, scope: !4935)
!4972 = !DILocation(line: 928, column: 2, scope: !4935)
!4973 = !DILocation(line: 930, column: 16, scope: !4935)
!4974 = !DILocation(line: 930, column: 20, scope: !4935)
!4975 = !DILocation(line: 930, column: 2, scope: !4935)
!4976 = !DILocation(line: 931, column: 1, scope: !4935)
!4977 = distinct !DISubprogram(name: "edbm_select_similar_exec", scope: !3, file: !3, line: 843, type: !4978, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!319, !4980, !4982}
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1534, line: 69, baseType: !3086)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !158, line: 348, baseType: !3088)
!4984 = !DILocalVariable(name: "C", arg: 1, scope: !4977, file: !3, line: 843, type: !4980)
!4985 = !DILocation(line: 843, column: 47, scope: !4977)
!4986 = !DILocalVariable(name: "op", arg: 2, scope: !4977, file: !3, line: 843, type: !4982)
!4987 = !DILocation(line: 843, column: 62, scope: !4977)
!4988 = !DILocalVariable(name: "ts", scope: !4977, file: !3, line: 845, type: !4989)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !1113, line: 1180, baseType: !1569)
!4991 = !DILocation(line: 845, column: 16, scope: !4977)
!4992 = !DILocation(line: 845, column: 44, scope: !4977)
!4993 = !DILocation(line: 845, column: 21, scope: !4977)
!4994 = !DILocalVariable(name: "prop", scope: !4977, file: !3, line: 846, type: !3148)
!4995 = !DILocation(line: 846, column: 15, scope: !4977)
!4996 = !DILocation(line: 846, column: 47, scope: !4977)
!4997 = !DILocation(line: 846, column: 51, scope: !4977)
!4998 = !DILocation(line: 846, column: 22, scope: !4977)
!4999 = !DILocalVariable(name: "type", scope: !4977, file: !3, line: 848, type: !3570)
!5000 = !DILocation(line: 848, column: 12, scope: !4977)
!5001 = !DILocation(line: 848, column: 32, scope: !4977)
!5002 = !DILocation(line: 848, column: 36, scope: !4977)
!5003 = !DILocation(line: 848, column: 19, scope: !4977)
!5004 = !DILocation(line: 850, column: 27, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 850, column: 6)
!5006 = !DILocation(line: 850, column: 31, scope: !5005)
!5007 = !DILocation(line: 850, column: 36, scope: !5005)
!5008 = !DILocation(line: 850, column: 7, scope: !5005)
!5009 = !DILocation(line: 850, column: 6, scope: !4977)
!5010 = !DILocation(line: 851, column: 26, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 850, column: 43)
!5012 = !DILocation(line: 851, column: 30, scope: !5011)
!5013 = !DILocation(line: 851, column: 35, scope: !5011)
!5014 = !DILocation(line: 851, column: 41, scope: !5011)
!5015 = !DILocation(line: 851, column: 45, scope: !5011)
!5016 = !DILocation(line: 851, column: 3, scope: !5011)
!5017 = !DILocation(line: 852, column: 2, scope: !5011)
!5018 = !DILocation(line: 854, column: 46, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 853, column: 7)
!5020 = !DILocation(line: 854, column: 50, scope: !5019)
!5021 = !DILocation(line: 854, column: 55, scope: !5019)
!5022 = !DILocation(line: 854, column: 23, scope: !5019)
!5023 = !DILocation(line: 854, column: 3, scope: !5019)
!5024 = !DILocation(line: 854, column: 7, scope: !5019)
!5025 = !DILocation(line: 854, column: 21, scope: !5019)
!5026 = !DILocation(line: 857, column: 11, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 857, column: 11)
!5028 = !DILocation(line: 857, column: 16, scope: !5027)
!5029 = !DILocation(line: 857, column: 11, scope: !4977)
!5030 = !DILocation(line: 857, column: 55, scope: !5027)
!5031 = !DILocation(line: 857, column: 58, scope: !5027)
!5032 = !DILocation(line: 857, column: 30, scope: !5027)
!5033 = !DILocation(line: 857, column: 23, scope: !5027)
!5034 = !DILocation(line: 858, column: 11, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 858, column: 11)
!5036 = !DILocation(line: 858, column: 16, scope: !5035)
!5037 = !DILocation(line: 858, column: 11, scope: !5027)
!5038 = !DILocation(line: 858, column: 55, scope: !5035)
!5039 = !DILocation(line: 858, column: 58, scope: !5035)
!5040 = !DILocation(line: 858, column: 30, scope: !5035)
!5041 = !DILocation(line: 858, column: 23, scope: !5035)
!5042 = !DILocation(line: 859, column: 55, scope: !5035)
!5043 = !DILocation(line: 859, column: 58, scope: !5035)
!5044 = !DILocation(line: 859, column: 30, scope: !5035)
!5045 = !DILocation(line: 859, column: 23, scope: !5035)
!5046 = !DILocation(line: 860, column: 1, scope: !4977)
!5047 = distinct !DISubprogram(name: "select_similar_type_itemf", scope: !3, file: !3, line: 862, type: !5048, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!5050, !4980, !5051, !3148, !1777}
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5052 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !105, line: 62, baseType: !3100)
!5053 = !DILocalVariable(name: "C", arg: 1, scope: !5047, file: !3, line: 862, type: !4980)
!5054 = !DILocation(line: 862, column: 62, scope: !5047)
!5055 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !5047, file: !3, line: 862, type: !5051)
!5056 = !DILocation(line: 862, column: 77, scope: !5047)
!5057 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !5047, file: !3, line: 862, type: !3148)
!5058 = !DILocation(line: 862, column: 103, scope: !5047)
!5059 = !DILocalVariable(name: "r_free", arg: 4, scope: !5047, file: !3, line: 863, type: !1777)
!5060 = !DILocation(line: 863, column: 58, scope: !5047)
!5061 = !DILocalVariable(name: "obedit", scope: !5047, file: !3, line: 865, type: !3615)
!5062 = !DILocation(line: 865, column: 10, scope: !5047)
!5063 = !DILocation(line: 867, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 867, column: 6)
!5065 = !DILocation(line: 867, column: 6, scope: !5047)
!5066 = !DILocation(line: 868, column: 3, scope: !5064)
!5067 = !DILocation(line: 870, column: 32, scope: !5047)
!5068 = !DILocation(line: 870, column: 11, scope: !5047)
!5069 = !DILocation(line: 870, column: 9, scope: !5047)
!5070 = !DILocation(line: 872, column: 6, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 872, column: 6)
!5072 = !DILocation(line: 872, column: 13, scope: !5071)
!5073 = !DILocation(line: 872, column: 16, scope: !5071)
!5074 = !DILocation(line: 872, column: 24, scope: !5071)
!5075 = !DILocation(line: 872, column: 29, scope: !5071)
!5076 = !DILocation(line: 872, column: 6, scope: !5047)
!5077 = !DILocalVariable(name: "item", scope: !5078, file: !3, line: 873, type: !5050)
!5078 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 872, column: 41)
!5079 = !DILocation(line: 873, column: 21, scope: !5078)
!5080 = !DILocalVariable(name: "a", scope: !5078, file: !3, line: 874, type: !319)
!5081 = !DILocation(line: 874, column: 7, scope: !5078)
!5082 = !DILocalVariable(name: "totitem", scope: !5078, file: !3, line: 874, type: !319)
!5083 = !DILocation(line: 874, column: 10, scope: !5078)
!5084 = !DILocalVariable(name: "em", scope: !5078, file: !3, line: 875, type: !2675)
!5085 = !DILocation(line: 875, column: 15, scope: !5078)
!5086 = !DILocation(line: 875, column: 45, scope: !5078)
!5087 = !DILocation(line: 875, column: 20, scope: !5078)
!5088 = !DILocation(line: 877, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 877, column: 7)
!5090 = !DILocation(line: 877, column: 11, scope: !5089)
!5091 = !DILocation(line: 877, column: 22, scope: !5089)
!5092 = !DILocation(line: 877, column: 7, scope: !5078)
!5093 = !DILocation(line: 878, column: 11, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 878, column: 4)
!5095 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 877, column: 43)
!5096 = !DILocation(line: 878, column: 9, scope: !5094)
!5097 = !DILocation(line: 878, column: 29, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 878, column: 4)
!5099 = !DILocation(line: 878, column: 31, scope: !5098)
!5100 = !DILocation(line: 878, column: 4, scope: !5094)
!5101 = !DILocation(line: 879, column: 67, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 878, column: 54)
!5103 = !DILocation(line: 879, column: 5, scope: !5102)
!5104 = !DILocation(line: 880, column: 4, scope: !5102)
!5105 = !DILocation(line: 878, column: 50, scope: !5098)
!5106 = !DILocation(line: 878, column: 4, scope: !5098)
!5107 = distinct !{!5107, !5100, !5108}
!5108 = !DILocation(line: 880, column: 4, scope: !5094)
!5109 = !DILocation(line: 881, column: 3, scope: !5095)
!5110 = !DILocation(line: 882, column: 12, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 882, column: 12)
!5112 = !DILocation(line: 882, column: 16, scope: !5111)
!5113 = !DILocation(line: 882, column: 27, scope: !5111)
!5114 = !DILocation(line: 882, column: 12, scope: !5089)
!5115 = !DILocation(line: 883, column: 11, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 883, column: 4)
!5117 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 882, column: 46)
!5118 = !DILocation(line: 883, column: 9, scope: !5116)
!5119 = !DILocation(line: 883, column: 29, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 883, column: 4)
!5121 = !DILocation(line: 883, column: 31, scope: !5120)
!5122 = !DILocation(line: 883, column: 4, scope: !5116)
!5123 = !DILocation(line: 884, column: 67, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 883, column: 56)
!5125 = !DILocation(line: 884, column: 5, scope: !5124)
!5126 = !DILocation(line: 885, column: 4, scope: !5124)
!5127 = !DILocation(line: 883, column: 52, scope: !5120)
!5128 = !DILocation(line: 883, column: 4, scope: !5120)
!5129 = distinct !{!5129, !5122, !5130}
!5130 = !DILocation(line: 885, column: 4, scope: !5116)
!5131 = !DILocation(line: 886, column: 3, scope: !5117)
!5132 = !DILocation(line: 887, column: 12, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 887, column: 12)
!5134 = !DILocation(line: 887, column: 16, scope: !5133)
!5135 = !DILocation(line: 887, column: 27, scope: !5133)
!5136 = !DILocation(line: 887, column: 12, scope: !5111)
!5137 = !DILocalVariable(name: "a_end", scope: !5138, file: !3, line: 891, type: !3570)
!5138 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 887, column: 46)
!5139 = !DILocation(line: 891, column: 14, scope: !5138)
!5140 = !DILocation(line: 893, column: 11, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 893, column: 4)
!5142 = !DILocation(line: 893, column: 9, scope: !5141)
!5143 = !DILocation(line: 893, column: 31, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 893, column: 4)
!5145 = !DILocation(line: 893, column: 33, scope: !5144)
!5146 = !DILocation(line: 893, column: 4, scope: !5141)
!5147 = !DILocation(line: 894, column: 67, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 893, column: 48)
!5149 = !DILocation(line: 894, column: 5, scope: !5148)
!5150 = !DILocation(line: 895, column: 4, scope: !5148)
!5151 = !DILocation(line: 893, column: 44, scope: !5144)
!5152 = !DILocation(line: 893, column: 4, scope: !5144)
!5153 = distinct !{!5153, !5146, !5154}
!5154 = !DILocation(line: 895, column: 4, scope: !5141)
!5155 = !DILocation(line: 896, column: 3, scope: !5138)
!5156 = !DILocation(line: 897, column: 3, scope: !5078)
!5157 = !DILocation(line: 899, column: 4, scope: !5078)
!5158 = !DILocation(line: 899, column: 11, scope: !5078)
!5159 = !DILocation(line: 901, column: 10, scope: !5078)
!5160 = !DILocation(line: 901, column: 3, scope: !5078)
!5161 = !DILocation(line: 904, column: 2, scope: !5047)
!5162 = !DILocation(line: 905, column: 1, scope: !5047)
!5163 = distinct !DISubprogram(name: "MESH_OT_select_similar_region", scope: !3, file: !3, line: 1008, type: !3071, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5164 = !DILocalVariable(name: "ot", arg: 1, scope: !5163, file: !3, line: 1008, type: !3073)
!5165 = !DILocation(line: 1008, column: 52, scope: !5163)
!5166 = !DILocation(line: 1011, column: 2, scope: !5163)
!5167 = !DILocation(line: 1011, column: 6, scope: !5163)
!5168 = !DILocation(line: 1011, column: 11, scope: !5163)
!5169 = !DILocation(line: 1012, column: 2, scope: !5163)
!5170 = !DILocation(line: 1012, column: 6, scope: !5163)
!5171 = !DILocation(line: 1012, column: 13, scope: !5163)
!5172 = !DILocation(line: 1013, column: 2, scope: !5163)
!5173 = !DILocation(line: 1013, column: 6, scope: !5163)
!5174 = !DILocation(line: 1013, column: 18, scope: !5163)
!5175 = !DILocation(line: 1016, column: 2, scope: !5163)
!5176 = !DILocation(line: 1016, column: 6, scope: !5163)
!5177 = !DILocation(line: 1016, column: 11, scope: !5163)
!5178 = !DILocation(line: 1017, column: 2, scope: !5163)
!5179 = !DILocation(line: 1017, column: 6, scope: !5163)
!5180 = !DILocation(line: 1017, column: 11, scope: !5163)
!5181 = !DILocation(line: 1020, column: 2, scope: !5163)
!5182 = !DILocation(line: 1020, column: 6, scope: !5163)
!5183 = !DILocation(line: 1020, column: 11, scope: !5163)
!5184 = !DILocation(line: 1021, column: 1, scope: !5163)
!5185 = distinct !DISubprogram(name: "edbm_select_similar_region_exec", scope: !3, file: !3, line: 937, type: !4978, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5186 = !DILocalVariable(name: "C", arg: 1, scope: !5185, file: !3, line: 937, type: !4980)
!5187 = !DILocation(line: 937, column: 54, scope: !5185)
!5188 = !DILocalVariable(name: "op", arg: 2, scope: !5185, file: !3, line: 937, type: !4982)
!5189 = !DILocation(line: 937, column: 69, scope: !5185)
!5190 = !DILocalVariable(name: "obedit", scope: !5185, file: !3, line: 939, type: !3615)
!5191 = !DILocation(line: 939, column: 10, scope: !5185)
!5192 = !DILocation(line: 939, column: 40, scope: !5185)
!5193 = !DILocation(line: 939, column: 19, scope: !5185)
!5194 = !DILocalVariable(name: "em", scope: !5185, file: !3, line: 940, type: !2675)
!5195 = !DILocation(line: 940, column: 14, scope: !5185)
!5196 = !DILocation(line: 940, column: 44, scope: !5185)
!5197 = !DILocation(line: 940, column: 19, scope: !5185)
!5198 = !DILocalVariable(name: "bm", scope: !5185, file: !3, line: 941, type: !739)
!5199 = !DILocation(line: 941, column: 9, scope: !5185)
!5200 = !DILocation(line: 941, column: 14, scope: !5185)
!5201 = !DILocation(line: 941, column: 18, scope: !5185)
!5202 = !DILocalVariable(name: "changed", scope: !5185, file: !3, line: 942, type: !813)
!5203 = !DILocation(line: 942, column: 7, scope: !5185)
!5204 = !DILocalVariable(name: "groups_array", scope: !5185, file: !3, line: 945, type: !1754)
!5205 = !DILocation(line: 945, column: 7, scope: !5185)
!5206 = !DILocalVariable(name: "group_index", scope: !5185, file: !3, line: 946, type: !5207)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!5208 = !DILocation(line: 946, column: 8, scope: !5185)
!5209 = !DILocalVariable(name: "group_tot", scope: !5185, file: !3, line: 947, type: !319)
!5210 = !DILocation(line: 947, column: 6, scope: !5185)
!5211 = !DILocalVariable(name: "i", scope: !5185, file: !3, line: 948, type: !319)
!5212 = !DILocation(line: 948, column: 6, scope: !5185)
!5213 = !DILocation(line: 950, column: 6, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 950, column: 6)
!5215 = !DILocation(line: 950, column: 10, scope: !5214)
!5216 = !DILocation(line: 950, column: 21, scope: !5214)
!5217 = !DILocation(line: 950, column: 6, scope: !5185)
!5218 = !DILocation(line: 951, column: 14, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 950, column: 26)
!5220 = !DILocation(line: 951, column: 18, scope: !5219)
!5221 = !DILocation(line: 951, column: 3, scope: !5219)
!5222 = !DILocation(line: 952, column: 3, scope: !5219)
!5223 = !DILocation(line: 955, column: 17, scope: !5185)
!5224 = !DILocation(line: 955, column: 53, scope: !5185)
!5225 = !DILocation(line: 955, column: 57, scope: !5185)
!5226 = !DILocation(line: 955, column: 51, scope: !5185)
!5227 = !DILocation(line: 955, column: 15, scope: !5185)
!5228 = !DILocation(line: 956, column: 39, scope: !5185)
!5229 = !DILocation(line: 956, column: 43, scope: !5185)
!5230 = !DILocation(line: 956, column: 14, scope: !5185)
!5231 = !DILocation(line: 956, column: 12, scope: !5185)
!5232 = !DILocation(line: 960, column: 28, scope: !5185)
!5233 = !DILocation(line: 960, column: 2, scope: !5185)
!5234 = !DILocation(line: 962, column: 9, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 962, column: 2)
!5236 = !DILocation(line: 962, column: 7, scope: !5235)
!5237 = !DILocation(line: 962, column: 14, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 962, column: 2)
!5239 = !DILocation(line: 962, column: 18, scope: !5238)
!5240 = !DILocation(line: 962, column: 16, scope: !5238)
!5241 = !DILocation(line: 962, column: 2, scope: !5235)
!5242 = !DILocalVariable(name: "faces_regions", scope: !5243, file: !3, line: 963, type: !344)
!5243 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 962, column: 34)
!5244 = !DILocation(line: 963, column: 12, scope: !5243)
!5245 = !DILocalVariable(name: "tot", scope: !5243, file: !3, line: 964, type: !319)
!5246 = !DILocation(line: 964, column: 7, scope: !5243)
!5247 = !DILocalVariable(name: "fg_sta", scope: !5243, file: !3, line: 966, type: !3570)
!5248 = !DILocation(line: 966, column: 13, scope: !5243)
!5249 = !DILocation(line: 966, column: 22, scope: !5243)
!5250 = !DILocation(line: 966, column: 34, scope: !5243)
!5251 = !DILocalVariable(name: "fg_len", scope: !5243, file: !3, line: 967, type: !3570)
!5252 = !DILocation(line: 967, column: 13, scope: !5243)
!5253 = !DILocation(line: 967, column: 22, scope: !5243)
!5254 = !DILocation(line: 967, column: 34, scope: !5243)
!5255 = !DILocalVariable(name: "j", scope: !5243, file: !3, line: 968, type: !319)
!5256 = !DILocation(line: 968, column: 7, scope: !5243)
!5257 = !DILocalVariable(name: "fg", scope: !5243, file: !3, line: 969, type: !684)
!5258 = !DILocation(line: 969, column: 12, scope: !5243)
!5259 = !DILocation(line: 969, column: 17, scope: !5243)
!5260 = !DILocation(line: 969, column: 43, scope: !5243)
!5261 = !DILocation(line: 969, column: 41, scope: !5243)
!5262 = !DILocation(line: 972, column: 10, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 972, column: 3)
!5264 = !DILocation(line: 972, column: 8, scope: !5263)
!5265 = !DILocation(line: 972, column: 15, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 972, column: 3)
!5267 = !DILocation(line: 972, column: 19, scope: !5266)
!5268 = !DILocation(line: 972, column: 17, scope: !5266)
!5269 = !DILocation(line: 972, column: 3, scope: !5263)
!5270 = !DILocation(line: 973, column: 29, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 972, column: 32)
!5272 = !DILocation(line: 973, column: 33, scope: !5271)
!5273 = !DILocation(line: 973, column: 46, scope: !5271)
!5274 = !DILocation(line: 973, column: 55, scope: !5271)
!5275 = !DILocation(line: 973, column: 53, scope: !5271)
!5276 = !DILocation(line: 973, column: 12, scope: !5271)
!5277 = !DILocation(line: 973, column: 4, scope: !5271)
!5278 = !DILocation(line: 973, column: 7, scope: !5271)
!5279 = !DILocation(line: 973, column: 10, scope: !5271)
!5280 = !DILocation(line: 974, column: 3, scope: !5271)
!5281 = !DILocation(line: 972, column: 28, scope: !5266)
!5282 = !DILocation(line: 972, column: 3, scope: !5266)
!5283 = distinct !{!5283, !5269, !5284}
!5284 = !DILocation(line: 974, column: 3, scope: !5263)
!5285 = !DILocation(line: 976, column: 30, scope: !5243)
!5286 = !DILocation(line: 976, column: 34, scope: !5243)
!5287 = !DILocation(line: 976, column: 38, scope: !5243)
!5288 = !DILocation(line: 976, column: 9, scope: !5243)
!5289 = !DILocation(line: 976, column: 7, scope: !5243)
!5290 = !DILocation(line: 978, column: 3, scope: !5243)
!5291 = !DILocation(line: 978, column: 13, scope: !5243)
!5292 = !DILocation(line: 980, column: 7, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 980, column: 7)
!5294 = !DILocation(line: 980, column: 7, scope: !5243)
!5295 = !DILocalVariable(name: "link", scope: !5296, file: !3, line: 981, type: !5297)
!5296 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 980, column: 12)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5298 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkData", file: !345, line: 66, baseType: !5299)
!5299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkData", file: !345, line: 63, size: 192, elements: !5300)
!5300 = !{!5301, !5303, !5304}
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5299, file: !345, line: 64, baseType: !5302, size: 64)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5299, file: !345, line: 64, baseType: !5302, size: 64, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5299, file: !345, line: 65, baseType: !288, size: 64, offset: 128)
!5305 = !DILocation(line: 981, column: 14, scope: !5296)
!5306 = !DILocation(line: 982, column: 4, scope: !5296)
!5307 = !DILocation(line: 982, column: 19, scope: !5296)
!5308 = !DILocation(line: 982, column: 17, scope: !5296)
!5309 = !DILocalVariable(name: "f", scope: !5310, file: !3, line: 983, type: !685)
!5310 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 982, column: 49)
!5311 = !DILocation(line: 983, column: 13, scope: !5310)
!5312 = !DILocalVariable(name: "faces", scope: !5310, file: !3, line: 983, type: !684)
!5313 = !DILocation(line: 983, column: 18, scope: !5310)
!5314 = !DILocation(line: 983, column: 26, scope: !5310)
!5315 = !DILocation(line: 983, column: 32, scope: !5310)
!5316 = !DILocalVariable(name: "i", scope: !5310, file: !3, line: 984, type: !7)
!5317 = !DILocation(line: 984, column: 18, scope: !5310)
!5318 = !DILocation(line: 985, column: 5, scope: !5310)
!5319 = !DILocation(line: 985, column: 17, scope: !5310)
!5320 = !DILocation(line: 985, column: 24, scope: !5310)
!5321 = !DILocation(line: 985, column: 15, scope: !5310)
!5322 = !DILocation(line: 986, column: 25, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 985, column: 30)
!5324 = !DILocation(line: 986, column: 29, scope: !5323)
!5325 = !DILocation(line: 986, column: 6, scope: !5323)
!5326 = distinct !{!5326, !5318, !5327}
!5327 = !DILocation(line: 987, column: 5, scope: !5310)
!5328 = !DILocation(line: 988, column: 5, scope: !5310)
!5329 = !DILocation(line: 988, column: 15, scope: !5310)
!5330 = !DILocation(line: 989, column: 5, scope: !5310)
!5331 = !DILocation(line: 989, column: 15, scope: !5310)
!5332 = !DILocation(line: 991, column: 13, scope: !5310)
!5333 = distinct !{!5333, !5306, !5334}
!5334 = !DILocation(line: 992, column: 4, scope: !5296)
!5335 = !DILocation(line: 993, column: 3, scope: !5296)
!5336 = !DILocation(line: 994, column: 2, scope: !5243)
!5337 = !DILocation(line: 962, column: 30, scope: !5238)
!5338 = !DILocation(line: 962, column: 2, scope: !5238)
!5339 = distinct !{!5339, !5241, !5340}
!5340 = !DILocation(line: 994, column: 2, scope: !5235)
!5341 = !DILocation(line: 996, column: 2, scope: !5185)
!5342 = !DILocation(line: 996, column: 12, scope: !5185)
!5343 = !DILocation(line: 998, column: 6, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 998, column: 6)
!5345 = !DILocation(line: 998, column: 6, scope: !5185)
!5346 = !DILocation(line: 999, column: 25, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 998, column: 15)
!5348 = !DILocation(line: 999, column: 49, scope: !5347)
!5349 = !DILocation(line: 999, column: 3, scope: !5347)
!5350 = !DILocation(line: 1000, column: 2, scope: !5347)
!5351 = !DILocation(line: 1002, column: 14, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 1001, column: 7)
!5353 = !DILocation(line: 1002, column: 18, scope: !5352)
!5354 = !DILocation(line: 1002, column: 3, scope: !5352)
!5355 = !DILocation(line: 1005, column: 2, scope: !5185)
!5356 = !DILocation(line: 1006, column: 1, scope: !5185)
!5357 = !DILocalVariable(name: "ot", arg: 1, scope: !3070, file: !3, line: 1053, type: !3073)
!5358 = !DILocation(line: 1053, column: 42, scope: !3070)
!5359 = !DILocalVariable(name: "prop", scope: !3070, file: !3, line: 1055, type: !3148)
!5360 = !DILocation(line: 1055, column: 15, scope: !3070)
!5361 = !DILocation(line: 1072, column: 2, scope: !3070)
!5362 = !DILocation(line: 1072, column: 6, scope: !3070)
!5363 = !DILocation(line: 1072, column: 11, scope: !3070)
!5364 = !DILocation(line: 1073, column: 2, scope: !3070)
!5365 = !DILocation(line: 1073, column: 6, scope: !3070)
!5366 = !DILocation(line: 1073, column: 13, scope: !3070)
!5367 = !DILocation(line: 1074, column: 2, scope: !3070)
!5368 = !DILocation(line: 1074, column: 6, scope: !3070)
!5369 = !DILocation(line: 1074, column: 18, scope: !3070)
!5370 = !DILocation(line: 1077, column: 2, scope: !3070)
!5371 = !DILocation(line: 1077, column: 6, scope: !3070)
!5372 = !DILocation(line: 1077, column: 13, scope: !3070)
!5373 = !DILocation(line: 1078, column: 2, scope: !3070)
!5374 = !DILocation(line: 1078, column: 6, scope: !3070)
!5375 = !DILocation(line: 1078, column: 11, scope: !3070)
!5376 = !DILocation(line: 1079, column: 2, scope: !3070)
!5377 = !DILocation(line: 1079, column: 6, scope: !3070)
!5378 = !DILocation(line: 1079, column: 11, scope: !3070)
!5379 = !DILocation(line: 1082, column: 2, scope: !3070)
!5380 = !DILocation(line: 1082, column: 6, scope: !3070)
!5381 = !DILocation(line: 1082, column: 11, scope: !3070)
!5382 = !DILocation(line: 1085, column: 25, scope: !3070)
!5383 = !DILocation(line: 1085, column: 29, scope: !3070)
!5384 = !DILocation(line: 1085, column: 9, scope: !3070)
!5385 = !DILocation(line: 1085, column: 7, scope: !3070)
!5386 = !DILocation(line: 1086, column: 24, scope: !3070)
!5387 = !DILocation(line: 1086, column: 2, scope: !3070)
!5388 = !DILocation(line: 1087, column: 25, scope: !3070)
!5389 = !DILocation(line: 1087, column: 29, scope: !3070)
!5390 = !DILocation(line: 1087, column: 9, scope: !3070)
!5391 = !DILocation(line: 1087, column: 7, scope: !3070)
!5392 = !DILocation(line: 1088, column: 24, scope: !3070)
!5393 = !DILocation(line: 1088, column: 2, scope: !3070)
!5394 = !DILocation(line: 1089, column: 33, scope: !3070)
!5395 = !DILocation(line: 1089, column: 37, scope: !3070)
!5396 = !DILocation(line: 1089, column: 20, scope: !3070)
!5397 = !DILocation(line: 1089, column: 18, scope: !3070)
!5398 = !DILocation(line: 1089, column: 2, scope: !3070)
!5399 = !DILocation(line: 1089, column: 6, scope: !3070)
!5400 = !DILocation(line: 1089, column: 11, scope: !3070)
!5401 = !DILocation(line: 1090, column: 24, scope: !3070)
!5402 = !DILocation(line: 1090, column: 2, scope: !3070)
!5403 = !DILocation(line: 1092, column: 15, scope: !3070)
!5404 = !DILocation(line: 1092, column: 19, scope: !3070)
!5405 = !DILocation(line: 1092, column: 2, scope: !3070)
!5406 = !DILocation(line: 1093, column: 1, scope: !3070)
!5407 = distinct !DISubprogram(name: "edbm_select_mode_invoke", scope: !3, file: !3, line: 1041, type: !5408, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!319, !4980, !4982, !5410}
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5412)
!5412 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !2744, line: 460, baseType: !2801)
!5413 = !DILocalVariable(name: "C", arg: 1, scope: !5407, file: !3, line: 1041, type: !4980)
!5414 = !DILocation(line: 1041, column: 46, scope: !5407)
!5415 = !DILocalVariable(name: "op", arg: 2, scope: !5407, file: !3, line: 1041, type: !4982)
!5416 = !DILocation(line: 1041, column: 61, scope: !5407)
!5417 = !DILocalVariable(name: "event", arg: 3, scope: !5407, file: !3, line: 1041, type: !5410)
!5418 = !DILocation(line: 1041, column: 80, scope: !5407)
!5419 = !DILocation(line: 1045, column: 34, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1045, column: 6)
!5421 = !DILocation(line: 1045, column: 38, scope: !5420)
!5422 = !DILocation(line: 1045, column: 7, scope: !5420)
!5423 = !DILocation(line: 1045, column: 6, scope: !5407)
!5424 = !DILocation(line: 1046, column: 19, scope: !5420)
!5425 = !DILocation(line: 1046, column: 23, scope: !5420)
!5426 = !DILocation(line: 1046, column: 42, scope: !5420)
!5427 = !DILocation(line: 1046, column: 49, scope: !5420)
!5428 = !DILocation(line: 1046, column: 3, scope: !5420)
!5429 = !DILocation(line: 1047, column: 34, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1047, column: 6)
!5431 = !DILocation(line: 1047, column: 38, scope: !5430)
!5432 = !DILocation(line: 1047, column: 7, scope: !5430)
!5433 = !DILocation(line: 1047, column: 6, scope: !5407)
!5434 = !DILocation(line: 1048, column: 19, scope: !5430)
!5435 = !DILocation(line: 1048, column: 23, scope: !5430)
!5436 = !DILocation(line: 1048, column: 42, scope: !5430)
!5437 = !DILocation(line: 1048, column: 49, scope: !5430)
!5438 = !DILocation(line: 1048, column: 3, scope: !5430)
!5439 = !DILocation(line: 1050, column: 31, scope: !5407)
!5440 = !DILocation(line: 1050, column: 34, scope: !5407)
!5441 = !DILocation(line: 1050, column: 9, scope: !5407)
!5442 = !DILocation(line: 1050, column: 2, scope: !5407)
!5443 = distinct !DISubprogram(name: "edbm_select_mode_exec", scope: !3, file: !3, line: 1026, type: !4978, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5444 = !DILocalVariable(name: "C", arg: 1, scope: !5443, file: !3, line: 1026, type: !4980)
!5445 = !DILocation(line: 1026, column: 44, scope: !5443)
!5446 = !DILocalVariable(name: "op", arg: 2, scope: !5443, file: !3, line: 1026, type: !4982)
!5447 = !DILocation(line: 1026, column: 59, scope: !5443)
!5448 = !DILocalVariable(name: "type", scope: !5443, file: !3, line: 1028, type: !3570)
!5449 = !DILocation(line: 1028, column: 12, scope: !5443)
!5450 = !DILocation(line: 1028, column: 39, scope: !5443)
!5451 = !DILocation(line: 1028, column: 43, scope: !5443)
!5452 = !DILocation(line: 1028, column: 26, scope: !5443)
!5453 = !DILocalVariable(name: "action", scope: !5443, file: !3, line: 1029, type: !3570)
!5454 = !DILocation(line: 1029, column: 12, scope: !5443)
!5455 = !DILocation(line: 1029, column: 39, scope: !5443)
!5456 = !DILocation(line: 1029, column: 43, scope: !5443)
!5457 = !DILocation(line: 1029, column: 26, scope: !5443)
!5458 = !DILocalVariable(name: "use_extend", scope: !5443, file: !3, line: 1030, type: !3057)
!5459 = !DILocation(line: 1030, column: 13, scope: !5443)
!5460 = !DILocation(line: 1030, column: 42, scope: !5443)
!5461 = !DILocation(line: 1030, column: 46, scope: !5443)
!5462 = !DILocation(line: 1030, column: 26, scope: !5443)
!5463 = !DILocalVariable(name: "use_expand", scope: !5443, file: !3, line: 1031, type: !3057)
!5464 = !DILocation(line: 1031, column: 13, scope: !5443)
!5465 = !DILocation(line: 1031, column: 42, scope: !5443)
!5466 = !DILocation(line: 1031, column: 46, scope: !5443)
!5467 = !DILocation(line: 1031, column: 26, scope: !5443)
!5468 = !DILocation(line: 1033, column: 29, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 1033, column: 6)
!5470 = !DILocation(line: 1033, column: 32, scope: !5469)
!5471 = !DILocation(line: 1033, column: 38, scope: !5469)
!5472 = !DILocation(line: 1033, column: 46, scope: !5469)
!5473 = !DILocation(line: 1033, column: 58, scope: !5469)
!5474 = !DILocation(line: 1033, column: 6, scope: !5469)
!5475 = !DILocation(line: 1033, column: 6, scope: !5443)
!5476 = !DILocation(line: 1034, column: 3, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 1033, column: 71)
!5478 = !DILocation(line: 1037, column: 3, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 1036, column: 7)
!5480 = !DILocation(line: 1039, column: 1, scope: !5443)
!5481 = distinct !DISubprogram(name: "MESH_OT_loop_multi_select", scope: !3, file: !3, line: 1197, type: !3071, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5482 = !DILocalVariable(name: "ot", arg: 1, scope: !5481, file: !3, line: 1197, type: !3073)
!5483 = !DILocation(line: 1197, column: 48, scope: !5481)
!5484 = !DILocation(line: 1200, column: 2, scope: !5481)
!5485 = !DILocation(line: 1200, column: 6, scope: !5481)
!5486 = !DILocation(line: 1200, column: 11, scope: !5481)
!5487 = !DILocation(line: 1201, column: 2, scope: !5481)
!5488 = !DILocation(line: 1201, column: 6, scope: !5481)
!5489 = !DILocation(line: 1201, column: 13, scope: !5481)
!5490 = !DILocation(line: 1202, column: 2, scope: !5481)
!5491 = !DILocation(line: 1202, column: 6, scope: !5481)
!5492 = !DILocation(line: 1202, column: 18, scope: !5481)
!5493 = !DILocation(line: 1205, column: 2, scope: !5481)
!5494 = !DILocation(line: 1205, column: 6, scope: !5481)
!5495 = !DILocation(line: 1205, column: 11, scope: !5481)
!5496 = !DILocation(line: 1206, column: 2, scope: !5481)
!5497 = !DILocation(line: 1206, column: 6, scope: !5481)
!5498 = !DILocation(line: 1206, column: 11, scope: !5481)
!5499 = !DILocation(line: 1209, column: 2, scope: !5481)
!5500 = !DILocation(line: 1209, column: 6, scope: !5481)
!5501 = !DILocation(line: 1209, column: 11, scope: !5481)
!5502 = !DILocation(line: 1212, column: 18, scope: !5481)
!5503 = !DILocation(line: 1212, column: 22, scope: !5481)
!5504 = !DILocation(line: 1212, column: 2, scope: !5481)
!5505 = !DILocation(line: 1213, column: 1, scope: !5481)
!5506 = distinct !DISubprogram(name: "edbm_loop_multiselect_exec", scope: !3, file: !3, line: 1147, type: !4978, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5507 = !DILocalVariable(name: "C", arg: 1, scope: !5506, file: !3, line: 1147, type: !4980)
!5508 = !DILocation(line: 1147, column: 49, scope: !5506)
!5509 = !DILocalVariable(name: "op", arg: 2, scope: !5506, file: !3, line: 1147, type: !4982)
!5510 = !DILocation(line: 1147, column: 64, scope: !5506)
!5511 = !DILocalVariable(name: "obedit", scope: !5506, file: !3, line: 1149, type: !3615)
!5512 = !DILocation(line: 1149, column: 10, scope: !5506)
!5513 = !DILocation(line: 1149, column: 40, scope: !5506)
!5514 = !DILocation(line: 1149, column: 19, scope: !5506)
!5515 = !DILocalVariable(name: "em", scope: !5506, file: !3, line: 1150, type: !2675)
!5516 = !DILocation(line: 1150, column: 14, scope: !5506)
!5517 = !DILocation(line: 1150, column: 44, scope: !5506)
!5518 = !DILocation(line: 1150, column: 19, scope: !5506)
!5519 = !DILocalVariable(name: "eed", scope: !5506, file: !3, line: 1151, type: !681)
!5520 = !DILocation(line: 1151, column: 10, scope: !5506)
!5521 = !DILocalVariable(name: "edarray", scope: !5506, file: !3, line: 1152, type: !680)
!5522 = !DILocation(line: 1152, column: 11, scope: !5506)
!5523 = !DILocalVariable(name: "edindex", scope: !5506, file: !3, line: 1153, type: !319)
!5524 = !DILocation(line: 1153, column: 6, scope: !5506)
!5525 = !DILocalVariable(name: "is_ring", scope: !5506, file: !3, line: 1154, type: !3057)
!5526 = !DILocation(line: 1154, column: 13, scope: !5506)
!5527 = !DILocation(line: 1154, column: 39, scope: !5506)
!5528 = !DILocation(line: 1154, column: 43, scope: !5506)
!5529 = !DILocation(line: 1154, column: 23, scope: !5506)
!5530 = !DILocalVariable(name: "iter", scope: !5506, file: !3, line: 1156, type: !3253)
!5531 = !DILocation(line: 1156, column: 9, scope: !5506)
!5532 = !DILocalVariable(name: "totedgesel", scope: !5506, file: !3, line: 1157, type: !319)
!5533 = !DILocation(line: 1157, column: 6, scope: !5506)
!5534 = !DILocation(line: 1159, column: 2, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 1159, column: 2)
!5536 = !DILocation(line: 1159, column: 2, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1159, column: 2)
!5538 = !DILocation(line: 1160, column: 7, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 1160, column: 7)
!5540 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 1159, column: 54)
!5541 = !DILocation(line: 1160, column: 7, scope: !5540)
!5542 = !DILocation(line: 1161, column: 14, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1160, column: 47)
!5544 = !DILocation(line: 1162, column: 3, scope: !5543)
!5545 = !DILocation(line: 1163, column: 2, scope: !5540)
!5546 = distinct !{!5546, !5534, !5547}
!5547 = !DILocation(line: 1163, column: 2, scope: !5535)
!5548 = !DILocation(line: 1165, column: 12, scope: !5506)
!5549 = !DILocation(line: 1165, column: 43, scope: !5506)
!5550 = !DILocation(line: 1165, column: 41, scope: !5506)
!5551 = !DILocation(line: 1165, column: 10, scope: !5506)
!5552 = !DILocation(line: 1166, column: 10, scope: !5506)
!5553 = !DILocation(line: 1168, column: 2, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 1168, column: 2)
!5555 = !DILocation(line: 1168, column: 2, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 1168, column: 2)
!5557 = !DILocation(line: 1169, column: 7, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1169, column: 7)
!5559 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 1168, column: 54)
!5560 = !DILocation(line: 1169, column: 7, scope: !5559)
!5561 = !DILocation(line: 1170, column: 23, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 1169, column: 47)
!5563 = !DILocation(line: 1170, column: 4, scope: !5562)
!5564 = !DILocation(line: 1170, column: 12, scope: !5562)
!5565 = !DILocation(line: 1170, column: 21, scope: !5562)
!5566 = !DILocation(line: 1171, column: 11, scope: !5562)
!5567 = !DILocation(line: 1172, column: 3, scope: !5562)
!5568 = !DILocation(line: 1173, column: 2, scope: !5559)
!5569 = distinct !{!5569, !5553, !5570}
!5570 = !DILocation(line: 1173, column: 2, scope: !5554)
!5571 = !DILocation(line: 1175, column: 6, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 1175, column: 6)
!5573 = !DILocation(line: 1175, column: 6, scope: !5506)
!5574 = !DILocation(line: 1176, column: 16, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1176, column: 3)
!5576 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1175, column: 15)
!5577 = !DILocation(line: 1176, column: 8, scope: !5575)
!5578 = !DILocation(line: 1176, column: 21, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1176, column: 3)
!5580 = !DILocation(line: 1176, column: 31, scope: !5579)
!5581 = !DILocation(line: 1176, column: 29, scope: !5579)
!5582 = !DILocation(line: 1176, column: 3, scope: !5575)
!5583 = !DILocation(line: 1177, column: 10, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1176, column: 57)
!5585 = !DILocation(line: 1177, column: 18, scope: !5584)
!5586 = !DILocation(line: 1177, column: 8, scope: !5584)
!5587 = !DILocation(line: 1178, column: 18, scope: !5584)
!5588 = !DILocation(line: 1178, column: 36, scope: !5584)
!5589 = !DILocation(line: 1178, column: 4, scope: !5584)
!5590 = !DILocation(line: 1179, column: 3, scope: !5584)
!5591 = !DILocation(line: 1176, column: 51, scope: !5579)
!5592 = !DILocation(line: 1176, column: 3, scope: !5579)
!5593 = distinct !{!5593, !5582, !5594}
!5594 = !DILocation(line: 1179, column: 3, scope: !5575)
!5595 = !DILocation(line: 1180, column: 25, scope: !5576)
!5596 = !DILocation(line: 1180, column: 3, scope: !5576)
!5597 = !DILocation(line: 1181, column: 2, scope: !5576)
!5598 = !DILocation(line: 1183, column: 16, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 1183, column: 3)
!5600 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 1182, column: 7)
!5601 = !DILocation(line: 1183, column: 8, scope: !5599)
!5602 = !DILocation(line: 1183, column: 21, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1183, column: 3)
!5604 = !DILocation(line: 1183, column: 31, scope: !5603)
!5605 = !DILocation(line: 1183, column: 29, scope: !5603)
!5606 = !DILocation(line: 1183, column: 3, scope: !5599)
!5607 = !DILocation(line: 1184, column: 10, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 1183, column: 57)
!5609 = !DILocation(line: 1184, column: 18, scope: !5608)
!5610 = !DILocation(line: 1184, column: 8, scope: !5608)
!5611 = !DILocation(line: 1185, column: 18, scope: !5608)
!5612 = !DILocation(line: 1185, column: 32, scope: !5608)
!5613 = !DILocation(line: 1185, column: 4, scope: !5608)
!5614 = !DILocation(line: 1186, column: 3, scope: !5608)
!5615 = !DILocation(line: 1183, column: 51, scope: !5603)
!5616 = !DILocation(line: 1183, column: 3, scope: !5603)
!5617 = distinct !{!5617, !5606, !5618}
!5618 = !DILocation(line: 1186, column: 3, scope: !5599)
!5619 = !DILocation(line: 1187, column: 25, scope: !5600)
!5620 = !DILocation(line: 1187, column: 3, scope: !5600)
!5621 = !DILocation(line: 1189, column: 2, scope: !5506)
!5622 = !DILocation(line: 1189, column: 12, scope: !5506)
!5623 = !DILocation(line: 1192, column: 24, scope: !5506)
!5624 = !DILocation(line: 1192, column: 48, scope: !5506)
!5625 = !DILocation(line: 1192, column: 2, scope: !5506)
!5626 = !DILocation(line: 1194, column: 2, scope: !5506)
!5627 = distinct !DISubprogram(name: "MESH_OT_loop_select", scope: !3, file: !3, line: 1414, type: !3071, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5628 = !DILocalVariable(name: "ot", arg: 1, scope: !5627, file: !3, line: 1414, type: !3073)
!5629 = !DILocation(line: 1414, column: 42, scope: !5627)
!5630 = !DILocation(line: 1417, column: 2, scope: !5627)
!5631 = !DILocation(line: 1417, column: 6, scope: !5627)
!5632 = !DILocation(line: 1417, column: 11, scope: !5627)
!5633 = !DILocation(line: 1418, column: 2, scope: !5627)
!5634 = !DILocation(line: 1418, column: 6, scope: !5627)
!5635 = !DILocation(line: 1418, column: 13, scope: !5627)
!5636 = !DILocation(line: 1419, column: 2, scope: !5627)
!5637 = !DILocation(line: 1419, column: 6, scope: !5627)
!5638 = !DILocation(line: 1419, column: 18, scope: !5627)
!5639 = !DILocation(line: 1422, column: 2, scope: !5627)
!5640 = !DILocation(line: 1422, column: 6, scope: !5627)
!5641 = !DILocation(line: 1422, column: 13, scope: !5627)
!5642 = !DILocation(line: 1423, column: 2, scope: !5627)
!5643 = !DILocation(line: 1423, column: 6, scope: !5627)
!5644 = !DILocation(line: 1423, column: 11, scope: !5627)
!5645 = !DILocation(line: 1426, column: 2, scope: !5627)
!5646 = !DILocation(line: 1426, column: 6, scope: !5627)
!5647 = !DILocation(line: 1426, column: 11, scope: !5627)
!5648 = !DILocation(line: 1429, column: 18, scope: !5627)
!5649 = !DILocation(line: 1429, column: 22, scope: !5627)
!5650 = !DILocation(line: 1429, column: 2, scope: !5627)
!5651 = !DILocation(line: 1430, column: 18, scope: !5627)
!5652 = !DILocation(line: 1430, column: 22, scope: !5627)
!5653 = !DILocation(line: 1430, column: 2, scope: !5627)
!5654 = !DILocation(line: 1431, column: 18, scope: !5627)
!5655 = !DILocation(line: 1431, column: 22, scope: !5627)
!5656 = !DILocation(line: 1431, column: 2, scope: !5627)
!5657 = !DILocation(line: 1432, column: 18, scope: !5627)
!5658 = !DILocation(line: 1432, column: 22, scope: !5627)
!5659 = !DILocation(line: 1432, column: 2, scope: !5627)
!5660 = !DILocation(line: 1433, column: 1, scope: !5627)
!5661 = distinct !DISubprogram(name: "edbm_select_loop_invoke", scope: !3, file: !3, line: 1396, type: !5408, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5662 = !DILocalVariable(name: "C", arg: 1, scope: !5661, file: !3, line: 1396, type: !4980)
!5663 = !DILocation(line: 1396, column: 46, scope: !5661)
!5664 = !DILocalVariable(name: "op", arg: 2, scope: !5661, file: !3, line: 1396, type: !4982)
!5665 = !DILocation(line: 1396, column: 61, scope: !5661)
!5666 = !DILocalVariable(name: "event", arg: 3, scope: !5661, file: !3, line: 1396, type: !5410)
!5667 = !DILocation(line: 1396, column: 80, scope: !5661)
!5668 = !DILocation(line: 1399, column: 31, scope: !5661)
!5669 = !DILocation(line: 1399, column: 2, scope: !5661)
!5670 = !DILocation(line: 1401, column: 22, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1401, column: 6)
!5672 = !DILocation(line: 1401, column: 25, scope: !5671)
!5673 = !DILocation(line: 1401, column: 32, scope: !5671)
!5674 = !DILocation(line: 1402, column: 38, scope: !5671)
!5675 = !DILocation(line: 1402, column: 42, scope: !5671)
!5676 = !DILocation(line: 1402, column: 22, scope: !5671)
!5677 = !DILocation(line: 1403, column: 38, scope: !5671)
!5678 = !DILocation(line: 1403, column: 42, scope: !5671)
!5679 = !DILocation(line: 1403, column: 22, scope: !5671)
!5680 = !DILocation(line: 1404, column: 38, scope: !5671)
!5681 = !DILocation(line: 1404, column: 42, scope: !5671)
!5682 = !DILocation(line: 1404, column: 22, scope: !5671)
!5683 = !DILocation(line: 1405, column: 38, scope: !5671)
!5684 = !DILocation(line: 1405, column: 42, scope: !5671)
!5685 = !DILocation(line: 1405, column: 22, scope: !5671)
!5686 = !DILocation(line: 1401, column: 6, scope: !5671)
!5687 = !DILocation(line: 1401, column: 6, scope: !5661)
!5688 = !DILocation(line: 1407, column: 3, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1406, column: 2)
!5690 = !DILocation(line: 1410, column: 3, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1409, column: 7)
!5692 = !DILocation(line: 1412, column: 1, scope: !5661)
!5693 = distinct !DISubprogram(name: "MESH_OT_edgering_select", scope: !3, file: !3, line: 1435, type: !3071, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5694 = !DILocalVariable(name: "ot", arg: 1, scope: !5693, file: !3, line: 1435, type: !3073)
!5695 = !DILocation(line: 1435, column: 46, scope: !5693)
!5696 = !DILocation(line: 1438, column: 2, scope: !5693)
!5697 = !DILocation(line: 1438, column: 6, scope: !5693)
!5698 = !DILocation(line: 1438, column: 11, scope: !5693)
!5699 = !DILocation(line: 1439, column: 2, scope: !5693)
!5700 = !DILocation(line: 1439, column: 6, scope: !5693)
!5701 = !DILocation(line: 1439, column: 13, scope: !5693)
!5702 = !DILocation(line: 1440, column: 2, scope: !5693)
!5703 = !DILocation(line: 1440, column: 6, scope: !5693)
!5704 = !DILocation(line: 1440, column: 18, scope: !5693)
!5705 = !DILocation(line: 1443, column: 2, scope: !5693)
!5706 = !DILocation(line: 1443, column: 6, scope: !5693)
!5707 = !DILocation(line: 1443, column: 13, scope: !5693)
!5708 = !DILocation(line: 1444, column: 2, scope: !5693)
!5709 = !DILocation(line: 1444, column: 6, scope: !5693)
!5710 = !DILocation(line: 1444, column: 11, scope: !5693)
!5711 = !DILocation(line: 1447, column: 2, scope: !5693)
!5712 = !DILocation(line: 1447, column: 6, scope: !5693)
!5713 = !DILocation(line: 1447, column: 11, scope: !5693)
!5714 = !DILocation(line: 1449, column: 18, scope: !5693)
!5715 = !DILocation(line: 1449, column: 22, scope: !5693)
!5716 = !DILocation(line: 1449, column: 2, scope: !5693)
!5717 = !DILocation(line: 1450, column: 18, scope: !5693)
!5718 = !DILocation(line: 1450, column: 22, scope: !5693)
!5719 = !DILocation(line: 1450, column: 2, scope: !5693)
!5720 = !DILocation(line: 1451, column: 18, scope: !5693)
!5721 = !DILocation(line: 1451, column: 22, scope: !5693)
!5722 = !DILocation(line: 1451, column: 2, scope: !5693)
!5723 = !DILocation(line: 1452, column: 18, scope: !5693)
!5724 = !DILocation(line: 1452, column: 22, scope: !5693)
!5725 = !DILocation(line: 1452, column: 2, scope: !5693)
!5726 = !DILocation(line: 1453, column: 1, scope: !5693)
!5727 = distinct !DISubprogram(name: "MESH_OT_select_all", scope: !3, file: !3, line: 1483, type: !3071, scopeLine: 1484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5728 = !DILocalVariable(name: "ot", arg: 1, scope: !5727, file: !3, line: 1483, type: !3073)
!5729 = !DILocation(line: 1483, column: 41, scope: !5727)
!5730 = !DILocation(line: 1486, column: 2, scope: !5727)
!5731 = !DILocation(line: 1486, column: 6, scope: !5727)
!5732 = !DILocation(line: 1486, column: 11, scope: !5727)
!5733 = !DILocation(line: 1487, column: 2, scope: !5727)
!5734 = !DILocation(line: 1487, column: 6, scope: !5727)
!5735 = !DILocation(line: 1487, column: 13, scope: !5727)
!5736 = !DILocation(line: 1488, column: 2, scope: !5727)
!5737 = !DILocation(line: 1488, column: 6, scope: !5727)
!5738 = !DILocation(line: 1488, column: 18, scope: !5727)
!5739 = !DILocation(line: 1491, column: 2, scope: !5727)
!5740 = !DILocation(line: 1491, column: 6, scope: !5727)
!5741 = !DILocation(line: 1491, column: 11, scope: !5727)
!5742 = !DILocation(line: 1492, column: 2, scope: !5727)
!5743 = !DILocation(line: 1492, column: 6, scope: !5727)
!5744 = !DILocation(line: 1492, column: 11, scope: !5727)
!5745 = !DILocation(line: 1495, column: 2, scope: !5727)
!5746 = !DILocation(line: 1495, column: 6, scope: !5727)
!5747 = !DILocation(line: 1495, column: 11, scope: !5727)
!5748 = !DILocation(line: 1497, column: 36, scope: !5727)
!5749 = !DILocation(line: 1497, column: 2, scope: !5727)
!5750 = !DILocation(line: 1498, column: 1, scope: !5727)
!5751 = distinct !DISubprogram(name: "edbm_select_all_exec", scope: !3, file: !3, line: 1456, type: !4978, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5752 = !DILocalVariable(name: "C", arg: 1, scope: !5751, file: !3, line: 1456, type: !4980)
!5753 = !DILocation(line: 1456, column: 43, scope: !5751)
!5754 = !DILocalVariable(name: "op", arg: 2, scope: !5751, file: !3, line: 1456, type: !4982)
!5755 = !DILocation(line: 1456, column: 58, scope: !5751)
!5756 = !DILocalVariable(name: "obedit", scope: !5751, file: !3, line: 1458, type: !3615)
!5757 = !DILocation(line: 1458, column: 10, scope: !5751)
!5758 = !DILocation(line: 1458, column: 40, scope: !5751)
!5759 = !DILocation(line: 1458, column: 19, scope: !5751)
!5760 = !DILocalVariable(name: "em", scope: !5751, file: !3, line: 1459, type: !2675)
!5761 = !DILocation(line: 1459, column: 14, scope: !5751)
!5762 = !DILocation(line: 1459, column: 44, scope: !5751)
!5763 = !DILocation(line: 1459, column: 19, scope: !5751)
!5764 = !DILocalVariable(name: "action", scope: !5751, file: !3, line: 1460, type: !3570)
!5765 = !DILocation(line: 1460, column: 12, scope: !5751)
!5766 = !DILocation(line: 1460, column: 34, scope: !5751)
!5767 = !DILocation(line: 1460, column: 38, scope: !5751)
!5768 = !DILocation(line: 1460, column: 21, scope: !5751)
!5769 = !DILocation(line: 1462, column: 10, scope: !5751)
!5770 = !DILocation(line: 1462, column: 2, scope: !5751)
!5771 = !DILocation(line: 1464, column: 27, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 1462, column: 18)
!5773 = !DILocation(line: 1464, column: 4, scope: !5772)
!5774 = !DILocation(line: 1465, column: 4, scope: !5772)
!5775 = !DILocation(line: 1467, column: 25, scope: !5772)
!5776 = !DILocation(line: 1467, column: 4, scope: !5772)
!5777 = !DILocation(line: 1468, column: 4, scope: !5772)
!5778 = !DILocation(line: 1470, column: 26, scope: !5772)
!5779 = !DILocation(line: 1470, column: 4, scope: !5772)
!5780 = !DILocation(line: 1471, column: 4, scope: !5772)
!5781 = !DILocation(line: 1473, column: 21, scope: !5772)
!5782 = !DILocation(line: 1473, column: 4, scope: !5772)
!5783 = !DILocation(line: 1474, column: 26, scope: !5772)
!5784 = !DILocation(line: 1474, column: 4, scope: !5772)
!5785 = !DILocation(line: 1475, column: 4, scope: !5772)
!5786 = !DILocation(line: 1478, column: 24, scope: !5751)
!5787 = !DILocation(line: 1478, column: 48, scope: !5751)
!5788 = !DILocation(line: 1478, column: 2, scope: !5751)
!5789 = !DILocation(line: 1480, column: 2, scope: !5751)
!5790 = distinct !DISubprogram(name: "MESH_OT_select_interior_faces", scope: !3, file: !3, line: 1516, type: !3071, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5791 = !DILocalVariable(name: "ot", arg: 1, scope: !5790, file: !3, line: 1516, type: !3073)
!5792 = !DILocation(line: 1516, column: 52, scope: !5790)
!5793 = !DILocation(line: 1519, column: 2, scope: !5790)
!5794 = !DILocation(line: 1519, column: 6, scope: !5790)
!5795 = !DILocation(line: 1519, column: 11, scope: !5790)
!5796 = !DILocation(line: 1520, column: 2, scope: !5790)
!5797 = !DILocation(line: 1520, column: 6, scope: !5790)
!5798 = !DILocation(line: 1520, column: 13, scope: !5790)
!5799 = !DILocation(line: 1521, column: 2, scope: !5790)
!5800 = !DILocation(line: 1521, column: 6, scope: !5790)
!5801 = !DILocation(line: 1521, column: 18, scope: !5790)
!5802 = !DILocation(line: 1524, column: 2, scope: !5790)
!5803 = !DILocation(line: 1524, column: 6, scope: !5790)
!5804 = !DILocation(line: 1524, column: 11, scope: !5790)
!5805 = !DILocation(line: 1525, column: 2, scope: !5790)
!5806 = !DILocation(line: 1525, column: 6, scope: !5790)
!5807 = !DILocation(line: 1525, column: 11, scope: !5790)
!5808 = !DILocation(line: 1528, column: 2, scope: !5790)
!5809 = !DILocation(line: 1528, column: 6, scope: !5790)
!5810 = !DILocation(line: 1528, column: 11, scope: !5790)
!5811 = !DILocation(line: 1529, column: 1, scope: !5790)
!5812 = distinct !DISubprogram(name: "edbm_faces_select_interior_exec", scope: !3, file: !3, line: 1500, type: !4978, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5813 = !DILocalVariable(name: "C", arg: 1, scope: !5812, file: !3, line: 1500, type: !4980)
!5814 = !DILocation(line: 1500, column: 54, scope: !5812)
!5815 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5812, file: !3, line: 1500, type: !4982)
!5816 = !DILocation(line: 1500, column: 69, scope: !5812)
!5817 = !DILocalVariable(name: "obedit", scope: !5812, file: !3, line: 1502, type: !3615)
!5818 = !DILocation(line: 1502, column: 10, scope: !5812)
!5819 = !DILocation(line: 1502, column: 40, scope: !5812)
!5820 = !DILocation(line: 1502, column: 19, scope: !5812)
!5821 = !DILocalVariable(name: "em", scope: !5812, file: !3, line: 1503, type: !2675)
!5822 = !DILocation(line: 1503, column: 14, scope: !5812)
!5823 = !DILocation(line: 1503, column: 44, scope: !5812)
!5824 = !DILocation(line: 1503, column: 19, scope: !5812)
!5825 = !DILocation(line: 1505, column: 33, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 1505, column: 6)
!5827 = !DILocation(line: 1505, column: 6, scope: !5826)
!5828 = !DILocation(line: 1505, column: 6, scope: !5812)
!5829 = !DILocation(line: 1506, column: 25, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1505, column: 38)
!5831 = !DILocation(line: 1506, column: 49, scope: !5830)
!5832 = !DILocation(line: 1506, column: 3, scope: !5830)
!5833 = !DILocation(line: 1508, column: 3, scope: !5830)
!5834 = !DILocation(line: 1511, column: 3, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1510, column: 7)
!5836 = !DILocation(line: 1514, column: 1, scope: !5812)
!5837 = distinct !DISubprogram(name: "EDBM_select_pick", scope: !3, file: !3, line: 1535, type: !5838, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!813, !4980, !5840, !813, !813, !813}
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!5841 = !DILocalVariable(name: "C", arg: 1, scope: !5837, file: !3, line: 1535, type: !4980)
!5842 = !DILocation(line: 1535, column: 33, scope: !5837)
!5843 = !DILocalVariable(name: "mval", arg: 2, scope: !5837, file: !3, line: 1535, type: !5840)
!5844 = !DILocation(line: 1535, column: 46, scope: !5837)
!5845 = !DILocalVariable(name: "extend", arg: 3, scope: !5837, file: !3, line: 1535, type: !813)
!5846 = !DILocation(line: 1535, column: 60, scope: !5837)
!5847 = !DILocalVariable(name: "deselect", arg: 4, scope: !5837, file: !3, line: 1535, type: !813)
!5848 = !DILocation(line: 1535, column: 73, scope: !5837)
!5849 = !DILocalVariable(name: "toggle", arg: 5, scope: !5837, file: !3, line: 1535, type: !813)
!5850 = !DILocation(line: 1535, column: 88, scope: !5837)
!5851 = !DILocalVariable(name: "vc", scope: !5837, file: !3, line: 1537, type: !2696)
!5852 = !DILocation(line: 1537, column: 14, scope: !5837)
!5853 = !DILocalVariable(name: "eve", scope: !5837, file: !3, line: 1538, type: !620)
!5854 = !DILocation(line: 1538, column: 10, scope: !5837)
!5855 = !DILocalVariable(name: "eed", scope: !5837, file: !3, line: 1539, type: !681)
!5856 = !DILocation(line: 1539, column: 10, scope: !5837)
!5857 = !DILocalVariable(name: "efa", scope: !5837, file: !3, line: 1540, type: !685)
!5858 = !DILocation(line: 1540, column: 10, scope: !5837)
!5859 = !DILocation(line: 1543, column: 23, scope: !5837)
!5860 = !DILocation(line: 1543, column: 2, scope: !5837)
!5861 = !DILocation(line: 1544, column: 15, scope: !5837)
!5862 = !DILocation(line: 1544, column: 5, scope: !5837)
!5863 = !DILocation(line: 1544, column: 2, scope: !5837)
!5864 = !DILocation(line: 1544, column: 13, scope: !5837)
!5865 = !DILocation(line: 1545, column: 15, scope: !5837)
!5866 = !DILocation(line: 1545, column: 5, scope: !5837)
!5867 = !DILocation(line: 1545, column: 2, scope: !5837)
!5868 = !DILocation(line: 1545, column: 13, scope: !5837)
!5869 = !DILocation(line: 1547, column: 6, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 1547, column: 6)
!5871 = !DILocation(line: 1547, column: 6, scope: !5837)
!5872 = !DILocation(line: 1550, column: 7, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 1550, column: 7)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1547, column: 50)
!5875 = !DILocation(line: 1550, column: 14, scope: !5873)
!5876 = !DILocation(line: 1550, column: 23, scope: !5873)
!5877 = !DILocation(line: 1550, column: 26, scope: !5873)
!5878 = !DILocation(line: 1550, column: 35, scope: !5873)
!5879 = !DILocation(line: 1550, column: 44, scope: !5873)
!5880 = !DILocation(line: 1550, column: 47, scope: !5873)
!5881 = !DILocation(line: 1550, column: 54, scope: !5873)
!5882 = !DILocation(line: 1550, column: 7, scope: !5874)
!5883 = !DILocation(line: 1551, column: 29, scope: !5873)
!5884 = !DILocation(line: 1551, column: 4, scope: !5873)
!5885 = !DILocation(line: 1553, column: 7, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 1553, column: 7)
!5887 = !DILocation(line: 1553, column: 7, scope: !5874)
!5888 = !DILocation(line: 1554, column: 8, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 1554, column: 8)
!5890 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1553, column: 12)
!5891 = !DILocation(line: 1554, column: 8, scope: !5890)
!5892 = !DILocation(line: 1556, column: 32, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1554, column: 16)
!5894 = !DILocation(line: 1556, column: 36, scope: !5893)
!5895 = !DILocation(line: 1556, column: 40, scope: !5893)
!5896 = !DILocation(line: 1556, column: 5, scope: !5893)
!5897 = !DILocation(line: 1560, column: 5, scope: !5893)
!5898 = !DILocation(line: 1561, column: 27, scope: !5893)
!5899 = !DILocation(line: 1561, column: 31, scope: !5893)
!5900 = !DILocation(line: 1561, column: 35, scope: !5893)
!5901 = !DILocation(line: 1561, column: 5, scope: !5893)
!5902 = !DILocation(line: 1562, column: 5, scope: !5893)
!5903 = !DILocation(line: 1563, column: 27, scope: !5893)
!5904 = !DILocation(line: 1563, column: 31, scope: !5893)
!5905 = !DILocation(line: 1563, column: 35, scope: !5893)
!5906 = !DILocation(line: 1563, column: 5, scope: !5893)
!5907 = !DILocation(line: 1564, column: 4, scope: !5893)
!5908 = !DILocation(line: 1565, column: 13, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1565, column: 13)
!5910 = !DILocation(line: 1565, column: 13, scope: !5889)
!5911 = !DILocation(line: 1566, column: 5, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 1565, column: 23)
!5913 = !DILocation(line: 1567, column: 27, scope: !5912)
!5914 = !DILocation(line: 1567, column: 31, scope: !5912)
!5915 = !DILocation(line: 1567, column: 35, scope: !5912)
!5916 = !DILocation(line: 1567, column: 5, scope: !5912)
!5917 = !DILocation(line: 1568, column: 4, scope: !5912)
!5918 = !DILocation(line: 1571, column: 32, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 1569, column: 9)
!5920 = !DILocation(line: 1571, column: 36, scope: !5919)
!5921 = !DILocation(line: 1571, column: 40, scope: !5919)
!5922 = !DILocation(line: 1571, column: 5, scope: !5919)
!5923 = !DILocation(line: 1573, column: 10, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 1573, column: 9)
!5925 = !DILocation(line: 1573, column: 9, scope: !5919)
!5926 = !DILocation(line: 1574, column: 6, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1573, column: 50)
!5928 = !DILocation(line: 1575, column: 28, scope: !5927)
!5929 = !DILocation(line: 1575, column: 32, scope: !5927)
!5930 = !DILocation(line: 1575, column: 36, scope: !5927)
!5931 = !DILocation(line: 1575, column: 6, scope: !5927)
!5932 = !DILocation(line: 1576, column: 5, scope: !5927)
!5933 = !DILocation(line: 1577, column: 14, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1577, column: 14)
!5935 = !DILocation(line: 1577, column: 14, scope: !5924)
!5936 = !DILocation(line: 1578, column: 6, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 1577, column: 22)
!5938 = !DILocation(line: 1579, column: 28, scope: !5937)
!5939 = !DILocation(line: 1579, column: 32, scope: !5937)
!5940 = !DILocation(line: 1579, column: 36, scope: !5937)
!5941 = !DILocation(line: 1579, column: 6, scope: !5937)
!5942 = !DILocation(line: 1580, column: 5, scope: !5937)
!5943 = !DILocation(line: 1582, column: 3, scope: !5890)
!5944 = !DILocation(line: 1583, column: 12, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1583, column: 12)
!5946 = !DILocation(line: 1583, column: 12, scope: !5886)
!5947 = !DILocation(line: 1584, column: 8, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 1584, column: 8)
!5949 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1583, column: 17)
!5950 = !DILocation(line: 1584, column: 8, scope: !5949)
!5951 = !DILocation(line: 1587, column: 5, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1584, column: 16)
!5953 = !DILocation(line: 1588, column: 27, scope: !5952)
!5954 = !DILocation(line: 1588, column: 31, scope: !5952)
!5955 = !DILocation(line: 1588, column: 35, scope: !5952)
!5956 = !DILocation(line: 1588, column: 5, scope: !5952)
!5957 = !DILocation(line: 1589, column: 5, scope: !5952)
!5958 = !DILocation(line: 1590, column: 27, scope: !5952)
!5959 = !DILocation(line: 1590, column: 31, scope: !5952)
!5960 = !DILocation(line: 1590, column: 35, scope: !5952)
!5961 = !DILocation(line: 1590, column: 5, scope: !5952)
!5962 = !DILocation(line: 1591, column: 4, scope: !5952)
!5963 = !DILocation(line: 1592, column: 13, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1592, column: 13)
!5965 = !DILocation(line: 1592, column: 13, scope: !5948)
!5966 = !DILocation(line: 1593, column: 5, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1592, column: 23)
!5968 = !DILocation(line: 1594, column: 27, scope: !5967)
!5969 = !DILocation(line: 1594, column: 31, scope: !5967)
!5970 = !DILocation(line: 1594, column: 35, scope: !5967)
!5971 = !DILocation(line: 1594, column: 5, scope: !5967)
!5972 = !DILocation(line: 1595, column: 4, scope: !5967)
!5973 = !DILocation(line: 1597, column: 10, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1597, column: 9)
!5975 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 1596, column: 9)
!5976 = !DILocation(line: 1597, column: 9, scope: !5975)
!5977 = !DILocation(line: 1598, column: 6, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1597, column: 50)
!5979 = !DILocation(line: 1599, column: 28, scope: !5978)
!5980 = !DILocation(line: 1599, column: 32, scope: !5978)
!5981 = !DILocation(line: 1599, column: 36, scope: !5978)
!5982 = !DILocation(line: 1599, column: 6, scope: !5978)
!5983 = !DILocation(line: 1600, column: 5, scope: !5978)
!5984 = !DILocation(line: 1601, column: 14, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1601, column: 14)
!5986 = !DILocation(line: 1601, column: 14, scope: !5974)
!5987 = !DILocation(line: 1602, column: 6, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 1601, column: 22)
!5989 = !DILocation(line: 1603, column: 28, scope: !5988)
!5990 = !DILocation(line: 1603, column: 32, scope: !5988)
!5991 = !DILocation(line: 1603, column: 36, scope: !5988)
!5992 = !DILocation(line: 1603, column: 6, scope: !5988)
!5993 = !DILocation(line: 1604, column: 5, scope: !5988)
!5994 = !DILocation(line: 1606, column: 3, scope: !5949)
!5995 = !DILocation(line: 1607, column: 12, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1607, column: 12)
!5997 = !DILocation(line: 1607, column: 12, scope: !5945)
!5998 = !DILocation(line: 1608, column: 8, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1608, column: 8)
!6000 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1607, column: 17)
!6001 = !DILocation(line: 1608, column: 8, scope: !6000)
!6002 = !DILocation(line: 1611, column: 5, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1608, column: 16)
!6004 = !DILocation(line: 1612, column: 27, scope: !6003)
!6005 = !DILocation(line: 1612, column: 31, scope: !6003)
!6006 = !DILocation(line: 1612, column: 35, scope: !6003)
!6007 = !DILocation(line: 1612, column: 5, scope: !6003)
!6008 = !DILocation(line: 1613, column: 5, scope: !6003)
!6009 = !DILocation(line: 1614, column: 27, scope: !6003)
!6010 = !DILocation(line: 1614, column: 31, scope: !6003)
!6011 = !DILocation(line: 1614, column: 35, scope: !6003)
!6012 = !DILocation(line: 1614, column: 5, scope: !6003)
!6013 = !DILocation(line: 1615, column: 4, scope: !6003)
!6014 = !DILocation(line: 1616, column: 13, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1616, column: 13)
!6016 = !DILocation(line: 1616, column: 13, scope: !5999)
!6017 = !DILocation(line: 1617, column: 5, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 1616, column: 23)
!6019 = !DILocation(line: 1618, column: 27, scope: !6018)
!6020 = !DILocation(line: 1618, column: 31, scope: !6018)
!6021 = !DILocation(line: 1618, column: 35, scope: !6018)
!6022 = !DILocation(line: 1618, column: 5, scope: !6018)
!6023 = !DILocation(line: 1619, column: 4, scope: !6018)
!6024 = !DILocation(line: 1621, column: 10, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1621, column: 9)
!6026 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 1620, column: 9)
!6027 = !DILocation(line: 1621, column: 9, scope: !6026)
!6028 = !DILocation(line: 1622, column: 6, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 1621, column: 50)
!6030 = !DILocation(line: 1623, column: 28, scope: !6029)
!6031 = !DILocation(line: 1623, column: 32, scope: !6029)
!6032 = !DILocation(line: 1623, column: 36, scope: !6029)
!6033 = !DILocation(line: 1623, column: 6, scope: !6029)
!6034 = !DILocation(line: 1624, column: 5, scope: !6029)
!6035 = !DILocation(line: 1625, column: 14, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 1625, column: 14)
!6037 = !DILocation(line: 1625, column: 14, scope: !6025)
!6038 = !DILocation(line: 1626, column: 6, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1625, column: 22)
!6040 = !DILocation(line: 1627, column: 28, scope: !6039)
!6041 = !DILocation(line: 1627, column: 32, scope: !6039)
!6042 = !DILocation(line: 1627, column: 36, scope: !6039)
!6043 = !DILocation(line: 1627, column: 6, scope: !6039)
!6044 = !DILocation(line: 1628, column: 5, scope: !6039)
!6045 = !DILocation(line: 1630, column: 3, scope: !6000)
!6046 = !DILocation(line: 1632, column: 28, scope: !5874)
!6047 = !DILocation(line: 1632, column: 3, scope: !5874)
!6048 = !DILocation(line: 1635, column: 7, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 1635, column: 7)
!6050 = !DILocation(line: 1635, column: 11, scope: !6049)
!6051 = !DILocation(line: 1635, column: 14, scope: !6049)
!6052 = !DILocation(line: 1635, column: 19, scope: !6049)
!6053 = !DILocation(line: 1635, column: 32, scope: !6049)
!6054 = !DILocation(line: 1635, column: 40, scope: !6049)
!6055 = !DILocation(line: 1635, column: 47, scope: !6049)
!6056 = !DILocation(line: 1635, column: 26, scope: !6049)
!6057 = !DILocation(line: 1635, column: 7, scope: !5874)
!6058 = !DILocation(line: 1636, column: 24, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 1635, column: 52)
!6060 = !DILocation(line: 1636, column: 29, scope: !6059)
!6061 = !DILocation(line: 1636, column: 36, scope: !6059)
!6062 = !DILocation(line: 1636, column: 7, scope: !6059)
!6063 = !DILocation(line: 1636, column: 15, scope: !6059)
!6064 = !DILocation(line: 1636, column: 22, scope: !6059)
!6065 = !DILocation(line: 1637, column: 20, scope: !6059)
!6066 = !DILocation(line: 1637, column: 25, scope: !6059)
!6067 = !DILocation(line: 1637, column: 7, scope: !6059)
!6068 = !DILocation(line: 1637, column: 11, scope: !6059)
!6069 = !DILocation(line: 1637, column: 18, scope: !6059)
!6070 = !DILocation(line: 1639, column: 26, scope: !6059)
!6071 = !DILocation(line: 1639, column: 4, scope: !6059)
!6072 = !DILocation(line: 1641, column: 3, scope: !6059)
!6073 = !DILocation(line: 1643, column: 25, scope: !5874)
!6074 = !DILocation(line: 1643, column: 52, scope: !5874)
!6075 = !DILocation(line: 1643, column: 49, scope: !5874)
!6076 = !DILocation(line: 1643, column: 3, scope: !5874)
!6077 = !DILocation(line: 1644, column: 3, scope: !5874)
!6078 = !DILocation(line: 1647, column: 2, scope: !5837)
!6079 = !DILocation(line: 1648, column: 1, scope: !5837)
!6080 = distinct !DISubprogram(name: "em_setup_viewcontext", scope: !3, file: !3, line: 2750, type: !6081, scopeLine: 2751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{null, !4980, !2695}
!6083 = !DILocalVariable(name: "C", arg: 1, scope: !6080, file: !3, line: 2750, type: !4980)
!6084 = !DILocation(line: 2750, column: 37, scope: !6080)
!6085 = !DILocalVariable(name: "vc", arg: 2, scope: !6080, file: !3, line: 2750, type: !2695)
!6086 = !DILocation(line: 2750, column: 53, scope: !6080)
!6087 = !DILocation(line: 2752, column: 25, scope: !6080)
!6088 = !DILocation(line: 2752, column: 28, scope: !6080)
!6089 = !DILocation(line: 2752, column: 2, scope: !6080)
!6090 = !DILocation(line: 2754, column: 6, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 2754, column: 6)
!6092 = !DILocation(line: 2754, column: 10, scope: !6091)
!6093 = !DILocation(line: 2754, column: 6, scope: !6080)
!6094 = !DILocation(line: 2755, column: 37, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 2754, column: 18)
!6096 = !DILocation(line: 2755, column: 41, scope: !6095)
!6097 = !DILocation(line: 2755, column: 12, scope: !6095)
!6098 = !DILocation(line: 2755, column: 3, scope: !6095)
!6099 = !DILocation(line: 2755, column: 7, scope: !6095)
!6100 = !DILocation(line: 2755, column: 10, scope: !6095)
!6101 = !DILocation(line: 2756, column: 2, scope: !6095)
!6102 = !DILocation(line: 2757, column: 1, scope: !6080)
!6103 = distinct !DISubprogram(name: "unified_findnearest", scope: !3, file: !3, line: 648, type: !6104, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{!319, !2695, !619, !680, !684}
!6106 = !DILocalVariable(name: "vc", arg: 1, scope: !6103, file: !3, line: 648, type: !2695)
!6107 = !DILocation(line: 648, column: 45, scope: !6103)
!6108 = !DILocalVariable(name: "r_eve", arg: 2, scope: !6103, file: !3, line: 648, type: !619)
!6109 = !DILocation(line: 648, column: 58, scope: !6103)
!6110 = !DILocalVariable(name: "r_eed", arg: 3, scope: !6103, file: !3, line: 648, type: !680)
!6111 = !DILocation(line: 648, column: 74, scope: !6103)
!6112 = !DILocalVariable(name: "r_efa", arg: 4, scope: !6103, file: !3, line: 648, type: !684)
!6113 = !DILocation(line: 648, column: 90, scope: !6103)
!6114 = !DILocalVariable(name: "em", scope: !6103, file: !3, line: 650, type: !2675)
!6115 = !DILocation(line: 650, column: 14, scope: !6103)
!6116 = !DILocation(line: 650, column: 19, scope: !6103)
!6117 = !DILocation(line: 650, column: 23, scope: !6103)
!6118 = !DILocalVariable(name: "dist", scope: !6103, file: !3, line: 651, type: !364)
!6119 = !DILocation(line: 651, column: 8, scope: !6103)
!6120 = !DILocation(line: 651, column: 15, scope: !6103)
!6121 = !DILocation(line: 653, column: 3, scope: !6103)
!6122 = !DILocation(line: 653, column: 9, scope: !6103)
!6123 = !DILocation(line: 654, column: 3, scope: !6103)
!6124 = !DILocation(line: 654, column: 9, scope: !6103)
!6125 = !DILocation(line: 655, column: 3, scope: !6103)
!6126 = !DILocation(line: 655, column: 9, scope: !6103)
!6127 = !DILocation(line: 658, column: 26, scope: !6103)
!6128 = !DILocation(line: 658, column: 2, scope: !6103)
!6129 = !DILocation(line: 660, column: 6, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 660, column: 6)
!6131 = !DILocation(line: 660, column: 10, scope: !6130)
!6132 = !DILocation(line: 660, column: 21, scope: !6130)
!6133 = !DILocation(line: 660, column: 6, scope: !6103)
!6134 = !DILocation(line: 661, column: 35, scope: !6130)
!6135 = !DILocation(line: 661, column: 12, scope: !6130)
!6136 = !DILocation(line: 661, column: 4, scope: !6130)
!6137 = !DILocation(line: 661, column: 10, scope: !6130)
!6138 = !DILocation(line: 661, column: 3, scope: !6130)
!6139 = !DILocation(line: 662, column: 6, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 662, column: 6)
!6141 = !DILocation(line: 662, column: 10, scope: !6140)
!6142 = !DILocation(line: 662, column: 21, scope: !6140)
!6143 = !DILocation(line: 662, column: 6, scope: !6103)
!6144 = !DILocation(line: 663, column: 35, scope: !6140)
!6145 = !DILocation(line: 663, column: 12, scope: !6140)
!6146 = !DILocation(line: 663, column: 4, scope: !6140)
!6147 = !DILocation(line: 663, column: 10, scope: !6140)
!6148 = !DILocation(line: 663, column: 3, scope: !6140)
!6149 = !DILocation(line: 665, column: 7, scope: !6103)
!6150 = !DILocation(line: 666, column: 6, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 666, column: 6)
!6152 = !DILocation(line: 666, column: 10, scope: !6151)
!6153 = !DILocation(line: 666, column: 21, scope: !6151)
!6154 = !DILocation(line: 666, column: 6, scope: !6103)
!6155 = !DILocation(line: 667, column: 35, scope: !6151)
!6156 = !DILocation(line: 667, column: 12, scope: !6151)
!6157 = !DILocation(line: 667, column: 4, scope: !6151)
!6158 = !DILocation(line: 667, column: 10, scope: !6151)
!6159 = !DILocation(line: 667, column: 3, scope: !6151)
!6160 = !DILocation(line: 670, column: 7, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 670, column: 6)
!6162 = !DILocation(line: 670, column: 6, scope: !6161)
!6163 = !DILocation(line: 670, column: 6, scope: !6103)
!6164 = !DILocation(line: 671, column: 4, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 670, column: 14)
!6166 = !DILocation(line: 671, column: 10, scope: !6165)
!6167 = !DILocation(line: 671, column: 19, scope: !6165)
!6168 = !DILocation(line: 671, column: 25, scope: !6165)
!6169 = !DILocation(line: 672, column: 2, scope: !6165)
!6170 = !DILocation(line: 673, column: 12, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 673, column: 11)
!6172 = !DILocation(line: 673, column: 11, scope: !6171)
!6173 = !DILocation(line: 673, column: 11, scope: !6161)
!6174 = !DILocation(line: 674, column: 4, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 673, column: 19)
!6176 = !DILocation(line: 674, column: 10, scope: !6175)
!6177 = !DILocation(line: 675, column: 2, scope: !6175)
!6178 = !DILocation(line: 677, column: 11, scope: !6103)
!6179 = !DILocation(line: 677, column: 10, scope: !6103)
!6180 = !DILocation(line: 677, column: 17, scope: !6103)
!6181 = !DILocation(line: 677, column: 21, scope: !6103)
!6182 = !DILocation(line: 677, column: 20, scope: !6103)
!6183 = !DILocation(line: 677, column: 27, scope: !6103)
!6184 = !DILocation(line: 677, column: 31, scope: !6103)
!6185 = !DILocation(line: 677, column: 30, scope: !6103)
!6186 = !DILocation(line: 677, column: 2, scope: !6103)
!6187 = distinct !DISubprogram(name: "EDBM_selectmode_set", scope: !3, file: !3, line: 1682, type: !6188, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !2675}
!6190 = !DILocalVariable(name: "em", arg: 1, scope: !6187, file: !3, line: 1682, type: !2675)
!6191 = !DILocation(line: 1682, column: 38, scope: !6187)
!6192 = !DILocalVariable(name: "eve", scope: !6187, file: !3, line: 1684, type: !620)
!6193 = !DILocation(line: 1684, column: 10, scope: !6187)
!6194 = !DILocalVariable(name: "eed", scope: !6187, file: !3, line: 1685, type: !681)
!6195 = !DILocation(line: 1685, column: 10, scope: !6187)
!6196 = !DILocalVariable(name: "efa", scope: !6187, file: !3, line: 1686, type: !685)
!6197 = !DILocation(line: 1686, column: 10, scope: !6187)
!6198 = !DILocalVariable(name: "iter", scope: !6187, file: !3, line: 1687, type: !3253)
!6199 = !DILocation(line: 1687, column: 9, scope: !6187)
!6200 = !DILocation(line: 1689, column: 23, scope: !6187)
!6201 = !DILocation(line: 1689, column: 27, scope: !6187)
!6202 = !DILocation(line: 1689, column: 2, scope: !6187)
!6203 = !DILocation(line: 1689, column: 6, scope: !6187)
!6204 = !DILocation(line: 1689, column: 10, scope: !6187)
!6205 = !DILocation(line: 1689, column: 21, scope: !6187)
!6206 = !DILocation(line: 1691, column: 24, scope: !6187)
!6207 = !DILocation(line: 1691, column: 2, scope: !6187)
!6208 = !DILocation(line: 1693, column: 6, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1693, column: 6)
!6210 = !DILocation(line: 1693, column: 10, scope: !6209)
!6211 = !DILocation(line: 1693, column: 14, scope: !6209)
!6212 = !DILocation(line: 1693, column: 25, scope: !6209)
!6213 = !DILocation(line: 1693, column: 30, scope: !6209)
!6214 = !DILocation(line: 1694, column: 6, scope: !6209)
!6215 = !DILocation(line: 1694, column: 10, scope: !6209)
!6216 = !DILocation(line: 1694, column: 14, scope: !6209)
!6217 = !DILocation(line: 1694, column: 25, scope: !6209)
!6218 = !DILocation(line: 1694, column: 30, scope: !6209)
!6219 = !DILocation(line: 1695, column: 6, scope: !6209)
!6220 = !DILocation(line: 1695, column: 10, scope: !6209)
!6221 = !DILocation(line: 1695, column: 14, scope: !6209)
!6222 = !DILocation(line: 1695, column: 25, scope: !6209)
!6223 = !DILocation(line: 1693, column: 6, scope: !6187)
!6224 = !DILocation(line: 1697, column: 3, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1696, column: 2)
!6226 = !DILocation(line: 1700, column: 6, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1700, column: 6)
!6228 = !DILocation(line: 1700, column: 10, scope: !6227)
!6229 = !DILocation(line: 1700, column: 21, scope: !6227)
!6230 = !DILocation(line: 1700, column: 6, scope: !6187)
!6231 = !DILocation(line: 1701, column: 7, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1701, column: 7)
!6233 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 1700, column: 42)
!6234 = !DILocation(line: 1701, column: 11, scope: !6232)
!6235 = !DILocation(line: 1701, column: 15, scope: !6232)
!6236 = !DILocation(line: 1701, column: 7, scope: !6233)
!6237 = !DILocation(line: 1702, column: 22, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1701, column: 27)
!6239 = !DILocation(line: 1702, column: 4, scope: !6238)
!6240 = !DILocation(line: 1703, column: 3, scope: !6238)
!6241 = !DILocation(line: 1704, column: 2, scope: !6233)
!6242 = !DILocation(line: 1705, column: 11, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 1705, column: 11)
!6244 = !DILocation(line: 1705, column: 15, scope: !6243)
!6245 = !DILocation(line: 1705, column: 26, scope: !6243)
!6246 = !DILocation(line: 1705, column: 11, scope: !6227)
!6247 = !DILocation(line: 1707, column: 3, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1707, column: 3)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1705, column: 45)
!6250 = !DILocation(line: 1707, column: 3, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 1707, column: 3)
!6252 = !DILocation(line: 1708, column: 23, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6251, file: !3, line: 1707, column: 55)
!6254 = !DILocation(line: 1708, column: 27, scope: !6253)
!6255 = !DILocation(line: 1708, column: 31, scope: !6253)
!6256 = !DILocation(line: 1708, column: 4, scope: !6253)
!6257 = !DILocation(line: 1709, column: 3, scope: !6253)
!6258 = distinct !{!6258, !6247, !6259}
!6259 = !DILocation(line: 1709, column: 3, scope: !6248)
!6260 = !DILocation(line: 1711, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1711, column: 7)
!6262 = !DILocation(line: 1711, column: 11, scope: !6261)
!6263 = !DILocation(line: 1711, column: 15, scope: !6261)
!6264 = !DILocation(line: 1711, column: 7, scope: !6249)
!6265 = !DILocation(line: 1712, column: 4, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1712, column: 4)
!6267 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1711, column: 27)
!6268 = !DILocation(line: 1712, column: 4, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1712, column: 4)
!6270 = !DILocation(line: 1713, column: 9, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 1713, column: 9)
!6272 = distinct !DILexicalBlock(scope: !6269, file: !3, line: 1712, column: 56)
!6273 = !DILocation(line: 1713, column: 9, scope: !6272)
!6274 = !DILocation(line: 1714, column: 25, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 1713, column: 49)
!6276 = !DILocation(line: 1714, column: 29, scope: !6275)
!6277 = !DILocation(line: 1714, column: 33, scope: !6275)
!6278 = !DILocation(line: 1714, column: 6, scope: !6275)
!6279 = !DILocation(line: 1715, column: 5, scope: !6275)
!6280 = !DILocation(line: 1716, column: 4, scope: !6272)
!6281 = distinct !{!6281, !6265, !6282}
!6282 = !DILocation(line: 1716, column: 4, scope: !6266)
!6283 = !DILocation(line: 1719, column: 26, scope: !6267)
!6284 = !DILocation(line: 1719, column: 4, scope: !6267)
!6285 = !DILocation(line: 1720, column: 3, scope: !6267)
!6286 = !DILocation(line: 1721, column: 2, scope: !6249)
!6287 = !DILocation(line: 1722, column: 11, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1722, column: 11)
!6289 = !DILocation(line: 1722, column: 15, scope: !6288)
!6290 = !DILocation(line: 1722, column: 26, scope: !6288)
!6291 = !DILocation(line: 1722, column: 11, scope: !6243)
!6292 = !DILocation(line: 1724, column: 3, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 1724, column: 3)
!6294 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 1722, column: 45)
!6295 = !DILocation(line: 1724, column: 3, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1724, column: 3)
!6297 = !DILocation(line: 1725, column: 23, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1724, column: 55)
!6299 = !DILocation(line: 1725, column: 27, scope: !6298)
!6300 = !DILocation(line: 1725, column: 31, scope: !6298)
!6301 = !DILocation(line: 1725, column: 4, scope: !6298)
!6302 = !DILocation(line: 1726, column: 3, scope: !6298)
!6303 = distinct !{!6303, !6292, !6304}
!6304 = !DILocation(line: 1726, column: 3, scope: !6293)
!6305 = !DILocation(line: 1728, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 1728, column: 7)
!6307 = !DILocation(line: 1728, column: 11, scope: !6306)
!6308 = !DILocation(line: 1728, column: 15, scope: !6306)
!6309 = !DILocation(line: 1728, column: 7, scope: !6294)
!6310 = !DILocation(line: 1729, column: 4, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 1729, column: 4)
!6312 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1728, column: 27)
!6313 = !DILocation(line: 1729, column: 4, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 1729, column: 4)
!6315 = !DILocation(line: 1730, column: 9, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 1730, column: 9)
!6317 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 1729, column: 56)
!6318 = !DILocation(line: 1730, column: 9, scope: !6317)
!6319 = !DILocation(line: 1731, column: 25, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 1730, column: 49)
!6321 = !DILocation(line: 1731, column: 29, scope: !6320)
!6322 = !DILocation(line: 1731, column: 33, scope: !6320)
!6323 = !DILocation(line: 1731, column: 6, scope: !6320)
!6324 = !DILocation(line: 1732, column: 5, scope: !6320)
!6325 = !DILocation(line: 1733, column: 4, scope: !6317)
!6326 = distinct !{!6326, !6310, !6327}
!6327 = !DILocation(line: 1733, column: 4, scope: !6311)
!6328 = !DILocation(line: 1734, column: 3, scope: !6312)
!6329 = !DILocation(line: 1735, column: 2, scope: !6294)
!6330 = !DILocation(line: 1736, column: 1, scope: !6187)
!6331 = distinct !DISubprogram(name: "edbm_strip_selections", scope: !3, file: !3, line: 1650, type: !6188, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6332 = !DILocalVariable(name: "em", arg: 1, scope: !6331, file: !3, line: 1650, type: !2675)
!6333 = !DILocation(line: 1650, column: 47, scope: !6331)
!6334 = !DILocalVariable(name: "ese", scope: !6331, file: !3, line: 1652, type: !6335)
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditSelection", file: !6337, line: 34, baseType: !6338)
!6337 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_marking.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditSelection", file: !6337, line: 30, size: 256, elements: !6339)
!6339 = !{!6340, !6342, !6343, !6349}
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6338, file: !6337, line: 31, baseType: !6341, size: 64)
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 64)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6338, file: !6337, line: 31, baseType: !6341, size: 64, offset: 64)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "ele", scope: !6338, file: !6337, line: 32, baseType: !6344, size: 64, offset: 128)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMElem", file: !62, line: 154, baseType: !6346)
!6346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMElem", file: !62, line: 152, size: 128, elements: !6347)
!6347 = !{!6348}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6346, file: !62, line: 153, baseType: !625, size: 128)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !6338, file: !6337, line: 33, baseType: !304, size: 8, offset: 192)
!6350 = !DILocation(line: 1652, column: 19, scope: !6331)
!6351 = !DILocalVariable(name: "nextese", scope: !6331, file: !3, line: 1652, type: !6335)
!6352 = !DILocation(line: 1652, column: 25, scope: !6331)
!6353 = !DILocation(line: 1654, column: 8, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 1654, column: 6)
!6355 = !DILocation(line: 1654, column: 12, scope: !6354)
!6356 = !DILocation(line: 1654, column: 23, scope: !6354)
!6357 = !DILocation(line: 1654, column: 6, scope: !6331)
!6358 = !DILocation(line: 1655, column: 9, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 1654, column: 45)
!6360 = !DILocation(line: 1655, column: 13, scope: !6359)
!6361 = !DILocation(line: 1655, column: 17, scope: !6359)
!6362 = !DILocation(line: 1655, column: 26, scope: !6359)
!6363 = !DILocation(line: 1655, column: 7, scope: !6359)
!6364 = !DILocation(line: 1656, column: 3, scope: !6359)
!6365 = !DILocation(line: 1656, column: 10, scope: !6359)
!6366 = !DILocation(line: 1657, column: 14, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 1656, column: 15)
!6368 = !DILocation(line: 1657, column: 19, scope: !6367)
!6369 = !DILocation(line: 1657, column: 12, scope: !6367)
!6370 = !DILocation(line: 1658, column: 8, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 1658, column: 8)
!6372 = !DILocation(line: 1658, column: 13, scope: !6371)
!6373 = !DILocation(line: 1658, column: 19, scope: !6371)
!6374 = !DILocation(line: 1658, column: 8, scope: !6367)
!6375 = !DILocation(line: 1658, column: 47, scope: !6371)
!6376 = !DILocation(line: 1658, column: 51, scope: !6371)
!6377 = !DILocation(line: 1658, column: 55, scope: !6371)
!6378 = !DILocation(line: 1658, column: 66, scope: !6371)
!6379 = !DILocation(line: 1658, column: 31, scope: !6371)
!6380 = !DILocation(line: 1659, column: 10, scope: !6367)
!6381 = !DILocation(line: 1659, column: 8, scope: !6367)
!6382 = distinct !{!6382, !6364, !6383}
!6383 = !DILocation(line: 1660, column: 3, scope: !6359)
!6384 = !DILocation(line: 1661, column: 2, scope: !6359)
!6385 = !DILocation(line: 1662, column: 8, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 1662, column: 6)
!6387 = !DILocation(line: 1662, column: 12, scope: !6386)
!6388 = !DILocation(line: 1662, column: 23, scope: !6386)
!6389 = !DILocation(line: 1662, column: 6, scope: !6331)
!6390 = !DILocation(line: 1663, column: 9, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 1662, column: 43)
!6392 = !DILocation(line: 1663, column: 13, scope: !6391)
!6393 = !DILocation(line: 1663, column: 17, scope: !6391)
!6394 = !DILocation(line: 1663, column: 26, scope: !6391)
!6395 = !DILocation(line: 1663, column: 7, scope: !6391)
!6396 = !DILocation(line: 1664, column: 3, scope: !6391)
!6397 = !DILocation(line: 1664, column: 10, scope: !6391)
!6398 = !DILocation(line: 1665, column: 14, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 1664, column: 15)
!6400 = !DILocation(line: 1665, column: 19, scope: !6399)
!6401 = !DILocation(line: 1665, column: 12, scope: !6399)
!6402 = !DILocation(line: 1666, column: 8, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1666, column: 8)
!6404 = !DILocation(line: 1666, column: 13, scope: !6403)
!6405 = !DILocation(line: 1666, column: 19, scope: !6403)
!6406 = !DILocation(line: 1666, column: 8, scope: !6399)
!6407 = !DILocation(line: 1666, column: 47, scope: !6403)
!6408 = !DILocation(line: 1666, column: 51, scope: !6403)
!6409 = !DILocation(line: 1666, column: 55, scope: !6403)
!6410 = !DILocation(line: 1666, column: 66, scope: !6403)
!6411 = !DILocation(line: 1666, column: 31, scope: !6403)
!6412 = !DILocation(line: 1667, column: 10, scope: !6399)
!6413 = !DILocation(line: 1667, column: 8, scope: !6399)
!6414 = distinct !{!6414, !6396, !6415}
!6415 = !DILocation(line: 1668, column: 3, scope: !6391)
!6416 = !DILocation(line: 1669, column: 2, scope: !6391)
!6417 = !DILocation(line: 1670, column: 8, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6331, file: !3, line: 1670, column: 6)
!6419 = !DILocation(line: 1670, column: 12, scope: !6418)
!6420 = !DILocation(line: 1670, column: 23, scope: !6418)
!6421 = !DILocation(line: 1670, column: 6, scope: !6331)
!6422 = !DILocation(line: 1671, column: 9, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 1670, column: 43)
!6424 = !DILocation(line: 1671, column: 13, scope: !6423)
!6425 = !DILocation(line: 1671, column: 17, scope: !6423)
!6426 = !DILocation(line: 1671, column: 26, scope: !6423)
!6427 = !DILocation(line: 1671, column: 7, scope: !6423)
!6428 = !DILocation(line: 1672, column: 3, scope: !6423)
!6429 = !DILocation(line: 1672, column: 10, scope: !6423)
!6430 = !DILocation(line: 1673, column: 14, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 1672, column: 15)
!6432 = !DILocation(line: 1673, column: 19, scope: !6431)
!6433 = !DILocation(line: 1673, column: 12, scope: !6431)
!6434 = !DILocation(line: 1674, column: 8, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 1674, column: 8)
!6436 = !DILocation(line: 1674, column: 13, scope: !6435)
!6437 = !DILocation(line: 1674, column: 19, scope: !6435)
!6438 = !DILocation(line: 1674, column: 8, scope: !6431)
!6439 = !DILocation(line: 1674, column: 47, scope: !6435)
!6440 = !DILocation(line: 1674, column: 51, scope: !6435)
!6441 = !DILocation(line: 1674, column: 55, scope: !6435)
!6442 = !DILocation(line: 1674, column: 66, scope: !6435)
!6443 = !DILocation(line: 1674, column: 31, scope: !6435)
!6444 = !DILocation(line: 1675, column: 10, scope: !6431)
!6445 = !DILocation(line: 1675, column: 8, scope: !6431)
!6446 = distinct !{!6446, !6428, !6447}
!6447 = !DILocation(line: 1676, column: 3, scope: !6423)
!6448 = !DILocation(line: 1677, column: 2, scope: !6423)
!6449 = !DILocation(line: 1678, column: 1, scope: !6331)
!6450 = distinct !DISubprogram(name: "EDBM_selectmode_convert", scope: !3, file: !3, line: 1752, type: !6451, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{null, !2675, !6453, !6453}
!6453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!6454 = !DILocalVariable(name: "em", arg: 1, scope: !6450, file: !3, line: 1752, type: !2675)
!6455 = !DILocation(line: 1752, column: 42, scope: !6450)
!6456 = !DILocalVariable(name: "selectmode_old", arg: 2, scope: !6450, file: !3, line: 1752, type: !6453)
!6457 = !DILocation(line: 1752, column: 58, scope: !6450)
!6458 = !DILocalVariable(name: "selectmode_new", arg: 3, scope: !6450, file: !3, line: 1752, type: !6453)
!6459 = !DILocation(line: 1752, column: 86, scope: !6450)
!6460 = !DILocalVariable(name: "bm", scope: !6450, file: !3, line: 1754, type: !739)
!6461 = !DILocation(line: 1754, column: 9, scope: !6450)
!6462 = !DILocation(line: 1754, column: 14, scope: !6450)
!6463 = !DILocation(line: 1754, column: 18, scope: !6450)
!6464 = !DILocalVariable(name: "eve", scope: !6450, file: !3, line: 1756, type: !620)
!6465 = !DILocation(line: 1756, column: 10, scope: !6450)
!6466 = !DILocalVariable(name: "eed", scope: !6450, file: !3, line: 1757, type: !681)
!6467 = !DILocation(line: 1757, column: 10, scope: !6450)
!6468 = !DILocalVariable(name: "efa", scope: !6450, file: !3, line: 1758, type: !685)
!6469 = !DILocation(line: 1758, column: 10, scope: !6450)
!6470 = !DILocalVariable(name: "iter", scope: !6450, file: !3, line: 1759, type: !3253)
!6471 = !DILocation(line: 1759, column: 9, scope: !6450)
!6472 = !DILocation(line: 1764, column: 6, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1764, column: 6)
!6474 = !DILocation(line: 1764, column: 21, scope: !6473)
!6475 = !DILocation(line: 1764, column: 6, scope: !6450)
!6476 = !DILocation(line: 1765, column: 7, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 1765, column: 7)
!6478 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 1764, column: 43)
!6479 = !DILocation(line: 1765, column: 11, scope: !6477)
!6480 = !DILocation(line: 1765, column: 22, scope: !6477)
!6481 = !DILocation(line: 1765, column: 7, scope: !6478)
!6482 = !DILocation(line: 1767, column: 3, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 1765, column: 28)
!6484 = !DILocation(line: 1768, column: 12, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 1768, column: 12)
!6486 = !DILocation(line: 1768, column: 27, scope: !6485)
!6487 = !DILocation(line: 1768, column: 12, scope: !6477)
!6488 = !DILocation(line: 1772, column: 4, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1772, column: 4)
!6490 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1768, column: 47)
!6491 = !DILocation(line: 1772, column: 4, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 1772, column: 4)
!6493 = !DILocation(line: 1773, column: 5, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1772, column: 52)
!6495 = !DILocation(line: 1774, column: 4, scope: !6494)
!6496 = distinct !{!6496, !6488, !6497}
!6497 = !DILocation(line: 1774, column: 4, scope: !6489)
!6498 = !DILocation(line: 1776, column: 4, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1776, column: 4)
!6500 = !DILocation(line: 1776, column: 4, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 1776, column: 4)
!6502 = !DILocation(line: 1777, column: 9, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 1777, column: 9)
!6504 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 1776, column: 52)
!6505 = !DILocation(line: 1777, column: 9, scope: !6504)
!6506 = !DILocation(line: 1778, column: 25, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 1777, column: 46)
!6508 = !DILocation(line: 1778, column: 29, scope: !6507)
!6509 = !DILocation(line: 1778, column: 6, scope: !6507)
!6510 = !DILocation(line: 1779, column: 5, scope: !6507)
!6511 = !DILocation(line: 1780, column: 4, scope: !6504)
!6512 = distinct !{!6512, !6498, !6513}
!6513 = !DILocation(line: 1780, column: 4, scope: !6499)
!6514 = !DILocation(line: 1781, column: 3, scope: !6490)
!6515 = !DILocation(line: 1782, column: 12, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1782, column: 12)
!6517 = !DILocation(line: 1782, column: 27, scope: !6516)
!6518 = !DILocation(line: 1782, column: 12, scope: !6485)
!6519 = !DILocation(line: 1786, column: 4, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 1786, column: 4)
!6521 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 1782, column: 47)
!6522 = !DILocation(line: 1786, column: 4, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 1786, column: 4)
!6524 = !DILocation(line: 1787, column: 5, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 1786, column: 52)
!6526 = !DILocation(line: 1788, column: 4, scope: !6525)
!6527 = distinct !{!6527, !6519, !6528}
!6528 = !DILocation(line: 1788, column: 4, scope: !6520)
!6529 = !DILocation(line: 1790, column: 4, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 1790, column: 4)
!6531 = !DILocation(line: 1790, column: 4, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1790, column: 4)
!6533 = !DILocation(line: 1791, column: 9, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1791, column: 9)
!6535 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1790, column: 52)
!6536 = !DILocation(line: 1791, column: 9, scope: !6535)
!6537 = !DILocation(line: 1792, column: 25, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 1791, column: 46)
!6539 = !DILocation(line: 1792, column: 29, scope: !6538)
!6540 = !DILocation(line: 1792, column: 6, scope: !6538)
!6541 = !DILocation(line: 1793, column: 5, scope: !6538)
!6542 = !DILocation(line: 1794, column: 4, scope: !6535)
!6543 = distinct !{!6543, !6529, !6544}
!6544 = !DILocation(line: 1794, column: 4, scope: !6530)
!6545 = !DILocation(line: 1795, column: 3, scope: !6521)
!6546 = !DILocation(line: 1796, column: 2, scope: !6478)
!6547 = !DILocation(line: 1797, column: 11, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 1797, column: 11)
!6549 = !DILocation(line: 1797, column: 26, scope: !6548)
!6550 = !DILocation(line: 1797, column: 11, scope: !6473)
!6551 = !DILocation(line: 1798, column: 7, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1798, column: 7)
!6553 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1797, column: 46)
!6554 = !DILocation(line: 1798, column: 11, scope: !6552)
!6555 = !DILocation(line: 1798, column: 22, scope: !6552)
!6556 = !DILocation(line: 1798, column: 7, scope: !6553)
!6557 = !DILocation(line: 1800, column: 3, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1798, column: 28)
!6559 = !DILocation(line: 1801, column: 12, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1801, column: 12)
!6561 = !DILocation(line: 1801, column: 27, scope: !6560)
!6562 = !DILocation(line: 1801, column: 12, scope: !6552)
!6563 = !DILocation(line: 1805, column: 4, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1805, column: 4)
!6565 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1801, column: 47)
!6566 = !DILocation(line: 1805, column: 4, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1805, column: 4)
!6568 = !DILocation(line: 1806, column: 5, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1805, column: 52)
!6570 = !DILocation(line: 1807, column: 4, scope: !6569)
!6571 = distinct !{!6571, !6563, !6572}
!6572 = !DILocation(line: 1807, column: 4, scope: !6564)
!6573 = !DILocation(line: 1809, column: 4, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1809, column: 4)
!6575 = !DILocation(line: 1809, column: 4, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1809, column: 4)
!6577 = !DILocation(line: 1810, column: 9, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 1810, column: 9)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 1809, column: 52)
!6580 = !DILocation(line: 1810, column: 9, scope: !6579)
!6581 = !DILocation(line: 1811, column: 25, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1810, column: 46)
!6583 = !DILocation(line: 1811, column: 29, scope: !6582)
!6584 = !DILocation(line: 1811, column: 6, scope: !6582)
!6585 = !DILocation(line: 1812, column: 5, scope: !6582)
!6586 = !DILocation(line: 1813, column: 4, scope: !6579)
!6587 = distinct !{!6587, !6573, !6588}
!6588 = !DILocation(line: 1813, column: 4, scope: !6574)
!6589 = !DILocation(line: 1814, column: 3, scope: !6565)
!6590 = !DILocation(line: 1815, column: 12, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1815, column: 12)
!6592 = !DILocation(line: 1815, column: 27, scope: !6591)
!6593 = !DILocation(line: 1815, column: 12, scope: !6560)
!6594 = !DILocation(line: 1818, column: 4, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1818, column: 4)
!6596 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 1815, column: 49)
!6597 = !DILocation(line: 1818, column: 4, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1818, column: 4)
!6599 = !DILocation(line: 1819, column: 40, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 1819, column: 9)
!6601 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1818, column: 52)
!6602 = !DILocation(line: 1819, column: 10, scope: !6600)
!6603 = !DILocation(line: 1819, column: 9, scope: !6601)
!6604 = !DILocation(line: 1820, column: 25, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1819, column: 68)
!6606 = !DILocation(line: 1820, column: 29, scope: !6605)
!6607 = !DILocation(line: 1820, column: 6, scope: !6605)
!6608 = !DILocation(line: 1821, column: 5, scope: !6605)
!6609 = !DILocation(line: 1822, column: 4, scope: !6601)
!6610 = distinct !{!6610, !6594, !6611}
!6611 = !DILocation(line: 1822, column: 4, scope: !6595)
!6612 = !DILocation(line: 1824, column: 27, scope: !6596)
!6613 = !DILocation(line: 1824, column: 4, scope: !6596)
!6614 = !DILocation(line: 1825, column: 3, scope: !6596)
!6615 = !DILocation(line: 1826, column: 2, scope: !6553)
!6616 = !DILocation(line: 1827, column: 11, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1827, column: 11)
!6618 = !DILocation(line: 1827, column: 26, scope: !6617)
!6619 = !DILocation(line: 1827, column: 11, scope: !6548)
!6620 = !DILocation(line: 1828, column: 7, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 1828, column: 7)
!6622 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1827, column: 46)
!6623 = !DILocation(line: 1828, column: 11, scope: !6621)
!6624 = !DILocation(line: 1828, column: 22, scope: !6621)
!6625 = !DILocation(line: 1828, column: 7, scope: !6622)
!6626 = !DILocation(line: 1830, column: 3, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 1828, column: 28)
!6628 = !DILocation(line: 1831, column: 12, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 1831, column: 12)
!6630 = !DILocation(line: 1831, column: 27, scope: !6629)
!6631 = !DILocation(line: 1831, column: 12, scope: !6621)
!6632 = !DILocation(line: 1834, column: 4, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 1834, column: 4)
!6634 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1831, column: 47)
!6635 = !DILocation(line: 1834, column: 4, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 1834, column: 4)
!6637 = !DILocation(line: 1835, column: 40, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 1835, column: 9)
!6639 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 1834, column: 52)
!6640 = !DILocation(line: 1835, column: 10, scope: !6638)
!6641 = !DILocation(line: 1835, column: 9, scope: !6639)
!6642 = !DILocation(line: 1836, column: 25, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1835, column: 68)
!6644 = !DILocation(line: 1836, column: 29, scope: !6643)
!6645 = !DILocation(line: 1836, column: 6, scope: !6643)
!6646 = !DILocation(line: 1837, column: 5, scope: !6643)
!6647 = !DILocation(line: 1838, column: 4, scope: !6639)
!6648 = distinct !{!6648, !6632, !6649}
!6649 = !DILocation(line: 1838, column: 4, scope: !6633)
!6650 = !DILocation(line: 1839, column: 3, scope: !6634)
!6651 = !DILocation(line: 1840, column: 12, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1840, column: 12)
!6653 = !DILocation(line: 1840, column: 27, scope: !6652)
!6654 = !DILocation(line: 1840, column: 12, scope: !6629)
!6655 = !DILocation(line: 1843, column: 4, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 1843, column: 4)
!6657 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 1840, column: 49)
!6658 = !DILocation(line: 1843, column: 4, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 1843, column: 4)
!6660 = !DILocation(line: 1844, column: 40, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 1844, column: 9)
!6662 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 1843, column: 52)
!6663 = !DILocation(line: 1844, column: 10, scope: !6661)
!6664 = !DILocation(line: 1844, column: 9, scope: !6662)
!6665 = !DILocation(line: 1845, column: 25, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 1844, column: 68)
!6667 = !DILocation(line: 1845, column: 29, scope: !6666)
!6668 = !DILocation(line: 1845, column: 6, scope: !6666)
!6669 = !DILocation(line: 1846, column: 5, scope: !6666)
!6670 = !DILocation(line: 1847, column: 4, scope: !6662)
!6671 = distinct !{!6671, !6655, !6672}
!6672 = !DILocation(line: 1847, column: 4, scope: !6656)
!6673 = !DILocation(line: 1849, column: 27, scope: !6657)
!6674 = !DILocation(line: 1849, column: 4, scope: !6657)
!6675 = !DILocation(line: 1850, column: 3, scope: !6657)
!6676 = !DILocation(line: 1851, column: 2, scope: !6622)
!6677 = !DILocation(line: 1852, column: 1, scope: !6450)
!6678 = distinct !DISubprogram(name: "EDBM_selectmode_toggle", scope: !3, file: !3, line: 1855, type: !6679, scopeLine: 1857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{!813, !4980, !6453, !3570, !3057, !3057}
!6681 = !DILocalVariable(name: "C", arg: 1, scope: !6678, file: !3, line: 1855, type: !4980)
!6682 = !DILocation(line: 1855, column: 39, scope: !6678)
!6683 = !DILocalVariable(name: "selectmode_new", arg: 2, scope: !6678, file: !3, line: 1855, type: !6453)
!6684 = !DILocation(line: 1855, column: 54, scope: !6678)
!6685 = !DILocalVariable(name: "action", arg: 3, scope: !6678, file: !3, line: 1856, type: !3570)
!6686 = !DILocation(line: 1856, column: 39, scope: !6678)
!6687 = !DILocalVariable(name: "use_extend", arg: 4, scope: !6678, file: !3, line: 1856, type: !3057)
!6688 = !DILocation(line: 1856, column: 58, scope: !6678)
!6689 = !DILocalVariable(name: "use_expand", arg: 5, scope: !6678, file: !3, line: 1856, type: !3057)
!6690 = !DILocation(line: 1856, column: 81, scope: !6678)
!6691 = !DILocalVariable(name: "ts", scope: !6678, file: !3, line: 1858, type: !4989)
!6692 = !DILocation(line: 1858, column: 16, scope: !6678)
!6693 = !DILocation(line: 1858, column: 44, scope: !6678)
!6694 = !DILocation(line: 1858, column: 21, scope: !6678)
!6695 = !DILocalVariable(name: "obedit", scope: !6678, file: !3, line: 1859, type: !3615)
!6696 = !DILocation(line: 1859, column: 10, scope: !6678)
!6697 = !DILocation(line: 1859, column: 40, scope: !6678)
!6698 = !DILocation(line: 1859, column: 19, scope: !6678)
!6699 = !DILocalVariable(name: "em", scope: !6678, file: !3, line: 1860, type: !2675)
!6700 = !DILocation(line: 1860, column: 14, scope: !6678)
!6701 = !DILocalVariable(name: "ret", scope: !6678, file: !3, line: 1861, type: !813)
!6702 = !DILocation(line: 1861, column: 7, scope: !6678)
!6703 = !DILocation(line: 1863, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1863, column: 6)
!6705 = !DILocation(line: 1863, column: 13, scope: !6704)
!6706 = !DILocation(line: 1863, column: 16, scope: !6704)
!6707 = !DILocation(line: 1863, column: 24, scope: !6704)
!6708 = !DILocation(line: 1863, column: 29, scope: !6704)
!6709 = !DILocation(line: 1863, column: 6, scope: !6678)
!6710 = !DILocation(line: 1864, column: 33, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1863, column: 41)
!6712 = !DILocation(line: 1864, column: 8, scope: !6711)
!6713 = !DILocation(line: 1864, column: 6, scope: !6711)
!6714 = !DILocation(line: 1865, column: 2, scope: !6711)
!6715 = !DILocation(line: 1867, column: 6, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1867, column: 6)
!6717 = !DILocation(line: 1867, column: 9, scope: !6716)
!6718 = !DILocation(line: 1867, column: 6, scope: !6678)
!6719 = !DILocation(line: 1868, column: 10, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 1867, column: 18)
!6721 = !DILocation(line: 1868, column: 3, scope: !6720)
!6722 = !DILocation(line: 1871, column: 10, scope: !6678)
!6723 = !DILocation(line: 1871, column: 2, scope: !6678)
!6724 = !DILocation(line: 1874, column: 4, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1871, column: 18)
!6726 = !DILocation(line: 1877, column: 9, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1877, column: 8)
!6728 = !DILocation(line: 1877, column: 13, scope: !6727)
!6729 = !DILocation(line: 1877, column: 26, scope: !6727)
!6730 = !DILocation(line: 1877, column: 24, scope: !6727)
!6731 = !DILocation(line: 1877, column: 42, scope: !6727)
!6732 = !DILocation(line: 1877, column: 8, scope: !6725)
!6733 = !DILocation(line: 1878, column: 5, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 1877, column: 48)
!6735 = !DILocation(line: 1880, column: 23, scope: !6725)
!6736 = !DILocation(line: 1880, column: 22, scope: !6725)
!6737 = !DILocation(line: 1880, column: 4, scope: !6725)
!6738 = !DILocation(line: 1880, column: 8, scope: !6725)
!6739 = !DILocation(line: 1880, column: 19, scope: !6725)
!6740 = !DILocation(line: 1881, column: 4, scope: !6725)
!6741 = !DILocation(line: 1884, column: 9, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1884, column: 8)
!6743 = !DILocation(line: 1884, column: 13, scope: !6742)
!6744 = !DILocation(line: 1884, column: 26, scope: !6742)
!6745 = !DILocation(line: 1884, column: 24, scope: !6742)
!6746 = !DILocation(line: 1884, column: 42, scope: !6742)
!6747 = !DILocation(line: 1884, column: 8, scope: !6725)
!6748 = !DILocation(line: 1885, column: 5, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 1884, column: 48)
!6750 = !DILocation(line: 1887, column: 22, scope: !6725)
!6751 = !DILocation(line: 1887, column: 4, scope: !6725)
!6752 = !DILocation(line: 1887, column: 8, scope: !6725)
!6753 = !DILocation(line: 1887, column: 19, scope: !6725)
!6754 = !DILocation(line: 1888, column: 4, scope: !6725)
!6755 = !DILocation(line: 1891, column: 8, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1891, column: 8)
!6757 = !DILocation(line: 1891, column: 12, scope: !6756)
!6758 = !DILocation(line: 1891, column: 26, scope: !6756)
!6759 = !DILocation(line: 1891, column: 23, scope: !6756)
!6760 = !DILocation(line: 1891, column: 8, scope: !6725)
!6761 = !DILocation(line: 1892, column: 5, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1891, column: 42)
!6763 = !DILocation(line: 1894, column: 22, scope: !6725)
!6764 = !DILocation(line: 1894, column: 4, scope: !6725)
!6765 = !DILocation(line: 1894, column: 8, scope: !6725)
!6766 = !DILocation(line: 1894, column: 19, scope: !6725)
!6767 = !DILocation(line: 1895, column: 4, scope: !6725)
!6768 = !DILocation(line: 1898, column: 4, scope: !6725)
!6769 = !DILocation(line: 1901, column: 6, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1901, column: 6)
!6771 = !DILocation(line: 1901, column: 17, scope: !6770)
!6772 = !DILocation(line: 1901, column: 22, scope: !6770)
!6773 = !DILocation(line: 1901, column: 25, scope: !6770)
!6774 = !DILocation(line: 1901, column: 29, scope: !6770)
!6775 = !DILocation(line: 1901, column: 40, scope: !6770)
!6776 = !DILocation(line: 1901, column: 6, scope: !6678)
!6777 = !DILocation(line: 1902, column: 7, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1902, column: 7)
!6779 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 1901, column: 46)
!6780 = !DILocation(line: 1902, column: 7, scope: !6779)
!6781 = !DILocalVariable(name: "selmode_max", scope: !6782, file: !3, line: 1903, type: !6453)
!6782 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1902, column: 19)
!6783 = !DILocation(line: 1903, column: 16, scope: !6782)
!6784 = !DILocation(line: 1903, column: 50, scope: !6782)
!6785 = !DILocation(line: 1903, column: 54, scope: !6782)
!6786 = !DILocation(line: 1903, column: 30, scope: !6782)
!6787 = !DILocation(line: 1904, column: 28, scope: !6782)
!6788 = !DILocation(line: 1904, column: 32, scope: !6782)
!6789 = !DILocation(line: 1904, column: 45, scope: !6782)
!6790 = !DILocation(line: 1904, column: 4, scope: !6782)
!6791 = !DILocation(line: 1905, column: 3, scope: !6782)
!6792 = !DILocation(line: 1906, column: 2, scope: !6779)
!6793 = !DILocation(line: 1908, column: 10, scope: !6678)
!6794 = !DILocation(line: 1908, column: 2, scope: !6678)
!6795 = !DILocation(line: 1910, column: 8, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1910, column: 8)
!6797 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1908, column: 26)
!6798 = !DILocation(line: 1910, column: 19, scope: !6796)
!6799 = !DILocation(line: 1910, column: 24, scope: !6796)
!6800 = !DILocation(line: 1910, column: 27, scope: !6796)
!6801 = !DILocation(line: 1910, column: 31, scope: !6796)
!6802 = !DILocation(line: 1910, column: 42, scope: !6796)
!6803 = !DILocation(line: 1910, column: 8, scope: !6797)
!6804 = !DILocation(line: 1911, column: 5, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 1910, column: 48)
!6806 = !DILocation(line: 1911, column: 9, scope: !6805)
!6807 = !DILocation(line: 1911, column: 20, scope: !6805)
!6808 = !DILocation(line: 1912, column: 4, scope: !6805)
!6809 = !DILocation(line: 1913, column: 21, scope: !6797)
!6810 = !DILocation(line: 1913, column: 25, scope: !6797)
!6811 = !DILocation(line: 1913, column: 4, scope: !6797)
!6812 = !DILocation(line: 1913, column: 8, scope: !6797)
!6813 = !DILocation(line: 1913, column: 19, scope: !6797)
!6814 = !DILocation(line: 1914, column: 24, scope: !6797)
!6815 = !DILocation(line: 1914, column: 4, scope: !6797)
!6816 = !DILocation(line: 1915, column: 8, scope: !6797)
!6817 = !DILocation(line: 1916, column: 4, scope: !6797)
!6818 = !DILocation(line: 1918, column: 8, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1918, column: 8)
!6820 = !DILocation(line: 1918, column: 19, scope: !6819)
!6821 = !DILocation(line: 1918, column: 24, scope: !6819)
!6822 = !DILocation(line: 1918, column: 27, scope: !6819)
!6823 = !DILocation(line: 1918, column: 31, scope: !6819)
!6824 = !DILocation(line: 1918, column: 42, scope: !6819)
!6825 = !DILocation(line: 1918, column: 8, scope: !6797)
!6826 = !DILocation(line: 1919, column: 5, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 1918, column: 48)
!6828 = !DILocation(line: 1919, column: 9, scope: !6827)
!6829 = !DILocation(line: 1919, column: 20, scope: !6827)
!6830 = !DILocation(line: 1920, column: 4, scope: !6827)
!6831 = !DILocation(line: 1921, column: 21, scope: !6797)
!6832 = !DILocation(line: 1921, column: 25, scope: !6797)
!6833 = !DILocation(line: 1921, column: 4, scope: !6797)
!6834 = !DILocation(line: 1921, column: 8, scope: !6797)
!6835 = !DILocation(line: 1921, column: 19, scope: !6797)
!6836 = !DILocation(line: 1922, column: 24, scope: !6797)
!6837 = !DILocation(line: 1922, column: 4, scope: !6797)
!6838 = !DILocation(line: 1923, column: 8, scope: !6797)
!6839 = !DILocation(line: 1924, column: 4, scope: !6797)
!6840 = !DILocation(line: 1926, column: 8, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1926, column: 8)
!6842 = !DILocation(line: 1926, column: 19, scope: !6841)
!6843 = !DILocation(line: 1926, column: 24, scope: !6841)
!6844 = !DILocation(line: 1926, column: 27, scope: !6841)
!6845 = !DILocation(line: 1926, column: 31, scope: !6841)
!6846 = !DILocation(line: 1926, column: 42, scope: !6841)
!6847 = !DILocation(line: 1926, column: 8, scope: !6797)
!6848 = !DILocation(line: 1927, column: 5, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 1926, column: 48)
!6850 = !DILocation(line: 1927, column: 9, scope: !6849)
!6851 = !DILocation(line: 1927, column: 20, scope: !6849)
!6852 = !DILocation(line: 1928, column: 4, scope: !6849)
!6853 = !DILocation(line: 1929, column: 21, scope: !6797)
!6854 = !DILocation(line: 1929, column: 25, scope: !6797)
!6855 = !DILocation(line: 1929, column: 4, scope: !6797)
!6856 = !DILocation(line: 1929, column: 8, scope: !6797)
!6857 = !DILocation(line: 1929, column: 19, scope: !6797)
!6858 = !DILocation(line: 1930, column: 24, scope: !6797)
!6859 = !DILocation(line: 1930, column: 4, scope: !6797)
!6860 = !DILocation(line: 1931, column: 8, scope: !6797)
!6861 = !DILocation(line: 1932, column: 4, scope: !6797)
!6862 = !DILocation(line: 1935, column: 4, scope: !6797)
!6863 = !DILocation(line: 1938, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1938, column: 6)
!6865 = !DILocation(line: 1938, column: 10, scope: !6864)
!6866 = !DILocation(line: 1938, column: 6, scope: !6678)
!6867 = !DILocation(line: 1939, column: 25, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1938, column: 19)
!6869 = !DILocation(line: 1939, column: 49, scope: !6868)
!6870 = !DILocation(line: 1939, column: 57, scope: !6868)
!6871 = !DILocation(line: 1939, column: 3, scope: !6868)
!6872 = !DILocation(line: 1940, column: 3, scope: !6868)
!6873 = !DILocation(line: 1941, column: 2, scope: !6868)
!6874 = !DILocation(line: 1943, column: 9, scope: !6678)
!6875 = !DILocation(line: 1943, column: 2, scope: !6678)
!6876 = !DILocation(line: 1944, column: 1, scope: !6678)
!6877 = distinct !DISubprogram(name: "highest_order_bit_s", scope: !6878, file: !6878, line: 193, type: !6879, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6878 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6879 = !DISubroutineType(types: !6880)
!6880 = !{!1037, !1037}
!6881 = !DILocalVariable(name: "n", arg: 1, scope: !6877, file: !6878, line: 193, type: !1037)
!6882 = !DILocation(line: 193, column: 59, scope: !6877)
!6883 = !DILocation(line: 195, column: 8, scope: !6877)
!6884 = !DILocation(line: 195, column: 10, scope: !6877)
!6885 = !DILocation(line: 195, column: 4, scope: !6877)
!6886 = !DILocation(line: 196, column: 8, scope: !6877)
!6887 = !DILocation(line: 196, column: 10, scope: !6877)
!6888 = !DILocation(line: 196, column: 4, scope: !6877)
!6889 = !DILocation(line: 197, column: 8, scope: !6877)
!6890 = !DILocation(line: 197, column: 10, scope: !6877)
!6891 = !DILocation(line: 197, column: 4, scope: !6877)
!6892 = !DILocation(line: 198, column: 8, scope: !6877)
!6893 = !DILocation(line: 198, column: 10, scope: !6877)
!6894 = !DILocation(line: 198, column: 4, scope: !6877)
!6895 = !DILocation(line: 199, column: 26, scope: !6877)
!6896 = !DILocation(line: 199, column: 31, scope: !6877)
!6897 = !DILocation(line: 199, column: 33, scope: !6877)
!6898 = !DILocation(line: 199, column: 28, scope: !6877)
!6899 = !DILocation(line: 199, column: 9, scope: !6877)
!6900 = !DILocation(line: 199, column: 2, scope: !6877)
!6901 = distinct !DISubprogram(name: "EDBM_selectmode_disable", scope: !3, file: !3, line: 1952, type: !6902, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{!813, !3613, !2675, !6453, !6453}
!6904 = !DILocalVariable(name: "scene", arg: 1, scope: !6901, file: !3, line: 1952, type: !3613)
!6905 = !DILocation(line: 1952, column: 37, scope: !6901)
!6906 = !DILocalVariable(name: "em", arg: 2, scope: !6901, file: !3, line: 1952, type: !2675)
!6907 = !DILocation(line: 1952, column: 56, scope: !6901)
!6908 = !DILocalVariable(name: "selectmode_disable", arg: 3, scope: !6901, file: !3, line: 1953, type: !6453)
!6909 = !DILocation(line: 1953, column: 42, scope: !6901)
!6910 = !DILocalVariable(name: "selectmode_fallback", arg: 4, scope: !6901, file: !3, line: 1954, type: !6453)
!6911 = !DILocation(line: 1954, column: 42, scope: !6901)
!6912 = !DILocation(line: 1958, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1958, column: 6)
!6914 = !DILocation(line: 1958, column: 10, scope: !6913)
!6915 = !DILocation(line: 1958, column: 23, scope: !6913)
!6916 = !DILocation(line: 1958, column: 21, scope: !6913)
!6917 = !DILocation(line: 1958, column: 6, scope: !6901)
!6918 = !DILocation(line: 1959, column: 7, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !3, line: 1959, column: 7)
!6920 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1958, column: 43)
!6921 = !DILocation(line: 1959, column: 11, scope: !6919)
!6922 = !DILocation(line: 1959, column: 25, scope: !6919)
!6923 = !DILocation(line: 1959, column: 22, scope: !6919)
!6924 = !DILocation(line: 1959, column: 7, scope: !6920)
!6925 = !DILocation(line: 1960, column: 21, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1959, column: 45)
!6927 = !DILocation(line: 1960, column: 4, scope: !6926)
!6928 = !DILocation(line: 1960, column: 8, scope: !6926)
!6929 = !DILocation(line: 1960, column: 19, scope: !6926)
!6930 = !DILocation(line: 1961, column: 3, scope: !6926)
!6931 = !DILocation(line: 1963, column: 23, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1962, column: 8)
!6933 = !DILocation(line: 1963, column: 22, scope: !6932)
!6934 = !DILocation(line: 1963, column: 4, scope: !6932)
!6935 = !DILocation(line: 1963, column: 8, scope: !6932)
!6936 = !DILocation(line: 1963, column: 19, scope: !6932)
!6937 = !DILocation(line: 1965, column: 37, scope: !6920)
!6938 = !DILocation(line: 1965, column: 41, scope: !6920)
!6939 = !DILocation(line: 1965, column: 3, scope: !6920)
!6940 = !DILocation(line: 1965, column: 10, scope: !6920)
!6941 = !DILocation(line: 1965, column: 24, scope: !6920)
!6942 = !DILocation(line: 1965, column: 35, scope: !6920)
!6943 = !DILocation(line: 1966, column: 23, scope: !6920)
!6944 = !DILocation(line: 1966, column: 3, scope: !6920)
!6945 = !DILocation(line: 1968, column: 52, scope: !6920)
!6946 = !DILocation(line: 1968, column: 3, scope: !6920)
!6947 = !DILocation(line: 1970, column: 3, scope: !6920)
!6948 = !DILocation(line: 1973, column: 3, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1972, column: 7)
!6950 = !DILocation(line: 1975, column: 1, scope: !6901)
!6951 = distinct !DISubprogram(name: "EDBM_deselect_by_material", scope: !3, file: !3, line: 1977, type: !6952, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{null, !2675, !6453, !3057}
!6954 = !DILocalVariable(name: "em", arg: 1, scope: !6951, file: !3, line: 1977, type: !2675)
!6955 = !DILocation(line: 1977, column: 44, scope: !6951)
!6956 = !DILocalVariable(name: "index", arg: 2, scope: !6951, file: !3, line: 1977, type: !6453)
!6957 = !DILocation(line: 1977, column: 60, scope: !6951)
!6958 = !DILocalVariable(name: "select", arg: 3, scope: !6951, file: !3, line: 1977, type: !3057)
!6959 = !DILocation(line: 1977, column: 78, scope: !6951)
!6960 = !DILocalVariable(name: "iter", scope: !6951, file: !3, line: 1979, type: !3253)
!6961 = !DILocation(line: 1979, column: 9, scope: !6951)
!6962 = !DILocalVariable(name: "efa", scope: !6951, file: !3, line: 1980, type: !685)
!6963 = !DILocation(line: 1980, column: 10, scope: !6951)
!6964 = !DILocation(line: 1982, column: 2, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 1982, column: 2)
!6966 = !DILocation(line: 1982, column: 2, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1982, column: 2)
!6968 = !DILocation(line: 1983, column: 7, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 1983, column: 7)
!6970 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 1982, column: 54)
!6971 = !DILocation(line: 1983, column: 7, scope: !6970)
!6972 = !DILocation(line: 1984, column: 4, scope: !6969)
!6973 = !DILocation(line: 1985, column: 7, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 1985, column: 7)
!6975 = !DILocation(line: 1985, column: 12, scope: !6974)
!6976 = !DILocation(line: 1985, column: 22, scope: !6974)
!6977 = !DILocation(line: 1985, column: 19, scope: !6974)
!6978 = !DILocation(line: 1985, column: 7, scope: !6970)
!6979 = !DILocation(line: 1986, column: 23, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 1985, column: 29)
!6981 = !DILocation(line: 1986, column: 27, scope: !6980)
!6982 = !DILocation(line: 1986, column: 31, scope: !6980)
!6983 = !DILocation(line: 1986, column: 36, scope: !6980)
!6984 = !DILocation(line: 1986, column: 4, scope: !6980)
!6985 = !DILocation(line: 1987, column: 3, scope: !6980)
!6986 = !DILocation(line: 1988, column: 2, scope: !6970)
!6987 = distinct !{!6987, !6964, !6988}
!6988 = !DILocation(line: 1988, column: 2, scope: !6965)
!6989 = !DILocation(line: 1989, column: 1, scope: !6951)
!6990 = distinct !DISubprogram(name: "EDBM_select_toggle_all", scope: !3, file: !3, line: 1991, type: !6188, scopeLine: 1992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!6991 = !DILocalVariable(name: "em", arg: 1, scope: !6990, file: !3, line: 1991, type: !2675)
!6992 = !DILocation(line: 1991, column: 41, scope: !6990)
!6993 = !DILocation(line: 1993, column: 6, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 1993, column: 6)
!6995 = !DILocation(line: 1993, column: 10, scope: !6994)
!6996 = !DILocation(line: 1993, column: 14, scope: !6994)
!6997 = !DILocation(line: 1993, column: 25, scope: !6994)
!6998 = !DILocation(line: 1993, column: 28, scope: !6994)
!6999 = !DILocation(line: 1993, column: 32, scope: !6994)
!7000 = !DILocation(line: 1993, column: 36, scope: !6994)
!7001 = !DILocation(line: 1993, column: 47, scope: !6994)
!7002 = !DILocation(line: 1993, column: 50, scope: !6994)
!7003 = !DILocation(line: 1993, column: 54, scope: !6994)
!7004 = !DILocation(line: 1993, column: 58, scope: !6994)
!7005 = !DILocation(line: 1993, column: 6, scope: !6990)
!7006 = !DILocation(line: 1994, column: 25, scope: !6994)
!7007 = !DILocation(line: 1994, column: 3, scope: !6994)
!7008 = !DILocation(line: 1996, column: 24, scope: !6994)
!7009 = !DILocation(line: 1996, column: 3, scope: !6994)
!7010 = !DILocation(line: 1997, column: 1, scope: !6990)
!7011 = distinct !DISubprogram(name: "EDBM_select_swap", scope: !3, file: !3, line: 1999, type: !6188, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7012 = !DILocalVariable(name: "em", arg: 1, scope: !7011, file: !3, line: 1999, type: !2675)
!7013 = !DILocation(line: 1999, column: 35, scope: !7011)
!7014 = !DILocalVariable(name: "iter", scope: !7011, file: !3, line: 2001, type: !3253)
!7015 = !DILocation(line: 2001, column: 9, scope: !7011)
!7016 = !DILocalVariable(name: "eve", scope: !7011, file: !3, line: 2002, type: !620)
!7017 = !DILocation(line: 2002, column: 10, scope: !7011)
!7018 = !DILocalVariable(name: "eed", scope: !7011, file: !3, line: 2003, type: !681)
!7019 = !DILocation(line: 2003, column: 10, scope: !7011)
!7020 = !DILocalVariable(name: "efa", scope: !7011, file: !3, line: 2004, type: !685)
!7021 = !DILocation(line: 2004, column: 10, scope: !7011)
!7022 = !DILocation(line: 2006, column: 6, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 2006, column: 6)
!7024 = !DILocation(line: 2006, column: 10, scope: !7023)
!7025 = !DILocation(line: 2006, column: 14, scope: !7023)
!7026 = !DILocation(line: 2006, column: 25, scope: !7023)
!7027 = !DILocation(line: 2006, column: 6, scope: !7011)
!7028 = !DILocation(line: 2007, column: 3, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 2007, column: 3)
!7030 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 2006, column: 46)
!7031 = !DILocation(line: 2007, column: 3, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 2007, column: 3)
!7033 = !DILocation(line: 2008, column: 8, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 2008, column: 8)
!7035 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 2007, column: 55)
!7036 = !DILocation(line: 2008, column: 8, scope: !7035)
!7037 = !DILocation(line: 2009, column: 5, scope: !7034)
!7038 = !DILocation(line: 2010, column: 23, scope: !7035)
!7039 = !DILocation(line: 2010, column: 27, scope: !7035)
!7040 = !DILocation(line: 2010, column: 31, scope: !7035)
!7041 = !DILocation(line: 2010, column: 37, scope: !7035)
!7042 = !DILocation(line: 2010, column: 36, scope: !7035)
!7043 = !DILocation(line: 2010, column: 4, scope: !7035)
!7044 = !DILocation(line: 2011, column: 3, scope: !7035)
!7045 = distinct !{!7045, !7028, !7046}
!7046 = !DILocation(line: 2011, column: 3, scope: !7029)
!7047 = !DILocation(line: 2012, column: 2, scope: !7030)
!7048 = !DILocation(line: 2013, column: 11, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 2013, column: 11)
!7050 = !DILocation(line: 2013, column: 15, scope: !7049)
!7051 = !DILocation(line: 2013, column: 26, scope: !7049)
!7052 = !DILocation(line: 2013, column: 11, scope: !7023)
!7053 = !DILocation(line: 2014, column: 3, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 2014, column: 3)
!7055 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 2013, column: 45)
!7056 = !DILocation(line: 2014, column: 3, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 2014, column: 3)
!7058 = !DILocation(line: 2015, column: 8, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 2015, column: 8)
!7060 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 2014, column: 55)
!7061 = !DILocation(line: 2015, column: 8, scope: !7060)
!7062 = !DILocation(line: 2016, column: 5, scope: !7059)
!7063 = !DILocation(line: 2017, column: 23, scope: !7060)
!7064 = !DILocation(line: 2017, column: 27, scope: !7060)
!7065 = !DILocation(line: 2017, column: 31, scope: !7060)
!7066 = !DILocation(line: 2017, column: 37, scope: !7060)
!7067 = !DILocation(line: 2017, column: 36, scope: !7060)
!7068 = !DILocation(line: 2017, column: 4, scope: !7060)
!7069 = !DILocation(line: 2018, column: 3, scope: !7060)
!7070 = distinct !{!7070, !7053, !7071}
!7071 = !DILocation(line: 2018, column: 3, scope: !7054)
!7072 = !DILocation(line: 2019, column: 2, scope: !7055)
!7073 = !DILocation(line: 2021, column: 3, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 2021, column: 3)
!7075 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 2020, column: 7)
!7076 = !DILocation(line: 2021, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 2021, column: 3)
!7078 = !DILocation(line: 2022, column: 8, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 2022, column: 8)
!7080 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 2021, column: 55)
!7081 = !DILocation(line: 2022, column: 8, scope: !7080)
!7082 = !DILocation(line: 2023, column: 5, scope: !7079)
!7083 = !DILocation(line: 2024, column: 23, scope: !7080)
!7084 = !DILocation(line: 2024, column: 27, scope: !7080)
!7085 = !DILocation(line: 2024, column: 31, scope: !7080)
!7086 = !DILocation(line: 2024, column: 37, scope: !7080)
!7087 = !DILocation(line: 2024, column: 36, scope: !7080)
!7088 = !DILocation(line: 2024, column: 4, scope: !7080)
!7089 = !DILocation(line: 2025, column: 3, scope: !7080)
!7090 = distinct !{!7090, !7073, !7091}
!7091 = !DILocation(line: 2025, column: 3, scope: !7074)
!7092 = !DILocation(line: 2029, column: 1, scope: !7011)
!7093 = distinct !DISubprogram(name: "EDBM_select_interior_faces", scope: !3, file: !3, line: 2031, type: !7094, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{!813, !2675}
!7096 = !DILocalVariable(name: "em", arg: 1, scope: !7093, file: !3, line: 2031, type: !2675)
!7097 = !DILocation(line: 2031, column: 45, scope: !7093)
!7098 = !DILocalVariable(name: "bm", scope: !7093, file: !3, line: 2033, type: !739)
!7099 = !DILocation(line: 2033, column: 9, scope: !7093)
!7100 = !DILocation(line: 2033, column: 14, scope: !7093)
!7101 = !DILocation(line: 2033, column: 18, scope: !7093)
!7102 = !DILocalVariable(name: "iter", scope: !7093, file: !3, line: 2034, type: !3253)
!7103 = !DILocation(line: 2034, column: 9, scope: !7093)
!7104 = !DILocalVariable(name: "eiter", scope: !7093, file: !3, line: 2035, type: !3253)
!7105 = !DILocation(line: 2035, column: 9, scope: !7093)
!7106 = !DILocalVariable(name: "efa", scope: !7093, file: !3, line: 2036, type: !685)
!7107 = !DILocation(line: 2036, column: 10, scope: !7093)
!7108 = !DILocalVariable(name: "eed", scope: !7093, file: !3, line: 2037, type: !681)
!7109 = !DILocation(line: 2037, column: 10, scope: !7093)
!7110 = !DILocalVariable(name: "ok", scope: !7093, file: !3, line: 2038, type: !813)
!7111 = !DILocation(line: 2038, column: 7, scope: !7093)
!7112 = !DILocalVariable(name: "changed", scope: !7093, file: !3, line: 2039, type: !813)
!7113 = !DILocation(line: 2039, column: 7, scope: !7093)
!7114 = !DILocation(line: 2041, column: 2, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 2041, column: 2)
!7116 = !DILocation(line: 2041, column: 2, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 2041, column: 2)
!7118 = !DILocation(line: 2042, column: 7, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 2042, column: 7)
!7120 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 2041, column: 54)
!7121 = !DILocation(line: 2042, column: 7, scope: !7120)
!7122 = !DILocation(line: 2043, column: 4, scope: !7119)
!7123 = !DILocation(line: 2046, column: 6, scope: !7120)
!7124 = !DILocation(line: 2047, column: 3, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 2047, column: 3)
!7126 = !DILocation(line: 2047, column: 3, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 2047, column: 3)
!7128 = !DILocation(line: 2048, column: 27, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2048, column: 8)
!7130 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2047, column: 53)
!7131 = !DILocation(line: 2048, column: 8, scope: !7129)
!7132 = !DILocation(line: 2048, column: 32, scope: !7129)
!7133 = !DILocation(line: 2048, column: 8, scope: !7130)
!7134 = !DILocation(line: 2049, column: 8, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 2048, column: 37)
!7136 = !DILocation(line: 2050, column: 5, scope: !7135)
!7137 = !DILocation(line: 2052, column: 3, scope: !7130)
!7138 = distinct !{!7138, !7124, !7139}
!7139 = !DILocation(line: 2052, column: 3, scope: !7125)
!7140 = !DILocation(line: 2054, column: 7, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 2054, column: 7)
!7142 = !DILocation(line: 2054, column: 7, scope: !7120)
!7143 = !DILocation(line: 2055, column: 23, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 2054, column: 11)
!7145 = !DILocation(line: 2055, column: 27, scope: !7144)
!7146 = !DILocation(line: 2055, column: 4, scope: !7144)
!7147 = !DILocation(line: 2056, column: 12, scope: !7144)
!7148 = !DILocation(line: 2057, column: 3, scope: !7144)
!7149 = !DILocation(line: 2058, column: 2, scope: !7120)
!7150 = distinct !{!7150, !7114, !7151}
!7151 = !DILocation(line: 2058, column: 2, scope: !7115)
!7152 = !DILocation(line: 2060, column: 9, scope: !7093)
!7153 = !DILocation(line: 2060, column: 2, scope: !7093)
!7154 = distinct !DISubprogram(name: "MESH_OT_select_linked", scope: !3, file: !3, line: 2157, type: !3071, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7155 = !DILocalVariable(name: "ot", arg: 1, scope: !7154, file: !3, line: 2157, type: !3073)
!7156 = !DILocation(line: 2157, column: 44, scope: !7154)
!7157 = !DILocation(line: 2160, column: 2, scope: !7154)
!7158 = !DILocation(line: 2160, column: 6, scope: !7154)
!7159 = !DILocation(line: 2160, column: 11, scope: !7154)
!7160 = !DILocation(line: 2161, column: 2, scope: !7154)
!7161 = !DILocation(line: 2161, column: 6, scope: !7154)
!7162 = !DILocation(line: 2161, column: 13, scope: !7154)
!7163 = !DILocation(line: 2162, column: 2, scope: !7154)
!7164 = !DILocation(line: 2162, column: 6, scope: !7154)
!7165 = !DILocation(line: 2162, column: 18, scope: !7154)
!7166 = !DILocation(line: 2165, column: 2, scope: !7154)
!7167 = !DILocation(line: 2165, column: 6, scope: !7154)
!7168 = !DILocation(line: 2165, column: 11, scope: !7154)
!7169 = !DILocation(line: 2166, column: 2, scope: !7154)
!7170 = !DILocation(line: 2166, column: 6, scope: !7154)
!7171 = !DILocation(line: 2166, column: 11, scope: !7154)
!7172 = !DILocation(line: 2169, column: 2, scope: !7154)
!7173 = !DILocation(line: 2169, column: 6, scope: !7154)
!7174 = !DILocation(line: 2169, column: 11, scope: !7154)
!7175 = !DILocation(line: 2171, column: 18, scope: !7154)
!7176 = !DILocation(line: 2171, column: 22, scope: !7154)
!7177 = !DILocation(line: 2171, column: 2, scope: !7154)
!7178 = !DILocation(line: 2172, column: 1, scope: !7154)
!7179 = distinct !DISubprogram(name: "edbm_select_linked_exec", scope: !3, file: !3, line: 2078, type: !4978, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7180 = !DILocalVariable(name: "C", arg: 1, scope: !7179, file: !3, line: 2078, type: !4980)
!7181 = !DILocation(line: 2078, column: 46, scope: !7179)
!7182 = !DILocalVariable(name: "op", arg: 2, scope: !7179, file: !3, line: 2078, type: !4982)
!7183 = !DILocation(line: 2078, column: 61, scope: !7179)
!7184 = !DILocalVariable(name: "obedit", scope: !7179, file: !3, line: 2080, type: !3615)
!7185 = !DILocation(line: 2080, column: 10, scope: !7179)
!7186 = !DILocation(line: 2080, column: 40, scope: !7179)
!7187 = !DILocation(line: 2080, column: 19, scope: !7179)
!7188 = !DILocalVariable(name: "em", scope: !7179, file: !3, line: 2081, type: !2675)
!7189 = !DILocation(line: 2081, column: 14, scope: !7179)
!7190 = !DILocation(line: 2081, column: 44, scope: !7179)
!7191 = !DILocation(line: 2081, column: 19, scope: !7179)
!7192 = !DILocalVariable(name: "bm", scope: !7179, file: !3, line: 2082, type: !739)
!7193 = !DILocation(line: 2082, column: 9, scope: !7179)
!7194 = !DILocation(line: 2082, column: 14, scope: !7179)
!7195 = !DILocation(line: 2082, column: 18, scope: !7179)
!7196 = !DILocalVariable(name: "iter", scope: !7179, file: !3, line: 2083, type: !3253)
!7197 = !DILocation(line: 2083, column: 9, scope: !7179)
!7198 = !DILocalVariable(name: "e", scope: !7179, file: !3, line: 2084, type: !681)
!7199 = !DILocation(line: 2084, column: 10, scope: !7179)
!7200 = !DILocalVariable(name: "walker", scope: !7179, file: !3, line: 2085, type: !7201)
!7201 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMWalker", file: !197, line: 72, baseType: !7202)
!7202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMWalker", file: !197, line: 45, size: 960, elements: !7203)
!7203 = !{!7204, !7205, !7210, !7214, !7215, !7216, !7218, !7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7228, !7231, !7232}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "begin_htype", scope: !7202, file: !197, line: 46, baseType: !304, size: 8)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !7202, file: !197, line: 47, baseType: !7206, size: 64, offset: 64)
!7206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7207, size: 64)
!7207 = !DISubroutineType(types: !7208)
!7208 = !{null, !7209, !288}
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 64)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !7202, file: !197, line: 48, baseType: !7211, size: 64, offset: 128)
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7212, size: 64)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!288, !7209}
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "yield", scope: !7202, file: !197, line: 49, baseType: !7211, size: 64, offset: 192)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "structsize", scope: !7202, file: !197, line: 50, baseType: !319, size: 32, offset: 256)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !7202, file: !197, line: 51, baseType: !7217, size: 32, offset: 288)
!7217 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMWOrder", file: !197, line: 37, baseType: !211)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "valid_mask", scope: !7202, file: !197, line: 52, baseType: !319, size: 32, offset: 320)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !7202, file: !197, line: 55, baseType: !319, size: 32, offset: 352)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !7202, file: !197, line: 57, baseType: !739, size: 64, offset: 384)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "worklist", scope: !7202, file: !197, line: 58, baseType: !3267, size: 64, offset: 448)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !7202, file: !197, line: 59, baseType: !344, size: 128, offset: 512)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "mask_vert", scope: !7202, file: !197, line: 63, baseType: !317, size: 16, offset: 640)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "mask_edge", scope: !7202, file: !197, line: 64, baseType: !317, size: 16, offset: 656)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "mask_face", scope: !7202, file: !197, line: 65, baseType: !317, size: 16, offset: 672)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7202, file: !197, line: 67, baseType: !7227, size: 32, offset: 704)
!7227 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMWFlag", file: !197, line: 42, baseType: !215)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "visit_set", scope: !7202, file: !197, line: 69, baseType: !7229, size: 64, offset: 768)
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7230, size: 64)
!7230 = !DICompositeType(tag: DW_TAG_structure_type, name: "GSet", file: !730, line: 176, flags: DIFlagFwdDecl)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "visit_set_alt", scope: !7202, file: !197, line: 70, baseType: !7229, size: 64, offset: 832)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !7202, file: !197, line: 71, baseType: !319, size: 32, offset: 896)
!7233 = !DILocation(line: 2085, column: 11, scope: !7179)
!7234 = !DILocalVariable(name: "limit", scope: !7179, file: !3, line: 2087, type: !319)
!7235 = !DILocation(line: 2087, column: 6, scope: !7179)
!7236 = !DILocation(line: 2089, column: 23, scope: !7179)
!7237 = !DILocation(line: 2089, column: 26, scope: !7179)
!7238 = !DILocation(line: 2089, column: 2, scope: !7179)
!7239 = !DILocation(line: 2091, column: 26, scope: !7179)
!7240 = !DILocation(line: 2091, column: 30, scope: !7179)
!7241 = !DILocation(line: 2091, column: 10, scope: !7179)
!7242 = !DILocation(line: 2091, column: 8, scope: !7179)
!7243 = !DILocation(line: 2093, column: 6, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 2093, column: 6)
!7245 = !DILocation(line: 2093, column: 10, scope: !7244)
!7246 = !DILocation(line: 2093, column: 21, scope: !7244)
!7247 = !DILocation(line: 2093, column: 6, scope: !7179)
!7248 = !DILocalVariable(name: "efa", scope: !7249, file: !3, line: 2094, type: !685)
!7249 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 2093, column: 41)
!7250 = !DILocation(line: 2094, column: 11, scope: !7249)
!7251 = !DILocation(line: 2096, column: 3, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2096, column: 3)
!7253 = !DILocation(line: 2096, column: 3, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 2096, column: 3)
!7255 = !DILocation(line: 2097, column: 4, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 2096, column: 55)
!7257 = !DILocation(line: 2098, column: 3, scope: !7256)
!7258 = distinct !{!7258, !7251, !7259}
!7259 = !DILocation(line: 2098, column: 3, scope: !7252)
!7260 = !DILocation(line: 2100, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2100, column: 7)
!7262 = !DILocation(line: 2100, column: 7, scope: !7249)
!7263 = !DILocation(line: 2102, column: 34, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2100, column: 14)
!7265 = !DILocation(line: 2102, column: 4, scope: !7264)
!7266 = !DILocation(line: 2103, column: 4, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 2103, column: 4)
!7268 = !DILocation(line: 2103, column: 4, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 2103, column: 4)
!7270 = !DILocation(line: 2104, column: 5, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 2103, column: 50)
!7272 = !DILocation(line: 2105, column: 4, scope: !7271)
!7273 = distinct !{!7273, !7266, !7274}
!7274 = !DILocation(line: 2105, column: 4, scope: !7267)
!7275 = !DILocation(line: 2106, column: 3, scope: !7264)
!7276 = !DILocation(line: 2108, column: 21, scope: !7249)
!7277 = !DILocation(line: 2109, column: 26, scope: !7249)
!7278 = !DILocation(line: 2108, column: 3, scope: !7249)
!7279 = !DILocation(line: 2113, column: 3, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2113, column: 3)
!7281 = !DILocation(line: 2113, column: 3, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 2113, column: 3)
!7283 = !DILocation(line: 2114, column: 8, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 2114, column: 8)
!7285 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2113, column: 55)
!7286 = !DILocation(line: 2114, column: 8, scope: !7285)
!7287 = !DILocation(line: 2115, column: 35, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 2115, column: 5)
!7289 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2114, column: 45)
!7290 = !DILocation(line: 2115, column: 16, scope: !7288)
!7291 = !DILocation(line: 2115, column: 14, scope: !7288)
!7292 = !DILocation(line: 2115, column: 10, scope: !7288)
!7293 = !DILocation(line: 2115, column: 41, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 2115, column: 5)
!7295 = !DILocation(line: 2115, column: 5, scope: !7288)
!7296 = !DILocation(line: 2116, column: 25, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 2115, column: 71)
!7298 = !DILocation(line: 2116, column: 29, scope: !7297)
!7299 = !DILocation(line: 2116, column: 6, scope: !7297)
!7300 = !DILocation(line: 2117, column: 6, scope: !7297)
!7301 = !DILocation(line: 2118, column: 5, scope: !7297)
!7302 = !DILocation(line: 2115, column: 52, scope: !7294)
!7303 = !DILocation(line: 2115, column: 50, scope: !7294)
!7304 = !DILocation(line: 2115, column: 5, scope: !7294)
!7305 = distinct !{!7305, !7295, !7306}
!7306 = !DILocation(line: 2118, column: 5, scope: !7288)
!7307 = !DILocation(line: 2119, column: 4, scope: !7289)
!7308 = !DILocation(line: 2120, column: 3, scope: !7285)
!7309 = distinct !{!7309, !7279, !7310}
!7310 = !DILocation(line: 2120, column: 3, scope: !7280)
!7311 = !DILocation(line: 2121, column: 3, scope: !7249)
!7312 = !DILocation(line: 2123, column: 7, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2123, column: 7)
!7314 = !DILocation(line: 2123, column: 7, scope: !7249)
!7315 = !DILocation(line: 2124, column: 33, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 2123, column: 14)
!7317 = !DILocation(line: 2124, column: 4, scope: !7316)
!7318 = !DILocation(line: 2125, column: 3, scope: !7316)
!7319 = !DILocation(line: 2126, column: 2, scope: !7249)
!7320 = !DILocalVariable(name: "v", scope: !7321, file: !3, line: 2128, type: !620)
!7321 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 2127, column: 7)
!7322 = !DILocation(line: 2128, column: 11, scope: !7321)
!7323 = !DILocation(line: 2130, column: 3, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 2130, column: 3)
!7325 = !DILocation(line: 2130, column: 3, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 2130, column: 3)
!7327 = !DILocation(line: 2131, column: 4, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 2130, column: 53)
!7329 = !DILocation(line: 2132, column: 3, scope: !7328)
!7330 = distinct !{!7330, !7323, !7331}
!7331 = !DILocation(line: 2132, column: 3, scope: !7324)
!7332 = !DILocation(line: 2134, column: 21, scope: !7321)
!7333 = !DILocation(line: 2134, column: 25, scope: !7321)
!7334 = !DILocation(line: 2134, column: 3, scope: !7321)
!7335 = !DILocation(line: 2139, column: 3, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 2139, column: 3)
!7337 = !DILocation(line: 2139, column: 3, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2139, column: 3)
!7339 = !DILocation(line: 2140, column: 8, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 2140, column: 8)
!7341 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 2139, column: 53)
!7342 = !DILocation(line: 2140, column: 8, scope: !7341)
!7343 = !DILocation(line: 2141, column: 33, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 2141, column: 5)
!7345 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 2140, column: 43)
!7346 = !DILocation(line: 2141, column: 14, scope: !7344)
!7347 = !DILocation(line: 2141, column: 12, scope: !7344)
!7348 = !DILocation(line: 2141, column: 10, scope: !7344)
!7349 = !DILocation(line: 2141, column: 37, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 2141, column: 5)
!7351 = !DILocation(line: 2141, column: 5, scope: !7344)
!7352 = !DILocation(line: 2142, column: 25, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 2141, column: 63)
!7354 = !DILocation(line: 2142, column: 29, scope: !7353)
!7355 = !DILocation(line: 2142, column: 33, scope: !7353)
!7356 = !DILocation(line: 2142, column: 6, scope: !7353)
!7357 = !DILocation(line: 2143, column: 6, scope: !7353)
!7358 = !DILocation(line: 2144, column: 5, scope: !7353)
!7359 = !DILocation(line: 2141, column: 44, scope: !7350)
!7360 = !DILocation(line: 2141, column: 42, scope: !7350)
!7361 = !DILocation(line: 2141, column: 5, scope: !7350)
!7362 = distinct !{!7362, !7351, !7363}
!7363 = !DILocation(line: 2144, column: 5, scope: !7344)
!7364 = !DILocation(line: 2145, column: 4, scope: !7345)
!7365 = !DILocation(line: 2146, column: 3, scope: !7341)
!7366 = distinct !{!7366, !7335, !7367}
!7367 = !DILocation(line: 2146, column: 3, scope: !7336)
!7368 = !DILocation(line: 2147, column: 3, scope: !7321)
!7369 = !DILocation(line: 2149, column: 25, scope: !7321)
!7370 = !DILocation(line: 2149, column: 3, scope: !7321)
!7371 = !DILocation(line: 2152, column: 24, scope: !7179)
!7372 = !DILocation(line: 2152, column: 48, scope: !7179)
!7373 = !DILocation(line: 2152, column: 2, scope: !7179)
!7374 = !DILocation(line: 2154, column: 2, scope: !7179)
!7375 = distinct !DISubprogram(name: "MESH_OT_select_linked_pick", scope: !3, file: !3, line: 2270, type: !3071, scopeLine: 2271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7376 = !DILocalVariable(name: "ot", arg: 1, scope: !7375, file: !3, line: 2270, type: !3073)
!7377 = !DILocation(line: 2270, column: 49, scope: !7375)
!7378 = !DILocation(line: 2273, column: 2, scope: !7375)
!7379 = !DILocation(line: 2273, column: 6, scope: !7375)
!7380 = !DILocation(line: 2273, column: 11, scope: !7375)
!7381 = !DILocation(line: 2274, column: 2, scope: !7375)
!7382 = !DILocation(line: 2274, column: 6, scope: !7375)
!7383 = !DILocation(line: 2274, column: 13, scope: !7375)
!7384 = !DILocation(line: 2275, column: 2, scope: !7375)
!7385 = !DILocation(line: 2275, column: 6, scope: !7375)
!7386 = !DILocation(line: 2275, column: 18, scope: !7375)
!7387 = !DILocation(line: 2278, column: 2, scope: !7375)
!7388 = !DILocation(line: 2278, column: 6, scope: !7375)
!7389 = !DILocation(line: 2278, column: 13, scope: !7375)
!7390 = !DILocation(line: 2279, column: 2, scope: !7375)
!7391 = !DILocation(line: 2279, column: 6, scope: !7375)
!7392 = !DILocation(line: 2279, column: 11, scope: !7375)
!7393 = !DILocation(line: 2282, column: 2, scope: !7375)
!7394 = !DILocation(line: 2282, column: 6, scope: !7375)
!7395 = !DILocation(line: 2282, column: 11, scope: !7375)
!7396 = !DILocation(line: 2284, column: 18, scope: !7375)
!7397 = !DILocation(line: 2284, column: 22, scope: !7375)
!7398 = !DILocation(line: 2284, column: 2, scope: !7375)
!7399 = !DILocation(line: 2285, column: 18, scope: !7375)
!7400 = !DILocation(line: 2285, column: 22, scope: !7375)
!7401 = !DILocation(line: 2285, column: 2, scope: !7375)
!7402 = !DILocation(line: 2286, column: 1, scope: !7375)
!7403 = distinct !DISubprogram(name: "edbm_select_linked_pick_invoke", scope: !3, file: !3, line: 2174, type: !5408, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7404 = !DILocalVariable(name: "C", arg: 1, scope: !7403, file: !3, line: 2174, type: !4980)
!7405 = !DILocation(line: 2174, column: 53, scope: !7403)
!7406 = !DILocalVariable(name: "op", arg: 2, scope: !7403, file: !3, line: 2174, type: !4982)
!7407 = !DILocation(line: 2174, column: 68, scope: !7403)
!7408 = !DILocalVariable(name: "event", arg: 3, scope: !7403, file: !3, line: 2174, type: !5410)
!7409 = !DILocation(line: 2174, column: 87, scope: !7403)
!7410 = !DILocalVariable(name: "obedit", scope: !7403, file: !3, line: 2176, type: !3615)
!7411 = !DILocation(line: 2176, column: 10, scope: !7403)
!7412 = !DILocation(line: 2176, column: 40, scope: !7403)
!7413 = !DILocation(line: 2176, column: 19, scope: !7403)
!7414 = !DILocalVariable(name: "vc", scope: !7403, file: !3, line: 2177, type: !2696)
!7415 = !DILocation(line: 2177, column: 14, scope: !7403)
!7416 = !DILocalVariable(name: "bm", scope: !7403, file: !3, line: 2178, type: !739)
!7417 = !DILocation(line: 2178, column: 9, scope: !7403)
!7418 = !DILocalVariable(name: "walker", scope: !7403, file: !3, line: 2179, type: !7201)
!7419 = !DILocation(line: 2179, column: 11, scope: !7403)
!7420 = !DILocalVariable(name: "em", scope: !7403, file: !3, line: 2180, type: !2675)
!7421 = !DILocation(line: 2180, column: 14, scope: !7403)
!7422 = !DILocalVariable(name: "eve", scope: !7403, file: !3, line: 2181, type: !620)
!7423 = !DILocation(line: 2181, column: 10, scope: !7403)
!7424 = !DILocalVariable(name: "e", scope: !7403, file: !3, line: 2182, type: !681)
!7425 = !DILocation(line: 2182, column: 10, scope: !7403)
!7426 = !DILocalVariable(name: "eed", scope: !7403, file: !3, line: 2182, type: !681)
!7427 = !DILocation(line: 2182, column: 14, scope: !7403)
!7428 = !DILocalVariable(name: "efa", scope: !7403, file: !3, line: 2183, type: !685)
!7429 = !DILocation(line: 2183, column: 10, scope: !7403)
!7430 = !DILocalVariable(name: "sel", scope: !7403, file: !3, line: 2184, type: !3057)
!7431 = !DILocation(line: 2184, column: 13, scope: !7403)
!7432 = !DILocation(line: 2184, column: 36, scope: !7403)
!7433 = !DILocation(line: 2184, column: 40, scope: !7403)
!7434 = !DILocation(line: 2184, column: 20, scope: !7403)
!7435 = !DILocation(line: 2184, column: 19, scope: !7403)
!7436 = !DILocalVariable(name: "limit", scope: !7403, file: !3, line: 2186, type: !319)
!7437 = !DILocation(line: 2186, column: 6, scope: !7403)
!7438 = !DILocation(line: 2188, column: 23, scope: !7403)
!7439 = !DILocation(line: 2188, column: 26, scope: !7403)
!7440 = !DILocation(line: 2188, column: 2, scope: !7403)
!7441 = !DILocation(line: 2190, column: 26, scope: !7403)
!7442 = !DILocation(line: 2190, column: 30, scope: !7403)
!7443 = !DILocation(line: 2190, column: 10, scope: !7403)
!7444 = !DILocation(line: 2190, column: 8, scope: !7403)
!7445 = !DILocation(line: 2193, column: 31, scope: !7403)
!7446 = !DILocation(line: 2193, column: 2, scope: !7403)
!7447 = !DILocation(line: 2196, column: 23, scope: !7403)
!7448 = !DILocation(line: 2196, column: 2, scope: !7403)
!7449 = !DILocation(line: 2197, column: 10, scope: !7403)
!7450 = !DILocation(line: 2197, column: 5, scope: !7403)
!7451 = !DILocation(line: 2199, column: 6, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2199, column: 6)
!7453 = !DILocation(line: 2199, column: 10, scope: !7452)
!7454 = !DILocation(line: 2199, column: 14, scope: !7452)
!7455 = !DILocation(line: 2199, column: 22, scope: !7452)
!7456 = !DILocation(line: 2199, column: 6, scope: !7403)
!7457 = !DILocation(line: 2200, column: 3, scope: !7452)
!7458 = !DILocation(line: 2202, column: 7, scope: !7403)
!7459 = !DILocation(line: 2202, column: 11, scope: !7403)
!7460 = !DILocation(line: 2202, column: 5, scope: !7403)
!7461 = !DILocation(line: 2204, column: 15, scope: !7403)
!7462 = !DILocation(line: 2204, column: 22, scope: !7403)
!7463 = !DILocation(line: 2204, column: 5, scope: !7403)
!7464 = !DILocation(line: 2204, column: 2, scope: !7403)
!7465 = !DILocation(line: 2204, column: 13, scope: !7403)
!7466 = !DILocation(line: 2205, column: 15, scope: !7403)
!7467 = !DILocation(line: 2205, column: 22, scope: !7403)
!7468 = !DILocation(line: 2205, column: 5, scope: !7403)
!7469 = !DILocation(line: 2205, column: 2, scope: !7403)
!7470 = !DILocation(line: 2205, column: 13, scope: !7403)
!7471 = !DILocation(line: 2209, column: 6, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2209, column: 6)
!7473 = !DILocation(line: 2209, column: 49, scope: !7472)
!7474 = !DILocation(line: 2209, column: 6, scope: !7403)
!7475 = !DILocation(line: 2210, column: 25, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 2209, column: 55)
!7477 = !DILocation(line: 2210, column: 49, scope: !7476)
!7478 = !DILocation(line: 2210, column: 3, scope: !7476)
!7479 = !DILocation(line: 2212, column: 3, scope: !7476)
!7480 = !DILocation(line: 2215, column: 6, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2215, column: 6)
!7482 = !DILocation(line: 2215, column: 10, scope: !7481)
!7483 = !DILocation(line: 2215, column: 21, scope: !7481)
!7484 = !DILocation(line: 2215, column: 6, scope: !7403)
!7485 = !DILocalVariable(name: "iter", scope: !7486, file: !3, line: 2216, type: !3253)
!7486 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 2215, column: 41)
!7487 = !DILocation(line: 2216, column: 10, scope: !7486)
!7488 = !DILocation(line: 2218, column: 7, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 2218, column: 7)
!7490 = !DILocation(line: 2218, column: 11, scope: !7489)
!7491 = !DILocation(line: 2218, column: 7, scope: !7486)
!7492 = !DILocation(line: 2219, column: 4, scope: !7489)
!7493 = !DILocation(line: 2221, column: 7, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 2221, column: 7)
!7495 = !DILocation(line: 2221, column: 7, scope: !7486)
!7496 = !DILocation(line: 2223, column: 34, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 2221, column: 14)
!7498 = !DILocation(line: 2223, column: 4, scope: !7497)
!7499 = !DILocation(line: 2225, column: 4, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2225, column: 4)
!7501 = !DILocation(line: 2225, column: 4, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 2225, column: 4)
!7503 = !DILocation(line: 2226, column: 5, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 2225, column: 50)
!7505 = !DILocation(line: 2227, column: 4, scope: !7504)
!7506 = distinct !{!7506, !7499, !7507}
!7507 = !DILocation(line: 2227, column: 4, scope: !7500)
!7508 = !DILocation(line: 2228, column: 3, scope: !7497)
!7509 = !DILocation(line: 2231, column: 21, scope: !7486)
!7510 = !DILocation(line: 2232, column: 26, scope: !7486)
!7511 = !DILocation(line: 2231, column: 3, scope: !7486)
!7512 = !DILocation(line: 2236, column: 33, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 2236, column: 3)
!7514 = !DILocation(line: 2236, column: 14, scope: !7513)
!7515 = !DILocation(line: 2236, column: 12, scope: !7513)
!7516 = !DILocation(line: 2236, column: 8, scope: !7513)
!7517 = !DILocation(line: 2236, column: 39, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 2236, column: 3)
!7519 = !DILocation(line: 2236, column: 3, scope: !7513)
!7520 = !DILocation(line: 2237, column: 23, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 2236, column: 69)
!7522 = !DILocation(line: 2237, column: 27, scope: !7521)
!7523 = !DILocation(line: 2237, column: 32, scope: !7521)
!7524 = !DILocation(line: 2237, column: 4, scope: !7521)
!7525 = !DILocation(line: 2238, column: 3, scope: !7521)
!7526 = !DILocation(line: 2236, column: 50, scope: !7518)
!7527 = !DILocation(line: 2236, column: 48, scope: !7518)
!7528 = !DILocation(line: 2236, column: 3, scope: !7518)
!7529 = distinct !{!7529, !7519, !7530}
!7530 = !DILocation(line: 2238, column: 3, scope: !7513)
!7531 = !DILocation(line: 2239, column: 3, scope: !7486)
!7532 = !DILocation(line: 2240, column: 2, scope: !7486)
!7533 = !DILocation(line: 2242, column: 7, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 2242, column: 7)
!7535 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 2241, column: 7)
!7536 = !DILocation(line: 2242, column: 7, scope: !7535)
!7537 = !DILocation(line: 2243, column: 10, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2242, column: 12)
!7539 = !DILocation(line: 2243, column: 35, scope: !7538)
!7540 = !DILocation(line: 2243, column: 8, scope: !7538)
!7541 = !DILocation(line: 2244, column: 3, scope: !7538)
!7542 = !DILocation(line: 2245, column: 13, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2245, column: 12)
!7544 = !DILocation(line: 2245, column: 12, scope: !7534)
!7545 = !DILocation(line: 2246, column: 9, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 2246, column: 8)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 2245, column: 18)
!7548 = !DILocation(line: 2246, column: 13, scope: !7546)
!7549 = !DILocation(line: 2246, column: 17, scope: !7546)
!7550 = !DILocation(line: 2246, column: 22, scope: !7546)
!7551 = !DILocation(line: 2246, column: 8, scope: !7547)
!7552 = !DILocation(line: 2247, column: 5, scope: !7546)
!7553 = !DILocation(line: 2249, column: 10, scope: !7547)
!7554 = !DILocation(line: 2249, column: 15, scope: !7547)
!7555 = !DILocation(line: 2249, column: 8, scope: !7547)
!7556 = !DILocation(line: 2250, column: 3, scope: !7547)
!7557 = !DILocation(line: 2252, column: 21, scope: !7535)
!7558 = !DILocation(line: 2252, column: 3, scope: !7535)
!7559 = !DILocation(line: 2257, column: 31, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 2257, column: 3)
!7561 = !DILocation(line: 2257, column: 36, scope: !7560)
!7562 = !DILocation(line: 2257, column: 12, scope: !7560)
!7563 = !DILocation(line: 2257, column: 10, scope: !7560)
!7564 = !DILocation(line: 2257, column: 8, scope: !7560)
!7565 = !DILocation(line: 2257, column: 41, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2257, column: 3)
!7567 = !DILocation(line: 2257, column: 3, scope: !7560)
!7568 = !DILocation(line: 2258, column: 23, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 2257, column: 67)
!7570 = !DILocation(line: 2258, column: 27, scope: !7569)
!7571 = !DILocation(line: 2258, column: 30, scope: !7569)
!7572 = !DILocation(line: 2258, column: 4, scope: !7569)
!7573 = !DILocation(line: 2259, column: 3, scope: !7569)
!7574 = !DILocation(line: 2257, column: 48, scope: !7566)
!7575 = !DILocation(line: 2257, column: 46, scope: !7566)
!7576 = !DILocation(line: 2257, column: 3, scope: !7566)
!7577 = distinct !{!7577, !7567, !7578}
!7578 = !DILocation(line: 2259, column: 3, scope: !7560)
!7579 = !DILocation(line: 2260, column: 3, scope: !7535)
!7580 = !DILocation(line: 2262, column: 25, scope: !7535)
!7581 = !DILocation(line: 2262, column: 3, scope: !7535)
!7582 = !DILocation(line: 2265, column: 24, scope: !7403)
!7583 = !DILocation(line: 2265, column: 48, scope: !7403)
!7584 = !DILocation(line: 2265, column: 2, scope: !7403)
!7585 = !DILocation(line: 2267, column: 2, scope: !7403)
!7586 = !DILocation(line: 2268, column: 1, scope: !7403)
!7587 = !DILocalVariable(name: "ot", arg: 1, scope: !3212, file: !3, line: 2335, type: !3073)
!7588 = !DILocation(line: 2335, column: 51, scope: !3212)
!7589 = !DILocation(line: 2346, column: 2, scope: !3212)
!7590 = !DILocation(line: 2346, column: 6, scope: !3212)
!7591 = !DILocation(line: 2346, column: 11, scope: !3212)
!7592 = !DILocation(line: 2347, column: 2, scope: !3212)
!7593 = !DILocation(line: 2347, column: 6, scope: !3212)
!7594 = !DILocation(line: 2347, column: 18, scope: !3212)
!7595 = !DILocation(line: 2348, column: 2, scope: !3212)
!7596 = !DILocation(line: 2348, column: 6, scope: !3212)
!7597 = !DILocation(line: 2348, column: 13, scope: !3212)
!7598 = !DILocation(line: 2351, column: 2, scope: !3212)
!7599 = !DILocation(line: 2351, column: 6, scope: !3212)
!7600 = !DILocation(line: 2351, column: 11, scope: !3212)
!7601 = !DILocation(line: 2352, column: 2, scope: !3212)
!7602 = !DILocation(line: 2352, column: 6, scope: !3212)
!7603 = !DILocation(line: 2352, column: 11, scope: !3212)
!7604 = !DILocation(line: 2355, column: 2, scope: !3212)
!7605 = !DILocation(line: 2355, column: 6, scope: !3212)
!7606 = !DILocation(line: 2355, column: 11, scope: !3212)
!7607 = !DILocation(line: 2358, column: 14, scope: !3212)
!7608 = !DILocation(line: 2358, column: 18, scope: !3212)
!7609 = !DILocation(line: 2358, column: 2, scope: !3212)
!7610 = !DILocation(line: 2359, column: 15, scope: !3212)
!7611 = !DILocation(line: 2359, column: 19, scope: !3212)
!7612 = !DILocation(line: 2359, column: 2, scope: !3212)
!7613 = !DILocation(line: 2360, column: 18, scope: !3212)
!7614 = !DILocation(line: 2360, column: 22, scope: !3212)
!7615 = !DILocation(line: 2360, column: 2, scope: !3212)
!7616 = !DILocation(line: 2361, column: 1, scope: !3212)
!7617 = distinct !DISubprogram(name: "edbm_select_face_by_sides_exec", scope: !3, file: !3, line: 2289, type: !4978, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7618 = !DILocalVariable(name: "C", arg: 1, scope: !7617, file: !3, line: 2289, type: !4980)
!7619 = !DILocation(line: 2289, column: 53, scope: !7617)
!7620 = !DILocalVariable(name: "op", arg: 2, scope: !7617, file: !3, line: 2289, type: !4982)
!7621 = !DILocation(line: 2289, column: 68, scope: !7617)
!7622 = !DILocalVariable(name: "obedit", scope: !7617, file: !3, line: 2291, type: !3615)
!7623 = !DILocation(line: 2291, column: 10, scope: !7617)
!7624 = !DILocation(line: 2291, column: 40, scope: !7617)
!7625 = !DILocation(line: 2291, column: 19, scope: !7617)
!7626 = !DILocalVariable(name: "em", scope: !7617, file: !3, line: 2292, type: !2675)
!7627 = !DILocation(line: 2292, column: 14, scope: !7617)
!7628 = !DILocation(line: 2292, column: 44, scope: !7617)
!7629 = !DILocation(line: 2292, column: 19, scope: !7617)
!7630 = !DILocalVariable(name: "efa", scope: !7617, file: !3, line: 2293, type: !685)
!7631 = !DILocation(line: 2293, column: 10, scope: !7617)
!7632 = !DILocalVariable(name: "iter", scope: !7617, file: !3, line: 2294, type: !3253)
!7633 = !DILocation(line: 2294, column: 9, scope: !7617)
!7634 = !DILocalVariable(name: "numverts", scope: !7617, file: !3, line: 2295, type: !3570)
!7635 = !DILocation(line: 2295, column: 12, scope: !7617)
!7636 = !DILocation(line: 2295, column: 35, scope: !7617)
!7637 = !DILocation(line: 2295, column: 39, scope: !7617)
!7638 = !DILocation(line: 2295, column: 23, scope: !7617)
!7639 = !DILocalVariable(name: "type", scope: !7617, file: !3, line: 2296, type: !3570)
!7640 = !DILocation(line: 2296, column: 12, scope: !7617)
!7641 = !DILocation(line: 2296, column: 32, scope: !7617)
!7642 = !DILocation(line: 2296, column: 36, scope: !7617)
!7643 = !DILocation(line: 2296, column: 19, scope: !7617)
!7644 = !DILocation(line: 2298, column: 23, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2298, column: 6)
!7646 = !DILocation(line: 2298, column: 27, scope: !7645)
!7647 = !DILocation(line: 2298, column: 7, scope: !7645)
!7648 = !DILocation(line: 2298, column: 6, scope: !7617)
!7649 = !DILocation(line: 2299, column: 25, scope: !7645)
!7650 = !DILocation(line: 2299, column: 3, scope: !7645)
!7651 = !DILocation(line: 2301, column: 2, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2301, column: 2)
!7653 = !DILocation(line: 2301, column: 2, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 2301, column: 2)
!7655 = !DILocalVariable(name: "select", scope: !7656, file: !3, line: 2303, type: !813)
!7656 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2301, column: 54)
!7657 = !DILocation(line: 2303, column: 8, scope: !7656)
!7658 = !DILocation(line: 2305, column: 11, scope: !7656)
!7659 = !DILocation(line: 2305, column: 3, scope: !7656)
!7660 = !DILocation(line: 2307, column: 15, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2305, column: 17)
!7662 = !DILocation(line: 2307, column: 20, scope: !7661)
!7663 = !DILocation(line: 2307, column: 26, scope: !7661)
!7664 = !DILocation(line: 2307, column: 24, scope: !7661)
!7665 = !DILocation(line: 2307, column: 14, scope: !7661)
!7666 = !DILocation(line: 2307, column: 12, scope: !7661)
!7667 = !DILocation(line: 2308, column: 5, scope: !7661)
!7668 = !DILocation(line: 2310, column: 15, scope: !7661)
!7669 = !DILocation(line: 2310, column: 20, scope: !7661)
!7670 = !DILocation(line: 2310, column: 27, scope: !7661)
!7671 = !DILocation(line: 2310, column: 24, scope: !7661)
!7672 = !DILocation(line: 2310, column: 14, scope: !7661)
!7673 = !DILocation(line: 2310, column: 12, scope: !7661)
!7674 = !DILocation(line: 2311, column: 5, scope: !7661)
!7675 = !DILocation(line: 2313, column: 15, scope: !7661)
!7676 = !DILocation(line: 2313, column: 20, scope: !7661)
!7677 = !DILocation(line: 2313, column: 26, scope: !7661)
!7678 = !DILocation(line: 2313, column: 24, scope: !7661)
!7679 = !DILocation(line: 2313, column: 14, scope: !7661)
!7680 = !DILocation(line: 2313, column: 12, scope: !7661)
!7681 = !DILocation(line: 2314, column: 5, scope: !7661)
!7682 = !DILocation(line: 2316, column: 15, scope: !7661)
!7683 = !DILocation(line: 2316, column: 20, scope: !7661)
!7684 = !DILocation(line: 2316, column: 27, scope: !7661)
!7685 = !DILocation(line: 2316, column: 24, scope: !7661)
!7686 = !DILocation(line: 2316, column: 14, scope: !7661)
!7687 = !DILocation(line: 2316, column: 12, scope: !7661)
!7688 = !DILocation(line: 2317, column: 5, scope: !7661)
!7689 = !DILocation(line: 2320, column: 12, scope: !7661)
!7690 = !DILocation(line: 2321, column: 5, scope: !7661)
!7691 = !DILocation(line: 2324, column: 7, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 2324, column: 7)
!7693 = !DILocation(line: 2324, column: 7, scope: !7656)
!7694 = !DILocation(line: 2325, column: 23, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 2324, column: 15)
!7696 = !DILocation(line: 2325, column: 27, scope: !7695)
!7697 = !DILocation(line: 2325, column: 31, scope: !7695)
!7698 = !DILocation(line: 2325, column: 4, scope: !7695)
!7699 = !DILocation(line: 2326, column: 3, scope: !7695)
!7700 = !DILocation(line: 2327, column: 2, scope: !7656)
!7701 = distinct !{!7701, !7651, !7702}
!7702 = !DILocation(line: 2327, column: 2, scope: !7652)
!7703 = !DILocation(line: 2329, column: 24, scope: !7617)
!7704 = !DILocation(line: 2329, column: 2, scope: !7617)
!7705 = !DILocation(line: 2331, column: 24, scope: !7617)
!7706 = !DILocation(line: 2331, column: 48, scope: !7617)
!7707 = !DILocation(line: 2331, column: 56, scope: !7617)
!7708 = !DILocation(line: 2331, column: 2, scope: !7617)
!7709 = !DILocation(line: 2332, column: 2, scope: !7617)
!7710 = distinct !DISubprogram(name: "MESH_OT_select_loose", scope: !3, file: !3, line: 2416, type: !3071, scopeLine: 2417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7711 = !DILocalVariable(name: "ot", arg: 1, scope: !7710, file: !3, line: 2416, type: !3073)
!7712 = !DILocation(line: 2416, column: 43, scope: !7710)
!7713 = !DILocation(line: 2419, column: 2, scope: !7710)
!7714 = !DILocation(line: 2419, column: 6, scope: !7710)
!7715 = !DILocation(line: 2419, column: 11, scope: !7710)
!7716 = !DILocation(line: 2420, column: 2, scope: !7710)
!7717 = !DILocation(line: 2420, column: 6, scope: !7710)
!7718 = !DILocation(line: 2420, column: 18, scope: !7710)
!7719 = !DILocation(line: 2421, column: 2, scope: !7710)
!7720 = !DILocation(line: 2421, column: 6, scope: !7710)
!7721 = !DILocation(line: 2421, column: 13, scope: !7710)
!7722 = !DILocation(line: 2424, column: 2, scope: !7710)
!7723 = !DILocation(line: 2424, column: 6, scope: !7710)
!7724 = !DILocation(line: 2424, column: 11, scope: !7710)
!7725 = !DILocation(line: 2425, column: 2, scope: !7710)
!7726 = !DILocation(line: 2425, column: 6, scope: !7710)
!7727 = !DILocation(line: 2425, column: 11, scope: !7710)
!7728 = !DILocation(line: 2428, column: 2, scope: !7710)
!7729 = !DILocation(line: 2428, column: 6, scope: !7710)
!7730 = !DILocation(line: 2428, column: 11, scope: !7710)
!7731 = !DILocation(line: 2431, column: 18, scope: !7710)
!7732 = !DILocation(line: 2431, column: 22, scope: !7710)
!7733 = !DILocation(line: 2431, column: 2, scope: !7710)
!7734 = !DILocation(line: 2432, column: 1, scope: !7710)
!7735 = distinct !DISubprogram(name: "edbm_select_loose_exec", scope: !3, file: !3, line: 2364, type: !4978, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7736 = !DILocalVariable(name: "C", arg: 1, scope: !7735, file: !3, line: 2364, type: !4980)
!7737 = !DILocation(line: 2364, column: 45, scope: !7735)
!7738 = !DILocalVariable(name: "op", arg: 2, scope: !7735, file: !3, line: 2364, type: !4982)
!7739 = !DILocation(line: 2364, column: 60, scope: !7735)
!7740 = !DILocalVariable(name: "obedit", scope: !7735, file: !3, line: 2366, type: !3615)
!7741 = !DILocation(line: 2366, column: 10, scope: !7735)
!7742 = !DILocation(line: 2366, column: 40, scope: !7735)
!7743 = !DILocation(line: 2366, column: 19, scope: !7735)
!7744 = !DILocalVariable(name: "em", scope: !7735, file: !3, line: 2367, type: !2675)
!7745 = !DILocation(line: 2367, column: 14, scope: !7735)
!7746 = !DILocation(line: 2367, column: 44, scope: !7735)
!7747 = !DILocation(line: 2367, column: 19, scope: !7735)
!7748 = !DILocalVariable(name: "bm", scope: !7735, file: !3, line: 2368, type: !739)
!7749 = !DILocation(line: 2368, column: 9, scope: !7735)
!7750 = !DILocation(line: 2368, column: 14, scope: !7735)
!7751 = !DILocation(line: 2368, column: 18, scope: !7735)
!7752 = !DILocalVariable(name: "iter", scope: !7735, file: !3, line: 2369, type: !3253)
!7753 = !DILocation(line: 2369, column: 9, scope: !7735)
!7754 = !DILocation(line: 2371, column: 23, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 2371, column: 6)
!7756 = !DILocation(line: 2371, column: 27, scope: !7755)
!7757 = !DILocation(line: 2371, column: 7, scope: !7755)
!7758 = !DILocation(line: 2371, column: 6, scope: !7735)
!7759 = !DILocation(line: 2372, column: 25, scope: !7755)
!7760 = !DILocation(line: 2372, column: 3, scope: !7755)
!7761 = !DILocation(line: 2374, column: 6, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 2374, column: 6)
!7763 = !DILocation(line: 2374, column: 10, scope: !7762)
!7764 = !DILocation(line: 2374, column: 21, scope: !7762)
!7765 = !DILocation(line: 2374, column: 6, scope: !7735)
!7766 = !DILocalVariable(name: "eve", scope: !7767, file: !3, line: 2375, type: !620)
!7767 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 2374, column: 42)
!7768 = !DILocation(line: 2375, column: 11, scope: !7767)
!7769 = !DILocation(line: 2376, column: 3, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 2376, column: 3)
!7771 = !DILocation(line: 2376, column: 3, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 2376, column: 3)
!7773 = !DILocation(line: 2377, column: 9, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 2377, column: 8)
!7775 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2376, column: 51)
!7776 = !DILocation(line: 2377, column: 14, scope: !7774)
!7777 = !DILocation(line: 2377, column: 8, scope: !7775)
!7778 = !DILocation(line: 2378, column: 24, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 2377, column: 17)
!7780 = !DILocation(line: 2378, column: 28, scope: !7779)
!7781 = !DILocation(line: 2378, column: 5, scope: !7779)
!7782 = !DILocation(line: 2379, column: 4, scope: !7779)
!7783 = !DILocation(line: 2380, column: 3, scope: !7775)
!7784 = distinct !{!7784, !7769, !7785}
!7785 = !DILocation(line: 2380, column: 3, scope: !7770)
!7786 = !DILocation(line: 2381, column: 2, scope: !7767)
!7787 = !DILocation(line: 2383, column: 6, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 2383, column: 6)
!7789 = !DILocation(line: 2383, column: 10, scope: !7788)
!7790 = !DILocation(line: 2383, column: 21, scope: !7788)
!7791 = !DILocation(line: 2383, column: 6, scope: !7735)
!7792 = !DILocalVariable(name: "eed", scope: !7793, file: !3, line: 2384, type: !681)
!7793 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 2383, column: 40)
!7794 = !DILocation(line: 2384, column: 11, scope: !7793)
!7795 = !DILocation(line: 2385, column: 3, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2385, column: 3)
!7797 = !DILocation(line: 2385, column: 3, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 2385, column: 3)
!7799 = !DILocation(line: 2386, column: 24, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2386, column: 8)
!7801 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 2385, column: 51)
!7802 = !DILocation(line: 2386, column: 8, scope: !7800)
!7803 = !DILocation(line: 2386, column: 8, scope: !7801)
!7804 = !DILocation(line: 2387, column: 24, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2386, column: 30)
!7806 = !DILocation(line: 2387, column: 28, scope: !7805)
!7807 = !DILocation(line: 2387, column: 5, scope: !7805)
!7808 = !DILocation(line: 2388, column: 4, scope: !7805)
!7809 = !DILocation(line: 2389, column: 3, scope: !7801)
!7810 = distinct !{!7810, !7795, !7811}
!7811 = !DILocation(line: 2389, column: 3, scope: !7796)
!7812 = !DILocation(line: 2390, column: 2, scope: !7793)
!7813 = !DILocation(line: 2392, column: 6, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 2392, column: 6)
!7815 = !DILocation(line: 2392, column: 10, scope: !7814)
!7816 = !DILocation(line: 2392, column: 21, scope: !7814)
!7817 = !DILocation(line: 2392, column: 6, scope: !7735)
!7818 = !DILocalVariable(name: "efa", scope: !7819, file: !3, line: 2393, type: !685)
!7819 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2392, column: 40)
!7820 = !DILocation(line: 2393, column: 11, scope: !7819)
!7821 = !DILocation(line: 2394, column: 3, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 2394, column: 3)
!7823 = !DILocation(line: 2394, column: 3, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 2394, column: 3)
!7825 = !DILocalVariable(name: "liter", scope: !7826, file: !3, line: 2395, type: !3253)
!7826 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 2394, column: 51)
!7827 = !DILocation(line: 2395, column: 11, scope: !7826)
!7828 = !DILocalVariable(name: "l", scope: !7826, file: !3, line: 2396, type: !663)
!7829 = !DILocation(line: 2396, column: 12, scope: !7826)
!7830 = !DILocalVariable(name: "is_loose", scope: !7826, file: !3, line: 2397, type: !813)
!7831 = !DILocation(line: 2397, column: 9, scope: !7826)
!7832 = !DILocation(line: 2398, column: 4, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2398, column: 4)
!7834 = !DILocation(line: 2398, column: 4, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 2398, column: 4)
!7836 = !DILocation(line: 2399, column: 30, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2399, column: 9)
!7838 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 2398, column: 52)
!7839 = !DILocation(line: 2399, column: 33, scope: !7837)
!7840 = !DILocation(line: 2399, column: 10, scope: !7837)
!7841 = !DILocation(line: 2399, column: 9, scope: !7838)
!7842 = !DILocation(line: 2400, column: 15, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 2399, column: 37)
!7844 = !DILocation(line: 2401, column: 6, scope: !7843)
!7845 = !DILocation(line: 2403, column: 4, scope: !7838)
!7846 = distinct !{!7846, !7832, !7847}
!7847 = !DILocation(line: 2403, column: 4, scope: !7833)
!7848 = !DILocation(line: 2404, column: 8, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2404, column: 8)
!7850 = !DILocation(line: 2404, column: 8, scope: !7826)
!7851 = !DILocation(line: 2405, column: 24, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 2404, column: 18)
!7853 = !DILocation(line: 2405, column: 28, scope: !7852)
!7854 = !DILocation(line: 2405, column: 5, scope: !7852)
!7855 = !DILocation(line: 2406, column: 4, scope: !7852)
!7856 = !DILocation(line: 2407, column: 3, scope: !7826)
!7857 = distinct !{!7857, !7821, !7858}
!7858 = !DILocation(line: 2407, column: 3, scope: !7822)
!7859 = !DILocation(line: 2408, column: 2, scope: !7819)
!7860 = !DILocation(line: 2410, column: 24, scope: !7735)
!7861 = !DILocation(line: 2410, column: 2, scope: !7735)
!7862 = !DILocation(line: 2412, column: 24, scope: !7735)
!7863 = !DILocation(line: 2412, column: 48, scope: !7735)
!7864 = !DILocation(line: 2412, column: 56, scope: !7735)
!7865 = !DILocation(line: 2412, column: 2, scope: !7735)
!7866 = !DILocation(line: 2413, column: 2, scope: !7735)
!7867 = distinct !DISubprogram(name: "MESH_OT_select_mirror", scope: !3, file: !3, line: 2456, type: !3071, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7868 = !DILocalVariable(name: "ot", arg: 1, scope: !7867, file: !3, line: 2456, type: !3073)
!7869 = !DILocation(line: 2456, column: 44, scope: !7867)
!7870 = !DILocation(line: 2459, column: 2, scope: !7867)
!7871 = !DILocation(line: 2459, column: 6, scope: !7867)
!7872 = !DILocation(line: 2459, column: 11, scope: !7867)
!7873 = !DILocation(line: 2460, column: 2, scope: !7867)
!7874 = !DILocation(line: 2460, column: 6, scope: !7867)
!7875 = !DILocation(line: 2460, column: 18, scope: !7867)
!7876 = !DILocation(line: 2461, column: 2, scope: !7867)
!7877 = !DILocation(line: 2461, column: 6, scope: !7867)
!7878 = !DILocation(line: 2461, column: 13, scope: !7867)
!7879 = !DILocation(line: 2464, column: 2, scope: !7867)
!7880 = !DILocation(line: 2464, column: 6, scope: !7867)
!7881 = !DILocation(line: 2464, column: 11, scope: !7867)
!7882 = !DILocation(line: 2465, column: 2, scope: !7867)
!7883 = !DILocation(line: 2465, column: 6, scope: !7867)
!7884 = !DILocation(line: 2465, column: 11, scope: !7867)
!7885 = !DILocation(line: 2468, column: 2, scope: !7867)
!7886 = !DILocation(line: 2468, column: 6, scope: !7867)
!7887 = !DILocation(line: 2468, column: 11, scope: !7867)
!7888 = !DILocation(line: 2471, column: 18, scope: !7867)
!7889 = !DILocation(line: 2471, column: 22, scope: !7867)
!7890 = !DILocation(line: 2471, column: 2, scope: !7867)
!7891 = !DILocation(line: 2472, column: 1, scope: !7867)
!7892 = distinct !DISubprogram(name: "edbm_select_mirror_exec", scope: !3, file: !3, line: 2435, type: !4978, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7893 = !DILocalVariable(name: "C", arg: 1, scope: !7892, file: !3, line: 2435, type: !4980)
!7894 = !DILocation(line: 2435, column: 46, scope: !7892)
!7895 = !DILocalVariable(name: "op", arg: 2, scope: !7892, file: !3, line: 2435, type: !4982)
!7896 = !DILocation(line: 2435, column: 61, scope: !7892)
!7897 = !DILocalVariable(name: "obedit", scope: !7892, file: !3, line: 2437, type: !3615)
!7898 = !DILocation(line: 2437, column: 10, scope: !7892)
!7899 = !DILocation(line: 2437, column: 40, scope: !7892)
!7900 = !DILocation(line: 2437, column: 19, scope: !7892)
!7901 = !DILocalVariable(name: "em", scope: !7892, file: !3, line: 2438, type: !2675)
!7902 = !DILocation(line: 2438, column: 14, scope: !7892)
!7903 = !DILocation(line: 2438, column: 44, scope: !7892)
!7904 = !DILocation(line: 2438, column: 19, scope: !7892)
!7905 = !DILocalVariable(name: "extend", scope: !7892, file: !3, line: 2439, type: !813)
!7906 = !DILocation(line: 2439, column: 7, scope: !7892)
!7907 = !DILocation(line: 2439, column: 32, scope: !7892)
!7908 = !DILocation(line: 2439, column: 36, scope: !7892)
!7909 = !DILocation(line: 2439, column: 16, scope: !7892)
!7910 = !DILocation(line: 2441, column: 6, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 2441, column: 6)
!7912 = !DILocation(line: 2441, column: 10, scope: !7911)
!7913 = !DILocation(line: 2441, column: 14, scope: !7911)
!7914 = !DILocation(line: 2441, column: 22, scope: !7911)
!7915 = !DILocation(line: 2441, column: 25, scope: !7911)
!7916 = !DILocation(line: 2441, column: 29, scope: !7911)
!7917 = !DILocation(line: 2441, column: 33, scope: !7911)
!7918 = !DILocation(line: 2441, column: 6, scope: !7892)
!7919 = !DILocalVariable(name: "totmirr", scope: !7920, file: !3, line: 2442, type: !319)
!7920 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 2441, column: 45)
!7921 = !DILocation(line: 2442, column: 7, scope: !7920)
!7922 = !DILocalVariable(name: "totfail", scope: !7920, file: !3, line: 2442, type: !319)
!7923 = !DILocation(line: 2442, column: 16, scope: !7920)
!7924 = !DILocation(line: 2444, column: 24, scope: !7920)
!7925 = !DILocation(line: 2444, column: 28, scope: !7920)
!7926 = !DILocation(line: 2444, column: 3, scope: !7920)
!7927 = !DILocation(line: 2445, column: 7, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 2445, column: 7)
!7929 = !DILocation(line: 2445, column: 7, scope: !7920)
!7930 = !DILocation(line: 2446, column: 26, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 2445, column: 16)
!7932 = !DILocation(line: 2446, column: 4, scope: !7931)
!7933 = !DILocation(line: 2447, column: 26, scope: !7931)
!7934 = !DILocation(line: 2447, column: 50, scope: !7931)
!7935 = !DILocation(line: 2447, column: 58, scope: !7931)
!7936 = !DILocation(line: 2447, column: 4, scope: !7931)
!7937 = !DILocation(line: 2448, column: 3, scope: !7931)
!7938 = !DILocation(line: 2450, column: 28, scope: !7920)
!7939 = !DILocation(line: 2450, column: 32, scope: !7920)
!7940 = !DILocation(line: 2450, column: 41, scope: !7920)
!7941 = !DILocation(line: 2450, column: 50, scope: !7920)
!7942 = !DILocation(line: 2450, column: 54, scope: !7920)
!7943 = !DILocation(line: 2450, column: 58, scope: !7920)
!7944 = !DILocation(line: 2450, column: 3, scope: !7920)
!7945 = !DILocation(line: 2451, column: 2, scope: !7920)
!7946 = !DILocation(line: 2453, column: 2, scope: !7892)
!7947 = distinct !DISubprogram(name: "MESH_OT_select_more", scope: !3, file: !3, line: 2487, type: !3071, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7948 = !DILocalVariable(name: "ot", arg: 1, scope: !7947, file: !3, line: 2487, type: !3073)
!7949 = !DILocation(line: 2487, column: 42, scope: !7947)
!7950 = !DILocation(line: 2490, column: 2, scope: !7947)
!7951 = !DILocation(line: 2490, column: 6, scope: !7947)
!7952 = !DILocation(line: 2490, column: 11, scope: !7947)
!7953 = !DILocation(line: 2491, column: 2, scope: !7947)
!7954 = !DILocation(line: 2491, column: 6, scope: !7947)
!7955 = !DILocation(line: 2491, column: 13, scope: !7947)
!7956 = !DILocation(line: 2492, column: 2, scope: !7947)
!7957 = !DILocation(line: 2492, column: 6, scope: !7947)
!7958 = !DILocation(line: 2492, column: 18, scope: !7947)
!7959 = !DILocation(line: 2495, column: 2, scope: !7947)
!7960 = !DILocation(line: 2495, column: 6, scope: !7947)
!7961 = !DILocation(line: 2495, column: 11, scope: !7947)
!7962 = !DILocation(line: 2496, column: 2, scope: !7947)
!7963 = !DILocation(line: 2496, column: 6, scope: !7947)
!7964 = !DILocation(line: 2496, column: 11, scope: !7947)
!7965 = !DILocation(line: 2499, column: 2, scope: !7947)
!7966 = !DILocation(line: 2499, column: 6, scope: !7947)
!7967 = !DILocation(line: 2499, column: 11, scope: !7947)
!7968 = !DILocation(line: 2500, column: 1, scope: !7947)
!7969 = distinct !DISubprogram(name: "edbm_select_more_exec", scope: !3, file: !3, line: 2476, type: !4978, scopeLine: 2477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7970 = !DILocalVariable(name: "C", arg: 1, scope: !7969, file: !3, line: 2476, type: !4980)
!7971 = !DILocation(line: 2476, column: 44, scope: !7969)
!7972 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7969, file: !3, line: 2476, type: !4982)
!7973 = !DILocation(line: 2476, column: 59, scope: !7969)
!7974 = !DILocalVariable(name: "obedit", scope: !7969, file: !3, line: 2478, type: !3615)
!7975 = !DILocation(line: 2478, column: 10, scope: !7969)
!7976 = !DILocation(line: 2478, column: 40, scope: !7969)
!7977 = !DILocation(line: 2478, column: 19, scope: !7969)
!7978 = !DILocalVariable(name: "em", scope: !7969, file: !3, line: 2479, type: !2675)
!7979 = !DILocation(line: 2479, column: 14, scope: !7969)
!7980 = !DILocation(line: 2479, column: 44, scope: !7969)
!7981 = !DILocation(line: 2479, column: 19, scope: !7969)
!7982 = !DILocation(line: 2481, column: 19, scope: !7969)
!7983 = !DILocation(line: 2481, column: 2, scope: !7969)
!7984 = !DILocation(line: 2483, column: 24, scope: !7969)
!7985 = !DILocation(line: 2483, column: 48, scope: !7969)
!7986 = !DILocation(line: 2483, column: 2, scope: !7969)
!7987 = !DILocation(line: 2484, column: 2, scope: !7969)
!7988 = distinct !DISubprogram(name: "MESH_OT_select_less", scope: !3, file: !3, line: 2513, type: !3071, scopeLine: 2514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!7989 = !DILocalVariable(name: "ot", arg: 1, scope: !7988, file: !3, line: 2513, type: !3073)
!7990 = !DILocation(line: 2513, column: 42, scope: !7988)
!7991 = !DILocation(line: 2516, column: 2, scope: !7988)
!7992 = !DILocation(line: 2516, column: 6, scope: !7988)
!7993 = !DILocation(line: 2516, column: 11, scope: !7988)
!7994 = !DILocation(line: 2517, column: 2, scope: !7988)
!7995 = !DILocation(line: 2517, column: 6, scope: !7988)
!7996 = !DILocation(line: 2517, column: 13, scope: !7988)
!7997 = !DILocation(line: 2518, column: 2, scope: !7988)
!7998 = !DILocation(line: 2518, column: 6, scope: !7988)
!7999 = !DILocation(line: 2518, column: 18, scope: !7988)
!8000 = !DILocation(line: 2521, column: 2, scope: !7988)
!8001 = !DILocation(line: 2521, column: 6, scope: !7988)
!8002 = !DILocation(line: 2521, column: 11, scope: !7988)
!8003 = !DILocation(line: 2522, column: 2, scope: !7988)
!8004 = !DILocation(line: 2522, column: 6, scope: !7988)
!8005 = !DILocation(line: 2522, column: 11, scope: !7988)
!8006 = !DILocation(line: 2525, column: 2, scope: !7988)
!8007 = !DILocation(line: 2525, column: 6, scope: !7988)
!8008 = !DILocation(line: 2525, column: 11, scope: !7988)
!8009 = !DILocation(line: 2526, column: 1, scope: !7988)
!8010 = distinct !DISubprogram(name: "edbm_select_less_exec", scope: !3, file: !3, line: 2502, type: !4978, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8011 = !DILocalVariable(name: "C", arg: 1, scope: !8010, file: !3, line: 2502, type: !4980)
!8012 = !DILocation(line: 2502, column: 44, scope: !8010)
!8013 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8010, file: !3, line: 2502, type: !4982)
!8014 = !DILocation(line: 2502, column: 59, scope: !8010)
!8015 = !DILocalVariable(name: "obedit", scope: !8010, file: !3, line: 2504, type: !3615)
!8016 = !DILocation(line: 2504, column: 10, scope: !8010)
!8017 = !DILocation(line: 2504, column: 40, scope: !8010)
!8018 = !DILocation(line: 2504, column: 19, scope: !8010)
!8019 = !DILocalVariable(name: "em", scope: !8010, file: !3, line: 2505, type: !2675)
!8020 = !DILocation(line: 2505, column: 14, scope: !8010)
!8021 = !DILocation(line: 2505, column: 44, scope: !8010)
!8022 = !DILocation(line: 2505, column: 19, scope: !8010)
!8023 = !DILocation(line: 2507, column: 19, scope: !8010)
!8024 = !DILocation(line: 2507, column: 2, scope: !8010)
!8025 = !DILocation(line: 2509, column: 24, scope: !8010)
!8026 = !DILocation(line: 2509, column: 48, scope: !8010)
!8027 = !DILocation(line: 2509, column: 2, scope: !8010)
!8028 = !DILocation(line: 2510, column: 2, scope: !8010)
!8029 = distinct !DISubprogram(name: "MESH_OT_select_nth", scope: !3, file: !3, line: 2732, type: !3071, scopeLine: 2733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8030 = !DILocalVariable(name: "ot", arg: 1, scope: !8029, file: !3, line: 2732, type: !3073)
!8031 = !DILocation(line: 2732, column: 41, scope: !8029)
!8032 = !DILocation(line: 2735, column: 2, scope: !8029)
!8033 = !DILocation(line: 2735, column: 6, scope: !8029)
!8034 = !DILocation(line: 2735, column: 11, scope: !8029)
!8035 = !DILocation(line: 2736, column: 2, scope: !8029)
!8036 = !DILocation(line: 2736, column: 6, scope: !8029)
!8037 = !DILocation(line: 2736, column: 13, scope: !8029)
!8038 = !DILocation(line: 2737, column: 2, scope: !8029)
!8039 = !DILocation(line: 2737, column: 6, scope: !8029)
!8040 = !DILocation(line: 2737, column: 18, scope: !8029)
!8041 = !DILocation(line: 2740, column: 2, scope: !8029)
!8042 = !DILocation(line: 2740, column: 6, scope: !8029)
!8043 = !DILocation(line: 2740, column: 11, scope: !8029)
!8044 = !DILocation(line: 2741, column: 2, scope: !8029)
!8045 = !DILocation(line: 2741, column: 6, scope: !8029)
!8046 = !DILocation(line: 2741, column: 11, scope: !8029)
!8047 = !DILocation(line: 2744, column: 2, scope: !8029)
!8048 = !DILocation(line: 2744, column: 6, scope: !8029)
!8049 = !DILocation(line: 2744, column: 11, scope: !8029)
!8050 = !DILocation(line: 2746, column: 14, scope: !8029)
!8051 = !DILocation(line: 2746, column: 18, scope: !8029)
!8052 = !DILocation(line: 2746, column: 2, scope: !8029)
!8053 = !DILocation(line: 2747, column: 14, scope: !8029)
!8054 = !DILocation(line: 2747, column: 18, scope: !8029)
!8055 = !DILocation(line: 2747, column: 2, scope: !8029)
!8056 = !DILocation(line: 2748, column: 1, scope: !8029)
!8057 = distinct !DISubprogram(name: "edbm_select_nth_exec", scope: !3, file: !3, line: 2709, type: !4978, scopeLine: 2710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8058 = !DILocalVariable(name: "C", arg: 1, scope: !8057, file: !3, line: 2709, type: !4980)
!8059 = !DILocation(line: 2709, column: 43, scope: !8057)
!8060 = !DILocalVariable(name: "op", arg: 2, scope: !8057, file: !3, line: 2709, type: !4982)
!8061 = !DILocation(line: 2709, column: 58, scope: !8057)
!8062 = !DILocalVariable(name: "obedit", scope: !8057, file: !3, line: 2711, type: !3615)
!8063 = !DILocation(line: 2711, column: 10, scope: !8057)
!8064 = !DILocation(line: 2711, column: 40, scope: !8057)
!8065 = !DILocation(line: 2711, column: 19, scope: !8057)
!8066 = !DILocalVariable(name: "em", scope: !8057, file: !3, line: 2712, type: !2675)
!8067 = !DILocation(line: 2712, column: 14, scope: !8057)
!8068 = !DILocation(line: 2712, column: 44, scope: !8057)
!8069 = !DILocation(line: 2712, column: 19, scope: !8057)
!8070 = !DILocalVariable(name: "nth", scope: !8057, file: !3, line: 2713, type: !3570)
!8071 = !DILocation(line: 2713, column: 12, scope: !8057)
!8072 = !DILocation(line: 2713, column: 30, scope: !8057)
!8073 = !DILocation(line: 2713, column: 34, scope: !8057)
!8074 = !DILocation(line: 2713, column: 18, scope: !8057)
!8075 = !DILocalVariable(name: "offset", scope: !8057, file: !3, line: 2714, type: !319)
!8076 = !DILocation(line: 2714, column: 6, scope: !8057)
!8077 = !DILocation(line: 2714, column: 27, scope: !8057)
!8078 = !DILocation(line: 2714, column: 31, scope: !8057)
!8079 = !DILocation(line: 2714, column: 15, scope: !8057)
!8080 = !DILocation(line: 2717, column: 17, scope: !8057)
!8081 = !DILocation(line: 2717, column: 25, scope: !8057)
!8082 = !DILocation(line: 2717, column: 11, scope: !8057)
!8083 = !DILocation(line: 2717, column: 9, scope: !8057)
!8084 = !DILocation(line: 2719, column: 9, scope: !8057)
!8085 = !DILocation(line: 2721, column: 24, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 2721, column: 6)
!8087 = !DILocation(line: 2721, column: 28, scope: !8086)
!8088 = !DILocation(line: 2721, column: 33, scope: !8086)
!8089 = !DILocation(line: 2721, column: 6, scope: !8086)
!8090 = !DILocation(line: 2721, column: 41, scope: !8086)
!8091 = !DILocation(line: 2721, column: 6, scope: !8057)
!8092 = !DILocation(line: 2722, column: 14, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 2721, column: 51)
!8094 = !DILocation(line: 2722, column: 18, scope: !8093)
!8095 = !DILocation(line: 2722, column: 3, scope: !8093)
!8096 = !DILocation(line: 2723, column: 3, scope: !8093)
!8097 = !DILocation(line: 2726, column: 22, scope: !8057)
!8098 = !DILocation(line: 2726, column: 2, scope: !8057)
!8099 = !DILocation(line: 2728, column: 2, scope: !8057)
!8100 = !DILocation(line: 2729, column: 1, scope: !8057)
!8101 = distinct !DISubprogram(name: "MESH_OT_edges_select_sharp", scope: !3, file: !3, line: 2791, type: !3071, scopeLine: 2792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8102 = !DILocalVariable(name: "ot", arg: 1, scope: !8101, file: !3, line: 2791, type: !3073)
!8103 = !DILocation(line: 2791, column: 49, scope: !8101)
!8104 = !DILocalVariable(name: "prop", scope: !8101, file: !3, line: 2793, type: !3148)
!8105 = !DILocation(line: 2793, column: 15, scope: !8101)
!8106 = !DILocation(line: 2796, column: 2, scope: !8101)
!8107 = !DILocation(line: 2796, column: 6, scope: !8101)
!8108 = !DILocation(line: 2796, column: 11, scope: !8101)
!8109 = !DILocation(line: 2797, column: 2, scope: !8101)
!8110 = !DILocation(line: 2797, column: 6, scope: !8101)
!8111 = !DILocation(line: 2797, column: 18, scope: !8101)
!8112 = !DILocation(line: 2798, column: 2, scope: !8101)
!8113 = !DILocation(line: 2798, column: 6, scope: !8101)
!8114 = !DILocation(line: 2798, column: 13, scope: !8101)
!8115 = !DILocation(line: 2801, column: 2, scope: !8101)
!8116 = !DILocation(line: 2801, column: 6, scope: !8101)
!8117 = !DILocation(line: 2801, column: 11, scope: !8101)
!8118 = !DILocation(line: 2802, column: 2, scope: !8101)
!8119 = !DILocation(line: 2802, column: 6, scope: !8101)
!8120 = !DILocation(line: 2802, column: 11, scope: !8101)
!8121 = !DILocation(line: 2805, column: 2, scope: !8101)
!8122 = !DILocation(line: 2805, column: 6, scope: !8101)
!8123 = !DILocation(line: 2805, column: 11, scope: !8101)
!8124 = !DILocation(line: 2808, column: 32, scope: !8101)
!8125 = !DILocation(line: 2808, column: 36, scope: !8101)
!8126 = !DILocation(line: 2808, column: 9, scope: !8101)
!8127 = !DILocation(line: 2808, column: 7, scope: !8101)
!8128 = !DILocation(line: 2810, column: 33, scope: !8101)
!8129 = !DILocation(line: 2810, column: 2, scope: !8101)
!8130 = !DILocation(line: 2811, column: 1, scope: !8101)
!8131 = distinct !DISubprogram(name: "edbm_select_sharp_edges_exec", scope: !3, file: !3, line: 2760, type: !4978, scopeLine: 2761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8132 = !DILocalVariable(name: "C", arg: 1, scope: !8131, file: !3, line: 2760, type: !4980)
!8133 = !DILocation(line: 2760, column: 51, scope: !8131)
!8134 = !DILocalVariable(name: "op", arg: 2, scope: !8131, file: !3, line: 2760, type: !4982)
!8135 = !DILocation(line: 2760, column: 66, scope: !8131)
!8136 = !DILocalVariable(name: "obedit", scope: !8131, file: !3, line: 2766, type: !3615)
!8137 = !DILocation(line: 2766, column: 10, scope: !8131)
!8138 = !DILocation(line: 2766, column: 40, scope: !8131)
!8139 = !DILocation(line: 2766, column: 19, scope: !8131)
!8140 = !DILocalVariable(name: "em", scope: !8131, file: !3, line: 2767, type: !2675)
!8141 = !DILocation(line: 2767, column: 14, scope: !8131)
!8142 = !DILocation(line: 2767, column: 44, scope: !8131)
!8143 = !DILocation(line: 2767, column: 19, scope: !8131)
!8144 = !DILocalVariable(name: "iter", scope: !8131, file: !3, line: 2768, type: !3253)
!8145 = !DILocation(line: 2768, column: 9, scope: !8131)
!8146 = !DILocalVariable(name: "e", scope: !8131, file: !3, line: 2769, type: !681)
!8147 = !DILocation(line: 2769, column: 10, scope: !8131)
!8148 = !DILocalVariable(name: "l1", scope: !8131, file: !3, line: 2770, type: !663)
!8149 = !DILocation(line: 2770, column: 10, scope: !8131)
!8150 = !DILocalVariable(name: "l2", scope: !8131, file: !3, line: 2770, type: !663)
!8151 = !DILocation(line: 2770, column: 15, scope: !8131)
!8152 = !DILocalVariable(name: "sharp", scope: !8131, file: !3, line: 2771, type: !4310)
!8153 = !DILocation(line: 2771, column: 14, scope: !8131)
!8154 = !DILocation(line: 2771, column: 36, scope: !8131)
!8155 = !DILocation(line: 2771, column: 40, scope: !8131)
!8156 = !DILocation(line: 2771, column: 22, scope: !8131)
!8157 = !DILocation(line: 2773, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 2773, column: 2)
!8159 = !DILocation(line: 2773, column: 2, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2773, column: 2)
!8161 = !DILocation(line: 2774, column: 7, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2774, column: 7)
!8163 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 2773, column: 52)
!8164 = !DILocation(line: 2774, column: 44, scope: !8162)
!8165 = !DILocation(line: 2774, column: 53, scope: !8162)
!8166 = !DILocation(line: 2775, column: 25, scope: !8162)
!8167 = !DILocation(line: 2775, column: 7, scope: !8162)
!8168 = !DILocation(line: 2774, column: 7, scope: !8163)
!8169 = !DILocalVariable(name: "angle", scope: !8170, file: !3, line: 2778, type: !4310)
!8170 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 2776, column: 3)
!8171 = !DILocation(line: 2778, column: 16, scope: !8170)
!8172 = !DILocation(line: 2778, column: 46, scope: !8170)
!8173 = !DILocation(line: 2778, column: 50, scope: !8170)
!8174 = !DILocation(line: 2778, column: 53, scope: !8170)
!8175 = !DILocation(line: 2778, column: 57, scope: !8170)
!8176 = !DILocation(line: 2778, column: 61, scope: !8170)
!8177 = !DILocation(line: 2778, column: 64, scope: !8170)
!8178 = !DILocation(line: 2778, column: 24, scope: !8170)
!8179 = !DILocation(line: 2780, column: 14, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2780, column: 8)
!8181 = !DILocation(line: 2780, column: 8, scope: !8180)
!8182 = !DILocation(line: 2780, column: 23, scope: !8180)
!8183 = !DILocation(line: 2780, column: 21, scope: !8180)
!8184 = !DILocation(line: 2780, column: 8, scope: !8170)
!8185 = !DILocation(line: 2781, column: 24, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 2780, column: 30)
!8187 = !DILocation(line: 2781, column: 28, scope: !8186)
!8188 = !DILocation(line: 2781, column: 32, scope: !8186)
!8189 = !DILocation(line: 2781, column: 5, scope: !8186)
!8190 = !DILocation(line: 2782, column: 4, scope: !8186)
!8191 = !DILocation(line: 2783, column: 3, scope: !8170)
!8192 = !DILocation(line: 2784, column: 2, scope: !8163)
!8193 = distinct !{!8193, !8157, !8194}
!8194 = !DILocation(line: 2784, column: 2, scope: !8158)
!8195 = !DILocation(line: 2786, column: 24, scope: !8131)
!8196 = !DILocation(line: 2786, column: 48, scope: !8131)
!8197 = !DILocation(line: 2786, column: 56, scope: !8131)
!8198 = !DILocation(line: 2786, column: 2, scope: !8131)
!8199 = !DILocation(line: 2788, column: 2, scope: !8131)
!8200 = distinct !DISubprogram(name: "MESH_OT_faces_select_linked_flat", scope: !3, file: !3, line: 2872, type: !3071, scopeLine: 2873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8201 = !DILocalVariable(name: "ot", arg: 1, scope: !8200, file: !3, line: 2872, type: !3073)
!8202 = !DILocation(line: 2872, column: 55, scope: !8200)
!8203 = !DILocalVariable(name: "prop", scope: !8200, file: !3, line: 2874, type: !3148)
!8204 = !DILocation(line: 2874, column: 15, scope: !8200)
!8205 = !DILocation(line: 2877, column: 2, scope: !8200)
!8206 = !DILocation(line: 2877, column: 6, scope: !8200)
!8207 = !DILocation(line: 2877, column: 11, scope: !8200)
!8208 = !DILocation(line: 2878, column: 2, scope: !8200)
!8209 = !DILocation(line: 2878, column: 6, scope: !8200)
!8210 = !DILocation(line: 2878, column: 18, scope: !8200)
!8211 = !DILocation(line: 2879, column: 2, scope: !8200)
!8212 = !DILocation(line: 2879, column: 6, scope: !8200)
!8213 = !DILocation(line: 2879, column: 13, scope: !8200)
!8214 = !DILocation(line: 2882, column: 2, scope: !8200)
!8215 = !DILocation(line: 2882, column: 6, scope: !8200)
!8216 = !DILocation(line: 2882, column: 11, scope: !8200)
!8217 = !DILocation(line: 2883, column: 2, scope: !8200)
!8218 = !DILocation(line: 2883, column: 6, scope: !8200)
!8219 = !DILocation(line: 2883, column: 11, scope: !8200)
!8220 = !DILocation(line: 2886, column: 2, scope: !8200)
!8221 = !DILocation(line: 2886, column: 6, scope: !8200)
!8222 = !DILocation(line: 2886, column: 11, scope: !8200)
!8223 = !DILocation(line: 2889, column: 32, scope: !8200)
!8224 = !DILocation(line: 2889, column: 36, scope: !8200)
!8225 = !DILocation(line: 2889, column: 9, scope: !8200)
!8226 = !DILocation(line: 2889, column: 7, scope: !8200)
!8227 = !DILocation(line: 2891, column: 33, scope: !8200)
!8228 = !DILocation(line: 2891, column: 2, scope: !8200)
!8229 = !DILocation(line: 2892, column: 1, scope: !8200)
!8230 = distinct !DISubprogram(name: "edbm_select_linked_flat_faces_exec", scope: !3, file: !3, line: 2813, type: !4978, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8231 = !DILocalVariable(name: "C", arg: 1, scope: !8230, file: !3, line: 2813, type: !4980)
!8232 = !DILocation(line: 2813, column: 57, scope: !8230)
!8233 = !DILocalVariable(name: "op", arg: 2, scope: !8230, file: !3, line: 2813, type: !4982)
!8234 = !DILocation(line: 2813, column: 72, scope: !8230)
!8235 = !DILocalVariable(name: "obedit", scope: !8230, file: !3, line: 2815, type: !3615)
!8236 = !DILocation(line: 2815, column: 10, scope: !8230)
!8237 = !DILocation(line: 2815, column: 40, scope: !8230)
!8238 = !DILocation(line: 2815, column: 19, scope: !8230)
!8239 = !DILocalVariable(name: "em", scope: !8230, file: !3, line: 2816, type: !2675)
!8240 = !DILocation(line: 2816, column: 14, scope: !8230)
!8241 = !DILocation(line: 2816, column: 44, scope: !8230)
!8242 = !DILocation(line: 2816, column: 19, scope: !8230)
!8243 = !DILocalVariable(name: "bm", scope: !8230, file: !3, line: 2817, type: !739)
!8244 = !DILocation(line: 2817, column: 9, scope: !8230)
!8245 = !DILocation(line: 2817, column: 14, scope: !8230)
!8246 = !DILocation(line: 2817, column: 18, scope: !8230)
!8247 = !DILocalVariable(name: "stack", scope: !8230, file: !3, line: 2819, type: !8248)
!8248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8249, size: 64)
!8249 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !614, line: 48, baseType: !8250)
!8250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !614, line: 45, size: 128, elements: !8251)
!8251 = !{!8252, !8254}
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8250, file: !614, line: 46, baseType: !8253, size: 64)
!8253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8250, size: 64)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !8250, file: !614, line: 47, baseType: !288, size: 64, offset: 64)
!8255 = !DILocation(line: 2819, column: 2, scope: !8230)
!8256 = !DILocalVariable(name: "_stack_pool", scope: !8230, file: !3, line: 2819, type: !3267)
!8257 = !DILocalVariable(name: "_stack_type", scope: !8230, file: !3, line: 2819, type: !685)
!8258 = !DILocalVariable(name: "iter", scope: !8230, file: !3, line: 2821, type: !3253)
!8259 = !DILocation(line: 2821, column: 9, scope: !8230)
!8260 = !DILocalVariable(name: "liter", scope: !8230, file: !3, line: 2821, type: !3253)
!8261 = !DILocation(line: 2821, column: 15, scope: !8230)
!8262 = !DILocalVariable(name: "liter2", scope: !8230, file: !3, line: 2821, type: !3253)
!8263 = !DILocation(line: 2821, column: 22, scope: !8230)
!8264 = !DILocalVariable(name: "f", scope: !8230, file: !3, line: 2822, type: !685)
!8265 = !DILocation(line: 2822, column: 10, scope: !8230)
!8266 = !DILocalVariable(name: "l", scope: !8230, file: !3, line: 2823, type: !663)
!8267 = !DILocation(line: 2823, column: 10, scope: !8230)
!8268 = !DILocalVariable(name: "l2", scope: !8230, file: !3, line: 2823, type: !663)
!8269 = !DILocation(line: 2823, column: 14, scope: !8230)
!8270 = !DILocalVariable(name: "angle_limit", scope: !8230, file: !3, line: 2824, type: !4310)
!8271 = !DILocation(line: 2824, column: 14, scope: !8230)
!8272 = !DILocation(line: 2824, column: 42, scope: !8230)
!8273 = !DILocation(line: 2824, column: 46, scope: !8230)
!8274 = !DILocation(line: 2824, column: 28, scope: !8230)
!8275 = !DILocation(line: 2826, column: 33, scope: !8230)
!8276 = !DILocation(line: 2826, column: 2, scope: !8230)
!8277 = !DILocation(line: 2828, column: 2, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 2828, column: 2)
!8279 = !DILocation(line: 2830, column: 2, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 2830, column: 2)
!8281 = !DILocation(line: 2830, column: 2, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2830, column: 2)
!8283 = !DILocation(line: 2831, column: 8, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2831, column: 7)
!8285 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2830, column: 48)
!8286 = !DILocation(line: 2831, column: 45, scope: !8284)
!8287 = !DILocation(line: 2831, column: 51, scope: !8284)
!8288 = !DILocation(line: 2832, column: 8, scope: !8284)
!8289 = !DILocation(line: 2832, column: 45, scope: !8284)
!8290 = !DILocation(line: 2832, column: 51, scope: !8284)
!8291 = !DILocation(line: 2833, column: 8, scope: !8284)
!8292 = !DILocation(line: 2833, column: 45, scope: !8284)
!8293 = !DILocation(line: 2831, column: 7, scope: !8285)
!8294 = !DILocation(line: 2835, column: 4, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 2834, column: 3)
!8296 = !DILocation(line: 2840, column: 3, scope: !8285)
!8297 = !DILocation(line: 2841, column: 23, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2840, column: 6)
!8299 = !DILocation(line: 2841, column: 27, scope: !8298)
!8300 = !DILocation(line: 2841, column: 4, scope: !8298)
!8301 = !DILocation(line: 2843, column: 4, scope: !8298)
!8302 = !DILocation(line: 2845, column: 4, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 2845, column: 4)
!8304 = !DILocation(line: 2845, column: 4, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2845, column: 4)
!8306 = !DILocation(line: 2846, column: 5, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 2846, column: 5)
!8308 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 2845, column: 50)
!8309 = !DILocation(line: 2846, column: 5, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 2846, column: 5)
!8311 = !DILocalVariable(name: "angle", scope: !8312, file: !3, line: 2847, type: !364)
!8312 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 2846, column: 53)
!8313 = !DILocation(line: 2847, column: 12, scope: !8312)
!8314 = !DILocation(line: 2849, column: 10, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 2849, column: 10)
!8316 = !DILocation(line: 2849, column: 48, scope: !8315)
!8317 = !DILocation(line: 2850, column: 10, scope: !8315)
!8318 = !DILocation(line: 2849, column: 10, scope: !8312)
!8319 = !DILocation(line: 2852, column: 7, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 2851, column: 6)
!8321 = !DILocation(line: 2855, column: 36, scope: !8312)
!8322 = !DILocation(line: 2855, column: 39, scope: !8312)
!8323 = !DILocation(line: 2855, column: 43, scope: !8312)
!8324 = !DILocation(line: 2855, column: 47, scope: !8312)
!8325 = !DILocation(line: 2855, column: 50, scope: !8312)
!8326 = !DILocation(line: 2855, column: 14, scope: !8312)
!8327 = !DILocation(line: 2855, column: 12, scope: !8312)
!8328 = !DILocation(line: 2857, column: 10, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 2857, column: 10)
!8330 = !DILocation(line: 2857, column: 18, scope: !8329)
!8331 = !DILocation(line: 2857, column: 16, scope: !8329)
!8332 = !DILocation(line: 2857, column: 10, scope: !8312)
!8333 = !DILocation(line: 2858, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 2857, column: 31)
!8335 = !DILocation(line: 2859, column: 6, scope: !8334)
!8336 = !DILocation(line: 2860, column: 5, scope: !8312)
!8337 = distinct !{!8337, !8306, !8338}
!8338 = !DILocation(line: 2860, column: 5, scope: !8307)
!8339 = !DILocation(line: 2861, column: 4, scope: !8308)
!8340 = distinct !{!8340, !8302, !8341}
!8341 = !DILocation(line: 2861, column: 4, scope: !8303)
!8342 = !DILocation(line: 2862, column: 3, scope: !8298)
!8343 = !DILocation(line: 2862, column: 17, scope: !8285)
!8344 = !DILocation(line: 2862, column: 15, scope: !8285)
!8345 = distinct !{!8345, !8296, !8346}
!8346 = !DILocation(line: 2862, column: 42, scope: !8285)
!8347 = !DILocation(line: 2863, column: 2, scope: !8285)
!8348 = distinct !{!8348, !8279, !8349}
!8349 = !DILocation(line: 2863, column: 2, scope: !8280)
!8350 = !DILocation(line: 2865, column: 2, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 2865, column: 2)
!8352 = !DILocation(line: 2867, column: 24, scope: !8230)
!8353 = !DILocation(line: 2867, column: 48, scope: !8230)
!8354 = !DILocation(line: 2867, column: 56, scope: !8230)
!8355 = !DILocation(line: 2867, column: 2, scope: !8230)
!8356 = !DILocation(line: 2869, column: 2, scope: !8230)
!8357 = distinct !DISubprogram(name: "MESH_OT_select_non_manifold", scope: !3, file: !3, line: 2955, type: !3071, scopeLine: 2956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8358 = !DILocalVariable(name: "ot", arg: 1, scope: !8357, file: !3, line: 2955, type: !3073)
!8359 = !DILocation(line: 2955, column: 50, scope: !8357)
!8360 = !DILocation(line: 2958, column: 2, scope: !8357)
!8361 = !DILocation(line: 2958, column: 6, scope: !8357)
!8362 = !DILocation(line: 2958, column: 11, scope: !8357)
!8363 = !DILocation(line: 2959, column: 2, scope: !8357)
!8364 = !DILocation(line: 2959, column: 6, scope: !8357)
!8365 = !DILocation(line: 2959, column: 18, scope: !8357)
!8366 = !DILocation(line: 2960, column: 2, scope: !8357)
!8367 = !DILocation(line: 2960, column: 6, scope: !8357)
!8368 = !DILocation(line: 2960, column: 13, scope: !8357)
!8369 = !DILocation(line: 2963, column: 2, scope: !8357)
!8370 = !DILocation(line: 2963, column: 6, scope: !8357)
!8371 = !DILocation(line: 2963, column: 11, scope: !8357)
!8372 = !DILocation(line: 2964, column: 2, scope: !8357)
!8373 = !DILocation(line: 2964, column: 6, scope: !8357)
!8374 = !DILocation(line: 2964, column: 11, scope: !8357)
!8375 = !DILocation(line: 2967, column: 2, scope: !8357)
!8376 = !DILocation(line: 2967, column: 6, scope: !8357)
!8377 = !DILocation(line: 2967, column: 11, scope: !8357)
!8378 = !DILocation(line: 2970, column: 18, scope: !8357)
!8379 = !DILocation(line: 2970, column: 22, scope: !8357)
!8380 = !DILocation(line: 2970, column: 2, scope: !8357)
!8381 = !DILocation(line: 2972, column: 18, scope: !8357)
!8382 = !DILocation(line: 2972, column: 22, scope: !8357)
!8383 = !DILocation(line: 2972, column: 2, scope: !8357)
!8384 = !DILocation(line: 2974, column: 18, scope: !8357)
!8385 = !DILocation(line: 2974, column: 22, scope: !8357)
!8386 = !DILocation(line: 2974, column: 2, scope: !8357)
!8387 = !DILocation(line: 2976, column: 18, scope: !8357)
!8388 = !DILocation(line: 2976, column: 22, scope: !8357)
!8389 = !DILocation(line: 2976, column: 2, scope: !8357)
!8390 = !DILocation(line: 2978, column: 18, scope: !8357)
!8391 = !DILocation(line: 2978, column: 22, scope: !8357)
!8392 = !DILocation(line: 2978, column: 2, scope: !8357)
!8393 = !DILocation(line: 2981, column: 18, scope: !8357)
!8394 = !DILocation(line: 2981, column: 22, scope: !8357)
!8395 = !DILocation(line: 2981, column: 2, scope: !8357)
!8396 = !DILocation(line: 2983, column: 1, scope: !8357)
!8397 = distinct !DISubprogram(name: "edbm_select_non_manifold_exec", scope: !3, file: !3, line: 2894, type: !4978, scopeLine: 2895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8398 = !DILocalVariable(name: "C", arg: 1, scope: !8397, file: !3, line: 2894, type: !4980)
!8399 = !DILocation(line: 2894, column: 52, scope: !8397)
!8400 = !DILocalVariable(name: "op", arg: 2, scope: !8397, file: !3, line: 2894, type: !4982)
!8401 = !DILocation(line: 2894, column: 67, scope: !8397)
!8402 = !DILocalVariable(name: "obedit", scope: !8397, file: !3, line: 2896, type: !3615)
!8403 = !DILocation(line: 2896, column: 10, scope: !8397)
!8404 = !DILocation(line: 2896, column: 40, scope: !8397)
!8405 = !DILocation(line: 2896, column: 19, scope: !8397)
!8406 = !DILocalVariable(name: "em", scope: !8397, file: !3, line: 2897, type: !2675)
!8407 = !DILocation(line: 2897, column: 14, scope: !8397)
!8408 = !DILocation(line: 2897, column: 44, scope: !8397)
!8409 = !DILocation(line: 2897, column: 19, scope: !8397)
!8410 = !DILocalVariable(name: "v", scope: !8397, file: !3, line: 2898, type: !620)
!8411 = !DILocation(line: 2898, column: 10, scope: !8397)
!8412 = !DILocalVariable(name: "e", scope: !8397, file: !3, line: 2899, type: !681)
!8413 = !DILocation(line: 2899, column: 10, scope: !8397)
!8414 = !DILocalVariable(name: "iter", scope: !8397, file: !3, line: 2900, type: !3253)
!8415 = !DILocation(line: 2900, column: 9, scope: !8397)
!8416 = !DILocalVariable(name: "use_wire", scope: !8397, file: !3, line: 2902, type: !3057)
!8417 = !DILocation(line: 2902, column: 13, scope: !8397)
!8418 = !DILocation(line: 2902, column: 40, scope: !8397)
!8419 = !DILocation(line: 2902, column: 44, scope: !8397)
!8420 = !DILocation(line: 2902, column: 24, scope: !8397)
!8421 = !DILocalVariable(name: "use_boundary", scope: !8397, file: !3, line: 2903, type: !3057)
!8422 = !DILocation(line: 2903, column: 13, scope: !8397)
!8423 = !DILocation(line: 2903, column: 44, scope: !8397)
!8424 = !DILocation(line: 2903, column: 48, scope: !8397)
!8425 = !DILocation(line: 2903, column: 28, scope: !8397)
!8426 = !DILocalVariable(name: "use_multi_face", scope: !8397, file: !3, line: 2904, type: !3057)
!8427 = !DILocation(line: 2904, column: 13, scope: !8397)
!8428 = !DILocation(line: 2904, column: 46, scope: !8397)
!8429 = !DILocation(line: 2904, column: 50, scope: !8397)
!8430 = !DILocation(line: 2904, column: 30, scope: !8397)
!8431 = !DILocalVariable(name: "use_non_contiguous", scope: !8397, file: !3, line: 2905, type: !3057)
!8432 = !DILocation(line: 2905, column: 13, scope: !8397)
!8433 = !DILocation(line: 2905, column: 50, scope: !8397)
!8434 = !DILocation(line: 2905, column: 54, scope: !8397)
!8435 = !DILocation(line: 2905, column: 34, scope: !8397)
!8436 = !DILocalVariable(name: "use_verts", scope: !8397, file: !3, line: 2906, type: !3057)
!8437 = !DILocation(line: 2906, column: 13, scope: !8397)
!8438 = !DILocation(line: 2906, column: 41, scope: !8397)
!8439 = !DILocation(line: 2906, column: 45, scope: !8397)
!8440 = !DILocation(line: 2906, column: 25, scope: !8397)
!8441 = !DILocation(line: 2909, column: 23, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2909, column: 6)
!8443 = !DILocation(line: 2909, column: 27, scope: !8442)
!8444 = !DILocation(line: 2909, column: 7, scope: !8442)
!8445 = !DILocation(line: 2909, column: 6, scope: !8397)
!8446 = !DILocation(line: 2910, column: 25, scope: !8442)
!8447 = !DILocation(line: 2910, column: 3, scope: !8442)
!8448 = !DILocation(line: 2916, column: 6, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2916, column: 6)
!8450 = !DILocation(line: 2916, column: 10, scope: !8449)
!8451 = !DILocation(line: 2916, column: 21, scope: !8449)
!8452 = !DILocation(line: 2916, column: 6, scope: !8397)
!8453 = !DILocation(line: 2917, column: 14, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 2916, column: 41)
!8455 = !DILocation(line: 2917, column: 18, scope: !8454)
!8456 = !DILocation(line: 2917, column: 3, scope: !8454)
!8457 = !DILocation(line: 2918, column: 3, scope: !8454)
!8458 = !DILocation(line: 2921, column: 6, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2921, column: 6)
!8460 = !DILocation(line: 2921, column: 6, scope: !8397)
!8461 = !DILocation(line: 2922, column: 3, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 2922, column: 3)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2921, column: 17)
!8464 = !DILocation(line: 2922, column: 3, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 2922, column: 3)
!8466 = !DILocation(line: 2923, column: 9, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 2923, column: 8)
!8468 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2922, column: 53)
!8469 = !DILocation(line: 2923, column: 8, scope: !8468)
!8470 = !DILocation(line: 2924, column: 30, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2924, column: 9)
!8472 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 2923, column: 47)
!8473 = !DILocation(line: 2924, column: 10, scope: !8471)
!8474 = !DILocation(line: 2924, column: 9, scope: !8472)
!8475 = !DILocation(line: 2925, column: 25, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 2924, column: 34)
!8477 = !DILocation(line: 2925, column: 29, scope: !8476)
!8478 = !DILocation(line: 2925, column: 33, scope: !8476)
!8479 = !DILocation(line: 2925, column: 6, scope: !8476)
!8480 = !DILocation(line: 2926, column: 5, scope: !8476)
!8481 = !DILocation(line: 2927, column: 4, scope: !8472)
!8482 = !DILocation(line: 2928, column: 3, scope: !8468)
!8483 = distinct !{!8483, !8461, !8484}
!8484 = !DILocation(line: 2928, column: 3, scope: !8462)
!8485 = !DILocation(line: 2929, column: 2, scope: !8463)
!8486 = !DILocation(line: 2931, column: 6, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2931, column: 6)
!8488 = !DILocation(line: 2931, column: 15, scope: !8487)
!8489 = !DILocation(line: 2931, column: 18, scope: !8487)
!8490 = !DILocation(line: 2931, column: 31, scope: !8487)
!8491 = !DILocation(line: 2931, column: 34, scope: !8487)
!8492 = !DILocation(line: 2931, column: 49, scope: !8487)
!8493 = !DILocation(line: 2931, column: 52, scope: !8487)
!8494 = !DILocation(line: 2931, column: 6, scope: !8397)
!8495 = !DILocation(line: 2932, column: 3, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2932, column: 3)
!8497 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 2931, column: 72)
!8498 = !DILocation(line: 2932, column: 3, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 2932, column: 3)
!8500 = !DILocation(line: 2933, column: 9, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 2933, column: 8)
!8502 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 2932, column: 53)
!8503 = !DILocation(line: 2933, column: 8, scope: !8502)
!8504 = !DILocation(line: 2934, column: 10, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 2934, column: 9)
!8506 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2933, column: 47)
!8507 = !DILocation(line: 2934, column: 19, scope: !8505)
!8508 = !DILocation(line: 2934, column: 38, scope: !8505)
!8509 = !DILocation(line: 2934, column: 22, scope: !8505)
!8510 = !DILocation(line: 2934, column: 42, scope: !8505)
!8511 = !DILocation(line: 2935, column: 10, scope: !8505)
!8512 = !DILocation(line: 2935, column: 23, scope: !8505)
!8513 = !DILocation(line: 2935, column: 46, scope: !8505)
!8514 = !DILocation(line: 2935, column: 26, scope: !8505)
!8515 = !DILocation(line: 2935, column: 50, scope: !8505)
!8516 = !DILocation(line: 2936, column: 10, scope: !8505)
!8517 = !DILocation(line: 2936, column: 29, scope: !8505)
!8518 = !DILocation(line: 2936, column: 53, scope: !8505)
!8519 = !DILocation(line: 2936, column: 33, scope: !8505)
!8520 = !DILocation(line: 2936, column: 56, scope: !8505)
!8521 = !DILocation(line: 2936, column: 82, scope: !8505)
!8522 = !DILocation(line: 2936, column: 60, scope: !8505)
!8523 = !DILocation(line: 2936, column: 87, scope: !8505)
!8524 = !DILocation(line: 2937, column: 10, scope: !8505)
!8525 = !DILocation(line: 2937, column: 25, scope: !8505)
!8526 = !DILocation(line: 2937, column: 48, scope: !8505)
!8527 = !DILocation(line: 2937, column: 29, scope: !8505)
!8528 = !DILocation(line: 2937, column: 51, scope: !8505)
!8529 = !DILocation(line: 2934, column: 9, scope: !8506)
!8530 = !DILocation(line: 2942, column: 25, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 2938, column: 5)
!8532 = !DILocation(line: 2942, column: 29, scope: !8531)
!8533 = !DILocation(line: 2942, column: 33, scope: !8531)
!8534 = !DILocation(line: 2942, column: 6, scope: !8531)
!8535 = !DILocation(line: 2943, column: 5, scope: !8531)
!8536 = !DILocation(line: 2944, column: 4, scope: !8506)
!8537 = !DILocation(line: 2945, column: 3, scope: !8502)
!8538 = distinct !{!8538, !8495, !8539}
!8539 = !DILocation(line: 2945, column: 3, scope: !8496)
!8540 = !DILocation(line: 2946, column: 2, scope: !8497)
!8541 = !DILocation(line: 2948, column: 24, scope: !8397)
!8542 = !DILocation(line: 2948, column: 48, scope: !8397)
!8543 = !DILocation(line: 2948, column: 56, scope: !8397)
!8544 = !DILocation(line: 2948, column: 2, scope: !8397)
!8545 = !DILocation(line: 2950, column: 24, scope: !8397)
!8546 = !DILocation(line: 2950, column: 2, scope: !8397)
!8547 = !DILocation(line: 2952, column: 2, scope: !8397)
!8548 = !DILocation(line: 2953, column: 1, scope: !8397)
!8549 = distinct !DISubprogram(name: "MESH_OT_select_random", scope: !3, file: !3, line: 3032, type: !3071, scopeLine: 3033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8550 = !DILocalVariable(name: "ot", arg: 1, scope: !8549, file: !3, line: 3032, type: !3073)
!8551 = !DILocation(line: 3032, column: 44, scope: !8549)
!8552 = !DILocation(line: 3035, column: 2, scope: !8549)
!8553 = !DILocation(line: 3035, column: 6, scope: !8549)
!8554 = !DILocation(line: 3035, column: 11, scope: !8549)
!8555 = !DILocation(line: 3036, column: 2, scope: !8549)
!8556 = !DILocation(line: 3036, column: 6, scope: !8549)
!8557 = !DILocation(line: 3036, column: 18, scope: !8549)
!8558 = !DILocation(line: 3037, column: 2, scope: !8549)
!8559 = !DILocation(line: 3037, column: 6, scope: !8549)
!8560 = !DILocation(line: 3037, column: 13, scope: !8549)
!8561 = !DILocation(line: 3040, column: 2, scope: !8549)
!8562 = !DILocation(line: 3040, column: 6, scope: !8549)
!8563 = !DILocation(line: 3040, column: 11, scope: !8549)
!8564 = !DILocation(line: 3041, column: 2, scope: !8549)
!8565 = !DILocation(line: 3041, column: 6, scope: !8549)
!8566 = !DILocation(line: 3041, column: 11, scope: !8549)
!8567 = !DILocation(line: 3044, column: 2, scope: !8549)
!8568 = !DILocation(line: 3044, column: 6, scope: !8549)
!8569 = !DILocation(line: 3044, column: 11, scope: !8549)
!8570 = !DILocation(line: 3047, column: 27, scope: !8549)
!8571 = !DILocation(line: 3047, column: 31, scope: !8549)
!8572 = !DILocation(line: 3047, column: 2, scope: !8549)
!8573 = !DILocation(line: 3049, column: 46, scope: !8549)
!8574 = !DILocation(line: 3049, column: 2, scope: !8549)
!8575 = !DILocation(line: 3050, column: 1, scope: !8549)
!8576 = distinct !DISubprogram(name: "edbm_select_random_exec", scope: !3, file: !3, line: 2985, type: !4978, scopeLine: 2986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8577 = !DILocalVariable(name: "C", arg: 1, scope: !8576, file: !3, line: 2985, type: !4980)
!8578 = !DILocation(line: 2985, column: 46, scope: !8576)
!8579 = !DILocalVariable(name: "op", arg: 2, scope: !8576, file: !3, line: 2985, type: !4982)
!8580 = !DILocation(line: 2985, column: 61, scope: !8576)
!8581 = !DILocalVariable(name: "obedit", scope: !8576, file: !3, line: 2987, type: !3615)
!8582 = !DILocation(line: 2987, column: 10, scope: !8576)
!8583 = !DILocation(line: 2987, column: 40, scope: !8576)
!8584 = !DILocation(line: 2987, column: 19, scope: !8576)
!8585 = !DILocalVariable(name: "em", scope: !8576, file: !3, line: 2988, type: !2675)
!8586 = !DILocation(line: 2988, column: 14, scope: !8576)
!8587 = !DILocation(line: 2988, column: 44, scope: !8576)
!8588 = !DILocation(line: 2988, column: 19, scope: !8576)
!8589 = !DILocalVariable(name: "select", scope: !8576, file: !3, line: 2989, type: !3057)
!8590 = !DILocation(line: 2989, column: 13, scope: !8576)
!8591 = !DILocation(line: 2989, column: 36, scope: !8576)
!8592 = !DILocation(line: 2989, column: 40, scope: !8576)
!8593 = !DILocation(line: 2989, column: 23, scope: !8576)
!8594 = !DILocation(line: 2989, column: 55, scope: !8576)
!8595 = !DILocation(line: 2989, column: 22, scope: !8576)
!8596 = !DILocalVariable(name: "randfac", scope: !8576, file: !3, line: 2990, type: !4310)
!8597 = !DILocation(line: 2990, column: 14, scope: !8576)
!8598 = !DILocation(line: 2990, column: 39, scope: !8576)
!8599 = !DILocation(line: 2990, column: 43, scope: !8576)
!8600 = !DILocation(line: 2990, column: 25, scope: !8576)
!8601 = !DILocation(line: 2990, column: 59, scope: !8576)
!8602 = !DILocalVariable(name: "iter", scope: !8576, file: !3, line: 2992, type: !3253)
!8603 = !DILocation(line: 2992, column: 9, scope: !8576)
!8604 = !DILocation(line: 2994, column: 6, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 2994, column: 6)
!8606 = !DILocation(line: 2994, column: 10, scope: !8605)
!8607 = !DILocation(line: 2994, column: 21, scope: !8605)
!8608 = !DILocation(line: 2994, column: 6, scope: !8576)
!8609 = !DILocalVariable(name: "eve", scope: !8610, file: !3, line: 2995, type: !620)
!8610 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 2994, column: 42)
!8611 = !DILocation(line: 2995, column: 11, scope: !8610)
!8612 = !DILocation(line: 2996, column: 3, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 2996, column: 3)
!8614 = !DILocation(line: 2996, column: 3, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 2996, column: 3)
!8616 = !DILocation(line: 2997, column: 9, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 2997, column: 8)
!8618 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 2996, column: 55)
!8619 = !DILocation(line: 2997, column: 48, scope: !8617)
!8620 = !DILocation(line: 2997, column: 51, scope: !8617)
!8621 = !DILocation(line: 2997, column: 65, scope: !8617)
!8622 = !DILocation(line: 2997, column: 63, scope: !8617)
!8623 = !DILocation(line: 2997, column: 8, scope: !8618)
!8624 = !DILocation(line: 2998, column: 24, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 2997, column: 74)
!8626 = !DILocation(line: 2998, column: 28, scope: !8625)
!8627 = !DILocation(line: 2998, column: 32, scope: !8625)
!8628 = !DILocation(line: 2998, column: 37, scope: !8625)
!8629 = !DILocation(line: 2998, column: 5, scope: !8625)
!8630 = !DILocation(line: 2999, column: 4, scope: !8625)
!8631 = !DILocation(line: 3000, column: 3, scope: !8618)
!8632 = distinct !{!8632, !8612, !8633}
!8633 = !DILocation(line: 3000, column: 3, scope: !8613)
!8634 = !DILocation(line: 3001, column: 2, scope: !8610)
!8635 = !DILocation(line: 3002, column: 11, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 3002, column: 11)
!8637 = !DILocation(line: 3002, column: 15, scope: !8636)
!8638 = !DILocation(line: 3002, column: 26, scope: !8636)
!8639 = !DILocation(line: 3002, column: 11, scope: !8605)
!8640 = !DILocalVariable(name: "eed", scope: !8641, file: !3, line: 3003, type: !681)
!8641 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 3002, column: 45)
!8642 = !DILocation(line: 3003, column: 11, scope: !8641)
!8643 = !DILocation(line: 3004, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 3004, column: 3)
!8645 = !DILocation(line: 3004, column: 3, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 3004, column: 3)
!8647 = !DILocation(line: 3005, column: 9, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 3005, column: 8)
!8649 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 3004, column: 55)
!8650 = !DILocation(line: 3005, column: 48, scope: !8648)
!8651 = !DILocation(line: 3005, column: 51, scope: !8648)
!8652 = !DILocation(line: 3005, column: 65, scope: !8648)
!8653 = !DILocation(line: 3005, column: 63, scope: !8648)
!8654 = !DILocation(line: 3005, column: 8, scope: !8649)
!8655 = !DILocation(line: 3006, column: 24, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 3005, column: 74)
!8657 = !DILocation(line: 3006, column: 28, scope: !8656)
!8658 = !DILocation(line: 3006, column: 32, scope: !8656)
!8659 = !DILocation(line: 3006, column: 37, scope: !8656)
!8660 = !DILocation(line: 3006, column: 5, scope: !8656)
!8661 = !DILocation(line: 3007, column: 4, scope: !8656)
!8662 = !DILocation(line: 3008, column: 3, scope: !8649)
!8663 = distinct !{!8663, !8643, !8664}
!8664 = !DILocation(line: 3008, column: 3, scope: !8644)
!8665 = !DILocation(line: 3009, column: 2, scope: !8641)
!8666 = !DILocalVariable(name: "efa", scope: !8667, file: !3, line: 3011, type: !685)
!8667 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 3010, column: 7)
!8668 = !DILocation(line: 3011, column: 11, scope: !8667)
!8669 = !DILocation(line: 3012, column: 3, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 3012, column: 3)
!8671 = !DILocation(line: 3012, column: 3, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 3012, column: 3)
!8673 = !DILocation(line: 3013, column: 9, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 3013, column: 8)
!8675 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 3012, column: 55)
!8676 = !DILocation(line: 3013, column: 48, scope: !8674)
!8677 = !DILocation(line: 3013, column: 51, scope: !8674)
!8678 = !DILocation(line: 3013, column: 65, scope: !8674)
!8679 = !DILocation(line: 3013, column: 63, scope: !8674)
!8680 = !DILocation(line: 3013, column: 8, scope: !8675)
!8681 = !DILocation(line: 3014, column: 24, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 3013, column: 74)
!8683 = !DILocation(line: 3014, column: 28, scope: !8682)
!8684 = !DILocation(line: 3014, column: 32, scope: !8682)
!8685 = !DILocation(line: 3014, column: 37, scope: !8682)
!8686 = !DILocation(line: 3014, column: 5, scope: !8682)
!8687 = !DILocation(line: 3015, column: 4, scope: !8682)
!8688 = !DILocation(line: 3016, column: 3, scope: !8675)
!8689 = distinct !{!8689, !8669, !8690}
!8690 = !DILocation(line: 3016, column: 3, scope: !8670)
!8691 = !DILocation(line: 3019, column: 6, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 3019, column: 6)
!8693 = !DILocation(line: 3019, column: 6, scope: !8576)
!8694 = !DILocation(line: 3021, column: 25, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 3019, column: 14)
!8696 = !DILocation(line: 3021, column: 3, scope: !8695)
!8697 = !DILocation(line: 3022, column: 2, scope: !8695)
!8698 = !DILocation(line: 3024, column: 23, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 3023, column: 7)
!8700 = !DILocation(line: 3024, column: 3, scope: !8699)
!8701 = !DILocation(line: 3027, column: 24, scope: !8576)
!8702 = !DILocation(line: 3027, column: 48, scope: !8576)
!8703 = !DILocation(line: 3027, column: 56, scope: !8576)
!8704 = !DILocation(line: 3027, column: 2, scope: !8576)
!8705 = !DILocation(line: 3029, column: 2, scope: !8576)
!8706 = distinct !DISubprogram(name: "MESH_OT_select_ungrouped", scope: !3, file: !3, line: 3101, type: !3071, scopeLine: 3102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8707 = !DILocalVariable(name: "ot", arg: 1, scope: !8706, file: !3, line: 3101, type: !3073)
!8708 = !DILocation(line: 3101, column: 47, scope: !8706)
!8709 = !DILocation(line: 3104, column: 2, scope: !8706)
!8710 = !DILocation(line: 3104, column: 6, scope: !8706)
!8711 = !DILocation(line: 3104, column: 11, scope: !8706)
!8712 = !DILocation(line: 3105, column: 2, scope: !8706)
!8713 = !DILocation(line: 3105, column: 6, scope: !8706)
!8714 = !DILocation(line: 3105, column: 13, scope: !8706)
!8715 = !DILocation(line: 3106, column: 2, scope: !8706)
!8716 = !DILocation(line: 3106, column: 6, scope: !8706)
!8717 = !DILocation(line: 3106, column: 18, scope: !8706)
!8718 = !DILocation(line: 3109, column: 2, scope: !8706)
!8719 = !DILocation(line: 3109, column: 6, scope: !8706)
!8720 = !DILocation(line: 3109, column: 11, scope: !8706)
!8721 = !DILocation(line: 3110, column: 2, scope: !8706)
!8722 = !DILocation(line: 3110, column: 6, scope: !8706)
!8723 = !DILocation(line: 3110, column: 11, scope: !8706)
!8724 = !DILocation(line: 3113, column: 2, scope: !8706)
!8725 = !DILocation(line: 3113, column: 6, scope: !8706)
!8726 = !DILocation(line: 3113, column: 11, scope: !8706)
!8727 = !DILocation(line: 3115, column: 18, scope: !8706)
!8728 = !DILocation(line: 3115, column: 22, scope: !8706)
!8729 = !DILocation(line: 3115, column: 2, scope: !8706)
!8730 = !DILocation(line: 3116, column: 1, scope: !8706)
!8731 = distinct !DISubprogram(name: "edbm_select_ungrouped_exec", scope: !3, file: !3, line: 3072, type: !4978, scopeLine: 3073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8732 = !DILocalVariable(name: "C", arg: 1, scope: !8731, file: !3, line: 3072, type: !4980)
!8733 = !DILocation(line: 3072, column: 49, scope: !8731)
!8734 = !DILocalVariable(name: "op", arg: 2, scope: !8731, file: !3, line: 3072, type: !4982)
!8735 = !DILocation(line: 3072, column: 64, scope: !8731)
!8736 = !DILocalVariable(name: "obedit", scope: !8731, file: !3, line: 3074, type: !3615)
!8737 = !DILocation(line: 3074, column: 10, scope: !8731)
!8738 = !DILocation(line: 3074, column: 40, scope: !8731)
!8739 = !DILocation(line: 3074, column: 19, scope: !8731)
!8740 = !DILocalVariable(name: "em", scope: !8731, file: !3, line: 3075, type: !2675)
!8741 = !DILocation(line: 3075, column: 14, scope: !8731)
!8742 = !DILocation(line: 3075, column: 44, scope: !8731)
!8743 = !DILocation(line: 3075, column: 19, scope: !8731)
!8744 = !DILocalVariable(name: "cd_dvert_offset", scope: !8731, file: !3, line: 3076, type: !3570)
!8745 = !DILocation(line: 3076, column: 12, scope: !8731)
!8746 = !DILocation(line: 3076, column: 53, scope: !8731)
!8747 = !DILocation(line: 3076, column: 57, scope: !8731)
!8748 = !DILocation(line: 3076, column: 61, scope: !8731)
!8749 = !DILocation(line: 3076, column: 30, scope: !8731)
!8750 = !DILocalVariable(name: "eve", scope: !8731, file: !3, line: 3078, type: !620)
!8751 = !DILocation(line: 3078, column: 10, scope: !8731)
!8752 = !DILocalVariable(name: "iter", scope: !8731, file: !3, line: 3079, type: !3253)
!8753 = !DILocation(line: 3079, column: 9, scope: !8731)
!8754 = !DILocation(line: 3081, column: 23, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 3081, column: 6)
!8756 = !DILocation(line: 3081, column: 27, scope: !8755)
!8757 = !DILocation(line: 3081, column: 7, scope: !8755)
!8758 = !DILocation(line: 3081, column: 6, scope: !8731)
!8759 = !DILocation(line: 3082, column: 25, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 3081, column: 43)
!8761 = !DILocation(line: 3082, column: 3, scope: !8760)
!8762 = !DILocation(line: 3083, column: 2, scope: !8760)
!8763 = !DILocation(line: 3085, column: 2, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 3085, column: 2)
!8765 = !DILocation(line: 3085, column: 2, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 3085, column: 2)
!8767 = !DILocation(line: 3086, column: 8, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 3086, column: 7)
!8769 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 3085, column: 54)
!8770 = !DILocation(line: 3086, column: 7, scope: !8769)
!8771 = !DILocalVariable(name: "dv", scope: !8772, file: !3, line: 3087, type: !8773)
!8772 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 3086, column: 48)
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8774, size: 64)
!8774 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !384, line: 63, baseType: !573)
!8775 = !DILocation(line: 3087, column: 17, scope: !8772)
!8776 = !DILocation(line: 3087, column: 22, scope: !8772)
!8777 = !DILocation(line: 3089, column: 8, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 3089, column: 8)
!8779 = !DILocation(line: 3089, column: 8, scope: !8772)
!8780 = !DILocation(line: 3090, column: 24, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 3089, column: 32)
!8782 = !DILocation(line: 3090, column: 28, scope: !8781)
!8783 = !DILocation(line: 3090, column: 32, scope: !8781)
!8784 = !DILocation(line: 3090, column: 5, scope: !8781)
!8785 = !DILocation(line: 3091, column: 4, scope: !8781)
!8786 = !DILocation(line: 3092, column: 3, scope: !8772)
!8787 = !DILocation(line: 3093, column: 2, scope: !8769)
!8788 = distinct !{!8788, !8763, !8789}
!8789 = !DILocation(line: 3093, column: 2, scope: !8764)
!8790 = !DILocation(line: 3095, column: 24, scope: !8731)
!8791 = !DILocation(line: 3095, column: 2, scope: !8731)
!8792 = !DILocation(line: 3096, column: 24, scope: !8731)
!8793 = !DILocation(line: 3096, column: 48, scope: !8731)
!8794 = !DILocation(line: 3096, column: 56, scope: !8731)
!8795 = !DILocation(line: 3096, column: 2, scope: !8731)
!8796 = !DILocation(line: 3098, column: 2, scope: !8731)
!8797 = distinct !DISubprogram(name: "edbm_select_ungrouped_poll", scope: !3, file: !3, line: 3052, type: !8798, scopeLine: 3053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8798 = !DISubroutineType(types: !8799)
!8799 = !{!319, !4980}
!8800 = !DILocalVariable(name: "C", arg: 1, scope: !8797, file: !3, line: 3052, type: !4980)
!8801 = !DILocation(line: 3052, column: 49, scope: !8797)
!8802 = !DILocation(line: 3054, column: 27, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 3054, column: 6)
!8804 = !DILocation(line: 3054, column: 6, scope: !8803)
!8805 = !DILocation(line: 3054, column: 6, scope: !8797)
!8806 = !DILocalVariable(name: "obedit", scope: !8807, file: !3, line: 3055, type: !3615)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 3054, column: 31)
!8808 = !DILocation(line: 3055, column: 11, scope: !8807)
!8809 = !DILocation(line: 3055, column: 41, scope: !8807)
!8810 = !DILocation(line: 3055, column: 20, scope: !8807)
!8811 = !DILocalVariable(name: "em", scope: !8807, file: !3, line: 3056, type: !2675)
!8812 = !DILocation(line: 3056, column: 15, scope: !8807)
!8813 = !DILocation(line: 3056, column: 45, scope: !8807)
!8814 = !DILocation(line: 3056, column: 20, scope: !8807)
!8815 = !DILocalVariable(name: "cd_dvert_offset", scope: !8807, file: !3, line: 3057, type: !3570)
!8816 = !DILocation(line: 3057, column: 13, scope: !8807)
!8817 = !DILocation(line: 3057, column: 54, scope: !8807)
!8818 = !DILocation(line: 3057, column: 58, scope: !8807)
!8819 = !DILocation(line: 3057, column: 62, scope: !8807)
!8820 = !DILocation(line: 3057, column: 31, scope: !8807)
!8821 = !DILocation(line: 3059, column: 8, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 3059, column: 7)
!8823 = !DILocation(line: 3059, column: 12, scope: !8822)
!8824 = !DILocation(line: 3059, column: 23, scope: !8822)
!8825 = !DILocation(line: 3059, column: 44, scope: !8822)
!8826 = !DILocation(line: 3059, column: 7, scope: !8807)
!8827 = !DILocation(line: 3060, column: 33, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 3059, column: 50)
!8829 = !DILocation(line: 3060, column: 4, scope: !8828)
!8830 = !DILocation(line: 3061, column: 3, scope: !8828)
!8831 = !DILocation(line: 3062, column: 35, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 3062, column: 12)
!8833 = !DILocation(line: 3062, column: 43, scope: !8832)
!8834 = !DILocation(line: 3062, column: 12, scope: !8832)
!8835 = !DILocation(line: 3062, column: 52, scope: !8832)
!8836 = !DILocation(line: 3062, column: 55, scope: !8832)
!8837 = !DILocation(line: 3062, column: 71, scope: !8832)
!8838 = !DILocation(line: 3062, column: 12, scope: !8822)
!8839 = !DILocation(line: 3063, column: 33, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3062, column: 78)
!8841 = !DILocation(line: 3063, column: 4, scope: !8840)
!8842 = !DILocation(line: 3064, column: 3, scope: !8840)
!8843 = !DILocation(line: 3066, column: 4, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3065, column: 8)
!8845 = !DILocation(line: 3068, column: 2, scope: !8807)
!8846 = !DILocation(line: 3069, column: 2, scope: !8797)
!8847 = !DILocation(line: 3070, column: 1, scope: !8797)
!8848 = !DILocalVariable(name: "ot", arg: 1, scope: !3217, file: !3, line: 3170, type: !3073)
!8849 = !DILocation(line: 3170, column: 42, scope: !3217)
!8850 = !DILocation(line: 3187, column: 2, scope: !3217)
!8851 = !DILocation(line: 3187, column: 6, scope: !3217)
!8852 = !DILocation(line: 3187, column: 11, scope: !3217)
!8853 = !DILocation(line: 3188, column: 2, scope: !3217)
!8854 = !DILocation(line: 3188, column: 6, scope: !3217)
!8855 = !DILocation(line: 3188, column: 18, scope: !3217)
!8856 = !DILocation(line: 3189, column: 2, scope: !3217)
!8857 = !DILocation(line: 3189, column: 6, scope: !3217)
!8858 = !DILocation(line: 3189, column: 13, scope: !3217)
!8859 = !DILocation(line: 3192, column: 2, scope: !3217)
!8860 = !DILocation(line: 3192, column: 6, scope: !3217)
!8861 = !DILocation(line: 3192, column: 11, scope: !3217)
!8862 = !DILocation(line: 3193, column: 2, scope: !3217)
!8863 = !DILocation(line: 3193, column: 6, scope: !3217)
!8864 = !DILocation(line: 3193, column: 11, scope: !3217)
!8865 = !DILocation(line: 3196, column: 2, scope: !3217)
!8866 = !DILocation(line: 3196, column: 6, scope: !3217)
!8867 = !DILocation(line: 3196, column: 11, scope: !3217)
!8868 = !DILocation(line: 3199, column: 15, scope: !3217)
!8869 = !DILocation(line: 3199, column: 19, scope: !3217)
!8870 = !DILocation(line: 3199, column: 2, scope: !3217)
!8871 = !DILocation(line: 3200, column: 15, scope: !3217)
!8872 = !DILocation(line: 3200, column: 19, scope: !3217)
!8873 = !DILocation(line: 3200, column: 2, scope: !3217)
!8874 = !DILocation(line: 3201, column: 1, scope: !3217)
!8875 = distinct !DISubprogram(name: "edbm_select_axis_exec", scope: !3, file: !3, line: 3120, type: !4978, scopeLine: 3121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!8876 = !DILocalVariable(name: "C", arg: 1, scope: !8875, file: !3, line: 3120, type: !4980)
!8877 = !DILocation(line: 3120, column: 44, scope: !8875)
!8878 = !DILocalVariable(name: "op", arg: 2, scope: !8875, file: !3, line: 3120, type: !4982)
!8879 = !DILocation(line: 3120, column: 59, scope: !8875)
!8880 = !DILocalVariable(name: "obedit", scope: !8875, file: !3, line: 3122, type: !3615)
!8881 = !DILocation(line: 3122, column: 10, scope: !8875)
!8882 = !DILocation(line: 3122, column: 40, scope: !8875)
!8883 = !DILocation(line: 3122, column: 19, scope: !8875)
!8884 = !DILocalVariable(name: "em", scope: !8875, file: !3, line: 3123, type: !2675)
!8885 = !DILocation(line: 3123, column: 14, scope: !8875)
!8886 = !DILocation(line: 3123, column: 44, scope: !8875)
!8887 = !DILocation(line: 3123, column: 19, scope: !8875)
!8888 = !DILocalVariable(name: "bm", scope: !8875, file: !3, line: 3124, type: !739)
!8889 = !DILocation(line: 3124, column: 9, scope: !8875)
!8890 = !DILocation(line: 3124, column: 14, scope: !8875)
!8891 = !DILocation(line: 3124, column: 18, scope: !8875)
!8892 = !DILocalVariable(name: "v_act", scope: !8875, file: !3, line: 3125, type: !620)
!8893 = !DILocation(line: 3125, column: 10, scope: !8875)
!8894 = !DILocation(line: 3125, column: 42, scope: !8875)
!8895 = !DILocation(line: 3125, column: 18, scope: !8875)
!8896 = !DILocalVariable(name: "axis", scope: !8875, file: !3, line: 3126, type: !3570)
!8897 = !DILocation(line: 3126, column: 12, scope: !8875)
!8898 = !DILocation(line: 3126, column: 32, scope: !8875)
!8899 = !DILocation(line: 3126, column: 36, scope: !8875)
!8900 = !DILocation(line: 3126, column: 19, scope: !8875)
!8901 = !DILocalVariable(name: "mode", scope: !8875, file: !3, line: 3127, type: !3570)
!8902 = !DILocation(line: 3127, column: 12, scope: !8875)
!8903 = !DILocation(line: 3127, column: 32, scope: !8875)
!8904 = !DILocation(line: 3127, column: 36, scope: !8875)
!8905 = !DILocation(line: 3127, column: 19, scope: !8875)
!8906 = !DILocation(line: 3129, column: 6, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 3129, column: 6)
!8908 = !DILocation(line: 3129, column: 12, scope: !8907)
!8909 = !DILocation(line: 3129, column: 6, scope: !8875)
!8910 = !DILocation(line: 3130, column: 14, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 3129, column: 21)
!8912 = !DILocation(line: 3130, column: 18, scope: !8911)
!8913 = !DILocation(line: 3130, column: 3, scope: !8911)
!8914 = !DILocation(line: 3131, column: 3, scope: !8911)
!8915 = !DILocalVariable(name: "v", scope: !8916, file: !3, line: 3134, type: !620)
!8916 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 3133, column: 7)
!8917 = !DILocation(line: 3134, column: 11, scope: !8916)
!8918 = !DILocalVariable(name: "iter", scope: !8916, file: !3, line: 3135, type: !3253)
!8919 = !DILocation(line: 3135, column: 10, scope: !8916)
!8920 = !DILocalVariable(name: "limit", scope: !8916, file: !3, line: 3136, type: !4310)
!8921 = !DILocation(line: 3136, column: 15, scope: !8916)
!8922 = !DILocation(line: 3136, column: 47, scope: !8916)
!8923 = !DILocation(line: 3136, column: 24, scope: !8916)
!8924 = !DILocation(line: 3136, column: 51, scope: !8916)
!8925 = !DILocalVariable(name: "value", scope: !8916, file: !3, line: 3137, type: !364)
!8926 = !DILocation(line: 3137, column: 9, scope: !8916)
!8927 = !DILocation(line: 3137, column: 17, scope: !8916)
!8928 = !DILocation(line: 3137, column: 24, scope: !8916)
!8929 = !DILocation(line: 3137, column: 27, scope: !8916)
!8930 = !DILocation(line: 3139, column: 7, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 3139, column: 7)
!8932 = !DILocation(line: 3139, column: 12, scope: !8931)
!8933 = !DILocation(line: 3139, column: 7, scope: !8916)
!8934 = !DILocation(line: 3140, column: 13, scope: !8931)
!8935 = !DILocation(line: 3140, column: 10, scope: !8931)
!8936 = !DILocation(line: 3140, column: 4, scope: !8931)
!8937 = !DILocation(line: 3141, column: 12, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 3141, column: 12)
!8939 = !DILocation(line: 3141, column: 17, scope: !8938)
!8940 = !DILocation(line: 3141, column: 12, scope: !8931)
!8941 = !DILocation(line: 3142, column: 13, scope: !8938)
!8942 = !DILocation(line: 3142, column: 10, scope: !8938)
!8943 = !DILocation(line: 3142, column: 4, scope: !8938)
!8944 = !DILocation(line: 3144, column: 3, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 3144, column: 3)
!8946 = !DILocation(line: 3144, column: 3, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 3144, column: 3)
!8948 = !DILocation(line: 3145, column: 9, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !3, line: 3145, column: 8)
!8950 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 3144, column: 49)
!8951 = !DILocation(line: 3145, column: 8, scope: !8950)
!8952 = !DILocation(line: 3146, column: 13, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 3145, column: 47)
!8954 = !DILocation(line: 3146, column: 5, scope: !8953)
!8955 = !DILocation(line: 3148, column: 17, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 3148, column: 11)
!8957 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 3146, column: 19)
!8958 = !DILocation(line: 3148, column: 20, scope: !8956)
!8959 = !DILocation(line: 3148, column: 23, scope: !8956)
!8960 = !DILocation(line: 3148, column: 31, scope: !8956)
!8961 = !DILocation(line: 3148, column: 29, scope: !8956)
!8962 = !DILocation(line: 3148, column: 11, scope: !8956)
!8963 = !DILocation(line: 3148, column: 40, scope: !8956)
!8964 = !DILocation(line: 3148, column: 38, scope: !8956)
!8965 = !DILocation(line: 3148, column: 11, scope: !8957)
!8966 = !DILocation(line: 3149, column: 27, scope: !8956)
!8967 = !DILocation(line: 3149, column: 31, scope: !8956)
!8968 = !DILocation(line: 3149, column: 8, scope: !8956)
!8969 = !DILocation(line: 3150, column: 7, scope: !8957)
!8970 = !DILocation(line: 3152, column: 11, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 3152, column: 11)
!8972 = !DILocation(line: 3152, column: 14, scope: !8971)
!8973 = !DILocation(line: 3152, column: 17, scope: !8971)
!8974 = !DILocation(line: 3152, column: 25, scope: !8971)
!8975 = !DILocation(line: 3152, column: 23, scope: !8971)
!8976 = !DILocation(line: 3152, column: 11, scope: !8957)
!8977 = !DILocation(line: 3153, column: 27, scope: !8971)
!8978 = !DILocation(line: 3153, column: 31, scope: !8971)
!8979 = !DILocation(line: 3153, column: 8, scope: !8971)
!8980 = !DILocation(line: 3154, column: 7, scope: !8957)
!8981 = !DILocation(line: 3156, column: 11, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 3156, column: 11)
!8983 = !DILocation(line: 3156, column: 14, scope: !8982)
!8984 = !DILocation(line: 3156, column: 17, scope: !8982)
!8985 = !DILocation(line: 3156, column: 25, scope: !8982)
!8986 = !DILocation(line: 3156, column: 23, scope: !8982)
!8987 = !DILocation(line: 3156, column: 11, scope: !8957)
!8988 = !DILocation(line: 3157, column: 27, scope: !8982)
!8989 = !DILocation(line: 3157, column: 31, scope: !8982)
!8990 = !DILocation(line: 3157, column: 8, scope: !8982)
!8991 = !DILocation(line: 3158, column: 7, scope: !8957)
!8992 = !DILocation(line: 3160, column: 4, scope: !8953)
!8993 = !DILocation(line: 3161, column: 3, scope: !8950)
!8994 = distinct !{!8994, !8944, !8995}
!8995 = !DILocation(line: 3161, column: 3, scope: !8945)
!8996 = !DILocation(line: 3164, column: 24, scope: !8875)
!8997 = !DILocation(line: 3164, column: 2, scope: !8875)
!8998 = !DILocation(line: 3165, column: 24, scope: !8875)
!8999 = !DILocation(line: 3165, column: 46, scope: !8875)
!9000 = !DILocation(line: 3165, column: 54, scope: !8875)
!9001 = !DILocation(line: 3165, column: 2, scope: !8875)
!9002 = !DILocation(line: 3167, column: 2, scope: !8875)
!9003 = !DILocation(line: 3168, column: 1, scope: !8875)
!9004 = distinct !DISubprogram(name: "MESH_OT_select_next_loop", scope: !3, file: !3, line: 3238, type: !3071, scopeLine: 3239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9005 = !DILocalVariable(name: "ot", arg: 1, scope: !9004, file: !3, line: 3238, type: !3073)
!9006 = !DILocation(line: 3238, column: 47, scope: !9004)
!9007 = !DILocation(line: 3241, column: 2, scope: !9004)
!9008 = !DILocation(line: 3241, column: 6, scope: !9004)
!9009 = !DILocation(line: 3241, column: 11, scope: !9004)
!9010 = !DILocation(line: 3242, column: 2, scope: !9004)
!9011 = !DILocation(line: 3242, column: 6, scope: !9004)
!9012 = !DILocation(line: 3242, column: 13, scope: !9004)
!9013 = !DILocation(line: 3243, column: 2, scope: !9004)
!9014 = !DILocation(line: 3243, column: 6, scope: !9004)
!9015 = !DILocation(line: 3243, column: 18, scope: !9004)
!9016 = !DILocation(line: 3246, column: 2, scope: !9004)
!9017 = !DILocation(line: 3246, column: 6, scope: !9004)
!9018 = !DILocation(line: 3246, column: 11, scope: !9004)
!9019 = !DILocation(line: 3247, column: 2, scope: !9004)
!9020 = !DILocation(line: 3247, column: 6, scope: !9004)
!9021 = !DILocation(line: 3247, column: 11, scope: !9004)
!9022 = !DILocation(line: 3250, column: 2, scope: !9004)
!9023 = !DILocation(line: 3250, column: 6, scope: !9004)
!9024 = !DILocation(line: 3250, column: 11, scope: !9004)
!9025 = !DILocation(line: 3251, column: 1, scope: !9004)
!9026 = distinct !DISubprogram(name: "edbm_select_next_loop_exec", scope: !3, file: !3, line: 3204, type: !4978, scopeLine: 3205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9027 = !DILocalVariable(name: "C", arg: 1, scope: !9026, file: !3, line: 3204, type: !4980)
!9028 = !DILocation(line: 3204, column: 49, scope: !9026)
!9029 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !9026, file: !3, line: 3204, type: !4982)
!9030 = !DILocation(line: 3204, column: 64, scope: !9026)
!9031 = !DILocalVariable(name: "obedit", scope: !9026, file: !3, line: 3206, type: !3615)
!9032 = !DILocation(line: 3206, column: 10, scope: !9026)
!9033 = !DILocation(line: 3206, column: 40, scope: !9026)
!9034 = !DILocation(line: 3206, column: 19, scope: !9026)
!9035 = !DILocalVariable(name: "em", scope: !9026, file: !3, line: 3207, type: !2675)
!9036 = !DILocation(line: 3207, column: 14, scope: !9026)
!9037 = !DILocation(line: 3207, column: 44, scope: !9026)
!9038 = !DILocation(line: 3207, column: 19, scope: !9026)
!9039 = !DILocalVariable(name: "f", scope: !9026, file: !3, line: 3208, type: !685)
!9040 = !DILocation(line: 3208, column: 10, scope: !9026)
!9041 = !DILocalVariable(name: "v", scope: !9026, file: !3, line: 3209, type: !620)
!9042 = !DILocation(line: 3209, column: 10, scope: !9026)
!9043 = !DILocalVariable(name: "iter", scope: !9026, file: !3, line: 3210, type: !3253)
!9044 = !DILocation(line: 3210, column: 9, scope: !9026)
!9045 = !DILocation(line: 3212, column: 2, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3212, column: 2)
!9047 = !DILocation(line: 3212, column: 2, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 3212, column: 2)
!9049 = !DILocation(line: 3213, column: 3, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 3212, column: 52)
!9051 = !DILocation(line: 3214, column: 2, scope: !9050)
!9052 = distinct !{!9052, !9045, !9053}
!9053 = !DILocation(line: 3214, column: 2, scope: !9046)
!9054 = !DILocation(line: 3216, column: 2, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3216, column: 2)
!9056 = !DILocation(line: 3216, column: 2, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 3216, column: 2)
!9058 = !DILocalVariable(name: "l", scope: !9059, file: !3, line: 3217, type: !663)
!9059 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 3216, column: 52)
!9060 = !DILocation(line: 3217, column: 11, scope: !9059)
!9061 = !DILocalVariable(name: "liter", scope: !9059, file: !3, line: 3218, type: !3253)
!9062 = !DILocation(line: 3218, column: 10, scope: !9059)
!9063 = !DILocation(line: 3220, column: 3, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 3220, column: 3)
!9065 = !DILocation(line: 3220, column: 3, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 3220, column: 3)
!9067 = !DILocation(line: 3221, column: 8, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 3221, column: 8)
!9069 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 3220, column: 49)
!9070 = !DILocation(line: 3221, column: 8, scope: !9069)
!9071 = !DILocation(line: 3222, column: 5, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 3221, column: 49)
!9073 = !DILocation(line: 3223, column: 24, scope: !9072)
!9074 = !DILocation(line: 3223, column: 28, scope: !9072)
!9075 = !DILocation(line: 3223, column: 32, scope: !9072)
!9076 = !DILocation(line: 3223, column: 35, scope: !9072)
!9077 = !DILocation(line: 3223, column: 5, scope: !9072)
!9078 = !DILocation(line: 3224, column: 4, scope: !9072)
!9079 = !DILocation(line: 3225, column: 3, scope: !9069)
!9080 = distinct !{!9080, !9063, !9081}
!9081 = !DILocation(line: 3225, column: 3, scope: !9064)
!9082 = !DILocation(line: 3226, column: 2, scope: !9059)
!9083 = distinct !{!9083, !9054, !9084}
!9084 = !DILocation(line: 3226, column: 2, scope: !9055)
!9085 = !DILocation(line: 3228, column: 2, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3228, column: 2)
!9087 = !DILocation(line: 3228, column: 2, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 3228, column: 2)
!9089 = !DILocation(line: 3229, column: 7, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !3, line: 3229, column: 7)
!9091 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 3228, column: 52)
!9092 = !DILocation(line: 3229, column: 7, scope: !9091)
!9093 = !DILocation(line: 3230, column: 23, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 3229, column: 42)
!9095 = !DILocation(line: 3230, column: 27, scope: !9094)
!9096 = !DILocation(line: 3230, column: 31, scope: !9094)
!9097 = !DILocation(line: 3230, column: 4, scope: !9094)
!9098 = !DILocation(line: 3231, column: 3, scope: !9094)
!9099 = !DILocation(line: 3232, column: 2, scope: !9091)
!9100 = distinct !{!9100, !9085, !9101}
!9101 = !DILocation(line: 3232, column: 2, scope: !9086)
!9102 = !DILocation(line: 3234, column: 24, scope: !9026)
!9103 = !DILocation(line: 3234, column: 48, scope: !9026)
!9104 = !DILocation(line: 3234, column: 2, scope: !9026)
!9105 = !DILocation(line: 3235, column: 2, scope: !9026)
!9106 = distinct !DISubprogram(name: "MESH_OT_region_to_loop", scope: !3, file: !3, line: 3302, type: !3071, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9107 = !DILocalVariable(name: "ot", arg: 1, scope: !9106, file: !3, line: 3302, type: !3073)
!9108 = !DILocation(line: 3302, column: 45, scope: !9106)
!9109 = !DILocation(line: 3305, column: 2, scope: !9106)
!9110 = !DILocation(line: 3305, column: 6, scope: !9106)
!9111 = !DILocation(line: 3305, column: 11, scope: !9106)
!9112 = !DILocation(line: 3306, column: 2, scope: !9106)
!9113 = !DILocation(line: 3306, column: 6, scope: !9106)
!9114 = !DILocation(line: 3306, column: 13, scope: !9106)
!9115 = !DILocation(line: 3307, column: 2, scope: !9106)
!9116 = !DILocation(line: 3307, column: 6, scope: !9106)
!9117 = !DILocation(line: 3307, column: 18, scope: !9106)
!9118 = !DILocation(line: 3310, column: 2, scope: !9106)
!9119 = !DILocation(line: 3310, column: 6, scope: !9106)
!9120 = !DILocation(line: 3310, column: 11, scope: !9106)
!9121 = !DILocation(line: 3311, column: 2, scope: !9106)
!9122 = !DILocation(line: 3311, column: 6, scope: !9106)
!9123 = !DILocation(line: 3311, column: 11, scope: !9106)
!9124 = !DILocation(line: 3314, column: 2, scope: !9106)
!9125 = !DILocation(line: 3314, column: 6, scope: !9106)
!9126 = !DILocation(line: 3314, column: 11, scope: !9106)
!9127 = !DILocation(line: 3315, column: 1, scope: !9106)
!9128 = distinct !DISubprogram(name: "edbm_region_to_loop_exec", scope: !3, file: !3, line: 3254, type: !4978, scopeLine: 3255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9129 = !DILocalVariable(name: "C", arg: 1, scope: !9128, file: !3, line: 3254, type: !4980)
!9130 = !DILocation(line: 3254, column: 47, scope: !9128)
!9131 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !9128, file: !3, line: 3254, type: !4982)
!9132 = !DILocation(line: 3254, column: 62, scope: !9128)
!9133 = !DILocalVariable(name: "obedit", scope: !9128, file: !3, line: 3256, type: !3615)
!9134 = !DILocation(line: 3256, column: 10, scope: !9128)
!9135 = !DILocation(line: 3256, column: 40, scope: !9128)
!9136 = !DILocation(line: 3256, column: 19, scope: !9128)
!9137 = !DILocalVariable(name: "em", scope: !9128, file: !3, line: 3257, type: !2675)
!9138 = !DILocation(line: 3257, column: 14, scope: !9128)
!9139 = !DILocation(line: 3257, column: 44, scope: !9128)
!9140 = !DILocation(line: 3257, column: 19, scope: !9128)
!9141 = !DILocalVariable(name: "f", scope: !9128, file: !3, line: 3258, type: !685)
!9142 = !DILocation(line: 3258, column: 10, scope: !9128)
!9143 = !DILocalVariable(name: "e", scope: !9128, file: !3, line: 3259, type: !681)
!9144 = !DILocation(line: 3259, column: 10, scope: !9128)
!9145 = !DILocalVariable(name: "iter", scope: !9128, file: !3, line: 3260, type: !3253)
!9146 = !DILocation(line: 3260, column: 9, scope: !9128)
!9147 = !DILocation(line: 3262, column: 33, scope: !9128)
!9148 = !DILocation(line: 3262, column: 37, scope: !9128)
!9149 = !DILocation(line: 3262, column: 2, scope: !9128)
!9150 = !DILocation(line: 3264, column: 2, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3264, column: 2)
!9152 = !DILocation(line: 3264, column: 2, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 3264, column: 2)
!9154 = !DILocalVariable(name: "l1", scope: !9155, file: !3, line: 3265, type: !663)
!9155 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 3264, column: 52)
!9156 = !DILocation(line: 3265, column: 11, scope: !9155)
!9157 = !DILocalVariable(name: "l2", scope: !9155, file: !3, line: 3265, type: !663)
!9158 = !DILocation(line: 3265, column: 16, scope: !9155)
!9159 = !DILocalVariable(name: "liter1", scope: !9155, file: !3, line: 3266, type: !3253)
!9160 = !DILocation(line: 3266, column: 10, scope: !9155)
!9161 = !DILocalVariable(name: "liter2", scope: !9155, file: !3, line: 3266, type: !3253)
!9162 = !DILocation(line: 3266, column: 18, scope: !9155)
!9163 = !DILocation(line: 3268, column: 3, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 3268, column: 3)
!9165 = !DILocation(line: 3268, column: 3, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3268, column: 3)
!9167 = !DILocalVariable(name: "tot", scope: !9168, file: !3, line: 3269, type: !319)
!9168 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 3268, column: 51)
!9169 = !DILocation(line: 3269, column: 8, scope: !9168)
!9170 = !DILocalVariable(name: "totsel", scope: !9168, file: !3, line: 3269, type: !319)
!9171 = !DILocation(line: 3269, column: 17, scope: !9168)
!9172 = !DILocation(line: 3271, column: 4, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 3271, column: 4)
!9174 = !DILocation(line: 3271, column: 4, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 3271, column: 4)
!9176 = !DILocation(line: 3272, column: 8, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3271, column: 56)
!9178 = !DILocation(line: 3273, column: 15, scope: !9177)
!9179 = !DILocation(line: 3273, column: 56, scope: !9177)
!9180 = !DILocation(line: 3273, column: 12, scope: !9177)
!9181 = !DILocation(line: 3274, column: 4, scope: !9177)
!9182 = distinct !{!9182, !9172, !9183}
!9183 = !DILocation(line: 3274, column: 4, scope: !9173)
!9184 = !DILocation(line: 3276, column: 9, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 3276, column: 8)
!9186 = !DILocation(line: 3276, column: 16, scope: !9185)
!9187 = !DILocation(line: 3276, column: 13, scope: !9185)
!9188 = !DILocation(line: 3276, column: 23, scope: !9185)
!9189 = !DILocation(line: 3276, column: 26, scope: !9185)
!9190 = !DILocation(line: 3276, column: 33, scope: !9185)
!9191 = !DILocation(line: 3276, column: 38, scope: !9185)
!9192 = !DILocation(line: 3276, column: 42, scope: !9185)
!9193 = !DILocation(line: 3276, column: 49, scope: !9185)
!9194 = !DILocation(line: 3276, column: 54, scope: !9185)
!9195 = !DILocation(line: 3276, column: 57, scope: !9185)
!9196 = !DILocation(line: 3276, column: 61, scope: !9185)
!9197 = !DILocation(line: 3276, column: 8, scope: !9168)
!9198 = !DILocation(line: 3277, column: 5, scope: !9185)
!9199 = !DILocation(line: 3278, column: 3, scope: !9168)
!9200 = distinct !{!9200, !9163, !9201}
!9201 = !DILocation(line: 3278, column: 3, scope: !9164)
!9202 = !DILocation(line: 3279, column: 2, scope: !9155)
!9203 = distinct !{!9203, !9150, !9204}
!9204 = !DILocation(line: 3279, column: 2, scope: !9151)
!9205 = !DILocation(line: 3281, column: 24, scope: !9128)
!9206 = !DILocation(line: 3281, column: 2, scope: !9128)
!9207 = !DILocation(line: 3283, column: 2, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3283, column: 2)
!9209 = !DILocation(line: 3283, column: 2, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3283, column: 2)
!9211 = !DILocation(line: 3284, column: 7, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 3284, column: 7)
!9213 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 3283, column: 52)
!9214 = !DILocation(line: 3284, column: 7, scope: !9213)
!9215 = !DILocation(line: 3285, column: 23, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3284, column: 42)
!9217 = !DILocation(line: 3285, column: 27, scope: !9216)
!9218 = !DILocation(line: 3285, column: 31, scope: !9216)
!9219 = !DILocation(line: 3285, column: 4, scope: !9216)
!9220 = !DILocation(line: 3286, column: 3, scope: !9216)
!9221 = !DILocation(line: 3287, column: 2, scope: !9213)
!9222 = distinct !{!9222, !9207, !9223}
!9223 = !DILocation(line: 3287, column: 2, scope: !9208)
!9224 = !DILocation(line: 3291, column: 6, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3291, column: 6)
!9226 = !DILocation(line: 3291, column: 10, scope: !9225)
!9227 = !DILocation(line: 3291, column: 21, scope: !9225)
!9228 = !DILocation(line: 3291, column: 6, scope: !9128)
!9229 = !DILocation(line: 3292, column: 3, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 3291, column: 41)
!9231 = !DILocation(line: 3292, column: 7, scope: !9230)
!9232 = !DILocation(line: 3292, column: 18, scope: !9230)
!9233 = !DILocation(line: 3293, column: 23, scope: !9230)
!9234 = !DILocation(line: 3293, column: 3, scope: !9230)
!9235 = !DILocation(line: 3294, column: 28, scope: !9230)
!9236 = !DILocation(line: 3294, column: 3, scope: !9230)
!9237 = !DILocation(line: 3295, column: 2, scope: !9230)
!9238 = !DILocation(line: 3297, column: 24, scope: !9128)
!9239 = !DILocation(line: 3297, column: 48, scope: !9128)
!9240 = !DILocation(line: 3297, column: 56, scope: !9128)
!9241 = !DILocation(line: 3297, column: 2, scope: !9128)
!9242 = !DILocation(line: 3299, column: 2, scope: !9128)
!9243 = distinct !DISubprogram(name: "MESH_OT_loop_to_region", scope: !3, file: !3, line: 3492, type: !3071, scopeLine: 3493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9244 = !DILocalVariable(name: "ot", arg: 1, scope: !9243, file: !3, line: 3492, type: !3073)
!9245 = !DILocation(line: 3492, column: 45, scope: !9243)
!9246 = !DILocation(line: 3495, column: 2, scope: !9243)
!9247 = !DILocation(line: 3495, column: 6, scope: !9243)
!9248 = !DILocation(line: 3495, column: 11, scope: !9243)
!9249 = !DILocation(line: 3496, column: 2, scope: !9243)
!9250 = !DILocation(line: 3496, column: 6, scope: !9243)
!9251 = !DILocation(line: 3496, column: 13, scope: !9243)
!9252 = !DILocation(line: 3497, column: 2, scope: !9243)
!9253 = !DILocation(line: 3497, column: 6, scope: !9243)
!9254 = !DILocation(line: 3497, column: 18, scope: !9243)
!9255 = !DILocation(line: 3500, column: 2, scope: !9243)
!9256 = !DILocation(line: 3500, column: 6, scope: !9243)
!9257 = !DILocation(line: 3500, column: 11, scope: !9243)
!9258 = !DILocation(line: 3501, column: 2, scope: !9243)
!9259 = !DILocation(line: 3501, column: 6, scope: !9243)
!9260 = !DILocation(line: 3501, column: 11, scope: !9243)
!9261 = !DILocation(line: 3504, column: 2, scope: !9243)
!9262 = !DILocation(line: 3504, column: 6, scope: !9243)
!9263 = !DILocation(line: 3504, column: 11, scope: !9243)
!9264 = !DILocation(line: 3506, column: 18, scope: !9243)
!9265 = !DILocation(line: 3506, column: 22, scope: !9243)
!9266 = !DILocation(line: 3506, column: 2, scope: !9243)
!9267 = !DILocation(line: 3507, column: 1, scope: !9243)
!9268 = distinct !DISubprogram(name: "edbm_loop_to_region_exec", scope: !3, file: !3, line: 3460, type: !4978, scopeLine: 3461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9269 = !DILocalVariable(name: "C", arg: 1, scope: !9268, file: !3, line: 3460, type: !4980)
!9270 = !DILocation(line: 3460, column: 47, scope: !9268)
!9271 = !DILocalVariable(name: "op", arg: 2, scope: !9268, file: !3, line: 3460, type: !4982)
!9272 = !DILocation(line: 3460, column: 62, scope: !9268)
!9273 = !DILocalVariable(name: "obedit", scope: !9268, file: !3, line: 3462, type: !3615)
!9274 = !DILocation(line: 3462, column: 10, scope: !9268)
!9275 = !DILocation(line: 3462, column: 40, scope: !9268)
!9276 = !DILocation(line: 3462, column: 19, scope: !9268)
!9277 = !DILocalVariable(name: "em", scope: !9268, file: !3, line: 3463, type: !2675)
!9278 = !DILocation(line: 3463, column: 14, scope: !9268)
!9279 = !DILocation(line: 3463, column: 44, scope: !9268)
!9280 = !DILocation(line: 3463, column: 19, scope: !9268)
!9281 = !DILocalVariable(name: "iter", scope: !9268, file: !3, line: 3464, type: !3253)
!9282 = !DILocation(line: 3464, column: 9, scope: !9268)
!9283 = !DILocalVariable(name: "f", scope: !9268, file: !3, line: 3465, type: !685)
!9284 = !DILocation(line: 3465, column: 10, scope: !9268)
!9285 = !DILocalVariable(name: "select_bigger", scope: !9268, file: !3, line: 3466, type: !3057)
!9286 = !DILocation(line: 3466, column: 13, scope: !9268)
!9287 = !DILocation(line: 3466, column: 45, scope: !9268)
!9288 = !DILocation(line: 3466, column: 49, scope: !9268)
!9289 = !DILocation(line: 3466, column: 29, scope: !9268)
!9290 = !DILocalVariable(name: "a", scope: !9268, file: !3, line: 3467, type: !319)
!9291 = !DILocation(line: 3467, column: 6, scope: !9268)
!9292 = !DILocalVariable(name: "b", scope: !9268, file: !3, line: 3467, type: !319)
!9293 = !DILocation(line: 3467, column: 9, scope: !9268)
!9294 = !DILocation(line: 3471, column: 33, scope: !9268)
!9295 = !DILocation(line: 3471, column: 37, scope: !9268)
!9296 = !DILocation(line: 3471, column: 2, scope: !9268)
!9297 = !DILocation(line: 3472, column: 24, scope: !9268)
!9298 = !DILocation(line: 3472, column: 28, scope: !9268)
!9299 = !DILocation(line: 3472, column: 6, scope: !9268)
!9300 = !DILocation(line: 3472, column: 4, scope: !9268)
!9301 = !DILocation(line: 3473, column: 24, scope: !9268)
!9302 = !DILocation(line: 3473, column: 29, scope: !9268)
!9303 = !DILocation(line: 3473, column: 28, scope: !9268)
!9304 = !DILocation(line: 3473, column: 6, scope: !9268)
!9305 = !DILocation(line: 3473, column: 4, scope: !9268)
!9306 = !DILocation(line: 3475, column: 33, scope: !9268)
!9307 = !DILocation(line: 3475, column: 37, scope: !9268)
!9308 = !DILocation(line: 3475, column: 2, scope: !9268)
!9309 = !DILocation(line: 3476, column: 20, scope: !9268)
!9310 = !DILocation(line: 3476, column: 26, scope: !9268)
!9311 = !DILocation(line: 3476, column: 31, scope: !9268)
!9312 = !DILocation(line: 3476, column: 28, scope: !9268)
!9313 = !DILocation(line: 3476, column: 37, scope: !9268)
!9314 = !DILocation(line: 3476, column: 34, scope: !9268)
!9315 = !DILocation(line: 3476, column: 24, scope: !9268)
!9316 = !DILocation(line: 3476, column: 54, scope: !9268)
!9317 = !DILocation(line: 3476, column: 71, scope: !9268)
!9318 = !DILocation(line: 3476, column: 70, scope: !9268)
!9319 = !DILocation(line: 3476, column: 2, scope: !9268)
!9320 = !DILocation(line: 3478, column: 24, scope: !9268)
!9321 = !DILocation(line: 3478, column: 2, scope: !9268)
!9322 = !DILocation(line: 3480, column: 2, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3480, column: 2)
!9324 = !DILocation(line: 3480, column: 2, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 3480, column: 2)
!9326 = !DILocation(line: 3481, column: 7, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 3481, column: 7)
!9328 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 3480, column: 52)
!9329 = !DILocation(line: 3481, column: 41, scope: !9327)
!9330 = !DILocation(line: 3481, column: 45, scope: !9327)
!9331 = !DILocation(line: 3481, column: 7, scope: !9328)
!9332 = !DILocation(line: 3482, column: 23, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 3481, column: 83)
!9334 = !DILocation(line: 3482, column: 27, scope: !9333)
!9335 = !DILocation(line: 3482, column: 31, scope: !9333)
!9336 = !DILocation(line: 3482, column: 4, scope: !9333)
!9337 = !DILocation(line: 3483, column: 3, scope: !9333)
!9338 = !DILocation(line: 3484, column: 2, scope: !9328)
!9339 = distinct !{!9339, !9322, !9340}
!9340 = !DILocation(line: 3484, column: 2, scope: !9323)
!9341 = !DILocation(line: 3486, column: 24, scope: !9268)
!9342 = !DILocation(line: 3486, column: 2, scope: !9268)
!9343 = !DILocation(line: 3488, column: 24, scope: !9268)
!9344 = !DILocation(line: 3488, column: 48, scope: !9268)
!9345 = !DILocation(line: 3488, column: 56, scope: !9268)
!9346 = !DILocation(line: 3488, column: 2, scope: !9268)
!9347 = !DILocation(line: 3489, column: 2, scope: !9268)
!9348 = distinct !DISubprogram(name: "BM_iter_init", scope: !3543, file: !3543, line: 53, type: !9349, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!813, !3546, !739, !704, !288}
!9351 = !DILocalVariable(name: "iter", arg: 1, scope: !9348, file: !3543, line: 53, type: !3546)
!9352 = !DILocation(line: 53, column: 38, scope: !9348)
!9353 = !DILocalVariable(name: "bm", arg: 2, scope: !9348, file: !3543, line: 53, type: !739)
!9354 = !DILocation(line: 53, column: 51, scope: !9348)
!9355 = !DILocalVariable(name: "itype", arg: 3, scope: !9348, file: !3543, line: 53, type: !704)
!9356 = !DILocation(line: 53, column: 66, scope: !9348)
!9357 = !DILocalVariable(name: "data", arg: 4, scope: !9348, file: !3543, line: 53, type: !288)
!9358 = !DILocation(line: 53, column: 79, scope: !9348)
!9359 = !DILocation(line: 56, column: 16, scope: !9348)
!9360 = !DILocation(line: 56, column: 2, scope: !9348)
!9361 = !DILocation(line: 56, column: 8, scope: !9348)
!9362 = !DILocation(line: 56, column: 14, scope: !9348)
!9363 = !DILocation(line: 59, column: 22, scope: !9348)
!9364 = !DILocation(line: 59, column: 10, scope: !9348)
!9365 = !DILocation(line: 59, column: 2, scope: !9348)
!9366 = !DILocation(line: 63, column: 4, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9348, file: !3543, line: 59, column: 29)
!9368 = !DILocation(line: 63, column: 10, scope: !9367)
!9369 = !DILocation(line: 63, column: 16, scope: !9367)
!9370 = !DILocation(line: 64, column: 4, scope: !9367)
!9371 = !DILocation(line: 64, column: 10, scope: !9367)
!9372 = !DILocation(line: 64, column: 16, scope: !9367)
!9373 = !DILocation(line: 65, column: 44, scope: !9367)
!9374 = !DILocation(line: 65, column: 48, scope: !9367)
!9375 = !DILocation(line: 65, column: 4, scope: !9367)
!9376 = !DILocation(line: 65, column: 10, scope: !9367)
!9377 = !DILocation(line: 65, column: 15, scope: !9367)
!9378 = !DILocation(line: 65, column: 28, scope: !9367)
!9379 = !DILocation(line: 65, column: 37, scope: !9367)
!9380 = !DILocation(line: 65, column: 42, scope: !9367)
!9381 = !DILocation(line: 66, column: 4, scope: !9367)
!9382 = !DILocation(line: 70, column: 4, scope: !9367)
!9383 = !DILocation(line: 70, column: 10, scope: !9367)
!9384 = !DILocation(line: 70, column: 16, scope: !9367)
!9385 = !DILocation(line: 71, column: 4, scope: !9367)
!9386 = !DILocation(line: 71, column: 10, scope: !9367)
!9387 = !DILocation(line: 71, column: 16, scope: !9367)
!9388 = !DILocation(line: 72, column: 44, scope: !9367)
!9389 = !DILocation(line: 72, column: 48, scope: !9367)
!9390 = !DILocation(line: 72, column: 4, scope: !9367)
!9391 = !DILocation(line: 72, column: 10, scope: !9367)
!9392 = !DILocation(line: 72, column: 15, scope: !9367)
!9393 = !DILocation(line: 72, column: 28, scope: !9367)
!9394 = !DILocation(line: 72, column: 37, scope: !9367)
!9395 = !DILocation(line: 72, column: 42, scope: !9367)
!9396 = !DILocation(line: 73, column: 4, scope: !9367)
!9397 = !DILocation(line: 77, column: 4, scope: !9367)
!9398 = !DILocation(line: 77, column: 10, scope: !9367)
!9399 = !DILocation(line: 77, column: 16, scope: !9367)
!9400 = !DILocation(line: 78, column: 4, scope: !9367)
!9401 = !DILocation(line: 78, column: 10, scope: !9367)
!9402 = !DILocation(line: 78, column: 16, scope: !9367)
!9403 = !DILocation(line: 79, column: 44, scope: !9367)
!9404 = !DILocation(line: 79, column: 48, scope: !9367)
!9405 = !DILocation(line: 79, column: 4, scope: !9367)
!9406 = !DILocation(line: 79, column: 10, scope: !9367)
!9407 = !DILocation(line: 79, column: 15, scope: !9367)
!9408 = !DILocation(line: 79, column: 28, scope: !9367)
!9409 = !DILocation(line: 79, column: 37, scope: !9367)
!9410 = !DILocation(line: 79, column: 42, scope: !9367)
!9411 = !DILocation(line: 80, column: 4, scope: !9367)
!9412 = !DILocation(line: 84, column: 4, scope: !9367)
!9413 = !DILocation(line: 84, column: 10, scope: !9367)
!9414 = !DILocation(line: 84, column: 16, scope: !9367)
!9415 = !DILocation(line: 85, column: 4, scope: !9367)
!9416 = !DILocation(line: 85, column: 10, scope: !9367)
!9417 = !DILocation(line: 85, column: 16, scope: !9367)
!9418 = !DILocation(line: 86, column: 46, scope: !9367)
!9419 = !DILocation(line: 86, column: 36, scope: !9367)
!9420 = !DILocation(line: 86, column: 4, scope: !9367)
!9421 = !DILocation(line: 86, column: 10, scope: !9367)
!9422 = !DILocation(line: 86, column: 15, scope: !9367)
!9423 = !DILocation(line: 86, column: 28, scope: !9367)
!9424 = !DILocation(line: 86, column: 34, scope: !9367)
!9425 = !DILocation(line: 87, column: 4, scope: !9367)
!9426 = !DILocation(line: 91, column: 4, scope: !9367)
!9427 = !DILocation(line: 91, column: 10, scope: !9367)
!9428 = !DILocation(line: 91, column: 16, scope: !9367)
!9429 = !DILocation(line: 92, column: 4, scope: !9367)
!9430 = !DILocation(line: 92, column: 10, scope: !9367)
!9431 = !DILocation(line: 92, column: 16, scope: !9367)
!9432 = !DILocation(line: 93, column: 46, scope: !9367)
!9433 = !DILocation(line: 93, column: 36, scope: !9367)
!9434 = !DILocation(line: 93, column: 4, scope: !9367)
!9435 = !DILocation(line: 93, column: 10, scope: !9367)
!9436 = !DILocation(line: 93, column: 15, scope: !9367)
!9437 = !DILocation(line: 93, column: 28, scope: !9367)
!9438 = !DILocation(line: 93, column: 34, scope: !9367)
!9439 = !DILocation(line: 94, column: 4, scope: !9367)
!9440 = !DILocation(line: 98, column: 4, scope: !9367)
!9441 = !DILocation(line: 98, column: 10, scope: !9367)
!9442 = !DILocation(line: 98, column: 16, scope: !9367)
!9443 = !DILocation(line: 99, column: 4, scope: !9367)
!9444 = !DILocation(line: 99, column: 10, scope: !9367)
!9445 = !DILocation(line: 99, column: 16, scope: !9367)
!9446 = !DILocation(line: 100, column: 46, scope: !9367)
!9447 = !DILocation(line: 100, column: 36, scope: !9367)
!9448 = !DILocation(line: 100, column: 4, scope: !9367)
!9449 = !DILocation(line: 100, column: 10, scope: !9367)
!9450 = !DILocation(line: 100, column: 15, scope: !9367)
!9451 = !DILocation(line: 100, column: 28, scope: !9367)
!9452 = !DILocation(line: 100, column: 34, scope: !9367)
!9453 = !DILocation(line: 101, column: 4, scope: !9367)
!9454 = !DILocation(line: 105, column: 4, scope: !9367)
!9455 = !DILocation(line: 105, column: 10, scope: !9367)
!9456 = !DILocation(line: 105, column: 16, scope: !9367)
!9457 = !DILocation(line: 106, column: 4, scope: !9367)
!9458 = !DILocation(line: 106, column: 10, scope: !9367)
!9459 = !DILocation(line: 106, column: 16, scope: !9367)
!9460 = !DILocation(line: 107, column: 46, scope: !9367)
!9461 = !DILocation(line: 107, column: 36, scope: !9367)
!9462 = !DILocation(line: 107, column: 4, scope: !9367)
!9463 = !DILocation(line: 107, column: 10, scope: !9367)
!9464 = !DILocation(line: 107, column: 15, scope: !9367)
!9465 = !DILocation(line: 107, column: 28, scope: !9367)
!9466 = !DILocation(line: 107, column: 34, scope: !9367)
!9467 = !DILocation(line: 108, column: 4, scope: !9367)
!9468 = !DILocation(line: 112, column: 4, scope: !9367)
!9469 = !DILocation(line: 112, column: 10, scope: !9367)
!9470 = !DILocation(line: 112, column: 16, scope: !9367)
!9471 = !DILocation(line: 113, column: 4, scope: !9367)
!9472 = !DILocation(line: 113, column: 10, scope: !9367)
!9473 = !DILocation(line: 113, column: 16, scope: !9367)
!9474 = !DILocation(line: 114, column: 46, scope: !9367)
!9475 = !DILocation(line: 114, column: 36, scope: !9367)
!9476 = !DILocation(line: 114, column: 4, scope: !9367)
!9477 = !DILocation(line: 114, column: 10, scope: !9367)
!9478 = !DILocation(line: 114, column: 15, scope: !9367)
!9479 = !DILocation(line: 114, column: 28, scope: !9367)
!9480 = !DILocation(line: 114, column: 34, scope: !9367)
!9481 = !DILocation(line: 115, column: 4, scope: !9367)
!9482 = !DILocation(line: 119, column: 4, scope: !9367)
!9483 = !DILocation(line: 119, column: 10, scope: !9367)
!9484 = !DILocation(line: 119, column: 16, scope: !9367)
!9485 = !DILocation(line: 120, column: 4, scope: !9367)
!9486 = !DILocation(line: 120, column: 10, scope: !9367)
!9487 = !DILocation(line: 120, column: 16, scope: !9367)
!9488 = !DILocation(line: 121, column: 46, scope: !9367)
!9489 = !DILocation(line: 121, column: 36, scope: !9367)
!9490 = !DILocation(line: 121, column: 4, scope: !9367)
!9491 = !DILocation(line: 121, column: 10, scope: !9367)
!9492 = !DILocation(line: 121, column: 15, scope: !9367)
!9493 = !DILocation(line: 121, column: 28, scope: !9367)
!9494 = !DILocation(line: 121, column: 34, scope: !9367)
!9495 = !DILocation(line: 122, column: 4, scope: !9367)
!9496 = !DILocation(line: 126, column: 4, scope: !9367)
!9497 = !DILocation(line: 126, column: 10, scope: !9367)
!9498 = !DILocation(line: 126, column: 16, scope: !9367)
!9499 = !DILocation(line: 127, column: 4, scope: !9367)
!9500 = !DILocation(line: 127, column: 10, scope: !9367)
!9501 = !DILocation(line: 127, column: 16, scope: !9367)
!9502 = !DILocation(line: 128, column: 46, scope: !9367)
!9503 = !DILocation(line: 128, column: 36, scope: !9367)
!9504 = !DILocation(line: 128, column: 4, scope: !9367)
!9505 = !DILocation(line: 128, column: 10, scope: !9367)
!9506 = !DILocation(line: 128, column: 15, scope: !9367)
!9507 = !DILocation(line: 128, column: 28, scope: !9367)
!9508 = !DILocation(line: 128, column: 34, scope: !9367)
!9509 = !DILocation(line: 129, column: 4, scope: !9367)
!9510 = !DILocation(line: 133, column: 4, scope: !9367)
!9511 = !DILocation(line: 133, column: 10, scope: !9367)
!9512 = !DILocation(line: 133, column: 16, scope: !9367)
!9513 = !DILocation(line: 134, column: 4, scope: !9367)
!9514 = !DILocation(line: 134, column: 10, scope: !9367)
!9515 = !DILocation(line: 134, column: 16, scope: !9367)
!9516 = !DILocation(line: 135, column: 46, scope: !9367)
!9517 = !DILocation(line: 135, column: 36, scope: !9367)
!9518 = !DILocation(line: 135, column: 4, scope: !9367)
!9519 = !DILocation(line: 135, column: 10, scope: !9367)
!9520 = !DILocation(line: 135, column: 15, scope: !9367)
!9521 = !DILocation(line: 135, column: 28, scope: !9367)
!9522 = !DILocation(line: 135, column: 34, scope: !9367)
!9523 = !DILocation(line: 136, column: 4, scope: !9367)
!9524 = !DILocation(line: 140, column: 4, scope: !9367)
!9525 = !DILocation(line: 140, column: 10, scope: !9367)
!9526 = !DILocation(line: 140, column: 16, scope: !9367)
!9527 = !DILocation(line: 141, column: 4, scope: !9367)
!9528 = !DILocation(line: 141, column: 10, scope: !9367)
!9529 = !DILocation(line: 141, column: 16, scope: !9367)
!9530 = !DILocation(line: 142, column: 46, scope: !9367)
!9531 = !DILocation(line: 142, column: 36, scope: !9367)
!9532 = !DILocation(line: 142, column: 4, scope: !9367)
!9533 = !DILocation(line: 142, column: 10, scope: !9367)
!9534 = !DILocation(line: 142, column: 15, scope: !9367)
!9535 = !DILocation(line: 142, column: 28, scope: !9367)
!9536 = !DILocation(line: 142, column: 34, scope: !9367)
!9537 = !DILocation(line: 143, column: 4, scope: !9367)
!9538 = !DILocation(line: 147, column: 4, scope: !9367)
!9539 = !DILocation(line: 147, column: 10, scope: !9367)
!9540 = !DILocation(line: 147, column: 16, scope: !9367)
!9541 = !DILocation(line: 148, column: 4, scope: !9367)
!9542 = !DILocation(line: 148, column: 10, scope: !9367)
!9543 = !DILocation(line: 148, column: 16, scope: !9367)
!9544 = !DILocation(line: 149, column: 46, scope: !9367)
!9545 = !DILocation(line: 149, column: 36, scope: !9367)
!9546 = !DILocation(line: 149, column: 4, scope: !9367)
!9547 = !DILocation(line: 149, column: 10, scope: !9367)
!9548 = !DILocation(line: 149, column: 15, scope: !9367)
!9549 = !DILocation(line: 149, column: 28, scope: !9367)
!9550 = !DILocation(line: 149, column: 34, scope: !9367)
!9551 = !DILocation(line: 150, column: 4, scope: !9367)
!9552 = !DILocation(line: 154, column: 4, scope: !9367)
!9553 = !DILocation(line: 158, column: 2, scope: !9348)
!9554 = !DILocation(line: 158, column: 8, scope: !9348)
!9555 = !DILocation(line: 158, column: 14, scope: !9348)
!9556 = !DILocation(line: 160, column: 2, scope: !9348)
!9557 = !DILocation(line: 161, column: 1, scope: !9348)
!9558 = distinct !DISubprogram(name: "_bm_elem_flag_enable", scope: !3566, file: !3566, line: 52, type: !9559, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{null, !3569, !704}
!9561 = !DILocalVariable(name: "head", arg: 1, scope: !9558, file: !3566, line: 52, type: !3569)
!9562 = !DILocation(line: 52, column: 48, scope: !9558)
!9563 = !DILocalVariable(name: "hflag", arg: 2, scope: !9558, file: !3566, line: 52, type: !704)
!9564 = !DILocation(line: 52, column: 65, scope: !9558)
!9565 = !DILocation(line: 54, column: 17, scope: !9558)
!9566 = !DILocation(line: 54, column: 2, scope: !9558)
!9567 = !DILocation(line: 54, column: 8, scope: !9558)
!9568 = !DILocation(line: 54, column: 14, scope: !9558)
!9569 = !DILocation(line: 55, column: 1, scope: !9558)
!9570 = distinct !DISubprogram(name: "_bm_elem_flag_disable", scope: !3566, file: !3566, line: 57, type: !9559, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9571 = !DILocalVariable(name: "head", arg: 1, scope: !9570, file: !3566, line: 57, type: !3569)
!9572 = !DILocation(line: 57, column: 49, scope: !9570)
!9573 = !DILocalVariable(name: "hflag", arg: 2, scope: !9570, file: !3566, line: 57, type: !704)
!9574 = !DILocation(line: 57, column: 66, scope: !9570)
!9575 = !DILocation(line: 59, column: 24, scope: !9570)
!9576 = !DILocation(line: 59, column: 23, scope: !9570)
!9577 = !DILocation(line: 59, column: 17, scope: !9570)
!9578 = !DILocation(line: 59, column: 2, scope: !9570)
!9579 = !DILocation(line: 59, column: 8, scope: !9570)
!9580 = !DILocation(line: 59, column: 14, scope: !9570)
!9581 = !DILocation(line: 60, column: 1, scope: !9570)
!9582 = distinct !DISubprogram(name: "len_manhattan_v2v2", scope: !9583, file: !9583, line: 735, type: !9584, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9583 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!364, !4309, !4309}
!9586 = !DILocalVariable(name: "a", arg: 1, scope: !9582, file: !9583, line: 735, type: !4309)
!9587 = !DILocation(line: 735, column: 46, scope: !9582)
!9588 = !DILocalVariable(name: "b", arg: 2, scope: !9582, file: !9583, line: 735, type: !4309)
!9589 = !DILocation(line: 735, column: 64, scope: !9582)
!9590 = !DILocalVariable(name: "d", scope: !9582, file: !9583, line: 737, type: !504)
!9591 = !DILocation(line: 737, column: 8, scope: !9582)
!9592 = !DILocation(line: 739, column: 14, scope: !9582)
!9593 = !DILocation(line: 739, column: 17, scope: !9582)
!9594 = !DILocation(line: 739, column: 20, scope: !9582)
!9595 = !DILocation(line: 739, column: 2, scope: !9582)
!9596 = !DILocation(line: 740, column: 26, scope: !9582)
!9597 = !DILocation(line: 740, column: 9, scope: !9582)
!9598 = !DILocation(line: 740, column: 2, scope: !9582)
!9599 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !9583, file: !9583, line: 338, type: !9600, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9600 = !DISubroutineType(types: !9601)
!9601 = !{null, !844, !4309, !4309}
!9602 = !DILocalVariable(name: "r", arg: 1, scope: !9599, file: !9583, line: 338, type: !844)
!9603 = !DILocation(line: 338, column: 32, scope: !9599)
!9604 = !DILocalVariable(name: "a", arg: 2, scope: !9599, file: !9583, line: 338, type: !4309)
!9605 = !DILocation(line: 338, column: 50, scope: !9599)
!9606 = !DILocalVariable(name: "b", arg: 3, scope: !9599, file: !9583, line: 338, type: !4309)
!9607 = !DILocation(line: 338, column: 68, scope: !9599)
!9608 = !DILocation(line: 340, column: 9, scope: !9599)
!9609 = !DILocation(line: 340, column: 16, scope: !9599)
!9610 = !DILocation(line: 340, column: 14, scope: !9599)
!9611 = !DILocation(line: 340, column: 2, scope: !9599)
!9612 = !DILocation(line: 340, column: 7, scope: !9599)
!9613 = !DILocation(line: 341, column: 9, scope: !9599)
!9614 = !DILocation(line: 341, column: 16, scope: !9599)
!9615 = !DILocation(line: 341, column: 14, scope: !9599)
!9616 = !DILocation(line: 341, column: 2, scope: !9599)
!9617 = !DILocation(line: 341, column: 7, scope: !9599)
!9618 = !DILocation(line: 342, column: 1, scope: !9599)
!9619 = distinct !DISubprogram(name: "len_manhattan_v2", scope: !9583, file: !9583, line: 676, type: !9620, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!364, !4309}
!9622 = !DILocalVariable(name: "v", arg: 1, scope: !9619, file: !9583, line: 676, type: !4309)
!9623 = !DILocation(line: 676, column: 44, scope: !9619)
!9624 = !DILocation(line: 678, column: 15, scope: !9619)
!9625 = !DILocation(line: 678, column: 9, scope: !9619)
!9626 = !DILocation(line: 678, column: 29, scope: !9619)
!9627 = !DILocation(line: 678, column: 23, scope: !9619)
!9628 = !DILocation(line: 678, column: 21, scope: !9619)
!9629 = !DILocation(line: 678, column: 2, scope: !9619)
!9630 = distinct !DISubprogram(name: "similar_vert_select_exec", scope: !3, file: !3, line: 807, type: !4978, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9631 = !DILocalVariable(name: "C", arg: 1, scope: !9630, file: !3, line: 807, type: !4980)
!9632 = !DILocation(line: 807, column: 47, scope: !9630)
!9633 = !DILocalVariable(name: "op", arg: 2, scope: !9630, file: !3, line: 807, type: !4982)
!9634 = !DILocation(line: 807, column: 62, scope: !9630)
!9635 = !DILocalVariable(name: "ob", scope: !9630, file: !3, line: 809, type: !3615)
!9636 = !DILocation(line: 809, column: 10, scope: !9630)
!9637 = !DILocation(line: 809, column: 36, scope: !9630)
!9638 = !DILocation(line: 809, column: 15, scope: !9630)
!9639 = !DILocalVariable(name: "em", scope: !9630, file: !3, line: 810, type: !2675)
!9640 = !DILocation(line: 810, column: 14, scope: !9630)
!9641 = !DILocation(line: 810, column: 44, scope: !9630)
!9642 = !DILocation(line: 810, column: 19, scope: !9630)
!9643 = !DILocalVariable(name: "bmop", scope: !9630, file: !3, line: 811, type: !9644)
!9644 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOperator", file: !6, line: 198, baseType: !696)
!9645 = !DILocation(line: 811, column: 13, scope: !9630)
!9646 = !DILocalVariable(name: "type", scope: !9630, file: !3, line: 813, type: !3570)
!9647 = !DILocation(line: 813, column: 12, scope: !9630)
!9648 = !DILocation(line: 813, column: 32, scope: !9630)
!9649 = !DILocation(line: 813, column: 36, scope: !9630)
!9650 = !DILocation(line: 813, column: 19, scope: !9630)
!9651 = !DILocalVariable(name: "thresh", scope: !9630, file: !3, line: 814, type: !4310)
!9652 = !DILocation(line: 814, column: 14, scope: !9630)
!9653 = !DILocation(line: 814, column: 37, scope: !9630)
!9654 = !DILocation(line: 814, column: 41, scope: !9630)
!9655 = !DILocation(line: 814, column: 23, scope: !9630)
!9656 = !DILocalVariable(name: "compare", scope: !9630, file: !3, line: 815, type: !3570)
!9657 = !DILocation(line: 815, column: 12, scope: !9630)
!9658 = !DILocation(line: 815, column: 35, scope: !9630)
!9659 = !DILocation(line: 815, column: 39, scope: !9630)
!9660 = !DILocation(line: 815, column: 22, scope: !9630)
!9661 = !DILocation(line: 818, column: 15, scope: !9630)
!9662 = !DILocation(line: 818, column: 26, scope: !9630)
!9663 = !DILocation(line: 820, column: 31, scope: !9630)
!9664 = !DILocation(line: 820, column: 37, scope: !9630)
!9665 = !DILocation(line: 820, column: 45, scope: !9630)
!9666 = !DILocation(line: 818, column: 2, scope: !9630)
!9667 = !DILocation(line: 823, column: 14, scope: !9630)
!9668 = !DILocation(line: 823, column: 18, scope: !9630)
!9669 = !DILocation(line: 823, column: 2, scope: !9630)
!9670 = !DILocation(line: 826, column: 24, scope: !9630)
!9671 = !DILocation(line: 826, column: 2, scope: !9630)
!9672 = !DILocation(line: 829, column: 31, scope: !9630)
!9673 = !DILocation(line: 829, column: 35, scope: !9630)
!9674 = !DILocation(line: 829, column: 44, scope: !9630)
!9675 = !DILocation(line: 829, column: 39, scope: !9630)
!9676 = !DILocation(line: 829, column: 2, scope: !9630)
!9677 = !DILocation(line: 832, column: 22, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 832, column: 6)
!9679 = !DILocation(line: 832, column: 33, scope: !9678)
!9680 = !DILocation(line: 832, column: 7, scope: !9678)
!9681 = !DILocation(line: 832, column: 6, scope: !9630)
!9682 = !DILocation(line: 833, column: 3, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 832, column: 44)
!9684 = !DILocation(line: 836, column: 24, scope: !9630)
!9685 = !DILocation(line: 836, column: 2, scope: !9630)
!9686 = !DILocation(line: 838, column: 22, scope: !9630)
!9687 = !DILocation(line: 838, column: 2, scope: !9630)
!9688 = !DILocation(line: 840, column: 2, scope: !9630)
!9689 = !DILocation(line: 841, column: 1, scope: !9630)
!9690 = distinct !DISubprogram(name: "similar_edge_select_exec", scope: !3, file: !3, line: 763, type: !4978, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9691 = !DILocalVariable(name: "C", arg: 1, scope: !9690, file: !3, line: 763, type: !4980)
!9692 = !DILocation(line: 763, column: 47, scope: !9690)
!9693 = !DILocalVariable(name: "op", arg: 2, scope: !9690, file: !3, line: 763, type: !4982)
!9694 = !DILocation(line: 763, column: 62, scope: !9690)
!9695 = !DILocalVariable(name: "ob", scope: !9690, file: !3, line: 765, type: !3615)
!9696 = !DILocation(line: 765, column: 10, scope: !9690)
!9697 = !DILocation(line: 765, column: 36, scope: !9690)
!9698 = !DILocation(line: 765, column: 15, scope: !9690)
!9699 = !DILocalVariable(name: "em", scope: !9690, file: !3, line: 766, type: !2675)
!9700 = !DILocation(line: 766, column: 14, scope: !9690)
!9701 = !DILocation(line: 766, column: 44, scope: !9690)
!9702 = !DILocation(line: 766, column: 19, scope: !9690)
!9703 = !DILocalVariable(name: "bmop", scope: !9690, file: !3, line: 767, type: !9644)
!9704 = !DILocation(line: 767, column: 13, scope: !9690)
!9705 = !DILocalVariable(name: "type", scope: !9690, file: !3, line: 770, type: !3570)
!9706 = !DILocation(line: 770, column: 12, scope: !9690)
!9707 = !DILocation(line: 770, column: 32, scope: !9690)
!9708 = !DILocation(line: 770, column: 36, scope: !9690)
!9709 = !DILocation(line: 770, column: 19, scope: !9690)
!9710 = !DILocalVariable(name: "thresh", scope: !9690, file: !3, line: 771, type: !4310)
!9711 = !DILocation(line: 771, column: 14, scope: !9690)
!9712 = !DILocation(line: 771, column: 37, scope: !9690)
!9713 = !DILocation(line: 771, column: 41, scope: !9690)
!9714 = !DILocation(line: 771, column: 23, scope: !9690)
!9715 = !DILocalVariable(name: "compare", scope: !9690, file: !3, line: 772, type: !3570)
!9716 = !DILocation(line: 772, column: 12, scope: !9690)
!9717 = !DILocation(line: 772, column: 35, scope: !9690)
!9718 = !DILocation(line: 772, column: 39, scope: !9690)
!9719 = !DILocation(line: 772, column: 22, scope: !9690)
!9720 = !DILocation(line: 775, column: 15, scope: !9690)
!9721 = !DILocation(line: 775, column: 26, scope: !9690)
!9722 = !DILocation(line: 777, column: 31, scope: !9690)
!9723 = !DILocation(line: 777, column: 37, scope: !9690)
!9724 = !DILocation(line: 777, column: 45, scope: !9690)
!9725 = !DILocation(line: 775, column: 2, scope: !9690)
!9726 = !DILocation(line: 780, column: 14, scope: !9690)
!9727 = !DILocation(line: 780, column: 18, scope: !9690)
!9728 = !DILocation(line: 780, column: 2, scope: !9690)
!9729 = !DILocation(line: 783, column: 24, scope: !9690)
!9730 = !DILocation(line: 783, column: 2, scope: !9690)
!9731 = !DILocation(line: 786, column: 31, scope: !9690)
!9732 = !DILocation(line: 786, column: 35, scope: !9690)
!9733 = !DILocation(line: 786, column: 44, scope: !9690)
!9734 = !DILocation(line: 786, column: 39, scope: !9690)
!9735 = !DILocation(line: 786, column: 2, scope: !9690)
!9736 = !DILocation(line: 787, column: 24, scope: !9690)
!9737 = !DILocation(line: 787, column: 2, scope: !9690)
!9738 = !DILocation(line: 790, column: 22, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 790, column: 6)
!9740 = !DILocation(line: 790, column: 33, scope: !9739)
!9741 = !DILocation(line: 790, column: 7, scope: !9739)
!9742 = !DILocation(line: 790, column: 6, scope: !9690)
!9743 = !DILocation(line: 791, column: 3, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 790, column: 44)
!9745 = !DILocation(line: 794, column: 22, scope: !9690)
!9746 = !DILocation(line: 794, column: 2, scope: !9690)
!9747 = !DILocation(line: 796, column: 2, scope: !9690)
!9748 = !DILocation(line: 797, column: 1, scope: !9690)
!9749 = distinct !DISubprogram(name: "similar_face_select_exec", scope: !3, file: !3, line: 723, type: !4978, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9750 = !DILocalVariable(name: "C", arg: 1, scope: !9749, file: !3, line: 723, type: !4980)
!9751 = !DILocation(line: 723, column: 47, scope: !9749)
!9752 = !DILocalVariable(name: "op", arg: 2, scope: !9749, file: !3, line: 723, type: !4982)
!9753 = !DILocation(line: 723, column: 62, scope: !9749)
!9754 = !DILocalVariable(name: "ob", scope: !9749, file: !3, line: 725, type: !3615)
!9755 = !DILocation(line: 725, column: 10, scope: !9749)
!9756 = !DILocation(line: 725, column: 36, scope: !9749)
!9757 = !DILocation(line: 725, column: 15, scope: !9749)
!9758 = !DILocalVariable(name: "em", scope: !9749, file: !3, line: 726, type: !2675)
!9759 = !DILocation(line: 726, column: 14, scope: !9749)
!9760 = !DILocation(line: 726, column: 44, scope: !9749)
!9761 = !DILocation(line: 726, column: 19, scope: !9749)
!9762 = !DILocalVariable(name: "bmop", scope: !9749, file: !3, line: 727, type: !9644)
!9763 = !DILocation(line: 727, column: 13, scope: !9749)
!9764 = !DILocalVariable(name: "type", scope: !9749, file: !3, line: 730, type: !3570)
!9765 = !DILocation(line: 730, column: 12, scope: !9749)
!9766 = !DILocation(line: 730, column: 32, scope: !9749)
!9767 = !DILocation(line: 730, column: 36, scope: !9749)
!9768 = !DILocation(line: 730, column: 19, scope: !9749)
!9769 = !DILocalVariable(name: "thresh", scope: !9749, file: !3, line: 731, type: !4310)
!9770 = !DILocation(line: 731, column: 14, scope: !9749)
!9771 = !DILocation(line: 731, column: 37, scope: !9749)
!9772 = !DILocation(line: 731, column: 41, scope: !9749)
!9773 = !DILocation(line: 731, column: 23, scope: !9749)
!9774 = !DILocalVariable(name: "compare", scope: !9749, file: !3, line: 732, type: !3570)
!9775 = !DILocation(line: 732, column: 12, scope: !9749)
!9776 = !DILocation(line: 732, column: 35, scope: !9749)
!9777 = !DILocation(line: 732, column: 39, scope: !9749)
!9778 = !DILocation(line: 732, column: 22, scope: !9749)
!9779 = !DILocation(line: 735, column: 15, scope: !9749)
!9780 = !DILocation(line: 735, column: 26, scope: !9749)
!9781 = !DILocation(line: 737, column: 31, scope: !9749)
!9782 = !DILocation(line: 737, column: 37, scope: !9749)
!9783 = !DILocation(line: 737, column: 45, scope: !9749)
!9784 = !DILocation(line: 735, column: 2, scope: !9749)
!9785 = !DILocation(line: 740, column: 14, scope: !9749)
!9786 = !DILocation(line: 740, column: 18, scope: !9749)
!9787 = !DILocation(line: 740, column: 2, scope: !9749)
!9788 = !DILocation(line: 743, column: 24, scope: !9749)
!9789 = !DILocation(line: 743, column: 2, scope: !9749)
!9790 = !DILocation(line: 746, column: 31, scope: !9749)
!9791 = !DILocation(line: 746, column: 35, scope: !9749)
!9792 = !DILocation(line: 746, column: 44, scope: !9749)
!9793 = !DILocation(line: 746, column: 39, scope: !9749)
!9794 = !DILocation(line: 746, column: 2, scope: !9749)
!9795 = !DILocation(line: 749, column: 22, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 749, column: 6)
!9797 = !DILocation(line: 749, column: 33, scope: !9796)
!9798 = !DILocation(line: 749, column: 7, scope: !9796)
!9799 = !DILocation(line: 749, column: 6, scope: !9749)
!9800 = !DILocation(line: 750, column: 3, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 749, column: 44)
!9802 = !DILocation(line: 753, column: 22, scope: !9749)
!9803 = !DILocation(line: 753, column: 2, scope: !9749)
!9804 = !DILocation(line: 755, column: 2, scope: !9749)
!9805 = !DILocation(line: 756, column: 1, scope: !9749)
!9806 = distinct !DISubprogram(name: "walker_select", scope: !3, file: !3, line: 1127, type: !9807, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9807 = !DISubroutineType(types: !9808)
!9808 = !{null, !2675, !319, !288, !3057}
!9809 = !DILocalVariable(name: "em", arg: 1, scope: !9806, file: !3, line: 1127, type: !2675)
!9810 = !DILocation(line: 1127, column: 39, scope: !9806)
!9811 = !DILocalVariable(name: "walkercode", arg: 2, scope: !9806, file: !3, line: 1127, type: !319)
!9812 = !DILocation(line: 1127, column: 47, scope: !9806)
!9813 = !DILocalVariable(name: "start", arg: 3, scope: !9806, file: !3, line: 1127, type: !288)
!9814 = !DILocation(line: 1127, column: 65, scope: !9806)
!9815 = !DILocalVariable(name: "select", arg: 4, scope: !9806, file: !3, line: 1127, type: !3057)
!9816 = !DILocation(line: 1127, column: 83, scope: !9806)
!9817 = !DILocalVariable(name: "bm", scope: !9806, file: !3, line: 1129, type: !739)
!9818 = !DILocation(line: 1129, column: 9, scope: !9806)
!9819 = !DILocation(line: 1129, column: 14, scope: !9806)
!9820 = !DILocation(line: 1129, column: 18, scope: !9806)
!9821 = !DILocalVariable(name: "ele", scope: !9806, file: !3, line: 1130, type: !6344)
!9822 = !DILocation(line: 1130, column: 10, scope: !9806)
!9823 = !DILocalVariable(name: "walker", scope: !9806, file: !3, line: 1131, type: !7201)
!9824 = !DILocation(line: 1131, column: 11, scope: !9806)
!9825 = !DILocation(line: 1133, column: 20, scope: !9806)
!9826 = !DILocation(line: 1133, column: 24, scope: !9806)
!9827 = !DILocation(line: 1133, column: 2, scope: !9806)
!9828 = !DILocation(line: 1138, column: 32, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1138, column: 2)
!9830 = !DILocation(line: 1138, column: 13, scope: !9829)
!9831 = !DILocation(line: 1138, column: 11, scope: !9829)
!9832 = !DILocation(line: 1138, column: 7, scope: !9829)
!9833 = !DILocation(line: 1138, column: 40, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 1138, column: 2)
!9835 = !DILocation(line: 1138, column: 2, scope: !9829)
!9836 = !DILocation(line: 1139, column: 8, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 1139, column: 7)
!9838 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 1138, column: 70)
!9839 = !DILocation(line: 1139, column: 7, scope: !9838)
!9840 = !DILocation(line: 1140, column: 4, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1139, column: 16)
!9842 = !DILocation(line: 1141, column: 3, scope: !9841)
!9843 = !DILocation(line: 1142, column: 22, scope: !9838)
!9844 = !DILocation(line: 1142, column: 26, scope: !9838)
!9845 = !DILocation(line: 1142, column: 31, scope: !9838)
!9846 = !DILocation(line: 1142, column: 3, scope: !9838)
!9847 = !DILocation(line: 1143, column: 2, scope: !9838)
!9848 = !DILocation(line: 1138, column: 51, scope: !9834)
!9849 = !DILocation(line: 1138, column: 49, scope: !9834)
!9850 = !DILocation(line: 1138, column: 2, scope: !9834)
!9851 = distinct !{!9851, !9835, !9852}
!9852 = !DILocation(line: 1143, column: 2, scope: !9829)
!9853 = !DILocation(line: 1144, column: 2, scope: !9806)
!9854 = !DILocation(line: 1145, column: 1, scope: !9806)
!9855 = distinct !DISubprogram(name: "mouse_mesh_loop", scope: !3, file: !3, line: 1275, type: !9856, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!9856 = !DISubroutineType(types: !9857)
!9857 = !{!813, !4980, !5840, !813, !813, !813, !813}
!9858 = !DILocalVariable(name: "C", arg: 1, scope: !9855, file: !3, line: 1275, type: !4980)
!9859 = !DILocation(line: 1275, column: 39, scope: !9855)
!9860 = !DILocalVariable(name: "mval", arg: 2, scope: !9855, file: !3, line: 1275, type: !5840)
!9861 = !DILocation(line: 1275, column: 52, scope: !9855)
!9862 = !DILocalVariable(name: "extend", arg: 3, scope: !9855, file: !3, line: 1275, type: !813)
!9863 = !DILocation(line: 1275, column: 66, scope: !9855)
!9864 = !DILocalVariable(name: "deselect", arg: 4, scope: !9855, file: !3, line: 1275, type: !813)
!9865 = !DILocation(line: 1275, column: 79, scope: !9855)
!9866 = !DILocalVariable(name: "toggle", arg: 5, scope: !9855, file: !3, line: 1275, type: !813)
!9867 = !DILocation(line: 1275, column: 94, scope: !9855)
!9868 = !DILocalVariable(name: "ring", arg: 6, scope: !9855, file: !3, line: 1275, type: !813)
!9869 = !DILocation(line: 1275, column: 107, scope: !9855)
!9870 = !DILocalVariable(name: "vc", scope: !9855, file: !3, line: 1277, type: !2696)
!9871 = !DILocation(line: 1277, column: 14, scope: !9855)
!9872 = !DILocalVariable(name: "em", scope: !9855, file: !3, line: 1278, type: !2675)
!9873 = !DILocation(line: 1278, column: 14, scope: !9855)
!9874 = !DILocalVariable(name: "eed", scope: !9855, file: !3, line: 1279, type: !681)
!9875 = !DILocation(line: 1279, column: 10, scope: !9855)
!9876 = !DILocalVariable(name: "select", scope: !9855, file: !3, line: 1280, type: !813)
!9877 = !DILocation(line: 1280, column: 7, scope: !9855)
!9878 = !DILocalVariable(name: "select_clear", scope: !9855, file: !3, line: 1281, type: !813)
!9879 = !DILocation(line: 1281, column: 7, scope: !9855)
!9880 = !DILocalVariable(name: "select_cycle", scope: !9855, file: !3, line: 1282, type: !813)
!9881 = !DILocation(line: 1282, column: 7, scope: !9855)
!9882 = !DILocalVariable(name: "dist", scope: !9855, file: !3, line: 1283, type: !364)
!9883 = !DILocation(line: 1283, column: 8, scope: !9855)
!9884 = !DILocation(line: 1283, column: 15, scope: !9855)
!9885 = !DILocation(line: 1283, column: 42, scope: !9855)
!9886 = !DILocalVariable(name: "mvalf", scope: !9855, file: !3, line: 1284, type: !504)
!9887 = !DILocation(line: 1284, column: 8, scope: !9855)
!9888 = !DILocation(line: 1286, column: 23, scope: !9855)
!9889 = !DILocation(line: 1286, column: 2, scope: !9855)
!9890 = !DILocation(line: 1287, column: 34, scope: !9855)
!9891 = !DILocation(line: 1287, column: 24, scope: !9855)
!9892 = !DILocation(line: 1287, column: 21, scope: !9855)
!9893 = !DILocation(line: 1287, column: 32, scope: !9855)
!9894 = !DILocation(line: 1287, column: 13, scope: !9855)
!9895 = !DILocation(line: 1287, column: 2, scope: !9855)
!9896 = !DILocation(line: 1287, column: 11, scope: !9855)
!9897 = !DILocation(line: 1288, column: 34, scope: !9855)
!9898 = !DILocation(line: 1288, column: 24, scope: !9855)
!9899 = !DILocation(line: 1288, column: 21, scope: !9855)
!9900 = !DILocation(line: 1288, column: 32, scope: !9855)
!9901 = !DILocation(line: 1288, column: 13, scope: !9855)
!9902 = !DILocation(line: 1288, column: 2, scope: !9855)
!9903 = !DILocation(line: 1288, column: 11, scope: !9855)
!9904 = !DILocation(line: 1289, column: 10, scope: !9855)
!9905 = !DILocation(line: 1289, column: 5, scope: !9855)
!9906 = !DILocation(line: 1292, column: 2, scope: !9855)
!9907 = !DILocation(line: 1294, column: 8, scope: !9855)
!9908 = !DILocation(line: 1294, column: 6, scope: !9855)
!9909 = !DILocation(line: 1295, column: 6, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 1295, column: 6)
!9911 = !DILocation(line: 1295, column: 10, scope: !9910)
!9912 = !DILocation(line: 1295, column: 6, scope: !9855)
!9913 = !DILocation(line: 1296, column: 3, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 1295, column: 19)
!9915 = !DILocation(line: 1299, column: 6, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 1299, column: 6)
!9917 = !DILocation(line: 1299, column: 13, scope: !9916)
!9918 = !DILocation(line: 1299, column: 22, scope: !9916)
!9919 = !DILocation(line: 1299, column: 25, scope: !9916)
!9920 = !DILocation(line: 1299, column: 34, scope: !9916)
!9921 = !DILocation(line: 1299, column: 43, scope: !9916)
!9922 = !DILocation(line: 1299, column: 46, scope: !9916)
!9923 = !DILocation(line: 1299, column: 53, scope: !9916)
!9924 = !DILocation(line: 1299, column: 6, scope: !9855)
!9925 = !DILocation(line: 1300, column: 16, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9916, file: !3, line: 1299, column: 63)
!9927 = !DILocation(line: 1301, column: 2, scope: !9926)
!9928 = !DILocation(line: 1303, column: 6, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 1303, column: 6)
!9930 = !DILocation(line: 1303, column: 6, scope: !9855)
!9931 = !DILocation(line: 1304, column: 10, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 1303, column: 14)
!9933 = !DILocation(line: 1305, column: 2, scope: !9932)
!9934 = !DILocation(line: 1306, column: 11, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 1306, column: 11)
!9936 = !DILocation(line: 1306, column: 11, scope: !9929)
!9937 = !DILocation(line: 1307, column: 10, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 1306, column: 21)
!9939 = !DILocation(line: 1308, column: 2, scope: !9938)
!9940 = !DILocation(line: 1309, column: 11, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 1309, column: 11)
!9942 = !DILocation(line: 1309, column: 24, scope: !9941)
!9943 = !DILocation(line: 1309, column: 28, scope: !9941)
!9944 = !DILocation(line: 1309, column: 67, scope: !9941)
!9945 = !DILocation(line: 1309, column: 11, scope: !9935)
!9946 = !DILocation(line: 1310, column: 10, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1309, column: 74)
!9948 = !DILocation(line: 1311, column: 2, scope: !9947)
!9949 = !DILocation(line: 1312, column: 11, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1312, column: 11)
!9951 = !DILocation(line: 1312, column: 11, scope: !9941)
!9952 = !DILocation(line: 1313, column: 10, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 1312, column: 19)
!9954 = !DILocation(line: 1314, column: 16, scope: !9953)
!9955 = !DILocation(line: 1315, column: 2, scope: !9953)
!9956 = !DILocation(line: 1317, column: 6, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 1317, column: 6)
!9958 = !DILocation(line: 1317, column: 10, scope: !9957)
!9959 = !DILocation(line: 1317, column: 21, scope: !9957)
!9960 = !DILocation(line: 1317, column: 6, scope: !9855)
!9961 = !DILocation(line: 1318, column: 24, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 1317, column: 40)
!9963 = !DILocation(line: 1318, column: 28, scope: !9962)
!9964 = !DILocation(line: 1318, column: 33, scope: !9962)
!9965 = !DILocation(line: 1318, column: 41, scope: !9962)
!9966 = !DILocation(line: 1318, column: 3, scope: !9962)
!9967 = !DILocation(line: 1319, column: 2, scope: !9962)
!9968 = !DILocation(line: 1321, column: 7, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1321, column: 7)
!9970 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 1320, column: 7)
!9971 = !DILocation(line: 1321, column: 7, scope: !9970)
!9972 = !DILocation(line: 1322, column: 30, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1321, column: 13)
!9974 = !DILocation(line: 1322, column: 34, scope: !9973)
!9975 = !DILocation(line: 1322, column: 39, scope: !9973)
!9976 = !DILocation(line: 1322, column: 47, scope: !9973)
!9977 = !DILocation(line: 1322, column: 4, scope: !9973)
!9978 = !DILocation(line: 1323, column: 3, scope: !9973)
!9979 = !DILocation(line: 1325, column: 25, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1324, column: 8)
!9981 = !DILocation(line: 1325, column: 29, scope: !9980)
!9982 = !DILocation(line: 1325, column: 34, scope: !9980)
!9983 = !DILocation(line: 1325, column: 42, scope: !9980)
!9984 = !DILocation(line: 1325, column: 56, scope: !9980)
!9985 = !DILocation(line: 1325, column: 4, scope: !9980)
!9986 = !DILocation(line: 1329, column: 24, scope: !9855)
!9987 = !DILocation(line: 1329, column: 2, scope: !9855)
!9988 = !DILocation(line: 1332, column: 6, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 1332, column: 6)
!9990 = !DILocation(line: 1332, column: 6, scope: !9855)
!9991 = !DILocation(line: 1333, column: 7, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 1333, column: 7)
!9993 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 1332, column: 14)
!9994 = !DILocation(line: 1333, column: 11, scope: !9992)
!9995 = !DILocation(line: 1333, column: 22, scope: !9992)
!9996 = !DILocation(line: 1333, column: 7, scope: !9993)
!9997 = !DILocalVariable(name: "v1_co", scope: !9998, file: !3, line: 1336, type: !504)
!9998 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 1333, column: 43)
!9999 = !DILocation(line: 1336, column: 10, scope: !9998)
!10000 = !DILocalVariable(name: "v2_co", scope: !9998, file: !3, line: 1336, type: !504)
!10001 = !DILocation(line: 1336, column: 20, scope: !9998)
!10002 = !DILocalVariable(name: "length_1", scope: !9998, file: !3, line: 1337, type: !364)
!10003 = !DILocation(line: 1337, column: 10, scope: !9998)
!10004 = !DILocalVariable(name: "length_2", scope: !9998, file: !3, line: 1338, type: !364)
!10005 = !DILocation(line: 1338, column: 10, scope: !9998)
!10006 = !DILocation(line: 1341, column: 32, scope: !9998)
!10007 = !DILocation(line: 1341, column: 43, scope: !9998)
!10008 = !DILocation(line: 1341, column: 4, scope: !9998)
!10009 = !DILocation(line: 1343, column: 42, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 1343, column: 8)
!10011 = !DILocation(line: 1343, column: 46, scope: !10010)
!10012 = !DILocation(line: 1343, column: 51, scope: !10010)
!10013 = !DILocation(line: 1343, column: 55, scope: !10010)
!10014 = !DILocation(line: 1343, column: 59, scope: !10010)
!10015 = !DILocation(line: 1343, column: 8, scope: !10010)
!10016 = !DILocation(line: 1343, column: 91, scope: !10010)
!10017 = !DILocation(line: 1343, column: 8, scope: !9998)
!10018 = !DILocation(line: 1344, column: 33, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 1343, column: 111)
!10020 = !DILocation(line: 1344, column: 40, scope: !10019)
!10021 = !DILocation(line: 1344, column: 16, scope: !10019)
!10022 = !DILocation(line: 1344, column: 14, scope: !10019)
!10023 = !DILocation(line: 1345, column: 4, scope: !10019)
!10024 = !DILocation(line: 1347, column: 42, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 1347, column: 8)
!10026 = !DILocation(line: 1347, column: 46, scope: !10025)
!10027 = !DILocation(line: 1347, column: 51, scope: !10025)
!10028 = !DILocation(line: 1347, column: 55, scope: !10025)
!10029 = !DILocation(line: 1347, column: 59, scope: !10025)
!10030 = !DILocation(line: 1347, column: 8, scope: !10025)
!10031 = !DILocation(line: 1347, column: 91, scope: !10025)
!10032 = !DILocation(line: 1347, column: 8, scope: !9998)
!10033 = !DILocation(line: 1348, column: 33, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 1347, column: 111)
!10035 = !DILocation(line: 1348, column: 40, scope: !10034)
!10036 = !DILocation(line: 1348, column: 16, scope: !10034)
!10037 = !DILocation(line: 1348, column: 14, scope: !10034)
!10038 = !DILocation(line: 1349, column: 4, scope: !10034)
!10039 = !DILocation(line: 1354, column: 4, scope: !9998)
!10040 = !DILocation(line: 1355, column: 3, scope: !9998)
!10041 = !DILocation(line: 1356, column: 12, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 1356, column: 12)
!10043 = !DILocation(line: 1356, column: 16, scope: !10042)
!10044 = !DILocation(line: 1356, column: 27, scope: !10042)
!10045 = !DILocation(line: 1356, column: 12, scope: !9992)
!10046 = !DILocation(line: 1357, column: 4, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 1356, column: 46)
!10048 = !DILocation(line: 1358, column: 3, scope: !10047)
!10049 = !DILocation(line: 1359, column: 12, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 1359, column: 12)
!10051 = !DILocation(line: 1359, column: 16, scope: !10050)
!10052 = !DILocation(line: 1359, column: 27, scope: !10050)
!10053 = !DILocation(line: 1359, column: 12, scope: !10042)
!10054 = !DILocalVariable(name: "f", scope: !10055, file: !3, line: 1361, type: !685)
!10055 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 1359, column: 46)
!10056 = !DILocation(line: 1361, column: 12, scope: !10055)
!10057 = !DILocalVariable(name: "efa", scope: !10055, file: !3, line: 1361, type: !685)
!10058 = !DILocation(line: 1361, column: 16, scope: !10055)
!10059 = !DILocalVariable(name: "iterf", scope: !10055, file: !3, line: 1362, type: !3253)
!10060 = !DILocation(line: 1362, column: 11, scope: !10055)
!10061 = !DILocalVariable(name: "best_dist", scope: !10055, file: !3, line: 1363, type: !364)
!10062 = !DILocation(line: 1363, column: 10, scope: !10055)
!10063 = !DILocation(line: 1366, column: 32, scope: !10055)
!10064 = !DILocation(line: 1366, column: 43, scope: !10055)
!10065 = !DILocation(line: 1366, column: 4, scope: !10055)
!10066 = !DILocation(line: 1368, column: 4, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1368, column: 4)
!10068 = !DILocation(line: 1368, column: 4, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 1368, column: 4)
!10070 = !DILocation(line: 1369, column: 9, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 1369, column: 9)
!10072 = distinct !DILexicalBlock(scope: !10069, file: !3, line: 1368, column: 52)
!10073 = !DILocation(line: 1369, column: 9, scope: !10072)
!10074 = !DILocalVariable(name: "cent", scope: !10075, file: !3, line: 1370, type: !556)
!10075 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1369, column: 47)
!10076 = !DILocation(line: 1370, column: 12, scope: !10075)
!10077 = !DILocalVariable(name: "co", scope: !10075, file: !3, line: 1371, type: !504)
!10078 = !DILocation(line: 1371, column: 12, scope: !10075)
!10079 = !DILocalVariable(name: "tdist", scope: !10075, file: !3, line: 1371, type: !364)
!10080 = !DILocation(line: 1371, column: 19, scope: !10075)
!10081 = !DILocation(line: 1373, column: 31, scope: !10075)
!10082 = !DILocation(line: 1373, column: 34, scope: !10075)
!10083 = !DILocation(line: 1373, column: 6, scope: !10075)
!10084 = !DILocation(line: 1374, column: 44, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 1374, column: 10)
!10086 = !DILocation(line: 1374, column: 48, scope: !10085)
!10087 = !DILocation(line: 1374, column: 54, scope: !10085)
!10088 = !DILocation(line: 1374, column: 10, scope: !10085)
!10089 = !DILocation(line: 1374, column: 83, scope: !10085)
!10090 = !DILocation(line: 1374, column: 10, scope: !10075)
!10091 = !DILocation(line: 1375, column: 32, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1374, column: 103)
!10093 = !DILocation(line: 1375, column: 39, scope: !10092)
!10094 = !DILocation(line: 1375, column: 15, scope: !10092)
!10095 = !DILocation(line: 1375, column: 13, scope: !10092)
!10096 = !DILocation(line: 1376, column: 11, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 1376, column: 11)
!10098 = !DILocation(line: 1376, column: 19, scope: !10097)
!10099 = !DILocation(line: 1376, column: 17, scope: !10097)
!10100 = !DILocation(line: 1376, column: 11, scope: !10092)
!10101 = !DILocation(line: 1378, column: 20, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10097, file: !3, line: 1376, column: 30)
!10103 = !DILocation(line: 1378, column: 18, scope: !10102)
!10104 = !DILocation(line: 1379, column: 14, scope: !10102)
!10105 = !DILocation(line: 1379, column: 12, scope: !10102)
!10106 = !DILocation(line: 1380, column: 7, scope: !10102)
!10107 = !DILocation(line: 1381, column: 6, scope: !10092)
!10108 = !DILocation(line: 1382, column: 5, scope: !10075)
!10109 = !DILocation(line: 1383, column: 4, scope: !10072)
!10110 = distinct !{!10110, !10066, !10111}
!10111 = !DILocation(line: 1383, column: 4, scope: !10067)
!10112 = !DILocation(line: 1384, column: 8, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1384, column: 8)
!10114 = !DILocation(line: 1384, column: 8, scope: !10055)
!10115 = !DILocation(line: 1385, column: 29, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 1384, column: 13)
!10117 = !DILocation(line: 1385, column: 33, scope: !10116)
!10118 = !DILocation(line: 1385, column: 37, scope: !10116)
!10119 = !DILocation(line: 1385, column: 5, scope: !10116)
!10120 = !DILocation(line: 1386, column: 5, scope: !10116)
!10121 = !DILocation(line: 1387, column: 4, scope: !10116)
!10122 = !DILocation(line: 1388, column: 3, scope: !10055)
!10123 = !DILocation(line: 1389, column: 2, scope: !9993)
!10124 = !DILocation(line: 1391, column: 24, scope: !9855)
!10125 = !DILocation(line: 1391, column: 51, scope: !9855)
!10126 = !DILocation(line: 1391, column: 48, scope: !9855)
!10127 = !DILocation(line: 1391, column: 2, scope: !9855)
!10128 = !DILocation(line: 1393, column: 2, scope: !9855)
!10129 = !DILocation(line: 1394, column: 1, scope: !9855)
!10130 = distinct !DISubprogram(name: "mouse_mesh_loop_face", scope: !3, file: !3, line: 1221, type: !10131, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{null, !2675, !681, !813, !813}
!10133 = !DILocalVariable(name: "em", arg: 1, scope: !10130, file: !3, line: 1221, type: !2675)
!10134 = !DILocation(line: 1221, column: 46, scope: !10130)
!10135 = !DILocalVariable(name: "eed", arg: 2, scope: !10130, file: !3, line: 1221, type: !681)
!10136 = !DILocation(line: 1221, column: 58, scope: !10130)
!10137 = !DILocalVariable(name: "select", arg: 3, scope: !10130, file: !3, line: 1221, type: !813)
!10138 = !DILocation(line: 1221, column: 68, scope: !10130)
!10139 = !DILocalVariable(name: "select_clear", arg: 4, scope: !10130, file: !3, line: 1221, type: !813)
!10140 = !DILocation(line: 1221, column: 81, scope: !10130)
!10141 = !DILocation(line: 1223, column: 6, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1223, column: 6)
!10143 = !DILocation(line: 1223, column: 6, scope: !10130)
!10144 = !DILocation(line: 1224, column: 25, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1223, column: 20)
!10146 = !DILocation(line: 1224, column: 3, scope: !10145)
!10147 = !DILocation(line: 1225, column: 2, scope: !10145)
!10148 = !DILocation(line: 1227, column: 16, scope: !10130)
!10149 = !DILocation(line: 1227, column: 34, scope: !10130)
!10150 = !DILocation(line: 1227, column: 39, scope: !10130)
!10151 = !DILocation(line: 1227, column: 2, scope: !10130)
!10152 = !DILocation(line: 1228, column: 1, scope: !10130)
!10153 = distinct !DISubprogram(name: "mouse_mesh_loop_edge_ring", scope: !3, file: !3, line: 1230, type: !10131, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10154 = !DILocalVariable(name: "em", arg: 1, scope: !10153, file: !3, line: 1230, type: !2675)
!10155 = !DILocation(line: 1230, column: 51, scope: !10153)
!10156 = !DILocalVariable(name: "eed", arg: 2, scope: !10153, file: !3, line: 1230, type: !681)
!10157 = !DILocation(line: 1230, column: 63, scope: !10153)
!10158 = !DILocalVariable(name: "select", arg: 3, scope: !10153, file: !3, line: 1230, type: !813)
!10159 = !DILocation(line: 1230, column: 73, scope: !10153)
!10160 = !DILocalVariable(name: "select_clear", arg: 4, scope: !10153, file: !3, line: 1230, type: !813)
!10161 = !DILocation(line: 1230, column: 86, scope: !10153)
!10162 = !DILocation(line: 1232, column: 6, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 1232, column: 6)
!10164 = !DILocation(line: 1232, column: 6, scope: !10153)
!10165 = !DILocation(line: 1233, column: 25, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10163, file: !3, line: 1232, column: 20)
!10167 = !DILocation(line: 1233, column: 3, scope: !10166)
!10168 = !DILocation(line: 1234, column: 2, scope: !10166)
!10169 = !DILocation(line: 1236, column: 16, scope: !10153)
!10170 = !DILocation(line: 1236, column: 34, scope: !10153)
!10171 = !DILocation(line: 1236, column: 39, scope: !10153)
!10172 = !DILocation(line: 1236, column: 2, scope: !10153)
!10173 = !DILocation(line: 1237, column: 1, scope: !10153)
!10174 = distinct !DISubprogram(name: "mouse_mesh_loop_edge", scope: !3, file: !3, line: 1239, type: !10175, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{null, !2675, !681, !813, !813, !813}
!10177 = !DILocalVariable(name: "em", arg: 1, scope: !10174, file: !3, line: 1239, type: !2675)
!10178 = !DILocation(line: 1239, column: 46, scope: !10174)
!10179 = !DILocalVariable(name: "eed", arg: 2, scope: !10174, file: !3, line: 1239, type: !681)
!10180 = !DILocation(line: 1239, column: 58, scope: !10174)
!10181 = !DILocalVariable(name: "select", arg: 3, scope: !10174, file: !3, line: 1239, type: !813)
!10182 = !DILocation(line: 1239, column: 68, scope: !10174)
!10183 = !DILocalVariable(name: "select_clear", arg: 4, scope: !10174, file: !3, line: 1239, type: !813)
!10184 = !DILocation(line: 1239, column: 81, scope: !10174)
!10185 = !DILocalVariable(name: "select_cycle", arg: 5, scope: !10174, file: !3, line: 1239, type: !813)
!10186 = !DILocation(line: 1239, column: 100, scope: !10174)
!10187 = !DILocalVariable(name: "edge_boundary", scope: !10174, file: !3, line: 1241, type: !813)
!10188 = !DILocation(line: 1241, column: 7, scope: !10174)
!10189 = !DILocation(line: 1244, column: 6, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10174, file: !3, line: 1244, column: 6)
!10191 = !DILocation(line: 1244, column: 19, scope: !10190)
!10192 = !DILocation(line: 1244, column: 42, scope: !10190)
!10193 = !DILocation(line: 1244, column: 22, scope: !10190)
!10194 = !DILocation(line: 1244, column: 6, scope: !10174)
!10195 = !DILocalVariable(name: "tot", scope: !10196, file: !3, line: 1245, type: !1340)
!10196 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 1244, column: 48)
!10197 = !DILocation(line: 1245, column: 7, scope: !10196)
!10198 = !DILocation(line: 1248, column: 23, scope: !10196)
!10199 = !DILocation(line: 1248, column: 37, scope: !10196)
!10200 = !DILocation(line: 1248, column: 42, scope: !10196)
!10201 = !DILocation(line: 1249, column: 24, scope: !10196)
!10202 = !DILocation(line: 1249, column: 33, scope: !10196)
!10203 = !DILocation(line: 1248, column: 3, scope: !10196)
!10204 = !DILocation(line: 1250, column: 11, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 1250, column: 7)
!10206 = !DILocation(line: 1250, column: 7, scope: !10205)
!10207 = !DILocation(line: 1250, column: 19, scope: !10205)
!10208 = !DILocation(line: 1250, column: 7, scope: !10196)
!10209 = !DILocation(line: 1251, column: 18, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1250, column: 25)
!10211 = !DILocation(line: 1254, column: 24, scope: !10210)
!10212 = !DILocation(line: 1254, column: 46, scope: !10210)
!10213 = !DILocation(line: 1254, column: 51, scope: !10210)
!10214 = !DILocation(line: 1255, column: 25, scope: !10210)
!10215 = !DILocation(line: 1255, column: 34, scope: !10210)
!10216 = !DILocation(line: 1254, column: 4, scope: !10210)
!10217 = !DILocation(line: 1256, column: 12, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 1256, column: 8)
!10219 = !DILocation(line: 1256, column: 8, scope: !10218)
!10220 = !DILocation(line: 1256, column: 20, scope: !10218)
!10221 = !DILocation(line: 1256, column: 8, scope: !10210)
!10222 = !DILocation(line: 1257, column: 19, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 1256, column: 26)
!10224 = !DILocation(line: 1258, column: 4, scope: !10223)
!10225 = !DILocation(line: 1259, column: 3, scope: !10210)
!10226 = !DILocation(line: 1260, column: 2, scope: !10196)
!10227 = !DILocation(line: 1262, column: 6, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10174, file: !3, line: 1262, column: 6)
!10229 = !DILocation(line: 1262, column: 6, scope: !10174)
!10230 = !DILocation(line: 1263, column: 25, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 1262, column: 20)
!10232 = !DILocation(line: 1263, column: 3, scope: !10231)
!10233 = !DILocation(line: 1264, column: 2, scope: !10231)
!10234 = !DILocation(line: 1266, column: 6, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10174, file: !3, line: 1266, column: 6)
!10236 = !DILocation(line: 1266, column: 6, scope: !10174)
!10237 = !DILocation(line: 1267, column: 17, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 1266, column: 21)
!10239 = !DILocation(line: 1267, column: 39, scope: !10238)
!10240 = !DILocation(line: 1267, column: 44, scope: !10238)
!10241 = !DILocation(line: 1267, column: 3, scope: !10238)
!10242 = !DILocation(line: 1268, column: 2, scope: !10238)
!10243 = !DILocation(line: 1270, column: 17, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 1269, column: 7)
!10245 = !DILocation(line: 1270, column: 31, scope: !10244)
!10246 = !DILocation(line: 1270, column: 36, scope: !10244)
!10247 = !DILocation(line: 1270, column: 3, scope: !10244)
!10248 = !DILocation(line: 1272, column: 1, scope: !10174)
!10249 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !9583, file: !9583, line: 719, type: !9584, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10250 = !DILocalVariable(name: "a", arg: 1, scope: !10249, file: !9583, line: 719, type: !4309)
!10251 = !DILocation(line: 719, column: 44, scope: !10249)
!10252 = !DILocalVariable(name: "b", arg: 2, scope: !10249, file: !9583, line: 719, type: !4309)
!10253 = !DILocation(line: 719, column: 62, scope: !10249)
!10254 = !DILocalVariable(name: "d", scope: !10249, file: !9583, line: 721, type: !504)
!10255 = !DILocation(line: 721, column: 8, scope: !10249)
!10256 = !DILocation(line: 723, column: 14, scope: !10249)
!10257 = !DILocation(line: 723, column: 17, scope: !10249)
!10258 = !DILocation(line: 723, column: 20, scope: !10249)
!10259 = !DILocation(line: 723, column: 2, scope: !10249)
!10260 = !DILocation(line: 724, column: 18, scope: !10249)
!10261 = !DILocation(line: 724, column: 21, scope: !10249)
!10262 = !DILocation(line: 724, column: 9, scope: !10249)
!10263 = !DILocation(line: 724, column: 2, scope: !10249)
!10264 = distinct !DISubprogram(name: "BM_edge_is_boundary", scope: !10265, file: !10265, line: 118, type: !10266, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10265 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_queries_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10266 = !DISubroutineType(types: !10267)
!10267 = !{!813, !10268}
!10268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10269, size: 64)
!10269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!10270 = !DILocalVariable(name: "e", arg: 1, scope: !10264, file: !10265, line: 118, type: !10268)
!10271 = !DILocation(line: 118, column: 51, scope: !10264)
!10272 = !DILocalVariable(name: "l", scope: !10264, file: !10265, line: 120, type: !10273)
!10273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10274, size: 64)
!10274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !664)
!10275 = !DILocation(line: 120, column: 16, scope: !10264)
!10276 = !DILocation(line: 120, column: 20, scope: !10264)
!10277 = !DILocation(line: 120, column: 23, scope: !10264)
!10278 = !DILocation(line: 121, column: 10, scope: !10264)
!10279 = !DILocation(line: 121, column: 12, scope: !10264)
!10280 = !DILocation(line: 121, column: 16, scope: !10264)
!10281 = !DILocation(line: 121, column: 19, scope: !10264)
!10282 = !DILocation(line: 121, column: 34, scope: !10264)
!10283 = !DILocation(line: 121, column: 31, scope: !10264)
!10284 = !DILocation(line: 0, scope: !10264)
!10285 = !DILocation(line: 121, column: 9, scope: !10264)
!10286 = !DILocation(line: 121, column: 2, scope: !10264)
!10287 = distinct !DISubprogram(name: "walker_select_count", scope: !3, file: !3, line: 1099, type: !10288, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10288 = !DISubroutineType(types: !10289)
!10289 = !{null, !2675, !319, !288, !3057, !3057, !1754, !1754}
!10290 = !DILocalVariable(name: "em", arg: 1, scope: !10287, file: !3, line: 1099, type: !2675)
!10291 = !DILocation(line: 1099, column: 45, scope: !10287)
!10292 = !DILocalVariable(name: "walkercode", arg: 2, scope: !10287, file: !3, line: 1099, type: !319)
!10293 = !DILocation(line: 1099, column: 53, scope: !10287)
!10294 = !DILocalVariable(name: "start", arg: 3, scope: !10287, file: !3, line: 1099, type: !288)
!10295 = !DILocation(line: 1099, column: 71, scope: !10287)
!10296 = !DILocalVariable(name: "select", arg: 4, scope: !10287, file: !3, line: 1099, type: !3057)
!10297 = !DILocation(line: 1099, column: 89, scope: !10287)
!10298 = !DILocalVariable(name: "select_mix", arg: 5, scope: !10287, file: !3, line: 1099, type: !3057)
!10299 = !DILocation(line: 1099, column: 108, scope: !10287)
!10300 = !DILocalVariable(name: "r_totsel", arg: 6, scope: !10287, file: !3, line: 1100, type: !1754)
!10301 = !DILocation(line: 1100, column: 38, scope: !10287)
!10302 = !DILocalVariable(name: "r_totunsel", arg: 7, scope: !10287, file: !3, line: 1100, type: !1754)
!10303 = !DILocation(line: 1100, column: 53, scope: !10287)
!10304 = !DILocalVariable(name: "bm", scope: !10287, file: !3, line: 1102, type: !739)
!10305 = !DILocation(line: 1102, column: 9, scope: !10287)
!10306 = !DILocation(line: 1102, column: 14, scope: !10287)
!10307 = !DILocation(line: 1102, column: 18, scope: !10287)
!10308 = !DILocalVariable(name: "ele", scope: !10287, file: !3, line: 1103, type: !6344)
!10309 = !DILocation(line: 1103, column: 10, scope: !10287)
!10310 = !DILocalVariable(name: "walker", scope: !10287, file: !3, line: 1104, type: !7201)
!10311 = !DILocation(line: 1104, column: 11, scope: !10287)
!10312 = !DILocalVariable(name: "tot", scope: !10287, file: !3, line: 1105, type: !1340)
!10313 = !DILocation(line: 1105, column: 6, scope: !10287)
!10314 = !DILocation(line: 1107, column: 20, scope: !10287)
!10315 = !DILocation(line: 1107, column: 24, scope: !10287)
!10316 = !DILocation(line: 1107, column: 2, scope: !10287)
!10317 = !DILocation(line: 1112, column: 32, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1112, column: 2)
!10319 = !DILocation(line: 1112, column: 13, scope: !10318)
!10320 = !DILocation(line: 1112, column: 11, scope: !10318)
!10321 = !DILocation(line: 1112, column: 7, scope: !10318)
!10322 = !DILocation(line: 1112, column: 40, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 1112, column: 2)
!10324 = !DILocation(line: 1112, column: 2, scope: !10318)
!10325 = !DILocation(line: 1113, column: 8, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 1112, column: 70)
!10327 = !DILocation(line: 1113, column: 55, scope: !10326)
!10328 = !DILocation(line: 1113, column: 52, scope: !10326)
!10329 = !DILocation(line: 1113, column: 3, scope: !10326)
!10330 = !DILocation(line: 1113, column: 64, scope: !10326)
!10331 = !DILocation(line: 1115, column: 8, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1115, column: 7)
!10333 = !DILocation(line: 1115, column: 19, scope: !10332)
!10334 = !DILocation(line: 1115, column: 22, scope: !10332)
!10335 = !DILocation(line: 1115, column: 29, scope: !10332)
!10336 = !DILocation(line: 1115, column: 32, scope: !10332)
!10337 = !DILocation(line: 1115, column: 7, scope: !10326)
!10338 = !DILocation(line: 1116, column: 13, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 1115, column: 40)
!10340 = !DILocation(line: 1116, column: 20, scope: !10339)
!10341 = !DILocation(line: 1116, column: 4, scope: !10339)
!10342 = !DILocation(line: 1116, column: 11, scope: !10339)
!10343 = !DILocation(line: 1117, column: 4, scope: !10339)
!10344 = !DILocation(line: 1119, column: 2, scope: !10326)
!10345 = !DILocation(line: 1112, column: 51, scope: !10323)
!10346 = !DILocation(line: 1112, column: 49, scope: !10323)
!10347 = !DILocation(line: 1112, column: 2, scope: !10323)
!10348 = distinct !{!10348, !10324, !10349}
!10349 = !DILocation(line: 1119, column: 2, scope: !10318)
!10350 = !DILocation(line: 1121, column: 14, scope: !10287)
!10351 = !DILocation(line: 1121, column: 3, scope: !10287)
!10352 = !DILocation(line: 1121, column: 12, scope: !10287)
!10353 = !DILocation(line: 1122, column: 16, scope: !10287)
!10354 = !DILocation(line: 1122, column: 3, scope: !10287)
!10355 = !DILocation(line: 1122, column: 14, scope: !10287)
!10356 = !DILocation(line: 1124, column: 2, scope: !10287)
!10357 = !DILocation(line: 1125, column: 1, scope: !10287)
!10358 = distinct !DISubprogram(name: "_bm_elem_flag_test_bool", scope: !3566, file: !3566, line: 47, type: !10359, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{!813, !3590, !704}
!10361 = !DILocalVariable(name: "head", arg: 1, scope: !10358, file: !3566, line: 47, type: !3590)
!10362 = !DILocation(line: 47, column: 57, scope: !10358)
!10363 = !DILocalVariable(name: "hflag", arg: 2, scope: !10358, file: !3566, line: 47, type: !704)
!10364 = !DILocation(line: 47, column: 74, scope: !10358)
!10365 = !DILocation(line: 49, column: 10, scope: !10358)
!10366 = !DILocation(line: 49, column: 16, scope: !10358)
!10367 = !DILocation(line: 49, column: 24, scope: !10358)
!10368 = !DILocation(line: 49, column: 22, scope: !10358)
!10369 = !DILocation(line: 49, column: 31, scope: !10358)
!10370 = !DILocation(line: 49, column: 9, scope: !10358)
!10371 = !DILocation(line: 49, column: 2, scope: !10358)
!10372 = distinct !DISubprogram(name: "dot_v2v2", scope: !9583, file: !9583, line: 614, type: !9584, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10373 = !DILocalVariable(name: "a", arg: 1, scope: !10372, file: !9583, line: 614, type: !4309)
!10374 = !DILocation(line: 614, column: 36, scope: !10372)
!10375 = !DILocalVariable(name: "b", arg: 2, scope: !10372, file: !9583, line: 614, type: !4309)
!10376 = !DILocation(line: 614, column: 54, scope: !10372)
!10377 = !DILocation(line: 616, column: 9, scope: !10372)
!10378 = !DILocation(line: 616, column: 16, scope: !10372)
!10379 = !DILocation(line: 616, column: 14, scope: !10372)
!10380 = !DILocation(line: 616, column: 23, scope: !10372)
!10381 = !DILocation(line: 616, column: 30, scope: !10372)
!10382 = !DILocation(line: 616, column: 28, scope: !10372)
!10383 = !DILocation(line: 616, column: 21, scope: !10372)
!10384 = !DILocation(line: 616, column: 2, scope: !10372)
!10385 = distinct !DISubprogram(name: "linked_limit_default", scope: !3, file: !3, line: 2066, type: !10386, scopeLine: 2067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{null, !4980, !4982}
!10388 = !DILocalVariable(name: "C", arg: 1, scope: !10385, file: !3, line: 2066, type: !4980)
!10389 = !DILocation(line: 2066, column: 44, scope: !10385)
!10390 = !DILocalVariable(name: "op", arg: 2, scope: !10385, file: !3, line: 2066, type: !4982)
!10391 = !DILocation(line: 2066, column: 59, scope: !10385)
!10392 = !DILocation(line: 2068, column: 34, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10385, file: !3, line: 2068, column: 6)
!10394 = !DILocation(line: 2068, column: 38, scope: !10393)
!10395 = !DILocation(line: 2068, column: 7, scope: !10393)
!10396 = !DILocation(line: 2068, column: 6, scope: !10385)
!10397 = !DILocalVariable(name: "obedit", scope: !10398, file: !3, line: 2069, type: !3615)
!10398 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 2068, column: 53)
!10399 = !DILocation(line: 2069, column: 11, scope: !10398)
!10400 = !DILocation(line: 2069, column: 41, scope: !10398)
!10401 = !DILocation(line: 2069, column: 20, scope: !10398)
!10402 = !DILocalVariable(name: "em", scope: !10398, file: !3, line: 2070, type: !2675)
!10403 = !DILocation(line: 2070, column: 15, scope: !10398)
!10404 = !DILocation(line: 2070, column: 45, scope: !10398)
!10405 = !DILocation(line: 2070, column: 20, scope: !10398)
!10406 = !DILocation(line: 2071, column: 7, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 2071, column: 7)
!10408 = !DILocation(line: 2071, column: 11, scope: !10407)
!10409 = !DILocation(line: 2071, column: 22, scope: !10407)
!10410 = !DILocation(line: 2071, column: 7, scope: !10398)
!10411 = !DILocation(line: 2072, column: 20, scope: !10407)
!10412 = !DILocation(line: 2072, column: 24, scope: !10407)
!10413 = !DILocation(line: 2072, column: 4, scope: !10407)
!10414 = !DILocation(line: 2074, column: 20, scope: !10407)
!10415 = !DILocation(line: 2074, column: 24, scope: !10407)
!10416 = !DILocation(line: 2074, column: 4, scope: !10407)
!10417 = !DILocation(line: 2075, column: 2, scope: !10398)
!10418 = !DILocation(line: 2076, column: 1, scope: !10385)
!10419 = distinct !DISubprogram(name: "_bmo_elem_flag_set", scope: !10420, file: !10420, line: 61, type: !10421, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10420 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10421 = !DISubroutineType(types: !10422)
!10422 = !{null, !739, !10423, !6453, !319}
!10423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10424, size: 64)
!10424 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFlagLayer", file: !62, line: 182, baseType: !635)
!10425 = !DILocalVariable(name: "bm", arg: 1, scope: !10419, file: !10420, line: 61, type: !739)
!10426 = !DILocation(line: 61, column: 43, scope: !10419)
!10427 = !DILocalVariable(name: "oflags", arg: 2, scope: !10419, file: !10420, line: 61, type: !10423)
!10428 = !DILocation(line: 61, column: 60, scope: !10419)
!10429 = !DILocalVariable(name: "oflag", arg: 3, scope: !10419, file: !10420, line: 61, type: !6453)
!10430 = !DILocation(line: 61, column: 80, scope: !10419)
!10431 = !DILocalVariable(name: "val", arg: 4, scope: !10419, file: !10420, line: 61, type: !319)
!10432 = !DILocation(line: 61, column: 91, scope: !10419)
!10433 = !DILocation(line: 63, column: 6, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10419, file: !10420, line: 63, column: 6)
!10435 = !DILocation(line: 63, column: 6, scope: !10419)
!10436 = !DILocation(line: 63, column: 43, scope: !10434)
!10437 = !DILocation(line: 63, column: 11, scope: !10434)
!10438 = !DILocation(line: 63, column: 18, scope: !10434)
!10439 = !DILocation(line: 63, column: 22, scope: !10434)
!10440 = !DILocation(line: 63, column: 33, scope: !10434)
!10441 = !DILocation(line: 63, column: 38, scope: !10434)
!10442 = !DILocation(line: 63, column: 40, scope: !10434)
!10443 = !DILocation(line: 64, column: 51, scope: !10434)
!10444 = !DILocation(line: 64, column: 50, scope: !10434)
!10445 = !DILocation(line: 64, column: 43, scope: !10434)
!10446 = !DILocation(line: 64, column: 11, scope: !10434)
!10447 = !DILocation(line: 64, column: 18, scope: !10434)
!10448 = !DILocation(line: 64, column: 22, scope: !10434)
!10449 = !DILocation(line: 64, column: 33, scope: !10434)
!10450 = !DILocation(line: 64, column: 38, scope: !10434)
!10451 = !DILocation(line: 64, column: 40, scope: !10434)
!10452 = !DILocation(line: 65, column: 1, scope: !10419)
!10453 = distinct !DISubprogram(name: "BM_edge_is_wire", scope: !10265, file: !10265, line: 75, type: !10266, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10454 = !DILocalVariable(name: "e", arg: 1, scope: !10453, file: !10265, line: 75, type: !10268)
!10455 = !DILocation(line: 75, column: 47, scope: !10453)
!10456 = !DILocation(line: 77, column: 10, scope: !10453)
!10457 = !DILocation(line: 77, column: 13, scope: !10453)
!10458 = !DILocation(line: 77, column: 15, scope: !10453)
!10459 = !DILocation(line: 77, column: 9, scope: !10453)
!10460 = !DILocation(line: 77, column: 2, scope: !10453)
!10461 = distinct !DISubprogram(name: "mod_i", scope: !6878, file: !6878, line: 178, type: !10462, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!319, !319, !319}
!10464 = !DILocalVariable(name: "i", arg: 1, scope: !10461, file: !6878, line: 178, type: !319)
!10465 = !DILocation(line: 178, column: 23, scope: !10461)
!10466 = !DILocalVariable(name: "n", arg: 2, scope: !10461, file: !6878, line: 178, type: !319)
!10467 = !DILocation(line: 178, column: 30, scope: !10461)
!10468 = !DILocation(line: 180, column: 10, scope: !10461)
!10469 = !DILocation(line: 180, column: 14, scope: !10461)
!10470 = !DILocation(line: 180, column: 12, scope: !10461)
!10471 = !DILocation(line: 180, column: 18, scope: !10461)
!10472 = !DILocation(line: 180, column: 16, scope: !10461)
!10473 = !DILocation(line: 180, column: 23, scope: !10461)
!10474 = !DILocation(line: 180, column: 21, scope: !10461)
!10475 = !DILocation(line: 180, column: 2, scope: !10461)
!10476 = distinct !DISubprogram(name: "edbm_deselect_nth", scope: !3, file: !3, line: 2685, type: !10477, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!813, !2675, !319, !319}
!10479 = !DILocalVariable(name: "em", arg: 1, scope: !10476, file: !3, line: 2685, type: !2675)
!10480 = !DILocation(line: 2685, column: 43, scope: !10476)
!10481 = !DILocalVariable(name: "nth", arg: 2, scope: !10476, file: !3, line: 2685, type: !319)
!10482 = !DILocation(line: 2685, column: 51, scope: !10476)
!10483 = !DILocalVariable(name: "offset", arg: 3, scope: !10476, file: !3, line: 2685, type: !319)
!10484 = !DILocation(line: 2685, column: 60, scope: !10476)
!10485 = !DILocalVariable(name: "v", scope: !10476, file: !3, line: 2687, type: !620)
!10486 = !DILocation(line: 2687, column: 10, scope: !10476)
!10487 = !DILocalVariable(name: "e", scope: !10476, file: !3, line: 2688, type: !681)
!10488 = !DILocation(line: 2688, column: 10, scope: !10476)
!10489 = !DILocalVariable(name: "f", scope: !10476, file: !3, line: 2689, type: !685)
!10490 = !DILocation(line: 2689, column: 10, scope: !10476)
!10491 = !DILocation(line: 2691, column: 22, scope: !10476)
!10492 = !DILocation(line: 2691, column: 2, scope: !10476)
!10493 = !DILocation(line: 2693, column: 6, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 2693, column: 6)
!10495 = !DILocation(line: 2693, column: 6, scope: !10476)
!10496 = !DILocation(line: 2694, column: 23, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2693, column: 9)
!10498 = !DILocation(line: 2694, column: 27, scope: !10497)
!10499 = !DILocation(line: 2694, column: 32, scope: !10497)
!10500 = !DILocation(line: 2694, column: 41, scope: !10497)
!10501 = !DILocation(line: 2694, column: 44, scope: !10497)
!10502 = !DILocation(line: 2694, column: 3, scope: !10497)
!10503 = !DILocation(line: 2695, column: 3, scope: !10497)
!10504 = !DILocation(line: 2697, column: 11, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2697, column: 11)
!10506 = !DILocation(line: 2697, column: 11, scope: !10494)
!10507 = !DILocation(line: 2698, column: 23, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 2697, column: 14)
!10509 = !DILocation(line: 2698, column: 27, scope: !10508)
!10510 = !DILocation(line: 2698, column: 32, scope: !10508)
!10511 = !DILocation(line: 2698, column: 41, scope: !10508)
!10512 = !DILocation(line: 2698, column: 44, scope: !10508)
!10513 = !DILocation(line: 2698, column: 3, scope: !10508)
!10514 = !DILocation(line: 2699, column: 3, scope: !10508)
!10515 = !DILocation(line: 2701, column: 11, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 2701, column: 11)
!10517 = !DILocation(line: 2701, column: 11, scope: !10505)
!10518 = !DILocation(line: 2702, column: 23, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2701, column: 14)
!10520 = !DILocation(line: 2702, column: 27, scope: !10519)
!10521 = !DILocation(line: 2702, column: 32, scope: !10519)
!10522 = !DILocation(line: 2702, column: 41, scope: !10519)
!10523 = !DILocation(line: 2702, column: 44, scope: !10519)
!10524 = !DILocation(line: 2702, column: 3, scope: !10519)
!10525 = !DILocation(line: 2703, column: 3, scope: !10519)
!10526 = !DILocation(line: 2706, column: 2, scope: !10476)
!10527 = !DILocation(line: 2707, column: 1, scope: !10476)
!10528 = distinct !DISubprogram(name: "deselect_nth_active", scope: !3, file: !3, line: 2632, type: !10529, scopeLine: 2633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10529 = !DISubroutineType(types: !10530)
!10530 = !{null, !2675, !619, !680, !684}
!10531 = !DILocalVariable(name: "em", arg: 1, scope: !10528, file: !3, line: 2632, type: !2675)
!10532 = !DILocation(line: 2632, column: 45, scope: !10528)
!10533 = !DILocalVariable(name: "r_eve", arg: 2, scope: !10528, file: !3, line: 2632, type: !619)
!10534 = !DILocation(line: 2632, column: 58, scope: !10528)
!10535 = !DILocalVariable(name: "r_eed", arg: 3, scope: !10528, file: !3, line: 2632, type: !680)
!10536 = !DILocation(line: 2632, column: 74, scope: !10528)
!10537 = !DILocalVariable(name: "r_efa", arg: 4, scope: !10528, file: !3, line: 2632, type: !684)
!10538 = !DILocation(line: 2632, column: 90, scope: !10528)
!10539 = !DILocalVariable(name: "iter", scope: !10528, file: !3, line: 2634, type: !3253)
!10540 = !DILocation(line: 2634, column: 9, scope: !10528)
!10541 = !DILocalVariable(name: "ele", scope: !10528, file: !3, line: 2635, type: !6344)
!10542 = !DILocation(line: 2635, column: 10, scope: !10528)
!10543 = !DILocation(line: 2637, column: 3, scope: !10528)
!10544 = !DILocation(line: 2637, column: 9, scope: !10528)
!10545 = !DILocation(line: 2638, column: 3, scope: !10528)
!10546 = !DILocation(line: 2638, column: 9, scope: !10528)
!10547 = !DILocation(line: 2639, column: 3, scope: !10528)
!10548 = !DILocation(line: 2639, column: 9, scope: !10528)
!10549 = !DILocation(line: 2641, column: 24, scope: !10528)
!10550 = !DILocation(line: 2641, column: 2, scope: !10528)
!10551 = !DILocation(line: 2642, column: 32, scope: !10528)
!10552 = !DILocation(line: 2642, column: 36, scope: !10528)
!10553 = !DILocation(line: 2642, column: 8, scope: !10528)
!10554 = !DILocation(line: 2642, column: 6, scope: !10528)
!10555 = !DILocation(line: 2644, column: 6, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 2644, column: 6)
!10557 = !DILocation(line: 2644, column: 10, scope: !10556)
!10558 = !DILocation(line: 2644, column: 13, scope: !10556)
!10559 = !DILocation(line: 2644, column: 6, scope: !10528)
!10560 = !DILocation(line: 2645, column: 11, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2644, column: 53)
!10562 = !DILocation(line: 2645, column: 16, scope: !10561)
!10563 = !DILocation(line: 2645, column: 21, scope: !10561)
!10564 = !DILocation(line: 2645, column: 3, scope: !10561)
!10565 = !DILocation(line: 2647, column: 24, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 2645, column: 28)
!10567 = !DILocation(line: 2647, column: 14, scope: !10566)
!10568 = !DILocation(line: 2647, column: 6, scope: !10566)
!10569 = !DILocation(line: 2647, column: 12, scope: !10566)
!10570 = !DILocation(line: 2648, column: 5, scope: !10566)
!10571 = !DILocation(line: 2650, column: 24, scope: !10566)
!10572 = !DILocation(line: 2650, column: 14, scope: !10566)
!10573 = !DILocation(line: 2650, column: 6, scope: !10566)
!10574 = !DILocation(line: 2650, column: 12, scope: !10566)
!10575 = !DILocation(line: 2651, column: 5, scope: !10566)
!10576 = !DILocation(line: 2653, column: 24, scope: !10566)
!10577 = !DILocation(line: 2653, column: 14, scope: !10566)
!10578 = !DILocation(line: 2653, column: 6, scope: !10566)
!10579 = !DILocation(line: 2653, column: 12, scope: !10566)
!10580 = !DILocation(line: 2654, column: 5, scope: !10566)
!10581 = !DILocation(line: 2656, column: 2, scope: !10561)
!10582 = !DILocation(line: 2658, column: 6, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 2658, column: 6)
!10584 = !DILocation(line: 2658, column: 10, scope: !10583)
!10585 = !DILocation(line: 2658, column: 21, scope: !10583)
!10586 = !DILocation(line: 2658, column: 6, scope: !10528)
!10587 = !DILocalVariable(name: "v", scope: !10588, file: !3, line: 2659, type: !620)
!10588 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 2658, column: 42)
!10589 = !DILocation(line: 2659, column: 11, scope: !10588)
!10590 = !DILocation(line: 2660, column: 3, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2660, column: 3)
!10592 = !DILocation(line: 2660, column: 3, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 2660, column: 3)
!10594 = !DILocation(line: 2661, column: 8, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 2661, column: 8)
!10596 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2660, column: 53)
!10597 = !DILocation(line: 2661, column: 8, scope: !10596)
!10598 = !DILocation(line: 2662, column: 14, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2661, column: 46)
!10600 = !DILocation(line: 2662, column: 6, scope: !10599)
!10601 = !DILocation(line: 2662, column: 12, scope: !10599)
!10602 = !DILocation(line: 2663, column: 5, scope: !10599)
!10603 = !DILocation(line: 2665, column: 3, scope: !10596)
!10604 = distinct !{!10604, !10590, !10605}
!10605 = !DILocation(line: 2665, column: 3, scope: !10591)
!10606 = !DILocation(line: 2666, column: 2, scope: !10588)
!10607 = !DILocation(line: 2667, column: 11, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 2667, column: 11)
!10609 = !DILocation(line: 2667, column: 15, scope: !10608)
!10610 = !DILocation(line: 2667, column: 26, scope: !10608)
!10611 = !DILocation(line: 2667, column: 11, scope: !10583)
!10612 = !DILocalVariable(name: "e", scope: !10613, file: !3, line: 2668, type: !681)
!10613 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 2667, column: 45)
!10614 = !DILocation(line: 2668, column: 11, scope: !10613)
!10615 = !DILocation(line: 2669, column: 3, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 2669, column: 3)
!10617 = !DILocation(line: 2669, column: 3, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 2669, column: 3)
!10619 = !DILocation(line: 2670, column: 8, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 2670, column: 8)
!10621 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 2669, column: 53)
!10622 = !DILocation(line: 2670, column: 8, scope: !10621)
!10623 = !DILocation(line: 2671, column: 14, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 2670, column: 46)
!10625 = !DILocation(line: 2671, column: 6, scope: !10624)
!10626 = !DILocation(line: 2671, column: 12, scope: !10624)
!10627 = !DILocation(line: 2672, column: 5, scope: !10624)
!10628 = !DILocation(line: 2674, column: 3, scope: !10621)
!10629 = distinct !{!10629, !10615, !10630}
!10630 = !DILocation(line: 2674, column: 3, scope: !10616)
!10631 = !DILocation(line: 2675, column: 2, scope: !10613)
!10632 = !DILocation(line: 2676, column: 11, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 2676, column: 11)
!10634 = !DILocation(line: 2676, column: 15, scope: !10633)
!10635 = !DILocation(line: 2676, column: 26, scope: !10633)
!10636 = !DILocation(line: 2676, column: 11, scope: !10608)
!10637 = !DILocalVariable(name: "f", scope: !10638, file: !3, line: 2677, type: !685)
!10638 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 2676, column: 45)
!10639 = !DILocation(line: 2677, column: 11, scope: !10638)
!10640 = !DILocation(line: 2677, column: 39, scope: !10638)
!10641 = !DILocation(line: 2677, column: 43, scope: !10638)
!10642 = !DILocation(line: 2677, column: 15, scope: !10638)
!10643 = !DILocation(line: 2678, column: 7, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 2678, column: 7)
!10645 = !DILocation(line: 2678, column: 9, scope: !10644)
!10646 = !DILocation(line: 2678, column: 12, scope: !10644)
!10647 = !DILocation(line: 2678, column: 7, scope: !10638)
!10648 = !DILocation(line: 2679, column: 13, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2678, column: 50)
!10650 = !DILocation(line: 2679, column: 5, scope: !10649)
!10651 = !DILocation(line: 2679, column: 11, scope: !10649)
!10652 = !DILocation(line: 2680, column: 4, scope: !10649)
!10653 = !DILocation(line: 2682, column: 2, scope: !10638)
!10654 = !DILocation(line: 2683, column: 1, scope: !10528)
!10655 = distinct !DISubprogram(name: "walker_deselect_nth", scope: !3, file: !3, line: 2552, type: !10656, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10656 = !DISubroutineType(types: !10657)
!10657 = !{null, !2675, !319, !319, !3569}
!10658 = !DILocalVariable(name: "em", arg: 1, scope: !10655, file: !3, line: 2552, type: !2675)
!10659 = !DILocation(line: 2552, column: 45, scope: !10655)
!10660 = !DILocalVariable(name: "nth", arg: 2, scope: !10655, file: !3, line: 2552, type: !319)
!10661 = !DILocation(line: 2552, column: 53, scope: !10655)
!10662 = !DILocalVariable(name: "offset", arg: 3, scope: !10655, file: !3, line: 2552, type: !319)
!10663 = !DILocation(line: 2552, column: 62, scope: !10655)
!10664 = !DILocalVariable(name: "h_act", arg: 4, scope: !10655, file: !3, line: 2552, type: !3569)
!10665 = !DILocation(line: 2552, column: 80, scope: !10655)
!10666 = !DILocalVariable(name: "ele", scope: !10655, file: !3, line: 2554, type: !6344)
!10667 = !DILocation(line: 2554, column: 10, scope: !10655)
!10668 = !DILocalVariable(name: "bm", scope: !10655, file: !3, line: 2555, type: !739)
!10669 = !DILocation(line: 2555, column: 9, scope: !10655)
!10670 = !DILocation(line: 2555, column: 14, scope: !10655)
!10671 = !DILocation(line: 2555, column: 18, scope: !10655)
!10672 = !DILocalVariable(name: "walker", scope: !10655, file: !3, line: 2556, type: !7201)
!10673 = !DILocation(line: 2556, column: 11, scope: !10655)
!10674 = !DILocalVariable(name: "iter", scope: !10655, file: !3, line: 2557, type: !3253)
!10675 = !DILocation(line: 2557, column: 9, scope: !10655)
!10676 = !DILocalVariable(name: "walktype", scope: !10655, file: !3, line: 2558, type: !319)
!10677 = !DILocation(line: 2558, column: 6, scope: !10655)
!10678 = !DILocalVariable(name: "itertype", scope: !10655, file: !3, line: 2558, type: !319)
!10679 = !DILocation(line: 2558, column: 20, scope: !10655)
!10680 = !DILocalVariable(name: "flushtype", scope: !10655, file: !3, line: 2558, type: !319)
!10681 = !DILocation(line: 2558, column: 34, scope: !10655)
!10682 = !DILocalVariable(name: "mask_vert", scope: !10655, file: !3, line: 2559, type: !317)
!10683 = !DILocation(line: 2559, column: 8, scope: !10655)
!10684 = !DILocalVariable(name: "mask_edge", scope: !10655, file: !3, line: 2559, type: !317)
!10685 = !DILocation(line: 2559, column: 23, scope: !10655)
!10686 = !DILocalVariable(name: "mask_face", scope: !10655, file: !3, line: 2559, type: !317)
!10687 = !DILocation(line: 2559, column: 38, scope: !10655)
!10688 = !DILocation(line: 2562, column: 6, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 2562, column: 6)
!10690 = !DILocation(line: 2562, column: 12, scope: !10689)
!10691 = !DILocation(line: 2562, column: 6, scope: !10655)
!10692 = !DILocation(line: 2563, column: 3, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 2562, column: 21)
!10694 = !DILocation(line: 2568, column: 10, scope: !10655)
!10695 = !DILocation(line: 2568, column: 17, scope: !10655)
!10696 = !DILocation(line: 2568, column: 2, scope: !10655)
!10697 = !DILocation(line: 2570, column: 13, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 2568, column: 24)
!10699 = !DILocation(line: 2571, column: 13, scope: !10698)
!10700 = !DILocation(line: 2572, column: 14, scope: !10698)
!10701 = !DILocation(line: 2573, column: 14, scope: !10698)
!10702 = !DILocation(line: 2574, column: 4, scope: !10698)
!10703 = !DILocation(line: 2578, column: 13, scope: !10698)
!10704 = !DILocation(line: 2579, column: 52, scope: !10698)
!10705 = !DILocation(line: 2579, column: 42, scope: !10698)
!10706 = !DILocation(line: 2579, column: 15, scope: !10698)
!10707 = !DILocation(line: 2579, column: 13, scope: !10698)
!10708 = !DILocation(line: 2580, column: 14, scope: !10698)
!10709 = !DILocation(line: 2581, column: 14, scope: !10698)
!10710 = !DILocation(line: 2582, column: 4, scope: !10698)
!10711 = !DILocation(line: 2584, column: 13, scope: !10698)
!10712 = !DILocation(line: 2585, column: 13, scope: !10698)
!10713 = !DILocation(line: 2586, column: 14, scope: !10698)
!10714 = !DILocation(line: 2587, column: 14, scope: !10698)
!10715 = !DILocation(line: 2588, column: 4, scope: !10698)
!10716 = !DILocation(line: 2592, column: 32, scope: !10655)
!10717 = !DILocation(line: 2592, column: 2, scope: !10655)
!10718 = !DILocation(line: 2596, column: 11, scope: !10655)
!10719 = !DILocation(line: 2596, column: 2, scope: !10655)
!10720 = !DILocation(line: 2597, column: 2, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 2597, column: 2)
!10722 = !DILocation(line: 2597, column: 2, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2597, column: 2)
!10724 = !DILocation(line: 2598, column: 7, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 2598, column: 7)
!10726 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 2597, column: 42)
!10727 = !DILocation(line: 2598, column: 7, scope: !10726)
!10728 = !DILocation(line: 2599, column: 4, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 2598, column: 47)
!10730 = !DILocation(line: 2600, column: 3, scope: !10729)
!10731 = !DILocation(line: 2601, column: 2, scope: !10726)
!10732 = distinct !{!10732, !10720, !10733}
!10733 = !DILocation(line: 2601, column: 2, scope: !10721)
!10734 = !DILocation(line: 2604, column: 20, scope: !10655)
!10735 = !DILocation(line: 2604, column: 24, scope: !10655)
!10736 = !DILocation(line: 2605, column: 11, scope: !10655)
!10737 = !DILocation(line: 2605, column: 22, scope: !10655)
!10738 = !DILocation(line: 2605, column: 33, scope: !10655)
!10739 = !DILocation(line: 2604, column: 2, scope: !10655)
!10740 = !DILocation(line: 2610, column: 2, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 2610, column: 2)
!10742 = !DILocation(line: 2610, column: 2, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 2610, column: 2)
!10744 = !DILocation(line: 2611, column: 3, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 2610, column: 42)
!10746 = !DILocation(line: 2612, column: 2, scope: !10745)
!10747 = distinct !{!10747, !10740, !10748}
!10748 = !DILocation(line: 2612, column: 2, scope: !10741)
!10749 = !DILocation(line: 2615, column: 32, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 2615, column: 2)
!10751 = !DILocation(line: 2615, column: 13, scope: !10750)
!10752 = !DILocation(line: 2615, column: 11, scope: !10750)
!10753 = !DILocation(line: 2615, column: 7, scope: !10750)
!10754 = !DILocation(line: 2615, column: 40, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 2615, column: 2)
!10756 = !DILocation(line: 2615, column: 44, scope: !10755)
!10757 = !DILocation(line: 2615, column: 2, scope: !10750)
!10758 = !DILocation(line: 2616, column: 8, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 2616, column: 7)
!10760 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 2615, column: 78)
!10761 = !DILocation(line: 2616, column: 7, scope: !10760)
!10762 = !DILocation(line: 2618, column: 9, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 2618, column: 8)
!10764 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2616, column: 45)
!10765 = !DILocation(line: 2618, column: 18, scope: !10763)
!10766 = !DILocation(line: 2618, column: 16, scope: !10763)
!10767 = !DILocation(line: 2618, column: 48, scope: !10763)
!10768 = !DILocation(line: 2618, column: 46, scope: !10763)
!10769 = !DILocation(line: 2618, column: 8, scope: !10764)
!10770 = !DILocation(line: 2619, column: 24, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 2618, column: 53)
!10772 = !DILocation(line: 2619, column: 28, scope: !10771)
!10773 = !DILocation(line: 2619, column: 5, scope: !10771)
!10774 = !DILocation(line: 2620, column: 4, scope: !10771)
!10775 = !DILocation(line: 2621, column: 4, scope: !10764)
!10776 = !DILocation(line: 2622, column: 3, scope: !10764)
!10777 = !DILocation(line: 2623, column: 2, scope: !10760)
!10778 = !DILocation(line: 2615, column: 59, scope: !10755)
!10779 = !DILocation(line: 2615, column: 57, scope: !10755)
!10780 = !DILocation(line: 2615, column: 2, scope: !10755)
!10781 = distinct !{!10781, !10757, !10782}
!10782 = !DILocation(line: 2623, column: 2, scope: !10750)
!10783 = !DILocation(line: 2624, column: 2, scope: !10655)
!10784 = !DILocation(line: 2626, column: 10, scope: !10655)
!10785 = !DILocation(line: 2626, column: 2, scope: !10655)
!10786 = !DILocation(line: 2629, column: 27, scope: !10655)
!10787 = !DILocation(line: 2629, column: 31, scope: !10655)
!10788 = !DILocation(line: 2629, column: 2, scope: !10655)
!10789 = !DILocation(line: 2630, column: 1, scope: !10655)
!10790 = distinct !DISubprogram(name: "bm_edge_is_select_isolated", scope: !3, file: !3, line: 2531, type: !10791, scopeLine: 2532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10791 = !DISubroutineType(types: !10792)
!10792 = !{!813, !681}
!10793 = !DILocalVariable(name: "e", arg: 1, scope: !10790, file: !3, line: 2531, type: !681)
!10794 = !DILocation(line: 2531, column: 48, scope: !10790)
!10795 = !DILocalVariable(name: "viter", scope: !10790, file: !3, line: 2533, type: !3253)
!10796 = !DILocation(line: 2533, column: 9, scope: !10790)
!10797 = !DILocalVariable(name: "v", scope: !10790, file: !3, line: 2534, type: !620)
!10798 = !DILocation(line: 2534, column: 10, scope: !10790)
!10799 = !DILocation(line: 2536, column: 2, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 2536, column: 2)
!10801 = !DILocation(line: 2536, column: 2, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 2536, column: 2)
!10803 = !DILocalVariable(name: "eiter", scope: !10804, file: !3, line: 2537, type: !3253)
!10804 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 2536, column: 48)
!10805 = !DILocation(line: 2537, column: 10, scope: !10804)
!10806 = !DILocalVariable(name: "e_other", scope: !10804, file: !3, line: 2538, type: !681)
!10807 = !DILocation(line: 2538, column: 11, scope: !10804)
!10808 = !DILocation(line: 2540, column: 3, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 2540, column: 3)
!10810 = !DILocation(line: 2540, column: 3, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2540, column: 3)
!10812 = !DILocation(line: 2541, column: 9, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2541, column: 8)
!10814 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 2540, column: 55)
!10815 = !DILocation(line: 2541, column: 20, scope: !10813)
!10816 = !DILocation(line: 2541, column: 17, scope: !10813)
!10817 = !DILocation(line: 2541, column: 23, scope: !10813)
!10818 = !DILocation(line: 2541, column: 26, scope: !10813)
!10819 = !DILocation(line: 2541, column: 8, scope: !10814)
!10820 = !DILocation(line: 2542, column: 5, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2541, column: 70)
!10822 = !DILocation(line: 2544, column: 3, scope: !10814)
!10823 = distinct !{!10823, !10808, !10824}
!10824 = !DILocation(line: 2544, column: 3, scope: !10809)
!10825 = !DILocation(line: 2545, column: 2, scope: !10804)
!10826 = distinct !{!10826, !10799, !10827}
!10827 = !DILocation(line: 2545, column: 2, scope: !10800)
!10828 = !DILocation(line: 2546, column: 2, scope: !10790)
!10829 = !DILocation(line: 2547, column: 1, scope: !10790)
!10830 = distinct !DISubprogram(name: "_bmo_elem_flag_enable", scope: !10420, file: !10420, line: 51, type: !10831, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10831 = !DISubroutineType(types: !10832)
!10832 = !{null, !739, !10423, !6453}
!10833 = !DILocalVariable(name: "bm", arg: 1, scope: !10830, file: !10420, line: 51, type: !739)
!10834 = !DILocation(line: 51, column: 46, scope: !10830)
!10835 = !DILocalVariable(name: "oflags", arg: 2, scope: !10830, file: !10420, line: 51, type: !10423)
!10836 = !DILocation(line: 51, column: 63, scope: !10830)
!10837 = !DILocalVariable(name: "oflag", arg: 3, scope: !10830, file: !10420, line: 51, type: !6453)
!10838 = !DILocation(line: 51, column: 83, scope: !10830)
!10839 = !DILocation(line: 53, column: 34, scope: !10830)
!10840 = !DILocation(line: 53, column: 2, scope: !10830)
!10841 = !DILocation(line: 53, column: 9, scope: !10830)
!10842 = !DILocation(line: 53, column: 13, scope: !10830)
!10843 = !DILocation(line: 53, column: 24, scope: !10830)
!10844 = !DILocation(line: 53, column: 29, scope: !10830)
!10845 = !DILocation(line: 53, column: 31, scope: !10830)
!10846 = !DILocation(line: 54, column: 1, scope: !10830)
!10847 = distinct !DISubprogram(name: "BM_edge_is_manifold", scope: !10265, file: !10265, line: 86, type: !10266, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10848 = !DILocalVariable(name: "e", arg: 1, scope: !10847, file: !10265, line: 86, type: !10268)
!10849 = !DILocation(line: 86, column: 51, scope: !10847)
!10850 = !DILocalVariable(name: "l", scope: !10847, file: !10265, line: 88, type: !10273)
!10851 = !DILocation(line: 88, column: 16, scope: !10847)
!10852 = !DILocation(line: 88, column: 20, scope: !10847)
!10853 = !DILocation(line: 88, column: 23, scope: !10847)
!10854 = !DILocation(line: 89, column: 10, scope: !10847)
!10855 = !DILocation(line: 89, column: 12, scope: !10847)
!10856 = !DILocation(line: 89, column: 16, scope: !10847)
!10857 = !DILocation(line: 89, column: 19, scope: !10847)
!10858 = !DILocation(line: 89, column: 34, scope: !10847)
!10859 = !DILocation(line: 89, column: 31, scope: !10847)
!10860 = !DILocation(line: 89, column: 37, scope: !10847)
!10861 = !DILocation(line: 90, column: 16, scope: !10847)
!10862 = !DILocation(line: 90, column: 19, scope: !10847)
!10863 = !DILocation(line: 90, column: 32, scope: !10847)
!10864 = !DILocation(line: 90, column: 47, scope: !10847)
!10865 = !DILocation(line: 90, column: 44, scope: !10847)
!10866 = !DILocation(line: 0, scope: !10847)
!10867 = !DILocation(line: 89, column: 9, scope: !10847)
!10868 = !DILocation(line: 89, column: 2, scope: !10847)
!10869 = distinct !DISubprogram(name: "BM_edge_is_contiguous", scope: !10265, file: !10265, line: 103, type: !10266, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10870 = !DILocalVariable(name: "e", arg: 1, scope: !10869, file: !10265, line: 103, type: !10268)
!10871 = !DILocation(line: 103, column: 53, scope: !10869)
!10872 = !DILocalVariable(name: "l", scope: !10869, file: !10265, line: 105, type: !10273)
!10873 = !DILocation(line: 105, column: 16, scope: !10869)
!10874 = !DILocation(line: 105, column: 20, scope: !10869)
!10875 = !DILocation(line: 105, column: 23, scope: !10869)
!10876 = !DILocalVariable(name: "l_other", scope: !10869, file: !10265, line: 106, type: !10273)
!10877 = !DILocation(line: 106, column: 16, scope: !10869)
!10878 = !DILocation(line: 107, column: 10, scope: !10869)
!10879 = !DILocation(line: 107, column: 12, scope: !10869)
!10880 = !DILocation(line: 107, column: 27, scope: !10869)
!10881 = !DILocation(line: 107, column: 30, scope: !10869)
!10882 = !DILocation(line: 107, column: 25, scope: !10869)
!10883 = !DILocation(line: 107, column: 46, scope: !10869)
!10884 = !DILocation(line: 107, column: 43, scope: !10869)
!10885 = !DILocation(line: 107, column: 49, scope: !10869)
!10886 = !DILocation(line: 108, column: 16, scope: !10869)
!10887 = !DILocation(line: 108, column: 25, scope: !10869)
!10888 = !DILocation(line: 108, column: 40, scope: !10869)
!10889 = !DILocation(line: 108, column: 37, scope: !10869)
!10890 = !DILocation(line: 108, column: 43, scope: !10869)
!10891 = !DILocation(line: 109, column: 16, scope: !10869)
!10892 = !DILocation(line: 109, column: 25, scope: !10869)
!10893 = !DILocation(line: 109, column: 30, scope: !10869)
!10894 = !DILocation(line: 109, column: 33, scope: !10869)
!10895 = !DILocation(line: 109, column: 27, scope: !10869)
!10896 = !DILocation(line: 0, scope: !10869)
!10897 = !DILocation(line: 107, column: 9, scope: !10869)
!10898 = !DILocation(line: 107, column: 2, scope: !10869)
!10899 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !10900, file: !10900, line: 88, type: !10901, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10900 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10901 = !DISubroutineType(types: !10902)
!10902 = !{!813, !10903}
!10903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10904, size: 64)
!10904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!10905 = !DILocalVariable(name: "lb", arg: 1, scope: !10899, file: !10900, line: 88, type: !10903)
!10906 = !DILocation(line: 88, column: 62, scope: !10899)
!10907 = !DILocation(line: 88, column: 76, scope: !10899)
!10908 = !DILocation(line: 88, column: 80, scope: !10899)
!10909 = !DILocation(line: 88, column: 86, scope: !10899)
!10910 = !DILocation(line: 88, column: 75, scope: !10899)
!10911 = !DILocation(line: 88, column: 68, scope: !10899)
!10912 = distinct !DISubprogram(name: "loop_find_regions", scope: !3, file: !3, line: 3380, type: !10913, scopeLine: 3381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!10913 = !DISubroutineType(types: !10914)
!10914 = !{!319, !2675, !3057}
!10915 = !DILocalVariable(name: "em", arg: 1, scope: !10912, file: !3, line: 3380, type: !2675)
!10916 = !DILocation(line: 3380, column: 42, scope: !10912)
!10917 = !DILocalVariable(name: "selbigger", arg: 2, scope: !10912, file: !3, line: 3380, type: !3057)
!10918 = !DILocation(line: 3380, column: 57, scope: !10912)
!10919 = !DILocalVariable(name: "visit_face_set", scope: !10912, file: !3, line: 3382, type: !10920)
!10920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10921, size: 64)
!10921 = !DIDerivedType(tag: DW_TAG_typedef, name: "GSet", file: !730, line: 176, baseType: !7230)
!10922 = !DILocation(line: 3382, column: 8, scope: !10912)
!10923 = !DILocalVariable(name: "iter", scope: !10912, file: !3, line: 3383, type: !3253)
!10924 = !DILocation(line: 3383, column: 9, scope: !10912)
!10925 = !DILocalVariable(name: "edges_len", scope: !10912, file: !3, line: 3384, type: !3570)
!10926 = !DILocation(line: 3384, column: 12, scope: !10912)
!10927 = !DILocation(line: 3384, column: 24, scope: !10912)
!10928 = !DILocation(line: 3384, column: 28, scope: !10912)
!10929 = !DILocation(line: 3384, column: 32, scope: !10912)
!10930 = !DILocalVariable(name: "e", scope: !10912, file: !3, line: 3385, type: !681)
!10931 = !DILocation(line: 3385, column: 10, scope: !10912)
!10932 = !DILocalVariable(name: "edges", scope: !10912, file: !3, line: 3385, type: !680)
!10933 = !DILocation(line: 3385, column: 15, scope: !10912)
!10934 = !DILocalVariable(name: "count", scope: !10912, file: !3, line: 3386, type: !319)
!10935 = !DILocation(line: 3386, column: 6, scope: !10912)
!10936 = !DILocalVariable(name: "i", scope: !10912, file: !3, line: 3386, type: !319)
!10937 = !DILocation(line: 3386, column: 17, scope: !10912)
!10938 = !DILocation(line: 3388, column: 49, scope: !10912)
!10939 = !DILocation(line: 3388, column: 19, scope: !10912)
!10940 = !DILocation(line: 3388, column: 17, scope: !10912)
!10941 = !DILocation(line: 3389, column: 10, scope: !10912)
!10942 = !DILocation(line: 3389, column: 39, scope: !10912)
!10943 = !DILocation(line: 3389, column: 37, scope: !10912)
!10944 = !DILocation(line: 3389, column: 8, scope: !10912)
!10945 = !DILocation(line: 3391, column: 4, scope: !10912)
!10946 = !DILocation(line: 3392, column: 2, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 3392, column: 2)
!10948 = !DILocation(line: 3392, column: 2, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 3392, column: 2)
!10950 = !DILocation(line: 3393, column: 7, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 3393, column: 7)
!10952 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 3392, column: 52)
!10953 = !DILocation(line: 3393, column: 7, scope: !10952)
!10954 = !DILocation(line: 3394, column: 17, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 3393, column: 45)
!10956 = !DILocation(line: 3394, column: 4, scope: !10955)
!10957 = !DILocation(line: 3394, column: 11, scope: !10955)
!10958 = !DILocation(line: 3394, column: 15, scope: !10955)
!10959 = !DILocation(line: 3395, column: 4, scope: !10955)
!10960 = !DILocation(line: 3396, column: 3, scope: !10955)
!10961 = !DILocation(line: 3398, column: 4, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 3397, column: 8)
!10963 = !DILocation(line: 3400, column: 2, scope: !10952)
!10964 = distinct !{!10964, !10946, !10965}
!10965 = !DILocation(line: 3400, column: 2, scope: !10947)
!10966 = !DILocation(line: 3403, column: 8, scope: !10912)
!10967 = !DILocation(line: 3403, column: 15, scope: !10912)
!10968 = !DILocation(line: 3403, column: 2, scope: !10912)
!10969 = !DILocation(line: 3405, column: 9, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 3405, column: 2)
!10971 = !DILocation(line: 3405, column: 7, scope: !10970)
!10972 = !DILocation(line: 3405, column: 14, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 3405, column: 2)
!10974 = !DILocation(line: 3405, column: 18, scope: !10973)
!10975 = !DILocation(line: 3405, column: 16, scope: !10973)
!10976 = !DILocation(line: 3405, column: 2, scope: !10970)
!10977 = !DILocalVariable(name: "liter", scope: !10978, file: !3, line: 3406, type: !3253)
!10978 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 3405, column: 34)
!10979 = !DILocation(line: 3406, column: 10, scope: !10978)
!10980 = !DILocalVariable(name: "l", scope: !10978, file: !3, line: 3407, type: !663)
!10981 = !DILocation(line: 3407, column: 11, scope: !10978)
!10982 = !DILocalVariable(name: "region", scope: !10978, file: !3, line: 3408, type: !684)
!10983 = !DILocation(line: 3408, column: 12, scope: !10978)
!10984 = !DILocalVariable(name: "region_out", scope: !10978, file: !3, line: 3408, type: !684)
!10985 = !DILocation(line: 3408, column: 29, scope: !10978)
!10986 = !DILocalVariable(name: "c", scope: !10978, file: !3, line: 3409, type: !319)
!10987 = !DILocation(line: 3409, column: 7, scope: !10978)
!10988 = !DILocalVariable(name: "tot", scope: !10978, file: !3, line: 3409, type: !319)
!10989 = !DILocation(line: 3409, column: 10, scope: !10978)
!10990 = !DILocation(line: 3411, column: 7, scope: !10978)
!10991 = !DILocation(line: 3411, column: 13, scope: !10978)
!10992 = !DILocation(line: 3411, column: 5, scope: !10978)
!10993 = !DILocation(line: 3413, column: 8, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 3413, column: 7)
!10995 = !DILocation(line: 3413, column: 7, scope: !10978)
!10996 = !DILocation(line: 3414, column: 4, scope: !10994)
!10997 = !DILocation(line: 3416, column: 3, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 3416, column: 3)
!10999 = !DILocation(line: 3416, column: 3, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 3416, column: 3)
!11001 = !DILocation(line: 3417, column: 24, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 3417, column: 8)
!11003 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 3416, column: 49)
!11004 = !DILocation(line: 3417, column: 40, scope: !11002)
!11005 = !DILocation(line: 3417, column: 43, scope: !11002)
!11006 = !DILocation(line: 3417, column: 8, scope: !11002)
!11007 = !DILocation(line: 3417, column: 8, scope: !11003)
!11008 = !DILocation(line: 3418, column: 5, scope: !11002)
!11009 = !DILocation(line: 3420, column: 25, scope: !11003)
!11010 = !DILocation(line: 3420, column: 44, scope: !11003)
!11011 = !DILocation(line: 3420, column: 8, scope: !11003)
!11012 = !DILocation(line: 3420, column: 6, scope: !11003)
!11013 = !DILocation(line: 3422, column: 9, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 3422, column: 8)
!11015 = !DILocation(line: 3422, column: 16, scope: !11014)
!11016 = !DILocation(line: 3422, column: 20, scope: !11014)
!11017 = !DILocation(line: 3422, column: 8, scope: !11003)
!11018 = !DILocation(line: 3422, column: 32, scope: !11014)
!11019 = !DILocation(line: 3422, column: 37, scope: !11014)
!11020 = !DILocation(line: 3422, column: 34, scope: !11014)
!11021 = !DILocation(line: 3422, column: 43, scope: !11014)
!11022 = !DILocation(line: 3422, column: 47, scope: !11014)
!11023 = !DILocation(line: 3422, column: 45, scope: !11014)
!11024 = !DILocation(line: 3424, column: 11, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 3422, column: 53)
!11026 = !DILocation(line: 3424, column: 9, scope: !11025)
!11027 = !DILocation(line: 3425, column: 9, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 3425, column: 9)
!11029 = !DILocation(line: 3425, column: 9, scope: !11025)
!11030 = !DILocation(line: 3427, column: 6, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 3425, column: 17)
!11032 = !DILocation(line: 3427, column: 16, scope: !11031)
!11033 = !DILocation(line: 3428, column: 5, scope: !11031)
!11034 = !DILocation(line: 3430, column: 14, scope: !11025)
!11035 = !DILocation(line: 3430, column: 12, scope: !11025)
!11036 = !DILocation(line: 3431, column: 4, scope: !11025)
!11037 = !DILocation(line: 3434, column: 5, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 3432, column: 9)
!11039 = !DILocation(line: 3434, column: 15, scope: !11038)
!11040 = !DILocation(line: 3436, column: 3, scope: !11003)
!11041 = distinct !{!11041, !10997, !11042}
!11042 = !DILocation(line: 3436, column: 3, scope: !10998)
!11043 = !DILocation(line: 3438, column: 7, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 3438, column: 7)
!11045 = !DILocation(line: 3438, column: 7, scope: !10978)
!11046 = !DILocalVariable(name: "j", scope: !11047, file: !3, line: 3439, type: !319)
!11047 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 3438, column: 15)
!11048 = !DILocation(line: 3439, column: 8, scope: !11047)
!11049 = !DILocation(line: 3441, column: 11, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11047, file: !3, line: 3441, column: 4)
!11051 = !DILocation(line: 3441, column: 9, scope: !11050)
!11052 = !DILocation(line: 3441, column: 16, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 3441, column: 4)
!11054 = !DILocation(line: 3441, column: 20, scope: !11053)
!11055 = !DILocation(line: 3441, column: 18, scope: !11053)
!11056 = !DILocation(line: 3441, column: 4, scope: !11050)
!11057 = !DILocation(line: 3442, column: 5, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 3441, column: 30)
!11059 = !DILocation(line: 3443, column: 5, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 3443, column: 5)
!11061 = !DILocation(line: 3443, column: 5, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 3443, column: 5)
!11063 = !DILocation(line: 3444, column: 6, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11062, file: !3, line: 3443, column: 59)
!11065 = !DILocation(line: 3445, column: 5, scope: !11064)
!11066 = distinct !{!11066, !11059, !11067}
!11067 = !DILocation(line: 3445, column: 5, scope: !11060)
!11068 = !DILocation(line: 3446, column: 4, scope: !11058)
!11069 = !DILocation(line: 3441, column: 26, scope: !11053)
!11070 = !DILocation(line: 3441, column: 4, scope: !11053)
!11071 = distinct !{!11071, !11056, !11072}
!11072 = !DILocation(line: 3446, column: 4, scope: !11050)
!11073 = !DILocation(line: 3448, column: 13, scope: !11047)
!11074 = !DILocation(line: 3448, column: 10, scope: !11047)
!11075 = !DILocation(line: 3450, column: 4, scope: !11047)
!11076 = !DILocation(line: 3450, column: 14, scope: !11047)
!11077 = !DILocation(line: 3451, column: 3, scope: !11047)
!11078 = !DILocation(line: 3452, column: 2, scope: !10978)
!11079 = !DILocation(line: 3405, column: 30, scope: !10973)
!11080 = !DILocation(line: 3405, column: 2, scope: !10973)
!11081 = distinct !{!11081, !10976, !11082}
!11082 = !DILocation(line: 3452, column: 2, scope: !10970)
!11083 = !DILocation(line: 3454, column: 2, scope: !10912)
!11084 = !DILocation(line: 3454, column: 12, scope: !10912)
!11085 = !DILocation(line: 3455, column: 16, scope: !10912)
!11086 = !DILocation(line: 3455, column: 2, scope: !10912)
!11087 = !DILocation(line: 3457, column: 9, scope: !10912)
!11088 = !DILocation(line: 3457, column: 2, scope: !10912)
!11089 = distinct !DISubprogram(name: "verg_radial", scope: !3, file: !3, line: 3360, type: !11090, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{!319, !11092, !11092}
!11092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11093, size: 64)
!11093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11094 = !DILocalVariable(name: "va", arg: 1, scope: !11089, file: !3, line: 3360, type: !11092)
!11095 = !DILocation(line: 3360, column: 36, scope: !11089)
!11096 = !DILocalVariable(name: "vb", arg: 2, scope: !11089, file: !3, line: 3360, type: !11092)
!11097 = !DILocation(line: 3360, column: 52, scope: !11089)
!11098 = !DILocalVariable(name: "e_a", scope: !11089, file: !3, line: 3362, type: !681)
!11099 = !DILocation(line: 3362, column: 10, scope: !11089)
!11100 = !DILocation(line: 3362, column: 29, scope: !11089)
!11101 = !DILocation(line: 3362, column: 18, scope: !11089)
!11102 = !DILocation(line: 3362, column: 16, scope: !11089)
!11103 = !DILocalVariable(name: "e_b", scope: !11089, file: !3, line: 3363, type: !681)
!11104 = !DILocation(line: 3363, column: 10, scope: !11089)
!11105 = !DILocation(line: 3363, column: 29, scope: !11089)
!11106 = !DILocation(line: 3363, column: 18, scope: !11089)
!11107 = !DILocation(line: 3363, column: 16, scope: !11089)
!11108 = !DILocalVariable(name: "a", scope: !11089, file: !3, line: 3365, type: !319)
!11109 = !DILocation(line: 3365, column: 6, scope: !11089)
!11110 = !DILocalVariable(name: "b", scope: !11089, file: !3, line: 3365, type: !319)
!11111 = !DILocation(line: 3365, column: 9, scope: !11089)
!11112 = !DILocation(line: 3366, column: 25, scope: !11089)
!11113 = !DILocation(line: 3366, column: 6, scope: !11089)
!11114 = !DILocation(line: 3366, column: 4, scope: !11089)
!11115 = !DILocation(line: 3367, column: 25, scope: !11089)
!11116 = !DILocation(line: 3367, column: 6, scope: !11089)
!11117 = !DILocation(line: 3367, column: 4, scope: !11089)
!11118 = !DILocation(line: 3369, column: 6, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 3369, column: 6)
!11120 = !DILocation(line: 3369, column: 10, scope: !11119)
!11121 = !DILocation(line: 3369, column: 8, scope: !11119)
!11122 = !DILocation(line: 3369, column: 6, scope: !11089)
!11123 = !DILocation(line: 3369, column: 13, scope: !11119)
!11124 = !DILocation(line: 3370, column: 6, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 3370, column: 6)
!11126 = !DILocation(line: 3370, column: 10, scope: !11125)
!11127 = !DILocation(line: 3370, column: 8, scope: !11125)
!11128 = !DILocation(line: 3370, column: 6, scope: !11089)
!11129 = !DILocation(line: 3370, column: 13, scope: !11125)
!11130 = !DILocation(line: 3371, column: 2, scope: !11089)
!11131 = !DILocation(line: 3372, column: 1, scope: !11089)
!11132 = distinct !DISubprogram(name: "loop_find_region", scope: !3, file: !3, line: 3317, type: !11133, scopeLine: 3319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3058)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!319, !663, !319, !10920, !11135}
!11135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!11136 = !DILocalVariable(name: "l", arg: 1, scope: !11132, file: !3, line: 3317, type: !663)
!11137 = !DILocation(line: 3317, column: 37, scope: !11132)
!11138 = !DILocalVariable(name: "flag", arg: 2, scope: !11132, file: !3, line: 3317, type: !319)
!11139 = !DILocation(line: 3317, column: 44, scope: !11132)
!11140 = !DILocalVariable(name: "visit_face_set", arg: 3, scope: !11132, file: !3, line: 3318, type: !10920)
!11141 = !DILocation(line: 3318, column: 35, scope: !11132)
!11142 = !DILocalVariable(name: "region_out", arg: 4, scope: !11132, file: !3, line: 3318, type: !11135)
!11143 = !DILocation(line: 3318, column: 61, scope: !11132)
!11144 = !DILocalVariable(name: "region", scope: !11132, file: !3, line: 3320, type: !684)
!11145 = !DILocation(line: 3320, column: 11, scope: !11132)
!11146 = !DILocalVariable(name: "stack", scope: !11132, file: !3, line: 3321, type: !684)
!11147 = !DILocation(line: 3321, column: 11, scope: !11132)
!11148 = !DILocalVariable(name: "_region_count", scope: !11132, file: !3, line: 3322, type: !319)
!11149 = !DILocation(line: 3322, column: 2, scope: !11132)
!11150 = !DILocalVariable(name: "_region_static", scope: !11132, file: !3, line: 3322, type: !288)
!11151 = !DILocalVariable(name: "_stack_count", scope: !11132, file: !3, line: 3323, type: !319)
!11152 = !DILocation(line: 3323, column: 2, scope: !11132)
!11153 = !DILocalVariable(name: "_stack_static", scope: !11132, file: !3, line: 3323, type: !288)
!11154 = !DILocalVariable(name: "f", scope: !11132, file: !3, line: 3324, type: !685)
!11155 = !DILocation(line: 3324, column: 10, scope: !11132)
!11156 = !DILocation(line: 3326, column: 2, scope: !11132)
!11157 = !DILocation(line: 3327, column: 18, scope: !11132)
!11158 = !DILocation(line: 3327, column: 34, scope: !11132)
!11159 = !DILocation(line: 3327, column: 37, scope: !11132)
!11160 = !DILocation(line: 3327, column: 2, scope: !11132)
!11161 = !DILocation(line: 3329, column: 2, scope: !11132)
!11162 = !DILocation(line: 3329, column: 9, scope: !11132)
!11163 = !DILocation(line: 3329, column: 32, scope: !11132)
!11164 = !DILocalVariable(name: "liter1", scope: !11165, file: !3, line: 3330, type: !3253)
!11165 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 3329, column: 37)
!11166 = !DILocation(line: 3330, column: 10, scope: !11165)
!11167 = !DILocalVariable(name: "liter2", scope: !11165, file: !3, line: 3330, type: !3253)
!11168 = !DILocation(line: 3330, column: 18, scope: !11165)
!11169 = !DILocalVariable(name: "l1", scope: !11165, file: !3, line: 3331, type: !663)
!11170 = !DILocation(line: 3331, column: 11, scope: !11165)
!11171 = !DILocalVariable(name: "l2", scope: !11165, file: !3, line: 3331, type: !663)
!11172 = !DILocation(line: 3331, column: 16, scope: !11165)
!11173 = !DILocation(line: 3333, column: 7, scope: !11165)
!11174 = !DILocation(line: 3333, column: 5, scope: !11165)
!11175 = !DILocation(line: 3334, column: 3, scope: !11165)
!11176 = !DILocation(line: 3336, column: 3, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11165, file: !3, line: 3336, column: 3)
!11178 = !DILocation(line: 3336, column: 3, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 3336, column: 3)
!11180 = !DILocation(line: 3337, column: 8, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 3337, column: 8)
!11182 = distinct !DILexicalBlock(scope: !11179, file: !3, line: 3336, column: 51)
!11183 = !DILocation(line: 3337, column: 8, scope: !11182)
!11184 = !DILocation(line: 3338, column: 5, scope: !11181)
!11185 = !DILocation(line: 3340, column: 4, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 3340, column: 4)
!11187 = !DILocation(line: 3340, column: 4, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 3340, column: 4)
!11189 = !DILocation(line: 3343, column: 9, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 3343, column: 9)
!11191 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 3340, column: 56)
!11192 = !DILocation(line: 3343, column: 9, scope: !11191)
!11193 = !DILocation(line: 3344, column: 6, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 3343, column: 48)
!11195 = !DILocation(line: 3347, column: 22, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 3347, column: 9)
!11197 = !DILocation(line: 3347, column: 38, scope: !11196)
!11198 = !DILocation(line: 3347, column: 42, scope: !11196)
!11199 = !DILocation(line: 3347, column: 9, scope: !11196)
!11200 = !DILocation(line: 3347, column: 9, scope: !11191)
!11201 = !DILocation(line: 3348, column: 6, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 3347, column: 46)
!11203 = !DILocation(line: 3349, column: 5, scope: !11202)
!11204 = !DILocation(line: 3350, column: 4, scope: !11191)
!11205 = distinct !{!11205, !11185, !11206}
!11206 = !DILocation(line: 3350, column: 4, scope: !11186)
!11207 = !DILocation(line: 3351, column: 3, scope: !11182)
!11208 = distinct !{!11208, !11176, !11209}
!11209 = !DILocation(line: 3351, column: 3, scope: !11177)
!11210 = distinct !{!11210, !11161, !11211}
!11211 = !DILocation(line: 3352, column: 2, scope: !11132)
!11212 = !DILocation(line: 3354, column: 2, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 3354, column: 2)
!11214 = !DILocation(line: 3354, column: 2, scope: !11132)
!11215 = !DILocation(line: 3354, column: 2, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 3354, column: 2)
!11217 = !DILocation(line: 3356, column: 16, scope: !11132)
!11218 = !DILocation(line: 3356, column: 3, scope: !11132)
!11219 = !DILocation(line: 3356, column: 14, scope: !11132)
!11220 = !DILocation(line: 3357, column: 9, scope: !11132)
!11221 = !DILocation(line: 3357, column: 2, scope: !11132)
