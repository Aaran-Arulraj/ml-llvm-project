; ModuleID = 'simulator/cmodule.cc'
source_filename = "simulator/cmodule.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%class.cModule = type { %class.cComponent, i8*, i32, %class.cModule*, %class.cModule*, %class.cModule*, %class.cModule*, i32, %"struct.cGate::Desc"*, i32, i32 }
%class.cComponent = type { %class.cDefaultList, %class.cComponentType*, i16, i32*, i16, i16, %class.cPar*, %class.cDisplayString* }
%class.cDefaultList = type { %class.cNoncopyableOwnedObject.base, %class.cOwnedObject**, i32, i32 }
%class.cNoncopyableOwnedObject.base = type { %class.cOwnedObject.base }
%class.cOwnedObject.base = type <{ %class.cNamedObject.base, [4 x i8], %class.cObject*, i32 }>
%class.cNamedObject.base = type <{ %class.cObject, i8*, i16, i16 }>
%class.cObject = type { i32 (...)** }
%class.cOwnedObject = type <{ %class.cNamedObject.base, [4 x i8], %class.cObject*, i32, [4 x i8] }>
%class.cComponentType = type { %class.cNoncopyableOwnedObject.base, %"class.std::__cxx11::basic_string", %"class.std::map", %"class.std::set" }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, cParImpl *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, cParImpl *> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, cParImpl *> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, cParImpl *>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, cParImpl *> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, cParImpl *> > >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::set" = type { %"class.std::_Rb_tree.3" }
%"class.std::_Rb_tree.3" = type { %"struct.std::_Rb_tree<cParImpl *, cParImpl *, std::_Identity<cParImpl *>, cComponentType::Less, std::allocator<cParImpl *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<cParImpl *, cParImpl *, std::_Identity<cParImpl *>, cComponentType::Less, std::allocator<cParImpl *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare.7", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare.7" = type { %"struct.cComponentType::Less" }
%"struct.cComponentType::Less" = type { i8 }
%class.cPar = type { %class.cObject, %class.cComponent*, %class.cParImpl* }
%class.cParImpl = type opaque
%class.cDisplayString = type opaque
%"struct.cGate::Desc" = type { %class.cModule*, %"struct.cGate::Name"*, i32, %union.anon.8, %union.anon.9 }
%"struct.cGate::Name" = type <{ %class.opp_string, %class.opp_string, %class.opp_string, i32, [4 x i8] }>
%class.opp_string = type { i8* }
%union.anon.8 = type { %class.cGate* }
%class.cGate = type { %class.cObject, %"struct.cGate::Desc"*, i32, %class.cChannel*, %class.cGate*, %class.cGate* }
%class.cChannel = type <{ %class.cComponent, %class.cGate*, i32, [4 x i8] }>
%union.anon.9 = type { %class.cGate* }
%"class.std::set.23" = type { %"class.std::_Rb_tree.24" }
%"class.std::_Rb_tree.24" = type { %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare.28" = type { %"struct.std::less.29" }
%"struct.std::less.29" = type { i8 }
%class.cEnvir = type { i32 (...)**, i8, i8, i8, %"class.std::basic_ostream" }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.cSimulation = type { %class.cNoncopyableOwnedObject.base, i32, i32, %class.cModule**, i32, %class.cEnvir*, %class.cModule*, %class.cSimpleModule*, %class.cComponent*, i32, %class.cModuleType*, %class.cScheduler*, %class.SimTime, i64, %class.cMessage*, %class.cException*, %class.cHasher*, %class.cMessageHeap }
%class.cSimpleModule = type { %class.cModule, %class.cMessage*, %class.cCoroutine* }
%class.cCoroutine = type opaque
%class.cModuleType = type { %class.cComponentType }
%class.cScheduler = type opaque
%class.SimTime = type { i64 }
%class.cMessage = type { %class.cOwnedObject.base, i16, i16, i16, %class.cArray*, %class.cObject*, i8*, i32, i32, i32, i32, %class.SimTime, %class.SimTime, %class.SimTime, %class.SimTime, i32, i64, i64, i64, i64 }
%class.cArray = type { %class.cOwnedObject.base, %class.cObject**, i32, i32, i32, i32 }
%class.cException = type <{ %"class.std::exception", i32, [4 x i8], %"class.std::__cxx11::basic_string", i8, [7 x i8], %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i32, [4 x i8] }>
%"class.std::exception" = type { i32 (...)** }
%class.cHasher = type opaque
%class.cMessageHeap = type { %class.cOwnedObject.base, %class.cMessage**, i32, i32, i64 }
%"class.cModule::SubmoduleIterator" = type { %class.cModule* }
%"class.cModule::GateIterator" = type <{ %class.cModule*, i32, i8, [3 x i8], i32, [4 x i8] }>
%class.cRuntimeError = type { %class.cException.base, [4 x i8] }
%class.cException.base = type <{ %"class.std::exception", i32, [4 x i8], %"class.std::__cxx11::basic_string", i8, [7 x i8], %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string", i32 }>
%class.cVisitor = type { i32 (...)** }
%class.cNamedObject = type <{ %class.cObject, i8*, i16, i16, [4 x i8] }>
%class.cProperties = type { %class.cObject, i8, i32, %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<cProperty *, std::allocator<cProperty *> >::_Vector_impl" }
%"struct.std::_Vector_base<cProperty *, std::allocator<cProperty *> >::_Vector_impl" = type { %"struct.std::_Vector_base<cProperty *, std::allocator<cProperty *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<cProperty *, std::allocator<cProperty *> >::_Vector_impl_data" = type { %class.cProperty**, %class.cProperty**, %class.cProperty** }
%class.cProperty = type { %class.cNamedObject.base, %class.cProperties*, i8*, i8*, %"class.std::vector.13", %"class.std::vector.18" }
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl" }
%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl" = type { %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data" = type { i8**, i8**, i8** }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<std::vector<const char *, std::allocator<const char *> >, std::allocator<std::vector<const char *, std::allocator<const char *> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<const char *, std::allocator<const char *> >, std::allocator<std::vector<const char *, std::allocator<const char *> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<const char *, std::allocator<const char *> >, std::allocator<std::vector<const char *, std::allocator<const char *> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<const char *, std::allocator<const char *> >, std::allocator<std::vector<const char *, std::allocator<const char *> > > >::_Vector_impl_data" = type { %"class.std::vector.13"*, %"class.std::vector.13"*, %"class.std::vector.13"* }
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.36" = type <{ %"struct.std::_Rb_tree_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [32 x i8] }
%"class.std::allocator.15" = type { i8 }
%struct.less_gateConnectedInside = type { i8 }
%struct.less_gateConnectedOutside = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %struct.less_gateConnectedInside }
%"struct.__gnu_cxx::__ops::_Iter_comp_val.43" = type { %struct.less_gateConnectedOutside }
%struct.less_gatePairConnectedInside = type { %class.cGate** }
%struct.less_gatePairConnectedOutside = type { %class.cGate** }
%"struct.__gnu_cxx::__ops::_Iter_comp_val.44" = type { %struct.less_gatePairConnectedInside }
%"struct.__gnu_cxx::__ops::_Iter_comp_val.45" = type { %struct.less_gatePairConnectedOutside }
%class.cContextSwitcher = type { %class.cComponent* }
%class.cContextTypeSwitcher = type { i32 }
%"class.cModule::ChannelIterator" = type <{ %"class.std::vector.31", i32, [4 x i8] }>
%"class.std::vector.31" = type { %"struct.std::_Vector_base.32" }
%"struct.std::_Vector_base.32" = type { %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl" }
%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl" = type { %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data" = type { %class.cChannel**, %class.cChannel**, %class.cChannel** }
%class.cMethodCallContextSwitcher = type { %class.cContextSwitcher }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.cClassDescriptor = type opaque
%class.cNoncopyableOwnedObject = type { %class.cOwnedObject.base, [4 x i8] }
%class.cCommBuffer = type opaque
%"class.std::allocator" = type { i8 }
%"class.std::allocator.25" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.std::allocator.33" = type { i8 }
%"class.__gnu_cxx::new_allocator.34" = type { i8 }
%"struct.std::_Identity" = type { i8 }
%"struct.std::pair.40" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node" = type { %"class.std::_Rb_tree.24"* }
%"class.std::__pair_base" = type { i8 }
%"class.std::__pair_base.37" = type { i8 }
%"class.std::__pair_base.41" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { i8** }
%"struct.std::integral_constant" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.46" = type { %class.cChannel** }

$_ZN11cSimulation14getActiveEnvirEv = comdat any

$_ZN7cModule17SubmoduleIteratorC2EPKS_ = comdat any

$_ZNK7cModule17SubmoduleIterator3endEv = comdat any

$_ZNK7cModule17SubmoduleIteratorclEv = comdat any

$_ZN11cSimulation19getActiveSimulationEv = comdat any

$_ZNK11cSimulation17getActivityModuleEv = comdat any

$_ZN13cRuntimeErrorD2Ev = comdat any

$_ZN7cModule17SubmoduleIteratorppEi = comdat any

$_ZN7cModule12GateIteratorC2EPKS_ = comdat any

$_ZNK7cModule12GateIteratorclEv = comdat any

$_ZNK5cGate11getNextGateEv = comdat any

$_ZNK5cGate15getPreviousGateEv = comdat any

$__clang_call_terminate = comdat any

$_ZNK7cModule8isVectorEv = comdat any

$_Z10opp_strlenPKc = comdat any

$_Z15opp_appendindexPcj = comdat any

$_ZNK7cModule8getIndexEv = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ = comdat any

$_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEC2Ev = comdat any

$_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EED2Ev = comdat any

$_ZNK5cGate4Desc8isVectorEv = comdat any

$_ZNK5cGate4Desc8gateSizeEv = comdat any

$_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5clearEv = comdat any

$_ZN5cGate4DescC2Ev = comdat any

$_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4findERKS1_ = comdat any

$_ZSteqRKSt23_Rb_tree_const_iteratorIN5cGate4NameEES4_ = comdat any

$_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE3endEv = comdat any

$_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertERKS1_ = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEEdeEv = comdat any

$_ZN5cGate4NameD2Ev = comdat any

$_ZNK10opp_string5c_strEv = comdat any

$_ZNK5cGate4Desc7getTypeEv = comdat any

$_ZNK5cGate4Desc7nameForENS_4TypeE = comdat any

$_ZN5cGate4Desc12setInputGateEPS_ = comdat any

$_ZN5cGate4Desc13setOutputGateEPS_ = comdat any

$_ZN5cGate4Desc11capacityForEi = comdat any

$_ZN5cGate4Desc12setInputGateEPS_i = comdat any

$_ZN5cGate4Desc13setOutputGateEPS_i = comdat any

$_ZNSt6vectorIPKcSaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_ = comdat any

$_ZNSt6vectorIPKcSaIS1_EED2Ev = comdat any

$_ZSt11lower_boundIPP5cGateS1_24less_gateConnectedInsideET_S4_S4_RKT0_T1_ = comdat any

$_ZSt11lower_boundIPP5cGateS1_25less_gateConnectedOutsideET_S4_S4_RKT0_T1_ = comdat any

$_ZSt11lower_boundIPP5cGateS1_28less_gatePairConnectedInsideET_S4_S4_RKT0_T1_ = comdat any

$_ZN28less_gatePairConnectedInsideC2EPP5cGate = comdat any

$_ZSt11lower_boundIPP5cGateS1_29less_gatePairConnectedOutsideET_S4_S4_RKT0_T1_ = comdat any

$_ZN29less_gatePairConnectedOutsideC2EPP5cGate = comdat any

$_ZNK5cGate8getIndexEv = comdat any

$_ZNK5cGate4sizeEv = comdat any

$_ZNK7cObject6isNameEPKc = comdat any

$_ZNK7cModule5getIdEv = comdat any

$_ZN10opp_stringC2EPKc = comdat any

$_ZN10opp_string6bufferEv = comdat any

$_ZN10opp_stringD2Ev = comdat any

$_ZNK7cModule13getModuleTypeEv = comdat any

$_ZNK7cModule17buildInsideCalledEv = comdat any

$_ZNK10cComponent19parametersFinalizedEv = comdat any

$_ZN12cNamedObject7setFlagEib = comdat any

$_ZNK11cSimulation14getContextTypeEv = comdat any

$_ZN7cModule15ChannelIteratorC2EPKS_ = comdat any

$_ZNK7cModule15ChannelIterator3endEv = comdat any

$_ZN7cModule15ChannelIteratorclEv = comdat any

$_ZN7cModule15ChannelIteratorppEi = comdat any

$_ZN7cModule15ChannelIteratorD2Ev = comdat any

$_ZNK10cComponent11initializedEv = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE5clearEv = comdat any

$_ZNK5cGate10getChannelEv = comdat any

$_ZNK5cGate7getTypeEv = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE9push_backEOS1_ = comdat any

$_ZNK12cNamedObject7getNameEv = comdat any

$_ZNK12cOwnedObject8getOwnerEv = comdat any

$_ZNK12cOwnedObject13isOwnedObjectEv = comdat any

$_ZN12cNamedObject14getNamePoolingEv = comdat any

$_ZNK12cDefaultList11isSoftOwnerEv = comdat any

$_ZN12cDefaultList17setPerformFinalGCEb = comdat any

$_ZN10cComponent10initializeEi = comdat any

$_ZNK10cComponent13numInitStagesEv = comdat any

$_ZNK7cModule8isModuleEv = comdat any

$_ZNK10cComponent12getNumParamsEv = comdat any

$_ZN7cModule13doBuildInsideEv = comdat any

$_ZNK7cModule13isPlaceholderEv = comdat any

$_ZN7cModule17SubmoduleIterator4initEPKS_ = comdat any

$_ZN10cExceptionD2Ev = comdat any

$_ZN10cExceptionD0Ev = comdat any

$_ZNK10cException4whatEv = comdat any

$_ZNK10cException3dupEv = comdat any

$_ZNK10cException12getErrorCodeEv = comdat any

$_ZN10cException10setMessageEPKc = comdat any

$_ZN10cException14prependMessageEPKc = comdat any

$_ZNK10cException10hasContextEv = comdat any

$_ZNK10cException19getContextClassNameEv = comdat any

$_ZNK10cException18getContextFullPathEv = comdat any

$_ZNK10cException11getModuleIDEv = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_ = comdat any

$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev = comdat any

$_ZNSt20_Rb_tree_key_compareISt4lessIN5cGate4NameEEEC2Ev = comdat any

$_ZNSt15_Rb_tree_headerC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev = comdat any

$_ZNSt15_Rb_tree_header8_M_resetEv = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE7destroyIS2_EEvRS4_PT_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7destroyIS3_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE10deallocateEPS4_m = comdat any

$_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIPKcEC2Ev = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPKcEC2Ev = comdat any

$_ZNK5cGate4Desc7indexOfEPKS_ = comdat any

$_ZNK5cGate13getVectorSizeEv = comdat any

$_Z10opp_strcmpPKcS0_ = comdat any

$_Z10opp_strdupPKc = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIP8cChannelEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8cChannelEC2Ev = comdat any

$_ZSt8_DestroyIPP8cChannelS1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPP8cChannelEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPP8cChannelEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIP8cChannelEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8cChannelE10deallocateEPS2_m = comdat any

$_ZNSaIP8cChannelED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8cChannelED2Ev = comdat any

$_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EEixEm = comdat any

$_ZNK5cGate4Desc9getTypeOfEPKS_ = comdat any

$_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPPKcEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPKcE10deallocateEPS2_m = comdat any

$_ZNSaIPKcED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPKcED2Ev = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4findERKS1_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2ERKSt17_Rb_tree_iteratorIS1_E = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_EPSt18_Rb_tree_node_baseRKS1_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv = comdat any

$_ZSteqRKSt17_Rb_tree_iteratorIN5cGate4NameEES4_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv = comdat any

$_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_ = comdat any

$_ZNKSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv = comdat any

$_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE16_M_insert_uniqueIRKS1_EESt4pairISt17_Rb_tree_iteratorIS1_EbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEC2IRSt17_Rb_tree_iteratorIS2_ERbLb1EEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeC2ERS7_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_M_insert_IRKS1_NS7_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS1_EPSt18_Rb_tree_node_baseSF_OT_RT0_ = comdat any

$_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEC2IS3_bLb1EEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIN5cGate4NameEERS1_Lb1EEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEmmEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIN5cGate4NameEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeclIRKS1_EEPSt13_Rb_tree_nodeIS1_EOT_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRKS1_EEEPSt13_Rb_tree_nodeIS1_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRKS1_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE11_M_max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZN5cGate4NameC2ERKS0_ = comdat any

$_ZN10opp_stringC2ERKS_ = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIPKcSaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPKcE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_ = comdat any

$_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIPKcSaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm = comdat any

$_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIPKcSaIS1_EE4sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPKcE8max_sizeEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPKcE11_M_max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPKcE8allocateEmPKv = comdat any

$_ZNSt6vectorIPKcSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE = comdat any

$_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E = comdat any

$_ZSt12__niter_baseIPPKcET_S3_ = comdat any

$_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEEET_S8_S8_RKT0_T1_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valI24less_gateConnectedInsideEENS0_14_Iter_comp_valIT_EES4_ = comdat any

$_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_ = comdat any

$_ZSt7advanceIPP5cGatelEvRT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEclIPP5cGateKS6_EEbT_RT0_ = comdat any

$_ZSt10__distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPP5cGateENSt15iterator_traitsIT_E17iterator_categoryERKS4_ = comdat any

$_ZSt9__advanceIPP5cGatelEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZN24less_gateConnectedInsideclEP5cGateS1_ = comdat any

$_ZSt4moveIR24less_gateConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEC2ES2_ = comdat any

$_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEEET_S8_S8_RKT0_T1_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valI25less_gateConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_ = comdat any

$_ZN25less_gateConnectedOutsideclEP5cGateS1_ = comdat any

$_ZSt4moveIR25less_gateConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEC2ES2_ = comdat any

$_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEEET_S8_S8_RKT0_T1_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valI28less_gatePairConnectedInsideEENS0_14_Iter_comp_valIT_EES4_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEclIPP5cGateKS6_EEbT_RT0_ = comdat any

$_ZN28less_gatePairConnectedInsideclEP5cGateS1_ = comdat any

$_ZSt4moveIR28less_gatePairConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEC2ES2_ = comdat any

$_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEEET_S8_S8_RKT0_T1_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valI29less_gatePairConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_ = comdat any

$_ZN29less_gatePairConnectedOutsideclEP5cGateS1_ = comdat any

$_ZSt4moveIR29less_gatePairConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEC2ES2_ = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRP8cChannelEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIP8cChannelEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8cChannelE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIP8cChannelSaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPP8cChannelSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIP8cChannelSaIS1_EE11_M_allocateEm = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIP8cChannelEE8max_sizeERKS2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP8cChannelE8max_sizeEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP8cChannelE11_M_max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIP8cChannelEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8cChannelE8allocateEmPKv = comdat any

$_ZNSt6vectorIP8cChannelSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE = comdat any

$_ZSt12__relocate_aIPP8cChannelS2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt14__relocate_a_1IP8cChannelS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E = comdat any

$_ZSt12__niter_baseIPP8cChannelET_S3_ = comdat any

$_ZTS13cRuntimeError = comdat any

$_ZTS10cException = comdat any

$_ZTI10cException = comdat any

$_ZTI13cRuntimeError = comdat any

$_ZTV10cException = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1, !dbg !0
@__dso_handle = external hidden global i8
@_ZN7cModule18lastmodulefullpathB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8, !dbg !28
@_ZN7cModule21lastmodulefullpathmodE = dso_local global %class.cModule* null, align 8, !dbg !2638
@_ZTV7cModule = dso_local unnamed_addr constant { [75 x i8*] } { [75 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7cModule to i8*), i8* bitcast (%class.cClassDescriptor* (%class.cObject*)* @_ZN7cObject13getDescriptorEv to i8*), i8* bitcast (void (%class.cDefaultList*, %class.cOwnedObject*)* @_ZN12cDefaultList18ownedObjectDeletedEP12cOwnedObject to i8*), i8* bitcast (void (%class.cDefaultList*, %class.cOwnedObject*, %class.cObject*)* @_ZN12cDefaultList14yieldOwnershipEP12cOwnedObjectP7cObject to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModuleD1Ev to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModuleD0Ev to i8*), i8* bitcast (i8* (%class.cObject*)* @_ZNK7cObject12getClassNameEv to i8*), i8* bitcast (i8* (%class.cNamedObject*)* @_ZNK12cNamedObject7getNameEv to i8*), i8* bitcast (i8* (%class.cModule*)* @_ZNK7cModule11getFullNameEv to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.cModule*)* @_ZNK7cModule11getFullPathB5cxx11Ev to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.cDefaultList*)* @_ZNK12cDefaultList4infoB5cxx11Ev to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.cObject*)* @_ZNK7cObject12detailedInfoB5cxx11Ev to i8*), i8* bitcast (%class.cNoncopyableOwnedObject* (%class.cNoncopyableOwnedObject*)* @_ZNK23cNoncopyableOwnedObject3dupEv to i8*), i8* bitcast (void (%class.cDefaultList*, %class.cOwnedObject*)* @_ZN12cDefaultList4takeEP12cOwnedObject to i8*), i8* bitcast (void (%class.cDefaultList*, %class.cOwnedObject*)* @_ZN12cDefaultList4dropEP12cOwnedObject to i8*), i8* bitcast (void (%class.cDefaultList*, %class.cCommBuffer*)* @_ZN12cDefaultList10parsimPackEP11cCommBuffer to i8*), i8* bitcast (void (%class.cDefaultList*, %class.cCommBuffer*)* @_ZN12cDefaultList12parsimUnpackEP11cCommBuffer to i8*), i8* bitcast (%class.cObject* (%class.cOwnedObject*)* @_ZNK12cOwnedObject8getOwnerEv to i8*), i8* bitcast (i1 (%class.cOwnedObject*)* @_ZNK12cOwnedObject13isOwnedObjectEv to i8*), i8* bitcast (void (%class.cModule*, %class.cVisitor*)* @_ZN7cModule12forEachChildEP8cVisitor to i8*), i8* bitcast (void (%class.cModule*, i8*)* @_ZN7cModule7setNameEPKc to i8*), i8* bitcast (void (%class.cNamedObject*, i1)* @_ZN12cNamedObject14setNamePoolingEb to i8*), i8* bitcast (i1 (%class.cNamedObject*)* @_ZN12cNamedObject14getNamePoolingEv to i8*), i8* bitcast (void (%class.cOwnedObject*)* @_ZN12cOwnedObject23removeFromOwnershipTreeEv to i8*), i8* bitcast (i1 (%class.cDefaultList*)* @_ZNK12cDefaultList11isSoftOwnerEv to i8*), i8* bitcast (void (%class.cDefaultList*, i1)* @_ZN12cDefaultList17setPerformFinalGCEb to i8*), i8* bitcast (void (%class.cComponent*, %class.cComponentType*)* @_ZN10cComponent16setComponentTypeEP14cComponentType to i8*), i8* bitcast (void (%class.cComponent*, %class.cParImpl*)* @_ZN10cComponent6addParEP8cParImpl to i8*), i8* bitcast (void (%class.cComponent*)* @_ZN10cComponent25recordParametersAsScalarsEv to i8*), i8* bitcast (void (%class.cComponent*, i32)* @_ZN10cComponent10initializeEi to i8*), i8* bitcast (i32 (%class.cComponent*)* @_ZNK10cComponent13numInitStagesEv to i8*), i8* bitcast (void (%class.cComponent*)* @_ZN10cComponent10initializeEv to i8*), i8* bitcast (void (%class.cComponent*)* @_ZN10cComponent6finishEv to i8*), i8* bitcast (void (%class.cComponent*, i8*)* @_ZN10cComponent21handleParameterChangeEPKc to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModule18finalizeParametersEv to i8*), i8* bitcast (%class.cProperties* (%class.cModule*)* @_ZNK7cModule13getPropertiesEv to i8*), i8* bitcast (i8* (%class.cComponent*)* @_ZNK10cComponent14getNedTypeNameEv to i8*), i8* bitcast (i1 (%class.cModule*)* @_ZNK7cModule8isModuleEv to i8*), i8* bitcast (%class.cModule* (%class.cModule*)* @_ZNK7cModule15getParentModuleEv to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModule14callInitializeEv to i8*), i8* bitcast (i1 (%class.cModule*, i32)* @_ZN7cModule14callInitializeEi to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModule10callFinishEv to i8*), i8* bitcast (i32 (%class.cComponent*)* @_ZNK10cComponent12getNumParamsEv to i8*), i8* bitcast (%class.cPar* (%class.cComponent*, i32)* @_ZN10cComponent3parEi to i8*), i8* bitcast (%class.cPar* (%class.cComponent*, i8*)* @_ZN10cComponent3parEPKc to i8*), i8* bitcast (i32 (%class.cComponent*, i8*)* @_ZNK10cComponent7findParEPKc to i8*), i8* bitcast (i1 (%class.cModule*, i32)* @_ZN7cModule17initializeModulesEi to i8*), i8* bitcast (i1 (%class.cModule*, i32)* @_ZN7cModule18initializeChannelsEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.cModule*, i32)* @_ZN7cModule5setIdEi to i8*), i8* bitcast (void (%class.cModule*, i32, i32)* @_ZN7cModule8setIndexEii to i8*), i8* bitcast (%class.cGate* (%class.cModule*, i32)* @_ZN7cModule16createGateObjectEN5cGate4TypeE to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModule13doBuildInsideEv to i8*), i8* bitcast (void (%class.cModule*, i8*, i32, i1)* @_ZN7cModule7addGateEPKcN5cGate4TypeEb to i8*), i8* bitcast (void (%class.cModule*, i8*, i32)* @_ZN7cModule11setGateSizeEPKci to i8*), i8* bitcast (%class.cGate* (%class.cModule*, i8*, i8, i1, i1)* @_ZN7cModule31getOrCreateFirstUnconnectedGateEPKccbb to i8*), i8* bitcast (void (%class.cModule*, i8*, i1, i1, %class.cGate**, %class.cGate**)* @_ZN7cModule35getOrCreateFirstUnconnectedGatePairEPKcbbRP5cGateS4_ to i8*), i8* bitcast (i32 (%class.cModule*)* @_ZN7cModule11buildInsideEv to i8*), i8* bitcast (i1 (%class.cModule*)* @_ZNK7cModule8isSimpleEv to i8*), i8* bitcast (i1 (%class.cModule*)* @_ZNK7cModule13isPlaceholderEv to i8*), i8* bitcast (%class.cGate* (%class.cModule*, i8*, i32)* @_ZN7cModule4gateEPKci to i8*), i8* bitcast (%class.cGate* (%class.cModule*, i8*, i32, i32)* @_ZN7cModule8gateHalfEPKcN5cGate4TypeEi to i8*), i8* bitcast (i1 (%class.cModule*, i8*, i32)* @_ZNK7cModule7hasGateEPKci to i8*), i8* bitcast (i32 (%class.cModule*, i8*, i32)* @_ZNK7cModule8findGateEPKci to i8*), i8* bitcast (%class.cGate* (%class.cModule*, i32)* @_ZN7cModule4gateEi to i8*), i8* bitcast (void (%class.cModule*, i8*)* @_ZN7cModule10deleteGateEPKc to i8*), i8* bitcast (void (%"class.std::vector.13"*, %class.cModule*)* @_ZNK7cModule12getGateNamesEv to i8*), i8* bitcast (i32 (%class.cModule*, i8*)* @_ZNK7cModule8gateTypeEPKc to i8*), i8* bitcast (i1 (%class.cModule*, i8*)* @_ZNK7cModule12isGateVectorEPKc to i8*), i8* bitcast (i32 (%class.cModule*, i8*)* @_ZNK7cModule8gateSizeEPKc to i8*), i8* bitcast (i32 (%class.cModule*, i8*)* @_ZNK7cModule10gateBaseIdEPKc to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.cModule*)* @_ZN7cModule12deleteModuleEv to i8*), i8* bitcast (void (%class.cModule*, %class.cModule*)* @_ZN7cModule14changeParentToEPS_ to i8*)] }, align 8
@.str = private unnamed_addr constant [60 x i8] c"Cannot delete a compound module from one of its submodules!\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTS13cRuntimeError = linkonce_odr dso_local constant [16 x i8] c"13cRuntimeError\00", comdat, align 1
@_ZTS10cException = linkonce_odr dso_local constant [13 x i8] c"10cException\00", comdat, align 1
@_ZTISt9exception = external dso_local constant i8*
@_ZTI10cException = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10cException, i32 0, i32 0), i8* bitcast (i8** @_ZTISt9exception to i8*) }, comdat, align 8
@_ZTI13cRuntimeError = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZTS13cRuntimeError, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cException to i8*) }, comdat, align 8
@_ZTI7cObject = external dso_local constant i8*
@.str.2 = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZTI13cSimpleModule = external dso_local constant i8*
@_ZN7cModule8namePoolE = dso_local global %"class.std::set.23" zeroinitializer, align 8, !dbg !2640
@.str.4 = private unnamed_addr constant [47 x i8] c"Cannot delete gate `%s', it is still connected\00", align 1
@.str.5 = private unnamed_addr constant [60 x i8] c"cannot add gate `%s[]': too many vector gates (limit is %d)\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"cannot add gate `%s': too many scalar gates (limit is %d)\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"no such gate or gate vector: `%s'\00", align 1
@.str.8 = private unnamed_addr constant [98 x i8] c"Invalid gate Id %d: size of `%s[]' is only %d, so index %d (deduced from the Id) is out of bounds\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"addGate(): Gate `%s' already present\00", align 1
@.str.10 = private unnamed_addr constant [66 x i8] c"addGate(): Wrong gate name `%s', must be without `$i'/`$o' suffix\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"no `%s' or `%s[]' gate\00", align 1
@.str.12 = private unnamed_addr constant [72 x i8] c"setGateSize(): wrong gate name `%s', suffix `$i'/`$o' not accepted here\00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"setGateSize(): gate `%s' is not a vector gate\00", align 1
@.str.14 = private unnamed_addr constant [65 x i8] c"setGateSize(): negative vector size (%d) requested for gate %s[]\00", align 1
@.str.15 = private unnamed_addr constant [69 x i8] c"setGateSize(): vector size for gate %s[] too large (%d), limit is %d\00", align 1
@.str.16 = private unnamed_addr constant [82 x i8] c"setGateSize(): Cannot shrink gate vector %s[] to size %d, gate %s still connected\00", align 1
@.str.17 = private unnamed_addr constant [48 x i8] c"gateBaseId(): no such gate or gate vector: `%s'\00", align 1
@.str.18 = private unnamed_addr constant [72 x i8] c"gateBaseId(): inout gate `%s' cannot be referenced without $i/$o suffix\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"Inout gate `%s' cannot be referenced without $i/$o suffix\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"Scalar gate `%s' referenced with index\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"%s when accessing vector gate `%s'\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"No gate index specified\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Negative gate index specified\00", align 1
@.str.24 = private unnamed_addr constant [74 x i8] c"Gate index %d out of range when accessing vector gate `%s[]' with size %d\00", align 1
@.str.25 = private unnamed_addr constant [46 x i8] c"Cannot delete one half of an inout gate: `%s'\00", align 1
@.str.26 = private unnamed_addr constant [66 x i8] c"getOrCreateFirstUnconnectedGate(): gate `%s' is not a vector gate\00", align 1
@.str.27 = private unnamed_addr constant [67 x i8] c"getOrCreateFirstUnconnectedGate(): gate `%s' AND suffix `%c' given\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"getOrCreateFirstUnconnectedGate(): inout gate specified but no suffix\00", align 1
@.str.29 = private unnamed_addr constant [63 x i8] c"getOrCreateFirstUnconnectedGate(): wrong gate name suffix `%c'\00", align 1
@.str.30 = private unnamed_addr constant [70 x i8] c"getOrCreateFirstUnconnectedGatePair(): gate `%s' is not a vector gate\00", align 1
@.str.31 = private unnamed_addr constant [85 x i8] c"getOrCreateFirstUnconnectedGatePair(): inout gate expected, without `$i'/`$o' suffix\00", align 1
@.str.32 = private unnamed_addr constant [93 x i8] c"Gate `%s' is not connected to a submodule (or internally to another gate of the same module)\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"loose\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"directIn\00", align 1
@.str.35 = private unnamed_addr constant [55 x i8] c"Gate `%s' is not connected to sibling or parent module\00", align 1
@.str.36 = private unnamed_addr constant [53 x i8] c"getModuleByRelativePath(): syntax error in path `%s'\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"has no ancestor parameter called `%s'\00", align 1
@.str.38 = private unnamed_addr constant [45 x i8] c"buildInside() already called for this module\00", align 1
@.str.39 = private unnamed_addr constant [90 x i8] c"it is not supported to delete module which contains the currently executing simple module\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"changeParentTo(): got NULL pointer\00", align 1
@.str.41 = private unnamed_addr constant [82 x i8] c"changeParentTo(): gates of the module must not be connected (%s is connected now)\00", align 1
@.str.42 = private unnamed_addr constant [69 x i8] c"changeParentTo(): cannot move module under one of its own submodules\00", align 1
@.str.43 = private unnamed_addr constant [79 x i8] c"internal function initializeChannels() may only be called via callInitialize()\00", align 1
@.str.44 = private unnamed_addr constant [78 x i8] c"internal function initializeModules() may only be called via callInitialize()\00", align 1
@.str.45 = private unnamed_addr constant [44 x i8] c"initialize() already called for this module\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"initialize\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"%s during initialize(): %s\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"%s during finish(): %s\00", align 1
@_ZTS7cModule = dso_local constant [9 x i8] c"7cModule\00", align 1
@_ZTI10cComponent = external dso_local constant i8*
@_ZTI7cModule = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZTS7cModule, i32 0, i32 0), i8* bitcast (i8** @_ZTI10cComponent to i8*) }, align 8
@_ZN11cSimulation5evPtrE = external dso_local global %class.cEnvir*, align 8
@_ZN11cSimulation6simPtrE = external dso_local global %class.cSimulation*, align 8
@_ZTV10cException = linkonce_odr dso_local unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cException to i8*), i8* bitcast (void (%class.cException*)* @_ZN10cExceptionD2Ev to i8*), i8* bitcast (void (%class.cException*)* @_ZN10cExceptionD0Ev to i8*), i8* bitcast (i8* (%class.cException*)* @_ZNK10cException4whatEv to i8*), i8* bitcast (%class.cException* (%class.cException*)* @_ZNK10cException3dupEv to i8*), i8* bitcast (i32 (%class.cException*)* @_ZNK10cException12getErrorCodeEv to i8*), i8* bitcast (void (%class.cException*, i8*)* @_ZN10cException10setMessageEPKc to i8*), i8* bitcast (void (%class.cException*, i8*)* @_ZN10cException14prependMessageEPKc to i8*), i8* bitcast (i1 (%class.cException*)* @_ZNK10cException10hasContextEv to i8*), i8* bitcast (i8* (%class.cException*)* @_ZNK10cException19getContextClassNameEv to i8*), i8* bitcast (i8* (%class.cException*)* @_ZNK10cException18getContextFullPathEv to i8*), i8* bitcast (i32 (%class.cException*)* @_ZNK10cException11getModuleIDEv to i8*)] }, comdat, align 8
@.str.50 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"%d]\00", align 1
@.str.52 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_cmodule.cc, i8* null }]

@_ZN7cModuleD1Ev = dso_local unnamed_addr alias void (%class.cModule*), void (%class.cModule*)* @_ZN7cModuleD2Ev

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" !dbg !3879 {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit), !dbg !3880
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3, !dbg !3880
  ret void, !dbg !3880
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" !dbg !3881 {
entry:
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* @_ZN7cModule18lastmodulefullpathB5cxx11E) #3, !dbg !3882
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN7cModule18lastmodulefullpathB5cxx11E to i8*), i8* @__dso_handle) #3, !dbg !3882
  ret void, !dbg !3882
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModuleC2Ev(%class.cModule* %this) unnamed_addr #0 align 2 !dbg !3883 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !3884, metadata !DIExpression()), !dbg !3885
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !3886
  call void @_ZN10cComponentC2EPKc(%class.cComponent* %0, i8* null), !dbg !3887
  %1 = bitcast %class.cModule* %this1 to i32 (...)***, !dbg !3886
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [75 x i8*] }, { [75 x i8*] }* @_ZTV7cModule, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !dbg !3886
  %mod_id = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 2, !dbg !3888
  store i32 -1, i32* %mod_id, align 8, !dbg !3890
  %idx = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 9, !dbg !3891
  store i32 0, i32* %idx, align 8, !dbg !3892
  %vectsize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 10, !dbg !3893
  store i32 -1, i32* %vectsize, align 4, !dbg !3894
  %fullname = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !3895
  store i8* null, i8** %fullname, align 8, !dbg !3896
  %lastsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 6, !dbg !3897
  store %class.cModule* null, %class.cModule** %lastsubmodp, align 8, !dbg !3898
  %firstsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 5, !dbg !3899
  store %class.cModule* null, %class.cModule** %firstsubmodp, align 8, !dbg !3900
  %nextp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 4, !dbg !3901
  store %class.cModule* null, %class.cModule** %nextp, align 8, !dbg !3902
  %prevp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 3, !dbg !3903
  store %class.cModule* null, %class.cModule** %prevp, align 8, !dbg !3904
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !3905
  store i32 0, i32* %descvSize, align 8, !dbg !3906
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !3907
  store %"struct.cGate::Desc"* null, %"struct.cGate::Desc"** %descv, align 8, !dbg !3908
  ret void, !dbg !3909
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

declare dso_local void @_ZN10cComponentC2EPKc(%class.cComponent*, i8*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN7cModuleD2Ev(%class.cModule* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3910 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %submod = alloca %"class.cModule::SubmoduleIterator", align 8
  %mod = alloca %class.cModule*, align 8
  %i = alloca %"class.cModule::GateIterator", align 8
  %gate = alloca %class.cGate*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !3911, metadata !DIExpression()), !dbg !3912
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to i32 (...)***, !dbg !3913
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [75 x i8*] }, { [75 x i8*] }* @_ZTV7cModule, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !dbg !3913
  %call = invoke %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv()
          to label %invoke.cont unwind label %lpad, !dbg !3914

invoke.cont:                                      ; preds = %entry
  %suppress_notifications = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call, i32 0, i32 2, !dbg !3914
  %1 = load i8, i8* %suppress_notifications, align 1, !dbg !3914
  %tobool = trunc i8 %1 to i1, !dbg !3914
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3914

cond.true:                                        ; preds = %invoke.cont
  br label %cond.end, !dbg !3914

cond.false:                                       ; preds = %invoke.cont
  %call3 = invoke %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv()
          to label %invoke.cont2 unwind label %lpad, !dbg !3914

invoke.cont2:                                     ; preds = %cond.false
  %2 = bitcast %class.cEnvir* %call3 to void (%class.cEnvir*, %class.cModule*)***, !dbg !3916
  %vtable = load void (%class.cEnvir*, %class.cModule*)**, void (%class.cEnvir*, %class.cModule*)*** %2, align 8, !dbg !3916
  %vfn = getelementptr inbounds void (%class.cEnvir*, %class.cModule*)*, void (%class.cEnvir*, %class.cModule*)** %vtable, i64 20, !dbg !3916
  %3 = load void (%class.cEnvir*, %class.cModule*)*, void (%class.cEnvir*, %class.cModule*)** %vfn, align 8, !dbg !3916
  invoke void %3(%class.cEnvir* %call3, %class.cModule* %this1)
          to label %invoke.cont4 unwind label %lpad, !dbg !3916

invoke.cont4:                                     ; preds = %invoke.cont2
  br label %cond.end, !dbg !3914

cond.end:                                         ; preds = %invoke.cont4, %cond.true
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %submod, metadata !3917, metadata !DIExpression()), !dbg !3938
  invoke void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %submod, %class.cModule* %this1)
          to label %invoke.cont5 unwind label %lpad, !dbg !3938

invoke.cont5:                                     ; preds = %cond.end
  br label %for.cond, !dbg !3939

for.cond:                                         ; preds = %delete.end, %invoke.cont5
  %call7 = invoke zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %submod)
          to label %invoke.cont6 unwind label %lpad, !dbg !3940

invoke.cont6:                                     ; preds = %for.cond
  %lnot = xor i1 %call7, true, !dbg !3942
  br i1 %lnot, label %for.body, label %for.end, !dbg !3943

for.body:                                         ; preds = %invoke.cont6
  %call9 = invoke %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %submod)
          to label %invoke.cont8 unwind label %lpad, !dbg !3944

invoke.cont8:                                     ; preds = %for.body
  %call11 = invoke %class.cSimulation* @_ZN11cSimulation19getActiveSimulationEv()
          to label %invoke.cont10 unwind label %lpad, !dbg !3947

invoke.cont10:                                    ; preds = %invoke.cont8
  %call13 = invoke %class.cSimpleModule* @_ZNK11cSimulation17getActivityModuleEv(%class.cSimulation* %call11)
          to label %invoke.cont12 unwind label %lpad, !dbg !3948

invoke.cont12:                                    ; preds = %invoke.cont10
  %4 = bitcast %class.cSimpleModule* %call13 to %class.cModule*, !dbg !3947
  %cmp = icmp eq %class.cModule* %call9, %4, !dbg !3949
  br i1 %cmp, label %if.then, label %if.end, !dbg !3950

if.then:                                          ; preds = %invoke.cont12
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !3951
  %5 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !3951
  invoke void (%class.cRuntimeError*, i8*, ...) @_ZN13cRuntimeErrorC1EPKcz(%class.cRuntimeError* %5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0))
          to label %invoke.cont15 unwind label %lpad14, !dbg !3953

invoke.cont15:                                    ; preds = %if.then
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad, !dbg !3951

lpad:                                             ; preds = %invoke.cont71, %if.then68, %if.end62, %invoke.cont59, %if.then58, %for.end55, %for.inc, %invoke.cont49, %if.then48, %invoke.cont43, %land.lhs.true42, %if.end38, %if.then36, %invoke.cont31, %land.lhs.true, %invoke.cont26, %for.body25, %for.cond21, %for.end, %if.end, %invoke.cont15, %invoke.cont10, %invoke.cont8, %for.body, %for.cond, %cond.end, %invoke.cont2, %cond.false, %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null, !dbg !3954
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !3954
  store i8* %7, i8** %exn.slot, align 8, !dbg !3954
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !3954
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !3954
  br label %ehcleanup, !dbg !3954

lpad14:                                           ; preds = %if.then
  %9 = landingpad { i8*, i32 }
          catch i8* null, !dbg !3955
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !3955
  store i8* %10, i8** %exn.slot, align 8, !dbg !3955
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !3955
  store i32 %11, i32* %ehselector.slot, align 4, !dbg !3955
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !3951
  br label %ehcleanup, !dbg !3951

if.end:                                           ; preds = %invoke.cont12
  call void @llvm.dbg.declare(metadata %class.cModule** %mod, metadata !3956, metadata !DIExpression()), !dbg !3957
  %call17 = invoke %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %submod, i32 0)
          to label %invoke.cont16 unwind label %lpad, !dbg !3958

invoke.cont16:                                    ; preds = %if.end
  store %class.cModule* %call17, %class.cModule** %mod, align 8, !dbg !3957
  %12 = load %class.cModule*, %class.cModule** %mod, align 8, !dbg !3959
  %isnull = icmp eq %class.cModule* %12, null, !dbg !3960
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !3960

delete.notnull:                                   ; preds = %invoke.cont16
  %13 = bitcast %class.cModule* %12 to void (%class.cModule*)***, !dbg !3960
  %vtable18 = load void (%class.cModule*)**, void (%class.cModule*)*** %13, align 8, !dbg !3960
  %vfn19 = getelementptr inbounds void (%class.cModule*)*, void (%class.cModule*)** %vtable18, i64 4, !dbg !3960
  %14 = load void (%class.cModule*)*, void (%class.cModule*)** %vfn19, align 8, !dbg !3960
  call void %14(%class.cModule* %12) #3, !dbg !3960
  br label %delete.end, !dbg !3960

delete.end:                                       ; preds = %delete.notnull, %invoke.cont16
  br label %for.cond, !dbg !3961, !llvm.loop !3962

for.end:                                          ; preds = %invoke.cont6
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %i, metadata !3964, metadata !DIExpression()), !dbg !3993
  invoke void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %i, %class.cModule* %this1)
          to label %invoke.cont20 unwind label %lpad, !dbg !3993

invoke.cont20:                                    ; preds = %for.end
  br label %for.cond21, !dbg !3994

for.cond21:                                       ; preds = %invoke.cont53, %invoke.cont20
  %call23 = invoke zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %i)
          to label %invoke.cont22 unwind label %lpad, !dbg !3995

invoke.cont22:                                    ; preds = %for.cond21
  %lnot24 = xor i1 %call23, true, !dbg !3997
  br i1 %lnot24, label %for.body25, label %for.end55, !dbg !3998

for.body25:                                       ; preds = %invoke.cont22
  call void @llvm.dbg.declare(metadata %class.cGate** %gate, metadata !3999, metadata !DIExpression()), !dbg !4001
  %call27 = invoke %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %i)
          to label %invoke.cont26 unwind label %lpad, !dbg !4002

invoke.cont26:                                    ; preds = %for.body25
  store %class.cGate* %call27, %class.cGate** %gate, align 8, !dbg !4001
  %15 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4003
  %call29 = invoke %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %15)
          to label %invoke.cont28 unwind label %lpad, !dbg !4005

invoke.cont28:                                    ; preds = %invoke.cont26
  %tobool30 = icmp ne %class.cGate* %call29, null, !dbg !4003
  br i1 %tobool30, label %land.lhs.true, label %if.end38, !dbg !4006

land.lhs.true:                                    ; preds = %invoke.cont28
  %16 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4007
  %call32 = invoke %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %16)
          to label %invoke.cont31 unwind label %lpad, !dbg !4008

invoke.cont31:                                    ; preds = %land.lhs.true
  %call34 = invoke %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %call32)
          to label %invoke.cont33 unwind label %lpad, !dbg !4009

invoke.cont33:                                    ; preds = %invoke.cont31
  %17 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4010
  %cmp35 = icmp eq %class.cGate* %call34, %17, !dbg !4011
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !4012

if.then36:                                        ; preds = %invoke.cont33
  %18 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4013
  invoke void @_ZN5cGate10disconnectEv(%class.cGate* %18)
          to label %invoke.cont37 unwind label %lpad, !dbg !4014

invoke.cont37:                                    ; preds = %if.then36
  br label %if.end38, !dbg !4013

if.end38:                                         ; preds = %invoke.cont37, %invoke.cont33, %invoke.cont28
  %19 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4015
  %call40 = invoke %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %19)
          to label %invoke.cont39 unwind label %lpad, !dbg !4017

invoke.cont39:                                    ; preds = %if.end38
  %tobool41 = icmp ne %class.cGate* %call40, null, !dbg !4015
  br i1 %tobool41, label %land.lhs.true42, label %if.end52, !dbg !4018

land.lhs.true42:                                  ; preds = %invoke.cont39
  %20 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4019
  %call44 = invoke %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %20)
          to label %invoke.cont43 unwind label %lpad, !dbg !4020

invoke.cont43:                                    ; preds = %land.lhs.true42
  %call46 = invoke %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %call44)
          to label %invoke.cont45 unwind label %lpad, !dbg !4021

invoke.cont45:                                    ; preds = %invoke.cont43
  %21 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4022
  %cmp47 = icmp eq %class.cGate* %call46, %21, !dbg !4023
  br i1 %cmp47, label %if.then48, label %if.end52, !dbg !4024

if.then48:                                        ; preds = %invoke.cont45
  %22 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4025
  %call50 = invoke %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %22)
          to label %invoke.cont49 unwind label %lpad, !dbg !4026

invoke.cont49:                                    ; preds = %if.then48
  invoke void @_ZN5cGate10disconnectEv(%class.cGate* %call50)
          to label %invoke.cont51 unwind label %lpad, !dbg !4027

invoke.cont51:                                    ; preds = %invoke.cont49
  br label %if.end52, !dbg !4025

if.end52:                                         ; preds = %invoke.cont51, %invoke.cont45, %invoke.cont39
  br label %for.inc, !dbg !4028

for.inc:                                          ; preds = %if.end52
  %call54 = invoke %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %i, i32 0)
          to label %invoke.cont53 unwind label %lpad, !dbg !4029

invoke.cont53:                                    ; preds = %for.inc
  br label %for.cond21, !dbg !4030, !llvm.loop !4031

for.end55:                                        ; preds = %invoke.cont22
  invoke void @_ZN7cModule10clearGatesEv(%class.cModule* %this1)
          to label %invoke.cont56 unwind label %lpad, !dbg !4033

invoke.cont56:                                    ; preds = %for.end55
  %mod_id = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 2, !dbg !4034
  %23 = load i32, i32* %mod_id, align 8, !dbg !4034
  %cmp57 = icmp ne i32 %23, -1, !dbg !4036
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !4037

if.then58:                                        ; preds = %invoke.cont56
  %call60 = invoke %class.cSimulation* @_ZN11cSimulation19getActiveSimulationEv()
          to label %invoke.cont59 unwind label %lpad, !dbg !4038

invoke.cont59:                                    ; preds = %if.then58
  invoke void @_ZN11cSimulation16deregisterModuleEP7cModule(%class.cSimulation* %call60, %class.cModule* %this1)
          to label %invoke.cont61 unwind label %lpad, !dbg !4039

invoke.cont61:                                    ; preds = %invoke.cont59
  br label %if.end62, !dbg !4038

if.end62:                                         ; preds = %invoke.cont61, %invoke.cont56
  %24 = bitcast %class.cModule* %this1 to %class.cModule* (%class.cModule*)***, !dbg !4040
  %vtable63 = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %24, align 8, !dbg !4040
  %vfn64 = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable63, i64 37, !dbg !4040
  %25 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn64, align 8, !dbg !4040
  %call66 = invoke %class.cModule* %25(%class.cModule* %this1)
          to label %invoke.cont65 unwind label %lpad, !dbg !4040

invoke.cont65:                                    ; preds = %if.end62
  %tobool67 = icmp ne %class.cModule* %call66, null, !dbg !4040
  br i1 %tobool67, label %if.then68, label %if.end74, !dbg !4042

if.then68:                                        ; preds = %invoke.cont65
  %26 = bitcast %class.cModule* %this1 to %class.cModule* (%class.cModule*)***, !dbg !4043
  %vtable69 = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %26, align 8, !dbg !4043
  %vfn70 = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable69, i64 37, !dbg !4043
  %27 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn70, align 8, !dbg !4043
  %call72 = invoke %class.cModule* %27(%class.cModule* %this1)
          to label %invoke.cont71 unwind label %lpad, !dbg !4043

invoke.cont71:                                    ; preds = %if.then68
  invoke void @_ZN7cModule15removeSubmoduleEPS_(%class.cModule* %call72, %class.cModule* %this1)
          to label %invoke.cont73 unwind label %lpad, !dbg !4044

invoke.cont73:                                    ; preds = %invoke.cont71
  br label %if.end74, !dbg !4043

if.end74:                                         ; preds = %invoke.cont73, %invoke.cont65
  %fullname = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4045
  %28 = load i8*, i8** %fullname, align 8, !dbg !4045
  %isnull75 = icmp eq i8* %28, null, !dbg !4046
  br i1 %isnull75, label %delete.end77, label %delete.notnull76, !dbg !4046

delete.notnull76:                                 ; preds = %if.end74
  call void @_ZdaPv(i8* %28) #17, !dbg !4046
  br label %delete.end77, !dbg !4046

delete.end77:                                     ; preds = %delete.notnull76, %if.end74
  %29 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !3954
  call void @_ZN10cComponentD2Ev(%class.cComponent* %29) #3, !dbg !3954
  ret void, !dbg !4047

ehcleanup:                                        ; preds = %lpad14, %lpad
  %30 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !3954
  call void @_ZN10cComponentD2Ev(%class.cComponent* %30) #3, !dbg !3954
  br label %terminate.handler, !dbg !3954

terminate.handler:                                ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !3954
  call void @__clang_call_terminate(i8* %exn) #18, !dbg !3954
  unreachable, !dbg !3954

unreachable:                                      ; preds = %invoke.cont15
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv() #5 comdat align 2 !dbg !4048 {
entry:
  %0 = load %class.cEnvir*, %class.cEnvir** @_ZN11cSimulation5evPtrE, align 8, !dbg !4057
  ret %class.cEnvir* %0, !dbg !4058
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %this, %class.cModule* %m) unnamed_addr #0 comdat align 2 !dbg !4059 {
entry:
  %this.addr = alloca %"class.cModule::SubmoduleIterator"*, align 8
  %m.addr = alloca %class.cModule*, align 8
  store %"class.cModule::SubmoduleIterator"* %this, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"** %this.addr, metadata !4060, metadata !DIExpression()), !dbg !4062
  store %class.cModule* %m, %class.cModule** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %m.addr, metadata !4063, metadata !DIExpression()), !dbg !4064
  %this1 = load %"class.cModule::SubmoduleIterator"*, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  %0 = load %class.cModule*, %class.cModule** %m.addr, align 8, !dbg !4065
  call void @_ZN7cModule17SubmoduleIterator4initEPKS_(%"class.cModule::SubmoduleIterator"* %this1, %class.cModule* %0), !dbg !4067
  ret void, !dbg !4068
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %this) #5 comdat align 2 !dbg !4069 {
entry:
  %this.addr = alloca %"class.cModule::SubmoduleIterator"*, align 8
  store %"class.cModule::SubmoduleIterator"* %this, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"** %this.addr, metadata !4070, metadata !DIExpression()), !dbg !4072
  %this1 = load %"class.cModule::SubmoduleIterator"*, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  %p = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !4073
  %0 = load %class.cModule*, %class.cModule** %p, align 8, !dbg !4073
  %cmp = icmp eq %class.cModule* %0, null, !dbg !4074
  ret i1 %cmp, !dbg !4075
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %this) #5 comdat align 2 !dbg !4076 {
entry:
  %this.addr = alloca %"class.cModule::SubmoduleIterator"*, align 8
  store %"class.cModule::SubmoduleIterator"* %this, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"** %this.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  %this1 = load %"class.cModule::SubmoduleIterator"*, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  %p = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !4079
  %0 = load %class.cModule*, %class.cModule** %p, align 8, !dbg !4079
  ret %class.cModule* %0, !dbg !4080
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cSimulation* @_ZN11cSimulation19getActiveSimulationEv() #5 comdat align 2 !dbg !4081 {
entry:
  %0 = load %class.cSimulation*, %class.cSimulation** @_ZN11cSimulation6simPtrE, align 8, !dbg !4086
  ret %class.cSimulation* %0, !dbg !4087
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cSimpleModule* @_ZNK11cSimulation17getActivityModuleEv(%class.cSimulation* %this) #5 comdat align 2 !dbg !4088 {
entry:
  %this.addr = alloca %class.cSimulation*, align 8
  store %class.cSimulation* %this, %class.cSimulation** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cSimulation** %this.addr, metadata !4095, metadata !DIExpression()), !dbg !4097
  %this1 = load %class.cSimulation*, %class.cSimulation** %this.addr, align 8
  %activitymodp = getelementptr inbounds %class.cSimulation, %class.cSimulation* %this1, i32 0, i32 7, !dbg !4098
  %0 = load %class.cSimpleModule*, %class.cSimpleModule** %activitymodp, align 8, !dbg !4098
  ret %class.cSimpleModule* %0, !dbg !4099
}

declare dso_local i8* @__cxa_allocate_exception(i64)

declare dso_local void @_ZN13cRuntimeErrorC1EPKcz(%class.cRuntimeError*, i8*, ...) unnamed_addr #1

declare dso_local void @__cxa_free_exception(i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN13cRuntimeErrorD2Ev(%class.cRuntimeError* %this) unnamed_addr #5 comdat align 2 !dbg !4100 {
entry:
  %this.addr = alloca %class.cRuntimeError*, align 8
  store %class.cRuntimeError* %this, %class.cRuntimeError** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cRuntimeError** %this.addr, metadata !4105, metadata !DIExpression()), !dbg !4107
  %this1 = load %class.cRuntimeError*, %class.cRuntimeError** %this.addr, align 8
  %0 = bitcast %class.cRuntimeError* %this1 to %class.cException*, !dbg !4108
  call void @_ZN10cExceptionD2Ev(%class.cException* %0) #3, !dbg !4108
  ret void, !dbg !4110
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %this, i32 %0) #5 comdat align 2 !dbg !4111 {
entry:
  %retval = alloca %class.cModule*, align 8
  %this.addr = alloca %"class.cModule::SubmoduleIterator"*, align 8
  %.addr = alloca i32, align 4
  %t = alloca %class.cModule*, align 8
  store %"class.cModule::SubmoduleIterator"* %this, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"** %this.addr, metadata !4112, metadata !DIExpression()), !dbg !4113
  store i32 %0, i32* %.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %.addr, metadata !4114, metadata !DIExpression()), !dbg !4115
  %this1 = load %"class.cModule::SubmoduleIterator"*, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  %p = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !4116
  %1 = load %class.cModule*, %class.cModule** %p, align 8, !dbg !4116
  %tobool = icmp ne %class.cModule* %1, null, !dbg !4116
  br i1 %tobool, label %if.end, label %if.then, !dbg !4118

if.then:                                          ; preds = %entry
  store %class.cModule* null, %class.cModule** %retval, align 8, !dbg !4119
  br label %return, !dbg !4119

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %class.cModule** %t, metadata !4120, metadata !DIExpression()), !dbg !4121
  %p2 = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !4122
  %2 = load %class.cModule*, %class.cModule** %p2, align 8, !dbg !4122
  store %class.cModule* %2, %class.cModule** %t, align 8, !dbg !4121
  %p3 = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !4123
  %3 = load %class.cModule*, %class.cModule** %p3, align 8, !dbg !4123
  %nextp = getelementptr inbounds %class.cModule, %class.cModule* %3, i32 0, i32 4, !dbg !4124
  %4 = load %class.cModule*, %class.cModule** %nextp, align 8, !dbg !4124
  %p4 = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !4125
  store %class.cModule* %4, %class.cModule** %p4, align 8, !dbg !4126
  %5 = load %class.cModule*, %class.cModule** %t, align 8, !dbg !4127
  store %class.cModule* %5, %class.cModule** %retval, align 8, !dbg !4128
  br label %return, !dbg !4128

return:                                           ; preds = %if.end, %if.then
  %6 = load %class.cModule*, %class.cModule** %retval, align 8, !dbg !4129
  ret %class.cModule* %6, !dbg !4129
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %this, %class.cModule* %m) unnamed_addr #0 comdat align 2 !dbg !4130 {
entry:
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %m.addr = alloca %class.cModule*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !4131, metadata !DIExpression()), !dbg !4133
  store %class.cModule* %m, %class.cModule** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %m.addr, metadata !4134, metadata !DIExpression()), !dbg !4135
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  %0 = load %class.cModule*, %class.cModule** %m.addr, align 8, !dbg !4136
  call void @_ZN7cModule12GateIterator4initEPKS_(%"class.cModule::GateIterator"* %this1, %class.cModule* %0), !dbg !4138
  ret void, !dbg !4139
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %this) #5 align 2 !dbg !4140 {
entry:
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !4141, metadata !DIExpression()), !dbg !4143
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  %descIndex = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !4144
  %0 = load i32, i32* %descIndex, align 8, !dbg !4144
  %module = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 0, !dbg !4145
  %1 = load %class.cModule*, %class.cModule** %module, align 8, !dbg !4145
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %1, i32 0, i32 7, !dbg !4146
  %2 = load i32, i32* %descvSize, align 8, !dbg !4146
  %cmp = icmp sge i32 %0, %2, !dbg !4147
  ret i1 %cmp, !dbg !4148
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %this) #0 comdat align 2 !dbg !4149 {
entry:
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %result = alloca %class.cGate*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !4150, metadata !DIExpression()), !dbg !4151
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %result, metadata !4152, metadata !DIExpression()), !dbg !4153
  %call = call %class.cGate* @_ZNK7cModule12GateIterator7currentEv(%"class.cModule::GateIterator"* %this1), !dbg !4154
  store %class.cGate* %call, %class.cGate** %result, align 8, !dbg !4153
  %0 = load %class.cGate*, %class.cGate** %result, align 8, !dbg !4155
  ret %class.cGate* %0, !dbg !4156
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %this) #5 comdat align 2 !dbg !4157 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !4162, metadata !DIExpression()), !dbg !4163
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %nextgatep = getelementptr inbounds %class.cGate, %class.cGate* %this1, i32 0, i32 5, !dbg !4164
  %0 = load %class.cGate*, %class.cGate** %nextgatep, align 8, !dbg !4164
  ret %class.cGate* %0, !dbg !4165
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %this) #5 comdat align 2 !dbg !4166 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !4168, metadata !DIExpression()), !dbg !4169
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %prevgatep = getelementptr inbounds %class.cGate, %class.cGate* %this1, i32 0, i32 4, !dbg !4170
  %0 = load %class.cGate*, %class.cGate** %prevgatep, align 8, !dbg !4170
  ret %class.cGate* %0, !dbg !4171
}

declare dso_local void @_ZN5cGate10disconnectEv(%class.cGate*) #1

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %this, i32 %0) #0 align 2 !dbg !4172 {
entry:
  %retval = alloca %class.cGate*, align 8
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %.addr = alloca i32, align 4
  %gate = alloca %class.cGate*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !4173, metadata !DIExpression()), !dbg !4174
  store i32 %0, i32* %.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %this1), !dbg !4177
  br i1 %call, label %if.then, label %if.end, !dbg !4179

if.then:                                          ; preds = %entry
  store %class.cGate* null, %class.cGate** %retval, align 8, !dbg !4180
  br label %return, !dbg !4180

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %class.cGate** %gate, metadata !4181, metadata !DIExpression()), !dbg !4182
  store %class.cGate* null, %class.cGate** %gate, align 8, !dbg !4182
  br label %do.body, !dbg !4183

do.body:                                          ; preds = %land.end, %if.end
  call void @_ZN7cModule12GateIterator7advanceEv(%"class.cModule::GateIterator"* %this1), !dbg !4184
  br label %do.cond, !dbg !4186

do.cond:                                          ; preds = %do.body
  %call2 = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %this1), !dbg !4187
  br i1 %call2, label %land.end, label %land.rhs, !dbg !4188

land.rhs:                                         ; preds = %do.cond
  %call3 = call %class.cGate* @_ZNK7cModule12GateIterator7currentEv(%"class.cModule::GateIterator"* %this1), !dbg !4189
  store %class.cGate* %call3, %class.cGate** %gate, align 8, !dbg !4190
  %cmp = icmp eq %class.cGate* %call3, null, !dbg !4191
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %1 = phi i1 [ false, %do.cond ], [ %cmp, %land.rhs ], !dbg !4174
  br i1 %1, label %do.body, label %do.end, !dbg !4186, !llvm.loop !4192

do.end:                                           ; preds = %land.end
  %2 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !4194
  store %class.cGate* %2, %class.cGate** %retval, align 8, !dbg !4195
  br label %return, !dbg !4195

return:                                           ; preds = %do.end, %if.then
  %3 = load %class.cGate*, %class.cGate** %retval, align 8, !dbg !4196
  ret %class.cGate* %3, !dbg !4196
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule10clearGatesEv(%class.cModule* %this) #0 align 2 !dbg !4197 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %i = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4198, metadata !DIExpression()), !dbg !4199
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4200, metadata !DIExpression()), !dbg !4202
  store i32 0, i32* %i, align 4, !dbg !4202
  br label %for.cond, !dbg !4203

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4204
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4206
  %1 = load i32, i32* %descvSize, align 8, !dbg !4206
  %cmp = icmp slt i32 %0, %1, !dbg !4207
  br i1 %cmp, label %for.body, label %for.end, !dbg !4208

for.body:                                         ; preds = %for.cond
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4209
  %2 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !4209
  %3 = load i32, i32* %i, align 4, !dbg !4210
  %idx.ext = sext i32 %3 to i64, !dbg !4211
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %2, i64 %idx.ext, !dbg !4211
  call void @_ZN7cModule15disposeGateDescEPN5cGate4DescEb(%class.cModule* %this1, %"struct.cGate::Desc"* %add.ptr, i1 zeroext false), !dbg !4212
  br label %for.inc, !dbg !4212

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !4213
  %inc = add nsw i32 %4, 1, !dbg !4213
  store i32 %inc, i32* %i, align 4, !dbg !4213
  br label %for.cond, !dbg !4214, !llvm.loop !4215

for.end:                                          ; preds = %for.cond
  %descv2 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4217
  %5 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv2, align 8, !dbg !4217
  %isnull = icmp eq %"struct.cGate::Desc"* %5, null, !dbg !4218
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !4218

delete.notnull:                                   ; preds = %for.end
  %6 = bitcast %"struct.cGate::Desc"* %5 to i8*, !dbg !4218
  call void @_ZdaPv(i8* %6) #17, !dbg !4218
  br label %delete.end, !dbg !4218

delete.end:                                       ; preds = %delete.notnull, %for.end
  %descv3 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4219
  store %"struct.cGate::Desc"* null, %"struct.cGate::Desc"** %descv3, align 8, !dbg !4220
  %descvSize4 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4221
  store i32 0, i32* %descvSize4, align 8, !dbg !4222
  ret void, !dbg !4223
}

declare dso_local void @_ZN11cSimulation16deregisterModuleEP7cModule(%class.cSimulation*, %class.cModule*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN7cModule15removeSubmoduleEPS_(%class.cModule* %this, %class.cModule* %mod) #5 align 2 !dbg !4224 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %mod.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4225, metadata !DIExpression()), !dbg !4226
  store %class.cModule* %mod, %class.cModule** %mod.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %mod.addr, metadata !4227, metadata !DIExpression()), !dbg !4228
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4229
  %nextp = getelementptr inbounds %class.cModule, %class.cModule* %0, i32 0, i32 4, !dbg !4231
  %1 = load %class.cModule*, %class.cModule** %nextp, align 8, !dbg !4231
  %tobool = icmp ne %class.cModule* %1, null, !dbg !4229
  br i1 %tobool, label %if.then, label %if.end, !dbg !4232

if.then:                                          ; preds = %entry
  %2 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4233
  %prevp = getelementptr inbounds %class.cModule, %class.cModule* %2, i32 0, i32 3, !dbg !4234
  %3 = load %class.cModule*, %class.cModule** %prevp, align 8, !dbg !4234
  %4 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4235
  %nextp2 = getelementptr inbounds %class.cModule, %class.cModule* %4, i32 0, i32 4, !dbg !4236
  %5 = load %class.cModule*, %class.cModule** %nextp2, align 8, !dbg !4236
  %prevp3 = getelementptr inbounds %class.cModule, %class.cModule* %5, i32 0, i32 3, !dbg !4237
  store %class.cModule* %3, %class.cModule** %prevp3, align 8, !dbg !4238
  br label %if.end, !dbg !4235

if.end:                                           ; preds = %if.then, %entry
  %6 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4239
  %prevp4 = getelementptr inbounds %class.cModule, %class.cModule* %6, i32 0, i32 3, !dbg !4241
  %7 = load %class.cModule*, %class.cModule** %prevp4, align 8, !dbg !4241
  %tobool5 = icmp ne %class.cModule* %7, null, !dbg !4239
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !4242

if.then6:                                         ; preds = %if.end
  %8 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4243
  %nextp7 = getelementptr inbounds %class.cModule, %class.cModule* %8, i32 0, i32 4, !dbg !4244
  %9 = load %class.cModule*, %class.cModule** %nextp7, align 8, !dbg !4244
  %10 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4245
  %prevp8 = getelementptr inbounds %class.cModule, %class.cModule* %10, i32 0, i32 3, !dbg !4246
  %11 = load %class.cModule*, %class.cModule** %prevp8, align 8, !dbg !4246
  %nextp9 = getelementptr inbounds %class.cModule, %class.cModule* %11, i32 0, i32 4, !dbg !4247
  store %class.cModule* %9, %class.cModule** %nextp9, align 8, !dbg !4248
  br label %if.end10, !dbg !4245

if.end10:                                         ; preds = %if.then6, %if.end
  %firstsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 5, !dbg !4249
  %12 = load %class.cModule*, %class.cModule** %firstsubmodp, align 8, !dbg !4249
  %13 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4251
  %cmp = icmp eq %class.cModule* %12, %13, !dbg !4252
  br i1 %cmp, label %if.then11, label %if.end14, !dbg !4253

if.then11:                                        ; preds = %if.end10
  %14 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4254
  %nextp12 = getelementptr inbounds %class.cModule, %class.cModule* %14, i32 0, i32 4, !dbg !4255
  %15 = load %class.cModule*, %class.cModule** %nextp12, align 8, !dbg !4255
  %firstsubmodp13 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 5, !dbg !4256
  store %class.cModule* %15, %class.cModule** %firstsubmodp13, align 8, !dbg !4257
  br label %if.end14, !dbg !4256

if.end14:                                         ; preds = %if.then11, %if.end10
  %lastsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 6, !dbg !4258
  %16 = load %class.cModule*, %class.cModule** %lastsubmodp, align 8, !dbg !4258
  %17 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4260
  %cmp15 = icmp eq %class.cModule* %16, %17, !dbg !4261
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !4262

if.then16:                                        ; preds = %if.end14
  %18 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4263
  %prevp17 = getelementptr inbounds %class.cModule, %class.cModule* %18, i32 0, i32 3, !dbg !4264
  %19 = load %class.cModule*, %class.cModule** %prevp17, align 8, !dbg !4264
  %lastsubmodp18 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 6, !dbg !4265
  store %class.cModule* %19, %class.cModule** %lastsubmodp18, align 8, !dbg !4266
  br label %if.end19, !dbg !4265

if.end19:                                         ; preds = %if.then16, %if.end14
  %20 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4267
  %nextp20 = getelementptr inbounds %class.cModule, %class.cModule* %20, i32 0, i32 4, !dbg !4268
  store %class.cModule* null, %class.cModule** %nextp20, align 8, !dbg !4269
  %21 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4270
  %prevp21 = getelementptr inbounds %class.cModule, %class.cModule* %21, i32 0, i32 3, !dbg !4271
  store %class.cModule* null, %class.cModule** %prevp21, align 8, !dbg !4272
  store %class.cModule* null, %class.cModule** @_ZN7cModule21lastmodulefullpathmodE, align 8, !dbg !4273
  ret void, !dbg !4274
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) #6

; Function Attrs: nounwind
declare dso_local void @_ZN10cComponentD2Ev(%class.cComponent*) unnamed_addr #2

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #18
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN7cModuleD0Ev(%class.cModule* %this) unnamed_addr #5 align 2 !dbg !4275 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4276, metadata !DIExpression()), !dbg !4277
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.trap() #18, !dbg !4278
  unreachable, !dbg !4278
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule12forEachChildEP8cVisitor(%class.cModule* %this, %class.cVisitor* %v) unnamed_addr #0 align 2 !dbg !4279 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %v.addr = alloca %class.cVisitor*, align 8
  %i = alloca i32, align 4
  %i2 = alloca %"class.cModule::GateIterator", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  store %class.cVisitor* %v, %class.cVisitor** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cVisitor** %v.addr, metadata !4282, metadata !DIExpression()), !dbg !4283
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4284, metadata !DIExpression()), !dbg !4286
  store i32 0, i32* %i, align 4, !dbg !4286
  br label %for.cond, !dbg !4287

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4288
  %1 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !4290
  %numparams = getelementptr inbounds %class.cComponent, %class.cComponent* %1, i32 0, i32 5, !dbg !4290
  %2 = load i16, i16* %numparams, align 2, !dbg !4290
  %conv = sext i16 %2 to i32, !dbg !4290
  %cmp = icmp slt i32 %0, %conv, !dbg !4291
  br i1 %cmp, label %for.body, label %for.end, !dbg !4292

for.body:                                         ; preds = %for.cond
  %3 = load %class.cVisitor*, %class.cVisitor** %v.addr, align 8, !dbg !4293
  %4 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !4294
  %paramv = getelementptr inbounds %class.cComponent, %class.cComponent* %4, i32 0, i32 6, !dbg !4294
  %5 = load %class.cPar*, %class.cPar** %paramv, align 8, !dbg !4294
  %6 = load i32, i32* %i, align 4, !dbg !4295
  %idxprom = sext i32 %6 to i64, !dbg !4294
  %arrayidx = getelementptr inbounds %class.cPar, %class.cPar* %5, i64 %idxprom, !dbg !4294
  %7 = bitcast %class.cPar* %arrayidx to %class.cObject*, !dbg !4296
  %8 = bitcast %class.cVisitor* %3 to void (%class.cVisitor*, %class.cObject*)***, !dbg !4297
  %vtable = load void (%class.cVisitor*, %class.cObject*)**, void (%class.cVisitor*, %class.cObject*)*** %8, align 8, !dbg !4297
  %vfn = getelementptr inbounds void (%class.cVisitor*, %class.cObject*)*, void (%class.cVisitor*, %class.cObject*)** %vtable, i64 4, !dbg !4297
  %9 = load void (%class.cVisitor*, %class.cObject*)*, void (%class.cVisitor*, %class.cObject*)** %vfn, align 8, !dbg !4297
  call void %9(%class.cVisitor* %3, %class.cObject* %7), !dbg !4297
  br label %for.inc, !dbg !4293

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !4298
  %inc = add nsw i32 %10, 1, !dbg !4298
  store i32 %inc, i32* %i, align 4, !dbg !4298
  br label %for.cond, !dbg !4299, !llvm.loop !4300

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %i2, metadata !4302, metadata !DIExpression()), !dbg !4304
  call void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %i2, %class.cModule* %this1), !dbg !4304
  br label %for.cond3, !dbg !4305

for.cond3:                                        ; preds = %for.inc8, %for.end
  %call = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %i2), !dbg !4306
  %lnot = xor i1 %call, true, !dbg !4308
  br i1 %lnot, label %for.body4, label %for.end10, !dbg !4309

for.body4:                                        ; preds = %for.cond3
  %11 = load %class.cVisitor*, %class.cVisitor** %v.addr, align 8, !dbg !4310
  %call5 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %i2), !dbg !4311
  %12 = bitcast %class.cGate* %call5 to %class.cObject*, !dbg !4311
  %13 = bitcast %class.cVisitor* %11 to void (%class.cVisitor*, %class.cObject*)***, !dbg !4312
  %vtable6 = load void (%class.cVisitor*, %class.cObject*)**, void (%class.cVisitor*, %class.cObject*)*** %13, align 8, !dbg !4312
  %vfn7 = getelementptr inbounds void (%class.cVisitor*, %class.cObject*)*, void (%class.cVisitor*, %class.cObject*)** %vtable6, i64 4, !dbg !4312
  %14 = load void (%class.cVisitor*, %class.cObject*)*, void (%class.cVisitor*, %class.cObject*)** %vfn7, align 8, !dbg !4312
  call void %14(%class.cVisitor* %11, %class.cObject* %12), !dbg !4312
  br label %for.inc8, !dbg !4310

for.inc8:                                         ; preds = %for.body4
  %call9 = call %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %i2, i32 0), !dbg !4313
  br label %for.cond3, !dbg !4314, !llvm.loop !4315

for.end10:                                        ; preds = %for.cond3
  %15 = bitcast %class.cModule* %this1 to %class.cDefaultList*, !dbg !4317
  %16 = load %class.cVisitor*, %class.cVisitor** %v.addr, align 8, !dbg !4318
  call void @_ZN12cDefaultList12forEachChildEP8cVisitor(%class.cDefaultList* %15, %class.cVisitor* %16), !dbg !4317
  ret void, !dbg !4319
}

declare dso_local void @_ZN12cDefaultList12forEachChildEP8cVisitor(%class.cDefaultList*, %class.cVisitor*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN7cModule5setIdEi(%class.cModule* %this, i32 %n) unnamed_addr #5 align 2 !dbg !4320 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %n.addr = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4321, metadata !DIExpression()), !dbg !4322
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4323, metadata !DIExpression()), !dbg !4324
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load i32, i32* %n.addr, align 4, !dbg !4325
  %mod_id = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 2, !dbg !4326
  store i32 %0, i32* %mod_id, align 8, !dbg !4327
  ret void, !dbg !4328
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule8setIndexEii(%class.cModule* %this, i32 %i, i32 %n) unnamed_addr #0 align 2 !dbg !4329 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %i.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !4332, metadata !DIExpression()), !dbg !4333
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4334, metadata !DIExpression()), !dbg !4335
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load i32, i32* %i.addr, align 4, !dbg !4336
  %idx = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 9, !dbg !4337
  store i32 %0, i32* %idx, align 8, !dbg !4338
  %1 = load i32, i32* %n.addr, align 4, !dbg !4339
  %vectsize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 10, !dbg !4340
  store i32 %1, i32* %vectsize, align 4, !dbg !4341
  call void @_ZN7cModule14updateFullNameEv(%class.cModule* %this1), !dbg !4342
  ret void, !dbg !4343
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule14updateFullNameEv(%class.cModule* %this) #0 align 2 !dbg !4344 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4345, metadata !DIExpression()), !dbg !4346
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %fullname = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4347
  %0 = load i8*, i8** %fullname, align 8, !dbg !4347
  %tobool = icmp ne i8* %0, null, !dbg !4347
  br i1 %tobool, label %if.then, label %if.end, !dbg !4349

if.then:                                          ; preds = %entry
  %fullname2 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4350
  %1 = load i8*, i8** %fullname2, align 8, !dbg !4350
  %isnull = icmp eq i8* %1, null, !dbg !4352
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !4352

delete.notnull:                                   ; preds = %if.then
  call void @_ZdaPv(i8* %1) #17, !dbg !4352
  br label %delete.end, !dbg !4352

delete.end:                                       ; preds = %delete.notnull, %if.then
  %fullname3 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4353
  store i8* null, i8** %fullname3, align 8, !dbg !4354
  br label %if.end, !dbg !4355

if.end:                                           ; preds = %delete.end, %entry
  %call = call zeroext i1 @_ZNK7cModule8isVectorEv(%class.cModule* %this1), !dbg !4356
  br i1 %call, label %if.then4, label %if.end16, !dbg !4358

if.then4:                                         ; preds = %if.end
  %2 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !4359
  %3 = bitcast %class.cNamedObject* %2 to i8* (%class.cNamedObject*)***, !dbg !4359
  %vtable = load i8* (%class.cNamedObject*)**, i8* (%class.cNamedObject*)*** %3, align 8, !dbg !4359
  %vfn = getelementptr inbounds i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vtable, i64 6, !dbg !4359
  %4 = load i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vfn, align 8, !dbg !4359
  %call5 = call i8* %4(%class.cNamedObject* %2), !dbg !4359
  %call6 = call i32 @_Z10opp_strlenPKc(i8* %call5), !dbg !4361
  %add = add nsw i32 %call6, 10, !dbg !4362
  %conv = sext i32 %add to i64, !dbg !4361
  %call7 = call i8* @_Znam(i64 %conv) #19, !dbg !4363
  %fullname8 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4364
  store i8* %call7, i8** %fullname8, align 8, !dbg !4365
  %fullname9 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4366
  %5 = load i8*, i8** %fullname9, align 8, !dbg !4366
  %6 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !4367
  %7 = bitcast %class.cNamedObject* %6 to i8* (%class.cNamedObject*)***, !dbg !4367
  %vtable10 = load i8* (%class.cNamedObject*)**, i8* (%class.cNamedObject*)*** %7, align 8, !dbg !4367
  %vfn11 = getelementptr inbounds i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vtable10, i64 6, !dbg !4367
  %8 = load i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vfn11, align 8, !dbg !4367
  %call12 = call i8* %8(%class.cNamedObject* %6), !dbg !4367
  %call13 = call i8* @strcpy(i8* %5, i8* %call12) #3, !dbg !4368
  %fullname14 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4369
  %9 = load i8*, i8** %fullname14, align 8, !dbg !4369
  %call15 = call i32 @_ZNK7cModule8getIndexEv(%class.cModule* %this1), !dbg !4370
  call void @_Z15opp_appendindexPcj(i8* %9, i32 %call15), !dbg !4371
  br label %if.end16, !dbg !4372

if.end16:                                         ; preds = %if.then4, %if.end
  %10 = load %class.cModule*, %class.cModule** @_ZN7cModule21lastmodulefullpathmodE, align 8, !dbg !4373
  %cmp = icmp eq %class.cModule* %10, %this1, !dbg !4375
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !4376

if.then17:                                        ; preds = %if.end16
  store %class.cModule* null, %class.cModule** @_ZN7cModule21lastmodulefullpathmodE, align 8, !dbg !4377
  br label %if.end18, !dbg !4378

if.end18:                                         ; preds = %if.then17, %if.end16
  ret void, !dbg !4379
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule15insertSubmoduleEPS_(%class.cModule* %this, %class.cModule* %mod) #0 align 2 !dbg !4380 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %mod.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  store %class.cModule* %mod, %class.cModule** %mod.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %mod.addr, metadata !4383, metadata !DIExpression()), !dbg !4384
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to %class.cDefaultList*, !dbg !4385
  %1 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4386
  %2 = bitcast %class.cModule* %1 to %class.cOwnedObject*, !dbg !4386
  %3 = bitcast %class.cDefaultList* %0 to void (%class.cDefaultList*, %class.cOwnedObject*)***, !dbg !4385
  %vtable = load void (%class.cDefaultList*, %class.cOwnedObject*)**, void (%class.cDefaultList*, %class.cOwnedObject*)*** %3, align 8, !dbg !4385
  %vfn = getelementptr inbounds void (%class.cDefaultList*, %class.cOwnedObject*)*, void (%class.cDefaultList*, %class.cOwnedObject*)** %vtable, i64 12, !dbg !4385
  %4 = load void (%class.cDefaultList*, %class.cOwnedObject*)*, void (%class.cDefaultList*, %class.cOwnedObject*)** %vfn, align 8, !dbg !4385
  call void %4(%class.cDefaultList* %0, %class.cOwnedObject* %2), !dbg !4385
  %5 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4387
  %nextp = getelementptr inbounds %class.cModule, %class.cModule* %5, i32 0, i32 4, !dbg !4388
  store %class.cModule* null, %class.cModule** %nextp, align 8, !dbg !4389
  %lastsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 6, !dbg !4390
  %6 = load %class.cModule*, %class.cModule** %lastsubmodp, align 8, !dbg !4390
  %7 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4391
  %prevp = getelementptr inbounds %class.cModule, %class.cModule* %7, i32 0, i32 3, !dbg !4392
  store %class.cModule* %6, %class.cModule** %prevp, align 8, !dbg !4393
  %8 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4394
  %prevp2 = getelementptr inbounds %class.cModule, %class.cModule* %8, i32 0, i32 3, !dbg !4396
  %9 = load %class.cModule*, %class.cModule** %prevp2, align 8, !dbg !4396
  %tobool = icmp ne %class.cModule* %9, null, !dbg !4394
  br i1 %tobool, label %if.then, label %if.end, !dbg !4397

if.then:                                          ; preds = %entry
  %10 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4398
  %11 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4399
  %prevp3 = getelementptr inbounds %class.cModule, %class.cModule* %11, i32 0, i32 3, !dbg !4400
  %12 = load %class.cModule*, %class.cModule** %prevp3, align 8, !dbg !4400
  %nextp4 = getelementptr inbounds %class.cModule, %class.cModule* %12, i32 0, i32 4, !dbg !4401
  store %class.cModule* %10, %class.cModule** %nextp4, align 8, !dbg !4402
  br label %if.end, !dbg !4399

if.end:                                           ; preds = %if.then, %entry
  %firstsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 5, !dbg !4403
  %13 = load %class.cModule*, %class.cModule** %firstsubmodp, align 8, !dbg !4403
  %tobool5 = icmp ne %class.cModule* %13, null, !dbg !4403
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !4405

if.then6:                                         ; preds = %if.end
  %14 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4406
  %firstsubmodp7 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 5, !dbg !4407
  store %class.cModule* %14, %class.cModule** %firstsubmodp7, align 8, !dbg !4408
  br label %if.end8, !dbg !4407

if.end8:                                          ; preds = %if.then6, %if.end
  %15 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !4409
  %lastsubmodp9 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 6, !dbg !4410
  store %class.cModule* %15, %class.cModule** %lastsubmodp9, align 8, !dbg !4411
  store %class.cModule* null, %class.cModule** @_ZN7cModule21lastmodulefullpathmodE, align 8, !dbg !4412
  ret void, !dbg !4413
}

; Function Attrs: noinline uwtable
define dso_local %class.cModule* @_ZNK7cModule15getParentModuleEv(%class.cModule* %this) unnamed_addr #0 align 2 !dbg !4414 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4415, metadata !DIExpression()), !dbg !4416
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to %class.cOwnedObject*, !dbg !4417
  %1 = bitcast %class.cOwnedObject* %0 to %class.cObject* (%class.cOwnedObject*)***, !dbg !4417
  %vtable = load %class.cObject* (%class.cOwnedObject*)**, %class.cObject* (%class.cOwnedObject*)*** %1, align 8, !dbg !4417
  %vfn = getelementptr inbounds %class.cObject* (%class.cOwnedObject*)*, %class.cObject* (%class.cOwnedObject*)** %vtable, i64 16, !dbg !4417
  %2 = load %class.cObject* (%class.cOwnedObject*)*, %class.cObject* (%class.cOwnedObject*)** %vfn, align 8, !dbg !4417
  %call = call %class.cObject* %2(%class.cOwnedObject* %0), !dbg !4417
  %3 = icmp eq %class.cObject* %call, null, !dbg !4418
  br i1 %3, label %dynamic_cast.null, label %dynamic_cast.notnull, !dbg !4418

dynamic_cast.notnull:                             ; preds = %entry
  %4 = bitcast %class.cObject* %call to i8*, !dbg !4418
  %5 = call i8* @__dynamic_cast(i8* %4, i8* bitcast (i8** @_ZTI7cObject to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7cModule to i8*), i64 0) #3, !dbg !4418
  %6 = bitcast i8* %5 to %class.cModule*, !dbg !4418
  br label %dynamic_cast.end, !dbg !4418

dynamic_cast.null:                                ; preds = %entry
  br label %dynamic_cast.end, !dbg !4418

dynamic_cast.end:                                 ; preds = %dynamic_cast.null, %dynamic_cast.notnull
  %7 = phi %class.cModule* [ %6, %dynamic_cast.notnull ], [ null, %dynamic_cast.null ], !dbg !4418
  ret %class.cModule* %7, !dbg !4419
}

; Function Attrs: nounwind readonly
declare dso_local i8* @__dynamic_cast(i8*, i8*, i8*, i64) #9

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule7setNameEPKc(%class.cModule* %this, i8* %s) unnamed_addr #0 align 2 !dbg !4420 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %s.addr = alloca i8*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4421, metadata !DIExpression()), !dbg !4422
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !4423, metadata !DIExpression()), !dbg !4424
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to %class.cOwnedObject*, !dbg !4425
  %1 = bitcast %class.cOwnedObject* %0 to %class.cNamedObject*, !dbg !4425
  %2 = load i8*, i8** %s.addr, align 8, !dbg !4426
  call void @_ZN12cNamedObject7setNameEPKc(%class.cNamedObject* %1, i8* %2), !dbg !4425
  call void @_ZN7cModule14updateFullNameEv(%class.cModule* %this1), !dbg !4427
  ret void, !dbg !4428
}

declare dso_local void @_ZN12cNamedObject7setNameEPKc(%class.cNamedObject*, i8*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cModule8isVectorEv(%class.cModule* %this) #5 comdat align 2 !dbg !4429 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4430, metadata !DIExpression()), !dbg !4431
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %vectsize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 10, !dbg !4432
  %0 = load i32, i32* %vectsize, align 4, !dbg !4432
  %cmp = icmp sge i32 %0, 0, !dbg !4433
  ret i1 %cmp, !dbg !4434
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_Z10opp_strlenPKc(i8* %s) #5 comdat !dbg !4435 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  %0 = load i8*, i8** %s.addr, align 8, !dbg !4438
  %tobool = icmp ne i8* %0, null, !dbg !4438
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4438

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !4439
  %call = call i64 @strlen(i8* %1) #9, !dbg !4440
  br label %cond.end, !dbg !4438

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !4438
  %conv = trunc i64 %cond to i32, !dbg !4438
  ret i32 %conv, !dbg !4441
}

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znam(i64) #10

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_Z15opp_appendindexPcj(i8* %s, i32 %i) #5 comdat !dbg !4442 {
entry:
  %s.addr = alloca i8*, align 8
  %i.addr = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !4445, metadata !DIExpression()), !dbg !4446
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !4447, metadata !DIExpression()), !dbg !4448
  br label %while.cond, !dbg !4449

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !4450
  %1 = load i8, i8* %0, align 1, !dbg !4451
  %tobool = icmp ne i8 %1, 0, !dbg !4451
  br i1 %tobool, label %while.body, label %while.end, !dbg !4449

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !4452
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !4452
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !4452
  br label %while.cond, !dbg !4449, !llvm.loop !4453

while.end:                                        ; preds = %while.cond
  %3 = load i8*, i8** %s.addr, align 8, !dbg !4454
  %incdec.ptr1 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4454
  store i8* %incdec.ptr1, i8** %s.addr, align 8, !dbg !4454
  store i8 91, i8* %3, align 1, !dbg !4455
  %4 = load i32, i32* %i.addr, align 4, !dbg !4456
  %cmp = icmp ult i32 %4, 10, !dbg !4458
  br i1 %cmp, label %if.then, label %if.end, !dbg !4459

if.then:                                          ; preds = %while.end
  %5 = load i32, i32* %i.addr, align 4, !dbg !4460
  %add = add i32 48, %5, !dbg !4462
  %conv = trunc i32 %add to i8, !dbg !4463
  %6 = load i8*, i8** %s.addr, align 8, !dbg !4464
  %incdec.ptr2 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !4464
  store i8* %incdec.ptr2, i8** %s.addr, align 8, !dbg !4464
  store i8 %conv, i8* %6, align 1, !dbg !4465
  %7 = load i8*, i8** %s.addr, align 8, !dbg !4466
  %incdec.ptr3 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4466
  store i8* %incdec.ptr3, i8** %s.addr, align 8, !dbg !4466
  store i8 93, i8* %7, align 1, !dbg !4467
  %8 = load i8*, i8** %s.addr, align 8, !dbg !4468
  store i8 0, i8* %8, align 1, !dbg !4469
  br label %return, !dbg !4470

if.end:                                           ; preds = %while.end
  %9 = load i32, i32* %i.addr, align 4, !dbg !4471
  %cmp4 = icmp ult i32 %9, 100, !dbg !4473
  br i1 %cmp4, label %if.then5, label %if.end13, !dbg !4474

if.then5:                                         ; preds = %if.end
  %10 = load i32, i32* %i.addr, align 4, !dbg !4475
  %div = udiv i32 %10, 10, !dbg !4477
  %add6 = add i32 48, %div, !dbg !4478
  %conv7 = trunc i32 %add6 to i8, !dbg !4479
  %11 = load i8*, i8** %s.addr, align 8, !dbg !4480
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !4480
  store i8* %incdec.ptr8, i8** %s.addr, align 8, !dbg !4480
  store i8 %conv7, i8* %11, align 1, !dbg !4481
  %12 = load i32, i32* %i.addr, align 4, !dbg !4482
  %rem = urem i32 %12, 10, !dbg !4483
  %add9 = add i32 48, %rem, !dbg !4484
  %conv10 = trunc i32 %add9 to i8, !dbg !4485
  %13 = load i8*, i8** %s.addr, align 8, !dbg !4486
  %incdec.ptr11 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !4486
  store i8* %incdec.ptr11, i8** %s.addr, align 8, !dbg !4486
  store i8 %conv10, i8* %13, align 1, !dbg !4487
  %14 = load i8*, i8** %s.addr, align 8, !dbg !4488
  %incdec.ptr12 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !4488
  store i8* %incdec.ptr12, i8** %s.addr, align 8, !dbg !4488
  store i8 93, i8* %14, align 1, !dbg !4489
  %15 = load i8*, i8** %s.addr, align 8, !dbg !4490
  store i8 0, i8* %15, align 1, !dbg !4491
  br label %return, !dbg !4492

if.end13:                                         ; preds = %if.end
  %16 = load i8*, i8** %s.addr, align 8, !dbg !4493
  %17 = load i32, i32* %i.addr, align 4, !dbg !4494
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0), i32 %17) #3, !dbg !4495
  br label %return, !dbg !4496

return:                                           ; preds = %if.end13, %if.then5, %if.then
  ret void, !dbg !4496
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK7cModule8getIndexEv(%class.cModule* %this) #5 comdat align 2 !dbg !4497 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %idx = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 9, !dbg !4500
  %0 = load i32, i32* %idx, align 8, !dbg !4500
  ret i32 %0, !dbg !4501
}

; Function Attrs: noinline uwtable
define dso_local i8* @_ZNK7cModule11getFullNameEv(%class.cModule* %this) unnamed_addr #0 align 2 !dbg !4502 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4503, metadata !DIExpression()), !dbg !4504
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %call = call zeroext i1 @_ZNK7cModule8isVectorEv(%class.cModule* %this1), !dbg !4505
  br i1 %call, label %cond.true, label %cond.false, !dbg !4505

cond.true:                                        ; preds = %entry
  %fullname = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 1, !dbg !4506
  %0 = load i8*, i8** %fullname, align 8, !dbg !4506
  br label %cond.end, !dbg !4505

cond.false:                                       ; preds = %entry
  %1 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !4507
  %2 = bitcast %class.cNamedObject* %1 to i8* (%class.cNamedObject*)***, !dbg !4507
  %vtable = load i8* (%class.cNamedObject*)**, i8* (%class.cNamedObject*)*** %2, align 8, !dbg !4507
  %vfn = getelementptr inbounds i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vtable, i64 6, !dbg !4507
  %3 = load i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vfn, align 8, !dbg !4507
  %call2 = call i8* %3(%class.cNamedObject* %1), !dbg !4507
  br label %cond.end, !dbg !4505

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %0, %cond.true ], [ %call2, %cond.false ], !dbg !4505
  ret i8* %cond, !dbg !4508
}

; Function Attrs: noinline uwtable
define dso_local void @_ZNK7cModule11getFullPathB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4509 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %class.cModule*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp8 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp9 = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4510, metadata !DIExpression()), !dbg !4511
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %1 = load %class.cModule*, %class.cModule** @_ZN7cModule21lastmodulefullpathmodE, align 8, !dbg !4512
  %cmp = icmp ne %class.cModule* %1, %this1, !dbg !4514
  br i1 %cmp, label %if.then, label %if.end22, !dbg !4515

if.then:                                          ; preds = %entry
  %2 = bitcast %class.cModule* %this1 to %class.cModule* (%class.cModule*)***, !dbg !4516
  %vtable = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %2, align 8, !dbg !4516
  %vfn = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable, i64 37, !dbg !4516
  %3 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn, align 8, !dbg !4516
  %call = call %class.cModule* %3(%class.cModule* %this1), !dbg !4516
  %cmp2 = icmp eq %class.cModule* %call, null, !dbg !4519
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4520

if.then3:                                         ; preds = %if.then
  %4 = bitcast %class.cModule* %this1 to i8* (%class.cModule*)***, !dbg !4521
  %vtable4 = load i8* (%class.cModule*)**, i8* (%class.cModule*)*** %4, align 8, !dbg !4521
  %vfn5 = getelementptr inbounds i8* (%class.cModule*)*, i8* (%class.cModule*)** %vtable4, i64 7, !dbg !4521
  %5 = load i8* (%class.cModule*)*, i8* (%class.cModule*)** %vfn5, align 8, !dbg !4521
  %call6 = call i8* %5(%class.cModule* %this1), !dbg !4521
  %call7 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* @_ZN7cModule18lastmodulefullpathB5cxx11E, i8* %call6), !dbg !4522
  br label %if.end, !dbg !4523

if.else:                                          ; preds = %if.then
  %6 = bitcast %class.cModule* %this1 to %class.cModule* (%class.cModule*)***, !dbg !4524
  %vtable10 = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %6, align 8, !dbg !4524
  %vfn11 = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable10, i64 37, !dbg !4524
  %7 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn11, align 8, !dbg !4524
  %call12 = call %class.cModule* %7(%class.cModule* %this1), !dbg !4524
  %8 = bitcast %class.cModule* %call12 to void (%"class.std::__cxx11::basic_string"*, %class.cModule*)***, !dbg !4525
  %vtable13 = load void (%"class.std::__cxx11::basic_string"*, %class.cModule*)**, void (%"class.std::__cxx11::basic_string"*, %class.cModule*)*** %8, align 8, !dbg !4525
  %vfn14 = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %class.cModule*)*, void (%"class.std::__cxx11::basic_string"*, %class.cModule*)** %vtable13, i64 8, !dbg !4525
  %9 = load void (%"class.std::__cxx11::basic_string"*, %class.cModule*)*, void (%"class.std::__cxx11::basic_string"*, %class.cModule*)** %vfn14, align 8, !dbg !4525
  call void %9(%"class.std::__cxx11::basic_string"* sret %ref.tmp9, %class.cModule* %call12), !dbg !4525
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* sret %ref.tmp8, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !4526

invoke.cont:                                      ; preds = %if.else
  %10 = bitcast %class.cModule* %this1 to i8* (%class.cModule*)***, !dbg !4527
  %vtable15 = load i8* (%class.cModule*)**, i8* (%class.cModule*)*** %10, align 8, !dbg !4527
  %vfn16 = getelementptr inbounds i8* (%class.cModule*)*, i8* (%class.cModule*)** %vtable15, i64 7, !dbg !4527
  %11 = load i8* (%class.cModule*)*, i8* (%class.cModule*)** %vfn16, align 8, !dbg !4527
  %call19 = invoke i8* %11(%class.cModule* %this1)
          to label %invoke.cont18 unwind label %lpad17, !dbg !4527

invoke.cont18:                                    ; preds = %invoke.cont
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* sret %ref.tmp, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp8, i8* %call19)
          to label %invoke.cont20 unwind label %lpad17, !dbg !4528

invoke.cont20:                                    ; preds = %invoke.cont18
  %call21 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(%"class.std::__cxx11::basic_string"* @_ZN7cModule18lastmodulefullpathB5cxx11E, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp) #3, !dbg !4529
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp) #3, !dbg !4530
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp8) #3, !dbg !4530
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp9) #3, !dbg !4530
  br label %if.end

lpad:                                             ; preds = %if.else
  %12 = landingpad { i8*, i32 }
          cleanup, !dbg !4531
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !4531
  store i8* %13, i8** %exn.slot, align 8, !dbg !4531
  %14 = extractvalue { i8*, i32 } %12, 1, !dbg !4531
  store i32 %14, i32* %ehselector.slot, align 4, !dbg !4531
  br label %ehcleanup, !dbg !4531

lpad17:                                           ; preds = %invoke.cont18, %invoke.cont
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !4531
  %16 = extractvalue { i8*, i32 } %15, 0, !dbg !4531
  store i8* %16, i8** %exn.slot, align 8, !dbg !4531
  %17 = extractvalue { i8*, i32 } %15, 1, !dbg !4531
  store i32 %17, i32* %ehselector.slot, align 4, !dbg !4531
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp8) #3, !dbg !4530
  br label %ehcleanup, !dbg !4530

ehcleanup:                                        ; preds = %lpad17, %lpad
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp9) #3, !dbg !4530
  br label %eh.resume, !dbg !4530

if.end:                                           ; preds = %invoke.cont20, %if.then3
  store %class.cModule* %this1, %class.cModule** @_ZN7cModule21lastmodulefullpathmodE, align 8, !dbg !4532
  br label %if.end22, !dbg !4533

if.end22:                                         ; preds = %if.end, %entry
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"* %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) @_ZN7cModule18lastmodulefullpathB5cxx11E), !dbg !4534
  ret void, !dbg !4535

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4530
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4530
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4530
  %lpad.val23 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4530
  resume { i8*, i32 } %lpad.val23, !dbg !4530
}

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"*, i8*) #1

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %__lhs, i8* %__rhs) #0 comdat !dbg !4536 {
entry:
  %result.ptr = alloca i8*, align 8
  %__lhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__rhs.addr = alloca i8*, align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %__lhs, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %__lhs.addr, metadata !4597, metadata !DIExpression()), !dbg !4598
  store i8* %__rhs, i8** %__rhs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__rhs.addr, metadata !4599, metadata !DIExpression()), !dbg !4600
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !dbg !4601
  %2 = load i8*, i8** %__rhs.addr, align 8, !dbg !4602
  %call = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* %1, i8* %2), !dbg !4603
  %call1 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %call) #3, !dbg !4604
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %call1) #3, !dbg !4604
  ret void, !dbg !4605
}

; Function Attrs: nounwind
declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #2

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i1 @_ZNK7cModule8isSimpleEv(%class.cModule* %this) unnamed_addr #5 align 2 !dbg !4606 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4607, metadata !DIExpression()), !dbg !4608
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = icmp eq %class.cModule* %this1, null, !dbg !4609
  br i1 %0, label %dynamic_cast.null, label %dynamic_cast.notnull, !dbg !4609

dynamic_cast.notnull:                             ; preds = %entry
  %1 = bitcast %class.cModule* %this1 to i8*, !dbg !4609
  %2 = call i8* @__dynamic_cast(i8* %1, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI7cModule to i8*), i8* bitcast (i8** @_ZTI13cSimpleModule to i8*), i64 0) #3, !dbg !4609
  %3 = bitcast i8* %2 to %class.cSimpleModule*, !dbg !4609
  br label %dynamic_cast.end, !dbg !4609

dynamic_cast.null:                                ; preds = %entry
  br label %dynamic_cast.end, !dbg !4609

dynamic_cast.end:                                 ; preds = %dynamic_cast.null, %dynamic_cast.notnull
  %4 = phi %class.cSimpleModule* [ %3, %dynamic_cast.notnull ], [ null, %dynamic_cast.null ], !dbg !4609
  %cmp = icmp ne %class.cSimpleModule* %4, null, !dbg !4610
  ret i1 %cmp, !dbg !4611
}

; Function Attrs: noinline uwtable
define dso_local %class.cProperties* @_ZNK7cModule13getPropertiesEv(%class.cModule* %this) unnamed_addr #0 align 2 !dbg !4612 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %parent = alloca %class.cModule*, align 8
  %type = alloca %class.cComponentType*, align 8
  %props = alloca %class.cProperties*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4613, metadata !DIExpression()), !dbg !4614
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %parent, metadata !4615, metadata !DIExpression()), !dbg !4616
  %0 = bitcast %class.cModule* %this1 to %class.cModule* (%class.cModule*)***, !dbg !4617
  %vtable = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %0, align 8, !dbg !4617
  %vfn = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable, i64 37, !dbg !4617
  %1 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn, align 8, !dbg !4617
  %call = call %class.cModule* %1(%class.cModule* %this1), !dbg !4617
  store %class.cModule* %call, %class.cModule** %parent, align 8, !dbg !4616
  call void @llvm.dbg.declare(metadata %class.cComponentType** %type, metadata !4618, metadata !DIExpression()), !dbg !4621
  %2 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !4622
  %call2 = call %class.cComponentType* @_ZNK10cComponent16getComponentTypeEv(%class.cComponent* %2), !dbg !4622
  store %class.cComponentType* %call2, %class.cComponentType** %type, align 8, !dbg !4621
  call void @llvm.dbg.declare(metadata %class.cProperties** %props, metadata !4623, metadata !DIExpression()), !dbg !4624
  %3 = load %class.cModule*, %class.cModule** %parent, align 8, !dbg !4625
  %tobool = icmp ne %class.cModule* %3, null, !dbg !4625
  br i1 %tobool, label %if.then, label %if.else, !dbg !4627

if.then:                                          ; preds = %entry
  %4 = load %class.cModule*, %class.cModule** %parent, align 8, !dbg !4628
  %5 = bitcast %class.cModule* %4 to %class.cComponent*, !dbg !4629
  %call3 = call %class.cComponentType* @_ZNK10cComponent16getComponentTypeEv(%class.cComponent* %5), !dbg !4629
  %6 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !4630
  %7 = bitcast %class.cNamedObject* %6 to i8* (%class.cNamedObject*)***, !dbg !4630
  %vtable4 = load i8* (%class.cNamedObject*)**, i8* (%class.cNamedObject*)*** %7, align 8, !dbg !4630
  %vfn5 = getelementptr inbounds i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vtable4, i64 6, !dbg !4630
  %8 = load i8* (%class.cNamedObject*)*, i8* (%class.cNamedObject*)** %vfn5, align 8, !dbg !4630
  %call6 = call i8* %8(%class.cNamedObject* %6), !dbg !4630
  %9 = load %class.cComponentType*, %class.cComponentType** %type, align 8, !dbg !4631
  %10 = bitcast %class.cComponentType* %9 to i8* (%class.cComponentType*)***, !dbg !4632
  %vtable7 = load i8* (%class.cComponentType*)**, i8* (%class.cComponentType*)*** %10, align 8, !dbg !4632
  %vfn8 = getelementptr inbounds i8* (%class.cComponentType*)*, i8* (%class.cComponentType*)** %vtable7, i64 7, !dbg !4632
  %11 = load i8* (%class.cComponentType*)*, i8* (%class.cComponentType*)** %vfn8, align 8, !dbg !4632
  %call9 = call i8* %11(%class.cComponentType* %9), !dbg !4632
  %12 = bitcast %class.cComponentType* %call3 to %class.cProperties* (%class.cComponentType*, i8*, i8*)***, !dbg !4633
  %vtable10 = load %class.cProperties* (%class.cComponentType*, i8*, i8*)**, %class.cProperties* (%class.cComponentType*, i8*, i8*)*** %12, align 8, !dbg !4633
  %vfn11 = getelementptr inbounds %class.cProperties* (%class.cComponentType*, i8*, i8*)*, %class.cProperties* (%class.cComponentType*, i8*, i8*)** %vtable10, i64 27, !dbg !4633
  %13 = load %class.cProperties* (%class.cComponentType*, i8*, i8*)*, %class.cProperties* (%class.cComponentType*, i8*, i8*)** %vfn11, align 8, !dbg !4633
  %call12 = call %class.cProperties* %13(%class.cComponentType* %call3, i8* %call6, i8* %call9), !dbg !4633
  store %class.cProperties* %call12, %class.cProperties** %props, align 8, !dbg !4634
  br label %if.end, !dbg !4635

if.else:                                          ; preds = %entry
  %14 = load %class.cComponentType*, %class.cComponentType** %type, align 8, !dbg !4636
  %15 = bitcast %class.cComponentType* %14 to %class.cProperties* (%class.cComponentType*)***, !dbg !4637
  %vtable13 = load %class.cProperties* (%class.cComponentType*)**, %class.cProperties* (%class.cComponentType*)*** %15, align 8, !dbg !4637
  %vfn14 = getelementptr inbounds %class.cProperties* (%class.cComponentType*)*, %class.cProperties* (%class.cComponentType*)** %vtable13, i64 24, !dbg !4637
  %16 = load %class.cProperties* (%class.cComponentType*)*, %class.cProperties* (%class.cComponentType*)** %vfn14, align 8, !dbg !4637
  %call15 = call %class.cProperties* %16(%class.cComponentType* %14), !dbg !4637
  store %class.cProperties* %call15, %class.cProperties** %props, align 8, !dbg !4638
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %class.cProperties*, %class.cProperties** %props, align 8, !dbg !4639
  ret %class.cProperties* %17, !dbg !4640
}

declare dso_local %class.cComponentType* @_ZNK10cComponent16getComponentTypeEv(%class.cComponent*) #1

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule16createGateObjectEN5cGate4TypeE(%class.cModule* %this, i32 %0) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4641 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  store i32 %0, i32* %.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %call = call i8* @_Znwm(i64 48) #19, !dbg !4646
  %1 = bitcast i8* %call to %class.cGate*, !dbg !4646
  invoke void @_ZN5cGateC1Ev(%class.cGate* %1)
          to label %invoke.cont unwind label %lpad, !dbg !4647

invoke.cont:                                      ; preds = %entry
  ret %class.cGate* %1, !dbg !4648

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup, !dbg !4649
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !4649
  store i8* %3, i8** %exn.slot, align 8, !dbg !4649
  %4 = extractvalue { i8*, i32 } %2, 1, !dbg !4649
  store i32 %4, i32* %ehselector.slot, align 4, !dbg !4649
  call void @_ZdlPv(i8* %call) #17, !dbg !4646
  br label %eh.resume, !dbg !4646

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4646
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4646
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4646
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4646
  resume { i8*, i32 } %lpad.val2, !dbg !4646
}

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znwm(i64) #10

declare dso_local void @_ZN5cGateC1Ev(%class.cGate*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #6

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.3() #0 section ".text.startup" !dbg !4650 {
entry:
  call void @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::set.23"* @_ZN7cModule8namePoolE) #3, !dbg !4651
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::set.23"*)* @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EED2Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::set.23", %"class.std::set.23"* @_ZN7cModule8namePoolE, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i8* @__dso_handle) #3, !dbg !4651
  ret void, !dbg !4651
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::set.23"* %this) unnamed_addr #5 comdat align 2 !dbg !4652 {
entry:
  %this.addr = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %this, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::set.23"** %this.addr, metadata !4653, metadata !DIExpression()), !dbg !4655
  %this1 = load %"class.std::set.23"*, %"class.std::set.23"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %this1, i32 0, i32 0, !dbg !4656
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::_Rb_tree.24"* %_M_t) #3, !dbg !4656
  ret void, !dbg !4657
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EED2Ev(%"class.std::set.23"* %this) unnamed_addr #5 comdat align 2 !dbg !4658 {
entry:
  %this.addr = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %this, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::set.23"** %this.addr, metadata !4659, metadata !DIExpression()), !dbg !4660
  %this1 = load %"class.std::set.23"*, %"class.std::set.23"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %this1, i32 0, i32 0, !dbg !4661
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.24"* %_M_t) #3, !dbg !4661
  ret void, !dbg !4663
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule17disposeGateObjectEP5cGateb(%class.cModule* %this, %class.cGate* %gate, i1 zeroext %checkConnected) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4664 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gate.addr = alloca %class.cGate*, align 8
  %checkConnected.addr = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4665, metadata !DIExpression()), !dbg !4666
  store %class.cGate* %gate, %class.cGate** %gate.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %gate.addr, metadata !4667, metadata !DIExpression()), !dbg !4668
  %frombool = zext i1 %checkConnected to i8
  store i8 %frombool, i8* %checkConnected.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %checkConnected.addr, metadata !4669, metadata !DIExpression()), !dbg !4670
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4671
  %tobool = icmp ne %class.cGate* %0, null, !dbg !4671
  br i1 %tobool, label %if.then, label %if.end16, !dbg !4673

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %checkConnected.addr, align 1, !dbg !4674
  %tobool2 = trunc i8 %1 to i1, !dbg !4674
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !4677

land.lhs.true:                                    ; preds = %if.then
  %2 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4678
  %call = call %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %2), !dbg !4679
  %tobool3 = icmp ne %class.cGate* %call, null, !dbg !4678
  br i1 %tobool3, label %if.then6, label %lor.lhs.false, !dbg !4680

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4681
  %call4 = call %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %3), !dbg !4682
  %tobool5 = icmp ne %class.cGate* %call4, null, !dbg !4681
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !4683

if.then6:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !4684
  %4 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !4684
  %5 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !4685
  %6 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4686
  %7 = bitcast %class.cGate* %6 to i8* (%class.cGate*)***, !dbg !4687
  %vtable = load i8* (%class.cGate*)**, i8* (%class.cGate*)*** %7, align 8, !dbg !4687
  %vfn = getelementptr inbounds i8* (%class.cGate*)*, i8* (%class.cGate*)** %vtable, i64 7, !dbg !4687
  %8 = load i8* (%class.cGate*)*, i8* (%class.cGate*)** %vfn, align 8, !dbg !4687
  %call7 = invoke i8* %8(%class.cGate* %6)
          to label %invoke.cont unwind label %lpad, !dbg !4687

invoke.cont:                                      ; preds = %if.then6
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %4, %class.cObject* %5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i8* %call7)
          to label %invoke.cont8 unwind label %lpad, !dbg !4688

invoke.cont8:                                     ; preds = %invoke.cont
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !4684
  unreachable, !dbg !4684

lpad:                                             ; preds = %invoke.cont, %if.then6
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4689
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !4689
  store i8* %10, i8** %exn.slot, align 8, !dbg !4689
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !4689
  store i32 %11, i32* %ehselector.slot, align 4, !dbg !4689
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !4684
  br label %eh.resume, !dbg !4684

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %call9 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !4690
  %suppress_notifications = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call9, i32 0, i32 2, !dbg !4690
  %12 = load i8, i8* %suppress_notifications, align 1, !dbg !4690
  %tobool10 = trunc i8 %12 to i1, !dbg !4690
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !4690

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4690

cond.false:                                       ; preds = %if.end
  %call11 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !4690
  %13 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4691
  %14 = bitcast %class.cEnvir* %call11 to void (%class.cEnvir*, %class.cGate*)***, !dbg !4692
  %vtable12 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %14, align 8, !dbg !4692
  %vfn13 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable12, i64 22, !dbg !4692
  %15 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn13, align 8, !dbg !4692
  call void %15(%class.cEnvir* %call11, %class.cGate* %13), !dbg !4692
  br label %cond.end, !dbg !4690

cond.end:                                         ; preds = %cond.false, %cond.true
  %16 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4693
  %isnull = icmp eq %class.cGate* %16, null, !dbg !4694
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !4694

delete.notnull:                                   ; preds = %cond.end
  %17 = bitcast %class.cGate* %16 to void (%class.cGate*)***, !dbg !4694
  %vtable14 = load void (%class.cGate*)**, void (%class.cGate*)*** %17, align 8, !dbg !4694
  %vfn15 = getelementptr inbounds void (%class.cGate*)*, void (%class.cGate*)** %vtable14, i64 4, !dbg !4694
  %18 = load void (%class.cGate*)*, void (%class.cGate*)** %vfn15, align 8, !dbg !4694
  call void %18(%class.cGate* %16) #3, !dbg !4694
  br label %delete.end, !dbg !4694

delete.end:                                       ; preds = %delete.notnull, %cond.end
  br label %if.end16, !dbg !4695

if.end16:                                         ; preds = %delete.end, %entry
  ret void, !dbg !4696

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4684
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4684
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4684
  %lpad.val17 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4684
  resume { i8*, i32 } %lpad.val17, !dbg !4684
}

declare dso_local void @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError*, %class.cObject*, i8*, ...) unnamed_addr #1

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule15disposeGateDescEPN5cGate4DescEb(%class.cModule* %this, %"struct.cGate::Desc"* %desc, i1 zeroext %checkConnected) #0 align 2 !dbg !4697 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %desc.addr = alloca %"struct.cGate::Desc"*, align 8
  %checkConnected.addr = alloca i8, align 1
  %j = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4698, metadata !DIExpression()), !dbg !4699
  store %"struct.cGate::Desc"* %desc, %"struct.cGate::Desc"** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc.addr, metadata !4700, metadata !DIExpression()), !dbg !4701
  %frombool = zext i1 %checkConnected to i8
  store i8 %frombool, i8* %checkConnected.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %checkConnected.addr, metadata !4702, metadata !DIExpression()), !dbg !4703
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4704
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %0, i32 0, i32 1, !dbg !4706
  %1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !4706
  %tobool = icmp ne %"struct.cGate::Name"* %1, null, !dbg !4704
  br i1 %tobool, label %if.then, label %if.end24, !dbg !4707

if.then:                                          ; preds = %entry
  %2 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4708
  %call = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %2), !dbg !4711
  br i1 %call, label %if.else, label %if.then2, !dbg !4712

if.then2:                                         ; preds = %if.then
  %3 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4713
  %4 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %3, i32 0, i32 3, !dbg !4715
  %inputgate = bitcast %union.anon.8* %4 to %class.cGate**, !dbg !4715
  %5 = load %class.cGate*, %class.cGate** %inputgate, align 8, !dbg !4715
  %6 = load i8, i8* %checkConnected.addr, align 1, !dbg !4716
  %tobool3 = trunc i8 %6 to i1, !dbg !4716
  call void @_ZN7cModule17disposeGateObjectEP5cGateb(%class.cModule* %this1, %class.cGate* %5, i1 zeroext %tobool3), !dbg !4717
  %7 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4718
  %8 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %7, i32 0, i32 4, !dbg !4719
  %outputgate = bitcast %union.anon.9* %8 to %class.cGate**, !dbg !4719
  %9 = load %class.cGate*, %class.cGate** %outputgate, align 8, !dbg !4719
  %10 = load i8, i8* %checkConnected.addr, align 1, !dbg !4720
  %tobool4 = trunc i8 %10 to i1, !dbg !4720
  call void @_ZN7cModule17disposeGateObjectEP5cGateb(%class.cModule* %this1, %class.cGate* %9, i1 zeroext %tobool4), !dbg !4721
  br label %if.end22, !dbg !4722

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4723, metadata !DIExpression()), !dbg !4726
  store i32 0, i32* %j, align 4, !dbg !4726
  br label %for.cond, !dbg !4727

for.cond:                                         ; preds = %for.inc, %if.else
  %11 = load i32, i32* %j, align 4, !dbg !4728
  %12 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4730
  %call5 = call i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %12), !dbg !4731
  %cmp = icmp slt i32 %11, %call5, !dbg !4732
  br i1 %cmp, label %for.body, label %for.end, !dbg !4733

for.body:                                         ; preds = %for.cond
  %13 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4734
  %14 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %13, i32 0, i32 3, !dbg !4737
  %inputgatev = bitcast %union.anon.8* %14 to %class.cGate***, !dbg !4737
  %15 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !4737
  %tobool6 = icmp ne %class.cGate** %15, null, !dbg !4734
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !4738

if.then7:                                         ; preds = %for.body
  %16 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4739
  %17 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %16, i32 0, i32 3, !dbg !4740
  %inputgatev8 = bitcast %union.anon.8* %17 to %class.cGate***, !dbg !4740
  %18 = load %class.cGate**, %class.cGate*** %inputgatev8, align 8, !dbg !4740
  %19 = load i32, i32* %j, align 4, !dbg !4741
  %idxprom = sext i32 %19 to i64, !dbg !4739
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %18, i64 %idxprom, !dbg !4739
  %20 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !4739
  %21 = load i8, i8* %checkConnected.addr, align 1, !dbg !4742
  %tobool9 = trunc i8 %21 to i1, !dbg !4742
  call void @_ZN7cModule17disposeGateObjectEP5cGateb(%class.cModule* %this1, %class.cGate* %20, i1 zeroext %tobool9), !dbg !4743
  br label %if.end, !dbg !4743

if.end:                                           ; preds = %if.then7, %for.body
  %22 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4744
  %23 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %22, i32 0, i32 4, !dbg !4746
  %outputgatev = bitcast %union.anon.9* %23 to %class.cGate***, !dbg !4746
  %24 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !4746
  %tobool10 = icmp ne %class.cGate** %24, null, !dbg !4744
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !4747

if.then11:                                        ; preds = %if.end
  %25 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4748
  %26 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %25, i32 0, i32 4, !dbg !4749
  %outputgatev12 = bitcast %union.anon.9* %26 to %class.cGate***, !dbg !4749
  %27 = load %class.cGate**, %class.cGate*** %outputgatev12, align 8, !dbg !4749
  %28 = load i32, i32* %j, align 4, !dbg !4750
  %idxprom13 = sext i32 %28 to i64, !dbg !4748
  %arrayidx14 = getelementptr inbounds %class.cGate*, %class.cGate** %27, i64 %idxprom13, !dbg !4748
  %29 = load %class.cGate*, %class.cGate** %arrayidx14, align 8, !dbg !4748
  %30 = load i8, i8* %checkConnected.addr, align 1, !dbg !4751
  %tobool15 = trunc i8 %30 to i1, !dbg !4751
  call void @_ZN7cModule17disposeGateObjectEP5cGateb(%class.cModule* %this1, %class.cGate* %29, i1 zeroext %tobool15), !dbg !4752
  br label %if.end16, !dbg !4752

if.end16:                                         ; preds = %if.then11, %if.end
  br label %for.inc, !dbg !4753

for.inc:                                          ; preds = %if.end16
  %31 = load i32, i32* %j, align 4, !dbg !4754
  %inc = add nsw i32 %31, 1, !dbg !4754
  store i32 %inc, i32* %j, align 4, !dbg !4754
  br label %for.cond, !dbg !4755, !llvm.loop !4756

for.end:                                          ; preds = %for.cond
  %32 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4758
  %33 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %32, i32 0, i32 3, !dbg !4759
  %inputgatev17 = bitcast %union.anon.8* %33 to %class.cGate***, !dbg !4759
  %34 = load %class.cGate**, %class.cGate*** %inputgatev17, align 8, !dbg !4759
  %isnull = icmp eq %class.cGate** %34, null, !dbg !4760
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !4760

delete.notnull:                                   ; preds = %for.end
  %35 = bitcast %class.cGate** %34 to i8*, !dbg !4760
  call void @_ZdaPv(i8* %35) #17, !dbg !4760
  br label %delete.end, !dbg !4760

delete.end:                                       ; preds = %delete.notnull, %for.end
  %36 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4761
  %37 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %36, i32 0, i32 4, !dbg !4762
  %outputgatev18 = bitcast %union.anon.9* %37 to %class.cGate***, !dbg !4762
  %38 = load %class.cGate**, %class.cGate*** %outputgatev18, align 8, !dbg !4762
  %isnull19 = icmp eq %class.cGate** %38, null, !dbg !4763
  br i1 %isnull19, label %delete.end21, label %delete.notnull20, !dbg !4763

delete.notnull20:                                 ; preds = %delete.end
  %39 = bitcast %class.cGate** %38 to i8*, !dbg !4763
  call void @_ZdaPv(i8* %39) #17, !dbg !4763
  br label %delete.end21, !dbg !4763

delete.end21:                                     ; preds = %delete.notnull20, %delete.end
  br label %if.end22

if.end22:                                         ; preds = %delete.end21, %if.then2
  %40 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc.addr, align 8, !dbg !4764
  %namep23 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %40, i32 0, i32 1, !dbg !4765
  store %"struct.cGate::Name"* null, %"struct.cGate::Name"** %namep23, align 8, !dbg !4766
  br label %if.end24, !dbg !4767

if.end24:                                         ; preds = %if.end22, %entry
  ret void, !dbg !4768
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %this) #5 comdat align 2 !dbg !4769 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !4770, metadata !DIExpression()), !dbg !4772
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 2, !dbg !4773
  %0 = load i32, i32* %size, align 8, !dbg !4773
  %cmp = icmp sge i32 %0, 0, !dbg !4774
  ret i1 %cmp, !dbg !4775
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %this) #5 comdat align 2 !dbg !4776 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !4777, metadata !DIExpression()), !dbg !4778
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 2, !dbg !4779
  %0 = load i32, i32* %size, align 8, !dbg !4779
  %cmp = icmp sge i32 %0, 0, !dbg !4780
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4779

cond.true:                                        ; preds = %entry
  %size2 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 2, !dbg !4781
  %1 = load i32, i32* %size2, align 8, !dbg !4781
  br label %cond.end, !dbg !4779

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4779

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 1, %cond.false ], !dbg !4779
  ret i32 %cond, !dbg !4782
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule14clearNamePoolsEv() #0 align 2 !dbg !4783 {
entry:
  call void @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5clearEv(%"class.std::set.23"* @_ZN7cModule8namePoolE) #3, !dbg !4784
  call void @_ZN5cGate17clearFullnamePoolEv(), !dbg !4785
  ret void, !dbg !4786
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5clearEv(%"class.std::set.23"* %this) #5 comdat align 2 !dbg !4787 {
entry:
  %this.addr = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %this, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::set.23"** %this.addr, metadata !4788, metadata !DIExpression()), !dbg !4789
  %this1 = load %"class.std::set.23"*, %"class.std::set.23"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %this1, i32 0, i32 0, !dbg !4790
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv(%"class.std::_Rb_tree.24"* %_M_t) #3, !dbg !4791
  ret void, !dbg !4792
}

declare dso_local void @_ZN5cGate17clearFullnamePoolEv() #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE(%class.cModule* %this, %class.cGate* %gate, %"struct.cGate::Desc"* %newvec) #5 align 2 !dbg !4793 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gate.addr = alloca %class.cGate*, align 8
  %newvec.addr = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4794, metadata !DIExpression()), !dbg !4795
  store %class.cGate* %gate, %class.cGate** %gate.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %gate.addr, metadata !4796, metadata !DIExpression()), !dbg !4797
  store %"struct.cGate::Desc"* %newvec, %"struct.cGate::Desc"** %newvec.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %newvec.addr, metadata !4798, metadata !DIExpression()), !dbg !4799
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4800
  %tobool = icmp ne %class.cGate* %0, null, !dbg !4800
  br i1 %tobool, label %if.then, label %if.end, !dbg !4802

if.then:                                          ; preds = %entry
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newvec.addr, align 8, !dbg !4803
  %2 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4805
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %2, i32 0, i32 1, !dbg !4806
  %3 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4806
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4807
  %4 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !4807
  %sub.ptr.lhs.cast = ptrtoint %"struct.cGate::Desc"* %3 to i64, !dbg !4808
  %sub.ptr.rhs.cast = ptrtoint %"struct.cGate::Desc"* %4 to i64, !dbg !4808
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4808
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !4808
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %1, i64 %sub.ptr.div, !dbg !4809
  %5 = load %class.cGate*, %class.cGate** %gate.addr, align 8, !dbg !4810
  %desc2 = getelementptr inbounds %class.cGate, %class.cGate* %5, i32 0, i32 1, !dbg !4811
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc2, align 8, !dbg !4812
  br label %if.end, !dbg !4813

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4814
}

; Function Attrs: noinline uwtable
define dso_local %"struct.cGate::Desc"* @_ZN7cModule11addGateDescEPKcN5cGate4TypeEb(%class.cModule* %this, i8* %gatename, i32 %type, i1 zeroext %isVector) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !4815 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %isVector.addr = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %newv = alloca %"struct.cGate::Desc"*, align 8
  %i = alloca i32, align 4
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %j = alloca i32, align 4
  %newDesc = alloca %"struct.cGate::Desc"*, align 8
  %key = alloca %"struct.cGate::Name", align 8
  %it = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %ref.tmp = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %ref.tmp57 = alloca %"struct.std::pair", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  %frombool = zext i1 %isVector to i8
  store i8 %frombool, i8* %isVector.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isVector.addr, metadata !4822, metadata !DIExpression()), !dbg !4823
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load i8, i8* %isVector.addr, align 1, !dbg !4824
  %tobool = trunc i8 %0 to i1, !dbg !4824
  br i1 %tobool, label %if.then, label %if.else, !dbg !4826

if.then:                                          ; preds = %entry
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4827
  %1 = load i32, i32* %descvSize, align 8, !dbg !4827
  %cmp = icmp sge i32 %1, 2046, !dbg !4830
  br i1 %cmp, label %if.then2, label %if.end, !dbg !4831

if.then2:                                         ; preds = %if.then
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !4832
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !4832
  %3 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !4833
  %4 = load i8*, i8** %gatename.addr, align 8, !dbg !4834
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i8* %4, i32 2046)
          to label %invoke.cont unwind label %lpad, !dbg !4835

invoke.cont:                                      ; preds = %if.then2
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !4832
  unreachable, !dbg !4832

lpad:                                             ; preds = %if.then2
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !4836
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !4836
  store i8* %6, i8** %exn.slot, align 8, !dbg !4836
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !4836
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !4836
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !4832
  br label %eh.resume, !dbg !4832

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !4837

if.else:                                          ; preds = %entry
  %descvSize3 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4838
  %8 = load i32, i32* %descvSize3, align 8, !dbg !4838
  %cmp4 = icmp sge i32 %8, 524286, !dbg !4841
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !4842

if.then5:                                         ; preds = %if.else
  %exception6 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !4843
  %9 = bitcast i8* %exception6 to %class.cRuntimeError*, !dbg !4843
  %10 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !4844
  %11 = load i8*, i8** %gatename.addr, align 8, !dbg !4845
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %9, %class.cObject* %10, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0), i8* %11, i32 524286)
          to label %invoke.cont8 unwind label %lpad7, !dbg !4846

invoke.cont8:                                     ; preds = %if.then5
  call void @__cxa_throw(i8* %exception6, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !4843
  unreachable, !dbg !4843

lpad7:                                            ; preds = %if.then5
  %12 = landingpad { i8*, i32 }
          cleanup, !dbg !4847
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !4847
  store i8* %13, i8** %exn.slot, align 8, !dbg !4847
  %14 = extractvalue { i8*, i32 } %12, 1, !dbg !4847
  store i32 %14, i32* %ehselector.slot, align 4, !dbg !4847
  call void @__cxa_free_exception(i8* %exception6) #3, !dbg !4843
  br label %eh.resume, !dbg !4843

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %newv, metadata !4848, metadata !DIExpression()), !dbg !4849
  %descvSize11 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4850
  %15 = load i32, i32* %descvSize11, align 8, !dbg !4850
  %add = add nsw i32 %15, 1, !dbg !4851
  %conv = sext i32 %add to i64, !dbg !4850
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 40), !dbg !4852
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !4852
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !4852
  %19 = select i1 %17, i64 -1, i64 %18, !dbg !4852
  %call = call i8* @_Znam(i64 %19) #19, !dbg !4852
  %20 = bitcast i8* %call to %"struct.cGate::Desc"*, !dbg !4852
  %isempty = icmp eq i64 %conv, 0, !dbg !4852
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop, !dbg !4852

new.ctorloop:                                     ; preds = %if.end10
  %arrayctor.end = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %20, i64 %conv, !dbg !4852
  br label %arrayctor.loop, !dbg !4852

arrayctor.loop:                                   ; preds = %invoke.cont13, %new.ctorloop
  %arrayctor.cur = phi %"struct.cGate::Desc"* [ %20, %new.ctorloop ], [ %arrayctor.next, %invoke.cont13 ], !dbg !4852
  invoke void @_ZN5cGate4DescC2Ev(%"struct.cGate::Desc"* %arrayctor.cur)
          to label %invoke.cont13 unwind label %lpad12, !dbg !4852

invoke.cont13:                                    ; preds = %arrayctor.loop
  %arrayctor.next = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %arrayctor.cur, i64 1, !dbg !4852
  %arrayctor.done = icmp eq %"struct.cGate::Desc"* %arrayctor.next, %arrayctor.end, !dbg !4852
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop, !dbg !4852

arrayctor.cont:                                   ; preds = %if.end10, %invoke.cont13
  store %"struct.cGate::Desc"* %20, %"struct.cGate::Desc"** %newv, align 8, !dbg !4849
  %21 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newv, align 8, !dbg !4853
  %22 = bitcast %"struct.cGate::Desc"* %21 to i8*, !dbg !4854
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4855
  %23 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !4855
  %24 = bitcast %"struct.cGate::Desc"* %23 to i8*, !dbg !4854
  %descvSize14 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4856
  %25 = load i32, i32* %descvSize14, align 8, !dbg !4856
  %conv15 = sext i32 %25 to i64, !dbg !4856
  %mul = mul i64 %conv15, 40, !dbg !4857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %24, i64 %mul, i1 false), !dbg !4854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4858, metadata !DIExpression()), !dbg !4860
  store i32 0, i32* %i, align 4, !dbg !4860
  br label %for.cond, !dbg !4861

for.cond:                                         ; preds = %for.inc40, %arrayctor.cont
  %26 = load i32, i32* %i, align 4, !dbg !4862
  %descvSize16 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4864
  %27 = load i32, i32* %descvSize16, align 8, !dbg !4864
  %cmp17 = icmp slt i32 %26, %27, !dbg !4865
  br i1 %cmp17, label %for.body, label %for.end42, !dbg !4866

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !4867, metadata !DIExpression()), !dbg !4869
  %descv18 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4870
  %28 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv18, align 8, !dbg !4870
  %29 = load i32, i32* %i, align 4, !dbg !4871
  %idx.ext = sext i32 %29 to i64, !dbg !4872
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %28, i64 %idx.ext, !dbg !4872
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !4869
  %30 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4873
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %30, i32 0, i32 1, !dbg !4875
  %31 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !4875
  %tobool19 = icmp ne %"struct.cGate::Name"* %31, null, !dbg !4873
  br i1 %tobool19, label %if.then20, label %if.end39, !dbg !4876

if.then20:                                        ; preds = %for.body
  %32 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4877
  %call21 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %32), !dbg !4880
  br i1 %call21, label %if.else23, label %if.then22, !dbg !4881

if.then22:                                        ; preds = %if.then20
  %33 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4882
  %34 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %33, i32 0, i32 3, !dbg !4884
  %inputgate = bitcast %union.anon.8* %34 to %class.cGate**, !dbg !4884
  %35 = load %class.cGate*, %class.cGate** %inputgate, align 8, !dbg !4884
  %36 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newv, align 8, !dbg !4885
  call void @_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE(%class.cModule* %this1, %class.cGate* %35, %"struct.cGate::Desc"* %36), !dbg !4886
  %37 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4887
  %38 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %37, i32 0, i32 4, !dbg !4888
  %outputgate = bitcast %union.anon.9* %38 to %class.cGate**, !dbg !4888
  %39 = load %class.cGate*, %class.cGate** %outputgate, align 8, !dbg !4888
  %40 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newv, align 8, !dbg !4889
  call void @_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE(%class.cModule* %this1, %class.cGate* %39, %"struct.cGate::Desc"* %40), !dbg !4890
  br label %if.end38, !dbg !4891

lpad12:                                           ; preds = %arrayctor.loop
  %41 = landingpad { i8*, i32 }
          cleanup, !dbg !4892
  %42 = extractvalue { i8*, i32 } %41, 0, !dbg !4892
  store i8* %42, i8** %exn.slot, align 8, !dbg !4892
  %43 = extractvalue { i8*, i32 } %41, 1, !dbg !4892
  store i32 %43, i32* %ehselector.slot, align 4, !dbg !4892
  call void @_ZdaPv(i8* %call) #17, !dbg !4852
  br label %eh.resume, !dbg !4852

if.else23:                                        ; preds = %if.then20
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4893, metadata !DIExpression()), !dbg !4896
  store i32 0, i32* %j, align 4, !dbg !4896
  br label %for.cond24, !dbg !4897

for.cond24:                                       ; preds = %for.inc, %if.else23
  %44 = load i32, i32* %j, align 4, !dbg !4898
  %45 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4900
  %call25 = call i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %45), !dbg !4901
  %cmp26 = icmp slt i32 %44, %call25, !dbg !4902
  br i1 %cmp26, label %for.body27, label %for.end, !dbg !4903

for.body27:                                       ; preds = %for.cond24
  %46 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4904
  %47 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %46, i32 0, i32 3, !dbg !4907
  %inputgatev = bitcast %union.anon.8* %47 to %class.cGate***, !dbg !4907
  %48 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !4907
  %tobool28 = icmp ne %class.cGate** %48, null, !dbg !4904
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !4908

if.then29:                                        ; preds = %for.body27
  %49 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4909
  %50 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %49, i32 0, i32 3, !dbg !4910
  %inputgatev30 = bitcast %union.anon.8* %50 to %class.cGate***, !dbg !4910
  %51 = load %class.cGate**, %class.cGate*** %inputgatev30, align 8, !dbg !4910
  %52 = load i32, i32* %j, align 4, !dbg !4911
  %idxprom = sext i32 %52 to i64, !dbg !4909
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %51, i64 %idxprom, !dbg !4909
  %53 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !4909
  %54 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newv, align 8, !dbg !4912
  call void @_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE(%class.cModule* %this1, %class.cGate* %53, %"struct.cGate::Desc"* %54), !dbg !4913
  br label %if.end31, !dbg !4913

if.end31:                                         ; preds = %if.then29, %for.body27
  %55 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4914
  %56 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %55, i32 0, i32 4, !dbg !4916
  %outputgatev = bitcast %union.anon.9* %56 to %class.cGate***, !dbg !4916
  %57 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !4916
  %tobool32 = icmp ne %class.cGate** %57, null, !dbg !4914
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !4917

if.then33:                                        ; preds = %if.end31
  %58 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !4918
  %59 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %58, i32 0, i32 4, !dbg !4919
  %outputgatev34 = bitcast %union.anon.9* %59 to %class.cGate***, !dbg !4919
  %60 = load %class.cGate**, %class.cGate*** %outputgatev34, align 8, !dbg !4919
  %61 = load i32, i32* %j, align 4, !dbg !4920
  %idxprom35 = sext i32 %61 to i64, !dbg !4918
  %arrayidx36 = getelementptr inbounds %class.cGate*, %class.cGate** %60, i64 %idxprom35, !dbg !4918
  %62 = load %class.cGate*, %class.cGate** %arrayidx36, align 8, !dbg !4918
  %63 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newv, align 8, !dbg !4921
  call void @_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE(%class.cModule* %this1, %class.cGate* %62, %"struct.cGate::Desc"* %63), !dbg !4922
  br label %if.end37, !dbg !4922

if.end37:                                         ; preds = %if.then33, %if.end31
  br label %for.inc, !dbg !4923

for.inc:                                          ; preds = %if.end37
  %64 = load i32, i32* %j, align 4, !dbg !4924
  %inc = add nsw i32 %64, 1, !dbg !4924
  store i32 %inc, i32* %j, align 4, !dbg !4924
  br label %for.cond24, !dbg !4925, !llvm.loop !4926

for.end:                                          ; preds = %for.cond24
  br label %if.end38

if.end38:                                         ; preds = %for.end, %if.then22
  br label %if.end39, !dbg !4928

if.end39:                                         ; preds = %if.end38, %for.body
  br label %for.inc40, !dbg !4929

for.inc40:                                        ; preds = %if.end39
  %65 = load i32, i32* %i, align 4, !dbg !4930
  %inc41 = add nsw i32 %65, 1, !dbg !4930
  store i32 %inc41, i32* %i, align 4, !dbg !4930
  br label %for.cond, !dbg !4931, !llvm.loop !4932

for.end42:                                        ; preds = %for.cond
  %descv43 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4934
  %66 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv43, align 8, !dbg !4934
  %isnull = icmp eq %"struct.cGate::Desc"* %66, null, !dbg !4935
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !4935

delete.notnull:                                   ; preds = %for.end42
  %67 = bitcast %"struct.cGate::Desc"* %66 to i8*, !dbg !4935
  call void @_ZdaPv(i8* %67) #17, !dbg !4935
  br label %delete.end, !dbg !4935

delete.end:                                       ; preds = %delete.notnull, %for.end42
  %68 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newv, align 8, !dbg !4936
  %descv44 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4937
  store %"struct.cGate::Desc"* %68, %"struct.cGate::Desc"** %descv44, align 8, !dbg !4938
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %newDesc, metadata !4939, metadata !DIExpression()), !dbg !4940
  %descv45 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !4941
  %69 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv45, align 8, !dbg !4941
  %descvSize46 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !4942
  %70 = load i32, i32* %descvSize46, align 8, !dbg !4943
  %inc47 = add nsw i32 %70, 1, !dbg !4943
  store i32 %inc47, i32* %descvSize46, align 8, !dbg !4943
  %idx.ext48 = sext i32 %70 to i64, !dbg !4944
  %add.ptr49 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %69, i64 %idx.ext48, !dbg !4944
  store %"struct.cGate::Desc"* %add.ptr49, %"struct.cGate::Desc"** %newDesc, align 8, !dbg !4940
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"* %key, metadata !4945, metadata !DIExpression()), !dbg !4946
  %71 = load i8*, i8** %gatename.addr, align 8, !dbg !4947
  %72 = load i32, i32* %type.addr, align 4, !dbg !4948
  call void @_ZN5cGate4NameC1EPKcNS_4TypeE(%"struct.cGate::Name"* %key, i8* %71, i32 %72), !dbg !4946
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_const_iterator"* %it, metadata !4949, metadata !DIExpression()), !dbg !4950
  %call52 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4findERKS1_(%"class.std::set.23"* @_ZN7cModule8namePoolE, %"struct.cGate::Name"* dereferenceable(32) %key)
          to label %invoke.cont51 unwind label %lpad50, !dbg !4951

invoke.cont51:                                    ; preds = %delete.end
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %it, i32 0, i32 0, !dbg !4951
  store %"struct.std::_Rb_tree_node_base"* %call52, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !4951
  %call53 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE3endEv(%"class.std::set.23"* @_ZN7cModule8namePoolE) #3, !dbg !4952
  %coerce.dive54 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %ref.tmp, i32 0, i32 0, !dbg !4952
  store %"struct.std::_Rb_tree_node_base"* %call53, %"struct.std::_Rb_tree_node_base"** %coerce.dive54, align 8, !dbg !4952
  %call55 = call zeroext i1 @_ZSteqRKSt23_Rb_tree_const_iteratorIN5cGate4NameEES4_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %it, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %ref.tmp) #3, !dbg !4954
  br i1 %call55, label %if.then56, label %if.end60, !dbg !4955

if.then56:                                        ; preds = %invoke.cont51
  %call59 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertERKS1_(%"class.std::set.23"* @_ZN7cModule8namePoolE, %"struct.cGate::Name"* dereferenceable(32) %key)
          to label %invoke.cont58 unwind label %lpad50, !dbg !4956

invoke.cont58:                                    ; preds = %if.then56
  %73 = bitcast %"struct.std::pair"* %ref.tmp57 to { %"struct.std::_Rb_tree_node_base"*, i8 }*, !dbg !4956
  %74 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %73, i32 0, i32 0, !dbg !4956
  %75 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call59, 0, !dbg !4956
  store %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"** %74, align 8, !dbg !4956
  %76 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %73, i32 0, i32 1, !dbg !4956
  %77 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call59, 1, !dbg !4956
  store i8 %77, i8* %76, align 8, !dbg !4956
  %first = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %ref.tmp57, i32 0, i32 0, !dbg !4957
  %78 = bitcast %"struct.std::_Rb_tree_const_iterator"* %it to i8*, !dbg !4958
  %79 = bitcast %"struct.std::_Rb_tree_const_iterator"* %first to i8*, !dbg !4958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 8, i1 false), !dbg !4958
  br label %if.end60, !dbg !4959

lpad50:                                           ; preds = %if.then56, %delete.end
  %80 = landingpad { i8*, i32 }
          cleanup, !dbg !4892
  %81 = extractvalue { i8*, i32 } %80, 0, !dbg !4892
  store i8* %81, i8** %exn.slot, align 8, !dbg !4892
  %82 = extractvalue { i8*, i32 } %80, 1, !dbg !4892
  store i32 %82, i32* %ehselector.slot, align 4, !dbg !4892
  call void @_ZN5cGate4NameD2Ev(%"struct.cGate::Name"* %key) #3, !dbg !4892
  br label %eh.resume, !dbg !4892

if.end60:                                         ; preds = %invoke.cont58, %invoke.cont51
  %call61 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %it) #3, !dbg !4960
  %83 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newDesc, align 8, !dbg !4961
  %namep62 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %83, i32 0, i32 1, !dbg !4962
  store %"struct.cGate::Name"* %call61, %"struct.cGate::Name"** %namep62, align 8, !dbg !4963
  %84 = load i8, i8* %isVector.addr, align 1, !dbg !4964
  %tobool63 = trunc i8 %84 to i1, !dbg !4964
  %85 = zext i1 %tobool63 to i64, !dbg !4964
  %cond = select i1 %tobool63, i32 0, i32 -1, !dbg !4964
  %86 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newDesc, align 8, !dbg !4965
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %86, i32 0, i32 2, !dbg !4966
  store i32 %cond, i32* %size, align 8, !dbg !4967
  %87 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %newDesc, align 8, !dbg !4968
  call void @_ZN5cGate4NameD2Ev(%"struct.cGate::Name"* %key) #3, !dbg !4892
  ret %"struct.cGate::Desc"* %87, !dbg !4892

eh.resume:                                        ; preds = %lpad50, %lpad12, %lpad7, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !4832
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !4832
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !4832
  %lpad.val64 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !4832
  resume { i8*, i32 } %lpad.val64, !dbg !4832
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5cGate4DescC2Ev(%"struct.cGate::Desc"* %this) unnamed_addr #5 comdat align 2 !dbg !4969 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !4970, metadata !DIExpression()), !dbg !4971
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %ownerp = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 0, !dbg !4972
  store %class.cModule* null, %class.cModule** %ownerp, align 8, !dbg !4974
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 2, !dbg !4975
  store i32 -1, i32* %size, align 8, !dbg !4976
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 1, !dbg !4977
  store %"struct.cGate::Name"* null, %"struct.cGate::Name"** %namep, align 8, !dbg !4978
  %0 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 4, !dbg !4979
  %outputgate = bitcast %union.anon.9* %0 to %class.cGate**, !dbg !4979
  store %class.cGate* null, %class.cGate** %outputgate, align 8, !dbg !4980
  %1 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 3, !dbg !4981
  %inputgate = bitcast %union.anon.8* %1 to %class.cGate**, !dbg !4981
  store %class.cGate* null, %class.cGate** %inputgate, align 8, !dbg !4982
  ret void, !dbg !4983
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #11

declare dso_local void @_ZN5cGate4NameC1EPKcNS_4TypeE(%"struct.cGate::Name"*, i8*, i32) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4findERKS1_(%"class.std::set.23"* %this, %"struct.cGate::Name"* dereferenceable(32) %__x) #0 comdat align 2 !dbg !4984 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %this.addr = alloca %"class.std::set.23"*, align 8
  %__x.addr = alloca %"struct.cGate::Name"*, align 8
  %ref.tmp = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::set.23"* %this, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::set.23"** %this.addr, metadata !4985, metadata !DIExpression()), !dbg !4986
  store %"struct.cGate::Name"* %__x, %"struct.cGate::Name"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__x.addr, metadata !4987, metadata !DIExpression()), !dbg !4988
  %this1 = load %"class.std::set.23"*, %"class.std::set.23"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %this1, i32 0, i32 0, !dbg !4989
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__x.addr, align 8, !dbg !4990
  %call = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4findERKS1_(%"class.std::_Rb_tree.24"* %_M_t, %"struct.cGate::Name"* dereferenceable(32) %0), !dbg !4991
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %ref.tmp, i32 0, i32 0, !dbg !4991
  store %"struct.std::_Rb_tree_node_base"* %call, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !4991
  call void @_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %retval, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %ref.tmp) #3, !dbg !4989
  %coerce.dive2 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %retval, i32 0, i32 0, !dbg !4992
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive2, align 8, !dbg !4992
  ret %"struct.std::_Rb_tree_node_base"* %1, !dbg !4992
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZSteqRKSt23_Rb_tree_const_iteratorIN5cGate4NameEES4_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %__x, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %__y) #5 comdat !dbg !4993 {
entry:
  %__x.addr = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %__y.addr = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %__x, %"struct.std::_Rb_tree_const_iterator"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_const_iterator"** %__x.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  store %"struct.std::_Rb_tree_const_iterator"* %__y, %"struct.std::_Rb_tree_const_iterator"** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_const_iterator"** %__y.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  %0 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %__x.addr, align 8, !dbg !5002
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %0, i32 0, i32 0, !dbg !5003
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !5003
  %2 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %__y.addr, align 8, !dbg !5004
  %_M_node1 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0, !dbg !5005
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node1, align 8, !dbg !5005
  %cmp = icmp eq %"struct.std::_Rb_tree_node_base"* %1, %3, !dbg !5006
  ret i1 %cmp, !dbg !5007
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE3endEv(%"class.std::set.23"* %this) #5 comdat align 2 !dbg !5008 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %this.addr = alloca %"class.std::set.23"*, align 8
  store %"class.std::set.23"* %this, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::set.23"** %this.addr, metadata !5009, metadata !DIExpression()), !dbg !5011
  %this1 = load %"class.std::set.23"*, %"class.std::set.23"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %this1, i32 0, i32 0, !dbg !5012
  %call = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.24"* %_M_t) #3, !dbg !5013
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %retval, i32 0, i32 0, !dbg !5013
  store %"struct.std::_Rb_tree_node_base"* %call, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !5013
  %coerce.dive2 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %retval, i32 0, i32 0, !dbg !5014
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive2, align 8, !dbg !5014
  ret %"struct.std::_Rb_tree_node_base"* %0, !dbg !5014
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertERKS1_(%"class.std::set.23"* %this, %"struct.cGate::Name"* dereferenceable(32) %__x) #0 comdat align 2 !dbg !5015 {
entry:
  %retval = alloca %"struct.std::pair", align 8
  %this.addr = alloca %"class.std::set.23"*, align 8
  %__x.addr = alloca %"struct.cGate::Name"*, align 8
  %__p = alloca %"struct.std::pair.36", align 8
  store %"class.std::set.23"* %this, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::set.23"** %this.addr, metadata !5016, metadata !DIExpression()), !dbg !5017
  store %"struct.cGate::Name"* %__x, %"struct.cGate::Name"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__x.addr, metadata !5018, metadata !DIExpression()), !dbg !5019
  %this1 = load %"class.std::set.23"*, %"class.std::set.23"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::pair.36"* %__p, metadata !5020, metadata !DIExpression()), !dbg !5074
  %_M_t = getelementptr inbounds %"class.std::set.23", %"class.std::set.23"* %this1, i32 0, i32 0, !dbg !5075
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__x.addr, align 8, !dbg !5076
  %call = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE16_M_insert_uniqueIRKS1_EESt4pairISt17_Rb_tree_iteratorIS1_EbEOT_(%"class.std::_Rb_tree.24"* %_M_t, %"struct.cGate::Name"* dereferenceable(32) %0), !dbg !5077
  %1 = bitcast %"struct.std::pair.36"* %__p to { %"struct.std::_Rb_tree_node_base"*, i8 }*, !dbg !5077
  %2 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %1, i32 0, i32 0, !dbg !5077
  %3 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call, 0, !dbg !5077
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %2, align 8, !dbg !5077
  %4 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %1, i32 0, i32 1, !dbg !5077
  %5 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %call, 1, !dbg !5077
  store i8 %5, i8* %4, align 8, !dbg !5077
  %first = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %__p, i32 0, i32 0, !dbg !5078
  %second = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %__p, i32 0, i32 1, !dbg !5079
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEC2IRSt17_Rb_tree_iteratorIS2_ERbLb1EEEOT_OT0_(%"struct.std::pair"* %retval, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %first, i8* dereferenceable(1) %second), !dbg !5080
  %6 = bitcast %"struct.std::pair"* %retval to { %"struct.std::_Rb_tree_node_base"*, i8 }*, !dbg !5081
  %7 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %6, align 8, !dbg !5081
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %7, !dbg !5081
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.cGate::Name"* @_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %this) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5082 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %this, %"struct.std::_Rb_tree_const_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_const_iterator"** %this.addr, metadata !5083, metadata !DIExpression()), !dbg !5085
  %this1 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %this1, i32 0, i32 0, !dbg !5086
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !5086
  %1 = bitcast %"struct.std::_Rb_tree_node_base"* %0 to %"struct.std::_Rb_tree_node"*, !dbg !5087
  %call = invoke %"struct.cGate::Name"* @_ZNKSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %1)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !5088

invoke.cont:                                      ; preds = %entry
  ret %"struct.cGate::Name"* %call, !dbg !5089

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null, !dbg !5088
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !5088
  call void @__clang_call_terminate(i8* %3) #18, !dbg !5088
  unreachable, !dbg !5088
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5cGate4NameD2Ev(%"struct.cGate::Name"* %this) unnamed_addr #5 comdat align 2 !dbg !5090 {
entry:
  %this.addr = alloca %"struct.cGate::Name"*, align 8
  store %"struct.cGate::Name"* %this, %"struct.cGate::Name"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %this.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  %this1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %this.addr, align 8
  %nameo = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 2, !dbg !5096
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %nameo) #3, !dbg !5096
  %namei = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 1, !dbg !5096
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %namei) #3, !dbg !5096
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 0, !dbg !5096
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %name) #3, !dbg !5096
  ret void, !dbg !5098
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this, i8* %gatename, i8* dereferenceable(1) %suffix) #0 align 2 !dbg !5099 {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %suffix.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %i26 = alloca i32, align 4
  %desc31 = alloca %"struct.cGate::Desc"*, align 8
  %i48 = alloca i32, align 4
  %desc53 = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5100, metadata !DIExpression()), !dbg !5101
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store i8* %suffix, i8** %suffix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %suffix.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5106, metadata !DIExpression()), !dbg !5107
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !5108
  %call = call i64 @strlen(i8* %0) #9, !dbg !5109
  %conv = trunc i64 %call to i32, !dbg !5109
  store i32 %conv, i32* %len, align 4, !dbg !5107
  %1 = load i32, i32* %len, align 4, !dbg !5110
  %cmp = icmp sgt i32 %1, 2, !dbg !5111
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !5112

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %gatename.addr, align 8, !dbg !5113
  %3 = load i32, i32* %len, align 4, !dbg !5114
  %sub = sub nsw i32 %3, 2, !dbg !5115
  %idxprom = sext i32 %sub to i64, !dbg !5113
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !5113
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5113
  %conv2 = sext i8 %4 to i32, !dbg !5113
  %cmp3 = icmp eq i32 %conv2, 36, !dbg !5116
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !5117

cond.true:                                        ; preds = %land.lhs.true
  %5 = load i8*, i8** %gatename.addr, align 8, !dbg !5118
  %6 = load i32, i32* %len, align 4, !dbg !5119
  %sub4 = sub nsw i32 %6, 1, !dbg !5120
  %idxprom5 = sext i32 %sub4 to i64, !dbg !5118
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 %idxprom5, !dbg !5118
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !5118
  %conv7 = sext i8 %7 to i32, !dbg !5118
  br label %cond.end, !dbg !5117

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !5117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ 0, %cond.false ], !dbg !5117
  %conv8 = trunc i32 %cond to i8, !dbg !5117
  %8 = load i8*, i8** %suffix.addr, align 8, !dbg !5121
  store i8 %conv8, i8* %8, align 1, !dbg !5122
  %9 = load i8*, i8** %suffix.addr, align 8, !dbg !5123
  %10 = load i8, i8* %9, align 1, !dbg !5123
  %tobool = icmp ne i8 %10, 0, !dbg !5123
  br i1 %tobool, label %land.lhs.true9, label %if.end, !dbg !5125

land.lhs.true9:                                   ; preds = %cond.end
  %11 = load i8*, i8** %suffix.addr, align 8, !dbg !5126
  %12 = load i8, i8* %11, align 1, !dbg !5126
  %conv10 = sext i8 %12 to i32, !dbg !5126
  %cmp11 = icmp ne i32 %conv10, 105, !dbg !5127
  br i1 %cmp11, label %land.lhs.true12, label %if.end, !dbg !5128

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %13 = load i8*, i8** %suffix.addr, align 8, !dbg !5129
  %14 = load i8, i8* %13, align 1, !dbg !5129
  %conv13 = sext i8 %14 to i32, !dbg !5129
  %cmp14 = icmp ne i32 %conv13, 111, !dbg !5130
  br i1 %cmp14, label %if.then, label %if.end, !dbg !5131

if.then:                                          ; preds = %land.lhs.true12
  store i32 -1, i32* %retval, align 4, !dbg !5132
  br label %return, !dbg !5132

if.end:                                           ; preds = %land.lhs.true12, %land.lhs.true9, %cond.end
  %15 = load i8*, i8** %suffix.addr, align 8, !dbg !5133
  %16 = load i8, i8* %15, align 1, !dbg !5133
  %conv15 = sext i8 %16 to i32, !dbg !5133
  switch i32 %conv15, label %sw.epilog [
    i32 0, label %sw.bb
    i32 105, label %sw.bb25
    i32 111, label %sw.bb47
  ], !dbg !5134

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5135, metadata !DIExpression()), !dbg !5138
  store i32 0, i32* %i, align 4, !dbg !5138
  br label %for.cond, !dbg !5139

for.cond:                                         ; preds = %for.inc, %sw.bb
  %17 = load i32, i32* %i, align 4, !dbg !5140
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !5142
  %18 = load i32, i32* %descvSize, align 8, !dbg !5142
  %cmp16 = icmp slt i32 %17, %18, !dbg !5143
  br i1 %cmp16, label %for.body, label %for.end, !dbg !5144

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !5145, metadata !DIExpression()), !dbg !5147
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5148
  %19 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !5148
  %20 = load i32, i32* %i, align 4, !dbg !5149
  %idx.ext = sext i32 %20 to i64, !dbg !5150
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %19, i64 %idx.ext, !dbg !5150
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !5147
  %21 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5151
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %21, i32 0, i32 1, !dbg !5153
  %22 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !5153
  %tobool17 = icmp ne %"struct.cGate::Name"* %22, null, !dbg !5151
  br i1 %tobool17, label %land.lhs.true18, label %if.end24, !dbg !5154

land.lhs.true18:                                  ; preds = %for.body
  %23 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5155
  %namep19 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %23, i32 0, i32 1, !dbg !5156
  %24 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep19, align 8, !dbg !5156
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %24, i32 0, i32 0, !dbg !5157
  %call20 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %name), !dbg !5158
  %25 = load i8*, i8** %gatename.addr, align 8, !dbg !5159
  %call21 = call i32 @strcmp(i8* %call20, i8* %25) #9, !dbg !5160
  %cmp22 = icmp eq i32 %call21, 0, !dbg !5161
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !5162

if.then23:                                        ; preds = %land.lhs.true18
  %26 = load i32, i32* %i, align 4, !dbg !5163
  store i32 %26, i32* %retval, align 4, !dbg !5164
  br label %return, !dbg !5164

if.end24:                                         ; preds = %land.lhs.true18, %for.body
  br label %for.inc, !dbg !5165

for.inc:                                          ; preds = %if.end24
  %27 = load i32, i32* %i, align 4, !dbg !5166
  %inc = add nsw i32 %27, 1, !dbg !5166
  store i32 %inc, i32* %i, align 4, !dbg !5166
  br label %for.cond, !dbg !5167, !llvm.loop !5168

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !5170

sw.bb25:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i26, metadata !5171, metadata !DIExpression()), !dbg !5173
  store i32 0, i32* %i26, align 4, !dbg !5173
  br label %for.cond27, !dbg !5174

for.cond27:                                       ; preds = %for.inc44, %sw.bb25
  %28 = load i32, i32* %i26, align 4, !dbg !5175
  %descvSize28 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !5177
  %29 = load i32, i32* %descvSize28, align 8, !dbg !5177
  %cmp29 = icmp slt i32 %28, %29, !dbg !5178
  br i1 %cmp29, label %for.body30, label %for.end46, !dbg !5179

for.body30:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc31, metadata !5180, metadata !DIExpression()), !dbg !5182
  %descv32 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5183
  %30 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv32, align 8, !dbg !5183
  %31 = load i32, i32* %i26, align 4, !dbg !5184
  %idx.ext33 = sext i32 %31 to i64, !dbg !5185
  %add.ptr34 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %30, i64 %idx.ext33, !dbg !5185
  store %"struct.cGate::Desc"* %add.ptr34, %"struct.cGate::Desc"** %desc31, align 8, !dbg !5182
  %32 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc31, align 8, !dbg !5186
  %namep35 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %32, i32 0, i32 1, !dbg !5188
  %33 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep35, align 8, !dbg !5188
  %tobool36 = icmp ne %"struct.cGate::Name"* %33, null, !dbg !5186
  br i1 %tobool36, label %land.lhs.true37, label %if.end43, !dbg !5189

land.lhs.true37:                                  ; preds = %for.body30
  %34 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc31, align 8, !dbg !5190
  %namep38 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %34, i32 0, i32 1, !dbg !5191
  %35 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep38, align 8, !dbg !5191
  %namei = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %35, i32 0, i32 1, !dbg !5192
  %call39 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %namei), !dbg !5193
  %36 = load i8*, i8** %gatename.addr, align 8, !dbg !5194
  %call40 = call i32 @strcmp(i8* %call39, i8* %36) #9, !dbg !5195
  %cmp41 = icmp eq i32 %call40, 0, !dbg !5196
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !5197

if.then42:                                        ; preds = %land.lhs.true37
  %37 = load i32, i32* %i26, align 4, !dbg !5198
  store i32 %37, i32* %retval, align 4, !dbg !5199
  br label %return, !dbg !5199

if.end43:                                         ; preds = %land.lhs.true37, %for.body30
  br label %for.inc44, !dbg !5200

for.inc44:                                        ; preds = %if.end43
  %38 = load i32, i32* %i26, align 4, !dbg !5201
  %inc45 = add nsw i32 %38, 1, !dbg !5201
  store i32 %inc45, i32* %i26, align 4, !dbg !5201
  br label %for.cond27, !dbg !5202, !llvm.loop !5203

for.end46:                                        ; preds = %for.cond27
  br label %sw.epilog, !dbg !5205

sw.bb47:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i48, metadata !5206, metadata !DIExpression()), !dbg !5208
  store i32 0, i32* %i48, align 4, !dbg !5208
  br label %for.cond49, !dbg !5209

for.cond49:                                       ; preds = %for.inc66, %sw.bb47
  %39 = load i32, i32* %i48, align 4, !dbg !5210
  %descvSize50 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !5212
  %40 = load i32, i32* %descvSize50, align 8, !dbg !5212
  %cmp51 = icmp slt i32 %39, %40, !dbg !5213
  br i1 %cmp51, label %for.body52, label %for.end68, !dbg !5214

for.body52:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc53, metadata !5215, metadata !DIExpression()), !dbg !5217
  %descv54 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5218
  %41 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv54, align 8, !dbg !5218
  %42 = load i32, i32* %i48, align 4, !dbg !5219
  %idx.ext55 = sext i32 %42 to i64, !dbg !5220
  %add.ptr56 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %41, i64 %idx.ext55, !dbg !5220
  store %"struct.cGate::Desc"* %add.ptr56, %"struct.cGate::Desc"** %desc53, align 8, !dbg !5217
  %43 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc53, align 8, !dbg !5221
  %namep57 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %43, i32 0, i32 1, !dbg !5223
  %44 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep57, align 8, !dbg !5223
  %tobool58 = icmp ne %"struct.cGate::Name"* %44, null, !dbg !5221
  br i1 %tobool58, label %land.lhs.true59, label %if.end65, !dbg !5224

land.lhs.true59:                                  ; preds = %for.body52
  %45 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc53, align 8, !dbg !5225
  %namep60 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %45, i32 0, i32 1, !dbg !5226
  %46 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep60, align 8, !dbg !5226
  %nameo = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %46, i32 0, i32 2, !dbg !5227
  %call61 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %nameo), !dbg !5228
  %47 = load i8*, i8** %gatename.addr, align 8, !dbg !5229
  %call62 = call i32 @strcmp(i8* %call61, i8* %47) #9, !dbg !5230
  %cmp63 = icmp eq i32 %call62, 0, !dbg !5231
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !5232

if.then64:                                        ; preds = %land.lhs.true59
  %48 = load i32, i32* %i48, align 4, !dbg !5233
  store i32 %48, i32* %retval, align 4, !dbg !5234
  br label %return, !dbg !5234

if.end65:                                         ; preds = %land.lhs.true59, %for.body52
  br label %for.inc66, !dbg !5235

for.inc66:                                        ; preds = %if.end65
  %49 = load i32, i32* %i48, align 4, !dbg !5236
  %inc67 = add nsw i32 %49, 1, !dbg !5236
  store i32 %inc67, i32* %i48, align 4, !dbg !5236
  br label %for.cond49, !dbg !5237, !llvm.loop !5238

for.end68:                                        ; preds = %for.cond49
  br label %sw.epilog, !dbg !5240

sw.epilog:                                        ; preds = %if.end, %for.end68, %for.end46, %for.end
  store i32 -1, i32* %retval, align 4, !dbg !5241
  br label %return, !dbg !5241

return:                                           ; preds = %sw.epilog, %if.then64, %if.then42, %if.then23, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !5242
  ret i32 %50, !dbg !5242
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #12

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %this) #5 comdat align 2 !dbg !5243 {
entry:
  %this.addr = alloca %class.opp_string*, align 8
  store %class.opp_string* %this, %class.opp_string** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string** %this.addr, metadata !5244, metadata !DIExpression()), !dbg !5246
  %this1 = load %class.opp_string*, %class.opp_string** %this.addr, align 8
  %str = getelementptr inbounds %class.opp_string, %class.opp_string* %this1, i32 0, i32 0, !dbg !5247
  %0 = load i8*, i8** %str, align 8, !dbg !5247
  %tobool = icmp ne i8* %0, null, !dbg !5247
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5247

cond.true:                                        ; preds = %entry
  %str2 = getelementptr inbounds %class.opp_string, %class.opp_string* %this1, i32 0, i32 0, !dbg !5248
  %1 = load i8*, i8** %str2, align 8, !dbg !5248
  br label %cond.end, !dbg !5247

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5247

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), %cond.false ], !dbg !5247
  ret i8* %cond, !dbg !5249
}

; Function Attrs: noinline uwtable
define dso_local %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this, i8* %gatename, i8* dereferenceable(1) %suffix) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5250 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %suffix.addr = alloca i8*, align 8
  %descIndex = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5251, metadata !DIExpression()), !dbg !5252
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !5253, metadata !DIExpression()), !dbg !5254
  store i8* %suffix, i8** %suffix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %suffix.addr, metadata !5255, metadata !DIExpression()), !dbg !5256
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %descIndex, metadata !5257, metadata !DIExpression()), !dbg !5258
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !5259
  %1 = load i8*, i8** %suffix.addr, align 8, !dbg !5260
  %call = call i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %1), !dbg !5261
  store i32 %call, i32* %descIndex, align 4, !dbg !5258
  %2 = load i32, i32* %descIndex, align 4, !dbg !5262
  %cmp = icmp slt i32 %2, 0, !dbg !5264
  br i1 %cmp, label %if.then, label %if.end, !dbg !5265

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5266
  %3 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !5266
  %4 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5267
  %5 = load i8*, i8** %gatename.addr, align 8, !dbg !5268
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %3, %class.cObject* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i8* %5)
          to label %invoke.cont unwind label %lpad, !dbg !5269

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5266
  unreachable, !dbg !5266

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !5270
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !5270
  store i8* %7, i8** %exn.slot, align 8, !dbg !5270
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !5270
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !5270
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !5266
  br label %eh.resume, !dbg !5266

if.end:                                           ; preds = %entry
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5271
  %9 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !5271
  %10 = load i32, i32* %descIndex, align 4, !dbg !5272
  %idx.ext = sext i32 %10 to i64, !dbg !5273
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %9, i64 %idx.ext, !dbg !5273
  ret %"struct.cGate::Desc"* %add.ptr, !dbg !5274

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5266
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5266
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5266
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5266
  resume { i8*, i32 } %lpad.val2, !dbg !5266
}

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule4gateEi(%class.cModule* %this, i32 %id) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5275 {
entry:
  %retval = alloca %class.cGate*, align 8
  %this.addr = alloca %class.cModule*, align 8
  %id.addr = alloca i32, align 4
  %h = alloca i32, align 4
  %descIndex = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %g = alloca %class.cGate*, align 8
  %descIndex37 = alloca i32, align 4
  %desc46 = alloca %"struct.cGate::Desc"*, align 8
  %isOutput = alloca i8, align 1
  %index = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5276, metadata !DIExpression()), !dbg !5277
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5278, metadata !DIExpression()), !dbg !5279
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %h, metadata !5280, metadata !DIExpression()), !dbg !5281
  %0 = load i32, i32* %id.addr, align 4, !dbg !5282
  %and = and i32 %0, -1048576, !dbg !5283
  store i32 %and, i32* %h, align 4, !dbg !5281
  %1 = load i32, i32* %h, align 4, !dbg !5284
  %cmp = icmp eq i32 %1, 0, !dbg !5286
  br i1 %cmp, label %if.then, label %if.else, !dbg !5287

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %descIndex, metadata !5288, metadata !DIExpression()), !dbg !5290
  %2 = load i32, i32* %id.addr, align 4, !dbg !5291
  %shr = ashr i32 %2, 1, !dbg !5292
  store i32 %shr, i32* %descIndex, align 4, !dbg !5290
  %3 = load i32, i32* %descIndex, align 4, !dbg !5293
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !5293
  %4 = load i32, i32* %descvSize, align 8, !dbg !5293
  %cmp2 = icmp ult i32 %3, %4, !dbg !5293
  br i1 %cmp2, label %if.end, label %if.then3, !dbg !5295

if.then3:                                         ; preds = %if.then
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5293
  %5 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !5293
  %6 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5293
  %7 = load i32, i32* %id.addr, align 4, !dbg !5293
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %5, %class.cObject* %6, i32 19, i32 %7)
          to label %invoke.cont unwind label %lpad, !dbg !5293

invoke.cont:                                      ; preds = %if.then3
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5293
  unreachable, !dbg !5293

lpad:                                             ; preds = %if.then3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !5296
  %9 = extractvalue { i8*, i32 } %8, 0, !dbg !5296
  store i8* %9, i8** %exn.slot, align 8, !dbg !5296
  %10 = extractvalue { i8*, i32 } %8, 1, !dbg !5296
  store i32 %10, i32* %ehselector.slot, align 4, !dbg !5296
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !5293
  br label %eh.resume, !dbg !5293

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !5297, metadata !DIExpression()), !dbg !5298
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5299
  %11 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !5299
  %12 = load i32, i32* %descIndex, align 4, !dbg !5300
  %idx.ext = zext i32 %12 to i64, !dbg !5301
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %11, i64 %idx.ext, !dbg !5301
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !5298
  %13 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5302
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %13, i32 0, i32 1, !dbg !5302
  %14 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !5302
  %tobool = icmp ne %"struct.cGate::Name"* %14, null, !dbg !5302
  br i1 %tobool, label %if.end8, label %if.then4, !dbg !5304

if.then4:                                         ; preds = %if.end
  %exception5 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5302
  %15 = bitcast i8* %exception5 to %class.cRuntimeError*, !dbg !5302
  %16 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5302
  %17 = load i32, i32* %id.addr, align 4, !dbg !5302
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %15, %class.cObject* %16, i32 19, i32 %17)
          to label %invoke.cont7 unwind label %lpad6, !dbg !5302

invoke.cont7:                                     ; preds = %if.then4
  call void @__cxa_throw(i8* %exception5, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5302
  unreachable, !dbg !5302

lpad6:                                            ; preds = %if.then4
  %18 = landingpad { i8*, i32 }
          cleanup, !dbg !5305
  %19 = extractvalue { i8*, i32 } %18, 0, !dbg !5305
  store i8* %19, i8** %exn.slot, align 8, !dbg !5305
  %20 = extractvalue { i8*, i32 } %18, 1, !dbg !5305
  store i32 %20, i32* %ehselector.slot, align 4, !dbg !5305
  call void @__cxa_free_exception(i8* %exception5) #3, !dbg !5302
  br label %eh.resume, !dbg !5302

if.end8:                                          ; preds = %if.end
  %21 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5306
  %call = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %21), !dbg !5306
  br i1 %call, label %if.then9, label %if.end13, !dbg !5308

if.then9:                                         ; preds = %if.end8
  %exception10 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5306
  %22 = bitcast i8* %exception10 to %class.cRuntimeError*, !dbg !5306
  %23 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5306
  %24 = load i32, i32* %id.addr, align 4, !dbg !5306
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %22, %class.cObject* %23, i32 19, i32 %24)
          to label %invoke.cont12 unwind label %lpad11, !dbg !5306

invoke.cont12:                                    ; preds = %if.then9
  call void @__cxa_throw(i8* %exception10, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5306
  unreachable, !dbg !5306

lpad11:                                           ; preds = %if.then9
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !5309
  %26 = extractvalue { i8*, i32 } %25, 0, !dbg !5309
  store i8* %26, i8** %exn.slot, align 8, !dbg !5309
  %27 = extractvalue { i8*, i32 } %25, 1, !dbg !5309
  store i32 %27, i32* %ehselector.slot, align 4, !dbg !5309
  call void @__cxa_free_exception(i8* %exception10) #3, !dbg !5306
  br label %eh.resume, !dbg !5306

if.end13:                                         ; preds = %if.end8
  %28 = load i32, i32* %id.addr, align 4, !dbg !5310
  %and14 = and i32 %28, 1, !dbg !5310
  %cmp15 = icmp eq i32 %and14, 0, !dbg !5310
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !5312

cond.true:                                        ; preds = %if.end13
  %29 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5310
  %call16 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %29), !dbg !5310
  %cmp17 = icmp ne i32 %call16, 79, !dbg !5310
  br i1 %cmp17, label %if.end24, label %if.then20, !dbg !5310

cond.false:                                       ; preds = %if.end13
  %30 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5310
  %call18 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %30), !dbg !5310
  %cmp19 = icmp ne i32 %call18, 73, !dbg !5310
  br i1 %cmp19, label %if.end24, label %if.then20, !dbg !5312

if.then20:                                        ; preds = %cond.false, %cond.true
  %exception21 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5310
  %31 = bitcast i8* %exception21 to %class.cRuntimeError*, !dbg !5310
  %32 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5310
  %33 = load i32, i32* %id.addr, align 4, !dbg !5310
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %31, %class.cObject* %32, i32 19, i32 %33)
          to label %invoke.cont23 unwind label %lpad22, !dbg !5310

invoke.cont23:                                    ; preds = %if.then20
  call void @__cxa_throw(i8* %exception21, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5310
  unreachable, !dbg !5310

lpad22:                                           ; preds = %if.then20
  %34 = landingpad { i8*, i32 }
          cleanup, !dbg !5313
  %35 = extractvalue { i8*, i32 } %34, 0, !dbg !5313
  store i8* %35, i8** %exn.slot, align 8, !dbg !5313
  %36 = extractvalue { i8*, i32 } %34, 1, !dbg !5313
  store i32 %36, i32* %ehselector.slot, align 4, !dbg !5313
  call void @__cxa_free_exception(i8* %exception21) #3, !dbg !5310
  br label %eh.resume, !dbg !5310

if.end24:                                         ; preds = %cond.false, %cond.true
  call void @llvm.dbg.declare(metadata %class.cGate** %g, metadata !5314, metadata !DIExpression()), !dbg !5315
  %37 = load i32, i32* %id.addr, align 4, !dbg !5316
  %and25 = and i32 %37, 1, !dbg !5317
  %cmp26 = icmp eq i32 %and25, 0, !dbg !5318
  br i1 %cmp26, label %cond.true27, label %cond.false28, !dbg !5319

cond.true27:                                      ; preds = %if.end24
  %38 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5320
  %39 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %38, i32 0, i32 3, !dbg !5321
  %inputgate = bitcast %union.anon.8* %39 to %class.cGate**, !dbg !5321
  %40 = load %class.cGate*, %class.cGate** %inputgate, align 8, !dbg !5321
  br label %cond.end, !dbg !5319

cond.false28:                                     ; preds = %if.end24
  %41 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5322
  %42 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %41, i32 0, i32 4, !dbg !5323
  %outputgate = bitcast %union.anon.9* %42 to %class.cGate**, !dbg !5323
  %43 = load %class.cGate*, %class.cGate** %outputgate, align 8, !dbg !5323
  br label %cond.end, !dbg !5319

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond = phi %class.cGate* [ %40, %cond.true27 ], [ %43, %cond.false28 ], !dbg !5319
  store %class.cGate* %cond, %class.cGate** %g, align 8, !dbg !5315
  %44 = load i32, i32* %id.addr, align 4, !dbg !5324
  %and29 = and i32 %44, 1, !dbg !5324
  %45 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !5324
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %45, i32 0, i32 2, !dbg !5324
  %46 = load i32, i32* %pos, align 8, !dbg !5324
  %and30 = and i32 %46, 1, !dbg !5324
  %cmp31 = icmp eq i32 %and29, %and30, !dbg !5324
  br i1 %cmp31, label %if.end36, label %if.then32, !dbg !5326

if.then32:                                        ; preds = %cond.end
  %exception33 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5324
  %47 = bitcast i8* %exception33 to %class.cRuntimeError*, !dbg !5324
  %48 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5324
  %49 = load i32, i32* %id.addr, align 4, !dbg !5324
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %47, %class.cObject* %48, i32 19, i32 %49)
          to label %invoke.cont35 unwind label %lpad34, !dbg !5324

invoke.cont35:                                    ; preds = %if.then32
  call void @__cxa_throw(i8* %exception33, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5324
  unreachable, !dbg !5324

lpad34:                                           ; preds = %if.then32
  %50 = landingpad { i8*, i32 }
          cleanup, !dbg !5327
  %51 = extractvalue { i8*, i32 } %50, 0, !dbg !5327
  store i8* %51, i8** %exn.slot, align 8, !dbg !5327
  %52 = extractvalue { i8*, i32 } %50, 1, !dbg !5327
  store i32 %52, i32* %ehselector.slot, align 4, !dbg !5327
  call void @__cxa_free_exception(i8* %exception33) #3, !dbg !5324
  br label %eh.resume, !dbg !5324

if.end36:                                         ; preds = %cond.end
  %53 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !5328
  store %class.cGate* %53, %class.cGate** %retval, align 8, !dbg !5329
  br label %return, !dbg !5329

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %descIndex37, metadata !5330, metadata !DIExpression()), !dbg !5332
  %54 = load i32, i32* %h, align 4, !dbg !5333
  %shr38 = lshr i32 %54, 20, !dbg !5334
  %sub = sub i32 %shr38, 1, !dbg !5335
  store i32 %sub, i32* %descIndex37, align 4, !dbg !5332
  %55 = load i32, i32* %descIndex37, align 4, !dbg !5336
  %descvSize39 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !5336
  %56 = load i32, i32* %descvSize39, align 8, !dbg !5336
  %cmp40 = icmp ult i32 %55, %56, !dbg !5336
  br i1 %cmp40, label %if.end45, label %if.then41, !dbg !5338

if.then41:                                        ; preds = %if.else
  %exception42 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5336
  %57 = bitcast i8* %exception42 to %class.cRuntimeError*, !dbg !5336
  %58 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5336
  %59 = load i32, i32* %id.addr, align 4, !dbg !5336
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %57, %class.cObject* %58, i32 19, i32 %59)
          to label %invoke.cont44 unwind label %lpad43, !dbg !5336

invoke.cont44:                                    ; preds = %if.then41
  call void @__cxa_throw(i8* %exception42, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5336
  unreachable, !dbg !5336

lpad43:                                           ; preds = %if.then41
  %60 = landingpad { i8*, i32 }
          cleanup, !dbg !5339
  %61 = extractvalue { i8*, i32 } %60, 0, !dbg !5339
  store i8* %61, i8** %exn.slot, align 8, !dbg !5339
  %62 = extractvalue { i8*, i32 } %60, 1, !dbg !5339
  store i32 %62, i32* %ehselector.slot, align 4, !dbg !5339
  call void @__cxa_free_exception(i8* %exception42) #3, !dbg !5336
  br label %eh.resume, !dbg !5336

if.end45:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc46, metadata !5340, metadata !DIExpression()), !dbg !5341
  %descv47 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5342
  %63 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv47, align 8, !dbg !5342
  %64 = load i32, i32* %descIndex37, align 4, !dbg !5343
  %idx.ext48 = zext i32 %64 to i64, !dbg !5344
  %add.ptr49 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %63, i64 %idx.ext48, !dbg !5344
  store %"struct.cGate::Desc"* %add.ptr49, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5341
  %65 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5345
  %namep50 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %65, i32 0, i32 1, !dbg !5345
  %66 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep50, align 8, !dbg !5345
  %tobool51 = icmp ne %"struct.cGate::Name"* %66, null, !dbg !5345
  br i1 %tobool51, label %if.end56, label %if.then52, !dbg !5347

if.then52:                                        ; preds = %if.end45
  %exception53 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5345
  %67 = bitcast i8* %exception53 to %class.cRuntimeError*, !dbg !5345
  %68 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5345
  %69 = load i32, i32* %id.addr, align 4, !dbg !5345
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %67, %class.cObject* %68, i32 19, i32 %69)
          to label %invoke.cont55 unwind label %lpad54, !dbg !5345

invoke.cont55:                                    ; preds = %if.then52
  call void @__cxa_throw(i8* %exception53, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5345
  unreachable, !dbg !5345

lpad54:                                           ; preds = %if.then52
  %70 = landingpad { i8*, i32 }
          cleanup, !dbg !5348
  %71 = extractvalue { i8*, i32 } %70, 0, !dbg !5348
  store i8* %71, i8** %exn.slot, align 8, !dbg !5348
  %72 = extractvalue { i8*, i32 } %70, 1, !dbg !5348
  store i32 %72, i32* %ehselector.slot, align 4, !dbg !5348
  call void @__cxa_free_exception(i8* %exception53) #3, !dbg !5345
  br label %eh.resume, !dbg !5345

if.end56:                                         ; preds = %if.end45
  %73 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5349
  %call57 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %73), !dbg !5349
  br i1 %call57, label %if.end62, label %if.then58, !dbg !5351

if.then58:                                        ; preds = %if.end56
  %exception59 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5349
  %74 = bitcast i8* %exception59 to %class.cRuntimeError*, !dbg !5349
  %75 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5349
  %76 = load i32, i32* %id.addr, align 4, !dbg !5349
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %74, %class.cObject* %75, i32 19, i32 %76)
          to label %invoke.cont61 unwind label %lpad60, !dbg !5349

invoke.cont61:                                    ; preds = %if.then58
  call void @__cxa_throw(i8* %exception59, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5349
  unreachable, !dbg !5349

lpad60:                                           ; preds = %if.then58
  %77 = landingpad { i8*, i32 }
          cleanup, !dbg !5352
  %78 = extractvalue { i8*, i32 } %77, 0, !dbg !5352
  store i8* %78, i8** %exn.slot, align 8, !dbg !5352
  %79 = extractvalue { i8*, i32 } %77, 1, !dbg !5352
  store i32 %79, i32* %ehselector.slot, align 4, !dbg !5352
  call void @__cxa_free_exception(i8* %exception59) #3, !dbg !5349
  br label %eh.resume, !dbg !5349

if.end62:                                         ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i8* %isOutput, metadata !5353, metadata !DIExpression()), !dbg !5354
  %80 = load i32, i32* %id.addr, align 4, !dbg !5355
  %and63 = and i32 %80, 524288, !dbg !5356
  %tobool64 = icmp ne i32 %and63, 0, !dbg !5355
  %frombool = zext i1 %tobool64 to i8, !dbg !5354
  store i8 %frombool, i8* %isOutput, align 1, !dbg !5354
  %81 = load i8, i8* %isOutput, align 1, !dbg !5357
  %tobool65 = trunc i8 %81 to i1, !dbg !5357
  br i1 %tobool65, label %cond.true66, label %cond.false69, !dbg !5359

cond.true66:                                      ; preds = %if.end62
  %82 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5357
  %call67 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %82), !dbg !5357
  %cmp68 = icmp ne i32 %call67, 73, !dbg !5357
  br i1 %cmp68, label %if.end76, label %if.then72, !dbg !5357

cond.false69:                                     ; preds = %if.end62
  %83 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5357
  %call70 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %83), !dbg !5357
  %cmp71 = icmp ne i32 %call70, 79, !dbg !5357
  br i1 %cmp71, label %if.end76, label %if.then72, !dbg !5359

if.then72:                                        ; preds = %cond.false69, %cond.true66
  %exception73 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5357
  %84 = bitcast i8* %exception73 to %class.cRuntimeError*, !dbg !5357
  %85 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5357
  %86 = load i32, i32* %id.addr, align 4, !dbg !5357
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %84, %class.cObject* %85, i32 19, i32 %86)
          to label %invoke.cont75 unwind label %lpad74, !dbg !5357

invoke.cont75:                                    ; preds = %if.then72
  call void @__cxa_throw(i8* %exception73, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5357
  unreachable, !dbg !5357

lpad74:                                           ; preds = %if.then72
  %87 = landingpad { i8*, i32 }
          cleanup, !dbg !5360
  %88 = extractvalue { i8*, i32 } %87, 0, !dbg !5360
  store i8* %88, i8** %exn.slot, align 8, !dbg !5360
  %89 = extractvalue { i8*, i32 } %87, 1, !dbg !5360
  store i32 %89, i32* %ehselector.slot, align 4, !dbg !5360
  call void @__cxa_free_exception(i8* %exception73) #3, !dbg !5357
  br label %eh.resume, !dbg !5357

if.end76:                                         ; preds = %cond.false69, %cond.true66
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5361, metadata !DIExpression()), !dbg !5362
  %90 = load i32, i32* %id.addr, align 4, !dbg !5363
  %and77 = and i32 %90, 524287, !dbg !5364
  store i32 %and77, i32* %index, align 4, !dbg !5362
  %91 = load i32, i32* %index, align 4, !dbg !5365
  %92 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5367
  %call78 = call i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %92), !dbg !5368
  %cmp79 = icmp uge i32 %91, %call78, !dbg !5369
  br i1 %cmp79, label %if.then80, label %if.end96, !dbg !5370

if.then80:                                        ; preds = %if.end76
  %93 = load i32, i32* %index, align 4, !dbg !5371
  %cmp81 = icmp ult i32 %93, 100000, !dbg !5374
  br i1 %cmp81, label %if.then82, label %if.else92, !dbg !5375

if.then82:                                        ; preds = %if.then80
  %exception83 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5376
  %94 = bitcast i8* %exception83 to %class.cRuntimeError*, !dbg !5376
  %95 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5377
  %96 = load i32, i32* %id.addr, align 4, !dbg !5378
  %97 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5379
  %98 = load i8, i8* %isOutput, align 1, !dbg !5380
  %tobool84 = trunc i8 %98 to i1, !dbg !5380
  %99 = zext i1 %tobool84 to i64, !dbg !5380
  %cond85 = select i1 %tobool84, i32 79, i32 73, !dbg !5380
  %call88 = invoke i8* @_ZNK5cGate4Desc7nameForENS_4TypeE(%"struct.cGate::Desc"* %97, i32 %cond85)
          to label %invoke.cont87 unwind label %lpad86, !dbg !5381

invoke.cont87:                                    ; preds = %if.then82
  %100 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5382
  %call90 = invoke i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %100)
          to label %invoke.cont89 unwind label %lpad86, !dbg !5383

invoke.cont89:                                    ; preds = %invoke.cont87
  %101 = load i32, i32* %index, align 4, !dbg !5384
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %94, %class.cObject* %95, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.8, i64 0, i64 0), i32 %96, i8* %call88, i32 %call90, i32 %101)
          to label %invoke.cont91 unwind label %lpad86, !dbg !5385

invoke.cont91:                                    ; preds = %invoke.cont89
  call void @__cxa_throw(i8* %exception83, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5376
  unreachable, !dbg !5376

lpad86:                                           ; preds = %invoke.cont89, %invoke.cont87, %if.then82
  %102 = landingpad { i8*, i32 }
          cleanup, !dbg !5386
  %103 = extractvalue { i8*, i32 } %102, 0, !dbg !5386
  store i8* %103, i8** %exn.slot, align 8, !dbg !5386
  %104 = extractvalue { i8*, i32 } %102, 1, !dbg !5386
  store i32 %104, i32* %ehselector.slot, align 4, !dbg !5386
  call void @__cxa_free_exception(i8* %exception83) #3, !dbg !5376
  br label %eh.resume, !dbg !5376

if.else92:                                        ; preds = %if.then80
  %exception93 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5387
  %105 = bitcast i8* %exception93 to %class.cRuntimeError*, !dbg !5387
  %106 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5388
  %107 = load i32, i32* %id.addr, align 4, !dbg !5389
  invoke void (%class.cRuntimeError*, %class.cObject*, i32, ...) @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError* %105, %class.cObject* %106, i32 19, i32 %107)
          to label %invoke.cont95 unwind label %lpad94, !dbg !5390

invoke.cont95:                                    ; preds = %if.else92
  call void @__cxa_throw(i8* %exception93, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5387
  unreachable, !dbg !5387

lpad94:                                           ; preds = %if.else92
  %108 = landingpad { i8*, i32 }
          cleanup, !dbg !5386
  %109 = extractvalue { i8*, i32 } %108, 0, !dbg !5386
  store i8* %109, i8** %exn.slot, align 8, !dbg !5386
  %110 = extractvalue { i8*, i32 } %108, 1, !dbg !5386
  store i32 %110, i32* %ehselector.slot, align 4, !dbg !5386
  call void @__cxa_free_exception(i8* %exception93) #3, !dbg !5387
  br label %eh.resume, !dbg !5387

if.end96:                                         ; preds = %if.end76
  %111 = load i8, i8* %isOutput, align 1, !dbg !5391
  %tobool97 = trunc i8 %111 to i1, !dbg !5391
  br i1 %tobool97, label %cond.true98, label %cond.false99, !dbg !5391

cond.true98:                                      ; preds = %if.end96
  %112 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5392
  %113 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %112, i32 0, i32 4, !dbg !5393
  %outputgatev = bitcast %union.anon.9* %113 to %class.cGate***, !dbg !5393
  %114 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !5393
  %115 = load i32, i32* %index, align 4, !dbg !5394
  %idxprom = zext i32 %115 to i64, !dbg !5392
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %114, i64 %idxprom, !dbg !5392
  %116 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !5392
  br label %cond.end102, !dbg !5391

cond.false99:                                     ; preds = %if.end96
  %117 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc46, align 8, !dbg !5395
  %118 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %117, i32 0, i32 3, !dbg !5396
  %inputgatev = bitcast %union.anon.8* %118 to %class.cGate***, !dbg !5396
  %119 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !5396
  %120 = load i32, i32* %index, align 4, !dbg !5397
  %idxprom100 = zext i32 %120 to i64, !dbg !5395
  %arrayidx101 = getelementptr inbounds %class.cGate*, %class.cGate** %119, i64 %idxprom100, !dbg !5395
  %121 = load %class.cGate*, %class.cGate** %arrayidx101, align 8, !dbg !5395
  br label %cond.end102, !dbg !5391

cond.end102:                                      ; preds = %cond.false99, %cond.true98
  %cond103 = phi %class.cGate* [ %116, %cond.true98 ], [ %121, %cond.false99 ], !dbg !5391
  store %class.cGate* %cond103, %class.cGate** %retval, align 8, !dbg !5398
  br label %return, !dbg !5398

return:                                           ; preds = %cond.end102, %if.end36
  %122 = load %class.cGate*, %class.cGate** %retval, align 8, !dbg !5399
  ret %class.cGate* %122, !dbg !5399

eh.resume:                                        ; preds = %lpad94, %lpad86, %lpad74, %lpad60, %lpad54, %lpad43, %lpad34, %lpad22, %lpad11, %lpad6, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5293
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5293
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5293
  %lpad.val104 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5293
  resume { i8*, i32 } %lpad.val104, !dbg !5293
}

declare dso_local void @_ZN13cRuntimeErrorC1EPK7cObject12OppErrorCodez(%class.cRuntimeError*, %class.cObject*, i32, ...) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %this) #5 comdat align 2 !dbg !5400 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !5401, metadata !DIExpression()), !dbg !5402
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 1, !dbg !5403
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !5403
  %type = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %0, i32 0, i32 3, !dbg !5404
  %1 = load i32, i32* %type, align 8, !dbg !5404
  ret i32 %1, !dbg !5405
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK5cGate4Desc7nameForENS_4TypeE(%"struct.cGate::Desc"* %this, i32 %t) #5 comdat align 2 !dbg !5406 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %t.addr = alloca i32, align 4
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !5407, metadata !DIExpression()), !dbg !5408
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !5409, metadata !DIExpression()), !dbg !5410
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load i32, i32* %t.addr, align 4, !dbg !5411
  %cmp = icmp eq i32 %0, 66, !dbg !5412
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !5413

lor.lhs.false:                                    ; preds = %entry
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 1, !dbg !5414
  %1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !5414
  %type = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %1, i32 0, i32 3, !dbg !5415
  %2 = load i32, i32* %type, align 8, !dbg !5415
  %cmp2 = icmp ne i32 %2, 66, !dbg !5416
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !5417

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %namep3 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 1, !dbg !5418
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep3, align 8, !dbg !5418
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %3, i32 0, i32 0, !dbg !5419
  %call = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %name), !dbg !5420
  br label %cond.end11, !dbg !5417

cond.false:                                       ; preds = %lor.lhs.false
  %4 = load i32, i32* %t.addr, align 4, !dbg !5421
  %cmp4 = icmp eq i32 %4, 73, !dbg !5422
  br i1 %cmp4, label %cond.true5, label %cond.false8, !dbg !5421

cond.true5:                                       ; preds = %cond.false
  %namep6 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 1, !dbg !5423
  %5 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep6, align 8, !dbg !5423
  %namei = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %5, i32 0, i32 1, !dbg !5424
  %call7 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %namei), !dbg !5425
  br label %cond.end, !dbg !5421

cond.false8:                                      ; preds = %cond.false
  %namep9 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 1, !dbg !5426
  %6 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep9, align 8, !dbg !5426
  %nameo = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %6, i32 0, i32 2, !dbg !5427
  %call10 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %nameo), !dbg !5428
  br label %cond.end, !dbg !5421

cond.end:                                         ; preds = %cond.false8, %cond.true5
  %cond = phi i8* [ %call7, %cond.true5 ], [ %call10, %cond.false8 ], !dbg !5421
  br label %cond.end11, !dbg !5417

cond.end11:                                       ; preds = %cond.end, %cond.true
  %cond12 = phi i8* [ %call, %cond.true ], [ %cond, %cond.end ], !dbg !5417
  ret i8* %cond12, !dbg !5429
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule7addGateEPKcN5cGate4TypeEb(%class.cModule* %this, i8* %gatename, i32 %type, i1 zeroext %isVector) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5430 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %isVector.addr = alloca i8, align 1
  %suffix = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %newGate = alloca %class.cGate*, align 8
  %newGate22 = alloca %class.cGate*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5435, metadata !DIExpression()), !dbg !5436
  %frombool = zext i1 %isVector to i8
  store i8 %frombool, i8* %isVector.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %isVector.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !5439, metadata !DIExpression()), !dbg !5440
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !5441
  %call = call i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !5443
  %cmp = icmp sge i32 %call, 0, !dbg !5444
  br i1 %cmp, label %if.then, label %if.end, !dbg !5445

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5446
  %1 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !5446
  %2 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5447
  %3 = load i8*, i8** %gatename.addr, align 8, !dbg !5448
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %1, %class.cObject* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i8* %3)
          to label %invoke.cont unwind label %lpad, !dbg !5449

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5446
  unreachable, !dbg !5446

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !5450
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !5450
  store i8* %5, i8** %exn.slot, align 8, !dbg !5450
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !5450
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !5450
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !5446
  br label %eh.resume, !dbg !5446

if.end:                                           ; preds = %entry
  %7 = load i8, i8* %suffix, align 1, !dbg !5451
  %tobool = icmp ne i8 %7, 0, !dbg !5451
  br i1 %tobool, label %if.then2, label %if.end6, !dbg !5453

if.then2:                                         ; preds = %if.end
  %exception3 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5454
  %8 = bitcast i8* %exception3 to %class.cRuntimeError*, !dbg !5454
  %9 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5455
  %10 = load i8*, i8** %gatename.addr, align 8, !dbg !5456
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %8, %class.cObject* %9, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.10, i64 0, i64 0), i8* %10)
          to label %invoke.cont5 unwind label %lpad4, !dbg !5457

invoke.cont5:                                     ; preds = %if.then2
  call void @__cxa_throw(i8* %exception3, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5454
  unreachable, !dbg !5454

lpad4:                                            ; preds = %if.then2
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !5458
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !5458
  store i8* %12, i8** %exn.slot, align 8, !dbg !5458
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !5458
  store i32 %13, i32* %ehselector.slot, align 4, !dbg !5458
  call void @__cxa_free_exception(i8* %exception3) #3, !dbg !5454
  br label %eh.resume, !dbg !5454

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !5459, metadata !DIExpression()), !dbg !5460
  %14 = load i8*, i8** %gatename.addr, align 8, !dbg !5461
  %15 = load i32, i32* %type.addr, align 4, !dbg !5462
  %16 = load i8, i8* %isVector.addr, align 1, !dbg !5463
  %tobool7 = trunc i8 %16 to i1, !dbg !5463
  %call8 = call %"struct.cGate::Desc"* @_ZN7cModule11addGateDescEPKcN5cGate4TypeEb(%class.cModule* %this1, i8* %14, i32 %15, i1 zeroext %tobool7), !dbg !5464
  store %"struct.cGate::Desc"* %call8, %"struct.cGate::Desc"** %desc, align 8, !dbg !5460
  %17 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5465
  %ownerp = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %17, i32 0, i32 0, !dbg !5466
  store %class.cModule* %this1, %class.cModule** %ownerp, align 8, !dbg !5467
  %18 = load i8, i8* %isVector.addr, align 1, !dbg !5468
  %tobool9 = trunc i8 %18 to i1, !dbg !5468
  br i1 %tobool9, label %if.end36, label %if.then10, !dbg !5470

if.then10:                                        ; preds = %if.end6
  %19 = load i32, i32* %type.addr, align 4, !dbg !5471
  %cmp11 = icmp ne i32 %19, 79, !dbg !5474
  br i1 %cmp11, label %if.then12, label %if.end19, !dbg !5475

if.then12:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %class.cGate** %newGate, metadata !5476, metadata !DIExpression()), !dbg !5478
  %20 = load i32, i32* %type.addr, align 4, !dbg !5479
  %21 = bitcast %class.cModule* %this1 to %class.cGate* (%class.cModule*, i32)***, !dbg !5480
  %vtable = load %class.cGate* (%class.cModule*, i32)**, %class.cGate* (%class.cModule*, i32)*** %21, align 8, !dbg !5480
  %vfn = getelementptr inbounds %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vtable, i64 50, !dbg !5480
  %22 = load %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vfn, align 8, !dbg !5480
  %call13 = call %class.cGate* %22(%class.cModule* %this1, i32 %20), !dbg !5480
  store %class.cGate* %call13, %class.cGate** %newGate, align 8, !dbg !5478
  %23 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5481
  %24 = load %class.cGate*, %class.cGate** %newGate, align 8, !dbg !5482
  call void @_ZN5cGate4Desc12setInputGateEPS_(%"struct.cGate::Desc"* %23, %class.cGate* %24), !dbg !5483
  %call14 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5484
  %suppress_notifications = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call14, i32 0, i32 2, !dbg !5484
  %25 = load i8, i8* %suppress_notifications, align 1, !dbg !5484
  %tobool15 = trunc i8 %25 to i1, !dbg !5484
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !5484

cond.true:                                        ; preds = %if.then12
  br label %cond.end, !dbg !5484

cond.false:                                       ; preds = %if.then12
  %call16 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5484
  %26 = load %class.cGate*, %class.cGate** %newGate, align 8, !dbg !5485
  %27 = bitcast %class.cEnvir* %call16 to void (%class.cEnvir*, %class.cGate*)***, !dbg !5486
  %vtable17 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %27, align 8, !dbg !5486
  %vfn18 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable17, i64 21, !dbg !5486
  %28 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn18, align 8, !dbg !5486
  call void %28(%class.cEnvir* %call16, %class.cGate* %26), !dbg !5486
  br label %cond.end, !dbg !5484

cond.end:                                         ; preds = %cond.false, %cond.true
  br label %if.end19, !dbg !5487

if.end19:                                         ; preds = %cond.end, %if.then10
  %29 = load i32, i32* %type.addr, align 4, !dbg !5488
  %cmp20 = icmp ne i32 %29, 73, !dbg !5490
  br i1 %cmp20, label %if.then21, label %if.end35, !dbg !5491

if.then21:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata %class.cGate** %newGate22, metadata !5492, metadata !DIExpression()), !dbg !5494
  %30 = load i32, i32* %type.addr, align 4, !dbg !5495
  %31 = bitcast %class.cModule* %this1 to %class.cGate* (%class.cModule*, i32)***, !dbg !5496
  %vtable23 = load %class.cGate* (%class.cModule*, i32)**, %class.cGate* (%class.cModule*, i32)*** %31, align 8, !dbg !5496
  %vfn24 = getelementptr inbounds %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vtable23, i64 50, !dbg !5496
  %32 = load %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vfn24, align 8, !dbg !5496
  %call25 = call %class.cGate* %32(%class.cModule* %this1, i32 %30), !dbg !5496
  store %class.cGate* %call25, %class.cGate** %newGate22, align 8, !dbg !5494
  %33 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5497
  %34 = load %class.cGate*, %class.cGate** %newGate22, align 8, !dbg !5498
  call void @_ZN5cGate4Desc13setOutputGateEPS_(%"struct.cGate::Desc"* %33, %class.cGate* %34), !dbg !5499
  %call26 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5500
  %suppress_notifications27 = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call26, i32 0, i32 2, !dbg !5500
  %35 = load i8, i8* %suppress_notifications27, align 1, !dbg !5500
  %tobool28 = trunc i8 %35 to i1, !dbg !5500
  br i1 %tobool28, label %cond.true29, label %cond.false30, !dbg !5500

cond.true29:                                      ; preds = %if.then21
  br label %cond.end34, !dbg !5500

cond.false30:                                     ; preds = %if.then21
  %call31 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5500
  %36 = load %class.cGate*, %class.cGate** %newGate22, align 8, !dbg !5501
  %37 = bitcast %class.cEnvir* %call31 to void (%class.cEnvir*, %class.cGate*)***, !dbg !5502
  %vtable32 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %37, align 8, !dbg !5502
  %vfn33 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable32, i64 21, !dbg !5502
  %38 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn33, align 8, !dbg !5502
  call void %38(%class.cEnvir* %call31, %class.cGate* %36), !dbg !5502
  br label %cond.end34, !dbg !5500

cond.end34:                                       ; preds = %cond.false30, %cond.true29
  br label %if.end35, !dbg !5503

if.end35:                                         ; preds = %cond.end34, %if.end19
  br label %if.end36, !dbg !5504

if.end36:                                         ; preds = %if.end35, %if.end6
  ret void, !dbg !5505

eh.resume:                                        ; preds = %lpad4, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5446
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5446
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5446
  %lpad.val37 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5446
  resume { i8*, i32 } %lpad.val37, !dbg !5446
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5cGate4Desc12setInputGateEPS_(%"struct.cGate::Desc"* %this, %class.cGate* %g) #5 comdat align 2 !dbg !5506 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %g.addr = alloca %class.cGate*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store %class.cGate* %g, %class.cGate** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %g.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5511
  %1 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 3, !dbg !5512
  %inputgate = bitcast %union.anon.8* %1 to %class.cGate**, !dbg !5512
  store %class.cGate* %0, %class.cGate** %inputgate, align 8, !dbg !5513
  %2 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5514
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %2, i32 0, i32 1, !dbg !5515
  store %"struct.cGate::Desc"* %this1, %"struct.cGate::Desc"** %desc, align 8, !dbg !5516
  %3 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5517
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %3, i32 0, i32 2, !dbg !5518
  store i32 -4, i32* %pos, align 8, !dbg !5519
  ret void, !dbg !5520
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5cGate4Desc13setOutputGateEPS_(%"struct.cGate::Desc"* %this, %class.cGate* %g) #5 comdat align 2 !dbg !5521 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %g.addr = alloca %class.cGate*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !5522, metadata !DIExpression()), !dbg !5523
  store %class.cGate* %g, %class.cGate** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %g.addr, metadata !5524, metadata !DIExpression()), !dbg !5525
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5526
  %1 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 4, !dbg !5527
  %outputgate = bitcast %union.anon.9* %1 to %class.cGate**, !dbg !5527
  store %class.cGate* %0, %class.cGate** %outputgate, align 8, !dbg !5528
  %2 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5529
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %2, i32 0, i32 1, !dbg !5530
  store %"struct.cGate::Desc"* %this1, %"struct.cGate::Desc"** %desc, align 8, !dbg !5531
  %3 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5532
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %3, i32 0, i32 2, !dbg !5533
  store i32 -3, i32* %pos, align 8, !dbg !5534
  ret void, !dbg !5535
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %this, i8* %gatename, i32 %newSize) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5536 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %newSize.addr = alloca i32, align 4
  %suffix = alloca i8, align 1
  %descIndex = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %oldSize = alloca i32, align 4
  %type = alloca i32, align 4
  %oldCapacity = alloca i32, align 4
  %newCapacity = alloca i32, align 4
  %i = alloca i32, align 4
  %gate = alloca %class.cGate*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cleanup.isactive = alloca i1, align 1
  %gate53 = alloca %class.cGate*, align 8
  %ref.tmp63 = alloca %"class.std::__cxx11::basic_string", align 8
  %cleanup.isactive71 = alloca i1, align 1
  %i135 = alloca i32, align 4
  %newGate = alloca %class.cGate*, align 8
  %newGate156 = alloca %class.cGate*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5537, metadata !DIExpression()), !dbg !5538
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !5539, metadata !DIExpression()), !dbg !5540
  store i32 %newSize, i32* %newSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newSize.addr, metadata !5541, metadata !DIExpression()), !dbg !5542
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !5543, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.declare(metadata i32* %descIndex, metadata !5545, metadata !DIExpression()), !dbg !5546
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !5547
  %call = call i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !5548
  store i32 %call, i32* %descIndex, align 4, !dbg !5546
  %1 = load i32, i32* %descIndex, align 4, !dbg !5549
  %cmp = icmp slt i32 %1, 0, !dbg !5551
  br i1 %cmp, label %if.then, label %if.end, !dbg !5552

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5553
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !5553
  %3 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5554
  %4 = load i8*, i8** %gatename.addr, align 8, !dbg !5555
  %5 = load i8*, i8** %gatename.addr, align 8, !dbg !5556
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %4, i8* %5)
          to label %invoke.cont unwind label %lpad, !dbg !5557

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5553
  unreachable, !dbg !5553

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !5558
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !5558
  store i8* %7, i8** %exn.slot, align 8, !dbg !5558
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !5558
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !5558
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !5553
  br label %eh.resume, !dbg !5553

if.end:                                           ; preds = %entry
  %9 = load i8, i8* %suffix, align 1, !dbg !5559
  %tobool = icmp ne i8 %9, 0, !dbg !5559
  br i1 %tobool, label %if.then2, label %if.end6, !dbg !5561

if.then2:                                         ; preds = %if.end
  %exception3 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5562
  %10 = bitcast i8* %exception3 to %class.cRuntimeError*, !dbg !5562
  %11 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5563
  %12 = load i8*, i8** %gatename.addr, align 8, !dbg !5564
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %10, %class.cObject* %11, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.12, i64 0, i64 0), i8* %12)
          to label %invoke.cont5 unwind label %lpad4, !dbg !5565

invoke.cont5:                                     ; preds = %if.then2
  call void @__cxa_throw(i8* %exception3, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5562
  unreachable, !dbg !5562

lpad4:                                            ; preds = %if.then2
  %13 = landingpad { i8*, i32 }
          cleanup, !dbg !5566
  %14 = extractvalue { i8*, i32 } %13, 0, !dbg !5566
  store i8* %14, i8** %exn.slot, align 8, !dbg !5566
  %15 = extractvalue { i8*, i32 } %13, 1, !dbg !5566
  store i32 %15, i32* %ehselector.slot, align 4, !dbg !5566
  call void @__cxa_free_exception(i8* %exception3) #3, !dbg !5562
  br label %eh.resume, !dbg !5562

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !5567, metadata !DIExpression()), !dbg !5568
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5569
  %16 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !5569
  %17 = load i32, i32* %descIndex, align 4, !dbg !5570
  %idx.ext = sext i32 %17 to i64, !dbg !5571
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %16, i64 %idx.ext, !dbg !5571
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !5568
  %18 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5572
  %call7 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %18), !dbg !5574
  br i1 %call7, label %if.end12, label %if.then8, !dbg !5575

if.then8:                                         ; preds = %if.end6
  %exception9 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5576
  %19 = bitcast i8* %exception9 to %class.cRuntimeError*, !dbg !5576
  %20 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5577
  %21 = load i8*, i8** %gatename.addr, align 8, !dbg !5578
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %19, %class.cObject* %20, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0), i8* %21)
          to label %invoke.cont11 unwind label %lpad10, !dbg !5579

invoke.cont11:                                    ; preds = %if.then8
  call void @__cxa_throw(i8* %exception9, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5576
  unreachable, !dbg !5576

lpad10:                                           ; preds = %if.then8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !5580
  %23 = extractvalue { i8*, i32 } %22, 0, !dbg !5580
  store i8* %23, i8** %exn.slot, align 8, !dbg !5580
  %24 = extractvalue { i8*, i32 } %22, 1, !dbg !5580
  store i32 %24, i32* %ehselector.slot, align 4, !dbg !5580
  call void @__cxa_free_exception(i8* %exception9) #3, !dbg !5576
  br label %eh.resume, !dbg !5576

if.end12:                                         ; preds = %if.end6
  %25 = load i32, i32* %newSize.addr, align 4, !dbg !5581
  %cmp13 = icmp slt i32 %25, 0, !dbg !5583
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !5584

if.then14:                                        ; preds = %if.end12
  %exception15 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5585
  %26 = bitcast i8* %exception15 to %class.cRuntimeError*, !dbg !5585
  %27 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5586
  %28 = load i32, i32* %newSize.addr, align 4, !dbg !5587
  %29 = load i8*, i8** %gatename.addr, align 8, !dbg !5588
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %26, %class.cObject* %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.14, i64 0, i64 0), i32 %28, i8* %29)
          to label %invoke.cont17 unwind label %lpad16, !dbg !5589

invoke.cont17:                                    ; preds = %if.then14
  call void @__cxa_throw(i8* %exception15, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5585
  unreachable, !dbg !5585

lpad16:                                           ; preds = %if.then14
  %30 = landingpad { i8*, i32 }
          cleanup, !dbg !5590
  %31 = extractvalue { i8*, i32 } %30, 0, !dbg !5590
  store i8* %31, i8** %exn.slot, align 8, !dbg !5590
  %32 = extractvalue { i8*, i32 } %30, 1, !dbg !5590
  store i32 %32, i32* %ehselector.slot, align 4, !dbg !5590
  call void @__cxa_free_exception(i8* %exception15) #3, !dbg !5585
  br label %eh.resume, !dbg !5585

if.end18:                                         ; preds = %if.end12
  %33 = load i32, i32* %newSize.addr, align 4, !dbg !5591
  %cmp19 = icmp sgt i32 %33, 524287, !dbg !5593
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !5594

if.then20:                                        ; preds = %if.end18
  %exception21 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5595
  %34 = bitcast i8* %exception21 to %class.cRuntimeError*, !dbg !5595
  %35 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5596
  %36 = load i8*, i8** %gatename.addr, align 8, !dbg !5597
  %37 = load i32, i32* %newSize.addr, align 4, !dbg !5598
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %34, %class.cObject* %35, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.15, i64 0, i64 0), i8* %36, i32 %37, i32 524287)
          to label %invoke.cont23 unwind label %lpad22, !dbg !5599

invoke.cont23:                                    ; preds = %if.then20
  call void @__cxa_throw(i8* %exception21, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5595
  unreachable, !dbg !5595

lpad22:                                           ; preds = %if.then20
  %38 = landingpad { i8*, i32 }
          cleanup, !dbg !5600
  %39 = extractvalue { i8*, i32 } %38, 0, !dbg !5600
  store i8* %39, i8** %exn.slot, align 8, !dbg !5600
  %40 = extractvalue { i8*, i32 } %38, 1, !dbg !5600
  store i32 %40, i32* %ehselector.slot, align 4, !dbg !5600
  call void @__cxa_free_exception(i8* %exception21) #3, !dbg !5595
  br label %eh.resume, !dbg !5595

if.end24:                                         ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %oldSize, metadata !5601, metadata !DIExpression()), !dbg !5602
  %41 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5603
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %41, i32 0, i32 2, !dbg !5604
  %42 = load i32, i32* %size, align 8, !dbg !5604
  store i32 %42, i32* %oldSize, align 4, !dbg !5602
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5605, metadata !DIExpression()), !dbg !5606
  %43 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5607
  %call25 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %43), !dbg !5608
  store i32 %call25, i32* %type, align 4, !dbg !5606
  call void @llvm.dbg.declare(metadata i32* %oldCapacity, metadata !5609, metadata !DIExpression()), !dbg !5610
  %44 = load i32, i32* %oldSize, align 4, !dbg !5611
  %call26 = call i32 @_ZN5cGate4Desc11capacityForEi(i32 %44), !dbg !5612
  store i32 %call26, i32* %oldCapacity, align 4, !dbg !5610
  call void @llvm.dbg.declare(metadata i32* %newCapacity, metadata !5613, metadata !DIExpression()), !dbg !5614
  %45 = load i32, i32* %newSize.addr, align 4, !dbg !5615
  %call27 = call i32 @_ZN5cGate4Desc11capacityForEi(i32 %45), !dbg !5616
  store i32 %call27, i32* %newCapacity, align 4, !dbg !5614
  %46 = load i32, i32* %newSize.addr, align 4, !dbg !5617
  %47 = load i32, i32* %oldSize, align 4, !dbg !5619
  %cmp28 = icmp slt i32 %46, %47, !dbg !5620
  br i1 %cmp28, label %if.then29, label %if.end123, !dbg !5621

if.then29:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5622, metadata !DIExpression()), !dbg !5625
  %48 = load i32, i32* %oldSize, align 4, !dbg !5626
  %sub = sub nsw i32 %48, 1, !dbg !5627
  store i32 %sub, i32* %i, align 4, !dbg !5625
  br label %for.cond, !dbg !5628

for.cond:                                         ; preds = %for.inc, %if.then29
  %49 = load i32, i32* %i, align 4, !dbg !5629
  %50 = load i32, i32* %newSize.addr, align 4, !dbg !5631
  %cmp30 = icmp sge i32 %49, %50, !dbg !5632
  br i1 %cmp30, label %for.body, label %for.end, !dbg !5633

for.body:                                         ; preds = %for.cond
  %51 = load i32, i32* %type, align 4, !dbg !5634
  %cmp31 = icmp ne i32 %51, 79, !dbg !5637
  br i1 %cmp31, label %if.then32, label %if.end50, !dbg !5638

if.then32:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %class.cGate** %gate, metadata !5639, metadata !DIExpression()), !dbg !5641
  %52 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5642
  %53 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %52, i32 0, i32 3, !dbg !5643
  %inputgatev = bitcast %union.anon.8* %53 to %class.cGate***, !dbg !5643
  %54 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !5643
  %55 = load i32, i32* %i, align 4, !dbg !5644
  %idxprom = sext i32 %55 to i64, !dbg !5642
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %54, i64 %idxprom, !dbg !5642
  %56 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !5642
  store %class.cGate* %56, %class.cGate** %gate, align 8, !dbg !5641
  %57 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !5645
  %call33 = call %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %57), !dbg !5647
  %tobool34 = icmp ne %class.cGate* %call33, null, !dbg !5645
  br i1 %tobool34, label %if.then37, label %lor.lhs.false, !dbg !5648

lor.lhs.false:                                    ; preds = %if.then32
  %58 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !5649
  %call35 = call %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %58), !dbg !5650
  %tobool36 = icmp ne %class.cGate* %call35, null, !dbg !5649
  br i1 %tobool36, label %if.then37, label %if.end44, !dbg !5651

if.then37:                                        ; preds = %lor.lhs.false, %if.then32
  %exception38 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5652
  store i1 true, i1* %cleanup.isactive, align 1
  %59 = bitcast i8* %exception38 to %class.cRuntimeError*, !dbg !5652
  %60 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5653
  %61 = load i8*, i8** %gatename.addr, align 8, !dbg !5654
  %62 = load i32, i32* %newSize.addr, align 4, !dbg !5655
  %63 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !5656
  %64 = bitcast %class.cGate* %63 to %class.cObject*, !dbg !5657
  %65 = bitcast %class.cObject* %64 to void (%"class.std::__cxx11::basic_string"*, %class.cObject*)***, !dbg !5657
  %vtable = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)**, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*** %65, align 8, !dbg !5657
  %vfn = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vtable, i64 8, !dbg !5657
  %66 = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vfn, align 8, !dbg !5657
  invoke void %66(%"class.std::__cxx11::basic_string"* sret %ref.tmp, %class.cObject* %64)
          to label %invoke.cont40 unwind label %lpad39, !dbg !5657

invoke.cont40:                                    ; preds = %if.then37
  %call41 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %ref.tmp) #3, !dbg !5658
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %59, %class.cObject* %60, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.16, i64 0, i64 0), i8* %61, i32 %62, i8* %call41)
          to label %invoke.cont43 unwind label %lpad42, !dbg !5659

invoke.cont43:                                    ; preds = %invoke.cont40
  store i1 false, i1* %cleanup.isactive, align 1, !dbg !5652
  invoke void @__cxa_throw(i8* %exception38, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad42, !dbg !5652

lpad39:                                           ; preds = %if.then37
  %67 = landingpad { i8*, i32 }
          cleanup, !dbg !5660
  %68 = extractvalue { i8*, i32 } %67, 0, !dbg !5660
  store i8* %68, i8** %exn.slot, align 8, !dbg !5660
  %69 = extractvalue { i8*, i32 } %67, 1, !dbg !5660
  store i32 %69, i32* %ehselector.slot, align 4, !dbg !5660
  br label %ehcleanup, !dbg !5660

lpad42:                                           ; preds = %invoke.cont43, %invoke.cont40
  %70 = landingpad { i8*, i32 }
          cleanup, !dbg !5660
  %71 = extractvalue { i8*, i32 } %70, 0, !dbg !5660
  store i8* %71, i8** %exn.slot, align 8, !dbg !5660
  %72 = extractvalue { i8*, i32 } %70, 1, !dbg !5660
  store i32 %72, i32* %ehselector.slot, align 4, !dbg !5660
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp) #3, !dbg !5652
  br label %ehcleanup, !dbg !5652

ehcleanup:                                        ; preds = %lpad42, %lpad39
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1, !dbg !5652
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done, !dbg !5652

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception38) #3, !dbg !5652
  br label %cleanup.done, !dbg !5652

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume, !dbg !5652

if.end44:                                         ; preds = %lor.lhs.false
  %call45 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5661
  %suppress_notifications = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call45, i32 0, i32 2, !dbg !5661
  %73 = load i8, i8* %suppress_notifications, align 1, !dbg !5661
  %tobool46 = trunc i8 %73 to i1, !dbg !5661
  br i1 %tobool46, label %cond.true, label %cond.false, !dbg !5661

cond.true:                                        ; preds = %if.end44
  br label %cond.end, !dbg !5661

cond.false:                                       ; preds = %if.end44
  %call47 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5661
  %74 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !5662
  %75 = bitcast %class.cEnvir* %call47 to void (%class.cEnvir*, %class.cGate*)***, !dbg !5663
  %vtable48 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %75, align 8, !dbg !5663
  %vfn49 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable48, i64 22, !dbg !5663
  %76 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn49, align 8, !dbg !5663
  call void %76(%class.cEnvir* %call47, %class.cGate* %74), !dbg !5663
  br label %cond.end, !dbg !5661

cond.end:                                         ; preds = %cond.false, %cond.true
  br label %if.end50, !dbg !5664

if.end50:                                         ; preds = %cond.end, %for.body
  %77 = load i32, i32* %type, align 4, !dbg !5665
  %cmp51 = icmp ne i32 %77, 73, !dbg !5667
  br i1 %cmp51, label %if.then52, label %if.end87, !dbg !5668

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata %class.cGate** %gate53, metadata !5669, metadata !DIExpression()), !dbg !5671
  %78 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5672
  %79 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %78, i32 0, i32 4, !dbg !5673
  %outputgatev = bitcast %union.anon.9* %79 to %class.cGate***, !dbg !5673
  %80 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !5673
  %81 = load i32, i32* %i, align 4, !dbg !5674
  %idxprom54 = sext i32 %81 to i64, !dbg !5672
  %arrayidx55 = getelementptr inbounds %class.cGate*, %class.cGate** %80, i64 %idxprom54, !dbg !5672
  %82 = load %class.cGate*, %class.cGate** %arrayidx55, align 8, !dbg !5672
  store %class.cGate* %82, %class.cGate** %gate53, align 8, !dbg !5671
  %83 = load %class.cGate*, %class.cGate** %gate53, align 8, !dbg !5675
  %call56 = call %class.cGate* @_ZNK5cGate15getPreviousGateEv(%class.cGate* %83), !dbg !5677
  %tobool57 = icmp ne %class.cGate* %call56, null, !dbg !5675
  br i1 %tobool57, label %if.then61, label %lor.lhs.false58, !dbg !5678

lor.lhs.false58:                                  ; preds = %if.then52
  %84 = load %class.cGate*, %class.cGate** %gate53, align 8, !dbg !5679
  %call59 = call %class.cGate* @_ZNK5cGate11getNextGateEv(%class.cGate* %84), !dbg !5680
  %tobool60 = icmp ne %class.cGate* %call59, null, !dbg !5679
  br i1 %tobool60, label %if.then61, label %if.end77, !dbg !5681

if.then61:                                        ; preds = %lor.lhs.false58, %if.then52
  %exception62 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5682
  store i1 true, i1* %cleanup.isactive71, align 1
  %85 = bitcast i8* %exception62 to %class.cRuntimeError*, !dbg !5682
  %86 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5683
  %87 = load i8*, i8** %gatename.addr, align 8, !dbg !5684
  %88 = load i32, i32* %newSize.addr, align 4, !dbg !5685
  %89 = load %class.cGate*, %class.cGate** %gate53, align 8, !dbg !5686
  %90 = bitcast %class.cGate* %89 to %class.cObject*, !dbg !5687
  %91 = bitcast %class.cObject* %90 to void (%"class.std::__cxx11::basic_string"*, %class.cObject*)***, !dbg !5687
  %vtable64 = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)**, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*** %91, align 8, !dbg !5687
  %vfn65 = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vtable64, i64 8, !dbg !5687
  %92 = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vfn65, align 8, !dbg !5687
  invoke void %92(%"class.std::__cxx11::basic_string"* sret %ref.tmp63, %class.cObject* %90)
          to label %invoke.cont67 unwind label %lpad66, !dbg !5687

invoke.cont67:                                    ; preds = %if.then61
  %call68 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %ref.tmp63) #3, !dbg !5688
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %85, %class.cObject* %86, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.16, i64 0, i64 0), i8* %87, i32 %88, i8* %call68)
          to label %invoke.cont70 unwind label %lpad69, !dbg !5689

invoke.cont70:                                    ; preds = %invoke.cont67
  store i1 false, i1* %cleanup.isactive71, align 1, !dbg !5682
  invoke void @__cxa_throw(i8* %exception62, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad69, !dbg !5682

lpad66:                                           ; preds = %if.then61
  %93 = landingpad { i8*, i32 }
          cleanup, !dbg !5690
  %94 = extractvalue { i8*, i32 } %93, 0, !dbg !5690
  store i8* %94, i8** %exn.slot, align 8, !dbg !5690
  %95 = extractvalue { i8*, i32 } %93, 1, !dbg !5690
  store i32 %95, i32* %ehselector.slot, align 4, !dbg !5690
  br label %ehcleanup73, !dbg !5690

lpad69:                                           ; preds = %invoke.cont70, %invoke.cont67
  %96 = landingpad { i8*, i32 }
          cleanup, !dbg !5690
  %97 = extractvalue { i8*, i32 } %96, 0, !dbg !5690
  store i8* %97, i8** %exn.slot, align 8, !dbg !5690
  %98 = extractvalue { i8*, i32 } %96, 1, !dbg !5690
  store i32 %98, i32* %ehselector.slot, align 4, !dbg !5690
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp63) #3, !dbg !5682
  br label %ehcleanup73, !dbg !5682

ehcleanup73:                                      ; preds = %lpad69, %lpad66
  %cleanup.is_active74 = load i1, i1* %cleanup.isactive71, align 1, !dbg !5682
  br i1 %cleanup.is_active74, label %cleanup.action75, label %cleanup.done76, !dbg !5682

cleanup.action75:                                 ; preds = %ehcleanup73
  call void @__cxa_free_exception(i8* %exception62) #3, !dbg !5682
  br label %cleanup.done76, !dbg !5682

cleanup.done76:                                   ; preds = %cleanup.action75, %ehcleanup73
  br label %eh.resume, !dbg !5682

if.end77:                                         ; preds = %lor.lhs.false58
  %call78 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5691
  %suppress_notifications79 = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call78, i32 0, i32 2, !dbg !5691
  %99 = load i8, i8* %suppress_notifications79, align 1, !dbg !5691
  %tobool80 = trunc i8 %99 to i1, !dbg !5691
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5691

cond.true81:                                      ; preds = %if.end77
  br label %cond.end86, !dbg !5691

cond.false82:                                     ; preds = %if.end77
  %call83 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5691
  %100 = load %class.cGate*, %class.cGate** %gate53, align 8, !dbg !5692
  %101 = bitcast %class.cEnvir* %call83 to void (%class.cEnvir*, %class.cGate*)***, !dbg !5693
  %vtable84 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %101, align 8, !dbg !5693
  %vfn85 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable84, i64 22, !dbg !5693
  %102 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn85, align 8, !dbg !5693
  call void %102(%class.cEnvir* %call83, %class.cGate* %100), !dbg !5693
  br label %cond.end86, !dbg !5691

cond.end86:                                       ; preds = %cond.false82, %cond.true81
  br label %if.end87, !dbg !5694

if.end87:                                         ; preds = %cond.end86, %if.end50
  %103 = load i32, i32* %i, align 4, !dbg !5695
  %104 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5696
  %size88 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %104, i32 0, i32 2, !dbg !5697
  store i32 %103, i32* %size88, align 8, !dbg !5698
  %105 = load i32, i32* %type, align 4, !dbg !5699
  %cmp89 = icmp ne i32 %105, 79, !dbg !5701
  br i1 %cmp89, label %if.then90, label %if.end99, !dbg !5702

if.then90:                                        ; preds = %if.end87
  %106 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5703
  %107 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %106, i32 0, i32 3, !dbg !5705
  %inputgatev91 = bitcast %union.anon.8* %107 to %class.cGate***, !dbg !5705
  %108 = load %class.cGate**, %class.cGate*** %inputgatev91, align 8, !dbg !5705
  %109 = load i32, i32* %i, align 4, !dbg !5706
  %idxprom92 = sext i32 %109 to i64, !dbg !5703
  %arrayidx93 = getelementptr inbounds %class.cGate*, %class.cGate** %108, i64 %idxprom92, !dbg !5703
  %110 = load %class.cGate*, %class.cGate** %arrayidx93, align 8, !dbg !5703
  %isnull = icmp eq %class.cGate* %110, null, !dbg !5707
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5707

delete.notnull:                                   ; preds = %if.then90
  %111 = bitcast %class.cGate* %110 to void (%class.cGate*)***, !dbg !5707
  %vtable94 = load void (%class.cGate*)**, void (%class.cGate*)*** %111, align 8, !dbg !5707
  %vfn95 = getelementptr inbounds void (%class.cGate*)*, void (%class.cGate*)** %vtable94, i64 4, !dbg !5707
  %112 = load void (%class.cGate*)*, void (%class.cGate*)** %vfn95, align 8, !dbg !5707
  call void %112(%class.cGate* %110) #3, !dbg !5707
  br label %delete.end, !dbg !5707

delete.end:                                       ; preds = %delete.notnull, %if.then90
  %113 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5708
  %114 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %113, i32 0, i32 3, !dbg !5709
  %inputgatev96 = bitcast %union.anon.8* %114 to %class.cGate***, !dbg !5709
  %115 = load %class.cGate**, %class.cGate*** %inputgatev96, align 8, !dbg !5709
  %116 = load i32, i32* %i, align 4, !dbg !5710
  %idxprom97 = sext i32 %116 to i64, !dbg !5708
  %arrayidx98 = getelementptr inbounds %class.cGate*, %class.cGate** %115, i64 %idxprom97, !dbg !5708
  store %class.cGate* null, %class.cGate** %arrayidx98, align 8, !dbg !5711
  br label %if.end99, !dbg !5712

if.end99:                                         ; preds = %delete.end, %if.end87
  %117 = load i32, i32* %type, align 4, !dbg !5713
  %cmp100 = icmp ne i32 %117, 73, !dbg !5715
  br i1 %cmp100, label %if.then101, label %if.end113, !dbg !5716

if.then101:                                       ; preds = %if.end99
  %118 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5717
  %119 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %118, i32 0, i32 4, !dbg !5719
  %outputgatev102 = bitcast %union.anon.9* %119 to %class.cGate***, !dbg !5719
  %120 = load %class.cGate**, %class.cGate*** %outputgatev102, align 8, !dbg !5719
  %121 = load i32, i32* %i, align 4, !dbg !5720
  %idxprom103 = sext i32 %121 to i64, !dbg !5717
  %arrayidx104 = getelementptr inbounds %class.cGate*, %class.cGate** %120, i64 %idxprom103, !dbg !5717
  %122 = load %class.cGate*, %class.cGate** %arrayidx104, align 8, !dbg !5717
  %isnull105 = icmp eq %class.cGate* %122, null, !dbg !5721
  br i1 %isnull105, label %delete.end109, label %delete.notnull106, !dbg !5721

delete.notnull106:                                ; preds = %if.then101
  %123 = bitcast %class.cGate* %122 to void (%class.cGate*)***, !dbg !5721
  %vtable107 = load void (%class.cGate*)**, void (%class.cGate*)*** %123, align 8, !dbg !5721
  %vfn108 = getelementptr inbounds void (%class.cGate*)*, void (%class.cGate*)** %vtable107, i64 4, !dbg !5721
  %124 = load void (%class.cGate*)*, void (%class.cGate*)** %vfn108, align 8, !dbg !5721
  call void %124(%class.cGate* %122) #3, !dbg !5721
  br label %delete.end109, !dbg !5721

delete.end109:                                    ; preds = %delete.notnull106, %if.then101
  %125 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5722
  %126 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %125, i32 0, i32 4, !dbg !5723
  %outputgatev110 = bitcast %union.anon.9* %126 to %class.cGate***, !dbg !5723
  %127 = load %class.cGate**, %class.cGate*** %outputgatev110, align 8, !dbg !5723
  %128 = load i32, i32* %i, align 4, !dbg !5724
  %idxprom111 = sext i32 %128 to i64, !dbg !5722
  %arrayidx112 = getelementptr inbounds %class.cGate*, %class.cGate** %127, i64 %idxprom111, !dbg !5722
  store %class.cGate* null, %class.cGate** %arrayidx112, align 8, !dbg !5725
  br label %if.end113, !dbg !5726

if.end113:                                        ; preds = %delete.end109, %if.end99
  br label %for.inc, !dbg !5727

for.inc:                                          ; preds = %if.end113
  %129 = load i32, i32* %i, align 4, !dbg !5728
  %dec = add nsw i32 %129, -1, !dbg !5728
  store i32 %dec, i32* %i, align 4, !dbg !5728
  br label %for.cond, !dbg !5729, !llvm.loop !5730

for.end:                                          ; preds = %for.cond
  %130 = load i32, i32* %type, align 4, !dbg !5732
  %cmp114 = icmp ne i32 %130, 79, !dbg !5734
  br i1 %cmp114, label %if.then115, label %if.end117, !dbg !5735

if.then115:                                       ; preds = %for.end
  %131 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5736
  %132 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %131, i32 0, i32 3, !dbg !5737
  %inputgatev116 = bitcast %union.anon.8* %132 to %class.cGate***, !dbg !5737
  %133 = load i32, i32* %oldCapacity, align 4, !dbg !5738
  %134 = load i32, i32* %newCapacity, align 4, !dbg !5739
  call void @_ZL12reallocGatevRPP5cGateii(%class.cGate*** dereferenceable(8) %inputgatev116, i32 %133, i32 %134), !dbg !5740
  br label %if.end117, !dbg !5740

if.end117:                                        ; preds = %if.then115, %for.end
  %135 = load i32, i32* %type, align 4, !dbg !5741
  %cmp118 = icmp ne i32 %135, 73, !dbg !5743
  br i1 %cmp118, label %if.then119, label %if.end121, !dbg !5744

if.then119:                                       ; preds = %if.end117
  %136 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5745
  %137 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %136, i32 0, i32 4, !dbg !5746
  %outputgatev120 = bitcast %union.anon.9* %137 to %class.cGate***, !dbg !5746
  %138 = load i32, i32* %oldCapacity, align 4, !dbg !5747
  %139 = load i32, i32* %newCapacity, align 4, !dbg !5748
  call void @_ZL12reallocGatevRPP5cGateii(%class.cGate*** dereferenceable(8) %outputgatev120, i32 %138, i32 %139), !dbg !5749
  br label %if.end121, !dbg !5749

if.end121:                                        ; preds = %if.then119, %if.end117
  %140 = load i32, i32* %newSize.addr, align 4, !dbg !5750
  %141 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5751
  %size122 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %141, i32 0, i32 2, !dbg !5752
  store i32 %140, i32* %size122, align 8, !dbg !5753
  br label %if.end123, !dbg !5754

if.end123:                                        ; preds = %if.end121, %if.end24
  %142 = load i32, i32* %newSize.addr, align 4, !dbg !5755
  %143 = load i32, i32* %oldSize, align 4, !dbg !5757
  %cmp124 = icmp sgt i32 %142, %143, !dbg !5758
  br i1 %cmp124, label %if.then125, label %if.end172, !dbg !5759

if.then125:                                       ; preds = %if.end123
  %144 = load i32, i32* %type, align 4, !dbg !5760
  %cmp126 = icmp ne i32 %144, 79, !dbg !5763
  br i1 %cmp126, label %if.then127, label %if.end129, !dbg !5764

if.then127:                                       ; preds = %if.then125
  %145 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5765
  %146 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %145, i32 0, i32 3, !dbg !5766
  %inputgatev128 = bitcast %union.anon.8* %146 to %class.cGate***, !dbg !5766
  %147 = load i32, i32* %oldCapacity, align 4, !dbg !5767
  %148 = load i32, i32* %newCapacity, align 4, !dbg !5768
  call void @_ZL12reallocGatevRPP5cGateii(%class.cGate*** dereferenceable(8) %inputgatev128, i32 %147, i32 %148), !dbg !5769
  br label %if.end129, !dbg !5769

if.end129:                                        ; preds = %if.then127, %if.then125
  %149 = load i32, i32* %type, align 4, !dbg !5770
  %cmp130 = icmp ne i32 %149, 73, !dbg !5772
  br i1 %cmp130, label %if.then131, label %if.end133, !dbg !5773

if.then131:                                       ; preds = %if.end129
  %150 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5774
  %151 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %150, i32 0, i32 4, !dbg !5775
  %outputgatev132 = bitcast %union.anon.9* %151 to %class.cGate***, !dbg !5775
  %152 = load i32, i32* %oldCapacity, align 4, !dbg !5776
  %153 = load i32, i32* %newCapacity, align 4, !dbg !5777
  call void @_ZL12reallocGatevRPP5cGateii(%class.cGate*** dereferenceable(8) %outputgatev132, i32 %152, i32 %153), !dbg !5778
  br label %if.end133, !dbg !5778

if.end133:                                        ; preds = %if.then131, %if.end129
  %154 = load i32, i32* %newSize.addr, align 4, !dbg !5779
  %155 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5780
  %size134 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %155, i32 0, i32 2, !dbg !5781
  store i32 %154, i32* %size134, align 8, !dbg !5782
  call void @llvm.dbg.declare(metadata i32* %i135, metadata !5783, metadata !DIExpression()), !dbg !5785
  %156 = load i32, i32* %oldSize, align 4, !dbg !5786
  store i32 %156, i32* %i135, align 4, !dbg !5785
  br label %for.cond136, !dbg !5787

for.cond136:                                      ; preds = %for.inc170, %if.end133
  %157 = load i32, i32* %i135, align 4, !dbg !5788
  %158 = load i32, i32* %newSize.addr, align 4, !dbg !5790
  %cmp137 = icmp slt i32 %157, %158, !dbg !5791
  br i1 %cmp137, label %for.body138, label %for.end171, !dbg !5792

for.body138:                                      ; preds = %for.cond136
  %159 = load i32, i32* %type, align 4, !dbg !5793
  %cmp139 = icmp ne i32 %159, 79, !dbg !5796
  br i1 %cmp139, label %if.then140, label %if.end153, !dbg !5797

if.then140:                                       ; preds = %for.body138
  call void @llvm.dbg.declare(metadata %class.cGate** %newGate, metadata !5798, metadata !DIExpression()), !dbg !5800
  %160 = load i32, i32* %type, align 4, !dbg !5801
  %161 = bitcast %class.cModule* %this1 to %class.cGate* (%class.cModule*, i32)***, !dbg !5802
  %vtable141 = load %class.cGate* (%class.cModule*, i32)**, %class.cGate* (%class.cModule*, i32)*** %161, align 8, !dbg !5802
  %vfn142 = getelementptr inbounds %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vtable141, i64 50, !dbg !5802
  %162 = load %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vfn142, align 8, !dbg !5802
  %call143 = call %class.cGate* %162(%class.cModule* %this1, i32 %160), !dbg !5802
  store %class.cGate* %call143, %class.cGate** %newGate, align 8, !dbg !5800
  %163 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5803
  %164 = load %class.cGate*, %class.cGate** %newGate, align 8, !dbg !5804
  %165 = load i32, i32* %i135, align 4, !dbg !5805
  call void @_ZN5cGate4Desc12setInputGateEPS_i(%"struct.cGate::Desc"* %163, %class.cGate* %164, i32 %165), !dbg !5806
  %call144 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5807
  %suppress_notifications145 = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call144, i32 0, i32 2, !dbg !5807
  %166 = load i8, i8* %suppress_notifications145, align 1, !dbg !5807
  %tobool146 = trunc i8 %166 to i1, !dbg !5807
  br i1 %tobool146, label %cond.true147, label %cond.false148, !dbg !5807

cond.true147:                                     ; preds = %if.then140
  br label %cond.end152, !dbg !5807

cond.false148:                                    ; preds = %if.then140
  %call149 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5807
  %167 = load %class.cGate*, %class.cGate** %newGate, align 8, !dbg !5808
  %168 = bitcast %class.cEnvir* %call149 to void (%class.cEnvir*, %class.cGate*)***, !dbg !5809
  %vtable150 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %168, align 8, !dbg !5809
  %vfn151 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable150, i64 21, !dbg !5809
  %169 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn151, align 8, !dbg !5809
  call void %169(%class.cEnvir* %call149, %class.cGate* %167), !dbg !5809
  br label %cond.end152, !dbg !5807

cond.end152:                                      ; preds = %cond.false148, %cond.true147
  br label %if.end153, !dbg !5810

if.end153:                                        ; preds = %cond.end152, %for.body138
  %170 = load i32, i32* %type, align 4, !dbg !5811
  %cmp154 = icmp ne i32 %170, 73, !dbg !5813
  br i1 %cmp154, label %if.then155, label %if.end169, !dbg !5814

if.then155:                                       ; preds = %if.end153
  call void @llvm.dbg.declare(metadata %class.cGate** %newGate156, metadata !5815, metadata !DIExpression()), !dbg !5817
  %171 = load i32, i32* %type, align 4, !dbg !5818
  %172 = bitcast %class.cModule* %this1 to %class.cGate* (%class.cModule*, i32)***, !dbg !5819
  %vtable157 = load %class.cGate* (%class.cModule*, i32)**, %class.cGate* (%class.cModule*, i32)*** %172, align 8, !dbg !5819
  %vfn158 = getelementptr inbounds %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vtable157, i64 50, !dbg !5819
  %173 = load %class.cGate* (%class.cModule*, i32)*, %class.cGate* (%class.cModule*, i32)** %vfn158, align 8, !dbg !5819
  %call159 = call %class.cGate* %173(%class.cModule* %this1, i32 %171), !dbg !5819
  store %class.cGate* %call159, %class.cGate** %newGate156, align 8, !dbg !5817
  %174 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5820
  %175 = load %class.cGate*, %class.cGate** %newGate156, align 8, !dbg !5821
  %176 = load i32, i32* %i135, align 4, !dbg !5822
  call void @_ZN5cGate4Desc13setOutputGateEPS_i(%"struct.cGate::Desc"* %174, %class.cGate* %175, i32 %176), !dbg !5823
  %call160 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5824
  %suppress_notifications161 = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call160, i32 0, i32 2, !dbg !5824
  %177 = load i8, i8* %suppress_notifications161, align 1, !dbg !5824
  %tobool162 = trunc i8 %177 to i1, !dbg !5824
  br i1 %tobool162, label %cond.true163, label %cond.false164, !dbg !5824

cond.true163:                                     ; preds = %if.then155
  br label %cond.end168, !dbg !5824

cond.false164:                                    ; preds = %if.then155
  %call165 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !5824
  %178 = load %class.cGate*, %class.cGate** %newGate156, align 8, !dbg !5825
  %179 = bitcast %class.cEnvir* %call165 to void (%class.cEnvir*, %class.cGate*)***, !dbg !5826
  %vtable166 = load void (%class.cEnvir*, %class.cGate*)**, void (%class.cEnvir*, %class.cGate*)*** %179, align 8, !dbg !5826
  %vfn167 = getelementptr inbounds void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vtable166, i64 21, !dbg !5826
  %180 = load void (%class.cEnvir*, %class.cGate*)*, void (%class.cEnvir*, %class.cGate*)** %vfn167, align 8, !dbg !5826
  call void %180(%class.cEnvir* %call165, %class.cGate* %178), !dbg !5826
  br label %cond.end168, !dbg !5824

cond.end168:                                      ; preds = %cond.false164, %cond.true163
  br label %if.end169, !dbg !5827

if.end169:                                        ; preds = %cond.end168, %if.end153
  br label %for.inc170, !dbg !5828

for.inc170:                                       ; preds = %if.end169
  %181 = load i32, i32* %i135, align 4, !dbg !5829
  %inc = add nsw i32 %181, 1, !dbg !5829
  store i32 %inc, i32* %i135, align 4, !dbg !5829
  br label %for.cond136, !dbg !5830, !llvm.loop !5831

for.end171:                                       ; preds = %for.cond136
  br label %if.end172, !dbg !5833

if.end172:                                        ; preds = %for.end171, %if.end123
  ret void, !dbg !5834

eh.resume:                                        ; preds = %cleanup.done76, %cleanup.done, %lpad22, %lpad16, %lpad10, %lpad4, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5553
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5553
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5553
  %lpad.val173 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5553
  resume { i8*, i32 } %lpad.val173, !dbg !5553

unreachable:                                      ; preds = %invoke.cont70, %invoke.cont43
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZN5cGate4Desc11capacityForEi(i32 %size) #5 comdat align 2 !dbg !5835 {
entry:
  %size.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  %0 = load i32, i32* %size.addr, align 4, !dbg !5838
  %cmp = icmp slt i32 %0, 8, !dbg !5839
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5838

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !5840
  %add = add nsw i32 %1, 1, !dbg !5841
  %and = and i32 %add, -2, !dbg !5842
  br label %cond.end15, !dbg !5838

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !5843
  %cmp1 = icmp slt i32 %2, 32, !dbg !5844
  br i1 %cmp1, label %cond.true2, label %cond.false5, !dbg !5843

cond.true2:                                       ; preds = %cond.false
  %3 = load i32, i32* %size.addr, align 4, !dbg !5845
  %add3 = add nsw i32 %3, 3, !dbg !5846
  %and4 = and i32 %add3, -4, !dbg !5847
  br label %cond.end13, !dbg !5843

cond.false5:                                      ; preds = %cond.false
  %4 = load i32, i32* %size.addr, align 4, !dbg !5848
  %cmp6 = icmp slt i32 %4, 256, !dbg !5849
  br i1 %cmp6, label %cond.true7, label %cond.false10, !dbg !5848

cond.true7:                                       ; preds = %cond.false5
  %5 = load i32, i32* %size.addr, align 4, !dbg !5850
  %add8 = add nsw i32 %5, 15, !dbg !5851
  %and9 = and i32 %add8, -16, !dbg !5852
  br label %cond.end, !dbg !5848

cond.false10:                                     ; preds = %cond.false5
  %6 = load i32, i32* %size.addr, align 4, !dbg !5853
  %add11 = add nsw i32 %6, 63, !dbg !5854
  %and12 = and i32 %add11, -64, !dbg !5855
  br label %cond.end, !dbg !5848

cond.end:                                         ; preds = %cond.false10, %cond.true7
  %cond = phi i32 [ %and9, %cond.true7 ], [ %and12, %cond.false10 ], !dbg !5848
  br label %cond.end13, !dbg !5843

cond.end13:                                       ; preds = %cond.end, %cond.true2
  %cond14 = phi i32 [ %and4, %cond.true2 ], [ %cond, %cond.end ], !dbg !5843
  br label %cond.end15, !dbg !5838

cond.end15:                                       ; preds = %cond.end13, %cond.true
  %cond16 = phi i32 [ %and, %cond.true ], [ %cond14, %cond.end13 ], !dbg !5838
  ret i32 %cond16, !dbg !5856
}

; Function Attrs: nounwind
declare dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"*) #2

; Function Attrs: noinline uwtable
define internal void @_ZL12reallocGatevRPP5cGateii(%class.cGate*** dereferenceable(8) %v, i32 %oldSize, i32 %newSize) #0 !dbg !5857 {
entry:
  %v.addr = alloca %class.cGate***, align 8
  %oldSize.addr = alloca i32, align 4
  %newSize.addr = alloca i32, align 4
  %newv = alloca %class.cGate**, align 8
  store %class.cGate*** %v, %class.cGate**** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate**** %v.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  store i32 %oldSize, i32* %oldSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldSize.addr, metadata !5863, metadata !DIExpression()), !dbg !5864
  store i32 %newSize, i32* %newSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newSize.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  %0 = load i32, i32* %oldSize.addr, align 4, !dbg !5867
  %1 = load i32, i32* %newSize.addr, align 4, !dbg !5869
  %cmp = icmp ne i32 %0, %1, !dbg !5870
  br i1 %cmp, label %if.then, label %if.end7, !dbg !5871

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %class.cGate*** %newv, metadata !5872, metadata !DIExpression()), !dbg !5874
  %2 = load i32, i32* %newSize.addr, align 4, !dbg !5875
  %conv = sext i32 %2 to i64, !dbg !5875
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8), !dbg !5876
  %4 = extractvalue { i64, i1 } %3, 1, !dbg !5876
  %5 = extractvalue { i64, i1 } %3, 0, !dbg !5876
  %6 = select i1 %4, i64 -1, i64 %5, !dbg !5876
  %call = call i8* @_Znam(i64 %6) #19, !dbg !5876
  %7 = bitcast i8* %call to %class.cGate**, !dbg !5876
  store %class.cGate** %7, %class.cGate*** %newv, align 8, !dbg !5874
  %8 = load %class.cGate**, %class.cGate*** %newv, align 8, !dbg !5877
  %9 = bitcast %class.cGate** %8 to i8*, !dbg !5878
  %10 = load %class.cGate***, %class.cGate**** %v.addr, align 8, !dbg !5879
  %11 = load %class.cGate**, %class.cGate*** %10, align 8, !dbg !5879
  %12 = bitcast %class.cGate** %11 to i8*, !dbg !5878
  %13 = load i32, i32* %oldSize.addr, align 4, !dbg !5880
  %14 = load i32, i32* %newSize.addr, align 4, !dbg !5881
  %cmp1 = icmp slt i32 %13, %14, !dbg !5882
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !5880

cond.true:                                        ; preds = %if.then
  %15 = load i32, i32* %oldSize.addr, align 4, !dbg !5883
  br label %cond.end, !dbg !5880

cond.false:                                       ; preds = %if.then
  %16 = load i32, i32* %newSize.addr, align 4, !dbg !5884
  br label %cond.end, !dbg !5880

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %16, %cond.false ], !dbg !5880
  %conv2 = sext i32 %cond to i64, !dbg !5885
  %mul = mul i64 %conv2, 8, !dbg !5886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %12, i64 %mul, i1 false), !dbg !5878
  %17 = load i32, i32* %newSize.addr, align 4, !dbg !5887
  %18 = load i32, i32* %oldSize.addr, align 4, !dbg !5889
  %cmp3 = icmp sgt i32 %17, %18, !dbg !5890
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !5891

if.then4:                                         ; preds = %cond.end
  %19 = load %class.cGate**, %class.cGate*** %newv, align 8, !dbg !5892
  %20 = load i32, i32* %oldSize.addr, align 4, !dbg !5893
  %idx.ext = sext i32 %20 to i64, !dbg !5894
  %add.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %19, i64 %idx.ext, !dbg !5894
  %21 = bitcast %class.cGate** %add.ptr to i8*, !dbg !5895
  %22 = load i32, i32* %newSize.addr, align 4, !dbg !5896
  %23 = load i32, i32* %oldSize.addr, align 4, !dbg !5897
  %sub = sub nsw i32 %22, %23, !dbg !5898
  %conv5 = sext i32 %sub to i64, !dbg !5899
  %mul6 = mul i64 %conv5, 8, !dbg !5900
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 %mul6, i1 false), !dbg !5895
  br label %if.end, !dbg !5895

if.end:                                           ; preds = %if.then4, %cond.end
  %24 = load %class.cGate***, %class.cGate**** %v.addr, align 8, !dbg !5901
  %25 = load %class.cGate**, %class.cGate*** %24, align 8, !dbg !5901
  %isnull = icmp eq %class.cGate** %25, null, !dbg !5902
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !5902

delete.notnull:                                   ; preds = %if.end
  %26 = bitcast %class.cGate** %25 to i8*, !dbg !5902
  call void @_ZdaPv(i8* %26) #17, !dbg !5902
  br label %delete.end, !dbg !5902

delete.end:                                       ; preds = %delete.notnull, %if.end
  %27 = load %class.cGate**, %class.cGate*** %newv, align 8, !dbg !5903
  %28 = load %class.cGate***, %class.cGate**** %v.addr, align 8, !dbg !5904
  store %class.cGate** %27, %class.cGate*** %28, align 8, !dbg !5905
  br label %if.end7, !dbg !5906

if.end7:                                          ; preds = %delete.end, %entry
  ret void, !dbg !5907
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5cGate4Desc12setInputGateEPS_i(%"struct.cGate::Desc"* %this, %class.cGate* %g, i32 %index) #5 comdat align 2 !dbg !5908 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %g.addr = alloca %class.cGate*, align 8
  %index.addr = alloca i32, align 4
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !5909, metadata !DIExpression()), !dbg !5910
  store %class.cGate* %g, %class.cGate** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %g.addr, metadata !5911, metadata !DIExpression()), !dbg !5912
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5913, metadata !DIExpression()), !dbg !5914
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5915
  %1 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 3, !dbg !5916
  %inputgatev = bitcast %union.anon.8* %1 to %class.cGate***, !dbg !5916
  %2 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !5916
  %3 = load i32, i32* %index.addr, align 4, !dbg !5917
  %idxprom = sext i32 %3 to i64, !dbg !5916
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %2, i64 %idxprom, !dbg !5916
  store %class.cGate* %0, %class.cGate** %arrayidx, align 8, !dbg !5918
  %4 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5919
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %4, i32 0, i32 1, !dbg !5920
  store %"struct.cGate::Desc"* %this1, %"struct.cGate::Desc"** %desc, align 8, !dbg !5921
  %5 = load i32, i32* %index.addr, align 4, !dbg !5922
  %shl = shl i32 %5, 2, !dbg !5923
  %6 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5924
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %6, i32 0, i32 2, !dbg !5925
  store i32 %shl, i32* %pos, align 8, !dbg !5926
  ret void, !dbg !5927
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN5cGate4Desc13setOutputGateEPS_i(%"struct.cGate::Desc"* %this, %class.cGate* %g, i32 %index) #5 comdat align 2 !dbg !5928 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %g.addr = alloca %class.cGate*, align 8
  %index.addr = alloca i32, align 4
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !5929, metadata !DIExpression()), !dbg !5930
  store %class.cGate* %g, %class.cGate** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %g.addr, metadata !5931, metadata !DIExpression()), !dbg !5932
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5935
  %1 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %this1, i32 0, i32 4, !dbg !5936
  %outputgatev = bitcast %union.anon.9* %1 to %class.cGate***, !dbg !5936
  %2 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !5936
  %3 = load i32, i32* %index.addr, align 4, !dbg !5937
  %idxprom = sext i32 %3 to i64, !dbg !5936
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %2, i64 %idxprom, !dbg !5936
  store %class.cGate* %0, %class.cGate** %arrayidx, align 8, !dbg !5938
  %4 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5939
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %4, i32 0, i32 1, !dbg !5940
  store %"struct.cGate::Desc"* %this1, %"struct.cGate::Desc"** %desc, align 8, !dbg !5941
  %5 = load i32, i32* %index.addr, align 4, !dbg !5942
  %shl = shl i32 %5, 2, !dbg !5943
  %or = or i32 %shl, 1, !dbg !5944
  %6 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !5945
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %6, i32 0, i32 2, !dbg !5946
  store i32 %or, i32* %pos, align 8, !dbg !5947
  ret void, !dbg !5948
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZNK7cModule8gateSizeEPKc(%class.cModule* %this, i8* %gatename) unnamed_addr #0 align 2 !dbg !5949 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %dummy = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5950, metadata !DIExpression()), !dbg !5951
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !5952, metadata !DIExpression()), !dbg !5953
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %dummy, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !5956, metadata !DIExpression()), !dbg !5957
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !5958
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %dummy), !dbg !5959
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !5957
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5960
  %call2 = call i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %1), !dbg !5961
  ret i32 %call2, !dbg !5962
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZNK7cModule10gateBaseIdEPKc(%class.cModule* %this, i8* %gatename) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !5963 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %suffix = alloca i8, align 1
  %descIndex = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %isInput = alloca i8, align 1
  %id = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !5964, metadata !DIExpression()), !dbg !5965
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !5966, metadata !DIExpression()), !dbg !5967
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.declare(metadata i32* %descIndex, metadata !5970, metadata !DIExpression()), !dbg !5971
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !5972
  %call = call i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !5973
  store i32 %call, i32* %descIndex, align 4, !dbg !5971
  %1 = load i32, i32* %descIndex, align 4, !dbg !5974
  %cmp = icmp slt i32 %1, 0, !dbg !5976
  br i1 %cmp, label %if.then, label %if.end, !dbg !5977

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5978
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !5978
  %3 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5979
  %4 = load i8*, i8** %gatename.addr, align 8, !dbg !5980
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17, i64 0, i64 0), i8* %4)
          to label %invoke.cont unwind label %lpad, !dbg !5981

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5978
  unreachable, !dbg !5978

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !5982
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !5982
  store i8* %6, i8** %exn.slot, align 8, !dbg !5982
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !5982
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !5982
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !5978
  br label %eh.resume, !dbg !5978

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !5983, metadata !DIExpression()), !dbg !5984
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !5985
  %8 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !5985
  %9 = load i32, i32* %descIndex, align 4, !dbg !5986
  %idx.ext = sext i32 %9 to i64, !dbg !5987
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %8, i64 %idx.ext, !dbg !5987
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !5984
  %10 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !5988
  %call2 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %10), !dbg !5990
  %cmp3 = icmp eq i32 %call2, 66, !dbg !5991
  br i1 %cmp3, label %land.lhs.true, label %if.end8, !dbg !5992

land.lhs.true:                                    ; preds = %if.end
  %11 = load i8, i8* %suffix, align 1, !dbg !5993
  %tobool = icmp ne i8 %11, 0, !dbg !5993
  br i1 %tobool, label %if.end8, label %if.then4, !dbg !5994

if.then4:                                         ; preds = %land.lhs.true
  %exception5 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !5995
  %12 = bitcast i8* %exception5 to %class.cRuntimeError*, !dbg !5995
  %13 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !5996
  %14 = load i8*, i8** %gatename.addr, align 8, !dbg !5997
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %12, %class.cObject* %13, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.18, i64 0, i64 0), i8* %14)
          to label %invoke.cont7 unwind label %lpad6, !dbg !5998

invoke.cont7:                                     ; preds = %if.then4
  call void @__cxa_throw(i8* %exception5, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !5995
  unreachable, !dbg !5995

lpad6:                                            ; preds = %if.then4
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !5999
  %16 = extractvalue { i8*, i32 } %15, 0, !dbg !5999
  store i8* %16, i8** %exn.slot, align 8, !dbg !5999
  %17 = extractvalue { i8*, i32 } %15, 1, !dbg !5999
  store i32 %17, i32* %ehselector.slot, align 4, !dbg !5999
  call void @__cxa_free_exception(i8* %exception5) #3, !dbg !5995
  br label %eh.resume, !dbg !5995

if.end8:                                          ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata i8* %isInput, metadata !6000, metadata !DIExpression()), !dbg !6001
  %18 = load i8, i8* %suffix, align 1, !dbg !6002
  %conv = sext i8 %18 to i32, !dbg !6002
  %cmp9 = icmp eq i32 %conv, 105, !dbg !6003
  br i1 %cmp9, label %lor.end, label %lor.rhs, !dbg !6004

lor.rhs:                                          ; preds = %if.end8
  %19 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6005
  %call10 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %19), !dbg !6006
  %cmp11 = icmp eq i32 %call10, 73, !dbg !6007
  br label %lor.end, !dbg !6004

lor.end:                                          ; preds = %lor.rhs, %if.end8
  %20 = phi i1 [ true, %if.end8 ], [ %cmp11, %lor.rhs ]
  %frombool = zext i1 %20 to i8, !dbg !6001
  store i8 %frombool, i8* %isInput, align 1, !dbg !6001
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6008, metadata !DIExpression()), !dbg !6009
  %21 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6010
  %call12 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %21), !dbg !6012
  br i1 %call12, label %if.else, label %if.then13, !dbg !6013

if.then13:                                        ; preds = %lor.end
  %22 = load i32, i32* %descIndex, align 4, !dbg !6014
  %shl = shl i32 %22, 1, !dbg !6015
  %23 = load i8, i8* %isInput, align 1, !dbg !6016
  %tobool14 = trunc i8 %23 to i1, !dbg !6016
  %24 = zext i1 %tobool14 to i64, !dbg !6016
  %cond = select i1 %tobool14, i32 0, i32 1, !dbg !6016
  %or = or i32 %shl, %cond, !dbg !6017
  store i32 %or, i32* %id, align 4, !dbg !6018
  br label %if.end20, !dbg !6019

if.else:                                          ; preds = %lor.end
  %25 = load i32, i32* %descIndex, align 4, !dbg !6020
  %add = add nsw i32 %25, 1, !dbg !6021
  %shl15 = shl i32 %add, 20, !dbg !6022
  %26 = load i8, i8* %isInput, align 1, !dbg !6023
  %tobool16 = trunc i8 %26 to i1, !dbg !6023
  %27 = zext i1 %tobool16 to i64, !dbg !6023
  %cond17 = select i1 %tobool16, i32 0, i32 1, !dbg !6023
  %shl18 = shl i32 %cond17, 19, !dbg !6024
  %or19 = or i32 %shl15, %shl18, !dbg !6025
  store i32 %or19, i32* %id, align 4, !dbg !6026
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then13
  %28 = load i32, i32* %id, align 4, !dbg !6027
  ret i32 %28, !dbg !6028

eh.resume:                                        ; preds = %lpad6, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !5978
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !5978
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !5978
  %lpad.val21 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !5978
  resume { i8*, i32 } %lpad.val21, !dbg !5978
}

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule4gateEPKci(%class.cModule* %this, i8* %gatename, i32 %index) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6029 {
entry:
  %retval = alloca %class.cGate*, align 8
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %suffix = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %isInput = alloca i8, align 1
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6034, metadata !DIExpression()), !dbg !6035
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6038, metadata !DIExpression()), !dbg !6039
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6040
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !6041
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6039
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6042
  %call2 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %1), !dbg !6044
  %cmp = icmp eq i32 %call2, 66, !dbg !6045
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6046

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %suffix, align 1, !dbg !6047
  %tobool = icmp ne i8 %2, 0, !dbg !6047
  br i1 %tobool, label %if.end, label %if.then, !dbg !6048

if.then:                                          ; preds = %land.lhs.true
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6049
  %3 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !6049
  %4 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6050
  %5 = load i8*, i8** %gatename.addr, align 8, !dbg !6051
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %3, %class.cObject* %4, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), i8* %5)
          to label %invoke.cont unwind label %lpad, !dbg !6052

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6049
  unreachable, !dbg !6049

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !6053
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !6053
  store i8* %7, i8** %exn.slot, align 8, !dbg !6053
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !6053
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !6053
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !6049
  br label %eh.resume, !dbg !6049

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8* %isInput, metadata !6054, metadata !DIExpression()), !dbg !6055
  %9 = load i8, i8* %suffix, align 1, !dbg !6056
  %conv = sext i8 %9 to i32, !dbg !6056
  %cmp3 = icmp eq i32 %conv, 105, !dbg !6057
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !6058

lor.rhs:                                          ; preds = %if.end
  %10 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6059
  %call4 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %10), !dbg !6060
  %cmp5 = icmp eq i32 %call4, 73, !dbg !6061
  br label %lor.end, !dbg !6058

lor.end:                                          ; preds = %lor.rhs, %if.end
  %11 = phi i1 [ true, %if.end ], [ %cmp5, %lor.rhs ]
  %frombool = zext i1 %11 to i8, !dbg !6055
  store i8 %frombool, i8* %isInput, align 1, !dbg !6055
  %12 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6062
  %call6 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %12), !dbg !6064
  br i1 %call6, label %if.else, label %if.then7, !dbg !6065

if.then7:                                         ; preds = %lor.end
  %13 = load i32, i32* %index.addr, align 4, !dbg !6066
  %cmp8 = icmp ne i32 %13, -1, !dbg !6069
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !6070

if.then9:                                         ; preds = %if.then7
  %exception10 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6071
  %14 = bitcast i8* %exception10 to %class.cRuntimeError*, !dbg !6071
  %15 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6072
  %16 = load i8*, i8** %gatename.addr, align 8, !dbg !6073
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %14, %class.cObject* %15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), i8* %16)
          to label %invoke.cont12 unwind label %lpad11, !dbg !6074

invoke.cont12:                                    ; preds = %if.then9
  call void @__cxa_throw(i8* %exception10, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6071
  unreachable, !dbg !6071

lpad11:                                           ; preds = %if.then9
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !6075
  %18 = extractvalue { i8*, i32 } %17, 0, !dbg !6075
  store i8* %18, i8** %exn.slot, align 8, !dbg !6075
  %19 = extractvalue { i8*, i32 } %17, 1, !dbg !6075
  store i32 %19, i32* %ehselector.slot, align 4, !dbg !6075
  call void @__cxa_free_exception(i8* %exception10) #3, !dbg !6071
  br label %eh.resume, !dbg !6071

if.end13:                                         ; preds = %if.then7
  %20 = load i8, i8* %isInput, align 1, !dbg !6076
  %tobool14 = trunc i8 %20 to i1, !dbg !6076
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !6076

cond.true:                                        ; preds = %if.end13
  %21 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6077
  %22 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %21, i32 0, i32 3, !dbg !6078
  %inputgate = bitcast %union.anon.8* %22 to %class.cGate**, !dbg !6078
  %23 = load %class.cGate*, %class.cGate** %inputgate, align 8, !dbg !6078
  br label %cond.end, !dbg !6076

cond.false:                                       ; preds = %if.end13
  %24 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6079
  %25 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %24, i32 0, i32 4, !dbg !6080
  %outputgate = bitcast %union.anon.9* %25 to %class.cGate**, !dbg !6080
  %26 = load %class.cGate*, %class.cGate** %outputgate, align 8, !dbg !6080
  br label %cond.end, !dbg !6076

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cGate* [ %23, %cond.true ], [ %26, %cond.false ], !dbg !6076
  store %class.cGate* %cond, %class.cGate** %retval, align 8, !dbg !6081
  br label %return, !dbg !6081

if.else:                                          ; preds = %lor.end
  %27 = load i32, i32* %index.addr, align 4, !dbg !6082
  %cmp15 = icmp slt i32 %27, 0, !dbg !6085
  br i1 %cmp15, label %if.then16, label %if.end22, !dbg !6086

if.then16:                                        ; preds = %if.else
  %exception17 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6087
  %28 = bitcast i8* %exception17 to %class.cRuntimeError*, !dbg !6087
  %29 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6088
  %30 = load i32, i32* %index.addr, align 4, !dbg !6089
  %cmp18 = icmp eq i32 %30, -1, !dbg !6090
  %31 = zext i1 %cmp18 to i64, !dbg !6089
  %cond19 = select i1 %cmp18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0), !dbg !6089
  %32 = load i8*, i8** %gatename.addr, align 8, !dbg !6091
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %28, %class.cObject* %29, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i8* %cond19, i8* %32)
          to label %invoke.cont21 unwind label %lpad20, !dbg !6092

invoke.cont21:                                    ; preds = %if.then16
  call void @__cxa_throw(i8* %exception17, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6087
  unreachable, !dbg !6087

lpad20:                                           ; preds = %if.then16
  %33 = landingpad { i8*, i32 }
          cleanup, !dbg !6093
  %34 = extractvalue { i8*, i32 } %33, 0, !dbg !6093
  store i8* %34, i8** %exn.slot, align 8, !dbg !6093
  %35 = extractvalue { i8*, i32 } %33, 1, !dbg !6093
  store i32 %35, i32* %ehselector.slot, align 4, !dbg !6093
  call void @__cxa_free_exception(i8* %exception17) #3, !dbg !6087
  br label %eh.resume, !dbg !6087

if.end22:                                         ; preds = %if.else
  %36 = load i32, i32* %index.addr, align 4, !dbg !6094
  %37 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6096
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %37, i32 0, i32 2, !dbg !6097
  %38 = load i32, i32* %size, align 8, !dbg !6097
  %cmp23 = icmp sge i32 %36, %38, !dbg !6098
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !6099

if.then24:                                        ; preds = %if.end22
  %exception25 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6100
  %39 = bitcast i8* %exception25 to %class.cRuntimeError*, !dbg !6100
  %40 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6101
  %41 = load i32, i32* %index.addr, align 4, !dbg !6102
  %42 = load i8*, i8** %gatename.addr, align 8, !dbg !6103
  %43 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6104
  %size26 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %43, i32 0, i32 2, !dbg !6105
  %44 = load i32, i32* %size26, align 8, !dbg !6105
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %39, %class.cObject* %40, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 %41, i8* %42, i32 %44)
          to label %invoke.cont28 unwind label %lpad27, !dbg !6106

invoke.cont28:                                    ; preds = %if.then24
  call void @__cxa_throw(i8* %exception25, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6100
  unreachable, !dbg !6100

lpad27:                                           ; preds = %if.then24
  %45 = landingpad { i8*, i32 }
          cleanup, !dbg !6107
  %46 = extractvalue { i8*, i32 } %45, 0, !dbg !6107
  store i8* %46, i8** %exn.slot, align 8, !dbg !6107
  %47 = extractvalue { i8*, i32 } %45, 1, !dbg !6107
  store i32 %47, i32* %ehselector.slot, align 4, !dbg !6107
  call void @__cxa_free_exception(i8* %exception25) #3, !dbg !6100
  br label %eh.resume, !dbg !6100

if.end29:                                         ; preds = %if.end22
  %48 = load i8, i8* %isInput, align 1, !dbg !6108
  %tobool30 = trunc i8 %48 to i1, !dbg !6108
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6108

cond.true31:                                      ; preds = %if.end29
  %49 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6109
  %50 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %49, i32 0, i32 3, !dbg !6110
  %inputgatev = bitcast %union.anon.8* %50 to %class.cGate***, !dbg !6110
  %51 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6110
  %52 = load i32, i32* %index.addr, align 4, !dbg !6111
  %idxprom = sext i32 %52 to i64, !dbg !6109
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %51, i64 %idxprom, !dbg !6109
  %53 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !6109
  br label %cond.end35, !dbg !6108

cond.false32:                                     ; preds = %if.end29
  %54 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6112
  %55 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %54, i32 0, i32 4, !dbg !6113
  %outputgatev = bitcast %union.anon.9* %55 to %class.cGate***, !dbg !6113
  %56 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6113
  %57 = load i32, i32* %index.addr, align 4, !dbg !6114
  %idxprom33 = sext i32 %57 to i64, !dbg !6112
  %arrayidx34 = getelementptr inbounds %class.cGate*, %class.cGate** %56, i64 %idxprom33, !dbg !6112
  %58 = load %class.cGate*, %class.cGate** %arrayidx34, align 8, !dbg !6112
  br label %cond.end35, !dbg !6108

cond.end35:                                       ; preds = %cond.false32, %cond.true31
  %cond36 = phi %class.cGate* [ %53, %cond.true31 ], [ %58, %cond.false32 ], !dbg !6108
  store %class.cGate* %cond36, %class.cGate** %retval, align 8, !dbg !6115
  br label %return, !dbg !6115

return:                                           ; preds = %cond.end35, %cond.end
  %59 = load %class.cGate*, %class.cGate** %retval, align 8, !dbg !6116
  ret %class.cGate* %59, !dbg !6116

eh.resume:                                        ; preds = %lpad27, %lpad20, %lpad11, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6049
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !6049
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !6049
  %lpad.val37 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !6049
  resume { i8*, i32 } %lpad.val37, !dbg !6049
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %this, i8* %gatename, i32 %index) unnamed_addr #0 align 2 !dbg !6117 {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %suffix = alloca i8, align 1
  %descIndex = alloca i32, align 4
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %isInput = alloca i8, align 1
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6120, metadata !DIExpression()), !dbg !6121
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata i32* %descIndex, metadata !6126, metadata !DIExpression()), !dbg !6127
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6128
  %call = call i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !6129
  store i32 %call, i32* %descIndex, align 4, !dbg !6127
  %1 = load i32, i32* %descIndex, align 4, !dbg !6130
  %cmp = icmp slt i32 %1, 0, !dbg !6132
  br i1 %cmp, label %if.then, label %if.end, !dbg !6133

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6134
  br label %return, !dbg !6134

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6135, metadata !DIExpression()), !dbg !6136
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !6137
  %2 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !6137
  %3 = load i32, i32* %descIndex, align 4, !dbg !6138
  %idx.ext = sext i32 %3 to i64, !dbg !6139
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %2, i64 %idx.ext, !dbg !6139
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !6136
  %4 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6140
  %call2 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %4), !dbg !6142
  %cmp3 = icmp eq i32 %call2, 66, !dbg !6143
  br i1 %cmp3, label %land.lhs.true, label %if.end5, !dbg !6144

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8, i8* %suffix, align 1, !dbg !6145
  %tobool = icmp ne i8 %5, 0, !dbg !6145
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !6146

if.then4:                                         ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !6147
  br label %return, !dbg !6147

if.end5:                                          ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata i8* %isInput, metadata !6148, metadata !DIExpression()), !dbg !6149
  %6 = load i8, i8* %suffix, align 1, !dbg !6150
  %conv = sext i8 %6 to i32, !dbg !6150
  %cmp6 = icmp eq i32 %conv, 105, !dbg !6151
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !6152

lor.rhs:                                          ; preds = %if.end5
  %7 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6153
  %call7 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %7), !dbg !6154
  %cmp8 = icmp eq i32 %call7, 73, !dbg !6155
  br label %lor.end, !dbg !6152

lor.end:                                          ; preds = %lor.rhs, %if.end5
  %8 = phi i1 [ true, %if.end5 ], [ %cmp8, %lor.rhs ]
  %frombool = zext i1 %8 to i8, !dbg !6149
  store i8 %frombool, i8* %isInput, align 1, !dbg !6149
  %9 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6156
  %call9 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %9), !dbg !6158
  br i1 %call9, label %if.else, label %if.then10, !dbg !6159

if.then10:                                        ; preds = %lor.end
  %10 = load i32, i32* %index.addr, align 4, !dbg !6160
  %cmp11 = icmp ne i32 %10, -1, !dbg !6163
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6164

if.then12:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !6165
  br label %return, !dbg !6165

if.end13:                                         ; preds = %if.then10
  %11 = load i8, i8* %isInput, align 1, !dbg !6166
  %tobool14 = trunc i8 %11 to i1, !dbg !6166
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !6166

cond.true:                                        ; preds = %if.end13
  %12 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6167
  %13 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %12, i32 0, i32 3, !dbg !6168
  %inputgate = bitcast %union.anon.8* %13 to %class.cGate**, !dbg !6168
  %14 = load %class.cGate*, %class.cGate** %inputgate, align 8, !dbg !6168
  %call15 = call i32 @_ZNK5cGate5getIdEv(%class.cGate* %14), !dbg !6169
  br label %cond.end, !dbg !6166

cond.false:                                       ; preds = %if.end13
  %15 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6170
  %16 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %15, i32 0, i32 4, !dbg !6171
  %outputgate = bitcast %union.anon.9* %16 to %class.cGate**, !dbg !6171
  %17 = load %class.cGate*, %class.cGate** %outputgate, align 8, !dbg !6171
  %call16 = call i32 @_ZNK5cGate5getIdEv(%class.cGate* %17), !dbg !6172
  br label %cond.end, !dbg !6166

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call15, %cond.true ], [ %call16, %cond.false ], !dbg !6166
  store i32 %cond, i32* %retval, align 4, !dbg !6173
  br label %return, !dbg !6173

if.else:                                          ; preds = %lor.end
  %18 = load i32, i32* %index.addr, align 4, !dbg !6174
  %cmp17 = icmp slt i32 %18, 0, !dbg !6177
  br i1 %cmp17, label %if.then19, label %lor.lhs.false, !dbg !6178

lor.lhs.false:                                    ; preds = %if.else
  %19 = load i32, i32* %index.addr, align 4, !dbg !6179
  %20 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6180
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %20, i32 0, i32 2, !dbg !6181
  %21 = load i32, i32* %size, align 8, !dbg !6181
  %cmp18 = icmp sge i32 %19, %21, !dbg !6182
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6183

if.then19:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -1, i32* %retval, align 4, !dbg !6184
  br label %return, !dbg !6184

if.end20:                                         ; preds = %lor.lhs.false
  %22 = load i8, i8* %isInput, align 1, !dbg !6185
  %tobool21 = trunc i8 %22 to i1, !dbg !6185
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !6185

cond.true22:                                      ; preds = %if.end20
  %23 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6186
  %24 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %23, i32 0, i32 3, !dbg !6187
  %inputgatev = bitcast %union.anon.8* %24 to %class.cGate***, !dbg !6187
  %25 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6187
  %26 = load i32, i32* %index.addr, align 4, !dbg !6188
  %idxprom = sext i32 %26 to i64, !dbg !6186
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %25, i64 %idxprom, !dbg !6186
  %27 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !6186
  %call23 = call i32 @_ZNK5cGate5getIdEv(%class.cGate* %27), !dbg !6189
  br label %cond.end28, !dbg !6185

cond.false24:                                     ; preds = %if.end20
  %28 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6190
  %29 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %28, i32 0, i32 4, !dbg !6191
  %outputgatev = bitcast %union.anon.9* %29 to %class.cGate***, !dbg !6191
  %30 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6191
  %31 = load i32, i32* %index.addr, align 4, !dbg !6192
  %idxprom25 = sext i32 %31 to i64, !dbg !6190
  %arrayidx26 = getelementptr inbounds %class.cGate*, %class.cGate** %30, i64 %idxprom25, !dbg !6190
  %32 = load %class.cGate*, %class.cGate** %arrayidx26, align 8, !dbg !6190
  %call27 = call i32 @_ZNK5cGate5getIdEv(%class.cGate* %32), !dbg !6193
  br label %cond.end28, !dbg !6185

cond.end28:                                       ; preds = %cond.false24, %cond.true22
  %cond29 = phi i32 [ %call23, %cond.true22 ], [ %call27, %cond.false24 ], !dbg !6185
  store i32 %cond29, i32* %retval, align 4, !dbg !6194
  br label %return, !dbg !6194

return:                                           ; preds = %cond.end28, %if.then19, %cond.end, %if.then12, %if.then4, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !6195
  ret i32 %33, !dbg !6195
}

declare dso_local i32 @_ZNK5cGate5getIdEv(%class.cGate*) #1

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule8gateHalfEPKcN5cGate4TypeEi(%class.cModule* %this, i8* %gatename, i32 %type, i32 %index) unnamed_addr #0 align 2 !dbg !6196 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %dummy = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %nameWithSuffix = alloca i8*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6201, metadata !DIExpression()), !dbg !6202
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %dummy, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6207, metadata !DIExpression()), !dbg !6208
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6209
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %dummy), !dbg !6210
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6208
  call void @llvm.dbg.declare(metadata i8** %nameWithSuffix, metadata !6211, metadata !DIExpression()), !dbg !6212
  %1 = load i32, i32* %type.addr, align 4, !dbg !6213
  %cmp = icmp eq i32 %1, 73, !dbg !6214
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6215

cond.true:                                        ; preds = %entry
  %2 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6216
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %2, i32 0, i32 1, !dbg !6217
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !6217
  %namei = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %3, i32 0, i32 1, !dbg !6218
  %call2 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %namei), !dbg !6219
  br label %cond.end, !dbg !6215

cond.false:                                       ; preds = %entry
  %4 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6220
  %namep3 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %4, i32 0, i32 1, !dbg !6221
  %5 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep3, align 8, !dbg !6221
  %nameo = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %5, i32 0, i32 2, !dbg !6222
  %call4 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %nameo), !dbg !6223
  br label %cond.end, !dbg !6215

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call4, %cond.false ], !dbg !6215
  store i8* %cond, i8** %nameWithSuffix, align 8, !dbg !6212
  %6 = load i8*, i8** %nameWithSuffix, align 8, !dbg !6224
  %7 = load i32, i32* %index.addr, align 4, !dbg !6225
  %8 = bitcast %class.cModule* %this1 to %class.cGate* (%class.cModule*, i8*, i32)***, !dbg !6226
  %vtable = load %class.cGate* (%class.cModule*, i8*, i32)**, %class.cGate* (%class.cModule*, i8*, i32)*** %8, align 8, !dbg !6226
  %vfn = getelementptr inbounds %class.cGate* (%class.cModule*, i8*, i32)*, %class.cGate* (%class.cModule*, i8*, i32)** %vtable, i64 59, !dbg !6226
  %9 = load %class.cGate* (%class.cModule*, i8*, i32)*, %class.cGate* (%class.cModule*, i8*, i32)** %vfn, align 8, !dbg !6226
  %call5 = call %class.cGate* %9(%class.cModule* %this1, i8* %6, i32 %7), !dbg !6226
  ret %class.cGate* %call5, !dbg !6227
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZNK7cModule7hasGateEPKci(%class.cModule* %this, i8* %gatename, i32 %index) unnamed_addr #0 align 2 !dbg !6228 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %suffix = alloca i8, align 1
  %descIndex = alloca i32, align 4
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6229, metadata !DIExpression()), !dbg !6230
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6231, metadata !DIExpression()), !dbg !6232
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6233, metadata !DIExpression()), !dbg !6234
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !6235, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.declare(metadata i32* %descIndex, metadata !6237, metadata !DIExpression()), !dbg !6238
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6239
  %call = call i32 @_ZNK7cModule12findGateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !6240
  store i32 %call, i32* %descIndex, align 4, !dbg !6238
  %1 = load i32, i32* %descIndex, align 4, !dbg !6241
  %cmp = icmp slt i32 %1, 0, !dbg !6243
  br i1 %cmp, label %if.then, label %if.end, !dbg !6244

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6245
  br label %return, !dbg !6245

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6246, metadata !DIExpression()), !dbg !6247
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !6248
  %2 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !6248
  %3 = load i32, i32* %descIndex, align 4, !dbg !6249
  %idx.ext = sext i32 %3 to i64, !dbg !6250
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %2, i64 %idx.ext, !dbg !6250
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !6247
  %4 = load i32, i32* %index.addr, align 4, !dbg !6251
  %cmp2 = icmp eq i32 %4, -1, !dbg !6252
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6251

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !6251

cond.false:                                       ; preds = %if.end
  %5 = load i32, i32* %index.addr, align 4, !dbg !6253
  %cmp3 = icmp sge i32 %5, 0, !dbg !6254
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !6255

land.rhs:                                         ; preds = %cond.false
  %6 = load i32, i32* %index.addr, align 4, !dbg !6256
  %7 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6257
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %7, i32 0, i32 2, !dbg !6258
  %8 = load i32, i32* %size, align 8, !dbg !6258
  %cmp4 = icmp slt i32 %6, %8, !dbg !6259
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false
  %9 = phi i1 [ false, %cond.false ], [ %cmp4, %land.rhs ], !dbg !6230
  br label %cond.end, !dbg !6251

cond.end:                                         ; preds = %land.end, %cond.true
  %cond = phi i1 [ true, %cond.true ], [ %9, %land.end ], !dbg !6251
  store i1 %cond, i1* %retval, align 1, !dbg !6260
  br label %return, !dbg !6260

return:                                           ; preds = %cond.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !6261
  ret i1 %10, !dbg !6261
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule10deleteGateEPKc(%class.cModule* %this, i8* %gatename) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6262 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %suffix = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6265, metadata !DIExpression()), !dbg !6266
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !6267, metadata !DIExpression()), !dbg !6268
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6269, metadata !DIExpression()), !dbg !6270
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6271
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !6272
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6270
  %1 = load i8, i8* %suffix, align 1, !dbg !6273
  %tobool = icmp ne i8 %1, 0, !dbg !6273
  br i1 %tobool, label %if.then, label %if.end, !dbg !6275

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6276
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !6276
  %3 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6277
  %4 = load i8*, i8** %gatename.addr, align 8, !dbg !6278
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.25, i64 0, i64 0), i8* %4)
          to label %invoke.cont unwind label %lpad, !dbg !6279

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6276
  unreachable, !dbg !6276

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !6280
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !6280
  store i8* %6, i8** %exn.slot, align 8, !dbg !6280
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !6280
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !6280
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !6276
  br label %eh.resume, !dbg !6276

if.end:                                           ; preds = %entry
  %8 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6281
  call void @_ZN7cModule15disposeGateDescEPN5cGate4DescEb(%class.cModule* %this1, %"struct.cGate::Desc"* %8, i1 zeroext true), !dbg !6282
  ret void, !dbg !6283

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6276
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !6276
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !6276
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !6276
  resume { i8*, i32 } %lpad.val2, !dbg !6276
}

; Function Attrs: noinline uwtable
define dso_local void @_ZNK7cModule12getGateNamesEv(%"class.std::vector.13"* noalias sret %agg.result, %class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6284 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %class.cModule*, align 8
  %nrvo = alloca i1, align 1
  %i = alloca i32, align 4
  %ref.tmp = alloca i8*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::vector.13"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  store i1 false, i1* %nrvo, align 1, !dbg !6287
  call void @llvm.dbg.declare(metadata i8** %result.ptr, metadata !6288, metadata !DIExpression(DW_OP_deref)), !dbg !6289
  call void @_ZNSt6vectorIPKcSaIS1_EEC2Ev(%"class.std::vector.13"* %agg.result) #3, !dbg !6289
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6290, metadata !DIExpression()), !dbg !6292
  store i32 0, i32* %i, align 4, !dbg !6292
  br label %for.cond, !dbg !6293

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6294
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !6296
  %2 = load i32, i32* %descvSize, align 8, !dbg !6296
  %cmp = icmp slt i32 %1, %2, !dbg !6297
  br i1 %cmp, label %for.body, label %for.end, !dbg !6298

for.body:                                         ; preds = %for.cond
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !6299
  %3 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !6299
  %4 = load i32, i32* %i, align 4, !dbg !6301
  %idxprom = sext i32 %4 to i64, !dbg !6299
  %arrayidx = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %3, i64 %idxprom, !dbg !6299
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %arrayidx, i32 0, i32 1, !dbg !6302
  %5 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !6302
  %tobool = icmp ne %"struct.cGate::Name"* %5, null, !dbg !6299
  br i1 %tobool, label %if.then, label %if.end, !dbg !6303

if.then:                                          ; preds = %for.body
  %descv2 = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !6304
  %6 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv2, align 8, !dbg !6304
  %7 = load i32, i32* %i, align 4, !dbg !6305
  %idxprom3 = sext i32 %7 to i64, !dbg !6304
  %arrayidx4 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %6, i64 %idxprom3, !dbg !6304
  %namep5 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %arrayidx4, i32 0, i32 1, !dbg !6306
  %8 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep5, align 8, !dbg !6306
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %8, i32 0, i32 0, !dbg !6307
  %call = invoke i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %name)
          to label %invoke.cont unwind label %lpad, !dbg !6308

invoke.cont:                                      ; preds = %if.then
  store i8* %call, i8** %ref.tmp, align 8, !dbg !6304
  invoke void @_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_(%"class.std::vector.13"* %agg.result, i8** dereferenceable(8) %ref.tmp)
          to label %invoke.cont6 unwind label %lpad, !dbg !6309

invoke.cont6:                                     ; preds = %invoke.cont
  br label %if.end, !dbg !6310

lpad:                                             ; preds = %invoke.cont, %if.then
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !6311
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !6311
  store i8* %10, i8** %exn.slot, align 8, !dbg !6311
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !6311
  store i32 %11, i32* %ehselector.slot, align 4, !dbg !6311
  call void @_ZNSt6vectorIPKcSaIS1_EED2Ev(%"class.std::vector.13"* %agg.result) #3, !dbg !6312
  br label %eh.resume, !dbg !6312

if.end:                                           ; preds = %invoke.cont6, %for.body
  br label %for.inc, !dbg !6302

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !6313
  %inc = add nsw i32 %12, 1, !dbg !6313
  store i32 %inc, i32* %i, align 4, !dbg !6313
  br label %for.cond, !dbg !6314, !llvm.loop !6315

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %nrvo, align 1, !dbg !6317
  %nrvo.val = load i1, i1* %nrvo, align 1, !dbg !6312
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused, !dbg !6312

nrvo.unused:                                      ; preds = %for.end
  call void @_ZNSt6vectorIPKcSaIS1_EED2Ev(%"class.std::vector.13"* %agg.result) #3, !dbg !6312
  br label %nrvo.skipdtor, !dbg !6312

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %for.end
  ret void, !dbg !6312

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6312
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !6312
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !6312
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !6312
  resume { i8*, i32 } %lpad.val7, !dbg !6312
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPKcSaIS1_EEC2Ev(%"class.std::vector.13"* %this) unnamed_addr #5 comdat align 2 !dbg !6318 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !6319, metadata !DIExpression()), !dbg !6321
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !6322
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EEC2Ev(%"struct.std::_Vector_base.14"* %0) #3, !dbg !6323
  ret void, !dbg !6322
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_(%"class.std::vector.13"* %this, i8** dereferenceable(8) %__x) #0 comdat align 2 !dbg !6324 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  %__x.addr = alloca i8**, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  store i8** %__x, i8*** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__x.addr, metadata !6327, metadata !DIExpression()), !dbg !6328
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = load i8**, i8*** %__x.addr, align 8, !dbg !6329
  %call = call dereferenceable(8) i8** @_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_(i8** dereferenceable(8) %0) #3, !dbg !6330
  call void @_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"* %this1, i8** dereferenceable(8) %call), !dbg !6331
  ret void, !dbg !6332
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPKcSaIS1_EED2Ev(%"class.std::vector.13"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6333 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !6334, metadata !DIExpression()), !dbg !6335
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !6336
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %0, i32 0, i32 0, !dbg !6336
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !6338
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !6339
  %2 = load i8**, i8*** %_M_start, align 8, !dbg !6339
  %3 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !6340
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0, !dbg !6340
  %4 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !6341
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %4, i32 0, i32 1, !dbg !6342
  %5 = load i8**, i8*** %_M_finish, align 8, !dbg !6342
  %6 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !6343
  %call = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %6) #3, !dbg !6343
  invoke void @_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E(i8** %2, i8** %5, %"class.std::allocator.15"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad, !dbg !6344

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !6345
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %7) #3, !dbg !6345
  ret void, !dbg !6346

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null, !dbg !6345
  %9 = extractvalue { i8*, i32 } %8, 0, !dbg !6345
  store i8* %9, i8** %exn.slot, align 8, !dbg !6345
  %10 = extractvalue { i8*, i32 } %8, 1, !dbg !6345
  store i32 %10, i32* %ehselector.slot, align 4, !dbg !6345
  %11 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !6345
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %11) #3, !dbg !6345
  br label %terminate.handler, !dbg !6345

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6345
  call void @__clang_call_terminate(i8* %exn) #18, !dbg !6345
  unreachable, !dbg !6345
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZNK7cModule8gateTypeEPKc(%class.cModule* %this, i8* %gatename) unnamed_addr #0 align 2 !dbg !6347 {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %suffix = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6348, metadata !DIExpression()), !dbg !6349
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6350, metadata !DIExpression()), !dbg !6351
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !6352, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6354, metadata !DIExpression()), !dbg !6355
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6356
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %suffix), !dbg !6357
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6355
  %1 = load i8, i8* %suffix, align 1, !dbg !6358
  %tobool = icmp ne i8 %1, 0, !dbg !6358
  br i1 %tobool, label %if.then, label %if.else, !dbg !6360

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %suffix, align 1, !dbg !6361
  %conv = sext i8 %2 to i32, !dbg !6361
  %cmp = icmp eq i32 %conv, 105, !dbg !6362
  %3 = zext i1 %cmp to i64, !dbg !6361
  %cond = select i1 %cmp, i32 73, i32 79, !dbg !6361
  store i32 %cond, i32* %retval, align 4, !dbg !6363
  br label %return, !dbg !6363

if.else:                                          ; preds = %entry
  %4 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6364
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %4, i32 0, i32 1, !dbg !6365
  %5 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !6365
  %type = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %5, i32 0, i32 3, !dbg !6366
  %6 = load i32, i32* %type, align 8, !dbg !6366
  store i32 %6, i32* %retval, align 4, !dbg !6367
  br label %return, !dbg !6367

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !6368
  ret i32 %7, !dbg !6368
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZNK7cModule12isGateVectorEPKc(%class.cModule* %this, i8* %gatename) unnamed_addr #0 align 2 !dbg !6369 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %dummy = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6372, metadata !DIExpression()), !dbg !6373
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %dummy, metadata !6374, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6376, metadata !DIExpression()), !dbg !6377
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6378
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this1, i8* %0, i8* dereferenceable(1) %dummy), !dbg !6379
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6377
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6380
  %call2 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %1), !dbg !6381
  ret i1 %call2, !dbg !6382
}

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule31getOrCreateFirstUnconnectedGateEPKccbb(%class.cModule* %this, i8* %gatename, i8 signext %suffix, i1 zeroext %inside, i1 zeroext %expand) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6383 {
entry:
  %retval = alloca %class.cGate*, align 8
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %suffix.addr = alloca i8, align 1
  %inside.addr = alloca i8, align 1
  %expand.addr = alloca i8, align 1
  %suffix1 = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %inputSide = alloca i8, align 1
  %gatev = alloca %class.cGate**, align 8
  %oldSize = alloca i32, align 4
  %it = alloca %class.cGate**, align 8
  %ref.tmp = alloca %class.cGate*, align 8
  %agg.tmp = alloca %struct.less_gateConnectedInside, align 1
  %ref.tmp46 = alloca %class.cGate*, align 8
  %agg.tmp47 = alloca %struct.less_gateConnectedOutside, align 1
  %i = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6384, metadata !DIExpression()), !dbg !6385
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  store i8 %suffix, i8* %suffix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %suffix.addr, metadata !6388, metadata !DIExpression()), !dbg !6389
  %frombool = zext i1 %inside to i8
  store i8 %frombool, i8* %inside.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside.addr, metadata !6390, metadata !DIExpression()), !dbg !6391
  %frombool1 = zext i1 %expand to i8
  store i8 %frombool1, i8* %expand.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %expand.addr, metadata !6392, metadata !DIExpression()), !dbg !6393
  %this2 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix1, metadata !6394, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6396, metadata !DIExpression()), !dbg !6397
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6398
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this2, i8* %0, i8* dereferenceable(1) %suffix1), !dbg !6399
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6397
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6400
  %call3 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %1), !dbg !6402
  br i1 %call3, label %if.end, label %if.then, !dbg !6403

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6404
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !6404
  %3 = bitcast %class.cModule* %this2 to %class.cObject*, !dbg !6405
  %4 = load i8*, i8** %gatename.addr, align 8, !dbg !6406
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.26, i64 0, i64 0), i8* %4)
          to label %invoke.cont unwind label %lpad, !dbg !6407

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6404
  unreachable, !dbg !6404

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !6408
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !6408
  store i8* %6, i8** %exn.slot, align 8, !dbg !6408
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !6408
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !6408
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !6404
  br label %eh.resume, !dbg !6404

if.end:                                           ; preds = %entry
  %8 = load i8, i8* %suffix1, align 1, !dbg !6409
  %tobool = icmp ne i8 %8, 0, !dbg !6409
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !6411

land.lhs.true:                                    ; preds = %if.end
  %9 = load i8, i8* %suffix.addr, align 1, !dbg !6412
  %tobool4 = icmp ne i8 %9, 0, !dbg !6412
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !6413

if.then5:                                         ; preds = %land.lhs.true
  %exception6 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6414
  %10 = bitcast i8* %exception6 to %class.cRuntimeError*, !dbg !6414
  %11 = bitcast %class.cModule* %this2 to %class.cObject*, !dbg !6415
  %12 = load i8*, i8** %gatename.addr, align 8, !dbg !6416
  %13 = load i8, i8* %suffix.addr, align 1, !dbg !6417
  %conv = sext i8 %13 to i32, !dbg !6417
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %10, %class.cObject* %11, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.27, i64 0, i64 0), i8* %12, i32 %conv)
          to label %invoke.cont8 unwind label %lpad7, !dbg !6418

invoke.cont8:                                     ; preds = %if.then5
  call void @__cxa_throw(i8* %exception6, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6414
  unreachable, !dbg !6414

lpad7:                                            ; preds = %if.then5
  %14 = landingpad { i8*, i32 }
          cleanup, !dbg !6419
  %15 = extractvalue { i8*, i32 } %14, 0, !dbg !6419
  store i8* %15, i8** %exn.slot, align 8, !dbg !6419
  %16 = extractvalue { i8*, i32 } %14, 1, !dbg !6419
  store i32 %16, i32* %ehselector.slot, align 4, !dbg !6419
  call void @__cxa_free_exception(i8* %exception6) #3, !dbg !6414
  br label %eh.resume, !dbg !6414

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %17 = load i8, i8* %suffix.addr, align 1, !dbg !6420
  %conv10 = sext i8 %17 to i32, !dbg !6420
  %18 = load i8, i8* %suffix1, align 1, !dbg !6421
  %conv11 = sext i8 %18 to i32, !dbg !6421
  %or = or i32 %conv10, %conv11, !dbg !6422
  %conv12 = trunc i32 %or to i8, !dbg !6420
  store i8 %conv12, i8* %suffix.addr, align 1, !dbg !6423
  call void @llvm.dbg.declare(metadata i8* %inputSide, metadata !6424, metadata !DIExpression()), !dbg !6425
  %19 = load i8, i8* %suffix.addr, align 1, !dbg !6426
  %tobool13 = icmp ne i8 %19, 0, !dbg !6426
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !6428

if.then14:                                        ; preds = %if.end9
  %20 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6429
  %call15 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %20), !dbg !6432
  %cmp = icmp eq i32 %call15, 66, !dbg !6433
  br i1 %cmp, label %if.then16, label %if.end20, !dbg !6434

if.then16:                                        ; preds = %if.then14
  %exception17 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6435
  %21 = bitcast i8* %exception17 to %class.cRuntimeError*, !dbg !6435
  %22 = bitcast %class.cModule* %this2 to %class.cObject*, !dbg !6436
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %21, %class.cObject* %22, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0))
          to label %invoke.cont19 unwind label %lpad18, !dbg !6437

invoke.cont19:                                    ; preds = %if.then16
  call void @__cxa_throw(i8* %exception17, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6435
  unreachable, !dbg !6435

lpad18:                                           ; preds = %if.then16
  %23 = landingpad { i8*, i32 }
          cleanup, !dbg !6438
  %24 = extractvalue { i8*, i32 } %23, 0, !dbg !6438
  store i8* %24, i8** %exn.slot, align 8, !dbg !6438
  %25 = extractvalue { i8*, i32 } %23, 1, !dbg !6438
  store i32 %25, i32* %ehselector.slot, align 4, !dbg !6438
  call void @__cxa_free_exception(i8* %exception17) #3, !dbg !6435
  br label %eh.resume, !dbg !6435

if.end20:                                         ; preds = %if.then14
  %26 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6439
  %call21 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %26), !dbg !6440
  %cmp22 = icmp eq i32 %call21, 73, !dbg !6441
  %frombool23 = zext i1 %cmp22 to i8, !dbg !6442
  store i8 %frombool23, i8* %inputSide, align 1, !dbg !6442
  br label %if.end38, !dbg !6443

if.else:                                          ; preds = %if.end9
  %27 = load i8, i8* %suffix.addr, align 1, !dbg !6444
  %conv24 = sext i8 %27 to i32, !dbg !6444
  %cmp25 = icmp ne i32 %conv24, 105, !dbg !6447
  br i1 %cmp25, label %land.lhs.true26, label %if.end34, !dbg !6448

land.lhs.true26:                                  ; preds = %if.else
  %28 = load i8, i8* %suffix.addr, align 1, !dbg !6449
  %conv27 = sext i8 %28 to i32, !dbg !6449
  %cmp28 = icmp ne i32 %conv27, 111, !dbg !6450
  br i1 %cmp28, label %if.then29, label %if.end34, !dbg !6451

if.then29:                                        ; preds = %land.lhs.true26
  %exception30 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6452
  %29 = bitcast i8* %exception30 to %class.cRuntimeError*, !dbg !6452
  %30 = bitcast %class.cModule* %this2 to %class.cObject*, !dbg !6453
  %31 = load i8, i8* %suffix.addr, align 1, !dbg !6454
  %conv31 = sext i8 %31 to i32, !dbg !6454
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %29, %class.cObject* %30, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.29, i64 0, i64 0), i32 %conv31)
          to label %invoke.cont33 unwind label %lpad32, !dbg !6455

invoke.cont33:                                    ; preds = %if.then29
  call void @__cxa_throw(i8* %exception30, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6452
  unreachable, !dbg !6452

lpad32:                                           ; preds = %if.then29
  %32 = landingpad { i8*, i32 }
          cleanup, !dbg !6456
  %33 = extractvalue { i8*, i32 } %32, 0, !dbg !6456
  store i8* %33, i8** %exn.slot, align 8, !dbg !6456
  %34 = extractvalue { i8*, i32 } %32, 1, !dbg !6456
  store i32 %34, i32* %ehselector.slot, align 4, !dbg !6456
  call void @__cxa_free_exception(i8* %exception30) #3, !dbg !6452
  br label %eh.resume, !dbg !6452

if.end34:                                         ; preds = %land.lhs.true26, %if.else
  %35 = load i8, i8* %suffix.addr, align 1, !dbg !6457
  %conv35 = sext i8 %35 to i32, !dbg !6457
  %cmp36 = icmp eq i32 %conv35, 105, !dbg !6458
  %frombool37 = zext i1 %cmp36 to i8, !dbg !6459
  store i8 %frombool37, i8* %inputSide, align 1, !dbg !6459
  br label %if.end38

if.end38:                                         ; preds = %if.end34, %if.end20
  call void @llvm.dbg.declare(metadata %class.cGate*** %gatev, metadata !6460, metadata !DIExpression()), !dbg !6461
  %36 = load i8, i8* %inputSide, align 1, !dbg !6462
  %tobool39 = trunc i8 %36 to i1, !dbg !6462
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !6462

cond.true:                                        ; preds = %if.end38
  %37 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6463
  %38 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %37, i32 0, i32 3, !dbg !6464
  %inputgatev = bitcast %union.anon.8* %38 to %class.cGate***, !dbg !6464
  %39 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6464
  br label %cond.end, !dbg !6462

cond.false:                                       ; preds = %if.end38
  %40 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6465
  %41 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %40, i32 0, i32 4, !dbg !6466
  %outputgatev = bitcast %union.anon.9* %41 to %class.cGate***, !dbg !6466
  %42 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6466
  br label %cond.end, !dbg !6462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cGate** [ %39, %cond.true ], [ %42, %cond.false ], !dbg !6462
  store %class.cGate** %cond, %class.cGate*** %gatev, align 8, !dbg !6461
  call void @llvm.dbg.declare(metadata i32* %oldSize, metadata !6467, metadata !DIExpression()), !dbg !6468
  %43 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6469
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %43, i32 0, i32 2, !dbg !6470
  %44 = load i32, i32* %size, align 8, !dbg !6470
  store i32 %44, i32* %oldSize, align 4, !dbg !6468
  call void @llvm.dbg.declare(metadata %class.cGate*** %it, metadata !6471, metadata !DIExpression()), !dbg !6472
  %45 = load i8, i8* %inside.addr, align 1, !dbg !6473
  %tobool40 = trunc i8 %45 to i1, !dbg !6473
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !6473

cond.true41:                                      ; preds = %cond.end
  %46 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6474
  %47 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6475
  %48 = load i32, i32* %oldSize, align 4, !dbg !6476
  %idx.ext = sext i32 %48 to i64, !dbg !6477
  %add.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %47, i64 %idx.ext, !dbg !6477
  store %class.cGate* null, %class.cGate** %ref.tmp, align 8, !dbg !6478
  %call42 = call %class.cGate** @_ZSt11lower_boundIPP5cGateS1_24less_gateConnectedInsideET_S4_S4_RKT0_T1_(%class.cGate** %46, %class.cGate** %add.ptr, %class.cGate** dereferenceable(8) %ref.tmp), !dbg !6479
  br label %cond.end49, !dbg !6473

cond.false43:                                     ; preds = %cond.end
  %49 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6480
  %50 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6481
  %51 = load i32, i32* %oldSize, align 4, !dbg !6482
  %idx.ext44 = sext i32 %51 to i64, !dbg !6483
  %add.ptr45 = getelementptr inbounds %class.cGate*, %class.cGate** %50, i64 %idx.ext44, !dbg !6483
  store %class.cGate* null, %class.cGate** %ref.tmp46, align 8, !dbg !6484
  %call48 = call %class.cGate** @_ZSt11lower_boundIPP5cGateS1_25less_gateConnectedOutsideET_S4_S4_RKT0_T1_(%class.cGate** %49, %class.cGate** %add.ptr45, %class.cGate** dereferenceable(8) %ref.tmp46), !dbg !6485
  br label %cond.end49, !dbg !6473

cond.end49:                                       ; preds = %cond.false43, %cond.true41
  %cond50 = phi %class.cGate** [ %call42, %cond.true41 ], [ %call48, %cond.false43 ], !dbg !6473
  store %class.cGate** %cond50, %class.cGate*** %it, align 8, !dbg !6472
  %52 = load %class.cGate**, %class.cGate*** %it, align 8, !dbg !6486
  %53 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6488
  %54 = load i32, i32* %oldSize, align 4, !dbg !6489
  %idx.ext51 = sext i32 %54 to i64, !dbg !6490
  %add.ptr52 = getelementptr inbounds %class.cGate*, %class.cGate** %53, i64 %idx.ext51, !dbg !6490
  %cmp53 = icmp ne %class.cGate** %52, %add.ptr52, !dbg !6491
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !6492

if.then54:                                        ; preds = %cond.end49
  %55 = load %class.cGate**, %class.cGate*** %it, align 8, !dbg !6493
  %56 = load %class.cGate*, %class.cGate** %55, align 8, !dbg !6494
  store %class.cGate* %56, %class.cGate** %retval, align 8, !dbg !6495
  br label %return, !dbg !6495

if.end55:                                         ; preds = %cond.end49
  %57 = load i8, i8* %expand.addr, align 1, !dbg !6496
  %tobool56 = trunc i8 %57 to i1, !dbg !6496
  br i1 %tobool56, label %if.then57, label %if.else68, !dbg !6498

if.then57:                                        ; preds = %if.end55
  %58 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6499
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %58, i32 0, i32 1, !dbg !6501
  %59 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !6501
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %59, i32 0, i32 0, !dbg !6502
  %call58 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %name), !dbg !6503
  %60 = load i32, i32* %oldSize, align 4, !dbg !6504
  %add = add nsw i32 %60, 1, !dbg !6505
  %61 = bitcast %class.cModule* %this2 to void (%class.cModule*, i8*, i32)***, !dbg !6506
  %vtable = load void (%class.cModule*, i8*, i32)**, void (%class.cModule*, i8*, i32)*** %61, align 8, !dbg !6506
  %vfn = getelementptr inbounds void (%class.cModule*, i8*, i32)*, void (%class.cModule*, i8*, i32)** %vtable, i64 53, !dbg !6506
  %62 = load void (%class.cModule*, i8*, i32)*, void (%class.cModule*, i8*, i32)** %vfn, align 8, !dbg !6506
  call void %62(%class.cModule* %this2, i8* %call58, i32 %add), !dbg !6506
  %63 = load i8, i8* %inputSide, align 1, !dbg !6507
  %tobool59 = trunc i8 %63 to i1, !dbg !6507
  br i1 %tobool59, label %cond.true60, label %cond.false62, !dbg !6507

cond.true60:                                      ; preds = %if.then57
  %64 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6508
  %65 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %64, i32 0, i32 3, !dbg !6509
  %inputgatev61 = bitcast %union.anon.8* %65 to %class.cGate***, !dbg !6509
  %66 = load %class.cGate**, %class.cGate*** %inputgatev61, align 8, !dbg !6509
  %67 = load i32, i32* %oldSize, align 4, !dbg !6510
  %idxprom = sext i32 %67 to i64, !dbg !6508
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %66, i64 %idxprom, !dbg !6508
  %68 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !6508
  br label %cond.end66, !dbg !6507

cond.false62:                                     ; preds = %if.then57
  %69 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6511
  %70 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %69, i32 0, i32 4, !dbg !6512
  %outputgatev63 = bitcast %union.anon.9* %70 to %class.cGate***, !dbg !6512
  %71 = load %class.cGate**, %class.cGate*** %outputgatev63, align 8, !dbg !6512
  %72 = load i32, i32* %oldSize, align 4, !dbg !6513
  %idxprom64 = sext i32 %72 to i64, !dbg !6511
  %arrayidx65 = getelementptr inbounds %class.cGate*, %class.cGate** %71, i64 %idxprom64, !dbg !6511
  %73 = load %class.cGate*, %class.cGate** %arrayidx65, align 8, !dbg !6511
  br label %cond.end66, !dbg !6507

cond.end66:                                       ; preds = %cond.false62, %cond.true60
  %cond67 = phi %class.cGate* [ %68, %cond.true60 ], [ %73, %cond.false62 ], !dbg !6507
  store %class.cGate* %cond67, %class.cGate** %retval, align 8, !dbg !6514
  br label %return, !dbg !6514

if.else68:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6515, metadata !DIExpression()), !dbg !6518
  store i32 0, i32* %i, align 4, !dbg !6518
  br label %for.cond, !dbg !6519

for.cond:                                         ; preds = %for.inc, %if.else68
  %74 = load i32, i32* %i, align 4, !dbg !6520
  %75 = load i32, i32* %oldSize, align 4, !dbg !6522
  %cmp69 = icmp slt i32 %74, %75, !dbg !6523
  br i1 %cmp69, label %for.body, label %for.end, !dbg !6524

for.body:                                         ; preds = %for.cond
  %76 = load i8, i8* %inside.addr, align 1, !dbg !6525
  %tobool70 = trunc i8 %76 to i1, !dbg !6525
  br i1 %tobool70, label %cond.true71, label %cond.false75, !dbg !6527

cond.true71:                                      ; preds = %for.body
  %77 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6528
  %78 = load i32, i32* %i, align 4, !dbg !6529
  %idxprom72 = sext i32 %78 to i64, !dbg !6528
  %arrayidx73 = getelementptr inbounds %class.cGate*, %class.cGate** %77, i64 %idxprom72, !dbg !6528
  %79 = load %class.cGate*, %class.cGate** %arrayidx73, align 8, !dbg !6528
  %call74 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %79), !dbg !6530
  br i1 %call74, label %if.end82, label %if.then79, !dbg !6525

cond.false75:                                     ; preds = %for.body
  %80 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6531
  %81 = load i32, i32* %i, align 4, !dbg !6532
  %idxprom76 = sext i32 %81 to i64, !dbg !6531
  %arrayidx77 = getelementptr inbounds %class.cGate*, %class.cGate** %80, i64 %idxprom76, !dbg !6531
  %82 = load %class.cGate*, %class.cGate** %arrayidx77, align 8, !dbg !6531
  %call78 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %82), !dbg !6533
  br i1 %call78, label %if.end82, label %if.then79, !dbg !6527

if.then79:                                        ; preds = %cond.false75, %cond.true71
  %83 = load %class.cGate**, %class.cGate*** %gatev, align 8, !dbg !6534
  %84 = load i32, i32* %i, align 4, !dbg !6535
  %idxprom80 = sext i32 %84 to i64, !dbg !6534
  %arrayidx81 = getelementptr inbounds %class.cGate*, %class.cGate** %83, i64 %idxprom80, !dbg !6534
  %85 = load %class.cGate*, %class.cGate** %arrayidx81, align 8, !dbg !6534
  store %class.cGate* %85, %class.cGate** %retval, align 8, !dbg !6536
  br label %return, !dbg !6536

if.end82:                                         ; preds = %cond.false75, %cond.true71
  br label %for.inc, !dbg !6537

for.inc:                                          ; preds = %if.end82
  %86 = load i32, i32* %i, align 4, !dbg !6538
  %inc = add nsw i32 %86, 1, !dbg !6538
  store i32 %inc, i32* %i, align 4, !dbg !6538
  br label %for.cond, !dbg !6539, !llvm.loop !6540

for.end:                                          ; preds = %for.cond
  store %class.cGate* null, %class.cGate** %retval, align 8, !dbg !6542
  br label %return, !dbg !6542

return:                                           ; preds = %for.end, %if.then79, %cond.end66, %if.then54
  %87 = load %class.cGate*, %class.cGate** %retval, align 8, !dbg !6543
  ret %class.cGate* %87, !dbg !6543

eh.resume:                                        ; preds = %lpad32, %lpad18, %lpad7, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6404
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !6404
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !6404
  %lpad.val83 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !6404
  resume { i8*, i32 } %lpad.val83, !dbg !6404
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt11lower_boundIPP5cGateS1_24less_gateConnectedInsideET_S4_S4_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val) #0 comdat !dbg !6544 {
entry:
  %__comp = alloca %struct.less_gateConnectedInside, align 1
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %agg.tmp1 = alloca %struct.less_gateConnectedInside, align 1
  %undef.agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !6555, metadata !DIExpression()), !dbg !6556
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedInside* %__comp, metadata !6559, metadata !DIExpression()), !dbg !6560
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !6561
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !6562
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !6563
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valI24less_gateConnectedInsideEENS0_14_Iter_comp_valIT_EES4_(), !dbg !6564
  %call = call %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEEET_S8_S8_RKT0_T1_(%class.cGate** %0, %class.cGate** %1, %class.cGate** dereferenceable(8) %2), !dbg !6565
  ret %class.cGate** %call, !dbg !6566
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt11lower_boundIPP5cGateS1_25less_gateConnectedOutsideET_S4_S4_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val) #0 comdat !dbg !6567 {
entry:
  %__comp = alloca %struct.less_gateConnectedOutside, align 1
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.43", align 1
  %agg.tmp1 = alloca %struct.less_gateConnectedOutside, align 1
  %undef.agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.43", align 1
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !6571, metadata !DIExpression()), !dbg !6572
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !6573, metadata !DIExpression()), !dbg !6574
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedOutside* %__comp, metadata !6577, metadata !DIExpression()), !dbg !6578
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !6579
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !6580
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !6581
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valI25less_gateConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_(), !dbg !6582
  %call = call %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEEET_S8_S8_RKT0_T1_(%class.cGate** %0, %class.cGate** %1, %class.cGate** dereferenceable(8) %2), !dbg !6583
  ret %class.cGate** %call, !dbg !6584
}

declare dso_local zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate*) #1

declare dso_local zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate*) #1

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule35getOrCreateFirstUnconnectedGatePairEPKcbbRP5cGateS4_(%class.cModule* %this, i8* %gatename, i1 zeroext %inside, i1 zeroext %expand, %class.cGate** dereferenceable(8) %gatein, %class.cGate** dereferenceable(8) %gateout) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6585 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %gatename.addr = alloca i8*, align 8
  %inside.addr = alloca i8, align 1
  %expand.addr = alloca i8, align 1
  %gatein.addr = alloca %class.cGate**, align 8
  %gateout.addr = alloca %class.cGate**, align 8
  %suffix = alloca i8, align 1
  %desc = alloca %"struct.cGate::Desc"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %oldSize = alloca i32, align 4
  %inputgatev = alloca %class.cGate**, align 8
  %outputgatev = alloca %class.cGate**, align 8
  %it = alloca %class.cGate**, align 8
  %ref.tmp = alloca %class.cGate*, align 8
  %agg.tmp = alloca %struct.less_gatePairConnectedInside, align 8
  %ref.tmp15 = alloca %class.cGate*, align 8
  %agg.tmp16 = alloca %struct.less_gatePairConnectedOutside, align 8
  %i = alloca i32, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6586, metadata !DIExpression()), !dbg !6587
  store i8* %gatename, i8** %gatename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gatename.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  %frombool = zext i1 %inside to i8
  store i8 %frombool, i8* %inside.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %inside.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  %frombool1 = zext i1 %expand to i8
  store i8 %frombool1, i8* %expand.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %expand.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  store %class.cGate** %gatein, %class.cGate*** %gatein.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %gatein.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store %class.cGate** %gateout, %class.cGate*** %gateout.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %gateout.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  %this2 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %suffix, metadata !6598, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6600, metadata !DIExpression()), !dbg !6601
  %0 = load i8*, i8** %gatename.addr, align 8, !dbg !6602
  %call = call %"struct.cGate::Desc"* @_ZNK7cModule8gateDescEPKcRc(%class.cModule* %this2, i8* %0, i8* dereferenceable(1) %suffix), !dbg !6603
  store %"struct.cGate::Desc"* %call, %"struct.cGate::Desc"** %desc, align 8, !dbg !6601
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6604
  %call3 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %1), !dbg !6606
  br i1 %call3, label %if.end, label %if.then, !dbg !6607

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6608
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !6608
  %3 = bitcast %class.cModule* %this2 to %class.cObject*, !dbg !6609
  %4 = load i8*, i8** %gatename.addr, align 8, !dbg !6610
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.30, i64 0, i64 0), i8* %4)
          to label %invoke.cont unwind label %lpad, !dbg !6611

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6608
  unreachable, !dbg !6608

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 }
          cleanup, !dbg !6612
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !6612
  store i8* %6, i8** %exn.slot, align 8, !dbg !6612
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !6612
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !6612
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !6608
  br label %eh.resume, !dbg !6608

if.end:                                           ; preds = %entry
  %8 = load i8, i8* %suffix, align 1, !dbg !6613
  %tobool = icmp ne i8 %8, 0, !dbg !6613
  br i1 %tobool, label %if.then4, label %if.end8, !dbg !6615

if.then4:                                         ; preds = %if.end
  %exception5 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6616
  %9 = bitcast i8* %exception5 to %class.cRuntimeError*, !dbg !6616
  %10 = bitcast %class.cModule* %this2 to %class.cObject*, !dbg !6617
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %9, %class.cObject* %10, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.31, i64 0, i64 0))
          to label %invoke.cont7 unwind label %lpad6, !dbg !6618

invoke.cont7:                                     ; preds = %if.then4
  call void @__cxa_throw(i8* %exception5, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !6616
  unreachable, !dbg !6616

lpad6:                                            ; preds = %if.then4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !6619
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !6619
  store i8* %12, i8** %exn.slot, align 8, !dbg !6619
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !6619
  store i32 %13, i32* %ehselector.slot, align 4, !dbg !6619
  call void @__cxa_free_exception(i8* %exception5) #3, !dbg !6616
  br label %eh.resume, !dbg !6616

if.end8:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %oldSize, metadata !6620, metadata !DIExpression()), !dbg !6621
  %14 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6622
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %14, i32 0, i32 2, !dbg !6623
  %15 = load i32, i32* %size, align 8, !dbg !6623
  store i32 %15, i32* %oldSize, align 4, !dbg !6621
  call void @llvm.dbg.declare(metadata %class.cGate*** %inputgatev, metadata !6624, metadata !DIExpression()), !dbg !6625
  %16 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6626
  %17 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %16, i32 0, i32 3, !dbg !6627
  %inputgatev9 = bitcast %union.anon.8* %17 to %class.cGate***, !dbg !6627
  %18 = load %class.cGate**, %class.cGate*** %inputgatev9, align 8, !dbg !6627
  store %class.cGate** %18, %class.cGate*** %inputgatev, align 8, !dbg !6625
  call void @llvm.dbg.declare(metadata %class.cGate*** %outputgatev, metadata !6628, metadata !DIExpression()), !dbg !6629
  %19 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6630
  %20 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %19, i32 0, i32 4, !dbg !6631
  %outputgatev10 = bitcast %union.anon.9* %20 to %class.cGate***, !dbg !6631
  %21 = load %class.cGate**, %class.cGate*** %outputgatev10, align 8, !dbg !6631
  store %class.cGate** %21, %class.cGate*** %outputgatev, align 8, !dbg !6629
  call void @llvm.dbg.declare(metadata %class.cGate*** %it, metadata !6632, metadata !DIExpression()), !dbg !6633
  %22 = load i8, i8* %inside.addr, align 1, !dbg !6634
  %tobool11 = trunc i8 %22 to i1, !dbg !6634
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !6634

cond.true:                                        ; preds = %if.end8
  %23 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6635
  %24 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6636
  %25 = load i32, i32* %oldSize, align 4, !dbg !6637
  %idx.ext = sext i32 %25 to i64, !dbg !6638
  %add.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %24, i64 %idx.ext, !dbg !6638
  store %class.cGate* null, %class.cGate** %ref.tmp, align 8, !dbg !6639
  %26 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6640
  call void @_ZN28less_gatePairConnectedInsideC2EPP5cGate(%struct.less_gatePairConnectedInside* %agg.tmp, %class.cGate** %26), !dbg !6641
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %agg.tmp, i32 0, i32 0, !dbg !6642
  %27 = load %class.cGate**, %class.cGate*** %coerce.dive, align 8, !dbg !6642
  %call12 = call %class.cGate** @_ZSt11lower_boundIPP5cGateS1_28less_gatePairConnectedInsideET_S4_S4_RKT0_T1_(%class.cGate** %23, %class.cGate** %add.ptr, %class.cGate** dereferenceable(8) %ref.tmp, %class.cGate** %27), !dbg !6642
  br label %cond.end, !dbg !6634

cond.false:                                       ; preds = %if.end8
  %28 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6643
  %29 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6644
  %30 = load i32, i32* %oldSize, align 4, !dbg !6645
  %idx.ext13 = sext i32 %30 to i64, !dbg !6646
  %add.ptr14 = getelementptr inbounds %class.cGate*, %class.cGate** %29, i64 %idx.ext13, !dbg !6646
  store %class.cGate* null, %class.cGate** %ref.tmp15, align 8, !dbg !6647
  %31 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6648
  call void @_ZN29less_gatePairConnectedOutsideC2EPP5cGate(%struct.less_gatePairConnectedOutside* %agg.tmp16, %class.cGate** %31), !dbg !6649
  %coerce.dive17 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %agg.tmp16, i32 0, i32 0, !dbg !6650
  %32 = load %class.cGate**, %class.cGate*** %coerce.dive17, align 8, !dbg !6650
  %call18 = call %class.cGate** @_ZSt11lower_boundIPP5cGateS1_29less_gatePairConnectedOutsideET_S4_S4_RKT0_T1_(%class.cGate** %28, %class.cGate** %add.ptr14, %class.cGate** dereferenceable(8) %ref.tmp15, %class.cGate** %32), !dbg !6650
  br label %cond.end, !dbg !6634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cGate** [ %call12, %cond.true ], [ %call18, %cond.false ], !dbg !6634
  store %class.cGate** %cond, %class.cGate*** %it, align 8, !dbg !6633
  %33 = load %class.cGate**, %class.cGate*** %it, align 8, !dbg !6651
  %34 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6653
  %35 = load i32, i32* %oldSize, align 4, !dbg !6654
  %idx.ext19 = sext i32 %35 to i64, !dbg !6655
  %add.ptr20 = getelementptr inbounds %class.cGate*, %class.cGate** %34, i64 %idx.ext19, !dbg !6655
  %cmp = icmp ne %class.cGate** %33, %add.ptr20, !dbg !6656
  br i1 %cmp, label %if.then21, label %if.end23, !dbg !6657

if.then21:                                        ; preds = %cond.end
  %36 = load %class.cGate**, %class.cGate*** %it, align 8, !dbg !6658
  %37 = load %class.cGate*, %class.cGate** %36, align 8, !dbg !6660
  %38 = load %class.cGate**, %class.cGate*** %gatein.addr, align 8, !dbg !6661
  store %class.cGate* %37, %class.cGate** %38, align 8, !dbg !6662
  %39 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6663
  %40 = load %class.cGate**, %class.cGate*** %gatein.addr, align 8, !dbg !6664
  %41 = load %class.cGate*, %class.cGate** %40, align 8, !dbg !6664
  %call22 = call i32 @_ZNK5cGate8getIndexEv(%class.cGate* %41), !dbg !6665
  %idxprom = sext i32 %call22 to i64, !dbg !6663
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %39, i64 %idxprom, !dbg !6663
  %42 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !6663
  %43 = load %class.cGate**, %class.cGate*** %gateout.addr, align 8, !dbg !6666
  store %class.cGate* %42, %class.cGate** %43, align 8, !dbg !6667
  br label %if.end60, !dbg !6668

if.end23:                                         ; preds = %cond.end
  %44 = load i8, i8* %expand.addr, align 1, !dbg !6669
  %tobool24 = trunc i8 %44 to i1, !dbg !6669
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !6671

if.then25:                                        ; preds = %if.end23
  %45 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6672
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %45, i32 0, i32 1, !dbg !6674
  %46 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !6674
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %46, i32 0, i32 0, !dbg !6675
  %call26 = call i8* @_ZNK10opp_string5c_strEv(%class.opp_string* %name), !dbg !6676
  %47 = load i32, i32* %oldSize, align 4, !dbg !6677
  %add = add nsw i32 %47, 1, !dbg !6678
  %48 = bitcast %class.cModule* %this2 to void (%class.cModule*, i8*, i32)***, !dbg !6679
  %vtable = load void (%class.cModule*, i8*, i32)**, void (%class.cModule*, i8*, i32)*** %48, align 8, !dbg !6679
  %vfn = getelementptr inbounds void (%class.cModule*, i8*, i32)*, void (%class.cModule*, i8*, i32)** %vtable, i64 53, !dbg !6679
  %49 = load void (%class.cModule*, i8*, i32)*, void (%class.cModule*, i8*, i32)** %vfn, align 8, !dbg !6679
  call void %49(%class.cModule* %this2, i8* %call26, i32 %add), !dbg !6679
  %50 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6680
  %51 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %50, i32 0, i32 3, !dbg !6681
  %inputgatev27 = bitcast %union.anon.8* %51 to %class.cGate***, !dbg !6681
  %52 = load %class.cGate**, %class.cGate*** %inputgatev27, align 8, !dbg !6681
  %53 = load i32, i32* %oldSize, align 4, !dbg !6682
  %idxprom28 = sext i32 %53 to i64, !dbg !6680
  %arrayidx29 = getelementptr inbounds %class.cGate*, %class.cGate** %52, i64 %idxprom28, !dbg !6680
  %54 = load %class.cGate*, %class.cGate** %arrayidx29, align 8, !dbg !6680
  %55 = load %class.cGate**, %class.cGate*** %gatein.addr, align 8, !dbg !6683
  store %class.cGate* %54, %class.cGate** %55, align 8, !dbg !6684
  %56 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6685
  %57 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %56, i32 0, i32 4, !dbg !6686
  %outputgatev30 = bitcast %union.anon.9* %57 to %class.cGate***, !dbg !6686
  %58 = load %class.cGate**, %class.cGate*** %outputgatev30, align 8, !dbg !6686
  %59 = load i32, i32* %oldSize, align 4, !dbg !6687
  %idxprom31 = sext i32 %59 to i64, !dbg !6685
  %arrayidx32 = getelementptr inbounds %class.cGate*, %class.cGate** %58, i64 %idxprom31, !dbg !6685
  %60 = load %class.cGate*, %class.cGate** %arrayidx32, align 8, !dbg !6685
  %61 = load %class.cGate**, %class.cGate*** %gateout.addr, align 8, !dbg !6688
  store %class.cGate* %60, %class.cGate** %61, align 8, !dbg !6689
  br label %if.end60, !dbg !6690

if.else:                                          ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6691, metadata !DIExpression()), !dbg !6694
  store i32 0, i32* %i, align 4, !dbg !6694
  br label %for.cond, !dbg !6695

for.cond:                                         ; preds = %for.inc, %if.else
  %62 = load i32, i32* %i, align 4, !dbg !6696
  %63 = load i32, i32* %oldSize, align 4, !dbg !6698
  %cmp33 = icmp slt i32 %62, %63, !dbg !6699
  br i1 %cmp33, label %for.body, label %for.end, !dbg !6700

for.body:                                         ; preds = %for.cond
  %64 = load i8, i8* %inside.addr, align 1, !dbg !6701
  %tobool34 = trunc i8 %64 to i1, !dbg !6701
  br i1 %tobool34, label %cond.true35, label %cond.false39, !dbg !6703

cond.true35:                                      ; preds = %for.body
  %65 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6704
  %66 = load i32, i32* %i, align 4, !dbg !6705
  %idxprom36 = sext i32 %66 to i64, !dbg !6704
  %arrayidx37 = getelementptr inbounds %class.cGate*, %class.cGate** %65, i64 %idxprom36, !dbg !6704
  %67 = load %class.cGate*, %class.cGate** %arrayidx37, align 8, !dbg !6704
  %call38 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %67), !dbg !6706
  br i1 %call38, label %if.end59, label %if.then43, !dbg !6701

cond.false39:                                     ; preds = %for.body
  %68 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6707
  %69 = load i32, i32* %i, align 4, !dbg !6708
  %idxprom40 = sext i32 %69 to i64, !dbg !6707
  %arrayidx41 = getelementptr inbounds %class.cGate*, %class.cGate** %68, i64 %idxprom40, !dbg !6707
  %70 = load %class.cGate*, %class.cGate** %arrayidx41, align 8, !dbg !6707
  %call42 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %70), !dbg !6709
  br i1 %call42, label %if.end59, label %if.then43, !dbg !6703

if.then43:                                        ; preds = %cond.false39, %cond.true35
  %71 = load i8, i8* %inside.addr, align 1, !dbg !6710
  %tobool44 = trunc i8 %71 to i1, !dbg !6710
  br i1 %tobool44, label %cond.true45, label %cond.false49, !dbg !6712

cond.true45:                                      ; preds = %if.then43
  %72 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6713
  %73 = load i32, i32* %i, align 4, !dbg !6714
  %idxprom46 = sext i32 %73 to i64, !dbg !6713
  %arrayidx47 = getelementptr inbounds %class.cGate*, %class.cGate** %72, i64 %idxprom46, !dbg !6713
  %74 = load %class.cGate*, %class.cGate** %arrayidx47, align 8, !dbg !6713
  %call48 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %74), !dbg !6715
  br i1 %call48, label %if.end58, label %if.then53, !dbg !6710

cond.false49:                                     ; preds = %if.then43
  %75 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6716
  %76 = load i32, i32* %i, align 4, !dbg !6717
  %idxprom50 = sext i32 %76 to i64, !dbg !6716
  %arrayidx51 = getelementptr inbounds %class.cGate*, %class.cGate** %75, i64 %idxprom50, !dbg !6716
  %77 = load %class.cGate*, %class.cGate** %arrayidx51, align 8, !dbg !6716
  %call52 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %77), !dbg !6718
  br i1 %call52, label %if.end58, label %if.then53, !dbg !6712

if.then53:                                        ; preds = %cond.false49, %cond.true45
  %78 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !6719
  %79 = load i32, i32* %i, align 4, !dbg !6721
  %idxprom54 = sext i32 %79 to i64, !dbg !6719
  %arrayidx55 = getelementptr inbounds %class.cGate*, %class.cGate** %78, i64 %idxprom54, !dbg !6719
  %80 = load %class.cGate*, %class.cGate** %arrayidx55, align 8, !dbg !6719
  %81 = load %class.cGate**, %class.cGate*** %gatein.addr, align 8, !dbg !6722
  store %class.cGate* %80, %class.cGate** %81, align 8, !dbg !6723
  %82 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !6724
  %83 = load i32, i32* %i, align 4, !dbg !6725
  %idxprom56 = sext i32 %83 to i64, !dbg !6724
  %arrayidx57 = getelementptr inbounds %class.cGate*, %class.cGate** %82, i64 %idxprom56, !dbg !6724
  %84 = load %class.cGate*, %class.cGate** %arrayidx57, align 8, !dbg !6724
  %85 = load %class.cGate**, %class.cGate*** %gateout.addr, align 8, !dbg !6726
  store %class.cGate* %84, %class.cGate** %85, align 8, !dbg !6727
  br label %if.end60, !dbg !6728

if.end58:                                         ; preds = %cond.false49, %cond.true45
  br label %if.end59, !dbg !6729

if.end59:                                         ; preds = %if.end58, %cond.false39, %cond.true35
  br label %for.inc, !dbg !6730

for.inc:                                          ; preds = %if.end59
  %86 = load i32, i32* %i, align 4, !dbg !6731
  %inc = add nsw i32 %86, 1, !dbg !6731
  store i32 %inc, i32* %i, align 4, !dbg !6731
  br label %for.cond, !dbg !6732, !llvm.loop !6733

for.end:                                          ; preds = %for.cond
  %87 = load %class.cGate**, %class.cGate*** %gateout.addr, align 8, !dbg !6735
  store %class.cGate* null, %class.cGate** %87, align 8, !dbg !6736
  %88 = load %class.cGate**, %class.cGate*** %gatein.addr, align 8, !dbg !6737
  store %class.cGate* null, %class.cGate** %88, align 8, !dbg !6738
  br label %if.end60

if.end60:                                         ; preds = %if.then21, %if.then25, %if.then53, %for.end
  ret void, !dbg !6739

eh.resume:                                        ; preds = %lpad6, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6608
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !6608
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !6608
  %lpad.val61 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !6608
  resume { i8*, i32 } %lpad.val61, !dbg !6608
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt11lower_boundIPP5cGateS1_28less_gatePairConnectedInsideET_S4_S4_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val, %class.cGate** %__comp.coerce) #0 comdat !dbg !6740 {
entry:
  %__comp = alloca %struct.less_gatePairConnectedInside, align 8
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", align 8
  %agg.tmp1 = alloca %struct.less_gatePairConnectedInside, align 8
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %__comp, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !6748, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedInside* %__comp, metadata !6750, metadata !DIExpression()), !dbg !6751
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !6752
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !6753
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !6754
  %3 = bitcast %struct.less_gatePairConnectedInside* %agg.tmp1 to i8*, !dbg !6755
  %4 = bitcast %struct.less_gatePairConnectedInside* %__comp to i8*, !dbg !6755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false), !dbg !6755
  %coerce.dive2 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %agg.tmp1, i32 0, i32 0, !dbg !6756
  %5 = load %class.cGate**, %class.cGate*** %coerce.dive2, align 8, !dbg !6756
  %call = call %class.cGate** @_ZN9__gnu_cxx5__ops15__iter_comp_valI28less_gatePairConnectedInsideEENS0_14_Iter_comp_valIT_EES4_(%class.cGate** %5), !dbg !6756
  %coerce.dive3 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %agg.tmp, i32 0, i32 0, !dbg !6756
  %coerce.dive4 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %coerce.dive3, i32 0, i32 0, !dbg !6756
  store %class.cGate** %call, %class.cGate*** %coerce.dive4, align 8, !dbg !6756
  %coerce.dive5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %agg.tmp, i32 0, i32 0, !dbg !6757
  %coerce.dive6 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %coerce.dive5, i32 0, i32 0, !dbg !6757
  %6 = load %class.cGate**, %class.cGate*** %coerce.dive6, align 8, !dbg !6757
  %call7 = call %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEEET_S8_S8_RKT0_T1_(%class.cGate** %0, %class.cGate** %1, %class.cGate** dereferenceable(8) %2, %class.cGate** %6), !dbg !6757
  ret %class.cGate** %call7, !dbg !6758
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN28less_gatePairConnectedInsideC2EPP5cGate(%struct.less_gatePairConnectedInside* %this, %class.cGate** %otherv) unnamed_addr #5 comdat align 2 !dbg !6759 {
entry:
  %this.addr = alloca %struct.less_gatePairConnectedInside*, align 8
  %otherv.addr = alloca %class.cGate**, align 8
  store %struct.less_gatePairConnectedInside* %this, %struct.less_gatePairConnectedInside** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedInside** %this.addr, metadata !6760, metadata !DIExpression()), !dbg !6762
  store %class.cGate** %otherv, %class.cGate*** %otherv.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %otherv.addr, metadata !6763, metadata !DIExpression()), !dbg !6764
  %this1 = load %struct.less_gatePairConnectedInside*, %struct.less_gatePairConnectedInside** %this.addr, align 8
  %0 = load %class.cGate**, %class.cGate*** %otherv.addr, align 8, !dbg !6765
  %otherv2 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %this1, i32 0, i32 0, !dbg !6767
  store %class.cGate** %0, %class.cGate*** %otherv2, align 8, !dbg !6768
  ret void, !dbg !6769
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt11lower_boundIPP5cGateS1_29less_gatePairConnectedOutsideET_S4_S4_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val, %class.cGate** %__comp.coerce) #0 comdat !dbg !6770 {
entry:
  %__comp = alloca %struct.less_gatePairConnectedOutside, align 8
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %agg.tmp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", align 8
  %agg.tmp1 = alloca %struct.less_gatePairConnectedOutside, align 8
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %__comp, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !6774, metadata !DIExpression()), !dbg !6775
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !6776, metadata !DIExpression()), !dbg !6777
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedOutside* %__comp, metadata !6780, metadata !DIExpression()), !dbg !6781
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !6782
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !6783
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !6784
  %3 = bitcast %struct.less_gatePairConnectedOutside* %agg.tmp1 to i8*, !dbg !6785
  %4 = bitcast %struct.less_gatePairConnectedOutside* %__comp to i8*, !dbg !6785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false), !dbg !6785
  %coerce.dive2 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %agg.tmp1, i32 0, i32 0, !dbg !6786
  %5 = load %class.cGate**, %class.cGate*** %coerce.dive2, align 8, !dbg !6786
  %call = call %class.cGate** @_ZN9__gnu_cxx5__ops15__iter_comp_valI29less_gatePairConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_(%class.cGate** %5), !dbg !6786
  %coerce.dive3 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %agg.tmp, i32 0, i32 0, !dbg !6786
  %coerce.dive4 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %coerce.dive3, i32 0, i32 0, !dbg !6786
  store %class.cGate** %call, %class.cGate*** %coerce.dive4, align 8, !dbg !6786
  %coerce.dive5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %agg.tmp, i32 0, i32 0, !dbg !6787
  %coerce.dive6 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %coerce.dive5, i32 0, i32 0, !dbg !6787
  %6 = load %class.cGate**, %class.cGate*** %coerce.dive6, align 8, !dbg !6787
  %call7 = call %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEEET_S8_S8_RKT0_T1_(%class.cGate** %0, %class.cGate** %1, %class.cGate** dereferenceable(8) %2, %class.cGate** %6), !dbg !6787
  ret %class.cGate** %call7, !dbg !6788
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN29less_gatePairConnectedOutsideC2EPP5cGate(%struct.less_gatePairConnectedOutside* %this, %class.cGate** %otherv) unnamed_addr #5 comdat align 2 !dbg !6789 {
entry:
  %this.addr = alloca %struct.less_gatePairConnectedOutside*, align 8
  %otherv.addr = alloca %class.cGate**, align 8
  store %struct.less_gatePairConnectedOutside* %this, %struct.less_gatePairConnectedOutside** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedOutside** %this.addr, metadata !6790, metadata !DIExpression()), !dbg !6792
  store %class.cGate** %otherv, %class.cGate*** %otherv.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %otherv.addr, metadata !6793, metadata !DIExpression()), !dbg !6794
  %this1 = load %struct.less_gatePairConnectedOutside*, %struct.less_gatePairConnectedOutside** %this.addr, align 8
  %0 = load %class.cGate**, %class.cGate*** %otherv.addr, align 8, !dbg !6795
  %otherv2 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %this1, i32 0, i32 0, !dbg !6797
  store %class.cGate** %0, %class.cGate*** %otherv2, align 8, !dbg !6798
  ret void, !dbg !6799
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate8getIndexEv(%class.cGate* %this) #0 comdat align 2 !dbg !6800 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %this1, i32 0, i32 1, !dbg !6806
  %0 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6806
  %call = call i32 @_ZNK5cGate4Desc7indexOfEPKS_(%"struct.cGate::Desc"* %0, %class.cGate* %this1), !dbg !6807
  ret i32 %call, !dbg !6808
}

; Function Attrs: noinline uwtable
define dso_local i32 @_ZNK7cModule9gateCountEv(%class.cModule* %this) #0 align 2 !dbg !6809 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6810, metadata !DIExpression()), !dbg !6811
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6812, metadata !DIExpression()), !dbg !6813
  store i32 0, i32* %n, align 4, !dbg !6813
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6814, metadata !DIExpression()), !dbg !6816
  store i32 0, i32* %i, align 4, !dbg !6816
  br label %for.cond, !dbg !6817

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6818
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 7, !dbg !6820
  %1 = load i32, i32* %descvSize, align 8, !dbg !6820
  %cmp = icmp slt i32 %0, %1, !dbg !6821
  br i1 %cmp, label %for.body, label %for.end, !dbg !6822

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !6823, metadata !DIExpression()), !dbg !6825
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 8, !dbg !6826
  %2 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !6826
  %3 = load i32, i32* %i, align 4, !dbg !6827
  %idx.ext = sext i32 %3 to i64, !dbg !6828
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %2, i64 %idx.ext, !dbg !6828
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !6825
  %4 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6829
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %4, i32 0, i32 1, !dbg !6831
  %5 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !6831
  %tobool = icmp ne %"struct.cGate::Name"* %5, null, !dbg !6829
  br i1 %tobool, label %if.then, label %if.end10, !dbg !6832

if.then:                                          ; preds = %for.body
  %6 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6833
  %call = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %6), !dbg !6836
  br i1 %call, label %if.else, label %if.then2, !dbg !6837

if.then2:                                         ; preds = %if.then
  %7 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6838
  %call3 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %7), !dbg !6839
  %cmp4 = icmp eq i32 %call3, 66, !dbg !6840
  %8 = zext i1 %cmp4 to i64, !dbg !6841
  %cond = select i1 %cmp4, i32 2, i32 1, !dbg !6841
  %9 = load i32, i32* %n, align 4, !dbg !6842
  %add = add nsw i32 %9, %cond, !dbg !6842
  store i32 %add, i32* %n, align 4, !dbg !6842
  br label %if.end, !dbg !6843

if.else:                                          ; preds = %if.then
  %10 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6844
  %call5 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %10), !dbg !6845
  %cmp6 = icmp eq i32 %call5, 66, !dbg !6846
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !6847

cond.true:                                        ; preds = %if.else
  %11 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6848
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %11, i32 0, i32 2, !dbg !6849
  %12 = load i32, i32* %size, align 8, !dbg !6849
  %mul = mul nsw i32 2, %12, !dbg !6850
  br label %cond.end, !dbg !6847

cond.false:                                       ; preds = %if.else
  %13 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !6851
  %size7 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %13, i32 0, i32 2, !dbg !6852
  %14 = load i32, i32* %size7, align 8, !dbg !6852
  br label %cond.end, !dbg !6847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i32 [ %mul, %cond.true ], [ %14, %cond.false ], !dbg !6847
  %15 = load i32, i32* %n, align 4, !dbg !6853
  %add9 = add nsw i32 %15, %cond8, !dbg !6853
  store i32 %add9, i32* %n, align 4, !dbg !6853
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then2
  br label %if.end10, !dbg !6854

if.end10:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6855

for.inc:                                          ; preds = %if.end10
  %16 = load i32, i32* %i, align 4, !dbg !6856
  %inc = add nsw i32 %16, 1, !dbg !6856
  store i32 %inc, i32* %i, align 4, !dbg !6856
  br label %for.cond, !dbg !6857, !llvm.loop !6858

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %n, align 4, !dbg !6860
  ret i32 %17, !dbg !6861
}

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZNK7cModule13gateByOrdinalEi(%class.cModule* %this, i32 %k) #0 align 2 !dbg !6862 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %k.addr = alloca i32, align 4
  %it = alloca %"class.cModule::GateIterator", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6863, metadata !DIExpression()), !dbg !6864
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !6865, metadata !DIExpression()), !dbg !6866
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %it, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %it, %class.cModule* %this1), !dbg !6868
  %0 = load i32, i32* %k.addr, align 4, !dbg !6869
  %call = call %class.cGate* @_ZN7cModule12GateIteratorpLEi(%"class.cModule::GateIterator"* %it, i32 %0), !dbg !6870
  %call2 = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %it), !dbg !6871
  br i1 %call2, label %cond.true, label %cond.false, !dbg !6872

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6872

cond.false:                                       ; preds = %entry
  %call3 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %it), !dbg !6873
  br label %cond.end, !dbg !6872

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cGate* [ null, %cond.true ], [ %call3, %cond.false ], !dbg !6872
  ret %class.cGate* %cond, !dbg !6874
}

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZN7cModule12GateIteratorpLEi(%"class.cModule::GateIterator"* %this, i32 %k) #0 align 2 !dbg !6875 {
entry:
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %k.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6880, metadata !DIExpression()), !dbg !6882
  store i32 0, i32* %i, align 4, !dbg !6882
  br label %for.cond, !dbg !6883

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6884
  %1 = load i32, i32* %k.addr, align 4, !dbg !6886
  %cmp = icmp slt i32 %0, %1, !dbg !6887
  br i1 %cmp, label %for.body, label %for.end, !dbg !6888

for.body:                                         ; preds = %for.cond
  %call = call %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %this1, i32 0), !dbg !6889
  br label %for.inc, !dbg !6889

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !6890
  %inc = add nsw i32 %2, 1, !dbg !6890
  store i32 %inc, i32* %i, align 4, !dbg !6890
  br label %for.cond, !dbg !6891, !llvm.loop !6892

for.end:                                          ; preds = %for.cond
  %call2 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %this1), !dbg !6894
  ret %class.cGate* %call2, !dbg !6895
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZNK7cModule24checkInternalConnectionsEv(%class.cModule* %this) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !6896 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %i = alloca %"class.cModule::GateIterator", align 8
  %g = alloca %class.cGate*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %cleanup.isactive = alloca i1, align 1
  %submod = alloca %"class.cModule::SubmoduleIterator", align 8
  %m = alloca %class.cModule*, align 8
  %i14 = alloca %"class.cModule::GateIterator", align 8
  %g19 = alloca %class.cGate*, align 8
  %ref.tmp40 = alloca %"class.std::__cxx11::basic_string", align 8
  %cleanup.isactive48 = alloca i1, align 1
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6897, metadata !DIExpression()), !dbg !6898
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %i, metadata !6899, metadata !DIExpression()), !dbg !6901
  call void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %i, %class.cModule* %this1), !dbg !6901
  br label %for.cond, !dbg !6902

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %i), !dbg !6903
  %lnot = xor i1 %call, true, !dbg !6905
  br i1 %lnot, label %for.body, label %for.end, !dbg !6906

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %class.cGate** %g, metadata !6907, metadata !DIExpression()), !dbg !6909
  %call2 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %i), !dbg !6910
  store %class.cGate* %call2, %class.cGate** %g, align 8, !dbg !6909
  %0 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !6911
  %call3 = call i32 @_ZNK5cGate4sizeEv(%class.cGate* %0), !dbg !6913
  %cmp = icmp ne i32 %call3, 0, !dbg !6914
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6915

land.lhs.true:                                    ; preds = %for.body
  %1 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !6916
  %call4 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %1), !dbg !6917
  br i1 %call4, label %if.end, label %if.then, !dbg !6918

if.then:                                          ; preds = %land.lhs.true
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6919
  store i1 true, i1* %cleanup.isactive, align 1
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !6919
  %3 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6920
  %4 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !6921
  %5 = bitcast %class.cGate* %4 to %class.cObject*, !dbg !6922
  %6 = bitcast %class.cObject* %5 to void (%"class.std::__cxx11::basic_string"*, %class.cObject*)***, !dbg !6922
  %vtable = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)**, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*** %6, align 8, !dbg !6922
  %vfn = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vtable, i64 8, !dbg !6922
  %7 = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vfn, align 8, !dbg !6922
  invoke void %7(%"class.std::__cxx11::basic_string"* sret %ref.tmp, %class.cObject* %5)
          to label %invoke.cont unwind label %lpad, !dbg !6922

invoke.cont:                                      ; preds = %if.then
  %call5 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %ref.tmp) #3, !dbg !6923
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.32, i64 0, i64 0), i8* %call5)
          to label %invoke.cont7 unwind label %lpad6, !dbg !6924

invoke.cont7:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1, !dbg !6919
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad6, !dbg !6919

lpad:                                             ; preds = %if.then
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !6925
  %9 = extractvalue { i8*, i32 } %8, 0, !dbg !6925
  store i8* %9, i8** %exn.slot, align 8, !dbg !6925
  %10 = extractvalue { i8*, i32 } %8, 1, !dbg !6925
  store i32 %10, i32* %ehselector.slot, align 4, !dbg !6925
  br label %ehcleanup, !dbg !6925

lpad6:                                            ; preds = %invoke.cont7, %invoke.cont
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !6925
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !6925
  store i8* %12, i8** %exn.slot, align 8, !dbg !6925
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !6925
  store i32 %13, i32* %ehselector.slot, align 4, !dbg !6925
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp) #3, !dbg !6919
  br label %ehcleanup, !dbg !6919

ehcleanup:                                        ; preds = %lpad6, %lpad
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1, !dbg !6919
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done, !dbg !6919

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !6919
  br label %cleanup.done, !dbg !6919

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume, !dbg !6919

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6926

for.inc:                                          ; preds = %if.end
  %call8 = call %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %i, i32 0), !dbg !6927
  br label %for.cond, !dbg !6928, !llvm.loop !6929

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %submod, metadata !6931, metadata !DIExpression()), !dbg !6933
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %submod, %class.cModule* %this1), !dbg !6933
  br label %for.cond9, !dbg !6934

for.cond9:                                        ; preds = %for.inc58, %for.end
  %call10 = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !6935
  %lnot11 = xor i1 %call10, true, !dbg !6937
  br i1 %lnot11, label %for.body12, label %for.end60, !dbg !6938

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata %class.cModule** %m, metadata !6939, metadata !DIExpression()), !dbg !6941
  %call13 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !6942
  store %class.cModule* %call13, %class.cModule** %m, align 8, !dbg !6941
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %i14, metadata !6943, metadata !DIExpression()), !dbg !6945
  %14 = load %class.cModule*, %class.cModule** %m, align 8, !dbg !6946
  call void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %i14, %class.cModule* %14), !dbg !6945
  br label %for.cond15, !dbg !6947

for.cond15:                                       ; preds = %for.inc55, %for.body12
  %call16 = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %i14), !dbg !6948
  %lnot17 = xor i1 %call16, true, !dbg !6950
  br i1 %lnot17, label %for.body18, label %for.end57, !dbg !6951

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %class.cGate** %g19, metadata !6952, metadata !DIExpression()), !dbg !6954
  %call20 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %i14), !dbg !6955
  store %class.cGate* %call20, %class.cGate** %g19, align 8, !dbg !6954
  %15 = load %class.cGate*, %class.cGate** %g19, align 8, !dbg !6956
  %call21 = call i32 @_ZNK5cGate4sizeEv(%class.cGate* %15), !dbg !6958
  %cmp22 = icmp ne i32 %call21, 0, !dbg !6959
  br i1 %cmp22, label %land.lhs.true23, label %if.end54, !dbg !6960

land.lhs.true23:                                  ; preds = %for.body18
  %16 = load %class.cGate*, %class.cGate** %g19, align 8, !dbg !6961
  %call24 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %16), !dbg !6962
  br i1 %call24, label %if.end54, label %land.lhs.true25, !dbg !6963

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %17 = load %class.cGate*, %class.cGate** %g19, align 8, !dbg !6964
  %call26 = call %class.cProperties* @_ZNK5cGate13getPropertiesEv(%class.cGate* %17), !dbg !6965
  %18 = bitcast %class.cProperties* %call26 to i1 (%class.cProperties*, i8*, i8*)***, !dbg !6966
  %vtable27 = load i1 (%class.cProperties*, i8*, i8*)**, i1 (%class.cProperties*, i8*, i8*)*** %18, align 8, !dbg !6966
  %vfn28 = getelementptr inbounds i1 (%class.cProperties*, i8*, i8*)*, i1 (%class.cProperties*, i8*, i8*)** %vtable27, i64 24, !dbg !6966
  %19 = load i1 (%class.cProperties*, i8*, i8*)*, i1 (%class.cProperties*, i8*, i8*)** %vfn28, align 8, !dbg !6966
  %call29 = call zeroext i1 %19(%class.cProperties* %call26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), i8* null), !dbg !6966
  %conv = zext i1 %call29 to i32, !dbg !6964
  %cmp30 = icmp eq i32 %conv, 0, !dbg !6967
  br i1 %cmp30, label %land.lhs.true31, label %if.end54, !dbg !6968

land.lhs.true31:                                  ; preds = %land.lhs.true25
  %20 = load %class.cGate*, %class.cGate** %g19, align 8, !dbg !6969
  %call32 = call %class.cProperties* @_ZNK5cGate13getPropertiesEv(%class.cGate* %20), !dbg !6970
  %21 = bitcast %class.cProperties* %call32 to i1 (%class.cProperties*, i8*, i8*)***, !dbg !6971
  %vtable33 = load i1 (%class.cProperties*, i8*, i8*)**, i1 (%class.cProperties*, i8*, i8*)*** %21, align 8, !dbg !6971
  %vfn34 = getelementptr inbounds i1 (%class.cProperties*, i8*, i8*)*, i1 (%class.cProperties*, i8*, i8*)** %vtable33, i64 24, !dbg !6971
  %22 = load i1 (%class.cProperties*, i8*, i8*)*, i1 (%class.cProperties*, i8*, i8*)** %vfn34, align 8, !dbg !6971
  %call35 = call zeroext i1 %22(%class.cProperties* %call32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i8* null), !dbg !6971
  %conv36 = zext i1 %call35 to i32, !dbg !6969
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !6972
  br i1 %cmp37, label %if.then38, label %if.end54, !dbg !6973

if.then38:                                        ; preds = %land.lhs.true31
  %exception39 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !6974
  store i1 true, i1* %cleanup.isactive48, align 1
  %23 = bitcast i8* %exception39 to %class.cRuntimeError*, !dbg !6974
  %24 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !6975
  %25 = load %class.cGate*, %class.cGate** %g19, align 8, !dbg !6976
  %26 = bitcast %class.cGate* %25 to %class.cObject*, !dbg !6977
  %27 = bitcast %class.cObject* %26 to void (%"class.std::__cxx11::basic_string"*, %class.cObject*)***, !dbg !6977
  %vtable41 = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)**, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*** %27, align 8, !dbg !6977
  %vfn42 = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vtable41, i64 8, !dbg !6977
  %28 = load void (%"class.std::__cxx11::basic_string"*, %class.cObject*)*, void (%"class.std::__cxx11::basic_string"*, %class.cObject*)** %vfn42, align 8, !dbg !6977
  invoke void %28(%"class.std::__cxx11::basic_string"* sret %ref.tmp40, %class.cObject* %26)
          to label %invoke.cont44 unwind label %lpad43, !dbg !6977

invoke.cont44:                                    ; preds = %if.then38
  %call45 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %ref.tmp40) #3, !dbg !6978
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %23, %class.cObject* %24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i8* %call45)
          to label %invoke.cont47 unwind label %lpad46, !dbg !6979

invoke.cont47:                                    ; preds = %invoke.cont44
  store i1 false, i1* %cleanup.isactive48, align 1, !dbg !6974
  invoke void @__cxa_throw(i8* %exception39, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad46, !dbg !6974

lpad43:                                           ; preds = %if.then38
  %29 = landingpad { i8*, i32 }
          cleanup, !dbg !6980
  %30 = extractvalue { i8*, i32 } %29, 0, !dbg !6980
  store i8* %30, i8** %exn.slot, align 8, !dbg !6980
  %31 = extractvalue { i8*, i32 } %29, 1, !dbg !6980
  store i32 %31, i32* %ehselector.slot, align 4, !dbg !6980
  br label %ehcleanup50, !dbg !6980

lpad46:                                           ; preds = %invoke.cont47, %invoke.cont44
  %32 = landingpad { i8*, i32 }
          cleanup, !dbg !6980
  %33 = extractvalue { i8*, i32 } %32, 0, !dbg !6980
  store i8* %33, i8** %exn.slot, align 8, !dbg !6980
  %34 = extractvalue { i8*, i32 } %32, 1, !dbg !6980
  store i32 %34, i32* %ehselector.slot, align 4, !dbg !6980
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp40) #3, !dbg !6974
  br label %ehcleanup50, !dbg !6974

ehcleanup50:                                      ; preds = %lpad46, %lpad43
  %cleanup.is_active51 = load i1, i1* %cleanup.isactive48, align 1, !dbg !6974
  br i1 %cleanup.is_active51, label %cleanup.action52, label %cleanup.done53, !dbg !6974

cleanup.action52:                                 ; preds = %ehcleanup50
  call void @__cxa_free_exception(i8* %exception39) #3, !dbg !6974
  br label %cleanup.done53, !dbg !6974

cleanup.done53:                                   ; preds = %cleanup.action52, %ehcleanup50
  br label %eh.resume, !dbg !6974

if.end54:                                         ; preds = %land.lhs.true31, %land.lhs.true25, %land.lhs.true23, %for.body18
  br label %for.inc55, !dbg !6981

for.inc55:                                        ; preds = %if.end54
  %call56 = call %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %i14, i32 0), !dbg !6982
  br label %for.cond15, !dbg !6983, !llvm.loop !6984

for.end57:                                        ; preds = %for.cond15
  br label %for.inc58, !dbg !6986

for.inc58:                                        ; preds = %for.end57
  %call59 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %submod, i32 0), !dbg !6987
  br label %for.cond9, !dbg !6988, !llvm.loop !6989

for.end60:                                        ; preds = %for.cond9
  ret i1 true, !dbg !6991

eh.resume:                                        ; preds = %cleanup.done53, %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !6919
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !6919
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !6919
  %lpad.val61 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !6919
  resume { i8*, i32 } %lpad.val61, !dbg !6919

unreachable:                                      ; preds = %invoke.cont47, %invoke.cont7
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate4sizeEv(%class.cGate* %this) #0 comdat align 2 !dbg !6992 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !6994, metadata !DIExpression()), !dbg !6995
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %call = call i32 @_ZNK5cGate13getVectorSizeEv(%class.cGate* %this1), !dbg !6996
  ret i32 %call, !dbg !6997
}

declare dso_local %class.cProperties* @_ZNK5cGate13getPropertiesEv(%class.cGate*) #1

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN7cModule13findSubmoduleEPKci(%class.cModule* %this, i8* %submodname, i32 %idx) #0 align 2 !dbg !6998 {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %class.cModule*, align 8
  %submodname.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %i = alloca %"class.cModule::SubmoduleIterator", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !6999, metadata !DIExpression()), !dbg !7000
  store i8* %submodname, i8** %submodname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %submodname.addr, metadata !7001, metadata !DIExpression()), !dbg !7002
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !7003, metadata !DIExpression()), !dbg !7004
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %i, metadata !7005, metadata !DIExpression()), !dbg !7007
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %i, %class.cModule* %this1), !dbg !7007
  br label %for.cond, !dbg !7008

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7009
  %lnot = xor i1 %call, true, !dbg !7011
  br i1 %lnot, label %for.body, label %for.end, !dbg !7012

for.body:                                         ; preds = %for.cond
  %call2 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7013
  %0 = bitcast %class.cModule* %call2 to %class.cObject*, !dbg !7015
  %1 = load i8*, i8** %submodname.addr, align 8, !dbg !7016
  %call3 = call zeroext i1 @_ZNK7cObject6isNameEPKc(%class.cObject* %0, i8* %1), !dbg !7015
  br i1 %call3, label %land.lhs.true, label %if.end, !dbg !7017

land.lhs.true:                                    ; preds = %for.body
  %2 = load i32, i32* %idx.addr, align 4, !dbg !7018
  %cmp = icmp eq i32 %2, -1, !dbg !7019
  br i1 %cmp, label %land.lhs.true4, label %lor.lhs.false, !dbg !7020

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call5 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7021
  %call6 = call zeroext i1 @_ZNK7cModule8isVectorEv(%class.cModule* %call5), !dbg !7022
  br i1 %call6, label %lor.lhs.false, label %if.then, !dbg !7023

lor.lhs.false:                                    ; preds = %land.lhs.true4, %land.lhs.true
  %call7 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7024
  %call8 = call i32 @_ZNK7cModule8getIndexEv(%class.cModule* %call7), !dbg !7025
  %3 = load i32, i32* %idx.addr, align 4, !dbg !7026
  %cmp9 = icmp eq i32 %call8, %3, !dbg !7027
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7028

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true4
  %call10 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7029
  %call11 = call i32 @_ZNK7cModule5getIdEv(%class.cModule* %call10), !dbg !7030
  store i32 %call11, i32* %retval, align 4, !dbg !7031
  br label %return, !dbg !7031

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !7032

for.inc:                                          ; preds = %if.end
  %call12 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %i, i32 0), !dbg !7033
  br label %for.cond, !dbg !7034, !llvm.loop !7035

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !7037
  br label %return, !dbg !7037

return:                                           ; preds = %for.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7038
  ret i32 %4, !dbg !7038
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cObject6isNameEPKc(%class.cObject* %this, i8* %s) #0 comdat align 2 !dbg !7039 {
entry:
  %this.addr = alloca %class.cObject*, align 8
  %s.addr = alloca i8*, align 8
  store %class.cObject* %this, %class.cObject** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cObject** %this.addr, metadata !7045, metadata !DIExpression()), !dbg !7047
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !7048, metadata !DIExpression()), !dbg !7049
  %this1 = load %class.cObject*, %class.cObject** %this.addr, align 8
  %0 = bitcast %class.cObject* %this1 to i8* (%class.cObject*)***, !dbg !7050
  %vtable = load i8* (%class.cObject*)**, i8* (%class.cObject*)*** %0, align 8, !dbg !7050
  %vfn = getelementptr inbounds i8* (%class.cObject*)*, i8* (%class.cObject*)** %vtable, i64 6, !dbg !7050
  %1 = load i8* (%class.cObject*)*, i8* (%class.cObject*)** %vfn, align 8, !dbg !7050
  %call = call i8* %1(%class.cObject* %this1), !dbg !7050
  %2 = load i8*, i8** %s.addr, align 8, !dbg !7051
  %call2 = call i32 @_Z10opp_strcmpPKcS0_(i8* %call, i8* %2), !dbg !7052
  %tobool = icmp ne i32 %call2, 0, !dbg !7052
  %lnot = xor i1 %tobool, true, !dbg !7053
  ret i1 %lnot, !dbg !7054
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK7cModule5getIdEv(%class.cModule* %this) #5 comdat align 2 !dbg !7055 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %mod_id = getelementptr inbounds %class.cModule, %class.cModule* %this1, i32 0, i32 2, !dbg !7058
  %0 = load i32, i32* %mod_id, align 8, !dbg !7058
  ret i32 %0, !dbg !7059
}

; Function Attrs: noinline uwtable
define dso_local %class.cModule* @_ZN7cModule12getSubmoduleEPKci(%class.cModule* %this, i8* %submodname, i32 %idx) #0 align 2 !dbg !7060 {
entry:
  %retval = alloca %class.cModule*, align 8
  %this.addr = alloca %class.cModule*, align 8
  %submodname.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %i = alloca %"class.cModule::SubmoduleIterator", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  store i8* %submodname, i8** %submodname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %submodname.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %i, metadata !7067, metadata !DIExpression()), !dbg !7069
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %i, %class.cModule* %this1), !dbg !7069
  br label %for.cond, !dbg !7070

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7071
  %lnot = xor i1 %call, true, !dbg !7073
  br i1 %lnot, label %for.body, label %for.end, !dbg !7074

for.body:                                         ; preds = %for.cond
  %call2 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7075
  %0 = bitcast %class.cModule* %call2 to %class.cObject*, !dbg !7077
  %1 = load i8*, i8** %submodname.addr, align 8, !dbg !7078
  %call3 = call zeroext i1 @_ZNK7cObject6isNameEPKc(%class.cObject* %0, i8* %1), !dbg !7077
  br i1 %call3, label %land.lhs.true, label %if.end, !dbg !7079

land.lhs.true:                                    ; preds = %for.body
  %2 = load i32, i32* %idx.addr, align 4, !dbg !7080
  %cmp = icmp eq i32 %2, -1, !dbg !7081
  br i1 %cmp, label %land.lhs.true4, label %lor.lhs.false, !dbg !7082

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call5 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7083
  %call6 = call zeroext i1 @_ZNK7cModule8isVectorEv(%class.cModule* %call5), !dbg !7084
  br i1 %call6, label %lor.lhs.false, label %if.then, !dbg !7085

lor.lhs.false:                                    ; preds = %land.lhs.true4, %land.lhs.true
  %call7 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7086
  %call8 = call i32 @_ZNK7cModule8getIndexEv(%class.cModule* %call7), !dbg !7087
  %3 = load i32, i32* %idx.addr, align 4, !dbg !7088
  %cmp9 = icmp eq i32 %call8, %3, !dbg !7089
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7090

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true4
  %call10 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %i), !dbg !7091
  store %class.cModule* %call10, %class.cModule** %retval, align 8, !dbg !7092
  br label %return, !dbg !7092

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !7093

for.inc:                                          ; preds = %if.end
  %call11 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %i, i32 0), !dbg !7094
  br label %for.cond, !dbg !7095, !llvm.loop !7096

for.end:                                          ; preds = %for.cond
  store %class.cModule* null, %class.cModule** %retval, align 8, !dbg !7098
  br label %return, !dbg !7098

return:                                           ; preds = %for.end, %if.then
  %4 = load %class.cModule*, %class.cModule** %retval, align 8, !dbg !7099
  ret %class.cModule* %4, !dbg !7099
}

; Function Attrs: noinline uwtable
define dso_local %class.cModule* @_ZN7cModule23getModuleByRelativePathEPKc(%class.cModule* %this, i8* %path) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7100 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %path.addr = alloca i8*, align 8
  %pathbuf = alloca %class.opp_string, align 8
  %s = alloca i8*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %modp = alloca %class.cModule*, align 8
  %b = alloca i8*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string* %pathbuf, metadata !7105, metadata !DIExpression()), !dbg !7106
  %0 = load i8*, i8** %path.addr, align 8, !dbg !7107
  call void @_ZN10opp_stringC2EPKc(%class.opp_string* %pathbuf, i8* %0), !dbg !7106
  call void @llvm.dbg.declare(metadata i8** %s, metadata !7108, metadata !DIExpression()), !dbg !7109
  %call = invoke i8* @_ZN10opp_string6bufferEv(%class.opp_string* %pathbuf)
          to label %invoke.cont unwind label %lpad, !dbg !7110

invoke.cont:                                      ; preds = %entry
  %call2 = call i8* @strtok(i8* %call, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #3, !dbg !7111
  store i8* %call2, i8** %s, align 8, !dbg !7109
  call void @llvm.dbg.declare(metadata %class.cModule** %modp, metadata !7112, metadata !DIExpression()), !dbg !7113
  store %class.cModule* %this1, %class.cModule** %modp, align 8, !dbg !7113
  br label %do.body, !dbg !7114

do.body:                                          ; preds = %land.end, %invoke.cont
  call void @llvm.dbg.declare(metadata i8** %b, metadata !7115, metadata !DIExpression()), !dbg !7117
  %1 = load i8*, i8** %s, align 8, !dbg !7118
  %call3 = call i8* @strchr(i8* %1, i32 91) #9, !dbg !7120
  store i8* %call3, i8** %b, align 8, !dbg !7121
  %cmp = icmp eq i8* %call3, null, !dbg !7122
  br i1 %cmp, label %if.then, label %if.else, !dbg !7123

if.then:                                          ; preds = %do.body
  %2 = load %class.cModule*, %class.cModule** %modp, align 8, !dbg !7124
  %3 = load i8*, i8** %s, align 8, !dbg !7125
  %call5 = invoke %class.cModule* @_ZN7cModule12getSubmoduleEPKci(%class.cModule* %2, i8* %3, i32 -1)
          to label %invoke.cont4 unwind label %lpad, !dbg !7126

invoke.cont4:                                     ; preds = %if.then
  store %class.cModule* %call5, %class.cModule** %modp, align 8, !dbg !7127
  br label %if.end14, !dbg !7128

lpad:                                             ; preds = %if.end, %invoke.cont10, %if.then, %entry
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !7129
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !7129
  store i8* %5, i8** %exn.slot, align 8, !dbg !7129
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !7129
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !7129
  br label %ehcleanup, !dbg !7129

if.else:                                          ; preds = %do.body
  %7 = load i8*, i8** %s, align 8, !dbg !7130
  %8 = load i8*, i8** %s, align 8, !dbg !7133
  %call6 = call i64 @strlen(i8* %8) #9, !dbg !7134
  %sub = sub i64 %call6, 1, !dbg !7135
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !7130
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7130
  %conv = sext i8 %9 to i32, !dbg !7130
  %cmp7 = icmp ne i32 %conv, 93, !dbg !7136
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !7137

if.then8:                                         ; preds = %if.else
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7138
  %10 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7138
  %11 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7139
  %12 = load i8*, i8** %path.addr, align 8, !dbg !7140
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %10, %class.cObject* %11, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.36, i64 0, i64 0), i8* %12)
          to label %invoke.cont10 unwind label %lpad9, !dbg !7141

invoke.cont10:                                    ; preds = %if.then8
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad, !dbg !7138

lpad9:                                            ; preds = %if.then8
  %13 = landingpad { i8*, i32 }
          cleanup, !dbg !7142
  %14 = extractvalue { i8*, i32 } %13, 0, !dbg !7142
  store i8* %14, i8** %exn.slot, align 8, !dbg !7142
  %15 = extractvalue { i8*, i32 } %13, 1, !dbg !7142
  store i32 %15, i32* %ehselector.slot, align 4, !dbg !7142
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7138
  br label %ehcleanup, !dbg !7138

if.end:                                           ; preds = %if.else
  %16 = load i8*, i8** %b, align 8, !dbg !7143
  store i8 0, i8* %16, align 1, !dbg !7144
  %17 = load %class.cModule*, %class.cModule** %modp, align 8, !dbg !7145
  %18 = load i8*, i8** %s, align 8, !dbg !7146
  %19 = load i8*, i8** %b, align 8, !dbg !7147
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 1, !dbg !7148
  %call11 = call i32 @atoi(i8* %add.ptr) #9, !dbg !7149
  %call13 = invoke %class.cModule* @_ZN7cModule12getSubmoduleEPKci(%class.cModule* %17, i8* %18, i32 %call11)
          to label %invoke.cont12 unwind label %lpad, !dbg !7150

invoke.cont12:                                    ; preds = %if.end
  store %class.cModule* %call13, %class.cModule** %modp, align 8, !dbg !7151
  br label %if.end14

if.end14:                                         ; preds = %invoke.cont12, %invoke.cont4
  br label %do.cond, !dbg !7152

do.cond:                                          ; preds = %if.end14
  %call15 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #3, !dbg !7153
  store i8* %call15, i8** %s, align 8, !dbg !7154
  %cmp16 = icmp ne i8* %call15, null, !dbg !7155
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !7156

land.rhs:                                         ; preds = %do.cond
  %20 = load %class.cModule*, %class.cModule** %modp, align 8, !dbg !7157
  %cmp17 = icmp ne %class.cModule* %20, null, !dbg !7158
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %21 = phi i1 [ false, %do.cond ], [ %cmp17, %land.rhs ], !dbg !7102
  br i1 %21, label %do.body, label %do.end, !dbg !7152, !llvm.loop !7159

do.end:                                           ; preds = %land.end
  %22 = load %class.cModule*, %class.cModule** %modp, align 8, !dbg !7161
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %pathbuf) #3, !dbg !7129
  ret %class.cModule* %22, !dbg !7129

ehcleanup:                                        ; preds = %lpad9, %lpad
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %pathbuf) #3, !dbg !7129
  br label %eh.resume, !dbg !7129

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7129
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7129
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7129
  %lpad.val18 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7129
  resume { i8*, i32 } %lpad.val18, !dbg !7129

unreachable:                                      ; preds = %invoke.cont10
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN10opp_stringC2EPKc(%class.opp_string* %this, i8* %s) unnamed_addr #0 comdat align 2 !dbg !7162 {
entry:
  %this.addr = alloca %class.opp_string*, align 8
  %s.addr = alloca i8*, align 8
  store %class.opp_string* %this, %class.opp_string** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string** %this.addr, metadata !7163, metadata !DIExpression()), !dbg !7165
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !7166, metadata !DIExpression()), !dbg !7167
  %this1 = load %class.opp_string*, %class.opp_string** %this.addr, align 8
  %0 = load i8*, i8** %s.addr, align 8, !dbg !7168
  %call = call i8* @_Z10opp_strdupPKc(i8* %0), !dbg !7170
  %str = getelementptr inbounds %class.opp_string, %class.opp_string* %this1, i32 0, i32 0, !dbg !7171
  store i8* %call, i8** %str, align 8, !dbg !7172
  ret void, !dbg !7173
}

; Function Attrs: nounwind
declare dso_local i8* @strtok(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZN10opp_string6bufferEv(%class.opp_string* %this) #5 comdat align 2 !dbg !7174 {
entry:
  %this.addr = alloca %class.opp_string*, align 8
  store %class.opp_string* %this, %class.opp_string** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string** %this.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  %this1 = load %class.opp_string*, %class.opp_string** %this.addr, align 8
  %str = getelementptr inbounds %class.opp_string, %class.opp_string* %this1, i32 0, i32 0, !dbg !7177
  %0 = load i8*, i8** %str, align 8, !dbg !7177
  ret i8* %0, !dbg !7178
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #12

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN10opp_stringD2Ev(%class.opp_string* %this) unnamed_addr #5 comdat align 2 !dbg !7179 {
entry:
  %this.addr = alloca %class.opp_string*, align 8
  store %class.opp_string* %this, %class.opp_string** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string** %this.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  %this1 = load %class.opp_string*, %class.opp_string** %this.addr, align 8
  %str = getelementptr inbounds %class.opp_string, %class.opp_string* %this1, i32 0, i32 0, !dbg !7182
  %0 = load i8*, i8** %str, align 8, !dbg !7182
  %isnull = icmp eq i8* %0, null, !dbg !7184
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !7184

delete.notnull:                                   ; preds = %entry
  call void @_ZdaPv(i8* %0) #17, !dbg !7184
  br label %delete.end, !dbg !7184

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void, !dbg !7185
}

; Function Attrs: noinline uwtable
define dso_local dereferenceable(24) %class.cPar* @_ZN7cModule14getAncestorParEPKc(%class.cModule* %this, i8* %name) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7186 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %name.addr = alloca i8*, align 8
  %pmod = alloca %class.cModule*, align 8
  %k = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %pmod, metadata !7191, metadata !DIExpression()), !dbg !7192
  store %class.cModule* %this1, %class.cModule** %pmod, align 8, !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %while.cond, !dbg !7195

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %class.cModule*, %class.cModule** %pmod, align 8, !dbg !7196
  %tobool = icmp ne %class.cModule* %0, null, !dbg !7196
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7197

land.rhs:                                         ; preds = %while.cond
  %1 = load %class.cModule*, %class.cModule** %pmod, align 8, !dbg !7198
  %2 = bitcast %class.cModule* %1 to %class.cComponent*, !dbg !7199
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7200
  %4 = bitcast %class.cComponent* %2 to i32 (%class.cComponent*, i8*)***, !dbg !7199
  %vtable = load i32 (%class.cComponent*, i8*)**, i32 (%class.cComponent*, i8*)*** %4, align 8, !dbg !7199
  %vfn = getelementptr inbounds i32 (%class.cComponent*, i8*)*, i32 (%class.cComponent*, i8*)** %vtable, i64 44, !dbg !7199
  %5 = load i32 (%class.cComponent*, i8*)*, i32 (%class.cComponent*, i8*)** %vfn, align 8, !dbg !7199
  %call = call i32 %5(%class.cComponent* %2, i8* %3), !dbg !7199
  store i32 %call, i32* %k, align 4, !dbg !7201
  %cmp = icmp slt i32 %call, 0, !dbg !7202
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !7188
  br i1 %6, label %while.body, label %while.end, !dbg !7195

while.body:                                       ; preds = %land.end
  %7 = load %class.cModule*, %class.cModule** %pmod, align 8, !dbg !7203
  %8 = bitcast %class.cModule* %7 to %class.cModule* (%class.cModule*)***, !dbg !7204
  %vtable2 = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %8, align 8, !dbg !7204
  %vfn3 = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable2, i64 37, !dbg !7204
  %9 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn3, align 8, !dbg !7204
  %call4 = call %class.cModule* %9(%class.cModule* %7), !dbg !7204
  store %class.cModule* %call4, %class.cModule** %pmod, align 8, !dbg !7205
  br label %while.cond, !dbg !7195, !llvm.loop !7206

while.end:                                        ; preds = %land.end
  %10 = load %class.cModule*, %class.cModule** %pmod, align 8, !dbg !7208
  %tobool5 = icmp ne %class.cModule* %10, null, !dbg !7208
  br i1 %tobool5, label %if.end, label %if.then, !dbg !7210

if.then:                                          ; preds = %while.end
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7211
  %11 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7211
  %12 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7212
  %13 = load i8*, i8** %name.addr, align 8, !dbg !7213
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %11, %class.cObject* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i8* %13)
          to label %invoke.cont unwind label %lpad, !dbg !7214

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7211
  unreachable, !dbg !7211

lpad:                                             ; preds = %if.then
  %14 = landingpad { i8*, i32 }
          cleanup, !dbg !7215
  %15 = extractvalue { i8*, i32 } %14, 0, !dbg !7215
  store i8* %15, i8** %exn.slot, align 8, !dbg !7215
  %16 = extractvalue { i8*, i32 } %14, 1, !dbg !7215
  store i32 %16, i32* %ehselector.slot, align 4, !dbg !7215
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7211
  br label %eh.resume, !dbg !7211

if.end:                                           ; preds = %while.end
  %17 = load %class.cModule*, %class.cModule** %pmod, align 8, !dbg !7216
  %18 = bitcast %class.cModule* %17 to %class.cComponent*, !dbg !7217
  %19 = load i32, i32* %k, align 4, !dbg !7218
  %20 = bitcast %class.cComponent* %18 to %class.cPar* (%class.cComponent*, i32)***, !dbg !7217
  %vtable6 = load %class.cPar* (%class.cComponent*, i32)**, %class.cPar* (%class.cComponent*, i32)*** %20, align 8, !dbg !7217
  %vfn7 = getelementptr inbounds %class.cPar* (%class.cComponent*, i32)*, %class.cPar* (%class.cComponent*, i32)** %vtable6, i64 42, !dbg !7217
  %21 = load %class.cPar* (%class.cComponent*, i32)*, %class.cPar* (%class.cComponent*, i32)** %vfn7, align 8, !dbg !7217
  %call8 = call dereferenceable(24) %class.cPar* %21(%class.cComponent* %18, i32 %19), !dbg !7217
  ret %class.cPar* %call8, !dbg !7219

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7211
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7211
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7211
  %lpad.val9 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7211
  resume { i8*, i32 } %lpad.val9, !dbg !7211
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule18finalizeParametersEv(%class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7220 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %tmp = alloca %class.cContextSwitcher, align 8
  %tmp2 = alloca %class.cContextTypeSwitcher, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cContextSwitcher* %tmp, metadata !7223, metadata !DIExpression()), !dbg !7237
  %0 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7238
  call void @_ZN16cContextSwitcherC1EPK10cComponent(%class.cContextSwitcher* %tmp, %class.cComponent* %0), !dbg !7237
  call void @llvm.dbg.declare(metadata %class.cContextTypeSwitcher* %tmp2, metadata !7239, metadata !DIExpression()), !dbg !7250
  invoke void @_ZN20cContextTypeSwitcherC1Ei(%class.cContextTypeSwitcher* %tmp2, i32 0)
          to label %invoke.cont unwind label %lpad, !dbg !7250

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7251
  invoke void @_ZN10cComponent18finalizeParametersEv(%class.cComponent* %1)
          to label %invoke.cont3 unwind label %lpad2, !dbg !7251

invoke.cont3:                                     ; preds = %invoke.cont
  %call = invoke %class.cModuleType* @_ZNK7cModule13getModuleTypeEv(%class.cModule* %this1)
          to label %invoke.cont4 unwind label %lpad2, !dbg !7252

invoke.cont4:                                     ; preds = %invoke.cont3
  %2 = bitcast %class.cModuleType* %call to void (%class.cModuleType*, %class.cModule*)***, !dbg !7253
  %vtable = load void (%class.cModuleType*, %class.cModule*)**, void (%class.cModuleType*, %class.cModule*)*** %2, align 8, !dbg !7253
  %vfn = getelementptr inbounds void (%class.cModuleType*, %class.cModule*)*, void (%class.cModuleType*, %class.cModule*)** %vtable, i64 32, !dbg !7253
  %3 = load void (%class.cModuleType*, %class.cModule*)*, void (%class.cModuleType*, %class.cModule*)** %vfn, align 8, !dbg !7253
  invoke void %3(%class.cModuleType* %call, %class.cModule* %this1)
          to label %invoke.cont5 unwind label %lpad2, !dbg !7253

invoke.cont5:                                     ; preds = %invoke.cont4
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp2) #3, !dbg !7254
  call void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher* %tmp) #3, !dbg !7254
  ret void, !dbg !7254

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !7254
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !7254
  store i8* %5, i8** %exn.slot, align 8, !dbg !7254
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !7254
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !7254
  br label %ehcleanup, !dbg !7254

lpad2:                                            ; preds = %invoke.cont4, %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !7254
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !7254
  store i8* %8, i8** %exn.slot, align 8, !dbg !7254
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !7254
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !7254
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp2) #3, !dbg !7254
  br label %ehcleanup, !dbg !7254

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher* %tmp) #3, !dbg !7254
  br label %eh.resume, !dbg !7254

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7254
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7254
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7254
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7254
  resume { i8*, i32 } %lpad.val6, !dbg !7254
}

declare dso_local void @_ZN16cContextSwitcherC1EPK10cComponent(%class.cContextSwitcher*, %class.cComponent*) unnamed_addr #1

declare dso_local void @_ZN20cContextTypeSwitcherC1Ei(%class.cContextTypeSwitcher*, i32) unnamed_addr #1

declare dso_local void @_ZN10cComponent18finalizeParametersEv(%class.cComponent*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cModuleType* @_ZNK7cModule13getModuleTypeEv(%class.cModule* %this) #0 comdat align 2 !dbg !7255 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7256, metadata !DIExpression()), !dbg !7257
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7258
  %call = call %class.cComponentType* @_ZNK10cComponent16getComponentTypeEv(%class.cComponent* %0), !dbg !7258
  %1 = bitcast %class.cComponentType* %call to %class.cModuleType*, !dbg !7259
  ret %class.cModuleType* %1, !dbg !7260
}

; Function Attrs: nounwind
declare dso_local void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher*) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher*) unnamed_addr #2

; Function Attrs: noinline uwtable
define dso_local i32 @_ZN7cModule11buildInsideEv(%class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7261 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %tmp = alloca %class.cContextSwitcher, align 8
  %tmp2 = alloca %class.cContextTypeSwitcher, align 4
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %call = call zeroext i1 @_ZNK7cModule17buildInsideCalledEv(%class.cModule* %this1), !dbg !7264
  br i1 %call, label %if.then, label %if.end, !dbg !7266

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7267
  %0 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7267
  %1 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7268
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %0, %class.cObject* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.38, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !7269

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7267
  unreachable, !dbg !7267

lpad:                                             ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          cleanup, !dbg !7270
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !7270
  store i8* %3, i8** %exn.slot, align 8, !dbg !7270
  %4 = extractvalue { i8*, i32 } %2, 1, !dbg !7270
  store i32 %4, i32* %ehselector.slot, align 4, !dbg !7270
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7267
  br label %eh.resume, !dbg !7267

if.end:                                           ; preds = %entry
  %5 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7271
  %call2 = call zeroext i1 @_ZNK10cComponent19parametersFinalizedEv(%class.cComponent* %5), !dbg !7271
  br i1 %call2, label %if.end4, label %if.then3, !dbg !7273

if.then3:                                         ; preds = %if.end
  %6 = bitcast %class.cModule* %this1 to void (%class.cModule*)***, !dbg !7274
  %vtable = load void (%class.cModule*)**, void (%class.cModule*)*** %6, align 8, !dbg !7274
  %vfn = getelementptr inbounds void (%class.cModule*)*, void (%class.cModule*)** %vtable, i64 33, !dbg !7274
  %7 = load void (%class.cModule*)*, void (%class.cModule*)** %vfn, align 8, !dbg !7274
  call void %7(%class.cModule* %this1), !dbg !7274
  br label %if.end4, !dbg !7274

if.end4:                                          ; preds = %if.then3, %if.end
  call void @llvm.dbg.declare(metadata %class.cContextSwitcher* %tmp, metadata !7275, metadata !DIExpression()), !dbg !7276
  %8 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7277
  call void @_ZN16cContextSwitcherC1EPK10cComponent(%class.cContextSwitcher* %tmp, %class.cComponent* %8), !dbg !7276
  call void @llvm.dbg.declare(metadata %class.cContextTypeSwitcher* %tmp2, metadata !7278, metadata !DIExpression()), !dbg !7279
  invoke void @_ZN20cContextTypeSwitcherC1Ei(%class.cContextTypeSwitcher* %tmp2, i32 0)
          to label %invoke.cont6 unwind label %lpad5, !dbg !7279

invoke.cont6:                                     ; preds = %if.end4
  %9 = bitcast %class.cModule* %this1 to void (%class.cModule*)***, !dbg !7280
  %vtable7 = load void (%class.cModule*)**, void (%class.cModule*)*** %9, align 8, !dbg !7280
  %vfn8 = getelementptr inbounds void (%class.cModule*)*, void (%class.cModule*)** %vtable7, i64 51, !dbg !7280
  %10 = load void (%class.cModule*)*, void (%class.cModule*)** %vfn8, align 8, !dbg !7280
  invoke void %10(%class.cModule* %this1)
          to label %invoke.cont10 unwind label %lpad9, !dbg !7280

invoke.cont10:                                    ; preds = %invoke.cont6
  %11 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !7281
  invoke void @_ZN12cNamedObject7setFlagEib(%class.cNamedObject* %11, i32 128, i1 zeroext true)
          to label %invoke.cont11 unwind label %lpad9, !dbg !7281

invoke.cont11:                                    ; preds = %invoke.cont10
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp2) #3, !dbg !7282
  call void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher* %tmp) #3, !dbg !7282
  ret i32 0, !dbg !7282

lpad5:                                            ; preds = %if.end4
  %12 = landingpad { i8*, i32 }
          cleanup, !dbg !7282
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !7282
  store i8* %13, i8** %exn.slot, align 8, !dbg !7282
  %14 = extractvalue { i8*, i32 } %12, 1, !dbg !7282
  store i32 %14, i32* %ehselector.slot, align 4, !dbg !7282
  br label %ehcleanup, !dbg !7282

lpad9:                                            ; preds = %invoke.cont10, %invoke.cont6
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !7282
  %16 = extractvalue { i8*, i32 } %15, 0, !dbg !7282
  store i8* %16, i8** %exn.slot, align 8, !dbg !7282
  %17 = extractvalue { i8*, i32 } %15, 1, !dbg !7282
  store i32 %17, i32* %ehselector.slot, align 4, !dbg !7282
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp2) #3, !dbg !7282
  br label %ehcleanup, !dbg !7282

ehcleanup:                                        ; preds = %lpad9, %lpad5
  call void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher* %tmp) #3, !dbg !7282
  br label %eh.resume, !dbg !7282

eh.resume:                                        ; preds = %ehcleanup, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7267
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7267
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7267
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7267
  resume { i8*, i32 } %lpad.val12, !dbg !7267
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cModule17buildInsideCalledEv(%class.cModule* %this) #5 comdat align 2 !dbg !7283 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7284, metadata !DIExpression()), !dbg !7285
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !7286
  %flags = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %0, i32 0, i32 2, !dbg !7286
  %1 = load i16, i16* %flags, align 8, !dbg !7286
  %conv = zext i16 %1 to i32, !dbg !7286
  %and = and i32 %conv, 128, !dbg !7287
  %tobool = icmp ne i32 %and, 0, !dbg !7286
  ret i1 %tobool, !dbg !7288
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK10cComponent19parametersFinalizedEv(%class.cComponent* %this) #5 comdat align 2 !dbg !7289 {
entry:
  %this.addr = alloca %class.cComponent*, align 8
  store %class.cComponent* %this, %class.cComponent** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cComponent** %this.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  %this1 = load %class.cComponent*, %class.cComponent** %this.addr, align 8
  %0 = bitcast %class.cComponent* %this1 to %class.cNamedObject*, !dbg !7296
  %flags = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %0, i32 0, i32 2, !dbg !7296
  %1 = load i16, i16* %flags, align 8, !dbg !7296
  %conv = zext i16 %1 to i32, !dbg !7296
  %and = and i32 %conv, 4, !dbg !7297
  %tobool = icmp ne i32 %and, 0, !dbg !7296
  ret i1 %tobool, !dbg !7298
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN12cNamedObject7setFlagEib(%class.cNamedObject* %this, i32 %flag, i1 zeroext %value) #5 comdat align 2 !dbg !7299 {
entry:
  %this.addr = alloca %class.cNamedObject*, align 8
  %flag.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  store %class.cNamedObject* %this, %class.cNamedObject** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cNamedObject** %this.addr, metadata !7304, metadata !DIExpression()), !dbg !7306
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !7307, metadata !DIExpression()), !dbg !7308
  %frombool = zext i1 %value to i8
  store i8 %frombool, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !7309, metadata !DIExpression()), !dbg !7310
  %this1 = load %class.cNamedObject*, %class.cNamedObject** %this.addr, align 8
  %0 = load i8, i8* %value.addr, align 1, !dbg !7311
  %tobool = trunc i8 %0 to i1, !dbg !7311
  br i1 %tobool, label %if.then, label %if.else, !dbg !7313

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %flag.addr, align 4, !dbg !7314
  %flags = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %this1, i32 0, i32 2, !dbg !7315
  %2 = load i16, i16* %flags, align 8, !dbg !7316
  %conv = zext i16 %2 to i32, !dbg !7316
  %or = or i32 %conv, %1, !dbg !7316
  %conv2 = trunc i32 %or to i16, !dbg !7316
  store i16 %conv2, i16* %flags, align 8, !dbg !7316
  br label %if.end, !dbg !7315

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %flag.addr, align 4, !dbg !7317
  %neg = xor i32 %3, -1, !dbg !7318
  %flags3 = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %this1, i32 0, i32 2, !dbg !7319
  %4 = load i16, i16* %flags3, align 8, !dbg !7320
  %conv4 = zext i16 %4 to i32, !dbg !7320
  %and = and i32 %conv4, %neg, !dbg !7320
  %conv5 = trunc i32 %and to i16, !dbg !7320
  store i16 %conv5, i16* %flags3, align 8, !dbg !7320
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7321
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule12deleteModuleEv(%class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7322 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %mod = alloca %class.cModule*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7323, metadata !DIExpression()), !dbg !7324
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %mod, metadata !7325, metadata !DIExpression()), !dbg !7327
  %call = call %class.cSimulation* @_ZN11cSimulation19getActiveSimulationEv(), !dbg !7328
  %call2 = call %class.cModule* @_ZNK11cSimulation16getContextModuleEv(%class.cSimulation* %call), !dbg !7329
  store %class.cModule* %call2, %class.cModule** %mod, align 8, !dbg !7327
  br label %for.cond, !dbg !7330

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %class.cModule*, %class.cModule** %mod, align 8, !dbg !7331
  %tobool = icmp ne %class.cModule* %0, null, !dbg !7331
  br i1 %tobool, label %for.body, label %for.end, !dbg !7333

for.body:                                         ; preds = %for.cond
  %1 = load %class.cModule*, %class.cModule** %mod, align 8, !dbg !7334
  %cmp = icmp eq %class.cModule* %1, %this1, !dbg !7336
  br i1 %cmp, label %if.then, label %if.end, !dbg !7337

if.then:                                          ; preds = %for.body
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7338
  %2 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7338
  %3 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7339
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %2, %class.cObject* %3, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.39, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !7340

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7338
  unreachable, !dbg !7338

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !7341
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !7341
  store i8* %5, i8** %exn.slot, align 8, !dbg !7341
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !7341
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !7341
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7338
  br label %eh.resume, !dbg !7338

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7342

for.inc:                                          ; preds = %if.end
  %7 = load %class.cModule*, %class.cModule** %mod, align 8, !dbg !7343
  %8 = bitcast %class.cModule* %7 to %class.cModule* (%class.cModule*)***, !dbg !7344
  %vtable = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %8, align 8, !dbg !7344
  %vfn = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable, i64 37, !dbg !7344
  %9 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn, align 8, !dbg !7344
  %call3 = call %class.cModule* %9(%class.cModule* %7), !dbg !7344
  store %class.cModule* %call3, %class.cModule** %mod, align 8, !dbg !7345
  br label %for.cond, !dbg !7346, !llvm.loop !7347

for.end:                                          ; preds = %for.cond
  %isnull = icmp eq %class.cModule* %this1, null, !dbg !7349
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !7349

delete.notnull:                                   ; preds = %for.end
  %10 = bitcast %class.cModule* %this1 to void (%class.cModule*)***, !dbg !7349
  %vtable4 = load void (%class.cModule*)**, void (%class.cModule*)*** %10, align 8, !dbg !7349
  %vfn5 = getelementptr inbounds void (%class.cModule*)*, void (%class.cModule*)** %vtable4, i64 4, !dbg !7349
  %11 = load void (%class.cModule*)*, void (%class.cModule*)** %vfn5, align 8, !dbg !7349
  call void %11(%class.cModule* %this1) #3, !dbg !7349
  br label %delete.end, !dbg !7349

delete.end:                                       ; preds = %delete.notnull, %for.end
  ret void, !dbg !7350

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7338
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7338
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7338
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7338
  resume { i8*, i32 } %lpad.val6, !dbg !7338
}

declare dso_local %class.cModule* @_ZNK11cSimulation16getContextModuleEv(%class.cSimulation*) #1

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule14changeParentToEPS_(%class.cModule* %this, %class.cModule* %mod) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7351 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %mod.addr = alloca %class.cModule*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %g = alloca %class.cGate*, align 8
  %i = alloca %"class.cModule::GateIterator", align 8
  %m = alloca %class.cModule*, align 8
  %oldparent = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store %class.cModule* %mod, %class.cModule** %mod.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %mod.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %0 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !7356
  %tobool = icmp ne %class.cModule* %0, null, !dbg !7356
  br i1 %tobool, label %if.end, label %if.then, !dbg !7358

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7359
  %1 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7359
  %2 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7360
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %1, %class.cObject* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !7361

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7359
  unreachable, !dbg !7359

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup, !dbg !7362
  %4 = extractvalue { i8*, i32 } %3, 0, !dbg !7362
  store i8* %4, i8** %exn.slot, align 8, !dbg !7362
  %5 = extractvalue { i8*, i32 } %3, 1, !dbg !7362
  store i32 %5, i32* %ehselector.slot, align 4, !dbg !7362
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7359
  br label %eh.resume, !dbg !7359

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %class.cGate** %g, metadata !7363, metadata !DIExpression()), !dbg !7364
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %i, metadata !7365, metadata !DIExpression()), !dbg !7367
  call void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %i, %class.cModule* %this1), !dbg !7367
  br label %for.cond, !dbg !7368

for.cond:                                         ; preds = %for.inc, %if.end
  %call = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %i), !dbg !7369
  %lnot = xor i1 %call, true, !dbg !7371
  br i1 %lnot, label %for.body, label %for.end, !dbg !7372

for.body:                                         ; preds = %for.cond
  %call2 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %i), !dbg !7373
  store %class.cGate* %call2, %class.cGate** %g, align 8, !dbg !7375
  %6 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !7376
  %call3 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %6), !dbg !7377
  br i1 %call3, label %if.then4, label %if.end10, !dbg !7378

if.then4:                                         ; preds = %for.body
  %exception5 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7379
  %7 = bitcast i8* %exception5 to %class.cRuntimeError*, !dbg !7379
  %8 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7380
  %9 = load %class.cGate*, %class.cGate** %g, align 8, !dbg !7381
  %10 = bitcast %class.cGate* %9 to i8* (%class.cGate*)***, !dbg !7382
  %vtable = load i8* (%class.cGate*)**, i8* (%class.cGate*)*** %10, align 8, !dbg !7382
  %vfn = getelementptr inbounds i8* (%class.cGate*)*, i8* (%class.cGate*)** %vtable, i64 7, !dbg !7382
  %11 = load i8* (%class.cGate*)*, i8* (%class.cGate*)** %vfn, align 8, !dbg !7382
  %call8 = invoke i8* %11(%class.cGate* %9)
          to label %invoke.cont7 unwind label %lpad6, !dbg !7382

invoke.cont7:                                     ; preds = %if.then4
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %7, %class.cObject* %8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.41, i64 0, i64 0), i8* %call8)
          to label %invoke.cont9 unwind label %lpad6, !dbg !7383

invoke.cont9:                                     ; preds = %invoke.cont7
  call void @__cxa_throw(i8* %exception5, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7379
  unreachable, !dbg !7379

lpad6:                                            ; preds = %invoke.cont7, %if.then4
  %12 = landingpad { i8*, i32 }
          cleanup, !dbg !7384
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !7384
  store i8* %13, i8** %exn.slot, align 8, !dbg !7384
  %14 = extractvalue { i8*, i32 } %12, 1, !dbg !7384
  store i32 %14, i32* %ehselector.slot, align 4, !dbg !7384
  call void @__cxa_free_exception(i8* %exception5) #3, !dbg !7379
  br label %eh.resume, !dbg !7379

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !7385

for.inc:                                          ; preds = %if.end10
  %call11 = call %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %i, i32 0), !dbg !7386
  br label %for.cond, !dbg !7387, !llvm.loop !7388

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %class.cModule** %m, metadata !7390, metadata !DIExpression()), !dbg !7392
  %15 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !7393
  store %class.cModule* %15, %class.cModule** %m, align 8, !dbg !7392
  br label %for.cond12, !dbg !7394

for.cond12:                                       ; preds = %for.inc20, %for.end
  %16 = load %class.cModule*, %class.cModule** %m, align 8, !dbg !7395
  %tobool13 = icmp ne %class.cModule* %16, null, !dbg !7395
  br i1 %tobool13, label %for.body14, label %for.end24, !dbg !7397

for.body14:                                       ; preds = %for.cond12
  %17 = load %class.cModule*, %class.cModule** %m, align 8, !dbg !7398
  %cmp = icmp eq %class.cModule* %17, %this1, !dbg !7400
  br i1 %cmp, label %if.then15, label %if.end19, !dbg !7401

if.then15:                                        ; preds = %for.body14
  %exception16 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7402
  %18 = bitcast i8* %exception16 to %class.cRuntimeError*, !dbg !7402
  %19 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7403
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %18, %class.cObject* %19, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.42, i64 0, i64 0))
          to label %invoke.cont18 unwind label %lpad17, !dbg !7404

invoke.cont18:                                    ; preds = %if.then15
  call void @__cxa_throw(i8* %exception16, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7402
  unreachable, !dbg !7402

lpad17:                                           ; preds = %if.then15
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !7405
  %21 = extractvalue { i8*, i32 } %20, 0, !dbg !7405
  store i8* %21, i8** %exn.slot, align 8, !dbg !7405
  %22 = extractvalue { i8*, i32 } %20, 1, !dbg !7405
  store i32 %22, i32* %ehselector.slot, align 4, !dbg !7405
  call void @__cxa_free_exception(i8* %exception16) #3, !dbg !7402
  br label %eh.resume, !dbg !7402

if.end19:                                         ; preds = %for.body14
  br label %for.inc20, !dbg !7406

for.inc20:                                        ; preds = %if.end19
  %23 = load %class.cModule*, %class.cModule** %m, align 8, !dbg !7407
  %24 = bitcast %class.cModule* %23 to %class.cModule* (%class.cModule*)***, !dbg !7408
  %vtable21 = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %24, align 8, !dbg !7408
  %vfn22 = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable21, i64 37, !dbg !7408
  %25 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn22, align 8, !dbg !7408
  %call23 = call %class.cModule* %25(%class.cModule* %23), !dbg !7408
  store %class.cModule* %call23, %class.cModule** %m, align 8, !dbg !7409
  br label %for.cond12, !dbg !7410, !llvm.loop !7411

for.end24:                                        ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata %class.cModule** %oldparent, metadata !7413, metadata !DIExpression()), !dbg !7414
  %26 = bitcast %class.cModule* %this1 to %class.cModule* (%class.cModule*)***, !dbg !7415
  %vtable25 = load %class.cModule* (%class.cModule*)**, %class.cModule* (%class.cModule*)*** %26, align 8, !dbg !7415
  %vfn26 = getelementptr inbounds %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vtable25, i64 37, !dbg !7415
  %27 = load %class.cModule* (%class.cModule*)*, %class.cModule* (%class.cModule*)** %vfn26, align 8, !dbg !7415
  %call27 = call %class.cModule* %27(%class.cModule* %this1), !dbg !7415
  store %class.cModule* %call27, %class.cModule** %oldparent, align 8, !dbg !7414
  %28 = load %class.cModule*, %class.cModule** %oldparent, align 8, !dbg !7416
  call void @_ZN7cModule15removeSubmoduleEPS_(%class.cModule* %28, %class.cModule* %this1), !dbg !7417
  %29 = load %class.cModule*, %class.cModule** %mod.addr, align 8, !dbg !7418
  call void @_ZN7cModule15insertSubmoduleEPS_(%class.cModule* %29, %class.cModule* %this1), !dbg !7419
  %call28 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !7420
  %suppress_notifications = getelementptr inbounds %class.cEnvir, %class.cEnvir* %call28, i32 0, i32 2, !dbg !7420
  %30 = load i8, i8* %suppress_notifications, align 1, !dbg !7420
  %tobool29 = trunc i8 %30 to i1, !dbg !7420
  br i1 %tobool29, label %cond.true, label %cond.false, !dbg !7420

cond.true:                                        ; preds = %for.end24
  br label %cond.end, !dbg !7420

cond.false:                                       ; preds = %for.end24
  %call30 = call %class.cEnvir* @_ZN11cSimulation14getActiveEnvirEv(), !dbg !7420
  %31 = load %class.cModule*, %class.cModule** %oldparent, align 8, !dbg !7421
  %32 = bitcast %class.cEnvir* %call30 to void (%class.cEnvir*, %class.cModule*, %class.cModule*)***, !dbg !7422
  %vtable31 = load void (%class.cEnvir*, %class.cModule*, %class.cModule*)**, void (%class.cEnvir*, %class.cModule*, %class.cModule*)*** %32, align 8, !dbg !7422
  %vfn32 = getelementptr inbounds void (%class.cEnvir*, %class.cModule*, %class.cModule*)*, void (%class.cEnvir*, %class.cModule*, %class.cModule*)** %vtable31, i64 16, !dbg !7422
  %33 = load void (%class.cEnvir*, %class.cModule*, %class.cModule*)*, void (%class.cEnvir*, %class.cModule*, %class.cModule*)** %vfn32, align 8, !dbg !7422
  call void %33(%class.cEnvir* %call30, %class.cModule* %this1, %class.cModule* %31), !dbg !7422
  br label %cond.end, !dbg !7420

cond.end:                                         ; preds = %cond.false, %cond.true
  ret void, !dbg !7423

eh.resume:                                        ; preds = %lpad17, %lpad6, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7359
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7359
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7359
  %lpad.val33 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7359
  resume { i8*, i32 } %lpad.val33, !dbg !7359
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule14callInitializeEv(%class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7424 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %tmp = alloca %class.cContextTypeSwitcher, align 4
  %stage = alloca i32, align 4
  %moreChannelStages = alloca i8, align 1
  %moreModuleStages = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cContextTypeSwitcher* %tmp, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @_ZN20cContextTypeSwitcherC1Ei(%class.cContextTypeSwitcher* %tmp, i32 1), !dbg !7428
  call void @llvm.dbg.declare(metadata i32* %stage, metadata !7429, metadata !DIExpression()), !dbg !7430
  store i32 0, i32* %stage, align 4, !dbg !7430
  call void @llvm.dbg.declare(metadata i8* %moreChannelStages, metadata !7431, metadata !DIExpression()), !dbg !7432
  store i8 1, i8* %moreChannelStages, align 1, !dbg !7432
  call void @llvm.dbg.declare(metadata i8* %moreModuleStages, metadata !7433, metadata !DIExpression()), !dbg !7434
  store i8 1, i8* %moreModuleStages, align 1, !dbg !7434
  br label %while.cond, !dbg !7435

while.cond:                                       ; preds = %if.end11, %entry
  %0 = load i8, i8* %moreChannelStages, align 1, !dbg !7436
  %tobool = trunc i8 %0 to i1, !dbg !7436
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7437

lor.rhs:                                          ; preds = %while.cond
  %1 = load i8, i8* %moreModuleStages, align 1, !dbg !7438
  %tobool2 = trunc i8 %1 to i1, !dbg !7438
  br label %lor.end, !dbg !7437

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %2 = phi i1 [ true, %while.cond ], [ %tobool2, %lor.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !7435

while.body:                                       ; preds = %lor.end
  %3 = load i8, i8* %moreChannelStages, align 1, !dbg !7439
  %tobool3 = trunc i8 %3 to i1, !dbg !7439
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7442

if.then:                                          ; preds = %while.body
  %4 = load i32, i32* %stage, align 4, !dbg !7443
  %5 = bitcast %class.cModule* %this1 to i1 (%class.cModule*, i32)***, !dbg !7444
  %vtable = load i1 (%class.cModule*, i32)**, i1 (%class.cModule*, i32)*** %5, align 8, !dbg !7444
  %vfn = getelementptr inbounds i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vtable, i64 46, !dbg !7444
  %6 = load i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vfn, align 8, !dbg !7444
  %call = invoke zeroext i1 %6(%class.cModule* %this1, i32 %4)
          to label %invoke.cont unwind label %lpad, !dbg !7444

invoke.cont:                                      ; preds = %if.then
  %frombool = zext i1 %call to i8, !dbg !7445
  store i8 %frombool, i8* %moreChannelStages, align 1, !dbg !7445
  br label %if.end, !dbg !7446

lpad:                                             ; preds = %if.then5, %if.then
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !7447
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !7447
  store i8* %8, i8** %exn.slot, align 8, !dbg !7447
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !7447
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !7447
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp) #3, !dbg !7448
  br label %eh.resume, !dbg !7448

if.end:                                           ; preds = %invoke.cont, %while.body
  %10 = load i8, i8* %moreModuleStages, align 1, !dbg !7449
  %tobool4 = trunc i8 %10 to i1, !dbg !7449
  br i1 %tobool4, label %if.then5, label %if.end11, !dbg !7451

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %stage, align 4, !dbg !7452
  %12 = bitcast %class.cModule* %this1 to i1 (%class.cModule*, i32)***, !dbg !7453
  %vtable6 = load i1 (%class.cModule*, i32)**, i1 (%class.cModule*, i32)*** %12, align 8, !dbg !7453
  %vfn7 = getelementptr inbounds i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vtable6, i64 45, !dbg !7453
  %13 = load i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vfn7, align 8, !dbg !7453
  %call9 = invoke zeroext i1 %13(%class.cModule* %this1, i32 %11)
          to label %invoke.cont8 unwind label %lpad, !dbg !7453

invoke.cont8:                                     ; preds = %if.then5
  %frombool10 = zext i1 %call9 to i8, !dbg !7454
  store i8 %frombool10, i8* %moreModuleStages, align 1, !dbg !7454
  br label %if.end11, !dbg !7455

if.end11:                                         ; preds = %invoke.cont8, %if.end
  %14 = load i32, i32* %stage, align 4, !dbg !7456
  %inc = add nsw i32 %14, 1, !dbg !7456
  store i32 %inc, i32* %stage, align 4, !dbg !7456
  br label %while.cond, !dbg !7435, !llvm.loop !7457

while.end:                                        ; preds = %lor.end
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp) #3, !dbg !7448
  ret void, !dbg !7448

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7448
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7448
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7448
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7448
  resume { i8*, i32 } %lpad.val12, !dbg !7448
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN7cModule14callInitializeEi(%class.cModule* %this, i32 %stage) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7459 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %stage.addr = alloca i32, align 4
  %tmp = alloca %class.cContextTypeSwitcher, align 4
  %moreChannelStages = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %moreModuleStages = alloca i8, align 1
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7460, metadata !DIExpression()), !dbg !7461
  store i32 %stage, i32* %stage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stage.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cContextTypeSwitcher* %tmp, metadata !7464, metadata !DIExpression()), !dbg !7465
  call void @_ZN20cContextTypeSwitcherC1Ei(%class.cContextTypeSwitcher* %tmp, i32 1), !dbg !7465
  call void @llvm.dbg.declare(metadata i8* %moreChannelStages, metadata !7466, metadata !DIExpression()), !dbg !7467
  %0 = load i32, i32* %stage.addr, align 4, !dbg !7468
  %1 = bitcast %class.cModule* %this1 to i1 (%class.cModule*, i32)***, !dbg !7469
  %vtable = load i1 (%class.cModule*, i32)**, i1 (%class.cModule*, i32)*** %1, align 8, !dbg !7469
  %vfn = getelementptr inbounds i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vtable, i64 46, !dbg !7469
  %2 = load i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vfn, align 8, !dbg !7469
  %call = invoke zeroext i1 %2(%class.cModule* %this1, i32 %0)
          to label %invoke.cont unwind label %lpad, !dbg !7469

invoke.cont:                                      ; preds = %entry
  %frombool = zext i1 %call to i8, !dbg !7467
  store i8 %frombool, i8* %moreChannelStages, align 1, !dbg !7467
  call void @llvm.dbg.declare(metadata i8* %moreModuleStages, metadata !7470, metadata !DIExpression()), !dbg !7471
  %3 = load i32, i32* %stage.addr, align 4, !dbg !7472
  %4 = bitcast %class.cModule* %this1 to i1 (%class.cModule*, i32)***, !dbg !7473
  %vtable2 = load i1 (%class.cModule*, i32)**, i1 (%class.cModule*, i32)*** %4, align 8, !dbg !7473
  %vfn3 = getelementptr inbounds i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vtable2, i64 45, !dbg !7473
  %5 = load i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vfn3, align 8, !dbg !7473
  %call5 = invoke zeroext i1 %5(%class.cModule* %this1, i32 %3)
          to label %invoke.cont4 unwind label %lpad, !dbg !7473

invoke.cont4:                                     ; preds = %invoke.cont
  %frombool6 = zext i1 %call5 to i8, !dbg !7471
  store i8 %frombool6, i8* %moreModuleStages, align 1, !dbg !7471
  %6 = load i8, i8* %moreChannelStages, align 1, !dbg !7474
  %tobool = trunc i8 %6 to i1, !dbg !7474
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7475

lor.rhs:                                          ; preds = %invoke.cont4
  %7 = load i8, i8* %moreModuleStages, align 1, !dbg !7476
  %tobool7 = trunc i8 %7 to i1, !dbg !7476
  br label %lor.end, !dbg !7475

lor.end:                                          ; preds = %lor.rhs, %invoke.cont4
  %8 = phi i1 [ true, %invoke.cont4 ], [ %tobool7, %lor.rhs ]
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp) #3, !dbg !7477
  ret i1 %8, !dbg !7477

lpad:                                             ; preds = %invoke.cont, %entry
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !7477
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !7477
  store i8* %10, i8** %exn.slot, align 8, !dbg !7477
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !7477
  store i32 %11, i32* %ehselector.slot, align 4, !dbg !7477
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp) #3, !dbg !7477
  br label %eh.resume, !dbg !7477

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7477
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7477
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7477
  %lpad.val8 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7477
  resume { i8*, i32 } %lpad.val8, !dbg !7477
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN7cModule18initializeChannelsEi(%class.cModule* %this, i32 %stage) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7478 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %stage.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %moreStages = alloca i8, align 1
  %chan = alloca %"class.cModule::ChannelIterator", align 8
  %submod = alloca %"class.cModule::SubmoduleIterator", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7479, metadata !DIExpression()), !dbg !7480
  store i32 %stage, i32* %stage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stage.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %call = call %class.cSimulation* @_ZN11cSimulation19getActiveSimulationEv(), !dbg !7483
  %call2 = call i32 @_ZNK11cSimulation14getContextTypeEv(%class.cSimulation* %call), !dbg !7485
  %cmp = icmp ne i32 %call2, 1, !dbg !7486
  br i1 %cmp, label %if.then, label %if.end, !dbg !7487

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7488
  %0 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7488
  invoke void (%class.cRuntimeError*, i8*, ...) @_ZN13cRuntimeErrorC1EPKcz(%class.cRuntimeError* %0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.43, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !7489

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7488
  unreachable, !dbg !7488

lpad:                                             ; preds = %if.then
  %1 = landingpad { i8*, i32 }
          cleanup, !dbg !7490
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !7490
  store i8* %2, i8** %exn.slot, align 8, !dbg !7490
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !7490
  store i32 %3, i32* %ehselector.slot, align 4, !dbg !7490
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7488
  br label %eh.resume, !dbg !7488

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %moreStages, metadata !7491, metadata !DIExpression()), !dbg !7492
  store i8 0, i8* %moreStages, align 1, !dbg !7492
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"* %chan, metadata !7493, metadata !DIExpression()), !dbg !7515
  call void @_ZN7cModule15ChannelIteratorC2EPKS_(%"class.cModule::ChannelIterator"* %chan, %class.cModule* %this1), !dbg !7515
  br label %for.cond, !dbg !7516

for.cond:                                         ; preds = %invoke.cont12, %if.end
  %call5 = invoke zeroext i1 @_ZNK7cModule15ChannelIterator3endEv(%"class.cModule::ChannelIterator"* %chan)
          to label %invoke.cont4 unwind label %lpad3, !dbg !7517

invoke.cont4:                                     ; preds = %for.cond
  %lnot = xor i1 %call5, true, !dbg !7519
  br i1 %lnot, label %for.body, label %for.cond.cleanup, !dbg !7520

for.cond.cleanup:                                 ; preds = %invoke.cont4
  call void @_ZN7cModule15ChannelIteratorD2Ev(%"class.cModule::ChannelIterator"* %chan) #3, !dbg !7521
  br label %for.end

lpad3:                                            ; preds = %for.inc, %invoke.cont6, %for.body, %for.cond
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !7522
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !7522
  store i8* %5, i8** %exn.slot, align 8, !dbg !7522
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !7522
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !7522
  call void @_ZN7cModule15ChannelIteratorD2Ev(%"class.cModule::ChannelIterator"* %chan) #3, !dbg !7521
  br label %eh.resume, !dbg !7521

for.body:                                         ; preds = %invoke.cont4
  %call7 = invoke %class.cChannel* @_ZN7cModule15ChannelIteratorclEv(%"class.cModule::ChannelIterator"* %chan)
          to label %invoke.cont6 unwind label %lpad3, !dbg !7523

invoke.cont6:                                     ; preds = %for.body
  %7 = load i32, i32* %stage.addr, align 4, !dbg !7525
  %8 = bitcast %class.cChannel* %call7 to i1 (%class.cChannel*, i32)***, !dbg !7526
  %vtable = load i1 (%class.cChannel*, i32)**, i1 (%class.cChannel*, i32)*** %8, align 8, !dbg !7526
  %vfn = getelementptr inbounds i1 (%class.cChannel*, i32)*, i1 (%class.cChannel*, i32)** %vtable, i64 45, !dbg !7526
  %9 = load i1 (%class.cChannel*, i32)*, i1 (%class.cChannel*, i32)** %vfn, align 8, !dbg !7526
  %call9 = invoke zeroext i1 %9(%class.cChannel* %call7, i32 %7)
          to label %invoke.cont8 unwind label %lpad3, !dbg !7526

invoke.cont8:                                     ; preds = %invoke.cont6
  br i1 %call9, label %if.then10, label %if.end11, !dbg !7527

if.then10:                                        ; preds = %invoke.cont8
  store i8 1, i8* %moreStages, align 1, !dbg !7528
  br label %if.end11, !dbg !7529

if.end11:                                         ; preds = %if.then10, %invoke.cont8
  br label %for.inc, !dbg !7530

for.inc:                                          ; preds = %if.end11
  %call13 = invoke %class.cChannel* @_ZN7cModule15ChannelIteratorppEi(%"class.cModule::ChannelIterator"* %chan, i32 0)
          to label %invoke.cont12 unwind label %lpad3, !dbg !7531

invoke.cont12:                                    ; preds = %for.inc
  br label %for.cond, !dbg !7521, !llvm.loop !7532

for.end:                                          ; preds = %for.cond.cleanup
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %submod, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %submod, %class.cModule* %this1), !dbg !7536
  br label %for.cond14, !dbg !7537

for.cond14:                                       ; preds = %for.inc24, %for.end
  %call15 = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !7538
  %lnot16 = xor i1 %call15, true, !dbg !7540
  br i1 %lnot16, label %for.body17, label %for.end26, !dbg !7541

for.body17:                                       ; preds = %for.cond14
  %call18 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !7542
  %10 = load i32, i32* %stage.addr, align 4, !dbg !7544
  %11 = bitcast %class.cModule* %call18 to i1 (%class.cModule*, i32)***, !dbg !7545
  %vtable19 = load i1 (%class.cModule*, i32)**, i1 (%class.cModule*, i32)*** %11, align 8, !dbg !7545
  %vfn20 = getelementptr inbounds i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vtable19, i64 46, !dbg !7545
  %12 = load i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vfn20, align 8, !dbg !7545
  %call21 = call zeroext i1 %12(%class.cModule* %call18, i32 %10), !dbg !7545
  br i1 %call21, label %if.then22, label %if.end23, !dbg !7546

if.then22:                                        ; preds = %for.body17
  store i8 1, i8* %moreStages, align 1, !dbg !7547
  br label %if.end23, !dbg !7548

if.end23:                                         ; preds = %if.then22, %for.body17
  br label %for.inc24, !dbg !7549

for.inc24:                                        ; preds = %if.end23
  %call25 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %submod, i32 0), !dbg !7550
  br label %for.cond14, !dbg !7551, !llvm.loop !7552

for.end26:                                        ; preds = %for.cond14
  %13 = load i8, i8* %moreStages, align 1, !dbg !7554
  %tobool = trunc i8 %13 to i1, !dbg !7554
  ret i1 %tobool, !dbg !7555

eh.resume:                                        ; preds = %lpad3, %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7488
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7488
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7488
  %lpad.val27 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7488
  resume { i8*, i32 } %lpad.val27, !dbg !7488
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK11cSimulation14getContextTypeEv(%class.cSimulation* %this) #5 comdat align 2 !dbg !7556 {
entry:
  %this.addr = alloca %class.cSimulation*, align 8
  store %class.cSimulation* %this, %class.cSimulation** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cSimulation** %this.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  %this1 = load %class.cSimulation*, %class.cSimulation** %this.addr, align 8
  %contexttype = getelementptr inbounds %class.cSimulation, %class.cSimulation* %this1, i32 0, i32 9, !dbg !7562
  %0 = load i32, i32* %contexttype, align 8, !dbg !7562
  ret i32 %0, !dbg !7563
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN7cModule15ChannelIteratorC2EPKS_(%"class.cModule::ChannelIterator"* %this, %class.cModule* %parentmodule) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7564 {
entry:
  %this.addr = alloca %"class.cModule::ChannelIterator"*, align 8
  %parentmodule.addr = alloca %class.cModule*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.cModule::ChannelIterator"* %this, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"** %this.addr, metadata !7565, metadata !DIExpression()), !dbg !7567
  store %class.cModule* %parentmodule, %class.cModule** %parentmodule.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %parentmodule.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  %this1 = load %"class.cModule::ChannelIterator"*, %"class.cModule::ChannelIterator"** %this.addr, align 8
  %channels = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !7570
  call void @_ZNSt6vectorIP8cChannelSaIS1_EEC2Ev(%"class.std::vector.31"* %channels) #3, !dbg !7570
  %0 = load %class.cModule*, %class.cModule** %parentmodule.addr, align 8, !dbg !7571
  invoke void @_ZN7cModule15ChannelIterator4initEPKS_(%"class.cModule::ChannelIterator"* %this1, %class.cModule* %0)
          to label %invoke.cont unwind label %lpad, !dbg !7573

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !7574

lpad:                                             ; preds = %entry
  %1 = landingpad { i8*, i32 }
          cleanup, !dbg !7575
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !7575
  store i8* %2, i8** %exn.slot, align 8, !dbg !7575
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !7575
  store i32 %3, i32* %ehselector.slot, align 4, !dbg !7575
  call void @_ZNSt6vectorIP8cChannelSaIS1_EED2Ev(%"class.std::vector.31"* %channels) #3, !dbg !7575
  br label %eh.resume, !dbg !7575

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7575
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7575
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !7575
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !7575
  resume { i8*, i32 } %lpad.val2, !dbg !7575
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cModule15ChannelIterator3endEv(%"class.cModule::ChannelIterator"* %this) #5 comdat align 2 !dbg !7576 {
entry:
  %this.addr = alloca %"class.cModule::ChannelIterator"*, align 8
  store %"class.cModule::ChannelIterator"* %this, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"** %this.addr, metadata !7577, metadata !DIExpression()), !dbg !7579
  %this1 = load %"class.cModule::ChannelIterator"*, %"class.cModule::ChannelIterator"** %this.addr, align 8
  %k = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 1, !dbg !7580
  %0 = load i32, i32* %k, align 8, !dbg !7580
  %channels = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !7581
  %call = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %channels) #3, !dbg !7582
  %conv = trunc i64 %call to i32, !dbg !7581
  %cmp = icmp eq i32 %0, %conv, !dbg !7583
  ret i1 %cmp, !dbg !7584
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel* @_ZN7cModule15ChannelIteratorclEv(%"class.cModule::ChannelIterator"* %this) #5 comdat align 2 !dbg !7585 {
entry:
  %this.addr = alloca %"class.cModule::ChannelIterator"*, align 8
  store %"class.cModule::ChannelIterator"* %this, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"** %this.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  %this1 = load %"class.cModule::ChannelIterator"*, %"class.cModule::ChannelIterator"** %this.addr, align 8
  %k = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 1, !dbg !7588
  %0 = load i32, i32* %k, align 8, !dbg !7588
  %channels = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !7589
  %call = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %channels) #3, !dbg !7590
  %conv = trunc i64 %call to i32, !dbg !7589
  %cmp = icmp slt i32 %0, %conv, !dbg !7591
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7588

cond.true:                                        ; preds = %entry
  %channels2 = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !7592
  %k3 = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 1, !dbg !7593
  %1 = load i32, i32* %k3, align 8, !dbg !7593
  %conv4 = sext i32 %1 to i64, !dbg !7593
  %call5 = call dereferenceable(8) %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EEixEm(%"class.std::vector.31"* %channels2, i64 %conv4) #3, !dbg !7592
  %2 = load %class.cChannel*, %class.cChannel** %call5, align 8, !dbg !7592
  br label %cond.end, !dbg !7588

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cChannel* [ %2, %cond.true ], [ null, %cond.false ], !dbg !7588
  ret %class.cChannel* %cond, !dbg !7594
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel* @_ZN7cModule15ChannelIteratorppEi(%"class.cModule::ChannelIterator"* %this, i32 %0) #5 comdat align 2 !dbg !7595 {
entry:
  %this.addr = alloca %"class.cModule::ChannelIterator"*, align 8
  %.addr = alloca i32, align 4
  store %"class.cModule::ChannelIterator"* %this, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"** %this.addr, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i32 %0, i32* %.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %.addr, metadata !7598, metadata !DIExpression()), !dbg !7599
  %this1 = load %"class.cModule::ChannelIterator"*, %"class.cModule::ChannelIterator"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK7cModule15ChannelIterator3endEv(%"class.cModule::ChannelIterator"* %this1), !dbg !7600
  br i1 %call, label %cond.true, label %cond.false, !dbg !7600

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7600

cond.false:                                       ; preds = %entry
  %channels = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !7601
  %k = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 1, !dbg !7602
  %1 = load i32, i32* %k, align 8, !dbg !7603
  %inc = add nsw i32 %1, 1, !dbg !7603
  store i32 %inc, i32* %k, align 8, !dbg !7603
  %conv = sext i32 %1 to i64, !dbg !7602
  %call2 = call dereferenceable(8) %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EEixEm(%"class.std::vector.31"* %channels, i64 %conv) #3, !dbg !7601
  %2 = load %class.cChannel*, %class.cChannel** %call2, align 8, !dbg !7601
  br label %cond.end, !dbg !7600

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cChannel* [ null, %cond.true ], [ %2, %cond.false ], !dbg !7600
  ret %class.cChannel* %cond, !dbg !7604
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN7cModule15ChannelIteratorD2Ev(%"class.cModule::ChannelIterator"* %this) unnamed_addr #5 comdat align 2 !dbg !7605 {
entry:
  %this.addr = alloca %"class.cModule::ChannelIterator"*, align 8
  store %"class.cModule::ChannelIterator"* %this, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"** %this.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  %this1 = load %"class.cModule::ChannelIterator"*, %"class.cModule::ChannelIterator"** %this.addr, align 8
  %channels = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !7611
  call void @_ZNSt6vectorIP8cChannelSaIS1_EED2Ev(%"class.std::vector.31"* %channels) #3, !dbg !7611
  ret void, !dbg !7613
}

; Function Attrs: noinline uwtable
define dso_local zeroext i1 @_ZN7cModule17initializeModulesEi(%class.cModule* %this, i32 %stage) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7614 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %stage.addr = alloca i32, align 4
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %numStages = alloca i32, align 4
  %__ctx = alloca %class.cMethodCallContextSwitcher, align 8
  %e = alloca %"class.std::exception"*, align 8
  %0 = alloca %class.cException*, align 8
  %moreStages = alloca i8, align 1
  %submod = alloca %"class.cModule::SubmoduleIterator", align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7615, metadata !DIExpression()), !dbg !7616
  store i32 %stage, i32* %stage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stage.addr, metadata !7617, metadata !DIExpression()), !dbg !7618
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  %call = call %class.cSimulation* @_ZN11cSimulation19getActiveSimulationEv(), !dbg !7619
  %call2 = call i32 @_ZNK11cSimulation14getContextTypeEv(%class.cSimulation* %call), !dbg !7621
  %cmp = icmp ne i32 %call2, 1, !dbg !7622
  br i1 %cmp, label %if.then, label %if.end, !dbg !7623

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7624
  %1 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7624
  invoke void (%class.cRuntimeError*, i8*, ...) @_ZN13cRuntimeErrorC1EPKcz(%class.cRuntimeError* %1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.44, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !7625

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7624
  unreachable, !dbg !7624

lpad:                                             ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          cleanup, !dbg !7626
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !7626
  store i8* %3, i8** %exn.slot, align 8, !dbg !7626
  %4 = extractvalue { i8*, i32 } %2, 1, !dbg !7626
  store i32 %4, i32* %ehselector.slot, align 4, !dbg !7626
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7624
  br label %eh.resume, !dbg !7624

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %stage.addr, align 4, !dbg !7627
  %cmp3 = icmp eq i32 %5, 0, !dbg !7629
  br i1 %cmp3, label %if.then4, label %if.end15, !dbg !7630

if.then4:                                         ; preds = %if.end
  %6 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7631
  %call5 = call zeroext i1 @_ZNK10cComponent11initializedEv(%class.cComponent* %6), !dbg !7631
  br i1 %call5, label %if.then6, label %if.end10, !dbg !7634

if.then6:                                         ; preds = %if.then4
  %exception7 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7635
  %7 = bitcast i8* %exception7 to %class.cRuntimeError*, !dbg !7635
  %8 = bitcast %class.cModule* %this1 to %class.cObject*, !dbg !7636
  invoke void (%class.cRuntimeError*, %class.cObject*, i8*, ...) @_ZN13cRuntimeErrorC1EPK7cObjectPKcz(%class.cRuntimeError* %7, %class.cObject* %8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45, i64 0, i64 0))
          to label %invoke.cont9 unwind label %lpad8, !dbg !7637

invoke.cont9:                                     ; preds = %if.then6
  call void @__cxa_throw(i8* %exception7, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16, !dbg !7635
  unreachable, !dbg !7635

lpad8:                                            ; preds = %if.then6
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !7638
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !7638
  store i8* %10, i8** %exn.slot, align 8, !dbg !7638
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !7638
  store i32 %11, i32* %ehselector.slot, align 4, !dbg !7638
  call void @__cxa_free_exception(i8* %exception7) #3, !dbg !7635
  br label %eh.resume, !dbg !7635

if.end10:                                         ; preds = %if.then4
  %call11 = call zeroext i1 @_ZNK7cModule17buildInsideCalledEv(%class.cModule* %this1), !dbg !7639
  br i1 %call11, label %if.end14, label %if.then12, !dbg !7641

if.then12:                                        ; preds = %if.end10
  %12 = bitcast %class.cModule* %this1 to i32 (%class.cModule*)***, !dbg !7642
  %vtable = load i32 (%class.cModule*)**, i32 (%class.cModule*)*** %12, align 8, !dbg !7642
  %vfn = getelementptr inbounds i32 (%class.cModule*)*, i32 (%class.cModule*)** %vtable, i64 56, !dbg !7642
  %13 = load i32 (%class.cModule*)*, i32 (%class.cModule*)** %vfn, align 8, !dbg !7642
  %call13 = call i32 %13(%class.cModule* %this1), !dbg !7642
  br label %if.end14, !dbg !7642

if.end14:                                         ; preds = %if.then12, %if.end10
  br label %if.end15, !dbg !7643

if.end15:                                         ; preds = %if.end14, %if.end
  call void @llvm.dbg.declare(metadata i32* %numStages, metadata !7644, metadata !DIExpression()), !dbg !7645
  %14 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7646
  %15 = bitcast %class.cComponent* %14 to i32 (%class.cComponent*)***, !dbg !7646
  %vtable16 = load i32 (%class.cComponent*)**, i32 (%class.cComponent*)*** %15, align 8, !dbg !7646
  %vfn17 = getelementptr inbounds i32 (%class.cComponent*)*, i32 (%class.cComponent*)** %vtable16, i64 29, !dbg !7646
  %16 = load i32 (%class.cComponent*)*, i32 (%class.cComponent*)** %vfn17, align 8, !dbg !7646
  %call18 = call i32 %16(%class.cComponent* %14), !dbg !7646
  store i32 %call18, i32* %numStages, align 4, !dbg !7645
  %17 = load i32, i32* %stage.addr, align 4, !dbg !7647
  %18 = load i32, i32* %numStages, align 4, !dbg !7649
  %cmp19 = icmp slt i32 %17, %18, !dbg !7650
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !7651

if.then20:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %class.cMethodCallContextSwitcher* %__ctx, metadata !7652, metadata !DIExpression()), !dbg !7667
  %19 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7667
  call void @_ZN26cMethodCallContextSwitcherC1EPK10cComponentb(%class.cMethodCallContextSwitcher* %__ctx, %class.cComponent* %19, i1 zeroext false), !dbg !7667
  invoke void (%class.cMethodCallContextSwitcher*, i8*, ...) @_ZN26cMethodCallContextSwitcher10methodCallEPKcz(%class.cMethodCallContextSwitcher* %__ctx, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0))
          to label %invoke.cont22 unwind label %lpad21, !dbg !7667

invoke.cont22:                                    ; preds = %if.then20
  %20 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7668
  %21 = load i32, i32* %stage.addr, align 4, !dbg !7670
  %22 = bitcast %class.cComponent* %20 to void (%class.cComponent*, i32)***, !dbg !7668
  %vtable23 = load void (%class.cComponent*, i32)**, void (%class.cComponent*, i32)*** %22, align 8, !dbg !7668
  %vfn24 = getelementptr inbounds void (%class.cComponent*, i32)*, void (%class.cComponent*, i32)** %vtable23, i64 28, !dbg !7668
  %23 = load void (%class.cComponent*, i32)*, void (%class.cComponent*, i32)** %vfn24, align 8, !dbg !7668
  invoke void %23(%class.cComponent* %20, i32 %21)
          to label %invoke.cont26 unwind label %lpad25, !dbg !7668

invoke.cont26:                                    ; preds = %invoke.cont22
  br label %try.cont, !dbg !7671

lpad21:                                           ; preds = %try.cont, %if.then20
  %24 = landingpad { i8*, i32 }
          cleanup, !dbg !7672
  %25 = extractvalue { i8*, i32 } %24, 0, !dbg !7672
  store i8* %25, i8** %exn.slot, align 8, !dbg !7672
  %26 = extractvalue { i8*, i32 } %24, 1, !dbg !7672
  store i32 %26, i32* %ehselector.slot, align 4, !dbg !7672
  br label %ehcleanup46, !dbg !7672

lpad25:                                           ; preds = %invoke.cont22
  %27 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cException to i8*)
          catch i8* bitcast (i8** @_ZTISt9exception to i8*), !dbg !7673
  %28 = extractvalue { i8*, i32 } %27, 0, !dbg !7673
  store i8* %28, i8** %exn.slot, align 8, !dbg !7673
  %29 = extractvalue { i8*, i32 } %27, 1, !dbg !7673
  store i32 %29, i32* %ehselector.slot, align 4, !dbg !7673
  br label %catch.dispatch, !dbg !7673

catch.dispatch:                                   ; preds = %lpad25
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7671
  %30 = call i32 @llvm.eh.typeid.for(i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cException to i8*)) #3, !dbg !7671
  %matches = icmp eq i32 %sel, %30, !dbg !7671
  br i1 %matches, label %catch39, label %catch.fallthrough, !dbg !7671

catch39:                                          ; preds = %catch.dispatch
  call void @llvm.dbg.declare(metadata %class.cException** %0, metadata !7674, metadata !DIExpression()), !dbg !7735
  %exn40 = load i8*, i8** %exn.slot, align 8, !dbg !7736
  %31 = call i8* @__cxa_begin_catch(i8* %exn40) #3, !dbg !7736
  %exn.byref41 = bitcast i8* %31 to %class.cException*, !dbg !7736
  store %class.cException* %exn.byref41, %class.cException** %0, align 8, !dbg !7736
  invoke void @__cxa_rethrow() #16
          to label %unreachable unwind label %lpad42, !dbg !7738

catch.fallthrough:                                ; preds = %catch.dispatch
  %32 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTISt9exception to i8*)) #3, !dbg !7671
  %matches27 = icmp eq i32 %sel, %32, !dbg !7671
  br i1 %matches27, label %catch, label %ehcleanup46, !dbg !7671

catch:                                            ; preds = %catch.fallthrough
  call void @llvm.dbg.declare(metadata %"class.std::exception"** %e, metadata !7740, metadata !DIExpression()), !dbg !7742
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7671
  %33 = call i8* @__cxa_begin_catch(i8* %exn) #3, !dbg !7671
  %exn.byref = bitcast i8* %33 to %"class.std::exception"*, !dbg !7671
  store %"class.std::exception"* %exn.byref, %"class.std::exception"** %e, align 8, !dbg !7671
  %exception28 = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7743
  %34 = bitcast i8* %exception28 to %class.cRuntimeError*, !dbg !7743
  %35 = load %"class.std::exception"*, %"class.std::exception"** %e, align 8, !dbg !7744
  %36 = bitcast %"class.std::exception"* %35 to %"class.std::type_info"***, !dbg !7745
  %vtable29 = load %"class.std::type_info"**, %"class.std::type_info"*** %36, align 8, !dbg !7745
  %37 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %vtable29, i64 -1, !dbg !7745
  %38 = load %"class.std::type_info"*, %"class.std::type_info"** %37, align 8, !dbg !7745
  %call32 = invoke i8* @_Z12opp_typenameRKSt9type_info(%"class.std::type_info"* dereferenceable(16) %38)
          to label %invoke.cont31 unwind label %lpad30, !dbg !7746

invoke.cont31:                                    ; preds = %catch
  %39 = load %"class.std::exception"*, %"class.std::exception"** %e, align 8, !dbg !7747
  %40 = bitcast %"class.std::exception"* %39 to i8* (%"class.std::exception"*)***, !dbg !7748
  %vtable33 = load i8* (%"class.std::exception"*)**, i8* (%"class.std::exception"*)*** %40, align 8, !dbg !7748
  %vfn34 = getelementptr inbounds i8* (%"class.std::exception"*)*, i8* (%"class.std::exception"*)** %vtable33, i64 2, !dbg !7748
  %41 = load i8* (%"class.std::exception"*)*, i8* (%"class.std::exception"*)** %vfn34, align 8, !dbg !7748
  %call35 = call i8* %41(%"class.std::exception"* %39) #3, !dbg !7748
  invoke void (%class.cRuntimeError*, i8*, ...) @_ZN13cRuntimeErrorC1EPKcz(%class.cRuntimeError* %34, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i8* %call32, i8* %call35)
          to label %invoke.cont36 unwind label %lpad30, !dbg !7749

invoke.cont36:                                    ; preds = %invoke.cont31
  invoke void @__cxa_throw(i8* %exception28, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad37, !dbg !7743

lpad30:                                           ; preds = %invoke.cont31, %catch
  %42 = landingpad { i8*, i32 }
          cleanup, !dbg !7750
  %43 = extractvalue { i8*, i32 } %42, 0, !dbg !7750
  store i8* %43, i8** %exn.slot, align 8, !dbg !7750
  %44 = extractvalue { i8*, i32 } %42, 1, !dbg !7750
  store i32 %44, i32* %ehselector.slot, align 4, !dbg !7750
  call void @__cxa_free_exception(i8* %exception28) #3, !dbg !7743
  br label %ehcleanup, !dbg !7743

lpad37:                                           ; preds = %invoke.cont36
  %45 = landingpad { i8*, i32 }
          cleanup, !dbg !7750
  %46 = extractvalue { i8*, i32 } %45, 0, !dbg !7750
  store i8* %46, i8** %exn.slot, align 8, !dbg !7750
  %47 = extractvalue { i8*, i32 } %45, 1, !dbg !7750
  store i32 %47, i32* %ehselector.slot, align 4, !dbg !7750
  br label %ehcleanup, !dbg !7750

ehcleanup:                                        ; preds = %lpad37, %lpad30
  invoke void @__cxa_end_catch()
          to label %invoke.cont38 unwind label %terminate.lpad, !dbg !7736

invoke.cont38:                                    ; preds = %ehcleanup
  br label %ehcleanup46, !dbg !7736

lpad42:                                           ; preds = %catch39
  %48 = landingpad { i8*, i32 }
          cleanup, !dbg !7751
  %49 = extractvalue { i8*, i32 } %48, 0, !dbg !7751
  store i8* %49, i8** %exn.slot, align 8, !dbg !7751
  %50 = extractvalue { i8*, i32 } %48, 1, !dbg !7751
  store i32 %50, i32* %ehselector.slot, align 4, !dbg !7751
  invoke void @__cxa_end_catch()
          to label %invoke.cont44 unwind label %terminate.lpad, !dbg !7752

invoke.cont44:                                    ; preds = %lpad42
  br label %ehcleanup46, !dbg !7752

try.cont:                                         ; preds = %invoke.cont26
  %51 = bitcast %class.cModule* %this1 to %class.cNamedObject*, !dbg !7753
  invoke void @_ZN12cNamedObject7setFlagEib(%class.cNamedObject* %51, i32 8, i1 zeroext true)
          to label %invoke.cont45 unwind label %lpad21, !dbg !7753

invoke.cont45:                                    ; preds = %try.cont
  call void @_ZN26cMethodCallContextSwitcherD1Ev(%class.cMethodCallContextSwitcher* %__ctx) #3, !dbg !7754
  br label %if.end47, !dbg !7755

ehcleanup46:                                      ; preds = %invoke.cont44, %invoke.cont38, %catch.fallthrough, %lpad21
  call void @_ZN26cMethodCallContextSwitcherD1Ev(%class.cMethodCallContextSwitcher* %__ctx) #3, !dbg !7754
  br label %eh.resume, !dbg !7754

if.end47:                                         ; preds = %invoke.cont45, %if.end15
  call void @llvm.dbg.declare(metadata i8* %moreStages, metadata !7756, metadata !DIExpression()), !dbg !7757
  %52 = load i32, i32* %stage.addr, align 4, !dbg !7758
  %53 = load i32, i32* %numStages, align 4, !dbg !7759
  %sub = sub nsw i32 %53, 1, !dbg !7760
  %cmp48 = icmp slt i32 %52, %sub, !dbg !7761
  %frombool = zext i1 %cmp48 to i8, !dbg !7757
  store i8 %frombool, i8* %moreStages, align 1, !dbg !7757
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %submod, metadata !7762, metadata !DIExpression()), !dbg !7764
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %submod, %class.cModule* %this1), !dbg !7764
  br label %for.cond, !dbg !7765

for.cond:                                         ; preds = %for.inc, %if.end47
  %call49 = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !7766
  %lnot = xor i1 %call49, true, !dbg !7768
  br i1 %lnot, label %for.body, label %for.end, !dbg !7769

for.body:                                         ; preds = %for.cond
  %call50 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !7770
  %54 = load i32, i32* %stage.addr, align 4, !dbg !7772
  %55 = bitcast %class.cModule* %call50 to i1 (%class.cModule*, i32)***, !dbg !7773
  %vtable51 = load i1 (%class.cModule*, i32)**, i1 (%class.cModule*, i32)*** %55, align 8, !dbg !7773
  %vfn52 = getelementptr inbounds i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vtable51, i64 45, !dbg !7773
  %56 = load i1 (%class.cModule*, i32)*, i1 (%class.cModule*, i32)** %vfn52, align 8, !dbg !7773
  %call53 = call zeroext i1 %56(%class.cModule* %call50, i32 %54), !dbg !7773
  br i1 %call53, label %if.then54, label %if.end55, !dbg !7774

if.then54:                                        ; preds = %for.body
  store i8 1, i8* %moreStages, align 1, !dbg !7775
  br label %if.end55, !dbg !7776

if.end55:                                         ; preds = %if.then54, %for.body
  br label %for.inc, !dbg !7777

for.inc:                                          ; preds = %if.end55
  %call56 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %submod, i32 0), !dbg !7778
  br label %for.cond, !dbg !7779, !llvm.loop !7780

for.end:                                          ; preds = %for.cond
  %57 = load i8, i8* %moreStages, align 1, !dbg !7782
  %tobool = trunc i8 %57 to i1, !dbg !7782
  ret i1 %tobool, !dbg !7783

eh.resume:                                        ; preds = %ehcleanup46, %lpad8, %lpad
  %exn57 = load i8*, i8** %exn.slot, align 8, !dbg !7624
  %sel58 = load i32, i32* %ehselector.slot, align 4, !dbg !7624
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn57, 0, !dbg !7624
  %lpad.val59 = insertvalue { i8*, i32 } %lpad.val, i32 %sel58, 1, !dbg !7624
  resume { i8*, i32 } %lpad.val59, !dbg !7624

terminate.lpad:                                   ; preds = %lpad42, %ehcleanup
  %58 = landingpad { i8*, i32 }
          catch i8* null, !dbg !7736
  %59 = extractvalue { i8*, i32 } %58, 0, !dbg !7736
  call void @__clang_call_terminate(i8* %59) #18, !dbg !7736
  unreachable, !dbg !7736

unreachable:                                      ; preds = %catch39, %invoke.cont36
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK10cComponent11initializedEv(%class.cComponent* %this) #5 comdat align 2 !dbg !7784 {
entry:
  %this.addr = alloca %class.cComponent*, align 8
  store %class.cComponent* %this, %class.cComponent** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cComponent** %this.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  %this1 = load %class.cComponent*, %class.cComponent** %this.addr, align 8
  %0 = bitcast %class.cComponent* %this1 to %class.cNamedObject*, !dbg !7788
  %flags = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %0, i32 0, i32 2, !dbg !7788
  %1 = load i16, i16* %flags, align 8, !dbg !7788
  %conv = zext i16 %1 to i32, !dbg !7788
  %and = and i32 %conv, 8, !dbg !7789
  %tobool = icmp ne i32 %and, 0, !dbg !7788
  ret i1 %tobool, !dbg !7790
}

declare dso_local void @_ZN26cMethodCallContextSwitcherC1EPK10cComponentb(%class.cMethodCallContextSwitcher*, %class.cComponent*, i1 zeroext) unnamed_addr #1

declare dso_local void @_ZN26cMethodCallContextSwitcher10methodCallEPKcz(%class.cMethodCallContextSwitcher*, i8*, ...) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #13

declare dso_local i8* @_Z12opp_typenameRKSt9type_info(%"class.std::type_info"* dereferenceable(16)) #1

declare dso_local void @__cxa_end_catch()

declare dso_local void @__cxa_rethrow()

; Function Attrs: nounwind
declare dso_local void @_ZN26cMethodCallContextSwitcherD1Ev(%class.cMethodCallContextSwitcher*) unnamed_addr #2

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule10callFinishEv(%class.cModule* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !7791 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  %chan = alloca %"class.cModule::ChannelIterator", align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %submod = alloca %"class.cModule::SubmoduleIterator", align 8
  %tmp = alloca %class.cContextSwitcher, align 8
  %tmp2 = alloca %class.cContextTypeSwitcher, align 4
  %e = alloca %"class.std::exception"*, align 8
  %0 = alloca %class.cException*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !7792, metadata !DIExpression()), !dbg !7793
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"* %chan, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @_ZN7cModule15ChannelIteratorC2EPKS_(%"class.cModule::ChannelIterator"* %chan, %class.cModule* %this1), !dbg !7796
  br label %for.cond, !dbg !7797

for.cond:                                         ; preds = %invoke.cont5, %entry
  %call = invoke zeroext i1 @_ZNK7cModule15ChannelIterator3endEv(%"class.cModule::ChannelIterator"* %chan)
          to label %invoke.cont unwind label %lpad, !dbg !7798

invoke.cont:                                      ; preds = %for.cond
  %lnot = xor i1 %call, true, !dbg !7800
  br i1 %lnot, label %for.body, label %for.cond.cleanup, !dbg !7801

for.cond.cleanup:                                 ; preds = %invoke.cont
  call void @_ZN7cModule15ChannelIteratorD2Ev(%"class.cModule::ChannelIterator"* %chan) #3, !dbg !7802
  br label %for.end

lpad:                                             ; preds = %for.inc, %invoke.cont2, %for.body, %for.cond
  %1 = landingpad { i8*, i32 }
          cleanup, !dbg !7803
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !7803
  store i8* %2, i8** %exn.slot, align 8, !dbg !7803
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !7803
  store i32 %3, i32* %ehselector.slot, align 4, !dbg !7803
  call void @_ZN7cModule15ChannelIteratorD2Ev(%"class.cModule::ChannelIterator"* %chan) #3, !dbg !7802
  br label %eh.resume, !dbg !7802

for.body:                                         ; preds = %invoke.cont
  %call3 = invoke %class.cChannel* @_ZN7cModule15ChannelIteratorclEv(%"class.cModule::ChannelIterator"* %chan)
          to label %invoke.cont2 unwind label %lpad, !dbg !7804

invoke.cont2:                                     ; preds = %for.body
  %4 = bitcast %class.cChannel* %call3 to void (%class.cChannel*)***, !dbg !7805
  %vtable = load void (%class.cChannel*)**, void (%class.cChannel*)*** %4, align 8, !dbg !7805
  %vfn = getelementptr inbounds void (%class.cChannel*)*, void (%class.cChannel*)** %vtable, i64 40, !dbg !7805
  %5 = load void (%class.cChannel*)*, void (%class.cChannel*)** %vfn, align 8, !dbg !7805
  invoke void %5(%class.cChannel* %call3)
          to label %invoke.cont4 unwind label %lpad, !dbg !7805

invoke.cont4:                                     ; preds = %invoke.cont2
  br label %for.inc, !dbg !7804

for.inc:                                          ; preds = %invoke.cont4
  %call6 = invoke %class.cChannel* @_ZN7cModule15ChannelIteratorppEi(%"class.cModule::ChannelIterator"* %chan, i32 0)
          to label %invoke.cont5 unwind label %lpad, !dbg !7806

invoke.cont5:                                     ; preds = %for.inc
  br label %for.cond, !dbg !7802, !llvm.loop !7807

for.end:                                          ; preds = %for.cond.cleanup
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %submod, metadata !7809, metadata !DIExpression()), !dbg !7811
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %submod, %class.cModule* %this1), !dbg !7811
  br label %for.cond7, !dbg !7812

for.cond7:                                        ; preds = %for.inc14, %for.end
  %call8 = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !7813
  %lnot9 = xor i1 %call8, true, !dbg !7815
  br i1 %lnot9, label %for.body10, label %for.end16, !dbg !7816

for.body10:                                       ; preds = %for.cond7
  %call11 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %submod), !dbg !7817
  %6 = bitcast %class.cModule* %call11 to void (%class.cModule*)***, !dbg !7818
  %vtable12 = load void (%class.cModule*)**, void (%class.cModule*)*** %6, align 8, !dbg !7818
  %vfn13 = getelementptr inbounds void (%class.cModule*)*, void (%class.cModule*)** %vtable12, i64 40, !dbg !7818
  %7 = load void (%class.cModule*)*, void (%class.cModule*)** %vfn13, align 8, !dbg !7818
  call void %7(%class.cModule* %call11), !dbg !7818
  br label %for.inc14, !dbg !7817

for.inc14:                                        ; preds = %for.body10
  %call15 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %submod, i32 0), !dbg !7819
  br label %for.cond7, !dbg !7820, !llvm.loop !7821

for.end16:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %class.cContextSwitcher* %tmp, metadata !7823, metadata !DIExpression()), !dbg !7824
  %8 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7825
  call void @_ZN16cContextSwitcherC1EPK10cComponent(%class.cContextSwitcher* %tmp, %class.cComponent* %8), !dbg !7824
  call void @llvm.dbg.declare(metadata %class.cContextTypeSwitcher* %tmp2, metadata !7826, metadata !DIExpression()), !dbg !7827
  invoke void @_ZN20cContextTypeSwitcherC1Ei(%class.cContextTypeSwitcher* %tmp2, i32 3)
          to label %invoke.cont18 unwind label %lpad17, !dbg !7827

invoke.cont18:                                    ; preds = %for.end16
  %9 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7828
  %10 = bitcast %class.cComponent* %9 to void (%class.cComponent*)***, !dbg !7828
  %vtable19 = load void (%class.cComponent*)**, void (%class.cComponent*)*** %10, align 8, !dbg !7828
  %vfn20 = getelementptr inbounds void (%class.cComponent*)*, void (%class.cComponent*)** %vtable19, i64 27, !dbg !7828
  %11 = load void (%class.cComponent*)*, void (%class.cComponent*)** %vfn20, align 8, !dbg !7828
  invoke void %11(%class.cComponent* %9)
          to label %invoke.cont22 unwind label %lpad21, !dbg !7828

invoke.cont22:                                    ; preds = %invoke.cont18
  %12 = bitcast %class.cModule* %this1 to %class.cComponent*, !dbg !7829
  %13 = bitcast %class.cComponent* %12 to void (%class.cComponent*)***, !dbg !7829
  %vtable23 = load void (%class.cComponent*)**, void (%class.cComponent*)*** %13, align 8, !dbg !7829
  %vfn24 = getelementptr inbounds void (%class.cComponent*)*, void (%class.cComponent*)** %vtable23, i64 31, !dbg !7829
  %14 = load void (%class.cComponent*)*, void (%class.cComponent*)** %vfn24, align 8, !dbg !7829
  invoke void %14(%class.cComponent* %12)
          to label %invoke.cont26 unwind label %lpad25, !dbg !7829

invoke.cont26:                                    ; preds = %invoke.cont22
  br label %try.cont, !dbg !7831

lpad17:                                           ; preds = %for.end16
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !7832
  %16 = extractvalue { i8*, i32 } %15, 0, !dbg !7832
  store i8* %16, i8** %exn.slot, align 8, !dbg !7832
  %17 = extractvalue { i8*, i32 } %15, 1, !dbg !7832
  store i32 %17, i32* %ehselector.slot, align 4, !dbg !7832
  br label %ehcleanup45, !dbg !7832

lpad21:                                           ; preds = %invoke.cont18
  %18 = landingpad { i8*, i32 }
          cleanup, !dbg !7832
  %19 = extractvalue { i8*, i32 } %18, 0, !dbg !7832
  store i8* %19, i8** %exn.slot, align 8, !dbg !7832
  %20 = extractvalue { i8*, i32 } %18, 1, !dbg !7832
  store i32 %20, i32* %ehselector.slot, align 4, !dbg !7832
  br label %ehcleanup44, !dbg !7832

lpad25:                                           ; preds = %invoke.cont22
  %21 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cException to i8*)
          catch i8* bitcast (i8** @_ZTISt9exception to i8*), !dbg !7833
  %22 = extractvalue { i8*, i32 } %21, 0, !dbg !7833
  store i8* %22, i8** %exn.slot, align 8, !dbg !7833
  %23 = extractvalue { i8*, i32 } %21, 1, !dbg !7833
  store i32 %23, i32* %ehselector.slot, align 4, !dbg !7833
  br label %catch.dispatch, !dbg !7833

catch.dispatch:                                   ; preds = %lpad25
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !7831
  %24 = call i32 @llvm.eh.typeid.for(i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cException to i8*)) #3, !dbg !7831
  %matches = icmp eq i32 %sel, %24, !dbg !7831
  br i1 %matches, label %catch38, label %catch.fallthrough, !dbg !7831

catch38:                                          ; preds = %catch.dispatch
  call void @llvm.dbg.declare(metadata %class.cException** %0, metadata !7834, metadata !DIExpression()), !dbg !7835
  %exn39 = load i8*, i8** %exn.slot, align 8, !dbg !7836
  %25 = call i8* @__cxa_begin_catch(i8* %exn39) #3, !dbg !7836
  %exn.byref40 = bitcast i8* %25 to %class.cException*, !dbg !7836
  store %class.cException* %exn.byref40, %class.cException** %0, align 8, !dbg !7836
  invoke void @__cxa_rethrow() #16
          to label %unreachable unwind label %lpad41, !dbg !7838

catch.fallthrough:                                ; preds = %catch.dispatch
  %26 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTISt9exception to i8*)) #3, !dbg !7831
  %matches27 = icmp eq i32 %sel, %26, !dbg !7831
  br i1 %matches27, label %catch, label %ehcleanup44, !dbg !7831

catch:                                            ; preds = %catch.fallthrough
  call void @llvm.dbg.declare(metadata %"class.std::exception"** %e, metadata !7840, metadata !DIExpression()), !dbg !7841
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !7831
  %27 = call i8* @__cxa_begin_catch(i8* %exn) #3, !dbg !7831
  %exn.byref = bitcast i8* %27 to %"class.std::exception"*, !dbg !7831
  store %"class.std::exception"* %exn.byref, %"class.std::exception"** %e, align 8, !dbg !7831
  %exception = call i8* @__cxa_allocate_exception(i64 128) #3, !dbg !7842
  %28 = bitcast i8* %exception to %class.cRuntimeError*, !dbg !7842
  %29 = load %"class.std::exception"*, %"class.std::exception"** %e, align 8, !dbg !7843
  %30 = bitcast %"class.std::exception"* %29 to %"class.std::type_info"***, !dbg !7844
  %vtable28 = load %"class.std::type_info"**, %"class.std::type_info"*** %30, align 8, !dbg !7844
  %31 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %vtable28, i64 -1, !dbg !7844
  %32 = load %"class.std::type_info"*, %"class.std::type_info"** %31, align 8, !dbg !7844
  %call31 = invoke i8* @_Z12opp_typenameRKSt9type_info(%"class.std::type_info"* dereferenceable(16) %32)
          to label %invoke.cont30 unwind label %lpad29, !dbg !7845

invoke.cont30:                                    ; preds = %catch
  %33 = load %"class.std::exception"*, %"class.std::exception"** %e, align 8, !dbg !7846
  %34 = bitcast %"class.std::exception"* %33 to i8* (%"class.std::exception"*)***, !dbg !7847
  %vtable32 = load i8* (%"class.std::exception"*)**, i8* (%"class.std::exception"*)*** %34, align 8, !dbg !7847
  %vfn33 = getelementptr inbounds i8* (%"class.std::exception"*)*, i8* (%"class.std::exception"*)** %vtable32, i64 2, !dbg !7847
  %35 = load i8* (%"class.std::exception"*)*, i8* (%"class.std::exception"*)** %vfn33, align 8, !dbg !7847
  %call34 = call i8* %35(%"class.std::exception"* %33) #3, !dbg !7847
  invoke void (%class.cRuntimeError*, i8*, ...) @_ZN13cRuntimeErrorC1EPKcz(%class.cRuntimeError* %28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i8* %call31, i8* %call34)
          to label %invoke.cont35 unwind label %lpad29, !dbg !7848

invoke.cont35:                                    ; preds = %invoke.cont30
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13cRuntimeError to i8*), i8* bitcast (void (%class.cRuntimeError*)* @_ZN13cRuntimeErrorD2Ev to i8*)) #16
          to label %unreachable unwind label %lpad36, !dbg !7842

lpad29:                                           ; preds = %invoke.cont30, %catch
  %36 = landingpad { i8*, i32 }
          cleanup, !dbg !7849
  %37 = extractvalue { i8*, i32 } %36, 0, !dbg !7849
  store i8* %37, i8** %exn.slot, align 8, !dbg !7849
  %38 = extractvalue { i8*, i32 } %36, 1, !dbg !7849
  store i32 %38, i32* %ehselector.slot, align 4, !dbg !7849
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !7842
  br label %ehcleanup, !dbg !7842

lpad36:                                           ; preds = %invoke.cont35
  %39 = landingpad { i8*, i32 }
          cleanup, !dbg !7849
  %40 = extractvalue { i8*, i32 } %39, 0, !dbg !7849
  store i8* %40, i8** %exn.slot, align 8, !dbg !7849
  %41 = extractvalue { i8*, i32 } %39, 1, !dbg !7849
  store i32 %41, i32* %ehselector.slot, align 4, !dbg !7849
  br label %ehcleanup, !dbg !7849

ehcleanup:                                        ; preds = %lpad36, %lpad29
  invoke void @__cxa_end_catch()
          to label %invoke.cont37 unwind label %terminate.lpad, !dbg !7836

invoke.cont37:                                    ; preds = %ehcleanup
  br label %ehcleanup44, !dbg !7836

lpad41:                                           ; preds = %catch38
  %42 = landingpad { i8*, i32 }
          cleanup, !dbg !7850
  %43 = extractvalue { i8*, i32 } %42, 0, !dbg !7850
  store i8* %43, i8** %exn.slot, align 8, !dbg !7850
  %44 = extractvalue { i8*, i32 } %42, 1, !dbg !7850
  store i32 %44, i32* %ehselector.slot, align 4, !dbg !7850
  invoke void @__cxa_end_catch()
          to label %invoke.cont43 unwind label %terminate.lpad, !dbg !7851

invoke.cont43:                                    ; preds = %lpad41
  br label %ehcleanup44, !dbg !7851

try.cont:                                         ; preds = %invoke.cont26
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp2) #3, !dbg !7832
  call void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher* %tmp) #3, !dbg !7832
  ret void, !dbg !7832

ehcleanup44:                                      ; preds = %invoke.cont43, %invoke.cont37, %catch.fallthrough, %lpad21
  call void @_ZN20cContextTypeSwitcherD1Ev(%class.cContextTypeSwitcher* %tmp2) #3, !dbg !7832
  br label %ehcleanup45, !dbg !7832

ehcleanup45:                                      ; preds = %ehcleanup44, %lpad17
  call void @_ZN16cContextSwitcherD1Ev(%class.cContextSwitcher* %tmp) #3, !dbg !7832
  br label %eh.resume, !dbg !7832

eh.resume:                                        ; preds = %ehcleanup45, %lpad
  %exn46 = load i8*, i8** %exn.slot, align 8, !dbg !7802
  %sel47 = load i32, i32* %ehselector.slot, align 4, !dbg !7802
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn46, 0, !dbg !7802
  %lpad.val48 = insertvalue { i8*, i32 } %lpad.val, i32 %sel47, 1, !dbg !7802
  resume { i8*, i32 } %lpad.val48, !dbg !7802

terminate.lpad:                                   ; preds = %lpad41, %ehcleanup
  %45 = landingpad { i8*, i32 }
          catch i8* null, !dbg !7836
  %46 = extractvalue { i8*, i32 } %45, 0, !dbg !7836
  call void @__clang_call_terminate(i8* %46) #18, !dbg !7836
  unreachable, !dbg !7836

unreachable:                                      ; preds = %catch38, %invoke.cont35
  unreachable
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule12GateIterator4initEPKS_(%"class.cModule::GateIterator"* %this, %class.cModule* %module) #0 align 2 !dbg !7852 {
entry:
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %module.addr = alloca %class.cModule*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !7853, metadata !DIExpression()), !dbg !7854
  store %class.cModule* %module, %class.cModule** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %module.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  %0 = load %class.cModule*, %class.cModule** %module.addr, align 8, !dbg !7857
  %module2 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 0, !dbg !7858
  store %class.cModule* %0, %class.cModule** %module2, align 8, !dbg !7859
  %descIndex = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !7860
  store i32 0, i32* %descIndex, align 8, !dbg !7861
  %isOutput = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7862
  store i8 0, i8* %isOutput, align 4, !dbg !7863
  %index = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7864
  store i32 0, i32* %index, align 8, !dbg !7865
  br label %while.cond, !dbg !7866

while.cond:                                       ; preds = %while.body, %entry
  %call = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %this1), !dbg !7867
  br i1 %call, label %land.end, label %land.rhs, !dbg !7868

land.rhs:                                         ; preds = %while.cond
  %call3 = call %class.cGate* @_ZNK7cModule12GateIterator7currentEv(%"class.cModule::GateIterator"* %this1), !dbg !7869
  %cmp = icmp eq %class.cGate* %call3, null, !dbg !7870
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %1 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !7854
  br i1 %1, label %while.body, label %while.end, !dbg !7866

while.body:                                       ; preds = %land.end
  call void @_ZN7cModule12GateIterator7advanceEv(%"class.cModule::GateIterator"* %this1), !dbg !7871
  br label %while.cond, !dbg !7866, !llvm.loop !7872

while.end:                                        ; preds = %land.end
  ret void, !dbg !7874
}

; Function Attrs: noinline uwtable
define dso_local %class.cGate* @_ZNK7cModule12GateIterator7currentEv(%"class.cModule::GateIterator"* %this) #0 align 2 !dbg !7875 {
entry:
  %retval = alloca %class.cGate*, align 8
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  %descIndex = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !7878
  %0 = load i32, i32* %descIndex, align 8, !dbg !7878
  %module = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 0, !dbg !7880
  %1 = load %class.cModule*, %class.cModule** %module, align 8, !dbg !7880
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %1, i32 0, i32 7, !dbg !7881
  %2 = load i32, i32* %descvSize, align 8, !dbg !7881
  %cmp = icmp sge i32 %0, %2, !dbg !7882
  br i1 %cmp, label %if.then, label %if.end, !dbg !7883

if.then:                                          ; preds = %entry
  store %class.cGate* null, %class.cGate** %retval, align 8, !dbg !7884
  br label %return, !dbg !7884

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !7885, metadata !DIExpression()), !dbg !7886
  %module2 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 0, !dbg !7887
  %3 = load %class.cModule*, %class.cModule** %module2, align 8, !dbg !7887
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %3, i32 0, i32 8, !dbg !7888
  %4 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !7888
  %descIndex3 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !7889
  %5 = load i32, i32* %descIndex3, align 8, !dbg !7889
  %idx.ext = sext i32 %5 to i64, !dbg !7890
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %4, i64 %idx.ext, !dbg !7890
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !7886
  %6 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7891
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %6, i32 0, i32 1, !dbg !7893
  %7 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !7893
  %tobool = icmp ne %"struct.cGate::Name"* %7, null, !dbg !7891
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !7894

if.then4:                                         ; preds = %if.end
  store %class.cGate* null, %class.cGate** %retval, align 8, !dbg !7895
  br label %return, !dbg !7895

if.end5:                                          ; preds = %if.end
  %isOutput = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7896
  %8 = load i8, i8* %isOutput, align 4, !dbg !7896
  %tobool6 = trunc i8 %8 to i1, !dbg !7896
  %conv = zext i1 %tobool6 to i32, !dbg !7896
  %cmp7 = icmp eq i32 %conv, 0, !dbg !7898
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !7899

land.lhs.true:                                    ; preds = %if.end5
  %9 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7900
  %call = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %9), !dbg !7901
  %cmp8 = icmp eq i32 %call, 79, !dbg !7902
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7903

if.then9:                                         ; preds = %land.lhs.true
  store %class.cGate* null, %class.cGate** %retval, align 8, !dbg !7904
  br label %return, !dbg !7904

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %10 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7905
  %call11 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %10), !dbg !7907
  br i1 %call11, label %if.else, label %if.then12, !dbg !7908

if.then12:                                        ; preds = %if.end10
  %isOutput13 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7909
  %11 = load i8, i8* %isOutput13, align 4, !dbg !7909
  %tobool14 = trunc i8 %11 to i1, !dbg !7909
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !7909

cond.true:                                        ; preds = %if.then12
  %12 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7910
  %13 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %12, i32 0, i32 4, !dbg !7911
  %outputgate = bitcast %union.anon.9* %13 to %class.cGate**, !dbg !7911
  %14 = load %class.cGate*, %class.cGate** %outputgate, align 8, !dbg !7911
  br label %cond.end, !dbg !7909

cond.false:                                       ; preds = %if.then12
  %15 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7912
  %16 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %15, i32 0, i32 3, !dbg !7913
  %inputgate = bitcast %union.anon.8* %16 to %class.cGate**, !dbg !7913
  %17 = load %class.cGate*, %class.cGate** %inputgate, align 8, !dbg !7913
  br label %cond.end, !dbg !7909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cGate* [ %14, %cond.true ], [ %17, %cond.false ], !dbg !7909
  store %class.cGate* %cond, %class.cGate** %retval, align 8, !dbg !7914
  br label %return, !dbg !7914

if.else:                                          ; preds = %if.end10
  %18 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7915
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %18, i32 0, i32 2, !dbg !7917
  %19 = load i32, i32* %size, align 8, !dbg !7917
  %cmp15 = icmp eq i32 %19, 0, !dbg !7918
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !7919

if.then16:                                        ; preds = %if.else
  store %class.cGate* null, %class.cGate** %retval, align 8, !dbg !7920
  br label %return, !dbg !7920

if.else17:                                        ; preds = %if.else
  %isOutput18 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7921
  %20 = load i8, i8* %isOutput18, align 4, !dbg !7921
  %tobool19 = trunc i8 %20 to i1, !dbg !7921
  br i1 %tobool19, label %cond.true20, label %cond.false21, !dbg !7921

cond.true20:                                      ; preds = %if.else17
  %21 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7922
  %22 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %21, i32 0, i32 4, !dbg !7923
  %outputgatev = bitcast %union.anon.9* %22 to %class.cGate***, !dbg !7923
  %23 = load %class.cGate**, %class.cGate*** %outputgatev, align 8, !dbg !7923
  %index = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7924
  %24 = load i32, i32* %index, align 8, !dbg !7924
  %idxprom = sext i32 %24 to i64, !dbg !7922
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %23, i64 %idxprom, !dbg !7922
  %25 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !7922
  br label %cond.end25, !dbg !7921

cond.false21:                                     ; preds = %if.else17
  %26 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7925
  %27 = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %26, i32 0, i32 3, !dbg !7926
  %inputgatev = bitcast %union.anon.8* %27 to %class.cGate***, !dbg !7926
  %28 = load %class.cGate**, %class.cGate*** %inputgatev, align 8, !dbg !7926
  %index22 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7927
  %29 = load i32, i32* %index22, align 8, !dbg !7927
  %idxprom23 = sext i32 %29 to i64, !dbg !7925
  %arrayidx24 = getelementptr inbounds %class.cGate*, %class.cGate** %28, i64 %idxprom23, !dbg !7925
  %30 = load %class.cGate*, %class.cGate** %arrayidx24, align 8, !dbg !7925
  br label %cond.end25, !dbg !7921

cond.end25:                                       ; preds = %cond.false21, %cond.true20
  %cond26 = phi %class.cGate* [ %25, %cond.true20 ], [ %30, %cond.false21 ], !dbg !7921
  store %class.cGate* %cond26, %class.cGate** %retval, align 8, !dbg !7928
  br label %return, !dbg !7928

return:                                           ; preds = %cond.end25, %if.then16, %cond.end, %if.then9, %if.then4, %if.then
  %31 = load %class.cGate*, %class.cGate** %retval, align 8, !dbg !7929
  ret %class.cGate* %31, !dbg !7929
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule12GateIterator7advanceEv(%"class.cModule::GateIterator"* %this) #0 align 2 !dbg !7930 {
entry:
  %this.addr = alloca %"class.cModule::GateIterator"*, align 8
  %desc = alloca %"struct.cGate::Desc"*, align 8
  store %"class.cModule::GateIterator"* %this, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"** %this.addr, metadata !7931, metadata !DIExpression()), !dbg !7932
  %this1 = load %"class.cModule::GateIterator"*, %"class.cModule::GateIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %desc, metadata !7933, metadata !DIExpression()), !dbg !7934
  %module = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 0, !dbg !7935
  %0 = load %class.cModule*, %class.cModule** %module, align 8, !dbg !7935
  %descv = getelementptr inbounds %class.cModule, %class.cModule* %0, i32 0, i32 8, !dbg !7936
  %1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %descv, align 8, !dbg !7936
  %descIndex = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !7937
  %2 = load i32, i32* %descIndex, align 8, !dbg !7937
  %idx.ext = sext i32 %2 to i64, !dbg !7938
  %add.ptr = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %1, i64 %idx.ext, !dbg !7938
  store %"struct.cGate::Desc"* %add.ptr, %"struct.cGate::Desc"** %desc, align 8, !dbg !7934
  %3 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7939
  %namep = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %3, i32 0, i32 1, !dbg !7941
  %4 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %namep, align 8, !dbg !7941
  %tobool = icmp ne %"struct.cGate::Name"* %4, null, !dbg !7939
  br i1 %tobool, label %if.then, label %if.end24, !dbg !7942

if.then:                                          ; preds = %entry
  %isOutput = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7943
  %5 = load i8, i8* %isOutput, align 4, !dbg !7943
  %tobool2 = trunc i8 %5 to i1, !dbg !7943
  %conv = zext i1 %tobool2 to i32, !dbg !7943
  %cmp = icmp eq i32 %conv, 0, !dbg !7946
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7947

land.lhs.true:                                    ; preds = %if.then
  %6 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7948
  %call = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %6), !dbg !7949
  %cmp3 = icmp eq i32 %call, 79, !dbg !7950
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7951

if.then4:                                         ; preds = %land.lhs.true
  %isOutput5 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7952
  store i8 1, i8* %isOutput5, align 4, !dbg !7954
  br label %if.end33, !dbg !7955

if.end:                                           ; preds = %land.lhs.true, %if.then
  %7 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7956
  %call6 = call zeroext i1 @_ZNK5cGate4Desc8isVectorEv(%"struct.cGate::Desc"* %7), !dbg !7958
  br i1 %call6, label %if.then7, label %if.end13, !dbg !7959

if.then7:                                         ; preds = %if.end
  %index = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7960
  %8 = load i32, i32* %index, align 8, !dbg !7960
  %9 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7963
  %size = getelementptr inbounds %"struct.cGate::Desc", %"struct.cGate::Desc"* %9, i32 0, i32 2, !dbg !7964
  %10 = load i32, i32* %size, align 8, !dbg !7964
  %sub = sub nsw i32 %10, 1, !dbg !7965
  %cmp8 = icmp slt i32 %8, %sub, !dbg !7966
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !7967

if.then9:                                         ; preds = %if.then7
  %index10 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7968
  %11 = load i32, i32* %index10, align 8, !dbg !7970
  %inc = add nsw i32 %11, 1, !dbg !7970
  store i32 %inc, i32* %index10, align 8, !dbg !7970
  br label %if.end33, !dbg !7971

if.end11:                                         ; preds = %if.then7
  %index12 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7972
  store i32 0, i32* %index12, align 8, !dbg !7973
  br label %if.end13, !dbg !7974

if.end13:                                         ; preds = %if.end11, %if.end
  %isOutput14 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7975
  %12 = load i8, i8* %isOutput14, align 4, !dbg !7975
  %tobool15 = trunc i8 %12 to i1, !dbg !7975
  %conv16 = zext i1 %tobool15 to i32, !dbg !7975
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !7977
  br i1 %cmp17, label %land.lhs.true18, label %if.end23, !dbg !7978

land.lhs.true18:                                  ; preds = %if.end13
  %13 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !7979
  %call19 = call i32 @_ZNK5cGate4Desc7getTypeEv(%"struct.cGate::Desc"* %13), !dbg !7980
  %cmp20 = icmp ne i32 %call19, 73, !dbg !7981
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !7982

if.then21:                                        ; preds = %land.lhs.true18
  %isOutput22 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7983
  store i8 1, i8* %isOutput22, align 4, !dbg !7985
  br label %if.end33, !dbg !7986

if.end23:                                         ; preds = %land.lhs.true18, %if.end13
  br label %if.end24, !dbg !7987

if.end24:                                         ; preds = %if.end23, %entry
  %descIndex25 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !7988
  %14 = load i32, i32* %descIndex25, align 8, !dbg !7988
  %module26 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 0, !dbg !7990
  %15 = load %class.cModule*, %class.cModule** %module26, align 8, !dbg !7990
  %descvSize = getelementptr inbounds %class.cModule, %class.cModule* %15, i32 0, i32 7, !dbg !7991
  %16 = load i32, i32* %descvSize, align 8, !dbg !7991
  %cmp27 = icmp slt i32 %14, %16, !dbg !7992
  br i1 %cmp27, label %if.then28, label %if.end33, !dbg !7993

if.then28:                                        ; preds = %if.end24
  %descIndex29 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 1, !dbg !7994
  %17 = load i32, i32* %descIndex29, align 8, !dbg !7996
  %inc30 = add nsw i32 %17, 1, !dbg !7996
  store i32 %inc30, i32* %descIndex29, align 8, !dbg !7996
  %isOutput31 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 2, !dbg !7997
  store i8 0, i8* %isOutput31, align 4, !dbg !7998
  %index32 = getelementptr inbounds %"class.cModule::GateIterator", %"class.cModule::GateIterator"* %this1, i32 0, i32 4, !dbg !7999
  store i32 0, i32* %index32, align 8, !dbg !8000
  br label %if.end33, !dbg !8001

if.end33:                                         ; preds = %if.then4, %if.then9, %if.then21, %if.then28, %if.end24
  ret void, !dbg !8002
}

; Function Attrs: noinline uwtable
define dso_local void @_ZN7cModule15ChannelIterator4initEPKS_(%"class.cModule::ChannelIterator"* %this, %class.cModule* %parentmodule) #0 align 2 !dbg !8003 {
entry:
  %this.addr = alloca %"class.cModule::ChannelIterator"*, align 8
  %parentmodule.addr = alloca %class.cModule*, align 8
  %parent = alloca i8, align 1
  %it = alloca %"class.cModule::SubmoduleIterator", align 8
  %mod = alloca %class.cModule*, align 8
  %i = alloca %"class.cModule::GateIterator", align 8
  %gate = alloca %class.cGate*, align 8
  %wantedGateType = alloca i32, align 4
  %ref.tmp = alloca %class.cChannel*, align 8
  store %"class.cModule::ChannelIterator"* %this, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::ChannelIterator"** %this.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store %class.cModule* %parentmodule, %class.cModule** %parentmodule.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %parentmodule.addr, metadata !8006, metadata !DIExpression()), !dbg !8007
  %this1 = load %"class.cModule::ChannelIterator"*, %"class.cModule::ChannelIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %parent, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i8 0, i8* %parent, align 1, !dbg !8009
  %channels = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !8010
  call void @_ZNSt6vectorIP8cChannelSaIS1_EE5clearEv(%"class.std::vector.31"* %channels) #3, !dbg !8011
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"* %it, metadata !8012, metadata !DIExpression()), !dbg !8014
  %0 = load %class.cModule*, %class.cModule** %parentmodule.addr, align 8, !dbg !8015
  call void @_ZN7cModule17SubmoduleIteratorC2EPKS_(%"class.cModule::SubmoduleIterator"* %it, %class.cModule* %0), !dbg !8014
  br label %for.cond, !dbg !8016

for.cond:                                         ; preds = %for.inc18, %entry
  %1 = load i8, i8* %parent, align 1, !dbg !8017
  %tobool = trunc i8 %1 to i1, !dbg !8017
  %lnot = xor i1 %tobool, true, !dbg !8019
  br i1 %lnot, label %for.body, label %for.end20, !dbg !8020

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %class.cModule** %mod, metadata !8021, metadata !DIExpression()), !dbg !8023
  %call = call zeroext i1 @_ZNK7cModule17SubmoduleIterator3endEv(%"class.cModule::SubmoduleIterator"* %it), !dbg !8024
  br i1 %call, label %cond.false, label %cond.true, !dbg !8025

cond.true:                                        ; preds = %for.body
  %call2 = call %class.cModule* @_ZNK7cModule17SubmoduleIteratorclEv(%"class.cModule::SubmoduleIterator"* %it), !dbg !8026
  br label %cond.end, !dbg !8025

cond.false:                                       ; preds = %for.body
  store i8 1, i8* %parent, align 1, !dbg !8027
  %2 = load %class.cModule*, %class.cModule** %parentmodule.addr, align 8, !dbg !8028
  br label %cond.end, !dbg !8025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cModule* [ %call2, %cond.true ], [ %2, %cond.false ], !dbg !8025
  store %class.cModule* %cond, %class.cModule** %mod, align 8, !dbg !8023
  call void @llvm.dbg.declare(metadata %"class.cModule::GateIterator"* %i, metadata !8029, metadata !DIExpression()), !dbg !8031
  %3 = load %class.cModule*, %class.cModule** %mod, align 8, !dbg !8032
  call void @_ZN7cModule12GateIteratorC2EPKS_(%"class.cModule::GateIterator"* %i, %class.cModule* %3), !dbg !8031
  br label %for.cond3, !dbg !8033

for.cond3:                                        ; preds = %for.inc, %cond.end
  %call4 = call zeroext i1 @_ZNK7cModule12GateIterator3endEv(%"class.cModule::GateIterator"* %i), !dbg !8034
  %lnot5 = xor i1 %call4, true, !dbg !8036
  br i1 %lnot5, label %for.body6, label %for.end, !dbg !8037

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %class.cGate** %gate, metadata !8038, metadata !DIExpression()), !dbg !8040
  %call7 = call %class.cGate* @_ZNK7cModule12GateIteratorclEv(%"class.cModule::GateIterator"* %i), !dbg !8041
  store %class.cGate* %call7, %class.cGate** %gate, align 8, !dbg !8040
  call void @llvm.dbg.declare(metadata i32* %wantedGateType, metadata !8042, metadata !DIExpression()), !dbg !8043
  %4 = load i8, i8* %parent, align 1, !dbg !8044
  %tobool8 = trunc i8 %4 to i1, !dbg !8044
  %5 = zext i1 %tobool8 to i64, !dbg !8044
  %cond9 = select i1 %tobool8, i32 73, i32 79, !dbg !8044
  store i32 %cond9, i32* %wantedGateType, align 4, !dbg !8043
  %6 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !8045
  %tobool10 = icmp ne %class.cGate* %6, null, !dbg !8045
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !8047

land.lhs.true:                                    ; preds = %for.body6
  %7 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !8048
  %call11 = call %class.cChannel* @_ZNK5cGate10getChannelEv(%class.cGate* %7), !dbg !8049
  %tobool12 = icmp ne %class.cChannel* %call11, null, !dbg !8048
  br i1 %tobool12, label %land.lhs.true13, label %if.end, !dbg !8050

land.lhs.true13:                                  ; preds = %land.lhs.true
  %8 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !8051
  %call14 = call i32 @_ZNK5cGate7getTypeEv(%class.cGate* %8), !dbg !8052
  %9 = load i32, i32* %wantedGateType, align 4, !dbg !8053
  %cmp = icmp eq i32 %call14, %9, !dbg !8054
  br i1 %cmp, label %if.then, label %if.end, !dbg !8055

if.then:                                          ; preds = %land.lhs.true13
  %channels15 = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 0, !dbg !8056
  %10 = load %class.cGate*, %class.cGate** %gate, align 8, !dbg !8057
  %call16 = call %class.cChannel* @_ZNK5cGate10getChannelEv(%class.cGate* %10), !dbg !8058
  store %class.cChannel* %call16, %class.cChannel** %ref.tmp, align 8, !dbg !8057
  call void @_ZNSt6vectorIP8cChannelSaIS1_EE9push_backEOS1_(%"class.std::vector.31"* %channels15, %class.cChannel** dereferenceable(8) %ref.tmp), !dbg !8059
  br label %if.end, !dbg !8056

if.end:                                           ; preds = %if.then, %land.lhs.true13, %land.lhs.true, %for.body6
  br label %for.inc, !dbg !8060

for.inc:                                          ; preds = %if.end
  %call17 = call %class.cGate* @_ZN7cModule12GateIteratorppEi(%"class.cModule::GateIterator"* %i, i32 0), !dbg !8061
  br label %for.cond3, !dbg !8062, !llvm.loop !8063

for.end:                                          ; preds = %for.cond3
  br label %for.inc18, !dbg !8065

for.inc18:                                        ; preds = %for.end
  %call19 = call %class.cModule* @_ZN7cModule17SubmoduleIteratorppEi(%"class.cModule::SubmoduleIterator"* %it, i32 0), !dbg !8066
  br label %for.cond, !dbg !8067, !llvm.loop !8068

for.end20:                                        ; preds = %for.cond
  %k = getelementptr inbounds %"class.cModule::ChannelIterator", %"class.cModule::ChannelIterator"* %this1, i32 0, i32 1, !dbg !8070
  store i32 0, i32* %k, align 8, !dbg !8071
  ret void, !dbg !8072
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EE5clearEv(%"class.std::vector.31"* %this) #5 comdat align 2 !dbg !8073 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !8074, metadata !DIExpression()), !dbg !8076
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8077
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !8077
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8078
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !8079
  %2 = load %class.cChannel**, %class.cChannel*** %_M_start, align 8, !dbg !8079
  call void @_ZNSt6vectorIP8cChannelSaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.31"* %this1, %class.cChannel** %2) #3, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel* @_ZNK5cGate10getChannelEv(%class.cGate* %this) #5 comdat align 2 !dbg !8082 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !8086, metadata !DIExpression()), !dbg !8087
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %channelp = getelementptr inbounds %class.cGate, %class.cGate* %this1, i32 0, i32 3, !dbg !8088
  %0 = load %class.cChannel*, %class.cChannel** %channelp, align 8, !dbg !8088
  ret %class.cChannel* %0, !dbg !8089
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate7getTypeEv(%class.cGate* %this) #0 comdat align 2 !dbg !8090 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %this1, i32 0, i32 1, !dbg !8096
  %0 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !8096
  %call = call i32 @_ZNK5cGate4Desc9getTypeOfEPKS_(%"struct.cGate::Desc"* %0, %class.cGate* %this1), !dbg !8097
  ret i32 %call, !dbg !8098
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EE9push_backEOS1_(%"class.std::vector.31"* %this, %class.cChannel** dereferenceable(8) %__x) #0 comdat align 2 !dbg !8099 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %__x.addr = alloca %class.cChannel**, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  store %class.cChannel** %__x, %class.cChannel*** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__x.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = load %class.cChannel**, %class.cChannel*** %__x.addr, align 8, !dbg !8104
  %call = call dereferenceable(8) %class.cChannel** @_ZSt4moveIRP8cChannelEONSt16remove_referenceIT_E4typeEOS4_(%class.cChannel** dereferenceable(8) %0) #3, !dbg !8105
  call void @_ZNSt6vectorIP8cChannelSaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.31"* %this1, %class.cChannel** dereferenceable(8) %call), !dbg !8106
  ret void, !dbg !8107
}

declare dso_local %class.cClassDescriptor* @_ZN7cObject13getDescriptorEv(%class.cObject*) unnamed_addr #1

declare dso_local void @_ZN12cDefaultList18ownedObjectDeletedEP12cOwnedObject(%class.cDefaultList*, %class.cOwnedObject*) unnamed_addr #1

declare dso_local void @_ZN12cDefaultList14yieldOwnershipEP12cOwnedObjectP7cObject(%class.cDefaultList*, %class.cOwnedObject*, %class.cObject*) unnamed_addr #1

declare dso_local i8* @_ZNK7cObject12getClassNameEv(%class.cObject*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK12cNamedObject7getNameEv(%class.cNamedObject* %this) unnamed_addr #5 comdat align 2 !dbg !8108 {
entry:
  %this.addr = alloca %class.cNamedObject*, align 8
  store %class.cNamedObject* %this, %class.cNamedObject** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cNamedObject** %this.addr, metadata !8114, metadata !DIExpression()), !dbg !8116
  %this1 = load %class.cNamedObject*, %class.cNamedObject** %this.addr, align 8
  %namep = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %this1, i32 0, i32 1, !dbg !8117
  %0 = load i8*, i8** %namep, align 8, !dbg !8117
  %tobool = icmp ne i8* %0, null, !dbg !8117
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8117

cond.true:                                        ; preds = %entry
  %namep2 = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %this1, i32 0, i32 1, !dbg !8118
  %1 = load i8*, i8** %namep2, align 8, !dbg !8118
  br label %cond.end, !dbg !8117

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), %cond.false ], !dbg !8117
  ret i8* %cond, !dbg !8119
}

declare dso_local void @_ZNK12cDefaultList4infoB5cxx11Ev(%"class.std::__cxx11::basic_string"* sret, %class.cDefaultList*) unnamed_addr #1

declare dso_local void @_ZNK7cObject12detailedInfoB5cxx11Ev(%"class.std::__cxx11::basic_string"* sret, %class.cObject*) unnamed_addr #1

declare dso_local %class.cNoncopyableOwnedObject* @_ZNK23cNoncopyableOwnedObject3dupEv(%class.cNoncopyableOwnedObject*) unnamed_addr #1

declare dso_local void @_ZN12cDefaultList4takeEP12cOwnedObject(%class.cDefaultList*, %class.cOwnedObject*) unnamed_addr #1

declare dso_local void @_ZN12cDefaultList4dropEP12cOwnedObject(%class.cDefaultList*, %class.cOwnedObject*) unnamed_addr #1

declare dso_local void @_ZN12cDefaultList10parsimPackEP11cCommBuffer(%class.cDefaultList*, %class.cCommBuffer*) unnamed_addr #1

declare dso_local void @_ZN12cDefaultList12parsimUnpackEP11cCommBuffer(%class.cDefaultList*, %class.cCommBuffer*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cObject* @_ZNK12cOwnedObject8getOwnerEv(%class.cOwnedObject* %this) unnamed_addr #5 comdat align 2 !dbg !8120 {
entry:
  %this.addr = alloca %class.cOwnedObject*, align 8
  store %class.cOwnedObject* %this, %class.cOwnedObject** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cOwnedObject** %this.addr, metadata !8129, metadata !DIExpression()), !dbg !8131
  %this1 = load %class.cOwnedObject*, %class.cOwnedObject** %this.addr, align 8
  %ownerp = getelementptr inbounds %class.cOwnedObject, %class.cOwnedObject* %this1, i32 0, i32 2, !dbg !8132
  %0 = load %class.cObject*, %class.cObject** %ownerp, align 8, !dbg !8132
  ret %class.cObject* %0, !dbg !8133
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK12cOwnedObject13isOwnedObjectEv(%class.cOwnedObject* %this) unnamed_addr #5 comdat align 2 !dbg !8134 {
entry:
  %this.addr = alloca %class.cOwnedObject*, align 8
  store %class.cOwnedObject* %this, %class.cOwnedObject** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cOwnedObject** %this.addr, metadata !8138, metadata !DIExpression()), !dbg !8139
  %this1 = load %class.cOwnedObject*, %class.cOwnedObject** %this.addr, align 8
  ret i1 true, !dbg !8140
}

declare dso_local void @_ZN12cNamedObject14setNamePoolingEb(%class.cNamedObject*, i1 zeroext) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZN12cNamedObject14getNamePoolingEv(%class.cNamedObject* %this) unnamed_addr #5 comdat align 2 !dbg !8141 {
entry:
  %this.addr = alloca %class.cNamedObject*, align 8
  store %class.cNamedObject* %this, %class.cNamedObject** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cNamedObject** %this.addr, metadata !8145, metadata !DIExpression()), !dbg !8146
  %this1 = load %class.cNamedObject*, %class.cNamedObject** %this.addr, align 8
  %flags = getelementptr inbounds %class.cNamedObject, %class.cNamedObject* %this1, i32 0, i32 2, !dbg !8147
  %0 = load i16, i16* %flags, align 8, !dbg !8147
  %conv = zext i16 %0 to i32, !dbg !8147
  %and = and i32 %conv, 1, !dbg !8148
  %tobool = icmp ne i32 %and, 0, !dbg !8147
  ret i1 %tobool, !dbg !8149
}

declare dso_local void @_ZN12cOwnedObject23removeFromOwnershipTreeEv(%class.cOwnedObject*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK12cDefaultList11isSoftOwnerEv(%class.cDefaultList* %this) unnamed_addr #5 comdat align 2 !dbg !8150 {
entry:
  %this.addr = alloca %class.cDefaultList*, align 8
  store %class.cDefaultList* %this, %class.cDefaultList** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cDefaultList** %this.addr, metadata !8156, metadata !DIExpression()), !dbg !8158
  %this1 = load %class.cDefaultList*, %class.cDefaultList** %this.addr, align 8
  ret i1 true, !dbg !8159
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN12cDefaultList17setPerformFinalGCEb(%class.cDefaultList* %this, i1 zeroext %b) unnamed_addr #5 comdat align 2 !dbg !8160 {
entry:
  %this.addr = alloca %class.cDefaultList*, align 8
  %b.addr = alloca i8, align 1
  store %class.cDefaultList* %this, %class.cDefaultList** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cDefaultList** %this.addr, metadata !8165, metadata !DIExpression()), !dbg !8167
  %frombool = zext i1 %b to i8
  store i8 %frombool, i8* %b.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %b.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  %this1 = load %class.cDefaultList*, %class.cDefaultList** %this.addr, align 8
  %0 = bitcast %class.cDefaultList* %this1 to %class.cNamedObject*, !dbg !8170
  %1 = load i8, i8* %b.addr, align 1, !dbg !8171
  %tobool = trunc i8 %1 to i1, !dbg !8171
  call void @_ZN12cNamedObject7setFlagEib(%class.cNamedObject* %0, i32 2, i1 zeroext %tobool), !dbg !8170
  ret void, !dbg !8172
}

declare dso_local void @_ZN10cComponent16setComponentTypeEP14cComponentType(%class.cComponent*, %class.cComponentType*) unnamed_addr #1

declare dso_local void @_ZN10cComponent6addParEP8cParImpl(%class.cComponent*, %class.cParImpl*) unnamed_addr #1

declare dso_local void @_ZN10cComponent25recordParametersAsScalarsEv(%class.cComponent*) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN10cComponent10initializeEi(%class.cComponent* %this, i32 %stage) unnamed_addr #0 comdat align 2 !dbg !8173 {
entry:
  %this.addr = alloca %class.cComponent*, align 8
  %stage.addr = alloca i32, align 4
  store %class.cComponent* %this, %class.cComponent** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cComponent** %this.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store i32 %stage, i32* %stage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stage.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  %this1 = load %class.cComponent*, %class.cComponent** %this.addr, align 8
  %0 = load i32, i32* %stage.addr, align 4, !dbg !8182
  %cmp = icmp eq i32 %0, 0, !dbg !8184
  br i1 %cmp, label %if.then, label %if.end, !dbg !8185

if.then:                                          ; preds = %entry
  %1 = bitcast %class.cComponent* %this1 to void (%class.cComponent*)***, !dbg !8186
  %vtable = load void (%class.cComponent*)**, void (%class.cComponent*)*** %1, align 8, !dbg !8186
  %vfn = getelementptr inbounds void (%class.cComponent*)*, void (%class.cComponent*)** %vtable, i64 30, !dbg !8186
  %2 = load void (%class.cComponent*)*, void (%class.cComponent*)** %vfn, align 8, !dbg !8186
  call void %2(%class.cComponent* %this1), !dbg !8186
  br label %if.end, !dbg !8186

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8187
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK10cComponent13numInitStagesEv(%class.cComponent* %this) unnamed_addr #5 comdat align 2 !dbg !8188 {
entry:
  %this.addr = alloca %class.cComponent*, align 8
  store %class.cComponent* %this, %class.cComponent** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cComponent** %this.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  %this1 = load %class.cComponent*, %class.cComponent** %this.addr, align 8
  ret i32 1, !dbg !8194
}

declare dso_local void @_ZN10cComponent10initializeEv(%class.cComponent*) unnamed_addr #1

declare dso_local void @_ZN10cComponent6finishEv(%class.cComponent*) unnamed_addr #1

declare dso_local void @_ZN10cComponent21handleParameterChangeEPKc(%class.cComponent*, i8*) unnamed_addr #1

declare dso_local i8* @_ZNK10cComponent14getNedTypeNameEv(%class.cComponent*) unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cModule8isModuleEv(%class.cModule* %this) unnamed_addr #5 comdat align 2 !dbg !8195 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  ret i1 true, !dbg !8198
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK10cComponent12getNumParamsEv(%class.cComponent* %this) unnamed_addr #5 comdat align 2 !dbg !8199 {
entry:
  %this.addr = alloca %class.cComponent*, align 8
  store %class.cComponent* %this, %class.cComponent** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cComponent** %this.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  %this1 = load %class.cComponent*, %class.cComponent** %this.addr, align 8
  %numparams = getelementptr inbounds %class.cComponent, %class.cComponent* %this1, i32 0, i32 5, !dbg !8203
  %0 = load i16, i16* %numparams, align 2, !dbg !8203
  %conv = sext i16 %0 to i32, !dbg !8203
  ret i32 %conv, !dbg !8204
}

declare dso_local dereferenceable(24) %class.cPar* @_ZN10cComponent3parEi(%class.cComponent*, i32) unnamed_addr #1

declare dso_local dereferenceable(24) %class.cPar* @_ZN10cComponent3parEPKc(%class.cComponent*, i8*) unnamed_addr #1

declare dso_local i32 @_ZNK10cComponent7findParEPKc(%class.cComponent*, i8*) unnamed_addr #1

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN7cModule13doBuildInsideEv(%class.cModule* %this) unnamed_addr #5 comdat align 2 !dbg !8205 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !8206, metadata !DIExpression()), !dbg !8207
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  ret void, !dbg !8208
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK7cModule13isPlaceholderEv(%class.cModule* %this) unnamed_addr #5 comdat align 2 !dbg !8209 {
entry:
  %this.addr = alloca %class.cModule*, align 8
  store %class.cModule* %this, %class.cModule** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %this.addr, metadata !8210, metadata !DIExpression()), !dbg !8211
  %this1 = load %class.cModule*, %class.cModule** %this.addr, align 8
  ret i1 false, !dbg !8212
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN7cModule17SubmoduleIterator4initEPKS_(%"class.cModule::SubmoduleIterator"* %this, %class.cModule* %m) #5 comdat align 2 !dbg !8213 {
entry:
  %this.addr = alloca %"class.cModule::SubmoduleIterator"*, align 8
  %m.addr = alloca %class.cModule*, align 8
  store %"class.cModule::SubmoduleIterator"* %this, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.cModule::SubmoduleIterator"** %this.addr, metadata !8214, metadata !DIExpression()), !dbg !8215
  store %class.cModule* %m, %class.cModule** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cModule** %m.addr, metadata !8216, metadata !DIExpression()), !dbg !8217
  %this1 = load %"class.cModule::SubmoduleIterator"*, %"class.cModule::SubmoduleIterator"** %this.addr, align 8
  %0 = load %class.cModule*, %class.cModule** %m.addr, align 8, !dbg !8218
  %tobool = icmp ne %class.cModule* %0, null, !dbg !8218
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8218

cond.true:                                        ; preds = %entry
  %1 = load %class.cModule*, %class.cModule** %m.addr, align 8, !dbg !8219
  %firstsubmodp = getelementptr inbounds %class.cModule, %class.cModule* %1, i32 0, i32 5, !dbg !8220
  %2 = load %class.cModule*, %class.cModule** %firstsubmodp, align 8, !dbg !8220
  br label %cond.end, !dbg !8218

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8218

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cModule* [ %2, %cond.true ], [ null, %cond.false ], !dbg !8218
  %p = getelementptr inbounds %"class.cModule::SubmoduleIterator", %"class.cModule::SubmoduleIterator"* %this1, i32 0, i32 0, !dbg !8221
  store %class.cModule* %cond, %class.cModule** %p, align 8, !dbg !8222
  ret void, !dbg !8223
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt9exceptionD2Ev(%"class.std::exception"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN10cExceptionD2Ev(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8224 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8225, metadata !DIExpression()), !dbg !8226
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %0 = bitcast %class.cException* %this1 to i32 (...)***, !dbg !8227
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10cException, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !dbg !8227
  %contextfullpath = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 7, !dbg !8228
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %contextfullpath) #3, !dbg !8228
  %contextclassname = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 6, !dbg !8228
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %contextclassname) #3, !dbg !8228
  %msg = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 3, !dbg !8228
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %msg) #3, !dbg !8228
  %1 = bitcast %class.cException* %this1 to %"class.std::exception"*, !dbg !8228
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* %1) #3, !dbg !8228
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN10cExceptionD0Ev(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8231 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  call void @_ZN10cExceptionD2Ev(%class.cException* %this1) #3, !dbg !8234
  %0 = bitcast %class.cException* %this1 to i8*, !dbg !8234
  call void @_ZdlPv(i8* %0) #17, !dbg !8234
  ret void, !dbg !8235
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK10cException4whatEv(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8236 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8237, metadata !DIExpression()), !dbg !8239
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %msg = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 3, !dbg !8240
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %msg) #3, !dbg !8241
  ret i8* %call, !dbg !8242
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cException* @_ZNK10cException3dupEv(%class.cException* %this) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8243 {
entry:
  %this.addr = alloca %class.cException*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %call = call i8* @_Znwm(i64 128) #19, !dbg !8246
  %0 = bitcast i8* %call to %class.cException*, !dbg !8246
  invoke void @_ZN10cExceptionC1ERKS_(%class.cException* %0, %class.cException* dereferenceable(128) %this1)
          to label %invoke.cont unwind label %lpad, !dbg !8247

invoke.cont:                                      ; preds = %entry
  ret %class.cException* %0, !dbg !8248

lpad:                                             ; preds = %entry
  %1 = landingpad { i8*, i32 }
          cleanup, !dbg !8249
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !8249
  store i8* %2, i8** %exn.slot, align 8, !dbg !8249
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !8249
  store i32 %3, i32* %ehselector.slot, align 4, !dbg !8249
  call void @_ZdlPv(i8* %call) #17, !dbg !8246
  br label %eh.resume, !dbg !8246

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !8246
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !8246
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !8246
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !8246
  resume { i8*, i32 } %lpad.val2, !dbg !8246
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK10cException12getErrorCodeEv(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8250 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8251, metadata !DIExpression()), !dbg !8252
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %errorcode = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 1, !dbg !8253
  %0 = load i32, i32* %errorcode, align 8, !dbg !8253
  ret i32 %0, !dbg !8254
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN10cException10setMessageEPKc(%class.cException* %this, i8* %txt) unnamed_addr #0 comdat align 2 !dbg !8255 {
entry:
  %this.addr = alloca %class.cException*, align 8
  %txt.addr = alloca i8*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8256, metadata !DIExpression()), !dbg !8257
  store i8* %txt, i8** %txt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %txt.addr, metadata !8258, metadata !DIExpression()), !dbg !8259
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %0 = load i8*, i8** %txt.addr, align 8, !dbg !8260
  %msg = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 3, !dbg !8261
  %call = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* %msg, i8* %0), !dbg !8262
  ret void, !dbg !8263
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN10cException14prependMessageEPKc(%class.cException* %this, i8* %txt) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8264 {
entry:
  %this.addr = alloca %class.cException*, align 8
  %txt.addr = alloca i8*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp3 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp4 = alloca %"class.std::allocator", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i8* %txt, i8** %txt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %txt.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %0 = load i8*, i8** %txt.addr, align 8, !dbg !8269
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %ref.tmp4) #3, !dbg !8270
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %ref.tmp3, i8* %0, %"class.std::allocator"* dereferenceable(1) %ref.tmp4)
          to label %invoke.cont unwind label %lpad, !dbg !8270

invoke.cont:                                      ; preds = %entry
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* sret %ref.tmp2, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i64 0, i64 0))
          to label %invoke.cont6 unwind label %lpad5, !dbg !8271

invoke.cont6:                                     ; preds = %invoke.cont
  %msg = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 3, !dbg !8272
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_(%"class.std::__cxx11::basic_string"* sret %ref.tmp, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp2, %"class.std::__cxx11::basic_string"* dereferenceable(32) %msg)
          to label %invoke.cont8 unwind label %lpad7, !dbg !8273

invoke.cont8:                                     ; preds = %invoke.cont6
  %msg9 = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 3, !dbg !8274
  %call = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_(%"class.std::__cxx11::basic_string"* %msg9, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp) #3, !dbg !8275
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp) #3, !dbg !8274
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp2) #3, !dbg !8274
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp3) #3, !dbg !8274
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %ref.tmp4) #3, !dbg !8274
  ret void, !dbg !8276

lpad:                                             ; preds = %entry
  %1 = landingpad { i8*, i32 }
          cleanup, !dbg !8276
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !8276
  store i8* %2, i8** %exn.slot, align 8, !dbg !8276
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !8276
  store i32 %3, i32* %ehselector.slot, align 4, !dbg !8276
  br label %ehcleanup10, !dbg !8276

lpad5:                                            ; preds = %invoke.cont
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !8276
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !8276
  store i8* %5, i8** %exn.slot, align 8, !dbg !8276
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !8276
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !8276
  br label %ehcleanup, !dbg !8276

lpad7:                                            ; preds = %invoke.cont6
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !8276
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !8276
  store i8* %8, i8** %exn.slot, align 8, !dbg !8276
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !8276
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !8276
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp2) #3, !dbg !8274
  br label %ehcleanup, !dbg !8274

ehcleanup:                                        ; preds = %lpad7, %lpad5
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp3) #3, !dbg !8274
  br label %ehcleanup10, !dbg !8274

ehcleanup10:                                      ; preds = %ehcleanup, %lpad
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %ref.tmp4) #3, !dbg !8274
  br label %eh.resume, !dbg !8274

eh.resume:                                        ; preds = %ehcleanup10
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !8274
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !8274
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !8274
  %lpad.val11 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !8274
  resume { i8*, i32 } %lpad.val11, !dbg !8274
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK10cException10hasContextEv(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8277 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %hascontext = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 4, !dbg !8280
  %0 = load i8, i8* %hascontext, align 8, !dbg !8280
  %tobool = trunc i8 %0 to i1, !dbg !8280
  ret i1 %tobool, !dbg !8281
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK10cException19getContextClassNameEv(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8282 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %contextclassname = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 6, !dbg !8285
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %contextclassname) #3, !dbg !8286
  ret i8* %call, !dbg !8287
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK10cException18getContextFullPathEv(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8288 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %contextfullpath = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 7, !dbg !8291
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %contextfullpath) #3, !dbg !8292
  ret i8* %call, !dbg !8293
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK10cException11getModuleIDEv(%class.cException* %this) unnamed_addr #5 comdat align 2 !dbg !8294 {
entry:
  %this.addr = alloca %class.cException*, align 8
  store %class.cException* %this, %class.cException** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cException** %this.addr, metadata !8295, metadata !DIExpression()), !dbg !8296
  %this1 = load %class.cException*, %class.cException** %this.addr, align 8
  %moduleid = getelementptr inbounds %class.cException, %class.cException* %this1, i32 0, i32 8, !dbg !8297
  %0 = load i32, i32* %moduleid, align 8, !dbg !8297
  ret i32 %0, !dbg !8298
}

declare dso_local void @_ZN10cExceptionC1ERKS_(%class.cException*, %class.cException* dereferenceable(128)) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %__lhs, %"class.std::__cxx11::basic_string"* dereferenceable(32) %__rhs) #0 comdat !dbg !8299 {
entry:
  %result.ptr = alloca i8*, align 8
  %__lhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__rhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %__lhs, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %__lhs.addr, metadata !8304, metadata !DIExpression()), !dbg !8305
  store %"class.std::__cxx11::basic_string"* %__rhs, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %__rhs.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !dbg !8308
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8, !dbg !8309
  %call = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(%"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* dereferenceable(32) %2), !dbg !8310
  %call1 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %call) #3, !dbg !8311
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %call1) #3, !dbg !8311
  ret void, !dbg !8312
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::allocator"*) unnamed_addr #2

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::allocator"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %__t) #5 comdat !dbg !8313 {
entry:
  %__t.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__t, %"class.std::__cxx11::basic_string"** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %__t.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__t.addr, align 8, !dbg !8325
  ret %"class.std::__cxx11::basic_string"* %0, !dbg !8326
}

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::_Rb_tree.24"* %this) unnamed_addr #5 comdat align 2 !dbg !8327 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8328, metadata !DIExpression()), !dbg !8330
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !8331
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl) #3, !dbg !8331
  ret void, !dbg !8332
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this) unnamed_addr #5 comdat align 2 !dbg !8333 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"** %this.addr, metadata !8334, metadata !DIExpression()), !dbg !8336
  %this1 = load %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this1 to %"class.std::allocator.25"*, !dbg !8337
  call void @_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev(%"class.std::allocator.25"* %0) #3, !dbg !8338
  %1 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this1 to %"struct.std::_Rb_tree_key_compare.28"*, !dbg !8337
  call void @_ZNSt20_Rb_tree_key_compareISt4lessIN5cGate4NameEEEC2Ev(%"struct.std::_Rb_tree_key_compare.28"* %1) #3, !dbg !8339
  %2 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this1 to i8*, !dbg !8337
  %3 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !8337
  %4 = bitcast i8* %3 to %"struct.std::_Rb_tree_header"*, !dbg !8337
  call void @_ZNSt15_Rb_tree_headerC2Ev(%"struct.std::_Rb_tree_header"* %4) #3, !dbg !8339
  ret void, !dbg !8340
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev(%"class.std::allocator.25"* %this) unnamed_addr #5 comdat align 2 !dbg !8341 {
entry:
  %this.addr = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %this, %"class.std::allocator.25"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.25"** %this.addr, metadata !8342, metadata !DIExpression()), !dbg !8344
  %this1 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.25"* %this1 to %"class.__gnu_cxx::new_allocator.26"*, !dbg !8345
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %0) #3, !dbg !8346
  ret void, !dbg !8347
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt20_Rb_tree_key_compareISt4lessIN5cGate4NameEEEC2Ev(%"struct.std::_Rb_tree_key_compare.28"* %this) unnamed_addr #5 comdat align 2 !dbg !8348 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_key_compare.28"*, align 8
  store %"struct.std::_Rb_tree_key_compare.28"* %this, %"struct.std::_Rb_tree_key_compare.28"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_key_compare.28"** %this.addr, metadata !8349, metadata !DIExpression()), !dbg !8351
  %this1 = load %"struct.std::_Rb_tree_key_compare.28"*, %"struct.std::_Rb_tree_key_compare.28"** %this.addr, align 8
  %_M_key_compare = getelementptr inbounds %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_key_compare.28"* %this1, i32 0, i32 0, !dbg !8352
  ret void, !dbg !8353
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt15_Rb_tree_headerC2Ev(%"struct.std::_Rb_tree_header"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8354 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_header"*, align 8
  store %"struct.std::_Rb_tree_header"* %this, %"struct.std::_Rb_tree_header"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_header"** %this.addr, metadata !8355, metadata !DIExpression()), !dbg !8357
  %this1 = load %"struct.std::_Rb_tree_header"*, %"struct.std::_Rb_tree_header"** %this.addr, align 8
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8358
  %_M_header2 = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8359
  %_M_color = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_header2, i32 0, i32 0, !dbg !8361
  store i32 0, i32* %_M_color, align 8, !dbg !8362
  invoke void @_ZNSt15_Rb_tree_header8_M_resetEv(%"struct.std::_Rb_tree_header"* %this1)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !8363

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !8364

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8363
  %1 = extractvalue { i8*, i32 } %0, 0, !dbg !8363
  call void @__clang_call_terminate(i8* %1) #18, !dbg !8363
  unreachable, !dbg !8363
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %this) unnamed_addr #5 comdat align 2 !dbg !8365 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !8366, metadata !DIExpression()), !dbg !8368
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  ret void, !dbg !8369
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt15_Rb_tree_header8_M_resetEv(%"struct.std::_Rb_tree_header"* %this) #5 comdat align 2 !dbg !8370 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_header"*, align 8
  store %"struct.std::_Rb_tree_header"* %this, %"struct.std::_Rb_tree_header"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_header"** %this.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  %this1 = load %"struct.std::_Rb_tree_header"*, %"struct.std::_Rb_tree_header"** %this.addr, align 8
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8373
  %_M_parent = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_header, i32 0, i32 1, !dbg !8374
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %_M_parent, align 8, !dbg !8375
  %_M_header2 = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8376
  %_M_header3 = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8377
  %_M_left = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_header3, i32 0, i32 2, !dbg !8378
  store %"struct.std::_Rb_tree_node_base"* %_M_header2, %"struct.std::_Rb_tree_node_base"** %_M_left, align 8, !dbg !8379
  %_M_header4 = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8380
  %_M_header5 = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 0, !dbg !8381
  %_M_right = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_header5, i32 0, i32 3, !dbg !8382
  store %"struct.std::_Rb_tree_node_base"* %_M_header4, %"struct.std::_Rb_tree_node_base"** %_M_right, align 8, !dbg !8383
  %_M_node_count = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %this1, i32 0, i32 1, !dbg !8384
  store i64 0, i64* %_M_node_count, align 8, !dbg !8385
  ret void, !dbg !8386
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.24"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8387 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %call = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !8390
  invoke void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %call)
          to label %invoke.cont unwind label %lpad, !dbg !8392

invoke.cont:                                      ; preds = %entry
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !8393
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl) #3, !dbg !8393
  ret void, !dbg !8394

lpad:                                             ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8393
  %1 = extractvalue { i8*, i32 } %0, 0, !dbg !8393
  store i8* %1, i8** %exn.slot, align 8, !dbg !8393
  %2 = extractvalue { i8*, i32 } %0, 1, !dbg !8393
  store i32 %2, i32* %ehselector.slot, align 4, !dbg !8393
  %_M_impl2 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !8393
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl2) #3, !dbg !8393
  br label %terminate.handler, !dbg !8393

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !8393
  call void @__clang_call_terminate(i8* %exn) #18, !dbg !8393
  unreachable, !dbg !8393
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node"* %__x) #0 comdat align 2 !dbg !8395 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  %__y = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8396, metadata !DIExpression()), !dbg !8397
  store %"struct.std::_Rb_tree_node"* %__x, %"struct.std::_Rb_tree_node"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__x.addr, metadata !8398, metadata !DIExpression()), !dbg !8399
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  br label %while.cond, !dbg !8400

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !8401
  %cmp = icmp ne %"struct.std::_Rb_tree_node"* %0, null, !dbg !8402
  br i1 %cmp, label %while.body, label %while.end, !dbg !8400

while.body:                                       ; preds = %while.cond
  %1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !8403
  %2 = bitcast %"struct.std::_Rb_tree_node"* %1 to %"struct.std::_Rb_tree_node_base"*, !dbg !8403
  %call = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %2) #3, !dbg !8405
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %call), !dbg !8406
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__y, metadata !8407, metadata !DIExpression()), !dbg !8408
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !8409
  %4 = bitcast %"struct.std::_Rb_tree_node"* %3 to %"struct.std::_Rb_tree_node_base"*, !dbg !8409
  %call2 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4) #3, !dbg !8410
  store %"struct.std::_Rb_tree_node"* %call2, %"struct.std::_Rb_tree_node"** %__y, align 8, !dbg !8408
  %5 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !8411
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %5) #3, !dbg !8412
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__y, align 8, !dbg !8413
  store %"struct.std::_Rb_tree_node"* %6, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !8414
  br label %while.cond, !dbg !8400, !llvm.loop !8415

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8417
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 !dbg !8418 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8419, metadata !DIExpression()), !dbg !8420
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !8421
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to i8*, !dbg !8422
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 8, !dbg !8422
  %1 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !8422
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %1, i32 0, i32 0, !dbg !8423
  %_M_parent = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_header, i32 0, i32 1, !dbg !8424
  %2 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_parent, align 8, !dbg !8424
  %3 = bitcast %"struct.std::_Rb_tree_node_base"* %2 to %"struct.std::_Rb_tree_node"*, !dbg !8425
  ret %"struct.std::_Rb_tree_node"* %3, !dbg !8426
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this) unnamed_addr #5 comdat align 2 !dbg !8427 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"** %this.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  %this1 = load %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %this1 to %"class.std::allocator.25"*, !dbg !8431
  call void @_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev(%"class.std::allocator.25"* %0) #3, !dbg !8431
  ret void, !dbg !8433
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %__x) #5 comdat align 2 !dbg !8434 {
entry:
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__x.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8, !dbg !8437
  %_M_right = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %0, i32 0, i32 3, !dbg !8438
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_right, align 8, !dbg !8438
  %2 = bitcast %"struct.std::_Rb_tree_node_base"* %1 to %"struct.std::_Rb_tree_node"*, !dbg !8439
  ret %"struct.std::_Rb_tree_node"* %2, !dbg !8440
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %__x) #5 comdat align 2 !dbg !8441 {
entry:
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__x.addr, metadata !8442, metadata !DIExpression()), !dbg !8443
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8, !dbg !8444
  %_M_left = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %0, i32 0, i32 2, !dbg !8445
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_left, align 8, !dbg !8445
  %2 = bitcast %"struct.std::_Rb_tree_node_base"* %1 to %"struct.std::_Rb_tree_node"*, !dbg !8446
  ret %"struct.std::_Rb_tree_node"* %2, !dbg !8447
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node"* %__p) #5 comdat align 2 !dbg !8448 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__p.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8449, metadata !DIExpression()), !dbg !8450
  store %"struct.std::_Rb_tree_node"* %__p, %"struct.std::_Rb_tree_node"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__p.addr, metadata !8451, metadata !DIExpression()), !dbg !8452
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8453
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %0) #3, !dbg !8454
  %1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8455
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %1) #3, !dbg !8456
  ret void, !dbg !8457
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node"* %__p) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8458 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__p.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8459, metadata !DIExpression()), !dbg !8460
  store %"struct.std::_Rb_tree_node"* %__p, %"struct.std::_Rb_tree_node"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__p.addr, metadata !8461, metadata !DIExpression()), !dbg !8462
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %call = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !8463
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8464
  %call2 = invoke %"struct.cGate::Name"* @_ZNSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %0)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !8465

invoke.cont:                                      ; preds = %entry
  call void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.25"* dereferenceable(1) %call, %"struct.cGate::Name"* %call2) #3, !dbg !8466
  %1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8467
  ret void, !dbg !8468

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8465
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !8465
  call void @__clang_call_terminate(i8* %3) #18, !dbg !8465
  unreachable, !dbg !8465
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node"* %__p) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8469 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__p.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8470, metadata !DIExpression()), !dbg !8471
  store %"struct.std::_Rb_tree_node"* %__p, %"struct.std::_Rb_tree_node"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__p.addr, metadata !8472, metadata !DIExpression()), !dbg !8473
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %call = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !8474
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8475
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1) %call, %"struct.std::_Rb_tree_node"* %0, i64 1)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !8476

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !8477

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8476
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !8476
  call void @__clang_call_terminate(i8* %2) #18, !dbg !8476
  unreachable, !dbg !8476
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.25"* dereferenceable(1) %__a, %"struct.cGate::Name"* %__p) #5 comdat align 2 !dbg !8478 {
entry:
  %__a.addr = alloca %"class.std::allocator.25"*, align 8
  %__p.addr = alloca %"struct.cGate::Name"*, align 8
  store %"class.std::allocator.25"* %__a, %"class.std::allocator.25"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.25"** %__a.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  store %"struct.cGate::Name"* %__p, %"struct.cGate::Name"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__p.addr, metadata !8511, metadata !DIExpression()), !dbg !8512
  %0 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %__a.addr, align 8, !dbg !8513
  %1 = bitcast %"class.std::allocator.25"* %0 to %"class.__gnu_cxx::new_allocator.26"*, !dbg !8513
  %2 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__p.addr, align 8, !dbg !8514
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.26"* %1, %"struct.cGate::Name"* %2) #3, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 !dbg !8517 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8518, metadata !DIExpression()), !dbg !8519
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !8520
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to %"class.std::allocator.25"*, !dbg !8521
  ret %"class.std::allocator.25"* %0, !dbg !8522
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.cGate::Name"* @_ZNSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %this) #5 comdat align 2 !dbg !8523 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %this, %"struct.std::_Rb_tree_node"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %this.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  %this1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %this1, i32 0, i32 1, !dbg !8526
  %call = call %"struct.cGate::Name"* @_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %_M_storage) #3, !dbg !8527
  ret %"struct.cGate::Name"* %call, !dbg !8528
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.26"* %this, %"struct.cGate::Name"* %__p) #5 comdat align 2 !dbg !8529 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %__p.addr = alloca %"struct.cGate::Name"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  store %"struct.cGate::Name"* %__p, %"struct.cGate::Name"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__p.addr, metadata !8535, metadata !DIExpression()), !dbg !8536
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__p.addr, align 8, !dbg !8537
  call void @_ZN5cGate4NameD2Ev(%"struct.cGate::Name"* %0) #3, !dbg !8538
  ret void, !dbg !8539
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.cGate::Name"* @_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %this) #5 comdat align 2 !dbg !8540 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, metadata !8541, metadata !DIExpression()), !dbg !8543
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %call = call i8* @_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %this1) #3, !dbg !8544
  %0 = bitcast i8* %call to %"struct.cGate::Name"*, !dbg !8545
  ret %"struct.cGate::Name"* %0, !dbg !8546
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %this) #5 comdat align 2 !dbg !8547 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %this1, i32 0, i32 0, !dbg !8550
  %0 = bitcast [32 x i8]* %_M_storage to i8*, !dbg !8551
  ret i8* %0, !dbg !8552
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE10deallocateERS4_PS3_m(%"class.std::allocator.25"* dereferenceable(1) %__a, %"struct.std::_Rb_tree_node"* %__p, i64 %__n) #0 comdat align 2 !dbg !8553 {
entry:
  %__a.addr = alloca %"class.std::allocator.25"*, align 8
  %__p.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.25"* %__a, %"class.std::allocator.25"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.25"** %__a.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  store %"struct.std::_Rb_tree_node"* %__p, %"struct.std::_Rb_tree_node"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__p.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  %0 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %__a.addr, align 8, !dbg !8560
  %1 = bitcast %"class.std::allocator.25"* %0 to %"class.__gnu_cxx::new_allocator.26"*, !dbg !8560
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8561
  %3 = load i64, i64* %__n.addr, align 8, !dbg !8562
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.26"* %1, %"struct.std::_Rb_tree_node"* %2, i64 %3), !dbg !8563
  ret void, !dbg !8564
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.26"* %this, %"struct.std::_Rb_tree_node"* %__p, i64 %__t) #5 comdat align 2 !dbg !8565 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %__p.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  %__t.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !8566, metadata !DIExpression()), !dbg !8567
  store %"struct.std::_Rb_tree_node"* %__p, %"struct.std::_Rb_tree_node"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__p.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  store i64 %__t, i64* %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__t.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__p.addr, align 8, !dbg !8572
  %1 = bitcast %"struct.std::_Rb_tree_node"* %0 to i8*, !dbg !8572
  call void @_ZdlPv(i8* %1) #3, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev(%"class.std::allocator.25"* %this) unnamed_addr #5 comdat align 2 !dbg !8575 {
entry:
  %this.addr = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %this, %"class.std::allocator.25"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.25"** %this.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  %this1 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.25"* %this1 to %"class.__gnu_cxx::new_allocator.26"*, !dbg !8578
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %0) #3, !dbg !8578
  ret void, !dbg !8580
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev(%"class.__gnu_cxx::new_allocator.26"* %this) unnamed_addr #5 comdat align 2 !dbg !8581 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !8582, metadata !DIExpression()), !dbg !8583
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  ret void, !dbg !8584
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPKcSaIS1_EEC2Ev(%"struct.std::_Vector_base.14"* %this) unnamed_addr #5 comdat align 2 !dbg !8585 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %this, %"struct.std::_Vector_base.14"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.14"** %this.addr, metadata !8586, metadata !DIExpression()), !dbg !8588
  %this1 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8589
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl) #3, !dbg !8589
  ret void, !dbg !8590
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 !dbg !8591 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"** %this.addr, metadata !8592, metadata !DIExpression()), !dbg !8594
  %this1 = load %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"*, %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this1 to %"class.std::allocator.15"*, !dbg !8595
  call void @_ZNSaIPKcEC2Ev(%"class.std::allocator.15"* %0) #3, !dbg !8596
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this1 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !8595
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1) #3, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIPKcEC2Ev(%"class.std::allocator.15"* %this) unnamed_addr #5 comdat align 2 !dbg !8599 {
entry:
  %this.addr = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %this, %"class.std::allocator.15"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %this.addr, metadata !8600, metadata !DIExpression()), !dbg !8602
  %this1 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.15"* %this1 to %"class.__gnu_cxx::new_allocator.16"*, !dbg !8603
  call void @_ZN9__gnu_cxx13new_allocatorIPKcEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %0) #3, !dbg !8604
  ret void, !dbg !8605
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %this) unnamed_addr #5 comdat align 2 !dbg !8606 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %this, %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"** %this.addr, metadata !8607, metadata !DIExpression()), !dbg !8609
  %this1 = load %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %this1, i32 0, i32 0, !dbg !8610
  store i8** null, i8*** %_M_start, align 8, !dbg !8610
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %this1, i32 0, i32 1, !dbg !8611
  store i8** null, i8*** %_M_finish, align 8, !dbg !8611
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %this1, i32 0, i32 2, !dbg !8612
  store i8** null, i8*** %_M_end_of_storage, align 8, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPKcEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %this) unnamed_addr #5 comdat align 2 !dbg !8614 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !8615, metadata !DIExpression()), !dbg !8617
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  ret void, !dbg !8618
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate4Desc7indexOfEPKS_(%"struct.cGate::Desc"* %this, %class.cGate* %g) #5 comdat align 2 !dbg !8619 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %g.addr = alloca %class.cGate*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !8620, metadata !DIExpression()), !dbg !8621
  store %class.cGate* %g, %class.cGate** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %g.addr, metadata !8622, metadata !DIExpression()), !dbg !8623
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !8624
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %0, i32 0, i32 2, !dbg !8625
  %1 = load i32, i32* %pos, align 8, !dbg !8625
  %shr = ashr i32 %1, 2, !dbg !8626
  %cmp = icmp eq i32 %shr, -1, !dbg !8627
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8628

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8628

cond.false:                                       ; preds = %entry
  %2 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !8629
  %pos2 = getelementptr inbounds %class.cGate, %class.cGate* %2, i32 0, i32 2, !dbg !8630
  %3 = load i32, i32* %pos2, align 8, !dbg !8630
  %shr3 = ashr i32 %3, 2, !dbg !8631
  br label %cond.end, !dbg !8628

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %shr3, %cond.false ], !dbg !8628
  ret i32 %cond, !dbg !8632
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate13getVectorSizeEv(%class.cGate* %this) #5 comdat align 2 !dbg !8633 {
entry:
  %this.addr = alloca %class.cGate*, align 8
  store %class.cGate* %this, %class.cGate** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %this.addr, metadata !8635, metadata !DIExpression()), !dbg !8636
  %this1 = load %class.cGate*, %class.cGate** %this.addr, align 8
  %desc = getelementptr inbounds %class.cGate, %class.cGate* %this1, i32 0, i32 1, !dbg !8637
  %0 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %desc, align 8, !dbg !8637
  %call = call i32 @_ZNK5cGate4Desc8gateSizeEv(%"struct.cGate::Desc"* %0), !dbg !8638
  ret i32 %call, !dbg !8639
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_Z10opp_strcmpPKcS0_(i8* %s1, i8* %s2) #5 comdat !dbg !8640 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !8641, metadata !DIExpression()), !dbg !8642
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !8643, metadata !DIExpression()), !dbg !8644
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !8645
  %tobool = icmp ne i8* %0, null, !dbg !8645
  br i1 %tobool, label %if.then, label %if.else, !dbg !8647

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !8648
  %tobool1 = icmp ne i8* %1, null, !dbg !8648
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !8648

cond.true:                                        ; preds = %if.then
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !8649
  %3 = load i8*, i8** %s2.addr, align 8, !dbg !8650
  %call = call i32 @strcmp(i8* %2, i8* %3) #9, !dbg !8651
  br label %cond.end, !dbg !8648

cond.false:                                       ; preds = %if.then
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !8652
  %5 = load i8, i8* %4, align 1, !dbg !8653
  %tobool2 = icmp ne i8 %5, 0, !dbg !8653
  %6 = zext i1 %tobool2 to i64, !dbg !8653
  %cond = select i1 %tobool2, i32 1, i32 0, !dbg !8653
  br label %cond.end, !dbg !8648

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ %call, %cond.true ], [ %cond, %cond.false ], !dbg !8648
  store i32 %cond3, i32* %retval, align 4, !dbg !8654
  br label %return, !dbg !8654

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !8655
  %tobool4 = icmp ne i8* %7, null, !dbg !8655
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !8656

land.rhs:                                         ; preds = %if.else
  %8 = load i8*, i8** %s2.addr, align 8, !dbg !8657
  %9 = load i8, i8* %8, align 1, !dbg !8658
  %tobool5 = icmp ne i8 %9, 0, !dbg !8658
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %10 = phi i1 [ false, %if.else ], [ %tobool5, %land.rhs ], !dbg !8659
  %11 = zext i1 %10 to i64, !dbg !8660
  %cond6 = select i1 %10, i32 -1, i32 0, !dbg !8660
  store i32 %cond6, i32* %retval, align 4, !dbg !8661
  br label %return, !dbg !8661

return:                                           ; preds = %land.end, %cond.end
  %12 = load i32, i32* %retval, align 4, !dbg !8662
  ret i32 %12, !dbg !8662
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i8* @_Z10opp_strdupPKc(i8* %s) #0 comdat !dbg !8663 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  %0 = load i8*, i8** %s.addr, align 8, !dbg !8666
  %tobool = icmp ne i8* %0, null, !dbg !8666
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8668

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !8669
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !8669
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8669
  %tobool1 = icmp ne i8 %2, 0, !dbg !8669
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8670

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !8671
  br label %return, !dbg !8671

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8672, metadata !DIExpression()), !dbg !8673
  %3 = load i8*, i8** %s.addr, align 8, !dbg !8674
  %call = call i64 @strlen(i8* %3) #9, !dbg !8675
  %add = add i64 %call, 1, !dbg !8676
  %call2 = call i8* @_Znam(i64 %add) #19, !dbg !8677
  store i8* %call2, i8** %p, align 8, !dbg !8673
  %4 = load i8*, i8** %p, align 8, !dbg !8678
  %5 = load i8*, i8** %s.addr, align 8, !dbg !8679
  %call3 = call i8* @strcpy(i8* %4, i8* %5) #3, !dbg !8680
  %6 = load i8*, i8** %p, align 8, !dbg !8681
  store i8* %6, i8** %retval, align 8, !dbg !8682
  br label %return, !dbg !8682

return:                                           ; preds = %if.end, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !8683
  ret i8* %7, !dbg !8683
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EEC2Ev(%"class.std::vector.31"* %this) unnamed_addr #5 comdat align 2 !dbg !8684 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8687
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EEC2Ev(%"struct.std::_Vector_base.32"* %0) #3, !dbg !8688
  ret void, !dbg !8687
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EED2Ev(%"class.std::vector.31"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8689 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !8690, metadata !DIExpression()), !dbg !8691
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8692
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !8692
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8694
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !8695
  %2 = load %class.cChannel**, %class.cChannel*** %_M_start, align 8, !dbg !8695
  %3 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8696
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0, !dbg !8696
  %4 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8697
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %4, i32 0, i32 1, !dbg !8698
  %5 = load %class.cChannel**, %class.cChannel*** %_M_finish, align 8, !dbg !8698
  %6 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8699
  %call = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %6) #3, !dbg !8699
  invoke void @_ZSt8_DestroyIPP8cChannelS1_EvT_S3_RSaIT0_E(%class.cChannel** %2, %class.cChannel** %5, %"class.std::allocator.33"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad, !dbg !8700

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8701
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EED2Ev(%"struct.std::_Vector_base.32"* %7) #3, !dbg !8701
  ret void, !dbg !8702

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8701
  %9 = extractvalue { i8*, i32 } %8, 0, !dbg !8701
  store i8* %9, i8** %exn.slot, align 8, !dbg !8701
  %10 = extractvalue { i8*, i32 } %8, 1, !dbg !8701
  store i32 %10, i32* %ehselector.slot, align 4, !dbg !8701
  %11 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8701
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EED2Ev(%"struct.std::_Vector_base.32"* %11) #3, !dbg !8701
  br label %terminate.handler, !dbg !8701

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !8701
  call void @__clang_call_terminate(i8* %exn) #18, !dbg !8701
  unreachable, !dbg !8701
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EEC2Ev(%"struct.std::_Vector_base.32"* %this) unnamed_addr #5 comdat align 2 !dbg !8703 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %this, %"struct.std::_Vector_base.32"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.32"** %this.addr, metadata !8704, metadata !DIExpression()), !dbg !8706
  %this1 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8707
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl) #3, !dbg !8707
  ret void, !dbg !8708
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 !dbg !8709 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"** %this.addr, metadata !8710, metadata !DIExpression()), !dbg !8712
  %this1 = load %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"*, %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this1 to %"class.std::allocator.33"*, !dbg !8713
  call void @_ZNSaIP8cChannelEC2Ev(%"class.std::allocator.33"* %0) #3, !dbg !8714
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this1 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8713
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1) #3, !dbg !8715
  ret void, !dbg !8716
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIP8cChannelEC2Ev(%"class.std::allocator.33"* %this) unnamed_addr #5 comdat align 2 !dbg !8717 {
entry:
  %this.addr = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %this, %"class.std::allocator.33"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %this.addr, metadata !8718, metadata !DIExpression()), !dbg !8720
  %this1 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.33"* %this1 to %"class.__gnu_cxx::new_allocator.34"*, !dbg !8721
  call void @_ZN9__gnu_cxx13new_allocatorIP8cChannelEC2Ev(%"class.__gnu_cxx::new_allocator.34"* %0) #3, !dbg !8722
  ret void, !dbg !8723
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %this) unnamed_addr #5 comdat align 2 !dbg !8724 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %this, %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"** %this.addr, metadata !8725, metadata !DIExpression()), !dbg !8727
  %this1 = load %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %this1, i32 0, i32 0, !dbg !8728
  store %class.cChannel** null, %class.cChannel*** %_M_start, align 8, !dbg !8728
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %this1, i32 0, i32 1, !dbg !8729
  store %class.cChannel** null, %class.cChannel*** %_M_finish, align 8, !dbg !8729
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %this1, i32 0, i32 2, !dbg !8730
  store %class.cChannel** null, %class.cChannel*** %_M_end_of_storage, align 8, !dbg !8730
  ret void, !dbg !8731
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8cChannelEC2Ev(%"class.__gnu_cxx::new_allocator.34"* %this) unnamed_addr #5 comdat align 2 !dbg !8732 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !8733, metadata !DIExpression()), !dbg !8735
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  ret void, !dbg !8736
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP8cChannelS1_EvT_S3_RSaIT0_E(%class.cChannel** %__first, %class.cChannel** %__last, %"class.std::allocator.33"* dereferenceable(1) %0) #0 comdat !dbg !8737 {
entry:
  %__first.addr = alloca %class.cChannel**, align 8
  %__last.addr = alloca %class.cChannel**, align 8
  %.addr = alloca %"class.std::allocator.33"*, align 8
  store %class.cChannel** %__first, %class.cChannel*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__first.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  store %class.cChannel** %__last, %class.cChannel*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__last.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  %1 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !8748
  %2 = load %class.cChannel**, %class.cChannel*** %__last.addr, align 8, !dbg !8749
  call void @_ZSt8_DestroyIPP8cChannelEvT_S3_(%class.cChannel** %1, %class.cChannel** %2), !dbg !8750
  ret void, !dbg !8751
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %this) #5 comdat align 2 !dbg !8752 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %this, %"struct.std::_Vector_base.32"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.32"** %this.addr, metadata !8753, metadata !DIExpression()), !dbg !8754
  %this1 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8755
  %0 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.33"*, !dbg !8756
  ret %"class.std::allocator.33"* %0, !dbg !8757
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EED2Ev(%"struct.std::_Vector_base.32"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8758 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.32"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base.32"* %this, %"struct.std::_Vector_base.32"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.32"** %this.addr, metadata !8759, metadata !DIExpression()), !dbg !8760
  %this1 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8761
  %0 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8761
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %0, i32 0, i32 0, !dbg !8763
  %1 = load %class.cChannel**, %class.cChannel*** %_M_start, align 8, !dbg !8763
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8764
  %2 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8764
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %2, i32 0, i32 2, !dbg !8765
  %3 = load %class.cChannel**, %class.cChannel*** %_M_end_of_storage, align 8, !dbg !8765
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8766
  %4 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8766
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %4, i32 0, i32 0, !dbg !8767
  %5 = load %class.cChannel**, %class.cChannel*** %_M_start4, align 8, !dbg !8767
  %sub.ptr.lhs.cast = ptrtoint %class.cChannel** %3 to i64, !dbg !8768
  %sub.ptr.rhs.cast = ptrtoint %class.cChannel** %5 to i64, !dbg !8768
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8768
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !8768
  invoke void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %this1, %class.cChannel** %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad, !dbg !8769

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8770
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl5) #3, !dbg !8770
  ret void, !dbg !8771

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8770
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !8770
  store i8* %7, i8** %exn.slot, align 8, !dbg !8770
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !8770
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !8770
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8770
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl6) #3, !dbg !8770
  br label %terminate.handler, !dbg !8770

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !8770
  call void @__clang_call_terminate(i8* %exn) #18, !dbg !8770
  unreachable, !dbg !8770
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP8cChannelEvT_S3_(%class.cChannel** %__first, %class.cChannel** %__last) #0 comdat !dbg !8772 {
entry:
  %__first.addr = alloca %class.cChannel**, align 8
  %__last.addr = alloca %class.cChannel**, align 8
  store %class.cChannel** %__first, %class.cChannel*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__first.addr, metadata !8777, metadata !DIExpression()), !dbg !8778
  store %class.cChannel** %__last, %class.cChannel*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__last.addr, metadata !8779, metadata !DIExpression()), !dbg !8780
  %0 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !8781
  %1 = load %class.cChannel**, %class.cChannel*** %__last.addr, align 8, !dbg !8782
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP8cChannelEEvT_S5_(%class.cChannel** %0, %class.cChannel** %1), !dbg !8783
  ret void, !dbg !8784
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP8cChannelEEvT_S5_(%class.cChannel** %0, %class.cChannel** %1) #5 comdat align 2 !dbg !8785 {
entry:
  %.addr = alloca %class.cChannel**, align 8
  %.addr1 = alloca %class.cChannel**, align 8
  store %class.cChannel** %0, %class.cChannel*** %.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  store %class.cChannel** %1, %class.cChannel*** %.addr1, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %.addr1, metadata !8791, metadata !DIExpression()), !dbg !8792
  ret void, !dbg !8793
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %this, %class.cChannel** %__p, i64 %__n) #0 comdat align 2 !dbg !8794 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.32"*, align 8
  %__p.addr = alloca %class.cChannel**, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.32"* %this, %"struct.std::_Vector_base.32"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.32"** %this.addr, metadata !8795, metadata !DIExpression()), !dbg !8796
  store %class.cChannel** %__p, %class.cChannel*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__p.addr, metadata !8797, metadata !DIExpression()), !dbg !8798
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !8799, metadata !DIExpression()), !dbg !8800
  %this1 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %this.addr, align 8
  %0 = load %class.cChannel**, %class.cChannel*** %__p.addr, align 8, !dbg !8801
  %tobool = icmp ne %class.cChannel** %0, null, !dbg !8801
  br i1 %tobool, label %if.then, label %if.end, !dbg !8803

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !8804
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.33"*, !dbg !8804
  %2 = load %class.cChannel**, %class.cChannel*** %__p.addr, align 8, !dbg !8805
  %3 = load i64, i64* %__n.addr, align 8, !dbg !8806
  call void @_ZNSt16allocator_traitsISaIP8cChannelEE10deallocateERS2_PS1_m(%"class.std::allocator.33"* dereferenceable(1) %1, %class.cChannel** %2, i64 %3), !dbg !8807
  br label %if.end, !dbg !8807

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8808
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 !dbg !8809 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"** %this.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  %this1 = load %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"*, %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %this1 to %"class.std::allocator.33"*, !dbg !8813
  call void @_ZNSaIP8cChannelED2Ev(%"class.std::allocator.33"* %0) #3, !dbg !8813
  ret void, !dbg !8815
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP8cChannelEE10deallocateERS2_PS1_m(%"class.std::allocator.33"* dereferenceable(1) %__a, %class.cChannel** %__p, i64 %__n) #0 comdat align 2 !dbg !8816 {
entry:
  %__a.addr = alloca %"class.std::allocator.33"*, align 8
  %__p.addr = alloca %class.cChannel**, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.33"* %__a, %"class.std::allocator.33"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__a.addr, metadata !8817, metadata !DIExpression()), !dbg !8818
  store %class.cChannel** %__p, %class.cChannel*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__p.addr, metadata !8819, metadata !DIExpression()), !dbg !8820
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !8821, metadata !DIExpression()), !dbg !8822
  %0 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__a.addr, align 8, !dbg !8823
  %1 = bitcast %"class.std::allocator.33"* %0 to %"class.__gnu_cxx::new_allocator.34"*, !dbg !8823
  %2 = load %class.cChannel**, %class.cChannel*** %__p.addr, align 8, !dbg !8824
  %3 = load i64, i64* %__n.addr, align 8, !dbg !8825
  call void @_ZN9__gnu_cxx13new_allocatorIP8cChannelE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.34"* %1, %class.cChannel** %2, i64 %3), !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8cChannelE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.34"* %this, %class.cChannel** %__p, i64 %__t) #5 comdat align 2 !dbg !8828 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %__p.addr = alloca %class.cChannel**, align 8
  %__t.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !8829, metadata !DIExpression()), !dbg !8830
  store %class.cChannel** %__p, %class.cChannel*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__p.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  store i64 %__t, i64* %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__t.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  %0 = load %class.cChannel**, %class.cChannel*** %__p.addr, align 8, !dbg !8835
  %1 = bitcast %class.cChannel** %0 to i8*, !dbg !8835
  call void @_ZdlPv(i8* %1) #3, !dbg !8836
  ret void, !dbg !8837
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIP8cChannelED2Ev(%"class.std::allocator.33"* %this) unnamed_addr #5 comdat align 2 !dbg !8838 {
entry:
  %this.addr = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %this, %"class.std::allocator.33"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %this.addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  %this1 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.33"* %this1 to %"class.__gnu_cxx::new_allocator.34"*, !dbg !8841
  call void @_ZN9__gnu_cxx13new_allocatorIP8cChannelED2Ev(%"class.__gnu_cxx::new_allocator.34"* %0) #3, !dbg !8841
  ret void, !dbg !8843
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8cChannelED2Ev(%"class.__gnu_cxx::new_allocator.34"* %this) unnamed_addr #5 comdat align 2 !dbg !8844 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  ret void, !dbg !8847
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %this) #5 comdat align 2 !dbg !8848 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !8849, metadata !DIExpression()), !dbg !8851
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8852
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !8852
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8853
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !8854
  %2 = load %class.cChannel**, %class.cChannel*** %_M_finish, align 8, !dbg !8854
  %3 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8855
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0, !dbg !8855
  %4 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8856
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %4, i32 0, i32 0, !dbg !8857
  %5 = load %class.cChannel**, %class.cChannel*** %_M_start, align 8, !dbg !8857
  %sub.ptr.lhs.cast = ptrtoint %class.cChannel** %2 to i64, !dbg !8858
  %sub.ptr.rhs.cast = ptrtoint %class.cChannel** %5 to i64, !dbg !8858
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8858
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !8858
  ret i64 %sub.ptr.div, !dbg !8859
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EEixEm(%"class.std::vector.31"* %this, i64 %__n) #5 comdat align 2 !dbg !8860 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !8865
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !8865
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !8866
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !8867
  %2 = load %class.cChannel**, %class.cChannel*** %_M_start, align 8, !dbg !8867
  %3 = load i64, i64* %__n.addr, align 8, !dbg !8868
  %add.ptr = getelementptr inbounds %class.cChannel*, %class.cChannel** %2, i64 %3, !dbg !8869
  ret %class.cChannel** %add.ptr, !dbg !8870
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK5cGate4Desc9getTypeOfEPKS_(%"struct.cGate::Desc"* %this, %class.cGate* %g) #5 comdat align 2 !dbg !8871 {
entry:
  %this.addr = alloca %"struct.cGate::Desc"*, align 8
  %g.addr = alloca %class.cGate*, align 8
  store %"struct.cGate::Desc"* %this, %"struct.cGate::Desc"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Desc"** %this.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  store %class.cGate* %g, %class.cGate** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %g.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  %this1 = load %"struct.cGate::Desc"*, %"struct.cGate::Desc"** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %g.addr, align 8, !dbg !8876
  %pos = getelementptr inbounds %class.cGate, %class.cGate* %0, i32 0, i32 2, !dbg !8877
  %1 = load i32, i32* %pos, align 8, !dbg !8877
  %and = and i32 %1, 1, !dbg !8878
  %cmp = icmp eq i32 %and, 0, !dbg !8879
  %2 = zext i1 %cmp to i64, !dbg !8880
  %cond = select i1 %cmp, i32 73, i32 79, !dbg !8880
  ret i32 %cond, !dbg !8881
}

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"*, i8*) #1

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E(i8** %__first, i8** %__last, %"class.std::allocator.15"* dereferenceable(1) %0) #0 comdat !dbg !8882 {
entry:
  %__first.addr = alloca i8**, align 8
  %__last.addr = alloca i8**, align 8
  %.addr = alloca %"class.std::allocator.15"*, align 8
  store i8** %__first, i8*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__first.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  store i8** %__last, i8*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__last.addr, metadata !8889, metadata !DIExpression()), !dbg !8890
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %.addr, metadata !8891, metadata !DIExpression()), !dbg !8892
  %1 = load i8**, i8*** %__first.addr, align 8, !dbg !8893
  %2 = load i8**, i8*** %__last.addr, align 8, !dbg !8894
  call void @_ZSt8_DestroyIPPKcEvT_S3_(i8** %1, i8** %2), !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %this) #5 comdat align 2 !dbg !8897 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %this, %"struct.std::_Vector_base.14"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.14"** %this.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  %this1 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8900
  %0 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.15"*, !dbg !8901
  ret %"class.std::allocator.15"* %0, !dbg !8902
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPKcSaIS1_EED2Ev(%"struct.std::_Vector_base.14"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8903 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.14"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base.14"* %this, %"struct.std::_Vector_base.14"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.14"** %this.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  %this1 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8906
  %0 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !8906
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %0, i32 0, i32 0, !dbg !8908
  %1 = load i8**, i8*** %_M_start, align 8, !dbg !8908
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8909
  %2 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !8909
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %2, i32 0, i32 2, !dbg !8910
  %3 = load i8**, i8*** %_M_end_of_storage, align 8, !dbg !8910
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8911
  %4 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !8911
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %4, i32 0, i32 0, !dbg !8912
  %5 = load i8**, i8*** %_M_start4, align 8, !dbg !8912
  %sub.ptr.lhs.cast = ptrtoint i8** %3 to i64, !dbg !8913
  %sub.ptr.rhs.cast = ptrtoint i8** %5 to i64, !dbg !8913
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8913
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !8913
  invoke void @_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %this1, i8** %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad, !dbg !8914

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8915
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl5) #3, !dbg !8915
  ret void, !dbg !8916

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8915
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !8915
  store i8* %7, i8** %exn.slot, align 8, !dbg !8915
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !8915
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !8915
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8915
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl6) #3, !dbg !8915
  br label %terminate.handler, !dbg !8915

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !8915
  call void @__clang_call_terminate(i8* %exn) #18, !dbg !8915
  unreachable, !dbg !8915
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPKcEvT_S3_(i8** %__first, i8** %__last) #0 comdat !dbg !8917 {
entry:
  %__first.addr = alloca i8**, align 8
  %__last.addr = alloca i8**, align 8
  store i8** %__first, i8*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__first.addr, metadata !8921, metadata !DIExpression()), !dbg !8922
  store i8** %__last, i8*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__last.addr, metadata !8923, metadata !DIExpression()), !dbg !8924
  %0 = load i8**, i8*** %__first.addr, align 8, !dbg !8925
  %1 = load i8**, i8*** %__last.addr, align 8, !dbg !8926
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_(i8** %0, i8** %1), !dbg !8927
  ret void, !dbg !8928
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_(i8** %0, i8** %1) #5 comdat align 2 !dbg !8929 {
entry:
  %.addr = alloca i8**, align 8
  %.addr1 = alloca i8**, align 8
  store i8** %0, i8*** %.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  store i8** %1, i8*** %.addr1, align 8
  call void @llvm.dbg.declare(metadata i8*** %.addr1, metadata !8933, metadata !DIExpression()), !dbg !8934
  ret void, !dbg !8935
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %this, i8** %__p, i64 %__n) #0 comdat align 2 !dbg !8936 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.14"*, align 8
  %__p.addr = alloca i8**, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %this, %"struct.std::_Vector_base.14"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.14"** %this.addr, metadata !8937, metadata !DIExpression()), !dbg !8938
  store i8** %__p, i8*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__p.addr, metadata !8939, metadata !DIExpression()), !dbg !8940
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !8941, metadata !DIExpression()), !dbg !8942
  %this1 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %this.addr, align 8
  %0 = load i8**, i8*** %__p.addr, align 8, !dbg !8943
  %tobool = icmp ne i8** %0, null, !dbg !8943
  br i1 %tobool, label %if.then, label %if.end, !dbg !8945

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !8946
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.15"*, !dbg !8946
  %2 = load i8**, i8*** %__p.addr, align 8, !dbg !8947
  %3 = load i64, i64* %__n.addr, align 8, !dbg !8948
  call void @_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %1, i8** %2, i64 %3), !dbg !8949
  br label %if.end, !dbg !8949

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8950
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this) unnamed_addr #5 comdat align 2 !dbg !8951 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"** %this.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  %this1 = load %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"*, %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %this1 to %"class.std::allocator.15"*, !dbg !8955
  call void @_ZNSaIPKcED2Ev(%"class.std::allocator.15"* %0) #3, !dbg !8955
  ret void, !dbg !8957
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %__a, i8** %__p, i64 %__n) #0 comdat align 2 !dbg !8958 {
entry:
  %__a.addr = alloca %"class.std::allocator.15"*, align 8
  %__p.addr = alloca i8**, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.15"* %__a, %"class.std::allocator.15"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__a.addr, metadata !8959, metadata !DIExpression()), !dbg !8960
  store i8** %__p, i8*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__p.addr, metadata !8961, metadata !DIExpression()), !dbg !8962
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  %0 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__a.addr, align 8, !dbg !8965
  %1 = bitcast %"class.std::allocator.15"* %0 to %"class.__gnu_cxx::new_allocator.16"*, !dbg !8965
  %2 = load i8**, i8*** %__p.addr, align 8, !dbg !8966
  %3 = load i64, i64* %__n.addr, align 8, !dbg !8967
  call void @_ZN9__gnu_cxx13new_allocatorIPKcE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %1, i8** %2, i64 %3), !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPKcE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %this, i8** %__p, i64 %__t) #5 comdat align 2 !dbg !8970 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %__p.addr = alloca i8**, align 8
  %__t.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  store i8** %__p, i8*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__p.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  store i64 %__t, i64* %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__t.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  %0 = load i8**, i8*** %__p.addr, align 8, !dbg !8977
  %1 = bitcast i8** %0 to i8*, !dbg !8977
  call void @_ZdlPv(i8* %1) #3, !dbg !8978
  ret void, !dbg !8979
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIPKcED2Ev(%"class.std::allocator.15"* %this) unnamed_addr #5 comdat align 2 !dbg !8980 {
entry:
  %this.addr = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %this, %"class.std::allocator.15"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %this.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  %this1 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.15"* %this1 to %"class.__gnu_cxx::new_allocator.16"*, !dbg !8983
  call void @_ZN9__gnu_cxx13new_allocatorIPKcED2Ev(%"class.__gnu_cxx::new_allocator.16"* %0) #3, !dbg !8983
  ret void, !dbg !8985
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPKcED2Ev(%"class.__gnu_cxx::new_allocator.16"* %this) unnamed_addr #5 comdat align 2 !dbg !8986 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !8987, metadata !DIExpression()), !dbg !8988
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  ret void, !dbg !8989
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !8990 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %call = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !8993
  invoke void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %call)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !8994

invoke.cont:                                      ; preds = %entry
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !8995
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to i8*, !dbg !8995
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 8, !dbg !8995
  %1 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !8995
  invoke void @_ZNSt15_Rb_tree_header8_M_resetEv(%"struct.std::_Rb_tree_header"* %1)
          to label %invoke.cont2 unwind label %terminate.lpad, !dbg !8996

invoke.cont2:                                     ; preds = %invoke.cont
  ret void, !dbg !8997

terminate.lpad:                                   ; preds = %invoke.cont, %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null, !dbg !8994
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !8994
  call void @__clang_call_terminate(i8* %3) #18, !dbg !8994
  unreachable, !dbg !8994
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4findERKS1_(%"class.std::_Rb_tree.24"* %this, %"struct.cGate::Name"* dereferenceable(32) %__k) #0 comdat align 2 !dbg !8998 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_iterator", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__k.addr = alloca %"struct.cGate::Name"*, align 8
  %__j = alloca %"struct.std::_Rb_tree_iterator", align 8
  %ref.tmp = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !8999, metadata !DIExpression()), !dbg !9000
  store %"struct.cGate::Name"* %__k, %"struct.cGate::Name"** %__k.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__k.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"* %__j, metadata !9003, metadata !DIExpression()), !dbg !9004
  %call = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9005
  %call2 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9006
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__k.addr, align 8, !dbg !9007
  %call3 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_EPSt18_Rb_tree_node_baseRKS1_(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %call, %"struct.std::_Rb_tree_node_base"* %call2, %"struct.cGate::Name"* dereferenceable(32) %0), !dbg !9008
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %__j, i32 0, i32 0, !dbg !9008
  store %"struct.std::_Rb_tree_node_base"* %call3, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9008
  %call4 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9009
  %coerce.dive5 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %ref.tmp, i32 0, i32 0, !dbg !9009
  store %"struct.std::_Rb_tree_node_base"* %call4, %"struct.std::_Rb_tree_node_base"** %coerce.dive5, align 8, !dbg !9009
  %call6 = call zeroext i1 @_ZSteqRKSt17_Rb_tree_iteratorIN5cGate4NameEES4_(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__j, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %ref.tmp) #3, !dbg !9010
  br i1 %call6, label %cond.true, label %lor.lhs.false, !dbg !9011

lor.lhs.false:                                    ; preds = %entry
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9012
  %1 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to %"struct.std::_Rb_tree_key_compare.28"*, !dbg !9012
  %_M_key_compare = getelementptr inbounds %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_key_compare.28"* %1, i32 0, i32 0, !dbg !9013
  %2 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__k.addr, align 8, !dbg !9014
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %__j, i32 0, i32 0, !dbg !9015
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9015
  %call7 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %3), !dbg !9016
  %call8 = call zeroext i1 @_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_(%"struct.std::less.29"* %_M_key_compare, %"struct.cGate::Name"* dereferenceable(32) %2, %"struct.cGate::Name"* dereferenceable(32) %call7), !dbg !9012
  br i1 %call8, label %cond.true, label %cond.false, !dbg !9017

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %call9 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9018
  %coerce.dive10 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %retval, i32 0, i32 0, !dbg !9018
  store %"struct.std::_Rb_tree_node_base"* %call9, %"struct.std::_Rb_tree_node_base"** %coerce.dive10, align 8, !dbg !9018
  br label %cond.end, !dbg !9017

cond.false:                                       ; preds = %lor.lhs.false
  %4 = bitcast %"struct.std::_Rb_tree_iterator"* %retval to i8*, !dbg !9019
  %5 = bitcast %"struct.std::_Rb_tree_iterator"* %__j to i8*, !dbg !9019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !9019
  br label %cond.end, !dbg !9017

cond.end:                                         ; preds = %cond.false, %cond.true
  %coerce.dive11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %retval, i32 0, i32 0, !dbg !9020
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive11, align 8, !dbg !9020
  ret %"struct.std::_Rb_tree_node_base"* %6, !dbg !9020
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %this, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__it) unnamed_addr #5 comdat align 2 !dbg !9021 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %__it.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %this, %"struct.std::_Rb_tree_const_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_const_iterator"** %this.addr, metadata !9022, metadata !DIExpression()), !dbg !9024
  store %"struct.std::_Rb_tree_iterator"* %__it, %"struct.std::_Rb_tree_iterator"** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__it.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  %this1 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %this1, i32 0, i32 0, !dbg !9027
  %0 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__it.addr, align 8, !dbg !9028
  %_M_node2 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %0, i32 0, i32 0, !dbg !9029
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node2, align 8, !dbg !9029
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9027
  ret void, !dbg !9030
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_EPSt18_Rb_tree_node_baseRKS1_(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node"* %__x, %"struct.std::_Rb_tree_node_base"* %__y, %"struct.cGate::Name"* dereferenceable(32) %__k) #0 comdat align 2 !dbg !9031 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_iterator", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  %__y.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %__k.addr = alloca %"struct.cGate::Name"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9032, metadata !DIExpression()), !dbg !9033
  store %"struct.std::_Rb_tree_node"* %__x, %"struct.std::_Rb_tree_node"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__x.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  store %"struct.std::_Rb_tree_node_base"* %__y, %"struct.std::_Rb_tree_node_base"** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__y.addr, metadata !9036, metadata !DIExpression()), !dbg !9037
  store %"struct.cGate::Name"* %__k, %"struct.cGate::Name"** %__k.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__k.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  br label %while.cond, !dbg !9040

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9041
  %cmp = icmp ne %"struct.std::_Rb_tree_node"* %0, null, !dbg !9042
  br i1 %cmp, label %while.body, label %while.end, !dbg !9040

while.body:                                       ; preds = %while.cond
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9043
  %1 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to %"struct.std::_Rb_tree_key_compare.28"*, !dbg !9043
  %_M_key_compare = getelementptr inbounds %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_key_compare.28"* %1, i32 0, i32 0, !dbg !9045
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9046
  %call = call dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node"* %2), !dbg !9047
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__k.addr, align 8, !dbg !9048
  %call2 = call zeroext i1 @_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_(%"struct.std::less.29"* %_M_key_compare, %"struct.cGate::Name"* dereferenceable(32) %call, %"struct.cGate::Name"* dereferenceable(32) %3), !dbg !9043
  br i1 %call2, label %if.else, label %if.then, !dbg !9049

if.then:                                          ; preds = %while.body
  %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9050
  %5 = bitcast %"struct.std::_Rb_tree_node"* %4 to %"struct.std::_Rb_tree_node_base"*, !dbg !9050
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %__y.addr, align 8, !dbg !9051
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9052
  %7 = bitcast %"struct.std::_Rb_tree_node"* %6 to %"struct.std::_Rb_tree_node_base"*, !dbg !9052
  %call3 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %7) #3, !dbg !9053
  store %"struct.std::_Rb_tree_node"* %call3, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9054
  br label %if.end, !dbg !9055

if.else:                                          ; preds = %while.body
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9056
  %9 = bitcast %"struct.std::_Rb_tree_node"* %8 to %"struct.std::_Rb_tree_node_base"*, !dbg !9056
  %call4 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %9) #3, !dbg !9057
  store %"struct.std::_Rb_tree_node"* %call4, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9058
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !9040, !llvm.loop !9059

while.end:                                        ; preds = %while.cond
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__y.addr, align 8, !dbg !9061
  call void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %retval, %"struct.std::_Rb_tree_node_base"* %10) #3, !dbg !9062
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %retval, i32 0, i32 0, !dbg !9063
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9063
  ret %"struct.std::_Rb_tree_node_base"* %11, !dbg !9063
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 !dbg !9064 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9067
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to i8*, !dbg !9068
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 8, !dbg !9068
  %1 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !9068
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %1, i32 0, i32 0, !dbg !9069
  ret %"struct.std::_Rb_tree_node_base"* %_M_header, !dbg !9070
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZSteqRKSt17_Rb_tree_iteratorIN5cGate4NameEES4_(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__x, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__y) #5 comdat !dbg !9071 {
entry:
  %__x.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %__y.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %__x, %"struct.std::_Rb_tree_iterator"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__x.addr, metadata !9076, metadata !DIExpression()), !dbg !9077
  store %"struct.std::_Rb_tree_iterator"* %__y, %"struct.std::_Rb_tree_iterator"** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__y.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  %0 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__x.addr, align 8, !dbg !9080
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %0, i32 0, i32 0, !dbg !9081
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9081
  %2 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__y.addr, align 8, !dbg !9082
  %_M_node1 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0, !dbg !9083
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node1, align 8, !dbg !9083
  %cmp = icmp eq %"struct.std::_Rb_tree_node_base"* %1, %3, !dbg !9084
  ret i1 %cmp, !dbg !9085
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 !dbg !9086 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_iterator", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9089
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to i8*, !dbg !9090
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 8, !dbg !9090
  %1 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !9090
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %1, i32 0, i32 0, !dbg !9091
  call void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %retval, %"struct.std::_Rb_tree_node_base"* %_M_header) #3, !dbg !9092
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %retval, i32 0, i32 0, !dbg !9093
  %2 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9093
  ret %"struct.std::_Rb_tree_node_base"* %2, !dbg !9093
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_(%"struct.std::less.29"* %this, %"struct.cGate::Name"* dereferenceable(32) %__x, %"struct.cGate::Name"* dereferenceable(32) %__y) #0 comdat align 2 !dbg !9094 {
entry:
  %this.addr = alloca %"struct.std::less.29"*, align 8
  %__x.addr = alloca %"struct.cGate::Name"*, align 8
  %__y.addr = alloca %"struct.cGate::Name"*, align 8
  store %"struct.std::less.29"* %this, %"struct.std::less.29"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::less.29"** %this.addr, metadata !9095, metadata !DIExpression()), !dbg !9097
  store %"struct.cGate::Name"* %__x, %"struct.cGate::Name"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__x.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  store %"struct.cGate::Name"* %__y, %"struct.cGate::Name"** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__y.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  %this1 = load %"struct.std::less.29"*, %"struct.std::less.29"** %this.addr, align 8
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__x.addr, align 8, !dbg !9102
  %1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__y.addr, align 8, !dbg !9103
  %call = call zeroext i1 @_ZNK5cGate4NameltERKS0_(%"struct.cGate::Name"* %0, %"struct.cGate::Name"* dereferenceable(32) %1), !dbg !9104
  ret i1 %call, !dbg !9105
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %__x) #0 comdat align 2 !dbg !9106 {
entry:
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__x.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8, !dbg !9109
  %1 = bitcast %"struct.std::_Rb_tree_node_base"* %0 to %"struct.std::_Rb_tree_node"*, !dbg !9110
  %call = call dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node"* %1), !dbg !9111
  ret %"struct.cGate::Name"* %call, !dbg !9112
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node"* %__x) #0 comdat align 2 !dbg !9113 {
entry:
  %__x.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  %ref.tmp = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %__x, %"struct.std::_Rb_tree_node"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__x.addr, metadata !9114, metadata !DIExpression()), !dbg !9115
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr, align 8, !dbg !9116
  %call = call %"struct.cGate::Name"* @_ZNKSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %0), !dbg !9117
  %call1 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_(%"struct.std::_Identity"* %ref.tmp, %"struct.cGate::Name"* dereferenceable(32) %call), !dbg !9118
  ret %"struct.cGate::Name"* %call1, !dbg !9119
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %this, %"struct.std::_Rb_tree_node_base"* %__x) unnamed_addr #5 comdat align 2 !dbg !9120 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %this, %"struct.std::_Rb_tree_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %this.addr, metadata !9121, metadata !DIExpression()), !dbg !9123
  store %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__x.addr, metadata !9124, metadata !DIExpression()), !dbg !9125
  %this1 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %this1, i32 0, i32 0, !dbg !9126
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8, !dbg !9127
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9126
  ret void, !dbg !9128
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.cGate::Name"* @_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_(%"struct.std::_Identity"* %this, %"struct.cGate::Name"* dereferenceable(32) %__x) #5 comdat align 2 !dbg !9129 {
entry:
  %this.addr = alloca %"struct.std::_Identity"*, align 8
  %__x.addr = alloca %"struct.cGate::Name"*, align 8
  store %"struct.std::_Identity"* %this, %"struct.std::_Identity"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Identity"** %this.addr, metadata !9130, metadata !DIExpression()), !dbg !9132
  store %"struct.cGate::Name"* %__x, %"struct.cGate::Name"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__x.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  %this1 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %this.addr, align 8
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__x.addr, align 8, !dbg !9135
  ret %"struct.cGate::Name"* %0, !dbg !9136
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.cGate::Name"* @_ZNKSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %this) #5 comdat align 2 !dbg !9137 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %this, %"struct.std::_Rb_tree_node"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %this.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  %this1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %this1, i32 0, i32 1, !dbg !9140
  %call = call %"struct.cGate::Name"* @_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %_M_storage) #3, !dbg !9141
  ret %"struct.cGate::Name"* %call, !dbg !9142
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.cGate::Name"* @_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %this) #5 comdat align 2 !dbg !9143 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, metadata !9144, metadata !DIExpression()), !dbg !9146
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %call = call i8* @_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %this1) #3, !dbg !9147
  %0 = bitcast i8* %call to %"struct.cGate::Name"*, !dbg !9148
  ret %"struct.cGate::Name"* %0, !dbg !9149
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %this) #5 comdat align 2 !dbg !9150 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, metadata !9151, metadata !DIExpression()), !dbg !9152
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %this1, i32 0, i32 0, !dbg !9153
  %0 = bitcast [32 x i8]* %_M_storage to i8*, !dbg !9154
  ret i8* %0, !dbg !9155
}

declare dso_local zeroext i1 @_ZNK5cGate4NameltERKS0_(%"struct.cGate::Name"*, %"struct.cGate::Name"* dereferenceable(32)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 !dbg !9156 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9157, metadata !DIExpression()), !dbg !9159
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9160
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to i8*, !dbg !9161
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 8, !dbg !9161
  %1 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !9161
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %1, i32 0, i32 0, !dbg !9162
  call void @_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %retval, %"struct.std::_Rb_tree_node_base"* %_M_header) #3, !dbg !9163
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %retval, i32 0, i32 0, !dbg !9164
  %2 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9164
  ret %"struct.std::_Rb_tree_node_base"* %2, !dbg !9164
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %this, %"struct.std::_Rb_tree_node_base"* %__x) unnamed_addr #5 comdat align 2 !dbg !9165 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %this, %"struct.std::_Rb_tree_const_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_const_iterator"** %this.addr, metadata !9166, metadata !DIExpression()), !dbg !9167
  store %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__x.addr, metadata !9168, metadata !DIExpression()), !dbg !9169
  %this1 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %this1, i32 0, i32 0, !dbg !9170
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8, !dbg !9171
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9170
  ret void, !dbg !9172
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE16_M_insert_uniqueIRKS1_EESt4pairISt17_Rb_tree_iteratorIS1_EbEOT_(%"class.std::_Rb_tree.24"* %this, %"struct.cGate::Name"* dereferenceable(32) %__v) #0 comdat align 2 !dbg !9173 {
entry:
  %retval = alloca %"struct.std::pair.36", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__v.addr = alloca %"struct.cGate::Name"*, align 8
  %__res = alloca %"struct.std::pair.40", align 8
  %ref.tmp = alloca %"struct.std::_Identity", align 1
  %__an = alloca %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node", align 8
  %ref.tmp3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %ref.tmp7 = alloca i8, align 1
  %ref.tmp8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %ref.tmp10 = alloca i8, align 1
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9179, metadata !DIExpression()), !dbg !9180
  store %"struct.cGate::Name"* %__v, %"struct.cGate::Name"** %__v.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__v.addr, metadata !9181, metadata !DIExpression()), !dbg !9182
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::pair.40"* %__res, metadata !9183, metadata !DIExpression()), !dbg !9184
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__v.addr, align 8, !dbg !9185
  %call = call dereferenceable(32) %"struct.cGate::Name"* @_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_(%"struct.std::_Identity"* %ref.tmp, %"struct.cGate::Name"* dereferenceable(32) %0), !dbg !9186
  %call2 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_(%"class.std::_Rb_tree.24"* %this1, %"struct.cGate::Name"* dereferenceable(32) %call), !dbg !9187
  %1 = bitcast %"struct.std::pair.40"* %__res to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*, !dbg !9187
  %2 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %1, i32 0, i32 0, !dbg !9187
  %3 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %call2, 0, !dbg !9187
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %2, align 8, !dbg !9187
  %4 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %1, i32 0, i32 1, !dbg !9187
  %5 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %call2, 1, !dbg !9187
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %4, align 8, !dbg !9187
  %second = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %__res, i32 0, i32 1, !dbg !9188
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %second, align 8, !dbg !9188
  %tobool = icmp ne %"struct.std::_Rb_tree_node_base"* %6, null, !dbg !9190
  br i1 %tobool, label %if.then, label %if.end, !dbg !9191

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %__an, metadata !9192, metadata !DIExpression()), !dbg !9201
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeC2ERS7_(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %__an, %"class.std::_Rb_tree.24"* dereferenceable(48) %this1), !dbg !9201
  %first = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %__res, i32 0, i32 0, !dbg !9202
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %first, align 8, !dbg !9202
  %second4 = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %__res, i32 0, i32 1, !dbg !9203
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %second4, align 8, !dbg !9203
  %9 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__v.addr, align 8, !dbg !9204
  %call5 = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %9) #3, !dbg !9204
  %call6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_M_insert_IRKS1_NS7_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS1_EPSt18_Rb_tree_node_baseSF_OT_RT0_(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"* %8, %"struct.cGate::Name"* dereferenceable(32) %call5, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* dereferenceable(8) %__an), !dbg !9205
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %ref.tmp3, i32 0, i32 0, !dbg !9205
  store %"struct.std::_Rb_tree_node_base"* %call6, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9205
  store i8 1, i8* %ref.tmp7, align 1, !dbg !9206
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEC2IS3_bLb1EEEOT_OT0_(%"struct.std::pair.36"* %retval, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %ref.tmp3, i8* dereferenceable(1) %ref.tmp7), !dbg !9207
  br label %return, !dbg !9208

if.end:                                           ; preds = %entry
  %first9 = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %__res, i32 0, i32 0, !dbg !9209
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %first9, align 8, !dbg !9209
  call void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %ref.tmp8, %"struct.std::_Rb_tree_node_base"* %10) #3, !dbg !9210
  store i8 0, i8* %ref.tmp10, align 1, !dbg !9211
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEC2IS3_bLb1EEEOT_OT0_(%"struct.std::pair.36"* %retval, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %ref.tmp8, i8* dereferenceable(1) %ref.tmp10), !dbg !9212
  br label %return, !dbg !9213

return:                                           ; preds = %if.end, %if.then
  %11 = bitcast %"struct.std::pair.36"* %retval to { %"struct.std::_Rb_tree_node_base"*, i8 }*, !dbg !9214
  %12 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, align 8, !dbg !9214
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %12, !dbg !9214
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEC2IRSt17_Rb_tree_iteratorIS2_ERbLb1EEEOT_OT0_(%"struct.std::pair"* %this, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__x, i8* dereferenceable(1) %__y) unnamed_addr #5 comdat align 2 !dbg !9215 {
entry:
  %this.addr = alloca %"struct.std::pair"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %__y.addr = alloca i8*, align 8
  store %"struct.std::pair"* %this, %"struct.std::pair"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::pair"** %this.addr, metadata !9224, metadata !DIExpression()), !dbg !9226
  store %"struct.std::_Rb_tree_iterator"* %__x, %"struct.std::_Rb_tree_iterator"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__x.addr, metadata !9227, metadata !DIExpression()), !dbg !9228
  store i8* %__y, i8** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__y.addr, metadata !9229, metadata !DIExpression()), !dbg !9230
  %this1 = load %"struct.std::pair"*, %"struct.std::pair"** %this.addr, align 8
  %0 = bitcast %"struct.std::pair"* %this1 to %"class.std::__pair_base"*, !dbg !9231
  %first = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %this1, i32 0, i32 0, !dbg !9232
  %1 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__x.addr, align 8, !dbg !9233
  %call = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %1) #3, !dbg !9234
  call void @_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %first, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %call) #3, !dbg !9232
  %second = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %this1, i32 0, i32 1, !dbg !9235
  %2 = load i8*, i8** %__y.addr, align 8, !dbg !9236
  %call2 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %2) #3, !dbg !9237
  %3 = load i8, i8* %call2, align 1, !dbg !9237
  %tobool = trunc i8 %3 to i1, !dbg !9237
  %frombool = zext i1 %tobool to i8, !dbg !9235
  store i8 %frombool, i8* %second, align 8, !dbg !9235
  ret void, !dbg !9238
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_(%"class.std::_Rb_tree.24"* %this, %"struct.cGate::Name"* dereferenceable(32) %__k) #0 comdat align 2 !dbg !9239 {
entry:
  %retval = alloca %"struct.std::pair.40", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__k.addr = alloca %"struct.cGate::Name"*, align 8
  %__x = alloca %"struct.std::_Rb_tree_node"*, align 8
  %__y = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %__comp = alloca i8, align 1
  %__j = alloca %"struct.std::_Rb_tree_iterator", align 8
  %ref.tmp = alloca %"struct.std::_Rb_tree_iterator", align 8
  %ref.tmp20 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9240, metadata !DIExpression()), !dbg !9241
  store %"struct.cGate::Name"* %__k, %"struct.cGate::Name"** %__k.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__k.addr, metadata !9242, metadata !DIExpression()), !dbg !9243
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__x, metadata !9244, metadata !DIExpression()), !dbg !9245
  %call = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9246
  store %"struct.std::_Rb_tree_node"* %call, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9245
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__y, metadata !9247, metadata !DIExpression()), !dbg !9248
  %call2 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9249
  store %"struct.std::_Rb_tree_node_base"* %call2, %"struct.std::_Rb_tree_node_base"** %__y, align 8, !dbg !9248
  call void @llvm.dbg.declare(metadata i8* %__comp, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i8 1, i8* %__comp, align 1, !dbg !9251
  br label %while.cond, !dbg !9252

while.cond:                                       ; preds = %cond.end, %entry
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9253
  %cmp = icmp ne %"struct.std::_Rb_tree_node"* %0, null, !dbg !9254
  br i1 %cmp, label %while.body, label %while.end, !dbg !9252

while.body:                                       ; preds = %while.cond
  %1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9255
  %2 = bitcast %"struct.std::_Rb_tree_node"* %1 to %"struct.std::_Rb_tree_node_base"*, !dbg !9255
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %__y, align 8, !dbg !9257
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9258
  %3 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to %"struct.std::_Rb_tree_key_compare.28"*, !dbg !9258
  %_M_key_compare = getelementptr inbounds %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_key_compare.28"* %3, i32 0, i32 0, !dbg !9259
  %4 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__k.addr, align 8, !dbg !9260
  %5 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9261
  %call3 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node"* %5), !dbg !9262
  %call4 = call zeroext i1 @_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_(%"struct.std::less.29"* %_M_key_compare, %"struct.cGate::Name"* dereferenceable(32) %4, %"struct.cGate::Name"* dereferenceable(32) %call3), !dbg !9258
  %frombool = zext i1 %call4 to i8, !dbg !9263
  store i8 %frombool, i8* %__comp, align 1, !dbg !9263
  %6 = load i8, i8* %__comp, align 1, !dbg !9264
  %tobool = trunc i8 %6 to i1, !dbg !9264
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9264

cond.true:                                        ; preds = %while.body
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9265
  %8 = bitcast %"struct.std::_Rb_tree_node"* %7 to %"struct.std::_Rb_tree_node_base"*, !dbg !9265
  %call5 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %8) #3, !dbg !9266
  br label %cond.end, !dbg !9264

cond.false:                                       ; preds = %while.body
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9267
  %10 = bitcast %"struct.std::_Rb_tree_node"* %9 to %"struct.std::_Rb_tree_node_base"*, !dbg !9267
  %call6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %10) #3, !dbg !9268
  br label %cond.end, !dbg !9264

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"struct.std::_Rb_tree_node"* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !9264
  store %"struct.std::_Rb_tree_node"* %cond, %"struct.std::_Rb_tree_node"** %__x, align 8, !dbg !9269
  br label %while.cond, !dbg !9252, !llvm.loop !9270

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"* %__j, metadata !9272, metadata !DIExpression()), !dbg !9273
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__y, align 8, !dbg !9274
  call void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %__j, %"struct.std::_Rb_tree_node_base"* %11) #3, !dbg !9275
  %12 = load i8, i8* %__comp, align 1, !dbg !9276
  %tobool7 = trunc i8 %12 to i1, !dbg !9276
  br i1 %tobool7, label %if.then, label %if.end12, !dbg !9278

if.then:                                          ; preds = %while.end
  %call8 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9279
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %ref.tmp, i32 0, i32 0, !dbg !9279
  store %"struct.std::_Rb_tree_node_base"* %call8, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9279
  %call9 = call zeroext i1 @_ZSteqRKSt17_Rb_tree_iteratorIN5cGate4NameEES4_(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__j, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %ref.tmp) #3, !dbg !9282
  br i1 %call9, label %if.then10, label %if.else, !dbg !9283

if.then10:                                        ; preds = %if.then
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIN5cGate4NameEERS1_Lb1EEEOT_OT0_(%"struct.std::pair.40"* %retval, %"struct.std::_Rb_tree_node"** dereferenceable(8) %__x, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %__y), !dbg !9284
  br label %return, !dbg !9285

if.else:                                          ; preds = %if.then
  %call11 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEmmEv(%"struct.std::_Rb_tree_iterator"* %__j) #3, !dbg !9286
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end12, !dbg !9287

if.end12:                                         ; preds = %if.end, %while.end
  %_M_impl13 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9288
  %13 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl13 to %"struct.std::_Rb_tree_key_compare.28"*, !dbg !9288
  %_M_key_compare14 = getelementptr inbounds %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_key_compare.28"* %13, i32 0, i32 0, !dbg !9290
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %__j, i32 0, i32 0, !dbg !9291
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9291
  %call15 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %14), !dbg !9292
  %15 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__k.addr, align 8, !dbg !9293
  %call16 = call zeroext i1 @_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_(%"struct.std::less.29"* %_M_key_compare14, %"struct.cGate::Name"* dereferenceable(32) %call15, %"struct.cGate::Name"* dereferenceable(32) %15), !dbg !9288
  br i1 %call16, label %if.then17, label %if.end18, !dbg !9294

if.then17:                                        ; preds = %if.end12
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIN5cGate4NameEERS1_Lb1EEEOT_OT0_(%"struct.std::pair.40"* %retval, %"struct.std::_Rb_tree_node"** dereferenceable(8) %__x, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %__y), !dbg !9295
  br label %return, !dbg !9296

if.end18:                                         ; preds = %if.end12
  %_M_node19 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %__j, i32 0, i32 0, !dbg !9297
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %ref.tmp20, align 8, !dbg !9298
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_(%"struct.std::pair.40"* %retval, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %_M_node19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %ref.tmp20), !dbg !9299
  br label %return, !dbg !9300

return:                                           ; preds = %if.end18, %if.then17, %if.then10
  %16 = bitcast %"struct.std::pair.40"* %retval to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*, !dbg !9301
  %17 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %16, align 8, !dbg !9301
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %17, !dbg !9301
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeC2ERS7_(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %this, %"class.std::_Rb_tree.24"* dereferenceable(48) %__t) unnamed_addr #5 comdat align 2 !dbg !9302 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"*, align 8
  %__t.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %this, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %this.addr, metadata !9303, metadata !DIExpression()), !dbg !9305
  store %"class.std::_Rb_tree.24"* %__t, %"class.std::_Rb_tree.24"** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %__t.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  %this1 = load %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"*, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node", %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %this1, i32 0, i32 0, !dbg !9308
  %0 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %__t.addr, align 8, !dbg !9309
  store %"class.std::_Rb_tree.24"* %0, %"class.std::_Rb_tree.24"** %_M_t, align 8, !dbg !9308
  ret void, !dbg !9310
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_M_insert_IRKS1_NS7_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS1_EPSt18_Rb_tree_node_baseSF_OT_RT0_(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"* %__p, %"struct.cGate::Name"* dereferenceable(32) %__v, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* dereferenceable(8) %__node_gen) #0 comdat align 2 !dbg !9311 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_iterator", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %__p.addr = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %__v.addr = alloca %"struct.cGate::Name"*, align 8
  %__node_gen.addr = alloca %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"*, align 8
  %__insert_left = alloca i8, align 1
  %ref.tmp = alloca %"struct.std::_Identity", align 1
  %__z = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9318, metadata !DIExpression()), !dbg !9319
  store %"struct.std::_Rb_tree_node_base"* %__x, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__x.addr, metadata !9320, metadata !DIExpression()), !dbg !9321
  store %"struct.std::_Rb_tree_node_base"* %__p, %"struct.std::_Rb_tree_node_base"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"** %__p.addr, metadata !9322, metadata !DIExpression()), !dbg !9323
  store %"struct.cGate::Name"* %__v, %"struct.cGate::Name"** %__v.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__v.addr, metadata !9324, metadata !DIExpression()), !dbg !9325
  store %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %__node_gen, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %__node_gen.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %__node_gen.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i8* %__insert_left, metadata !9328, metadata !DIExpression()), !dbg !9329
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__x.addr, align 8, !dbg !9330
  %cmp = icmp ne %"struct.std::_Rb_tree_node_base"* %0, null, !dbg !9331
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !9332

lor.lhs.false:                                    ; preds = %entry
  %1 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__p.addr, align 8, !dbg !9333
  %call = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9334
  %cmp2 = icmp eq %"struct.std::_Rb_tree_node_base"* %1, %call, !dbg !9335
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !9336

lor.rhs:                                          ; preds = %lor.lhs.false
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9337
  %2 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to %"struct.std::_Rb_tree_key_compare.28"*, !dbg !9337
  %_M_key_compare = getelementptr inbounds %"struct.std::_Rb_tree_key_compare.28", %"struct.std::_Rb_tree_key_compare.28"* %2, i32 0, i32 0, !dbg !9338
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__v.addr, align 8, !dbg !9339
  %call3 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_(%"struct.std::_Identity"* %ref.tmp, %"struct.cGate::Name"* dereferenceable(32) %3), !dbg !9340
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__p.addr, align 8, !dbg !9341
  %call4 = call dereferenceable(32) %"struct.cGate::Name"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4), !dbg !9342
  %call5 = call zeroext i1 @_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_(%"struct.std::less.29"* %_M_key_compare, %"struct.cGate::Name"* dereferenceable(32) %call3, %"struct.cGate::Name"* dereferenceable(32) %call4), !dbg !9337
  br label %lor.end, !dbg !9336

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call5, %lor.rhs ]
  %frombool = zext i1 %5 to i8, !dbg !9329
  store i8 %frombool, i8* %__insert_left, align 1, !dbg !9329
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__z, metadata !9343, metadata !DIExpression()), !dbg !9344
  %6 = load %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"*, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %__node_gen.addr, align 8, !dbg !9345
  %7 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__v.addr, align 8, !dbg !9346
  %call6 = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %7) #3, !dbg !9346
  %call7 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeclIRKS1_EEPSt13_Rb_tree_nodeIS1_EOT_(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %6, %"struct.cGate::Name"* dereferenceable(32) %call6), !dbg !9345
  store %"struct.std::_Rb_tree_node"* %call7, %"struct.std::_Rb_tree_node"** %__z, align 8, !dbg !9344
  %8 = load i8, i8* %__insert_left, align 1, !dbg !9347
  %tobool = trunc i8 %8 to i1, !dbg !9347
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__z, align 8, !dbg !9348
  %10 = bitcast %"struct.std::_Rb_tree_node"* %9 to %"struct.std::_Rb_tree_node_base"*, !dbg !9348
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %__p.addr, align 8, !dbg !9349
  %_M_impl8 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9350
  %12 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl8 to i8*, !dbg !9351
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 8, !dbg !9351
  %13 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !9351
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %13, i32 0, i32 0, !dbg !9352
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %tobool, %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %_M_header) #3, !dbg !9353
  %_M_impl9 = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9354
  %14 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl9 to i8*, !dbg !9354
  %add.ptr10 = getelementptr inbounds i8, i8* %14, i64 8, !dbg !9354
  %15 = bitcast i8* %add.ptr10 to %"struct.std::_Rb_tree_header"*, !dbg !9354
  %_M_node_count = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %15, i32 0, i32 1, !dbg !9355
  %16 = load i64, i64* %_M_node_count, align 8, !dbg !9356
  %inc = add i64 %16, 1, !dbg !9356
  store i64 %inc, i64* %_M_node_count, align 8, !dbg !9356
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__z, align 8, !dbg !9357
  %18 = bitcast %"struct.std::_Rb_tree_node"* %17 to %"struct.std::_Rb_tree_node_base"*, !dbg !9357
  call void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %retval, %"struct.std::_Rb_tree_node_base"* %18) #3, !dbg !9358
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %retval, i32 0, i32 0, !dbg !9359
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9359
  ret %"struct.std::_Rb_tree_node_base"* %19, !dbg !9359
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %__t) #5 comdat !dbg !9360 {
entry:
  %__t.addr = alloca %"struct.cGate::Name"*, align 8
  store %"struct.cGate::Name"* %__t, %"struct.cGate::Name"** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__t.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__t.addr, align 8, !dbg !9370
  ret %"struct.cGate::Name"* %0, !dbg !9371
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEC2IS3_bLb1EEEOT_OT0_(%"struct.std::pair.36"* %this, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__x, i8* dereferenceable(1) %__y) unnamed_addr #5 comdat align 2 !dbg !9372 {
entry:
  %this.addr = alloca %"struct.std::pair.36"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %__y.addr = alloca i8*, align 8
  store %"struct.std::pair.36"* %this, %"struct.std::pair.36"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::pair.36"** %this.addr, metadata !9379, metadata !DIExpression()), !dbg !9381
  store %"struct.std::_Rb_tree_iterator"* %__x, %"struct.std::_Rb_tree_iterator"** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__x.addr, metadata !9382, metadata !DIExpression()), !dbg !9383
  store i8* %__y, i8** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__y.addr, metadata !9384, metadata !DIExpression()), !dbg !9385
  %this1 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %this.addr, align 8
  %0 = bitcast %"struct.std::pair.36"* %this1 to %"class.std::__pair_base.37"*, !dbg !9386
  %first = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %this1, i32 0, i32 0, !dbg !9387
  %1 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__x.addr, align 8, !dbg !9388
  %call = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %1) #3, !dbg !9389
  %2 = bitcast %"struct.std::_Rb_tree_iterator"* %first to i8*, !dbg !9387
  %3 = bitcast %"struct.std::_Rb_tree_iterator"* %call to i8*, !dbg !9387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !9387
  %second = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %this1, i32 0, i32 1, !dbg !9390
  %4 = load i8*, i8** %__y.addr, align 8, !dbg !9391
  %call2 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %4) #3, !dbg !9392
  %5 = load i8, i8* %call2, align 1, !dbg !9392
  %tobool = trunc i8 %5 to i1, !dbg !9392
  %frombool = zext i1 %tobool to i8, !dbg !9390
  store i8 %frombool, i8* %second, align 8, !dbg !9390
  ret void, !dbg !9393
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.24"* %this) #5 comdat align 2 !dbg !9394 {
entry:
  %retval = alloca %"struct.std::_Rb_tree_iterator", align 8
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9395, metadata !DIExpression()), !dbg !9396
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::_Rb_tree.24", %"class.std::_Rb_tree.24"* %this1, i32 0, i32 0, !dbg !9397
  %0 = bitcast %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Rb_tree_impl"* %_M_impl to i8*, !dbg !9398
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 8, !dbg !9398
  %1 = bitcast i8* %add.ptr to %"struct.std::_Rb_tree_header"*, !dbg !9398
  %_M_header = getelementptr inbounds %"struct.std::_Rb_tree_header", %"struct.std::_Rb_tree_header"* %1, i32 0, i32 0, !dbg !9399
  %_M_left = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_header, i32 0, i32 2, !dbg !9400
  %2 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_left, align 8, !dbg !9400
  call void @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %retval, %"struct.std::_Rb_tree_node_base"* %2) #3, !dbg !9401
  %coerce.dive = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %retval, i32 0, i32 0, !dbg !9402
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %coerce.dive, align 8, !dbg !9402
  ret %"struct.std::_Rb_tree_node_base"* %3, !dbg !9402
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIN5cGate4NameEERS1_Lb1EEEOT_OT0_(%"struct.std::pair.40"* %this, %"struct.std::_Rb_tree_node"** dereferenceable(8) %__x, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %__y) unnamed_addr #5 comdat align 2 !dbg !9403 {
entry:
  %this.addr = alloca %"struct.std::pair.40"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node"**, align 8
  %__y.addr = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.40"* %this, %"struct.std::pair.40"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::pair.40"** %this.addr, metadata !9412, metadata !DIExpression()), !dbg !9414
  store %"struct.std::_Rb_tree_node"** %__x, %"struct.std::_Rb_tree_node"*** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"*** %__x.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  store %"struct.std::_Rb_tree_node_base"** %__y, %"struct.std::_Rb_tree_node_base"*** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"*** %__y.addr, metadata !9417, metadata !DIExpression()), !dbg !9418
  %this1 = load %"struct.std::pair.40"*, %"struct.std::pair.40"** %this.addr, align 8
  %0 = bitcast %"struct.std::pair.40"* %this1 to %"class.std::__pair_base.41"*, !dbg !9419
  %first = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %this1, i32 0, i32 0, !dbg !9420
  %1 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %__x.addr, align 8, !dbg !9421
  %call = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIN5cGate4NameEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %1) #3, !dbg !9422
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %call, align 8, !dbg !9422
  %3 = bitcast %"struct.std::_Rb_tree_node"* %2 to %"struct.std::_Rb_tree_node_base"*, !dbg !9422
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %first, align 8, !dbg !9420
  %second = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %this1, i32 0, i32 1, !dbg !9423
  %4 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %__y.addr, align 8, !dbg !9424
  %call2 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %4) #3, !dbg !9425
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %call2, align 8, !dbg !9425
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %second, align 8, !dbg !9423
  ret void, !dbg !9426
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEmmEv(%"struct.std::_Rb_tree_iterator"* %this) #5 comdat align 2 !dbg !9427 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %this, %"struct.std::_Rb_tree_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %this.addr, metadata !9428, metadata !DIExpression()), !dbg !9429
  %this1 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %this1, i32 0, i32 0, !dbg !9430
  %0 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %_M_node, align 8, !dbg !9430
  %call = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %0) #9, !dbg !9431
  %_M_node2 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %this1, i32 0, i32 0, !dbg !9432
  store %"struct.std::_Rb_tree_node_base"* %call, %"struct.std::_Rb_tree_node_base"** %_M_node2, align 8, !dbg !9433
  ret %"struct.std::_Rb_tree_iterator"* %this1, !dbg !9434
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_(%"struct.std::pair.40"* %this, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %__x, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %__y) unnamed_addr #5 comdat align 2 !dbg !9435 {
entry:
  %this.addr = alloca %"struct.std::pair.40"*, align 8
  %__x.addr = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %__y.addr = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.40"* %this, %"struct.std::pair.40"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::pair.40"** %this.addr, metadata !9443, metadata !DIExpression()), !dbg !9444
  store %"struct.std::_Rb_tree_node_base"** %__x, %"struct.std::_Rb_tree_node_base"*** %__x.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"*** %__x.addr, metadata !9445, metadata !DIExpression()), !dbg !9446
  store %"struct.std::_Rb_tree_node_base"** %__y, %"struct.std::_Rb_tree_node_base"*** %__y.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"*** %__y.addr, metadata !9447, metadata !DIExpression()), !dbg !9448
  %this1 = load %"struct.std::pair.40"*, %"struct.std::pair.40"** %this.addr, align 8
  %0 = bitcast %"struct.std::pair.40"* %this1 to %"class.std::__pair_base.41"*, !dbg !9449
  %first = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %this1, i32 0, i32 0, !dbg !9450
  %1 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %__x.addr, align 8, !dbg !9451
  %call = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %1) #3, !dbg !9452
  %2 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %call, align 8, !dbg !9452
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %first, align 8, !dbg !9450
  %second = getelementptr inbounds %"struct.std::pair.40", %"struct.std::pair.40"* %this1, i32 0, i32 1, !dbg !9453
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %__y.addr, align 8, !dbg !9454
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8, !dbg !9454
  store %"struct.std::_Rb_tree_node_base"* %4, %"struct.std::_Rb_tree_node_base"** %second, align 8, !dbg !9453
  ret void, !dbg !9455
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIN5cGate4NameEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %__t) #5 comdat !dbg !9456 {
entry:
  %__t.addr = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %__t, %"struct.std::_Rb_tree_node"*** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"*** %__t.addr, metadata !9464, metadata !DIExpression()), !dbg !9465
  %0 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %__t.addr, align 8, !dbg !9466
  ret %"struct.std::_Rb_tree_node"** %0, !dbg !9467
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %__t) #5 comdat !dbg !9468 {
entry:
  %__t.addr = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %__t, %"struct.std::_Rb_tree_node_base"*** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node_base"*** %__t.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  %0 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %__t.addr, align 8, !dbg !9478
  ret %"struct.std::_Rb_tree_node_base"** %0, !dbg !9479
}

; Function Attrs: nounwind readonly
declare dso_local %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeclIRKS1_EEPSt13_Rb_tree_nodeIS1_EOT_(%"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %this, %"struct.cGate::Name"* dereferenceable(32) %__arg) #0 comdat align 2 !dbg !9480 {
entry:
  %this.addr = alloca %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"*, align 8
  %__arg.addr = alloca %"struct.cGate::Name"*, align 8
  store %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %this, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %this.addr, metadata !9486, metadata !DIExpression()), !dbg !9488
  store %"struct.cGate::Name"* %__arg, %"struct.cGate::Name"** %__arg.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__arg.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  %this1 = load %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"*, %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"** %this.addr, align 8
  %_M_t = getelementptr inbounds %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node", %"struct.std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node"* %this1, i32 0, i32 0, !dbg !9491
  %0 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %_M_t, align 8, !dbg !9491
  %1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__arg.addr, align 8, !dbg !9492
  %call = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %1) #3, !dbg !9492
  %call2 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRKS1_EEEPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.24"* %0, %"struct.cGate::Name"* dereferenceable(32) %call), !dbg !9493
  ret %"struct.std::_Rb_tree_node"* %call2, !dbg !9494
}

; Function Attrs: nounwind
declare dso_local void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRKS1_EEEPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.24"* %this, %"struct.cGate::Name"* dereferenceable(32) %__args) #0 comdat align 2 !dbg !9495 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__args.addr = alloca %"struct.cGate::Name"*, align 8
  %__tmp = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9503, metadata !DIExpression()), !dbg !9504
  store %"struct.cGate::Name"* %__args, %"struct.cGate::Name"** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__args.addr, metadata !9505, metadata !DIExpression()), !dbg !9506
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__tmp, metadata !9507, metadata !DIExpression()), !dbg !9508
  %call = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv(%"class.std::_Rb_tree.24"* %this1), !dbg !9509
  store %"struct.std::_Rb_tree_node"* %call, %"struct.std::_Rb_tree_node"** %__tmp, align 8, !dbg !9508
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__tmp, align 8, !dbg !9510
  %1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__args.addr, align 8, !dbg !9511
  %call2 = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %1) #3, !dbg !9512
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRKS1_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %0, %"struct.cGate::Name"* dereferenceable(32) %call2), !dbg !9513
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__tmp, align 8, !dbg !9514
  ret %"struct.std::_Rb_tree_node"* %2, !dbg !9515
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv(%"class.std::_Rb_tree.24"* %this) #0 comdat align 2 !dbg !9516 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9517, metadata !DIExpression()), !dbg !9518
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %call = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9519
  %call2 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1) %call, i64 1), !dbg !9520
  ret %"struct.std::_Rb_tree_node"* %call2, !dbg !9521
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRKS1_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.24"* %this, %"struct.std::_Rb_tree_node"* %__node, %"struct.cGate::Name"* dereferenceable(32) %__args) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !9522 {
entry:
  %this.addr = alloca %"class.std::_Rb_tree.24"*, align 8
  %__node.addr = alloca %"struct.std::_Rb_tree_node"*, align 8
  %__args.addr = alloca %"struct.cGate::Name"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::_Rb_tree.24"* %this, %"class.std::_Rb_tree.24"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::_Rb_tree.24"** %this.addr, metadata !9526, metadata !DIExpression()), !dbg !9527
  store %"struct.std::_Rb_tree_node"* %__node, %"struct.std::_Rb_tree_node"** %__node.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_node"** %__node.addr, metadata !9528, metadata !DIExpression()), !dbg !9529
  store %"struct.cGate::Name"* %__args, %"struct.cGate::Name"** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__args.addr, metadata !9530, metadata !DIExpression()), !dbg !9531
  %this1 = load %"class.std::_Rb_tree.24"*, %"class.std::_Rb_tree.24"** %this.addr, align 8
  %0 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__node.addr, align 8, !dbg !9532
  %1 = bitcast %"struct.std::_Rb_tree_node"* %0 to i8*, !dbg !9534
  %2 = bitcast i8* %1 to %"struct.std::_Rb_tree_node"*, !dbg !9534
  %call = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.24"* %this1) #3, !dbg !9535
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__node.addr, align 8, !dbg !9536
  %call2 = invoke %"struct.cGate::Name"* @_ZNSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
          to label %invoke.cont unwind label %lpad, !dbg !9537

invoke.cont:                                      ; preds = %entry
  %4 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__args.addr, align 8, !dbg !9538
  %call3 = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %4) #3, !dbg !9539
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %call, %"struct.cGate::Name"* %call2, %"struct.cGate::Name"* dereferenceable(32) %call3)
          to label %invoke.cont4 unwind label %lpad, !dbg !9540

invoke.cont4:                                     ; preds = %invoke.cont
  br label %try.cont, !dbg !9541

lpad:                                             ; preds = %invoke.cont, %entry
  %5 = landingpad { i8*, i32 }
          catch i8* null, !dbg !9542
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !9542
  store i8* %6, i8** %exn.slot, align 8, !dbg !9542
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !9542
  store i32 %7, i32* %ehselector.slot, align 4, !dbg !9542
  br label %catch, !dbg !9542

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !9541
  %8 = call i8* @__cxa_begin_catch(i8* %exn) #3, !dbg !9541
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__node.addr, align 8, !dbg !9543
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__node.addr, align 8, !dbg !9545
  call void @_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.24"* %this1, %"struct.std::_Rb_tree_node"* %10) #3, !dbg !9546
  invoke void @__cxa_rethrow() #16
          to label %unreachable unwind label %lpad5, !dbg !9547

lpad5:                                            ; preds = %catch
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !9548
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !9548
  store i8* %12, i8** %exn.slot, align 8, !dbg !9548
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !9548
  store i32 %13, i32* %ehselector.slot, align 4, !dbg !9548
  invoke void @__cxa_end_catch()
          to label %invoke.cont6 unwind label %terminate.lpad, !dbg !9549

invoke.cont6:                                     ; preds = %lpad5
  br label %eh.resume, !dbg !9549

try.cont:                                         ; preds = %invoke.cont4
  ret void, !dbg !9550

eh.resume:                                        ; preds = %invoke.cont6
  %exn7 = load i8*, i8** %exn.slot, align 8, !dbg !9549
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !9549
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn7, 0, !dbg !9549
  %lpad.val8 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !9549
  resume { i8*, i32 } %lpad.val8, !dbg !9549

terminate.lpad:                                   ; preds = %lpad5
  %14 = landingpad { i8*, i32 }
          catch i8* null, !dbg !9549
  %15 = extractvalue { i8*, i32 } %14, 0, !dbg !9549
  call void @__clang_call_terminate(i8* %15) #18, !dbg !9549
  unreachable, !dbg !9549

unreachable:                                      ; preds = %catch
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8allocateERS4_m(%"class.std::allocator.25"* dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 !dbg !9551 {
entry:
  %__a.addr = alloca %"class.std::allocator.25"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.25"* %__a, %"class.std::allocator.25"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.25"** %__a.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  %0 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %__a.addr, align 8, !dbg !9556
  %1 = bitcast %"class.std::allocator.25"* %0 to %"class.__gnu_cxx::new_allocator.26"*, !dbg !9556
  %2 = load i64, i64* %__n.addr, align 8, !dbg !9557
  %call = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %1, i64 %2, i8* null), !dbg !9558
  ret %"struct.std::_Rb_tree_node"* %call, !dbg !9559
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %this, i64 %__n, i8* %0) #0 comdat align 2 !dbg !9560 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !9561, metadata !DIExpression()), !dbg !9562
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store i8* %0, i8** %.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !dbg !9567
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %this1) #3, !dbg !9569
  %cmp = icmp ugt i64 %1, %call, !dbg !9570
  br i1 %cmp, label %if.then, label %if.end, !dbg !9571

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #16, !dbg !9572
  unreachable, !dbg !9572

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !dbg !9573
  %mul = mul i64 %2, 64, !dbg !9574
  %call2 = call i8* @_Znwm(i64 %mul), !dbg !9575
  %3 = bitcast i8* %call2 to %"struct.std::_Rb_tree_node"*, !dbg !9576
  ret %"struct.std::_Rb_tree_node"* %3, !dbg !9577
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %this) #5 comdat align 2 !dbg !9578 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !9579, metadata !DIExpression()), !dbg !9581
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  ret i64 144115188075855871, !dbg !9582
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #14

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %__a, %"struct.cGate::Name"* %__p, %"struct.cGate::Name"* dereferenceable(32) %__args) #0 comdat align 2 !dbg !9583 {
entry:
  %__a.addr = alloca %"class.std::allocator.25"*, align 8
  %__p.addr = alloca %"struct.cGate::Name"*, align 8
  %__args.addr = alloca %"struct.cGate::Name"*, align 8
  store %"class.std::allocator.25"* %__a, %"class.std::allocator.25"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.25"** %__a.addr, metadata !9588, metadata !DIExpression()), !dbg !9589
  store %"struct.cGate::Name"* %__p, %"struct.cGate::Name"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__p.addr, metadata !9590, metadata !DIExpression()), !dbg !9591
  store %"struct.cGate::Name"* %__args, %"struct.cGate::Name"** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__args.addr, metadata !9592, metadata !DIExpression()), !dbg !9593
  %0 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %__a.addr, align 8, !dbg !9594
  %1 = bitcast %"class.std::allocator.25"* %0 to %"class.__gnu_cxx::new_allocator.26"*, !dbg !9594
  %2 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__p.addr, align 8, !dbg !9595
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__args.addr, align 8, !dbg !9596
  %call = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %3) #3, !dbg !9597
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"* %1, %"struct.cGate::Name"* %2, %"struct.cGate::Name"* dereferenceable(32) %call), !dbg !9598
  ret void, !dbg !9599
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"* %this, %"struct.cGate::Name"* %__p, %"struct.cGate::Name"* dereferenceable(32) %__args) #0 comdat align 2 !dbg !9600 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %__p.addr = alloca %"struct.cGate::Name"*, align 8
  %__args.addr = alloca %"struct.cGate::Name"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %this, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.26"** %this.addr, metadata !9604, metadata !DIExpression()), !dbg !9605
  store %"struct.cGate::Name"* %__p, %"struct.cGate::Name"** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__p.addr, metadata !9606, metadata !DIExpression()), !dbg !9607
  store %"struct.cGate::Name"* %__args, %"struct.cGate::Name"** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %__args.addr, metadata !9608, metadata !DIExpression()), !dbg !9609
  %this1 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %this.addr, align 8
  %0 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__p.addr, align 8, !dbg !9610
  %1 = bitcast %"struct.cGate::Name"* %0 to i8*, !dbg !9610
  %2 = bitcast i8* %1 to %"struct.cGate::Name"*, !dbg !9611
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %__args.addr, align 8, !dbg !9612
  %call = call dereferenceable(32) %"struct.cGate::Name"* @_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.cGate::Name"* dereferenceable(32) %3) #3, !dbg !9613
  call void @_ZN5cGate4NameC2ERKS0_(%"struct.cGate::Name"* %2, %"struct.cGate::Name"* dereferenceable(32) %call), !dbg !9614
  ret void, !dbg !9615
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN5cGate4NameC2ERKS0_(%"struct.cGate::Name"* %this, %"struct.cGate::Name"* dereferenceable(32) %0) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !9616 {
entry:
  %this.addr = alloca %"struct.cGate::Name"*, align 8
  %.addr = alloca %"struct.cGate::Name"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.cGate::Name"* %this, %"struct.cGate::Name"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %this.addr, metadata !9620, metadata !DIExpression()), !dbg !9621
  store %"struct.cGate::Name"* %0, %"struct.cGate::Name"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.cGate::Name"** %.addr, metadata !9622, metadata !DIExpression()), !dbg !9621
  %this1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %this.addr, align 8
  %name = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 0, !dbg !9623
  %1 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %.addr, align 8, !dbg !9623
  %name2 = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %1, i32 0, i32 0, !dbg !9623
  call void @_ZN10opp_stringC2ERKS_(%class.opp_string* %name, %class.opp_string* dereferenceable(8) %name2), !dbg !9623
  %namei = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 1, !dbg !9623
  %2 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %.addr, align 8, !dbg !9623
  %namei3 = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %2, i32 0, i32 1, !dbg !9623
  invoke void @_ZN10opp_stringC2ERKS_(%class.opp_string* %namei, %class.opp_string* dereferenceable(8) %namei3)
          to label %invoke.cont unwind label %lpad, !dbg !9623

invoke.cont:                                      ; preds = %entry
  %nameo = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 2, !dbg !9623
  %3 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %.addr, align 8, !dbg !9623
  %nameo4 = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %3, i32 0, i32 2, !dbg !9623
  invoke void @_ZN10opp_stringC2ERKS_(%class.opp_string* %nameo, %class.opp_string* dereferenceable(8) %nameo4)
          to label %invoke.cont6 unwind label %lpad5, !dbg !9623

invoke.cont6:                                     ; preds = %invoke.cont
  %type = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %this1, i32 0, i32 3, !dbg !9623
  %4 = load %"struct.cGate::Name"*, %"struct.cGate::Name"** %.addr, align 8, !dbg !9623
  %type7 = getelementptr inbounds %"struct.cGate::Name", %"struct.cGate::Name"* %4, i32 0, i32 3, !dbg !9623
  %5 = load i32, i32* %type7, align 8, !dbg !9623
  store i32 %5, i32* %type, align 8, !dbg !9623
  ret void, !dbg !9623

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !9623
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !9623
  store i8* %7, i8** %exn.slot, align 8, !dbg !9623
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !9623
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !9623
  br label %ehcleanup, !dbg !9623

lpad5:                                            ; preds = %invoke.cont
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !9623
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !9623
  store i8* %10, i8** %exn.slot, align 8, !dbg !9623
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !9623
  store i32 %11, i32* %ehselector.slot, align 4, !dbg !9623
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %namei) #3, !dbg !9624
  br label %ehcleanup, !dbg !9624

ehcleanup:                                        ; preds = %lpad5, %lpad
  call void @_ZN10opp_stringD2Ev(%class.opp_string* %name) #3, !dbg !9624
  br label %eh.resume, !dbg !9624

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !9624
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !9624
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !9624
  %lpad.val8 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !9624
  resume { i8*, i32 } %lpad.val8, !dbg !9624
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN10opp_stringC2ERKS_(%class.opp_string* %this, %class.opp_string* dereferenceable(8) %s) unnamed_addr #0 comdat align 2 !dbg !9626 {
entry:
  %this.addr = alloca %class.opp_string*, align 8
  %s.addr = alloca %class.opp_string*, align 8
  store %class.opp_string* %this, %class.opp_string** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string** %this.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  store %class.opp_string* %s, %class.opp_string** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %class.opp_string** %s.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  %this1 = load %class.opp_string*, %class.opp_string** %this.addr, align 8
  %0 = load %class.opp_string*, %class.opp_string** %s.addr, align 8, !dbg !9631
  %str = getelementptr inbounds %class.opp_string, %class.opp_string* %0, i32 0, i32 0, !dbg !9633
  %1 = load i8*, i8** %str, align 8, !dbg !9633
  %call = call i8* @_Z10opp_strdupPKc(i8* %1), !dbg !9634
  %str2 = getelementptr inbounds %class.opp_string, %class.opp_string* %this1, i32 0, i32 0, !dbg !9635
  store i8* %call, i8** %str2, align 8, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__t) #5 comdat !dbg !9638 {
entry:
  %__t.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %__t, %"struct.std::_Rb_tree_iterator"** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__t.addr, metadata !9646, metadata !DIExpression()), !dbg !9647
  %0 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__t.addr, align 8, !dbg !9648
  ret %"struct.std::_Rb_tree_iterator"* %0, !dbg !9649
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %__t) #5 comdat !dbg !9650 {
entry:
  %__t.addr = alloca i8*, align 8
  store i8* %__t, i8** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__t.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  %0 = load i8*, i8** %__t.addr, align 8, !dbg !9659
  ret i8* %0, !dbg !9660
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %__t) #5 comdat !dbg !9661 {
entry:
  %__t.addr = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %__t, %"struct.std::_Rb_tree_iterator"** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Rb_tree_iterator"** %__t.addr, metadata !9669, metadata !DIExpression()), !dbg !9670
  %0 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %__t.addr, align 8, !dbg !9671
  ret %"struct.std::_Rb_tree_iterator"* %0, !dbg !9672
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %__t) #5 comdat !dbg !9673 {
entry:
  %__t.addr = alloca i8*, align 8
  store i8* %__t, i8** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__t.addr, metadata !9681, metadata !DIExpression()), !dbg !9682
  %0 = load i8*, i8** %__t.addr, align 8, !dbg !9683
  ret i8* %0, !dbg !9684
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.13"* %this, i8** dereferenceable(8) %__args) #0 comdat align 2 !dbg !9685 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  %__args.addr = alloca i8**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9694, metadata !DIExpression()), !dbg !9695
  store i8** %__args, i8*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__args.addr, metadata !9696, metadata !DIExpression()), !dbg !9697
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9698
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %0, i32 0, i32 0, !dbg !9698
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9700
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !9701
  %2 = load i8**, i8*** %_M_finish, align 8, !dbg !9701
  %3 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9702
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0, !dbg !9702
  %4 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9703
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %4, i32 0, i32 2, !dbg !9704
  %5 = load i8**, i8*** %_M_end_of_storage, align 8, !dbg !9704
  %cmp = icmp ne i8** %2, %5, !dbg !9705
  br i1 %cmp, label %if.then, label %if.else, !dbg !9706

if.then:                                          ; preds = %entry
  %6 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9707
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0, !dbg !9707
  %7 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl3 to %"class.std::allocator.15"*, !dbg !9709
  %8 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9710
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %8, i32 0, i32 0, !dbg !9710
  %9 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9711
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %9, i32 0, i32 1, !dbg !9712
  %10 = load i8**, i8*** %_M_finish5, align 8, !dbg !9712
  %11 = load i8**, i8*** %__args.addr, align 8, !dbg !9713
  %call = call dereferenceable(8) i8** @_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE(i8** dereferenceable(8) %11) #3, !dbg !9714
  call void @_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %7, i8** %10, i8** dereferenceable(8) %call) #3, !dbg !9715
  %12 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9716
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %12, i32 0, i32 0, !dbg !9716
  %13 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl6 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9717
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %13, i32 0, i32 1, !dbg !9718
  %14 = load i8**, i8*** %_M_finish7, align 8, !dbg !9719
  %incdec.ptr = getelementptr inbounds i8*, i8** %14, i32 1, !dbg !9719
  store i8** %incdec.ptr, i8*** %_M_finish7, align 8, !dbg !9719
  br label %if.end, !dbg !9720

if.else:                                          ; preds = %entry
  %call8 = call i8** @_ZNSt6vectorIPKcSaIS1_EE3endEv(%"class.std::vector.13"* %this1) #3, !dbg !9721
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0, !dbg !9721
  store i8** %call8, i8*** %coerce.dive, align 8, !dbg !9721
  %15 = load i8**, i8*** %__args.addr, align 8, !dbg !9722
  %call9 = call dereferenceable(8) i8** @_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE(i8** dereferenceable(8) %15) #3, !dbg !9723
  %coerce.dive10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0, !dbg !9724
  %16 = load i8**, i8*** %coerce.dive10, align 8, !dbg !9724
  call void @_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.13"* %this1, i8** %16, i8** dereferenceable(8) %call9), !dbg !9724
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9725
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i8** @_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_(i8** dereferenceable(8) %__t) #5 comdat !dbg !9726 {
entry:
  %__t.addr = alloca i8**, align 8
  store i8** %__t, i8*** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__t.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  %0 = load i8**, i8*** %__t.addr, align 8, !dbg !9736
  ret i8** %0, !dbg !9737
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %__a, i8** %__p, i8** dereferenceable(8) %__args) #5 comdat align 2 !dbg !9738 {
entry:
  %__a.addr = alloca %"class.std::allocator.15"*, align 8
  %__p.addr = alloca i8**, align 8
  %__args.addr = alloca i8**, align 8
  store %"class.std::allocator.15"* %__a, %"class.std::allocator.15"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__a.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store i8** %__p, i8*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__p.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  store i8** %__args, i8*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__args.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  %0 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__a.addr, align 8, !dbg !9750
  %1 = bitcast %"class.std::allocator.15"* %0 to %"class.__gnu_cxx::new_allocator.16"*, !dbg !9750
  %2 = load i8**, i8*** %__p.addr, align 8, !dbg !9751
  %3 = load i8**, i8*** %__args.addr, align 8, !dbg !9752
  %call = call dereferenceable(8) i8** @_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE(i8** dereferenceable(8) %3) #3, !dbg !9753
  call void @_ZN9__gnu_cxx13new_allocatorIPKcE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %1, i8** %2, i8** dereferenceable(8) %call) #3, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i8** @_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE(i8** dereferenceable(8) %__t) #5 comdat !dbg !9756 {
entry:
  %__t.addr = alloca i8**, align 8
  store i8** %__t, i8*** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__t.addr, metadata !9762, metadata !DIExpression()), !dbg !9763
  %0 = load i8**, i8*** %__t.addr, align 8, !dbg !9764
  ret i8** %0, !dbg !9765
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.13"* %this, i8** %__position.coerce, i8** dereferenceable(8) %__args) #0 comdat align 2 !dbg !9766 {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector.13"*, align 8
  %__args.addr = alloca i8**, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca i8**, align 8
  %__old_finish = alloca i8**, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__new_start = alloca i8**, align 8
  %__new_finish = alloca i8**, align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__position, i32 0, i32 0
  store i8** %__position.coerce, i8*** %coerce.dive, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9770, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator"* %__position, metadata !9772, metadata !DIExpression()), !dbg !9773
  store i8** %__args, i8*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__args.addr, metadata !9774, metadata !DIExpression()), !dbg !9775
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !9776, metadata !DIExpression()), !dbg !9778
  %call = call i64 @_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_(%"class.std::vector.13"* %this1, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0)), !dbg !9779
  store i64 %call, i64* %__len, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata i8*** %__old_start, metadata !9780, metadata !DIExpression()), !dbg !9781
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9782
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %0, i32 0, i32 0, !dbg !9782
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9783
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !9784
  %2 = load i8**, i8*** %_M_start, align 8, !dbg !9784
  store i8** %2, i8*** %__old_start, align 8, !dbg !9781
  call void @llvm.dbg.declare(metadata i8*** %__old_finish, metadata !9785, metadata !DIExpression()), !dbg !9786
  %3 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9787
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0, !dbg !9787
  %4 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9788
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %4, i32 0, i32 1, !dbg !9789
  %5 = load i8**, i8*** %_M_finish, align 8, !dbg !9789
  store i8** %5, i8*** %__old_finish, align 8, !dbg !9786
  call void @llvm.dbg.declare(metadata i64* %__elems_before, metadata !9790, metadata !DIExpression()), !dbg !9791
  %call3 = call i8** @_ZNSt6vectorIPKcSaIS1_EE5beginEv(%"class.std::vector.13"* %this1) #3, !dbg !9792
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp, i32 0, i32 0, !dbg !9792
  store i8** %call3, i8*** %coerce.dive4, align 8, !dbg !9792
  %call5 = call i64 @_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %ref.tmp) #3, !dbg !9793
  store i64 %call5, i64* %__elems_before, align 8, !dbg !9791
  call void @llvm.dbg.declare(metadata i8*** %__new_start, metadata !9794, metadata !DIExpression()), !dbg !9795
  %6 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9796
  %7 = load i64, i64* %__len, align 8, !dbg !9797
  %call6 = call i8** @_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %6, i64 %7), !dbg !9796
  store i8** %call6, i8*** %__new_start, align 8, !dbg !9795
  call void @llvm.dbg.declare(metadata i8*** %__new_finish, metadata !9798, metadata !DIExpression()), !dbg !9799
  %8 = load i8**, i8*** %__new_start, align 8, !dbg !9800
  store i8** %8, i8*** %__new_finish, align 8, !dbg !9799
  %9 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9801
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %9, i32 0, i32 0, !dbg !9801
  %10 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl7 to %"class.std::allocator.15"*, !dbg !9803
  %11 = load i8**, i8*** %__new_start, align 8, !dbg !9804
  %12 = load i64, i64* %__elems_before, align 8, !dbg !9805
  %add.ptr = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !9806
  %13 = load i8**, i8*** %__args.addr, align 8, !dbg !9807
  %call8 = call dereferenceable(8) i8** @_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE(i8** dereferenceable(8) %13) #3, !dbg !9808
  call void @_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %10, i8** %add.ptr, i8** dereferenceable(8) %call8) #3, !dbg !9809
  store i8** null, i8*** %__new_finish, align 8, !dbg !9810
  %14 = load i8**, i8*** %__old_start, align 8, !dbg !9811
  %call9 = call dereferenceable(8) i8*** @_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3, !dbg !9814
  %15 = load i8**, i8*** %call9, align 8, !dbg !9814
  %16 = load i8**, i8*** %__new_start, align 8, !dbg !9815
  %17 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9816
  %call10 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %17) #3, !dbg !9816
  %call11 = call i8** @_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(i8** %14, i8** %15, i8** %16, %"class.std::allocator.15"* dereferenceable(1) %call10) #3, !dbg !9817
  store i8** %call11, i8*** %__new_finish, align 8, !dbg !9818
  %18 = load i8**, i8*** %__new_finish, align 8, !dbg !9819
  %incdec.ptr = getelementptr inbounds i8*, i8** %18, i32 1, !dbg !9819
  store i8** %incdec.ptr, i8*** %__new_finish, align 8, !dbg !9819
  %call12 = call dereferenceable(8) i8*** @_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3, !dbg !9820
  %19 = load i8**, i8*** %call12, align 8, !dbg !9820
  %20 = load i8**, i8*** %__old_finish, align 8, !dbg !9821
  %21 = load i8**, i8*** %__new_finish, align 8, !dbg !9822
  %22 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9823
  %call13 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %22) #3, !dbg !9823
  %call14 = call i8** @_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(i8** %19, i8** %20, i8** %21, %"class.std::allocator.15"* dereferenceable(1) %call13) #3, !dbg !9824
  store i8** %call14, i8*** %__new_finish, align 8, !dbg !9825
  %23 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9826
  %24 = load i8**, i8*** %__old_start, align 8, !dbg !9827
  %25 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9828
  %_M_impl15 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %25, i32 0, i32 0, !dbg !9828
  %26 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl15 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9829
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %26, i32 0, i32 2, !dbg !9830
  %27 = load i8**, i8*** %_M_end_of_storage, align 8, !dbg !9830
  %28 = load i8**, i8*** %__old_start, align 8, !dbg !9831
  %sub.ptr.lhs.cast = ptrtoint i8** %27 to i64, !dbg !9832
  %sub.ptr.rhs.cast = ptrtoint i8** %28 to i64, !dbg !9832
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9832
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !9832
  call void @_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.14"* %23, i8** %24, i64 %sub.ptr.div), !dbg !9826
  %29 = load i8**, i8*** %__new_start, align 8, !dbg !9833
  %30 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9834
  %_M_impl16 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %30, i32 0, i32 0, !dbg !9834
  %31 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl16 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9835
  %_M_start17 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %31, i32 0, i32 0, !dbg !9836
  store i8** %29, i8*** %_M_start17, align 8, !dbg !9837
  %32 = load i8**, i8*** %__new_finish, align 8, !dbg !9838
  %33 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9839
  %_M_impl18 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %33, i32 0, i32 0, !dbg !9839
  %34 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl18 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9840
  %_M_finish19 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %34, i32 0, i32 1, !dbg !9841
  store i8** %32, i8*** %_M_finish19, align 8, !dbg !9842
  %35 = load i8**, i8*** %__new_start, align 8, !dbg !9843
  %36 = load i64, i64* %__len, align 8, !dbg !9844
  %add.ptr20 = getelementptr inbounds i8*, i8** %35, i64 %36, !dbg !9845
  %37 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9846
  %_M_impl21 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %37, i32 0, i32 0, !dbg !9846
  %38 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl21 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9847
  %_M_end_of_storage22 = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %38, i32 0, i32 2, !dbg !9848
  store i8** %add.ptr20, i8*** %_M_end_of_storage22, align 8, !dbg !9849
  ret void, !dbg !9850
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZNSt6vectorIPKcSaIS1_EE3endEv(%"class.std::vector.13"* %this) #5 comdat align 2 !dbg !9851 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9854
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %0, i32 0, i32 0, !dbg !9854
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9855
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !9856
  call void @_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %retval, i8*** dereferenceable(8) %_M_finish) #3, !dbg !9857
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0, !dbg !9858
  %2 = load i8**, i8*** %coerce.dive, align 8, !dbg !9858
  ret i8** %2, !dbg !9858
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPKcE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %this, i8** %__p, i8** dereferenceable(8) %__args) #5 comdat align 2 !dbg !9859 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %__p.addr = alloca i8**, align 8
  %__args.addr = alloca i8**, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !9863, metadata !DIExpression()), !dbg !9864
  store i8** %__p, i8*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__p.addr, metadata !9865, metadata !DIExpression()), !dbg !9866
  store i8** %__args, i8*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__args.addr, metadata !9867, metadata !DIExpression()), !dbg !9868
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  %0 = load i8**, i8*** %__p.addr, align 8, !dbg !9869
  %1 = bitcast i8** %0 to i8*, !dbg !9869
  %2 = bitcast i8* %1 to i8**, !dbg !9870
  %3 = load i8**, i8*** %__args.addr, align 8, !dbg !9871
  %call = call dereferenceable(8) i8** @_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE(i8** dereferenceable(8) %3) #3, !dbg !9872
  %4 = load i8*, i8** %call, align 8, !dbg !9872
  store i8* %4, i8** %2, align 8, !dbg !9870
  ret void, !dbg !9873
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_(%"class.std::vector.13"* %this, i64 %__n, i8* %__s) #0 comdat align 2 !dbg !9874 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9875, metadata !DIExpression()), !dbg !9877
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !9878, metadata !DIExpression()), !dbg !9879
  store i8* %__s, i8** %__s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__s.addr, metadata !9880, metadata !DIExpression()), !dbg !9881
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9882
  %call2 = call i64 @_ZNKSt6vectorIPKcSaIS1_EE4sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9884
  %sub = sub i64 %call, %call2, !dbg !9885
  %0 = load i64, i64* %__n.addr, align 8, !dbg !9886
  %cmp = icmp ult i64 %sub, %0, !dbg !9887
  br i1 %cmp, label %if.then, label %if.end, !dbg !9888

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8, !dbg !9889
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #16, !dbg !9890
  unreachable, !dbg !9890

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !9891, metadata !DIExpression()), !dbg !9892
  %call3 = call i64 @_ZNKSt6vectorIPKcSaIS1_EE4sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9893
  %call4 = call i64 @_ZNKSt6vectorIPKcSaIS1_EE4sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9894
  store i64 %call4, i64* %ref.tmp, align 8, !dbg !9894
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr), !dbg !9895
  %2 = load i64, i64* %call5, align 8, !dbg !9895
  %add = add i64 %call3, %2, !dbg !9896
  store i64 %add, i64* %__len, align 8, !dbg !9892
  %3 = load i64, i64* %__len, align 8, !dbg !9897
  %call6 = call i64 @_ZNKSt6vectorIPKcSaIS1_EE4sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9898
  %cmp7 = icmp ult i64 %3, %call6, !dbg !9899
  br i1 %cmp7, label %cond.true, label %lor.lhs.false, !dbg !9900

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8, !dbg !9901
  %call8 = call i64 @_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9902
  %cmp9 = icmp ugt i64 %4, %call8, !dbg !9903
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !9904

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv(%"class.std::vector.13"* %this1) #3, !dbg !9905
  br label %cond.end, !dbg !9904

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8, !dbg !9906
  br label %cond.end, !dbg !9904

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ], !dbg !9904
  ret i64 %cond, !dbg !9907
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__rhs) #5 comdat !dbg !9908 {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__lhs, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, metadata !9912, metadata !DIExpression()), !dbg !9913
  store %"class.__gnu_cxx::__normal_iterator"* %__rhs, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, metadata !9914, metadata !DIExpression()), !dbg !9915
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8, !dbg !9916
  %call = call dereferenceable(8) i8*** @_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %0) #3, !dbg !9917
  %1 = load i8**, i8*** %call, align 8, !dbg !9917
  %2 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8, !dbg !9918
  %call1 = call dereferenceable(8) i8*** @_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3, !dbg !9919
  %3 = load i8**, i8*** %call1, align 8, !dbg !9919
  %sub.ptr.lhs.cast = ptrtoint i8** %1 to i64, !dbg !9920
  %sub.ptr.rhs.cast = ptrtoint i8** %3 to i64, !dbg !9920
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9920
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !9920
  ret i64 %sub.ptr.div, !dbg !9921
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZNSt6vectorIPKcSaIS1_EE5beginEv(%"class.std::vector.13"* %this) #5 comdat align 2 !dbg !9922 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9923, metadata !DIExpression()), !dbg !9924
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9925
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %0, i32 0, i32 0, !dbg !9925
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9926
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !9927
  call void @_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %retval, i8*** dereferenceable(8) %_M_start) #3, !dbg !9928
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0, !dbg !9929
  %2 = load i8**, i8*** %coerce.dive, align 8, !dbg !9929
  ret i8** %2, !dbg !9929
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i8** @_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %this, i64 %__n) #0 comdat align 2 !dbg !9930 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.14"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %this, %"struct.std::_Vector_base.14"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.14"** %this.addr, metadata !9931, metadata !DIExpression()), !dbg !9932
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !9933, metadata !DIExpression()), !dbg !9934
  %this1 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !dbg !9935
  %cmp = icmp ne i64 %0, 0, !dbg !9936
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9935

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !9937
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.15"*, !dbg !9937
  %2 = load i64, i64* %__n.addr, align 8, !dbg !9938
  %call = call i8** @_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %1, i64 %2), !dbg !9939
  br label %cond.end, !dbg !9935

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9935

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %call, %cond.true ], [ null, %cond.false ], !dbg !9935
  ret i8** %cond, !dbg !9940
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(i8** %__first, i8** %__last, i8** %__result, %"class.std::allocator.15"* dereferenceable(1) %__alloc) #5 comdat align 2 !dbg !2058 {
entry:
  %__first.addr = alloca i8**, align 8
  %__last.addr = alloca i8**, align 8
  %__result.addr = alloca i8**, align 8
  %__alloc.addr = alloca %"class.std::allocator.15"*, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store i8** %__first, i8*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__first.addr, metadata !9941, metadata !DIExpression()), !dbg !9942
  store i8** %__last, i8*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__last.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  store i8** %__result, i8*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__result.addr, metadata !9945, metadata !DIExpression()), !dbg !9946
  store %"class.std::allocator.15"* %__alloc, %"class.std::allocator.15"** %__alloc.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__alloc.addr, metadata !9947, metadata !DIExpression()), !dbg !9948
  %0 = load i8**, i8*** %__first.addr, align 8, !dbg !9949
  %1 = load i8**, i8*** %__last.addr, align 8, !dbg !9950
  %2 = load i8**, i8*** %__result.addr, align 8, !dbg !9951
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__alloc.addr, align 8, !dbg !9952
  %call = call i8** @_ZNSt6vectorIPKcSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE(i8** %0, i8** %1, i8** %2, %"class.std::allocator.15"* dereferenceable(1) %3) #3, !dbg !9953
  ret i8** %call, !dbg !9954
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i8*** @_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %this) #5 comdat align 2 !dbg !9955 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator"** %this.addr, metadata !9956, metadata !DIExpression()), !dbg !9958
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0, !dbg !9959
  ret i8*** %_M_current, !dbg !9960
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv(%"class.std::vector.13"* %this) #5 comdat align 2 !dbg !9961 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9964
  %call = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %0) #3, !dbg !9964
  %call2 = call i64 @_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %call) #3, !dbg !9965
  ret i64 %call2, !dbg !9966
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPKcSaIS1_EE4sizeEv(%"class.std::vector.13"* %this) #5 comdat align 2 !dbg !9967 {
entry:
  %this.addr = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %this, %"class.std::vector.13"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.13"** %this.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  %this1 = load %"class.std::vector.13"*, %"class.std::vector.13"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9970
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %0, i32 0, i32 0, !dbg !9970
  %1 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9971
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !9972
  %2 = load i8**, i8*** %_M_finish, align 8, !dbg !9972
  %3 = bitcast %"class.std::vector.13"* %this1 to %"struct.std::_Vector_base.14"*, !dbg !9973
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0, !dbg !9973
  %4 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"*, !dbg !9974
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data", %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl_data"* %4, i32 0, i32 0, !dbg !9975
  %5 = load i8**, i8*** %_M_start, align 8, !dbg !9975
  %sub.ptr.lhs.cast = ptrtoint i8** %2 to i64, !dbg !9976
  %sub.ptr.rhs.cast = ptrtoint i8** %5 to i64, !dbg !9976
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9976
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !9976
  ret i64 %sub.ptr.div, !dbg !9977
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #14

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %__a, i64* dereferenceable(8) %__b) #5 comdat !dbg !9978 {
entry:
  %retval = alloca i64*, align 8
  %__a.addr = alloca i64*, align 8
  %__b.addr = alloca i64*, align 8
  store i64* %__a, i64** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %__a.addr, metadata !9986, metadata !DIExpression()), !dbg !9988
  store i64* %__b, i64** %__b.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %__b.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  %0 = load i64*, i64** %__a.addr, align 8, !dbg !9991
  %1 = load i64, i64* %0, align 8, !dbg !9991
  %2 = load i64*, i64** %__b.addr, align 8, !dbg !9993
  %3 = load i64, i64* %2, align 8, !dbg !9993
  %cmp = icmp ult i64 %1, %3, !dbg !9994
  br i1 %cmp, label %if.then, label %if.end, !dbg !9995

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %__b.addr, align 8, !dbg !9996
  store i64* %4, i64** %retval, align 8, !dbg !9997
  br label %return, !dbg !9997

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %__a.addr, align 8, !dbg !9998
  store i64* %5, i64** %retval, align 8, !dbg !9999
  br label %return, !dbg !9999

return:                                           ; preds = %if.end, %if.then
  %6 = load i64*, i64** %retval, align 8, !dbg !10000
  ret i64* %6, !dbg !10000
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %__a) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !10001 {
entry:
  %__a.addr = alloca %"class.std::allocator.15"*, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store %"class.std::allocator.15"* %__a, %"class.std::allocator.15"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__a.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.declare(metadata i64* %__diffmax, metadata !10004, metadata !DIExpression()), !dbg !10006
  store i64 1152921504606846975, i64* %__diffmax, align 8, !dbg !10006
  call void @llvm.dbg.declare(metadata i64* %__allocmax, metadata !10007, metadata !DIExpression()), !dbg !10008
  %0 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__a.addr, align 8, !dbg !10009
  %call = call i64 @_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %0) #3, !dbg !10010
  store i64 %call, i64* %__allocmax, align 8, !dbg !10008
  %call1 = invoke dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %__diffmax, i64* dereferenceable(8) %__allocmax)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !10011

invoke.cont:                                      ; preds = %entry
  %1 = load i64, i64* %call1, align 8, !dbg !10011
  ret i64 %1, !dbg !10012

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null, !dbg !10011
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !10011
  call void @__clang_call_terminate(i8* %3) #18, !dbg !10011
  unreachable, !dbg !10011
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %this) #5 comdat align 2 !dbg !10013 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %this, %"struct.std::_Vector_base.14"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.14"** %this.addr, metadata !10014, metadata !DIExpression()), !dbg !10016
  %this1 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %this1, i32 0, i32 0, !dbg !10017
  %0 = bitcast %"struct.std::_Vector_base<const char *, std::allocator<const char *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.15"*, !dbg !10018
  ret %"class.std::allocator.15"* %0, !dbg !10019
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_(%"class.std::allocator.15"* dereferenceable(1) %__a) #5 comdat align 2 !dbg !10020 {
entry:
  %__a.addr = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %__a, %"class.std::allocator.15"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__a.addr, metadata !10021, metadata !DIExpression()), !dbg !10022
  %0 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__a.addr, align 8, !dbg !10023
  %1 = bitcast %"class.std::allocator.15"* %0 to %"class.__gnu_cxx::new_allocator.16"*, !dbg !10023
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPKcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %1) #3, !dbg !10024
  ret i64 %call, !dbg !10025
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %__a, i64* dereferenceable(8) %__b) #5 comdat !dbg !10026 {
entry:
  %retval = alloca i64*, align 8
  %__a.addr = alloca i64*, align 8
  %__b.addr = alloca i64*, align 8
  store i64* %__a, i64** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %__a.addr, metadata !10027, metadata !DIExpression()), !dbg !10028
  store i64* %__b, i64** %__b.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %__b.addr, metadata !10029, metadata !DIExpression()), !dbg !10030
  %0 = load i64*, i64** %__b.addr, align 8, !dbg !10031
  %1 = load i64, i64* %0, align 8, !dbg !10031
  %2 = load i64*, i64** %__a.addr, align 8, !dbg !10033
  %3 = load i64, i64* %2, align 8, !dbg !10033
  %cmp = icmp ult i64 %1, %3, !dbg !10034
  br i1 %cmp, label %if.then, label %if.end, !dbg !10035

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %__b.addr, align 8, !dbg !10036
  store i64* %4, i64** %retval, align 8, !dbg !10037
  br label %return, !dbg !10037

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %__a.addr, align 8, !dbg !10038
  store i64* %5, i64** %retval, align 8, !dbg !10039
  br label %return, !dbg !10039

return:                                           ; preds = %if.end, %if.then
  %6 = load i64*, i64** %retval, align 8, !dbg !10040
  ret i64* %6, !dbg !10040
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIPKcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %this) #5 comdat align 2 !dbg !10041 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !10042, metadata !DIExpression()), !dbg !10044
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPKcE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %this1) #3, !dbg !10045
  ret i64 %call, !dbg !10046
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIPKcE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %this) #5 comdat align 2 !dbg !10047 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !10048, metadata !DIExpression()), !dbg !10049
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  ret i64 1152921504606846975, !dbg !10050
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %this, i8*** dereferenceable(8) %__i) unnamed_addr #5 comdat align 2 !dbg !10051 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__i.addr = alloca i8***, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator"** %this.addr, metadata !10052, metadata !DIExpression()), !dbg !10054
  store i8*** %__i, i8**** %__i.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %__i.addr, metadata !10055, metadata !DIExpression()), !dbg !10056
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0, !dbg !10057
  %0 = load i8***, i8**** %__i.addr, align 8, !dbg !10058
  %1 = load i8**, i8*** %0, align 8, !dbg !10058
  store i8** %1, i8*** %_M_current, align 8, !dbg !10057
  ret void, !dbg !10059
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i8** @_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 !dbg !10060 {
entry:
  %__a.addr = alloca %"class.std::allocator.15"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.15"* %__a, %"class.std::allocator.15"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__a.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  %0 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__a.addr, align 8, !dbg !10065
  %1 = bitcast %"class.std::allocator.15"* %0 to %"class.__gnu_cxx::new_allocator.16"*, !dbg !10065
  %2 = load i64, i64* %__n.addr, align 8, !dbg !10066
  %call = call i8** @_ZN9__gnu_cxx13new_allocatorIPKcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %1, i64 %2, i8* null), !dbg !10067
  ret i8** %call, !dbg !10068
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i8** @_ZN9__gnu_cxx13new_allocatorIPKcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %this, i64 %__n, i8* %0) #0 comdat align 2 !dbg !10069 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %this, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.16"** %this.addr, metadata !10070, metadata !DIExpression()), !dbg !10071
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !10072, metadata !DIExpression()), !dbg !10073
  store i8* %0, i8** %.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  %this1 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !dbg !10076
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPKcE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %this1) #3, !dbg !10078
  %cmp = icmp ugt i64 %1, %call, !dbg !10079
  br i1 %cmp, label %if.then, label %if.end, !dbg !10080

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #16, !dbg !10081
  unreachable, !dbg !10081

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !dbg !10082
  %mul = mul i64 %2, 8, !dbg !10083
  %call2 = call i8* @_Znwm(i64 %mul), !dbg !10084
  %3 = bitcast i8* %call2 to i8**, !dbg !10085
  ret i8** %3, !dbg !10086
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZNSt6vectorIPKcSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE(i8** %__first, i8** %__last, i8** %__result, %"class.std::allocator.15"* dereferenceable(1) %__alloc) #5 comdat align 2 !dbg !10087 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %__first.addr = alloca i8**, align 8
  %__last.addr = alloca i8**, align 8
  %__result.addr = alloca i8**, align 8
  %__alloc.addr = alloca %"class.std::allocator.15"*, align 8
  store i8** %__first, i8*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__first.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  store i8** %__last, i8*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__last.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  store i8** %__result, i8*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__result.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store %"class.std::allocator.15"* %__alloc, %"class.std::allocator.15"** %__alloc.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__alloc.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  call void @llvm.dbg.declare(metadata %"struct.std::integral_constant"* %0, metadata !10096, metadata !DIExpression()), !dbg !10097
  %1 = load i8**, i8*** %__first.addr, align 8, !dbg !10098
  %2 = load i8**, i8*** %__last.addr, align 8, !dbg !10099
  %3 = load i8**, i8*** %__result.addr, align 8, !dbg !10100
  %4 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__alloc.addr, align 8, !dbg !10101
  %call = call i8** @_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_(i8** %1, i8** %2, i8** %3, %"class.std::allocator.15"* dereferenceable(1) %4) #3, !dbg !10102
  ret i8** %call, !dbg !10103
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_(i8** %__first, i8** %__last, i8** %__result, %"class.std::allocator.15"* dereferenceable(1) %__alloc) #5 comdat !dbg !10104 {
entry:
  %__first.addr = alloca i8**, align 8
  %__last.addr = alloca i8**, align 8
  %__result.addr = alloca i8**, align 8
  %__alloc.addr = alloca %"class.std::allocator.15"*, align 8
  store i8** %__first, i8*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__first.addr, metadata !10111, metadata !DIExpression()), !dbg !10112
  store i8** %__last, i8*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__last.addr, metadata !10113, metadata !DIExpression()), !dbg !10114
  store i8** %__result, i8*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__result.addr, metadata !10115, metadata !DIExpression()), !dbg !10116
  store %"class.std::allocator.15"* %__alloc, %"class.std::allocator.15"** %__alloc.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %__alloc.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  %0 = load i8**, i8*** %__first.addr, align 8, !dbg !10119
  %call = call i8** @_ZSt12__niter_baseIPPKcET_S3_(i8** %0) #3, !dbg !10120
  %1 = load i8**, i8*** %__last.addr, align 8, !dbg !10121
  %call1 = call i8** @_ZSt12__niter_baseIPPKcET_S3_(i8** %1) #3, !dbg !10122
  %2 = load i8**, i8*** %__result.addr, align 8, !dbg !10123
  %call2 = call i8** @_ZSt12__niter_baseIPPKcET_S3_(i8** %2) #3, !dbg !10124
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %__alloc.addr, align 8, !dbg !10125
  %call3 = call i8** @_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(i8** %call, i8** %call1, i8** %call2, %"class.std::allocator.15"* dereferenceable(1) %3) #3, !dbg !10126
  ret i8** %call3, !dbg !10127
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(i8** %__first, i8** %__last, i8** %__result, %"class.std::allocator.15"* dereferenceable(1) %0) #5 comdat !dbg !10128 {
entry:
  %__first.addr = alloca i8**, align 8
  %__last.addr = alloca i8**, align 8
  %__result.addr = alloca i8**, align 8
  %.addr = alloca %"class.std::allocator.15"*, align 8
  %__count = alloca i64, align 8
  store i8** %__first, i8*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__first.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  store i8** %__last, i8*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__last.addr, metadata !10139, metadata !DIExpression()), !dbg !10140
  store i8** %__result, i8*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__result.addr, metadata !10141, metadata !DIExpression()), !dbg !10142
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.15"** %.addr, metadata !10143, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.declare(metadata i64* %__count, metadata !10145, metadata !DIExpression()), !dbg !10146
  %1 = load i8**, i8*** %__last.addr, align 8, !dbg !10147
  %2 = load i8**, i8*** %__first.addr, align 8, !dbg !10148
  %sub.ptr.lhs.cast = ptrtoint i8** %1 to i64, !dbg !10149
  %sub.ptr.rhs.cast = ptrtoint i8** %2 to i64, !dbg !10149
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10149
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !10149
  store i64 %sub.ptr.div, i64* %__count, align 8, !dbg !10146
  %3 = load i64, i64* %__count, align 8, !dbg !10150
  %cmp = icmp sgt i64 %3, 0, !dbg !10152
  br i1 %cmp, label %if.then, label %if.end, !dbg !10153

if.then:                                          ; preds = %entry
  %4 = load i8**, i8*** %__result.addr, align 8, !dbg !10154
  %5 = bitcast i8** %4 to i8*, !dbg !10155
  %6 = load i8**, i8*** %__first.addr, align 8, !dbg !10156
  %7 = bitcast i8** %6 to i8*, !dbg !10155
  %8 = load i64, i64* %__count, align 8, !dbg !10157
  %mul = mul i64 %8, 8, !dbg !10158
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %7, i64 %mul, i1 false), !dbg !10155
  br label %if.end, !dbg !10155

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8**, i8*** %__result.addr, align 8, !dbg !10159
  %10 = load i64, i64* %__count, align 8, !dbg !10160
  %add.ptr = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !10161
  ret i8** %add.ptr, !dbg !10162
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i8** @_ZSt12__niter_baseIPPKcET_S3_(i8** %__it) #5 comdat !dbg !10163 {
entry:
  %__it.addr = alloca i8**, align 8
  store i8** %__it, i8*** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %__it.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  %0 = load i8**, i8*** %__it.addr, align 8, !dbg !10168
  ret i8** %0, !dbg !10169
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #11

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEEET_S8_S8_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val) #0 comdat !dbg !10170 {
entry:
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %__len = alloca i64, align 8
  %__half = alloca i64, align 8
  %__middle = alloca %class.cGate**, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !10177, metadata !DIExpression()), !dbg !10178
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %__comp, metadata !10181, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !10183, metadata !DIExpression()), !dbg !10189
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10190
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !10191
  %call = call i64 @_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_(%class.cGate** %0, %class.cGate** %1), !dbg !10192
  store i64 %call, i64* %__len, align 8, !dbg !10189
  br label %while.cond, !dbg !10193

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i64, i64* %__len, align 8, !dbg !10194
  %cmp = icmp sgt i64 %2, 0, !dbg !10195
  br i1 %cmp, label %while.body, label %while.end, !dbg !10193

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %__half, metadata !10196, metadata !DIExpression()), !dbg !10198
  %3 = load i64, i64* %__len, align 8, !dbg !10199
  %shr = ashr i64 %3, 1, !dbg !10200
  store i64 %shr, i64* %__half, align 8, !dbg !10198
  call void @llvm.dbg.declare(metadata %class.cGate*** %__middle, metadata !10201, metadata !DIExpression()), !dbg !10202
  %4 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10203
  store %class.cGate** %4, %class.cGate*** %__middle, align 8, !dbg !10202
  %5 = load i64, i64* %__half, align 8, !dbg !10204
  call void @_ZSt7advanceIPP5cGatelEvRT_T0_(%class.cGate*** dereferenceable(8) %__middle, i64 %5), !dbg !10205
  %6 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10206
  %7 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10208
  %call1 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %__comp, %class.cGate** %6, %class.cGate** dereferenceable(8) %7), !dbg !10209
  br i1 %call1, label %if.then, label %if.else, !dbg !10210

if.then:                                          ; preds = %while.body
  %8 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10211
  store %class.cGate** %8, %class.cGate*** %__first.addr, align 8, !dbg !10213
  %9 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10214
  %incdec.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %9, i32 1, !dbg !10214
  store %class.cGate** %incdec.ptr, %class.cGate*** %__first.addr, align 8, !dbg !10214
  %10 = load i64, i64* %__len, align 8, !dbg !10215
  %11 = load i64, i64* %__half, align 8, !dbg !10216
  %sub = sub nsw i64 %10, %11, !dbg !10217
  %sub2 = sub nsw i64 %sub, 1, !dbg !10218
  store i64 %sub2, i64* %__len, align 8, !dbg !10219
  br label %if.end, !dbg !10220

if.else:                                          ; preds = %while.body
  %12 = load i64, i64* %__half, align 8, !dbg !10221
  store i64 %12, i64* %__len, align 8, !dbg !10222
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !10193, !llvm.loop !10223

while.end:                                        ; preds = %while.cond
  %13 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10225
  ret %class.cGate** %13, !dbg !10226
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx5__ops15__iter_comp_valI24less_gateConnectedInsideEENS0_14_Iter_comp_valIT_EES4_() #0 comdat !dbg !10227 {
entry:
  %retval = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %__comp = alloca %struct.less_gateConnectedInside, align 1
  %agg.tmp = alloca %struct.less_gateConnectedInside, align 1
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedInside* %__comp, metadata !10230, metadata !DIExpression()), !dbg !10231
  %call = call dereferenceable(1) %struct.less_gateConnectedInside* @_ZSt4moveIR24less_gateConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gateConnectedInside* dereferenceable(1) %__comp) #3, !dbg !10232
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %retval), !dbg !10233
  ret void, !dbg !10234
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i64 @_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_(%class.cGate** %__first, %class.cGate** %__last) #0 comdat !dbg !10235 {
entry:
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10245
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !10246
  call void @_ZSt19__iterator_categoryIPP5cGateENSt15iterator_traitsIT_E17iterator_categoryERKS4_(%class.cGate*** dereferenceable(8) %__first.addr), !dbg !10247
  %call = call i64 @_ZSt10__distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag(%class.cGate** %0, %class.cGate** %1), !dbg !10248
  ret i64 %call, !dbg !10249
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZSt7advanceIPP5cGatelEvRT_T0_(%class.cGate*** dereferenceable(8) %__i, i64 %__n) #0 comdat !dbg !10250 {
entry:
  %__i.addr = alloca %class.cGate***, align 8
  %__n.addr = alloca i64, align 8
  %__d = alloca i64, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store %class.cGate*** %__i, %class.cGate**** %__i.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate**** %__i.addr, metadata !10255, metadata !DIExpression()), !dbg !10256
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata i64* %__d, metadata !10259, metadata !DIExpression()), !dbg !10260
  %0 = load i64, i64* %__n.addr, align 8, !dbg !10261
  store i64 %0, i64* %__d, align 8, !dbg !10260
  %1 = load %class.cGate***, %class.cGate**** %__i.addr, align 8, !dbg !10262
  %2 = load i64, i64* %__d, align 8, !dbg !10263
  %3 = load %class.cGate***, %class.cGate**** %__i.addr, align 8, !dbg !10264
  call void @_ZSt19__iterator_categoryIPP5cGateENSt15iterator_traitsIT_E17iterator_categoryERKS4_(%class.cGate*** dereferenceable(8) %3), !dbg !10265
  call void @_ZSt9__advanceIPP5cGatelEvRT_T0_St26random_access_iterator_tag(%class.cGate*** dereferenceable(8) %1, i64 %2), !dbg !10266
  ret void, !dbg !10267
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %this, %class.cGate** %__it, %class.cGate** dereferenceable(8) %__val) #0 comdat align 2 !dbg !10268 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %__it.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %this.addr, metadata !10274, metadata !DIExpression()), !dbg !10276
  store %class.cGate** %__it, %class.cGate*** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__it.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %this1, i32 0, i32 0, !dbg !10281
  %0 = load %class.cGate**, %class.cGate*** %__it.addr, align 8, !dbg !10282
  %1 = load %class.cGate*, %class.cGate** %0, align 8, !dbg !10283
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10284
  %3 = load %class.cGate*, %class.cGate** %2, align 8, !dbg !10284
  %call = call zeroext i1 @_ZN24less_gateConnectedInsideclEP5cGateS1_(%struct.less_gateConnectedInside* %_M_comp, %class.cGate* %1, %class.cGate* %3), !dbg !10281
  ret i1 %call, !dbg !10285
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZSt10__distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag(%class.cGate** %__first, %class.cGate** %__last) #5 comdat !dbg !10286 {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !10301, metadata !DIExpression()), !dbg !10302
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !10303, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.declare(metadata %"struct.std::random_access_iterator_tag"* %0, metadata !10305, metadata !DIExpression()), !dbg !10306
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !10307
  %2 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10308
  %sub.ptr.lhs.cast = ptrtoint %class.cGate** %1 to i64, !dbg !10309
  %sub.ptr.rhs.cast = ptrtoint %class.cGate** %2 to i64, !dbg !10309
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10309
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !10309
  ret i64 %sub.ptr.div, !dbg !10310
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPP5cGateENSt15iterator_traitsIT_E17iterator_categoryERKS4_(%class.cGate*** dereferenceable(8) %0) #5 comdat !dbg !10311 {
entry:
  %.addr = alloca %class.cGate***, align 8
  store %class.cGate*** %0, %class.cGate**** %.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate**** %.addr, metadata !10319, metadata !DIExpression()), !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZSt9__advanceIPP5cGatelEvRT_T0_St26random_access_iterator_tag(%class.cGate*** dereferenceable(8) %__i, i64 %__n) #5 comdat !dbg !10322 {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__i.addr = alloca %class.cGate***, align 8
  %__n.addr = alloca i64, align 8
  store %class.cGate*** %__i, %class.cGate**** %__i.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate**** %__i.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata %"struct.std::random_access_iterator_tag"* %0, metadata !10330, metadata !DIExpression()), !dbg !10331
  %1 = load i64, i64* %__n.addr, align 8, !dbg !10332
  %2 = call i1 @llvm.is.constant.i64(i64 %1), !dbg !10334
  br i1 %2, label %land.lhs.true, label %if.else, !dbg !10335

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, i64* %__n.addr, align 8, !dbg !10336
  %cmp = icmp eq i64 %3, 1, !dbg !10337
  br i1 %cmp, label %if.then, label %if.else, !dbg !10338

if.then:                                          ; preds = %land.lhs.true
  %4 = load %class.cGate***, %class.cGate**** %__i.addr, align 8, !dbg !10339
  %5 = load %class.cGate**, %class.cGate*** %4, align 8, !dbg !10340
  %incdec.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %5, i32 1, !dbg !10340
  store %class.cGate** %incdec.ptr, %class.cGate*** %4, align 8, !dbg !10340
  br label %if.end6, !dbg !10340

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load i64, i64* %__n.addr, align 8, !dbg !10341
  %7 = call i1 @llvm.is.constant.i64(i64 %6), !dbg !10343
  br i1 %7, label %land.lhs.true1, label %if.else5, !dbg !10344

land.lhs.true1:                                   ; preds = %if.else
  %8 = load i64, i64* %__n.addr, align 8, !dbg !10345
  %cmp2 = icmp eq i64 %8, -1, !dbg !10346
  br i1 %cmp2, label %if.then3, label %if.else5, !dbg !10347

if.then3:                                         ; preds = %land.lhs.true1
  %9 = load %class.cGate***, %class.cGate**** %__i.addr, align 8, !dbg !10348
  %10 = load %class.cGate**, %class.cGate*** %9, align 8, !dbg !10349
  %incdec.ptr4 = getelementptr inbounds %class.cGate*, %class.cGate** %10, i32 -1, !dbg !10349
  store %class.cGate** %incdec.ptr4, %class.cGate*** %9, align 8, !dbg !10349
  br label %if.end, !dbg !10349

if.else5:                                         ; preds = %land.lhs.true1, %if.else
  %11 = load i64, i64* %__n.addr, align 8, !dbg !10350
  %12 = load %class.cGate***, %class.cGate**** %__i.addr, align 8, !dbg !10351
  %13 = load %class.cGate**, %class.cGate*** %12, align 8, !dbg !10352
  %add.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %13, i64 %11, !dbg !10352
  store %class.cGate** %add.ptr, %class.cGate*** %12, align 8, !dbg !10352
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10353
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #15

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN24less_gateConnectedInsideclEP5cGateS1_(%struct.less_gateConnectedInside* %this, %class.cGate* %a, %class.cGate* %b) #0 comdat align 2 !dbg !10354 {
entry:
  %this.addr = alloca %struct.less_gateConnectedInside*, align 8
  %a.addr = alloca %class.cGate*, align 8
  %b.addr = alloca %class.cGate*, align 8
  store %struct.less_gateConnectedInside* %this, %struct.less_gateConnectedInside** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedInside** %this.addr, metadata !10355, metadata !DIExpression()), !dbg !10357
  store %class.cGate* %a, %class.cGate** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %a.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  store %class.cGate* %b, %class.cGate** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %b.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  %this1 = load %struct.less_gateConnectedInside*, %struct.less_gateConnectedInside** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10362
  %tobool = icmp ne %class.cGate* %0, null, !dbg !10362
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10363

land.rhs:                                         ; preds = %entry
  %1 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10364
  %call = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %1), !dbg !10365
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !10357
  %conv = zext i1 %2 to i32, !dbg !10366
  %3 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10367
  %tobool2 = icmp ne %class.cGate* %3, null, !dbg !10367
  br i1 %tobool2, label %land.rhs3, label %land.end5, !dbg !10368

land.rhs3:                                        ; preds = %land.end
  %4 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10369
  %call4 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %4), !dbg !10370
  br label %land.end5

land.end5:                                        ; preds = %land.rhs3, %land.end
  %5 = phi i1 [ false, %land.end ], [ %call4, %land.rhs3 ], !dbg !10357
  %conv6 = zext i1 %5 to i32, !dbg !10371
  %cmp = icmp sgt i32 %conv, %conv6, !dbg !10372
  ret i1 %cmp, !dbg !10373
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %struct.less_gateConnectedInside* @_ZSt4moveIR24less_gateConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gateConnectedInside* dereferenceable(1) %__t) #5 comdat !dbg !10374 {
entry:
  %__t.addr = alloca %struct.less_gateConnectedInside*, align 8
  store %struct.less_gateConnectedInside* %__t, %struct.less_gateConnectedInside** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedInside** %__t.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  %0 = load %struct.less_gateConnectedInside*, %struct.less_gateConnectedInside** %__t.addr, align 8, !dbg !10385
  ret %struct.less_gateConnectedInside* %0, !dbg !10386
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %this) unnamed_addr #5 comdat align 2 !dbg !10387 {
entry:
  %__comp = alloca %struct.less_gateConnectedInside, align 1
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %this.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedInside* %__comp, metadata !10390, metadata !DIExpression()), !dbg !10391
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %this1, i32 0, i32 0, !dbg !10392
  %call = call dereferenceable(1) %struct.less_gateConnectedInside* @_ZSt4moveIR24less_gateConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gateConnectedInside* dereferenceable(1) %__comp) #3, !dbg !10393
  ret void, !dbg !10394
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEEET_S8_S8_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val) #0 comdat !dbg !10395 {
entry:
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.43", align 1
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %__len = alloca i64, align 8
  %__half = alloca i64, align 8
  %__middle = alloca %class.cGate**, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !10400, metadata !DIExpression()), !dbg !10401
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !10402, metadata !DIExpression()), !dbg !10403
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10404, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %__comp, metadata !10406, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !10408, metadata !DIExpression()), !dbg !10410
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10411
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !10412
  %call = call i64 @_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_(%class.cGate** %0, %class.cGate** %1), !dbg !10413
  store i64 %call, i64* %__len, align 8, !dbg !10410
  br label %while.cond, !dbg !10414

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i64, i64* %__len, align 8, !dbg !10415
  %cmp = icmp sgt i64 %2, 0, !dbg !10416
  br i1 %cmp, label %while.body, label %while.end, !dbg !10414

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %__half, metadata !10417, metadata !DIExpression()), !dbg !10419
  %3 = load i64, i64* %__len, align 8, !dbg !10420
  %shr = ashr i64 %3, 1, !dbg !10421
  store i64 %shr, i64* %__half, align 8, !dbg !10419
  call void @llvm.dbg.declare(metadata %class.cGate*** %__middle, metadata !10422, metadata !DIExpression()), !dbg !10423
  %4 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10424
  store %class.cGate** %4, %class.cGate*** %__middle, align 8, !dbg !10423
  %5 = load i64, i64* %__half, align 8, !dbg !10425
  call void @_ZSt7advanceIPP5cGatelEvRT_T0_(%class.cGate*** dereferenceable(8) %__middle, i64 %5), !dbg !10426
  %6 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10427
  %7 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10429
  %call1 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %__comp, %class.cGate** %6, %class.cGate** dereferenceable(8) %7), !dbg !10430
  br i1 %call1, label %if.then, label %if.else, !dbg !10431

if.then:                                          ; preds = %while.body
  %8 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10432
  store %class.cGate** %8, %class.cGate*** %__first.addr, align 8, !dbg !10434
  %9 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10435
  %incdec.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %9, i32 1, !dbg !10435
  store %class.cGate** %incdec.ptr, %class.cGate*** %__first.addr, align 8, !dbg !10435
  %10 = load i64, i64* %__len, align 8, !dbg !10436
  %11 = load i64, i64* %__half, align 8, !dbg !10437
  %sub = sub nsw i64 %10, %11, !dbg !10438
  %sub2 = sub nsw i64 %sub, 1, !dbg !10439
  store i64 %sub2, i64* %__len, align 8, !dbg !10440
  br label %if.end, !dbg !10441

if.else:                                          ; preds = %while.body
  %12 = load i64, i64* %__half, align 8, !dbg !10442
  store i64 %12, i64* %__len, align 8, !dbg !10443
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !10414, !llvm.loop !10444

while.end:                                        ; preds = %while.cond
  %13 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10446
  ret %class.cGate** %13, !dbg !10447
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx5__ops15__iter_comp_valI25less_gateConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_() #0 comdat !dbg !10448 {
entry:
  %retval = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.43", align 1
  %__comp = alloca %struct.less_gateConnectedOutside, align 1
  %agg.tmp = alloca %struct.less_gateConnectedOutside, align 1
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedOutside* %__comp, metadata !10451, metadata !DIExpression()), !dbg !10452
  %call = call dereferenceable(1) %struct.less_gateConnectedOutside* @_ZSt4moveIR25less_gateConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gateConnectedOutside* dereferenceable(1) %__comp) #3, !dbg !10453
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %retval), !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %this, %class.cGate** %__it, %class.cGate** dereferenceable(8) %__val) #0 comdat align 2 !dbg !10456 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"*, align 8
  %__it.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"** %this.addr, metadata !10460, metadata !DIExpression()), !dbg !10462
  store %class.cGate** %__it, %class.cGate*** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__it.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10465, metadata !DIExpression()), !dbg !10466
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.43", %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %this1, i32 0, i32 0, !dbg !10467
  %0 = load %class.cGate**, %class.cGate*** %__it.addr, align 8, !dbg !10468
  %1 = load %class.cGate*, %class.cGate** %0, align 8, !dbg !10469
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10470
  %3 = load %class.cGate*, %class.cGate** %2, align 8, !dbg !10470
  %call = call zeroext i1 @_ZN25less_gateConnectedOutsideclEP5cGateS1_(%struct.less_gateConnectedOutside* %_M_comp, %class.cGate* %1, %class.cGate* %3), !dbg !10467
  ret i1 %call, !dbg !10471
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN25less_gateConnectedOutsideclEP5cGateS1_(%struct.less_gateConnectedOutside* %this, %class.cGate* %a, %class.cGate* %b) #0 comdat align 2 !dbg !10472 {
entry:
  %this.addr = alloca %struct.less_gateConnectedOutside*, align 8
  %a.addr = alloca %class.cGate*, align 8
  %b.addr = alloca %class.cGate*, align 8
  store %struct.less_gateConnectedOutside* %this, %struct.less_gateConnectedOutside** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedOutside** %this.addr, metadata !10473, metadata !DIExpression()), !dbg !10475
  store %class.cGate* %a, %class.cGate** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %a.addr, metadata !10476, metadata !DIExpression()), !dbg !10477
  store %class.cGate* %b, %class.cGate** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %b.addr, metadata !10478, metadata !DIExpression()), !dbg !10479
  %this1 = load %struct.less_gateConnectedOutside*, %struct.less_gateConnectedOutside** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10480
  %tobool = icmp ne %class.cGate* %0, null, !dbg !10480
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10481

land.rhs:                                         ; preds = %entry
  %1 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10482
  %call = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %1), !dbg !10483
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !10475
  %conv = zext i1 %2 to i32, !dbg !10484
  %3 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10485
  %tobool2 = icmp ne %class.cGate* %3, null, !dbg !10485
  br i1 %tobool2, label %land.rhs3, label %land.end5, !dbg !10486

land.rhs3:                                        ; preds = %land.end
  %4 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10487
  %call4 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %4), !dbg !10488
  br label %land.end5

land.end5:                                        ; preds = %land.rhs3, %land.end
  %5 = phi i1 [ false, %land.end ], [ %call4, %land.rhs3 ], !dbg !10475
  %conv6 = zext i1 %5 to i32, !dbg !10489
  %cmp = icmp sgt i32 %conv, %conv6, !dbg !10490
  ret i1 %cmp, !dbg !10491
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %struct.less_gateConnectedOutside* @_ZSt4moveIR25less_gateConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gateConnectedOutside* dereferenceable(1) %__t) #5 comdat !dbg !10492 {
entry:
  %__t.addr = alloca %struct.less_gateConnectedOutside*, align 8
  store %struct.less_gateConnectedOutside* %__t, %struct.less_gateConnectedOutside** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedOutside** %__t.addr, metadata !10501, metadata !DIExpression()), !dbg !10502
  %0 = load %struct.less_gateConnectedOutside*, %struct.less_gateConnectedOutside** %__t.addr, align 8, !dbg !10503
  ret %struct.less_gateConnectedOutside* %0, !dbg !10504
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %this) unnamed_addr #5 comdat align 2 !dbg !10505 {
entry:
  %__comp = alloca %struct.less_gateConnectedOutside, align 1
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"** %this.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata %struct.less_gateConnectedOutside* %__comp, metadata !10508, metadata !DIExpression()), !dbg !10509
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.43", %"struct.__gnu_cxx::__ops::_Iter_comp_val.43"* %this1, i32 0, i32 0, !dbg !10510
  %call = call dereferenceable(1) %struct.less_gateConnectedOutside* @_ZSt4moveIR25less_gateConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gateConnectedOutside* dereferenceable(1) %__comp) #3, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEEET_S8_S8_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val, %class.cGate** %__comp.coerce) #0 comdat !dbg !10513 {
entry:
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", align 8
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %__len = alloca i64, align 8
  %__half = alloca i64, align 8
  %__middle = alloca %class.cGate**, align 8
  %coerce.dive = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %__comp, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %coerce.dive, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive1, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !10518, metadata !DIExpression()), !dbg !10519
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !10520, metadata !DIExpression()), !dbg !10521
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10522, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %__comp, metadata !10524, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !10526, metadata !DIExpression()), !dbg !10528
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10529
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !10530
  %call = call i64 @_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_(%class.cGate** %0, %class.cGate** %1), !dbg !10531
  store i64 %call, i64* %__len, align 8, !dbg !10528
  br label %while.cond, !dbg !10532

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i64, i64* %__len, align 8, !dbg !10533
  %cmp = icmp sgt i64 %2, 0, !dbg !10534
  br i1 %cmp, label %while.body, label %while.end, !dbg !10532

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %__half, metadata !10535, metadata !DIExpression()), !dbg !10537
  %3 = load i64, i64* %__len, align 8, !dbg !10538
  %shr = ashr i64 %3, 1, !dbg !10539
  store i64 %shr, i64* %__half, align 8, !dbg !10537
  call void @llvm.dbg.declare(metadata %class.cGate*** %__middle, metadata !10540, metadata !DIExpression()), !dbg !10541
  %4 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10542
  store %class.cGate** %4, %class.cGate*** %__middle, align 8, !dbg !10541
  %5 = load i64, i64* %__half, align 8, !dbg !10543
  call void @_ZSt7advanceIPP5cGatelEvRT_T0_(%class.cGate*** dereferenceable(8) %__middle, i64 %5), !dbg !10544
  %6 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10545
  %7 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10547
  %call2 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %__comp, %class.cGate** %6, %class.cGate** dereferenceable(8) %7), !dbg !10548
  br i1 %call2, label %if.then, label %if.else, !dbg !10549

if.then:                                          ; preds = %while.body
  %8 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10550
  store %class.cGate** %8, %class.cGate*** %__first.addr, align 8, !dbg !10552
  %9 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10553
  %incdec.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %9, i32 1, !dbg !10553
  store %class.cGate** %incdec.ptr, %class.cGate*** %__first.addr, align 8, !dbg !10553
  %10 = load i64, i64* %__len, align 8, !dbg !10554
  %11 = load i64, i64* %__half, align 8, !dbg !10555
  %sub = sub nsw i64 %10, %11, !dbg !10556
  %sub3 = sub nsw i64 %sub, 1, !dbg !10557
  store i64 %sub3, i64* %__len, align 8, !dbg !10558
  br label %if.end, !dbg !10559

if.else:                                          ; preds = %while.body
  %12 = load i64, i64* %__half, align 8, !dbg !10560
  store i64 %12, i64* %__len, align 8, !dbg !10561
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !10532, !llvm.loop !10562

while.end:                                        ; preds = %while.cond
  %13 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10564
  ret %class.cGate** %13, !dbg !10565
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZN9__gnu_cxx5__ops15__iter_comp_valI28less_gatePairConnectedInsideEENS0_14_Iter_comp_valIT_EES4_(%class.cGate** %__comp.coerce) #0 comdat !dbg !10566 {
entry:
  %retval = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", align 8
  %__comp = alloca %struct.less_gatePairConnectedInside, align 8
  %agg.tmp = alloca %struct.less_gatePairConnectedInside, align 8
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %__comp, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedInside* %__comp, metadata !10569, metadata !DIExpression()), !dbg !10570
  %call = call dereferenceable(8) %struct.less_gatePairConnectedInside* @_ZSt4moveIR28less_gatePairConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gatePairConnectedInside* dereferenceable(8) %__comp) #3, !dbg !10571
  %0 = bitcast %struct.less_gatePairConnectedInside* %agg.tmp to i8*, !dbg !10571
  %1 = bitcast %struct.less_gatePairConnectedInside* %call to i8*, !dbg !10571
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false), !dbg !10571
  %coerce.dive1 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %agg.tmp, i32 0, i32 0, !dbg !10572
  %2 = load %class.cGate**, %class.cGate*** %coerce.dive1, align 8, !dbg !10572
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %retval, %class.cGate** %2), !dbg !10572
  %coerce.dive2 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %retval, i32 0, i32 0, !dbg !10573
  %coerce.dive3 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %coerce.dive2, i32 0, i32 0, !dbg !10573
  %3 = load %class.cGate**, %class.cGate*** %coerce.dive3, align 8, !dbg !10573
  ret %class.cGate** %3, !dbg !10573
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %this, %class.cGate** %__it, %class.cGate** dereferenceable(8) %__val) #0 comdat align 2 !dbg !10574 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"*, align 8
  %__it.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"** %this.addr, metadata !10578, metadata !DIExpression()), !dbg !10580
  store %class.cGate** %__it, %class.cGate*** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__it.addr, metadata !10581, metadata !DIExpression()), !dbg !10582
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10583, metadata !DIExpression()), !dbg !10584
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %this1, i32 0, i32 0, !dbg !10585
  %0 = load %class.cGate**, %class.cGate*** %__it.addr, align 8, !dbg !10586
  %1 = load %class.cGate*, %class.cGate** %0, align 8, !dbg !10587
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10588
  %3 = load %class.cGate*, %class.cGate** %2, align 8, !dbg !10588
  %call = call zeroext i1 @_ZN28less_gatePairConnectedInsideclEP5cGateS1_(%struct.less_gatePairConnectedInside* %_M_comp, %class.cGate* %1, %class.cGate* %3), !dbg !10585
  ret i1 %call, !dbg !10589
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN28less_gatePairConnectedInsideclEP5cGateS1_(%struct.less_gatePairConnectedInside* %this, %class.cGate* %a, %class.cGate* %b) #0 comdat align 2 !dbg !10590 {
entry:
  %this.addr = alloca %struct.less_gatePairConnectedInside*, align 8
  %a.addr = alloca %class.cGate*, align 8
  %b.addr = alloca %class.cGate*, align 8
  store %struct.less_gatePairConnectedInside* %this, %struct.less_gatePairConnectedInside** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedInside** %this.addr, metadata !10591, metadata !DIExpression()), !dbg !10592
  store %class.cGate* %a, %class.cGate** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %a.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store %class.cGate* %b, %class.cGate** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %b.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  %this1 = load %struct.less_gatePairConnectedInside*, %struct.less_gatePairConnectedInside** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10597
  %tobool = icmp ne %class.cGate* %0, null, !dbg !10597
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10598

land.rhs:                                         ; preds = %entry
  %1 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10599
  %call = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %1), !dbg !10600
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !10592
  %conv = zext i1 %2 to i32, !dbg !10601
  %3 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10602
  %tobool2 = icmp ne %class.cGate* %3, null, !dbg !10602
  br i1 %tobool2, label %land.rhs3, label %land.end5, !dbg !10603

land.rhs3:                                        ; preds = %land.end
  %4 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10604
  %call4 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %4), !dbg !10605
  br label %land.end5

land.end5:                                        ; preds = %land.rhs3, %land.end
  %5 = phi i1 [ false, %land.end ], [ %call4, %land.rhs3 ], !dbg !10592
  %conv6 = zext i1 %5 to i32, !dbg !10606
  %cmp = icmp sgt i32 %conv, %conv6, !dbg !10607
  br i1 %cmp, label %land.rhs7, label %land.end24, !dbg !10608

land.rhs7:                                        ; preds = %land.end5
  %6 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10609
  %tobool8 = icmp ne %class.cGate* %6, null, !dbg !10609
  br i1 %tobool8, label %land.rhs9, label %land.end12, !dbg !10610

land.rhs9:                                        ; preds = %land.rhs7
  %otherv = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %this1, i32 0, i32 0, !dbg !10611
  %7 = load %class.cGate**, %class.cGate*** %otherv, align 8, !dbg !10611
  %8 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10612
  %call10 = call i32 @_ZNK5cGate8getIndexEv(%class.cGate* %8), !dbg !10613
  %idxprom = sext i32 %call10 to i64, !dbg !10611
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %7, i64 %idxprom, !dbg !10611
  %9 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !10611
  %call11 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %9), !dbg !10614
  br label %land.end12

land.end12:                                       ; preds = %land.rhs9, %land.rhs7
  %10 = phi i1 [ false, %land.rhs7 ], [ %call11, %land.rhs9 ], !dbg !10592
  %conv13 = zext i1 %10 to i32, !dbg !10615
  %11 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10616
  %tobool14 = icmp ne %class.cGate* %11, null, !dbg !10616
  br i1 %tobool14, label %land.rhs15, label %land.end21, !dbg !10617

land.rhs15:                                       ; preds = %land.end12
  %otherv16 = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %this1, i32 0, i32 0, !dbg !10618
  %12 = load %class.cGate**, %class.cGate*** %otherv16, align 8, !dbg !10618
  %13 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10619
  %call17 = call i32 @_ZNK5cGate8getIndexEv(%class.cGate* %13), !dbg !10620
  %idxprom18 = sext i32 %call17 to i64, !dbg !10618
  %arrayidx19 = getelementptr inbounds %class.cGate*, %class.cGate** %12, i64 %idxprom18, !dbg !10618
  %14 = load %class.cGate*, %class.cGate** %arrayidx19, align 8, !dbg !10618
  %call20 = call zeroext i1 @_ZNK5cGate17isConnectedInsideEv(%class.cGate* %14), !dbg !10621
  br label %land.end21

land.end21:                                       ; preds = %land.rhs15, %land.end12
  %15 = phi i1 [ false, %land.end12 ], [ %call20, %land.rhs15 ], !dbg !10592
  %conv22 = zext i1 %15 to i32, !dbg !10622
  %cmp23 = icmp sgt i32 %conv13, %conv22, !dbg !10623
  br label %land.end24

land.end24:                                       ; preds = %land.end21, %land.end5
  %16 = phi i1 [ false, %land.end5 ], [ %cmp23, %land.end21 ], !dbg !10592
  ret i1 %16, !dbg !10624
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.less_gatePairConnectedInside* @_ZSt4moveIR28less_gatePairConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gatePairConnectedInside* dereferenceable(8) %__t) #5 comdat !dbg !10625 {
entry:
  %__t.addr = alloca %struct.less_gatePairConnectedInside*, align 8
  store %struct.less_gatePairConnectedInside* %__t, %struct.less_gatePairConnectedInside** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedInside** %__t.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load %struct.less_gatePairConnectedInside*, %struct.less_gatePairConnectedInside** %__t.addr, align 8, !dbg !10636
  ret %struct.less_gatePairConnectedInside* %0, !dbg !10637
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %this, %class.cGate** %__comp.coerce) unnamed_addr #5 comdat align 2 !dbg !10638 {
entry:
  %__comp = alloca %struct.less_gatePairConnectedInside, align 8
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"*, align 8
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedInside, %struct.less_gatePairConnectedInside* %__comp, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"** %this.addr, metadata !10639, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedInside* %__comp, metadata !10641, metadata !DIExpression()), !dbg !10642
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.44", %"struct.__gnu_cxx::__ops::_Iter_comp_val.44"* %this1, i32 0, i32 0, !dbg !10643
  %call = call dereferenceable(8) %struct.less_gatePairConnectedInside* @_ZSt4moveIR28less_gatePairConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gatePairConnectedInside* dereferenceable(8) %__comp) #3, !dbg !10644
  %0 = bitcast %struct.less_gatePairConnectedInside* %_M_comp to i8*, !dbg !10643
  %1 = bitcast %struct.less_gatePairConnectedInside* %call to i8*, !dbg !10643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false), !dbg !10643
  ret void, !dbg !10645
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEEET_S8_S8_RKT0_T1_(%class.cGate** %__first, %class.cGate** %__last, %class.cGate** dereferenceable(8) %__val, %class.cGate** %__comp.coerce) #0 comdat !dbg !10646 {
entry:
  %__comp = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", align 8
  %__first.addr = alloca %class.cGate**, align 8
  %__last.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  %__len = alloca i64, align 8
  %__half = alloca i64, align 8
  %__middle = alloca %class.cGate**, align 8
  %coerce.dive = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %__comp, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %coerce.dive, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive1, align 8
  store %class.cGate** %__first, %class.cGate*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__first.addr, metadata !10651, metadata !DIExpression()), !dbg !10652
  store %class.cGate** %__last, %class.cGate*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__last.addr, metadata !10653, metadata !DIExpression()), !dbg !10654
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %__comp, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !10659, metadata !DIExpression()), !dbg !10661
  %0 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10662
  %1 = load %class.cGate**, %class.cGate*** %__last.addr, align 8, !dbg !10663
  %call = call i64 @_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_(%class.cGate** %0, %class.cGate** %1), !dbg !10664
  store i64 %call, i64* %__len, align 8, !dbg !10661
  br label %while.cond, !dbg !10665

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i64, i64* %__len, align 8, !dbg !10666
  %cmp = icmp sgt i64 %2, 0, !dbg !10667
  br i1 %cmp, label %while.body, label %while.end, !dbg !10665

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %__half, metadata !10668, metadata !DIExpression()), !dbg !10670
  %3 = load i64, i64* %__len, align 8, !dbg !10671
  %shr = ashr i64 %3, 1, !dbg !10672
  store i64 %shr, i64* %__half, align 8, !dbg !10670
  call void @llvm.dbg.declare(metadata %class.cGate*** %__middle, metadata !10673, metadata !DIExpression()), !dbg !10674
  %4 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10675
  store %class.cGate** %4, %class.cGate*** %__middle, align 8, !dbg !10674
  %5 = load i64, i64* %__half, align 8, !dbg !10676
  call void @_ZSt7advanceIPP5cGatelEvRT_T0_(%class.cGate*** dereferenceable(8) %__middle, i64 %5), !dbg !10677
  %6 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10678
  %7 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10680
  %call2 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %__comp, %class.cGate** %6, %class.cGate** dereferenceable(8) %7), !dbg !10681
  br i1 %call2, label %if.then, label %if.else, !dbg !10682

if.then:                                          ; preds = %while.body
  %8 = load %class.cGate**, %class.cGate*** %__middle, align 8, !dbg !10683
  store %class.cGate** %8, %class.cGate*** %__first.addr, align 8, !dbg !10685
  %9 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10686
  %incdec.ptr = getelementptr inbounds %class.cGate*, %class.cGate** %9, i32 1, !dbg !10686
  store %class.cGate** %incdec.ptr, %class.cGate*** %__first.addr, align 8, !dbg !10686
  %10 = load i64, i64* %__len, align 8, !dbg !10687
  %11 = load i64, i64* %__half, align 8, !dbg !10688
  %sub = sub nsw i64 %10, %11, !dbg !10689
  %sub3 = sub nsw i64 %sub, 1, !dbg !10690
  store i64 %sub3, i64* %__len, align 8, !dbg !10691
  br label %if.end, !dbg !10692

if.else:                                          ; preds = %while.body
  %12 = load i64, i64* %__half, align 8, !dbg !10693
  store i64 %12, i64* %__len, align 8, !dbg !10694
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !10665, !llvm.loop !10695

while.end:                                        ; preds = %while.cond
  %13 = load %class.cGate**, %class.cGate*** %__first.addr, align 8, !dbg !10697
  ret %class.cGate** %13, !dbg !10698
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cGate** @_ZN9__gnu_cxx5__ops15__iter_comp_valI29less_gatePairConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_(%class.cGate** %__comp.coerce) #0 comdat !dbg !10699 {
entry:
  %retval = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", align 8
  %__comp = alloca %struct.less_gatePairConnectedOutside, align 8
  %agg.tmp = alloca %struct.less_gatePairConnectedOutside, align 8
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %__comp, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedOutside* %__comp, metadata !10702, metadata !DIExpression()), !dbg !10703
  %call = call dereferenceable(8) %struct.less_gatePairConnectedOutside* @_ZSt4moveIR29less_gatePairConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gatePairConnectedOutside* dereferenceable(8) %__comp) #3, !dbg !10704
  %0 = bitcast %struct.less_gatePairConnectedOutside* %agg.tmp to i8*, !dbg !10704
  %1 = bitcast %struct.less_gatePairConnectedOutside* %call to i8*, !dbg !10704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false), !dbg !10704
  %coerce.dive1 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %agg.tmp, i32 0, i32 0, !dbg !10705
  %2 = load %class.cGate**, %class.cGate*** %coerce.dive1, align 8, !dbg !10705
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %retval, %class.cGate** %2), !dbg !10705
  %coerce.dive2 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %retval, i32 0, i32 0, !dbg !10706
  %coerce.dive3 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %coerce.dive2, i32 0, i32 0, !dbg !10706
  %3 = load %class.cGate**, %class.cGate*** %coerce.dive3, align 8, !dbg !10706
  ret %class.cGate** %3, !dbg !10706
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %this, %class.cGate** %__it, %class.cGate** dereferenceable(8) %__val) #0 comdat align 2 !dbg !10707 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"*, align 8
  %__it.addr = alloca %class.cGate**, align 8
  %__val.addr = alloca %class.cGate**, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"** %this.addr, metadata !10711, metadata !DIExpression()), !dbg !10713
  store %class.cGate** %__it, %class.cGate*** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__it.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  store %class.cGate** %__val, %class.cGate*** %__val.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate*** %__val.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %this1, i32 0, i32 0, !dbg !10718
  %0 = load %class.cGate**, %class.cGate*** %__it.addr, align 8, !dbg !10719
  %1 = load %class.cGate*, %class.cGate** %0, align 8, !dbg !10720
  %2 = load %class.cGate**, %class.cGate*** %__val.addr, align 8, !dbg !10721
  %3 = load %class.cGate*, %class.cGate** %2, align 8, !dbg !10721
  %call = call zeroext i1 @_ZN29less_gatePairConnectedOutsideclEP5cGateS1_(%struct.less_gatePairConnectedOutside* %_M_comp, %class.cGate* %1, %class.cGate* %3), !dbg !10718
  ret i1 %call, !dbg !10722
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local zeroext i1 @_ZN29less_gatePairConnectedOutsideclEP5cGateS1_(%struct.less_gatePairConnectedOutside* %this, %class.cGate* %a, %class.cGate* %b) #0 comdat align 2 !dbg !10723 {
entry:
  %this.addr = alloca %struct.less_gatePairConnectedOutside*, align 8
  %a.addr = alloca %class.cGate*, align 8
  %b.addr = alloca %class.cGate*, align 8
  store %struct.less_gatePairConnectedOutside* %this, %struct.less_gatePairConnectedOutside** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedOutside** %this.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  store %class.cGate* %a, %class.cGate** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %a.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  store %class.cGate* %b, %class.cGate** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cGate** %b.addr, metadata !10728, metadata !DIExpression()), !dbg !10729
  %this1 = load %struct.less_gatePairConnectedOutside*, %struct.less_gatePairConnectedOutside** %this.addr, align 8
  %0 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10730
  %tobool = icmp ne %class.cGate* %0, null, !dbg !10730
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10731

land.rhs:                                         ; preds = %entry
  %1 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10732
  %call = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %1), !dbg !10733
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !10725
  %conv = zext i1 %2 to i32, !dbg !10734
  %3 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10735
  %tobool2 = icmp ne %class.cGate* %3, null, !dbg !10735
  br i1 %tobool2, label %land.rhs3, label %land.end5, !dbg !10736

land.rhs3:                                        ; preds = %land.end
  %4 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10737
  %call4 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %4), !dbg !10738
  br label %land.end5

land.end5:                                        ; preds = %land.rhs3, %land.end
  %5 = phi i1 [ false, %land.end ], [ %call4, %land.rhs3 ], !dbg !10725
  %conv6 = zext i1 %5 to i32, !dbg !10739
  %cmp = icmp sgt i32 %conv, %conv6, !dbg !10740
  br i1 %cmp, label %land.rhs7, label %land.end24, !dbg !10741

land.rhs7:                                        ; preds = %land.end5
  %6 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10742
  %tobool8 = icmp ne %class.cGate* %6, null, !dbg !10742
  br i1 %tobool8, label %land.rhs9, label %land.end12, !dbg !10743

land.rhs9:                                        ; preds = %land.rhs7
  %otherv = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %this1, i32 0, i32 0, !dbg !10744
  %7 = load %class.cGate**, %class.cGate*** %otherv, align 8, !dbg !10744
  %8 = load %class.cGate*, %class.cGate** %a.addr, align 8, !dbg !10745
  %call10 = call i32 @_ZNK5cGate8getIndexEv(%class.cGate* %8), !dbg !10746
  %idxprom = sext i32 %call10 to i64, !dbg !10744
  %arrayidx = getelementptr inbounds %class.cGate*, %class.cGate** %7, i64 %idxprom, !dbg !10744
  %9 = load %class.cGate*, %class.cGate** %arrayidx, align 8, !dbg !10744
  %call11 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %9), !dbg !10747
  br label %land.end12

land.end12:                                       ; preds = %land.rhs9, %land.rhs7
  %10 = phi i1 [ false, %land.rhs7 ], [ %call11, %land.rhs9 ], !dbg !10725
  %conv13 = zext i1 %10 to i32, !dbg !10748
  %11 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10749
  %tobool14 = icmp ne %class.cGate* %11, null, !dbg !10749
  br i1 %tobool14, label %land.rhs15, label %land.end21, !dbg !10750

land.rhs15:                                       ; preds = %land.end12
  %otherv16 = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %this1, i32 0, i32 0, !dbg !10751
  %12 = load %class.cGate**, %class.cGate*** %otherv16, align 8, !dbg !10751
  %13 = load %class.cGate*, %class.cGate** %b.addr, align 8, !dbg !10752
  %call17 = call i32 @_ZNK5cGate8getIndexEv(%class.cGate* %13), !dbg !10753
  %idxprom18 = sext i32 %call17 to i64, !dbg !10751
  %arrayidx19 = getelementptr inbounds %class.cGate*, %class.cGate** %12, i64 %idxprom18, !dbg !10751
  %14 = load %class.cGate*, %class.cGate** %arrayidx19, align 8, !dbg !10751
  %call20 = call zeroext i1 @_ZNK5cGate18isConnectedOutsideEv(%class.cGate* %14), !dbg !10754
  br label %land.end21

land.end21:                                       ; preds = %land.rhs15, %land.end12
  %15 = phi i1 [ false, %land.end12 ], [ %call20, %land.rhs15 ], !dbg !10725
  %conv22 = zext i1 %15 to i32, !dbg !10755
  %cmp23 = icmp sgt i32 %conv13, %conv22, !dbg !10756
  br label %land.end24

land.end24:                                       ; preds = %land.end21, %land.end5
  %16 = phi i1 [ false, %land.end5 ], [ %cmp23, %land.end21 ], !dbg !10725
  ret i1 %16, !dbg !10757
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.less_gatePairConnectedOutside* @_ZSt4moveIR29less_gatePairConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gatePairConnectedOutside* dereferenceable(8) %__t) #5 comdat !dbg !10758 {
entry:
  %__t.addr = alloca %struct.less_gatePairConnectedOutside*, align 8
  store %struct.less_gatePairConnectedOutside* %__t, %struct.less_gatePairConnectedOutside** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedOutside** %__t.addr, metadata !10767, metadata !DIExpression()), !dbg !10768
  %0 = load %struct.less_gatePairConnectedOutside*, %struct.less_gatePairConnectedOutside** %__t.addr, align 8, !dbg !10769
  ret %struct.less_gatePairConnectedOutside* %0, !dbg !10770
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEC2ES2_(%"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %this, %class.cGate** %__comp.coerce) unnamed_addr #5 comdat align 2 !dbg !10771 {
entry:
  %__comp = alloca %struct.less_gatePairConnectedOutside, align 8
  %this.addr = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"*, align 8
  %coerce.dive = getelementptr inbounds %struct.less_gatePairConnectedOutside, %struct.less_gatePairConnectedOutside* %__comp, i32 0, i32 0
  store %class.cGate** %__comp.coerce, %class.cGate*** %coerce.dive, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %this, %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"** %this.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata %struct.less_gatePairConnectedOutside* %__comp, metadata !10774, metadata !DIExpression()), !dbg !10775
  %this1 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"** %this.addr, align 8
  %_M_comp = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val.45", %"struct.__gnu_cxx::__ops::_Iter_comp_val.45"* %this1, i32 0, i32 0, !dbg !10776
  %call = call dereferenceable(8) %struct.less_gatePairConnectedOutside* @_ZSt4moveIR29less_gatePairConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_(%struct.less_gatePairConnectedOutside* dereferenceable(8) %__comp) #3, !dbg !10777
  %0 = bitcast %struct.less_gatePairConnectedOutside* %_M_comp to i8*, !dbg !10776
  %1 = bitcast %struct.less_gatePairConnectedOutside* %call to i8*, !dbg !10776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false), !dbg !10776
  ret void, !dbg !10778
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.31"* %this, %class.cChannel** %__pos) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !10779 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %__pos.addr = alloca %class.cChannel**, align 8
  %__n = alloca i64, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !10780, metadata !DIExpression()), !dbg !10781
  store %class.cChannel** %__pos, %class.cChannel*** %__pos.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__pos.addr, metadata !10782, metadata !DIExpression()), !dbg !10783
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !10784, metadata !DIExpression()), !dbg !10786
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10787
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !10787
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10788
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !10789
  %2 = load %class.cChannel**, %class.cChannel*** %_M_finish, align 8, !dbg !10789
  %3 = load %class.cChannel**, %class.cChannel*** %__pos.addr, align 8, !dbg !10790
  %sub.ptr.lhs.cast = ptrtoint %class.cChannel** %2 to i64, !dbg !10791
  %sub.ptr.rhs.cast = ptrtoint %class.cChannel** %3 to i64, !dbg !10791
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10791
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !10791
  store i64 %sub.ptr.div, i64* %__n, align 8, !dbg !10786
  %4 = load i64, i64* %__n, align 8, !dbg !10786
  %tobool = icmp ne i64 %4, 0, !dbg !10786
  br i1 %tobool, label %if.then, label %if.end, !dbg !10792

if.then:                                          ; preds = %entry
  %5 = load %class.cChannel**, %class.cChannel*** %__pos.addr, align 8, !dbg !10793
  %6 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10795
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %6, i32 0, i32 0, !dbg !10795
  %7 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10796
  %_M_finish3 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %7, i32 0, i32 1, !dbg !10797
  %8 = load %class.cChannel**, %class.cChannel*** %_M_finish3, align 8, !dbg !10797
  %9 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10798
  %call = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %9) #3, !dbg !10798
  invoke void @_ZSt8_DestroyIPP8cChannelS1_EvT_S3_RSaIT0_E(%class.cChannel** %5, %class.cChannel** %8, %"class.std::allocator.33"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !10799

invoke.cont:                                      ; preds = %if.then
  %10 = load %class.cChannel**, %class.cChannel*** %__pos.addr, align 8, !dbg !10800
  %11 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10801
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %11, i32 0, i32 0, !dbg !10801
  %12 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10802
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %12, i32 0, i32 1, !dbg !10803
  store %class.cChannel** %10, %class.cChannel*** %_M_finish5, align 8, !dbg !10804
  br label %if.end, !dbg !10805

if.end:                                           ; preds = %invoke.cont, %entry
  ret void, !dbg !10806

terminate.lpad:                                   ; preds = %if.then
  %13 = landingpad { i8*, i32 }
          catch i8* null, !dbg !10799
  %14 = extractvalue { i8*, i32 } %13, 0, !dbg !10799
  call void @__clang_call_terminate(i8* %14) #18, !dbg !10799
  unreachable, !dbg !10799
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.31"* %this, %class.cChannel** dereferenceable(8) %__args) #0 comdat align 2 !dbg !10807 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %__args.addr = alloca %class.cChannel**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store %class.cChannel** %__args, %class.cChannel*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__args.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10819
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !10819
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10821
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !10822
  %2 = load %class.cChannel**, %class.cChannel*** %_M_finish, align 8, !dbg !10822
  %3 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10823
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0, !dbg !10823
  %4 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10824
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %4, i32 0, i32 2, !dbg !10825
  %5 = load %class.cChannel**, %class.cChannel*** %_M_end_of_storage, align 8, !dbg !10825
  %cmp = icmp ne %class.cChannel** %2, %5, !dbg !10826
  br i1 %cmp, label %if.then, label %if.else, !dbg !10827

if.then:                                          ; preds = %entry
  %6 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10828
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %6, i32 0, i32 0, !dbg !10828
  %7 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl3 to %"class.std::allocator.33"*, !dbg !10830
  %8 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10831
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %8, i32 0, i32 0, !dbg !10831
  %9 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10832
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %9, i32 0, i32 1, !dbg !10833
  %10 = load %class.cChannel**, %class.cChannel*** %_M_finish5, align 8, !dbg !10833
  %11 = load %class.cChannel**, %class.cChannel*** %__args.addr, align 8, !dbg !10834
  %call = call dereferenceable(8) %class.cChannel** @_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE(%class.cChannel** dereferenceable(8) %11) #3, !dbg !10835
  call void @_ZNSt16allocator_traitsISaIP8cChannelEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %7, %class.cChannel** %10, %class.cChannel** dereferenceable(8) %call) #3, !dbg !10836
  %12 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10837
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %12, i32 0, i32 0, !dbg !10837
  %13 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl6 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10838
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %13, i32 0, i32 1, !dbg !10839
  %14 = load %class.cChannel**, %class.cChannel*** %_M_finish7, align 8, !dbg !10840
  %incdec.ptr = getelementptr inbounds %class.cChannel*, %class.cChannel** %14, i32 1, !dbg !10840
  store %class.cChannel** %incdec.ptr, %class.cChannel*** %_M_finish7, align 8, !dbg !10840
  br label %if.end, !dbg !10841

if.else:                                          ; preds = %entry
  %call8 = call %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE3endEv(%"class.std::vector.31"* %this1) #3, !dbg !10842
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %agg.tmp, i32 0, i32 0, !dbg !10842
  store %class.cChannel** %call8, %class.cChannel*** %coerce.dive, align 8, !dbg !10842
  %15 = load %class.cChannel**, %class.cChannel*** %__args.addr, align 8, !dbg !10843
  %call9 = call dereferenceable(8) %class.cChannel** @_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE(%class.cChannel** dereferenceable(8) %15) #3, !dbg !10844
  %coerce.dive10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %agg.tmp, i32 0, i32 0, !dbg !10845
  %16 = load %class.cChannel**, %class.cChannel*** %coerce.dive10, align 8, !dbg !10845
  call void @_ZNSt6vectorIP8cChannelSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.31"* %this1, %class.cChannel** %16, %class.cChannel** dereferenceable(8) %call9), !dbg !10845
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10846
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %class.cChannel** @_ZSt4moveIRP8cChannelEONSt16remove_referenceIT_E4typeEOS4_(%class.cChannel** dereferenceable(8) %__t) #5 comdat !dbg !10847 {
entry:
  %__t.addr = alloca %class.cChannel**, align 8
  store %class.cChannel** %__t, %class.cChannel*** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__t.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  %0 = load %class.cChannel**, %class.cChannel*** %__t.addr, align 8, !dbg !10857
  ret %class.cChannel** %0, !dbg !10858
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP8cChannelEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %__a, %class.cChannel** %__p, %class.cChannel** dereferenceable(8) %__args) #5 comdat align 2 !dbg !10859 {
entry:
  %__a.addr = alloca %"class.std::allocator.33"*, align 8
  %__p.addr = alloca %class.cChannel**, align 8
  %__args.addr = alloca %class.cChannel**, align 8
  store %"class.std::allocator.33"* %__a, %"class.std::allocator.33"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__a.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  store %class.cChannel** %__p, %class.cChannel*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__p.addr, metadata !10867, metadata !DIExpression()), !dbg !10868
  store %class.cChannel** %__args, %class.cChannel*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__args.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  %0 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__a.addr, align 8, !dbg !10871
  %1 = bitcast %"class.std::allocator.33"* %0 to %"class.__gnu_cxx::new_allocator.34"*, !dbg !10871
  %2 = load %class.cChannel**, %class.cChannel*** %__p.addr, align 8, !dbg !10872
  %3 = load %class.cChannel**, %class.cChannel*** %__args.addr, align 8, !dbg !10873
  %call = call dereferenceable(8) %class.cChannel** @_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE(%class.cChannel** dereferenceable(8) %3) #3, !dbg !10874
  call void @_ZN9__gnu_cxx13new_allocatorIP8cChannelE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %1, %class.cChannel** %2, %class.cChannel** dereferenceable(8) %call) #3, !dbg !10875
  ret void, !dbg !10876
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %class.cChannel** @_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE(%class.cChannel** dereferenceable(8) %__t) #5 comdat !dbg !10877 {
entry:
  %__t.addr = alloca %class.cChannel**, align 8
  store %class.cChannel** %__t, %class.cChannel*** %__t.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__t.addr, metadata !10883, metadata !DIExpression()), !dbg !10884
  %0 = load %class.cChannel**, %class.cChannel*** %__t.addr, align 8, !dbg !10885
  ret %class.cChannel** %0, !dbg !10886
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8cChannelSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector.31"* %this, %class.cChannel** %__position.coerce, %class.cChannel** dereferenceable(8) %__args) #0 comdat align 2 !dbg !10887 {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %__args.addr = alloca %class.cChannel**, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca %class.cChannel**, align 8
  %__old_finish = alloca %class.cChannel**, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %__new_start = alloca %class.cChannel**, align 8
  %__new_finish = alloca %class.cChannel**, align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %__position, i32 0, i32 0
  store %class.cChannel** %__position.coerce, %class.cChannel*** %coerce.dive, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator.46"* %__position, metadata !10893, metadata !DIExpression()), !dbg !10894
  store %class.cChannel** %__args, %class.cChannel*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__args.addr, metadata !10895, metadata !DIExpression()), !dbg !10896
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !10897, metadata !DIExpression()), !dbg !10898
  %call = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"* %this1, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0)), !dbg !10899
  store i64 %call, i64* %__len, align 8, !dbg !10898
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__old_start, metadata !10900, metadata !DIExpression()), !dbg !10901
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10902
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !10902
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10903
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !10904
  %2 = load %class.cChannel**, %class.cChannel*** %_M_start, align 8, !dbg !10904
  store %class.cChannel** %2, %class.cChannel*** %__old_start, align 8, !dbg !10901
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__old_finish, metadata !10905, metadata !DIExpression()), !dbg !10906
  %3 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10907
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0, !dbg !10907
  %4 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10908
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %4, i32 0, i32 1, !dbg !10909
  %5 = load %class.cChannel**, %class.cChannel*** %_M_finish, align 8, !dbg !10909
  store %class.cChannel** %5, %class.cChannel*** %__old_finish, align 8, !dbg !10906
  call void @llvm.dbg.declare(metadata i64* %__elems_before, metadata !10910, metadata !DIExpression()), !dbg !10911
  %call3 = call %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE5beginEv(%"class.std::vector.31"* %this1) #3, !dbg !10912
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %ref.tmp, i32 0, i32 0, !dbg !10912
  store %class.cChannel** %call3, %class.cChannel*** %coerce.dive4, align 8, !dbg !10912
  %call5 = call i64 @_ZN9__gnu_cxxmiIPP8cChannelSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %ref.tmp) #3, !dbg !10913
  store i64 %call5, i64* %__elems_before, align 8, !dbg !10911
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__new_start, metadata !10914, metadata !DIExpression()), !dbg !10915
  %6 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10916
  %7 = load i64, i64* %__len, align 8, !dbg !10917
  %call6 = call %class.cChannel** @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"* %6, i64 %7), !dbg !10916
  store %class.cChannel** %call6, %class.cChannel*** %__new_start, align 8, !dbg !10915
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__new_finish, metadata !10918, metadata !DIExpression()), !dbg !10919
  %8 = load %class.cChannel**, %class.cChannel*** %__new_start, align 8, !dbg !10920
  store %class.cChannel** %8, %class.cChannel*** %__new_finish, align 8, !dbg !10919
  %9 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10921
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %9, i32 0, i32 0, !dbg !10921
  %10 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl7 to %"class.std::allocator.33"*, !dbg !10923
  %11 = load %class.cChannel**, %class.cChannel*** %__new_start, align 8, !dbg !10924
  %12 = load i64, i64* %__elems_before, align 8, !dbg !10925
  %add.ptr = getelementptr inbounds %class.cChannel*, %class.cChannel** %11, i64 %12, !dbg !10926
  %13 = load %class.cChannel**, %class.cChannel*** %__args.addr, align 8, !dbg !10927
  %call8 = call dereferenceable(8) %class.cChannel** @_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE(%class.cChannel** dereferenceable(8) %13) #3, !dbg !10928
  call void @_ZNSt16allocator_traitsISaIP8cChannelEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %10, %class.cChannel** %add.ptr, %class.cChannel** dereferenceable(8) %call8) #3, !dbg !10929
  store %class.cChannel** null, %class.cChannel*** %__new_finish, align 8, !dbg !10930
  %14 = load %class.cChannel**, %class.cChannel*** %__old_start, align 8, !dbg !10931
  %call9 = call dereferenceable(8) %class.cChannel*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %__position) #3, !dbg !10934
  %15 = load %class.cChannel**, %class.cChannel*** %call9, align 8, !dbg !10934
  %16 = load %class.cChannel**, %class.cChannel*** %__new_start, align 8, !dbg !10935
  %17 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10936
  %call10 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %17) #3, !dbg !10936
  %call11 = call %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(%class.cChannel** %14, %class.cChannel** %15, %class.cChannel** %16, %"class.std::allocator.33"* dereferenceable(1) %call10) #3, !dbg !10937
  store %class.cChannel** %call11, %class.cChannel*** %__new_finish, align 8, !dbg !10938
  %18 = load %class.cChannel**, %class.cChannel*** %__new_finish, align 8, !dbg !10939
  %incdec.ptr = getelementptr inbounds %class.cChannel*, %class.cChannel** %18, i32 1, !dbg !10939
  store %class.cChannel** %incdec.ptr, %class.cChannel*** %__new_finish, align 8, !dbg !10939
  %call12 = call dereferenceable(8) %class.cChannel*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %__position) #3, !dbg !10940
  %19 = load %class.cChannel**, %class.cChannel*** %call12, align 8, !dbg !10940
  %20 = load %class.cChannel**, %class.cChannel*** %__old_finish, align 8, !dbg !10941
  %21 = load %class.cChannel**, %class.cChannel*** %__new_finish, align 8, !dbg !10942
  %22 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10943
  %call13 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %22) #3, !dbg !10943
  %call14 = call %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(%class.cChannel** %19, %class.cChannel** %20, %class.cChannel** %21, %"class.std::allocator.33"* dereferenceable(1) %call13) #3, !dbg !10944
  store %class.cChannel** %call14, %class.cChannel*** %__new_finish, align 8, !dbg !10945
  %23 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10946
  %24 = load %class.cChannel**, %class.cChannel*** %__old_start, align 8, !dbg !10947
  %25 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10948
  %_M_impl15 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %25, i32 0, i32 0, !dbg !10948
  %26 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl15 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10949
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %26, i32 0, i32 2, !dbg !10950
  %27 = load %class.cChannel**, %class.cChannel*** %_M_end_of_storage, align 8, !dbg !10950
  %28 = load %class.cChannel**, %class.cChannel*** %__old_start, align 8, !dbg !10951
  %sub.ptr.lhs.cast = ptrtoint %class.cChannel** %27 to i64, !dbg !10952
  %sub.ptr.rhs.cast = ptrtoint %class.cChannel** %28 to i64, !dbg !10952
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10952
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !10952
  call void @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %23, %class.cChannel** %24, i64 %sub.ptr.div), !dbg !10946
  %29 = load %class.cChannel**, %class.cChannel*** %__new_start, align 8, !dbg !10953
  %30 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10954
  %_M_impl16 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %30, i32 0, i32 0, !dbg !10954
  %31 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl16 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10955
  %_M_start17 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %31, i32 0, i32 0, !dbg !10956
  store %class.cChannel** %29, %class.cChannel*** %_M_start17, align 8, !dbg !10957
  %32 = load %class.cChannel**, %class.cChannel*** %__new_finish, align 8, !dbg !10958
  %33 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10959
  %_M_impl18 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %33, i32 0, i32 0, !dbg !10959
  %34 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl18 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10960
  %_M_finish19 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %34, i32 0, i32 1, !dbg !10961
  store %class.cChannel** %32, %class.cChannel*** %_M_finish19, align 8, !dbg !10962
  %35 = load %class.cChannel**, %class.cChannel*** %__new_start, align 8, !dbg !10963
  %36 = load i64, i64* %__len, align 8, !dbg !10964
  %add.ptr20 = getelementptr inbounds %class.cChannel*, %class.cChannel** %35, i64 %36, !dbg !10965
  %37 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10966
  %_M_impl21 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %37, i32 0, i32 0, !dbg !10966
  %38 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl21 to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10967
  %_M_end_of_storage22 = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %38, i32 0, i32 2, !dbg !10968
  store %class.cChannel** %add.ptr20, %class.cChannel*** %_M_end_of_storage22, align 8, !dbg !10969
  ret void, !dbg !10970
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE3endEv(%"class.std::vector.31"* %this) #5 comdat align 2 !dbg !10971 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %this.addr = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !10974
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !10974
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !10975
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 1, !dbg !10976
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.46"* %retval, %class.cChannel*** dereferenceable(8) %_M_finish) #3, !dbg !10977
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %retval, i32 0, i32 0, !dbg !10978
  %2 = load %class.cChannel**, %class.cChannel*** %coerce.dive, align 8, !dbg !10978
  ret %class.cChannel** %2, !dbg !10978
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8cChannelE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %this, %class.cChannel** %__p, %class.cChannel** dereferenceable(8) %__args) #5 comdat align 2 !dbg !10979 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %__p.addr = alloca %class.cChannel**, align 8
  %__args.addr = alloca %class.cChannel**, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !10983, metadata !DIExpression()), !dbg !10984
  store %class.cChannel** %__p, %class.cChannel*** %__p.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__p.addr, metadata !10985, metadata !DIExpression()), !dbg !10986
  store %class.cChannel** %__args, %class.cChannel*** %__args.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__args.addr, metadata !10987, metadata !DIExpression()), !dbg !10988
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  %0 = load %class.cChannel**, %class.cChannel*** %__p.addr, align 8, !dbg !10989
  %1 = bitcast %class.cChannel** %0 to i8*, !dbg !10989
  %2 = bitcast i8* %1 to %class.cChannel**, !dbg !10990
  %3 = load %class.cChannel**, %class.cChannel*** %__args.addr, align 8, !dbg !10991
  %call = call dereferenceable(8) %class.cChannel** @_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE(%class.cChannel** dereferenceable(8) %3) #3, !dbg !10992
  %4 = load %class.cChannel*, %class.cChannel** %call, align 8, !dbg !10992
  store %class.cChannel* %4, %class.cChannel** %2, align 8, !dbg !10990
  ret void, !dbg !10993
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"* %this, i64 %__n, i8* %__s) #0 comdat align 2 !dbg !10994 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !10995, metadata !DIExpression()), !dbg !10996
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  store i8* %__s, i8** %__s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__s.addr, metadata !10999, metadata !DIExpression()), !dbg !11000
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11001
  %call2 = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11003
  %sub = sub i64 %call, %call2, !dbg !11004
  %0 = load i64, i64* %__n.addr, align 8, !dbg !11005
  %cmp = icmp ult i64 %sub, %0, !dbg !11006
  br i1 %cmp, label %if.then, label %if.end, !dbg !11007

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8, !dbg !11008
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #16, !dbg !11009
  unreachable, !dbg !11009

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !11010, metadata !DIExpression()), !dbg !11011
  %call3 = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11012
  %call4 = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11013
  store i64 %call4, i64* %ref.tmp, align 8, !dbg !11013
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr), !dbg !11014
  %2 = load i64, i64* %call5, align 8, !dbg !11014
  %add = add i64 %call3, %2, !dbg !11015
  store i64 %add, i64* %__len, align 8, !dbg !11011
  %3 = load i64, i64* %__len, align 8, !dbg !11016
  %call6 = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11017
  %cmp7 = icmp ult i64 %3, %call6, !dbg !11018
  br i1 %cmp7, label %cond.true, label %lor.lhs.false, !dbg !11019

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8, !dbg !11020
  %call8 = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11021
  %cmp9 = icmp ugt i64 %4, %call8, !dbg !11022
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !11023

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv(%"class.std::vector.31"* %this1) #3, !dbg !11024
  br label %cond.end, !dbg !11023

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8, !dbg !11025
  br label %cond.end, !dbg !11023

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ], !dbg !11023
  ret i64 %cond, !dbg !11026
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPP8cChannelSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %__rhs) #5 comdat !dbg !11027 {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %__lhs, %"class.__gnu_cxx::__normal_iterator.46"** %__lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator.46"** %__lhs.addr, metadata !11031, metadata !DIExpression()), !dbg !11032
  store %"class.__gnu_cxx::__normal_iterator.46"* %__rhs, %"class.__gnu_cxx::__normal_iterator.46"** %__rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator.46"** %__rhs.addr, metadata !11033, metadata !DIExpression()), !dbg !11034
  %0 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %__lhs.addr, align 8, !dbg !11035
  %call = call dereferenceable(8) %class.cChannel*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %0) #3, !dbg !11036
  %1 = load %class.cChannel**, %class.cChannel*** %call, align 8, !dbg !11036
  %2 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %__rhs.addr, align 8, !dbg !11037
  %call1 = call dereferenceable(8) %class.cChannel*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %2) #3, !dbg !11038
  %3 = load %class.cChannel**, %class.cChannel*** %call1, align 8, !dbg !11038
  %sub.ptr.lhs.cast = ptrtoint %class.cChannel** %1 to i64, !dbg !11039
  %sub.ptr.rhs.cast = ptrtoint %class.cChannel** %3 to i64, !dbg !11039
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11039
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !11039
  ret i64 %sub.ptr.div, !dbg !11040
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE5beginEv(%"class.std::vector.31"* %this) #5 comdat align 2 !dbg !11041 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %this.addr = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !11042, metadata !DIExpression()), !dbg !11043
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !11044
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %0, i32 0, i32 0, !dbg !11044
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"*, !dbg !11045
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data", %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl_data"* %1, i32 0, i32 0, !dbg !11046
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.46"* %retval, %class.cChannel*** dereferenceable(8) %_M_start) #3, !dbg !11047
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %retval, i32 0, i32 0, !dbg !11048
  %2 = load %class.cChannel**, %class.cChannel*** %coerce.dive, align 8, !dbg !11048
  ret %class.cChannel** %2, !dbg !11048
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cChannel** @_ZNSt12_Vector_baseIP8cChannelSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"* %this, i64 %__n) #0 comdat align 2 !dbg !11049 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.32"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.32"* %this, %"struct.std::_Vector_base.32"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.32"** %this.addr, metadata !11050, metadata !DIExpression()), !dbg !11051
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !11052, metadata !DIExpression()), !dbg !11053
  %this1 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !dbg !11054
  %cmp = icmp ne i64 %0, 0, !dbg !11055
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11054

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !11056
  %1 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.33"*, !dbg !11056
  %2 = load i64, i64* %__n.addr, align 8, !dbg !11057
  %call = call %class.cChannel** @_ZNSt16allocator_traitsISaIP8cChannelEE8allocateERS2_m(%"class.std::allocator.33"* dereferenceable(1) %1, i64 %2), !dbg !11058
  br label %cond.end, !dbg !11054

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11054

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %class.cChannel** [ %call, %cond.true ], [ null, %cond.false ], !dbg !11054
  ret %class.cChannel** %cond, !dbg !11059
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(%class.cChannel** %__first, %class.cChannel** %__last, %class.cChannel** %__result, %"class.std::allocator.33"* dereferenceable(1) %__alloc) #5 comdat align 2 !dbg !2636 {
entry:
  %__first.addr = alloca %class.cChannel**, align 8
  %__last.addr = alloca %class.cChannel**, align 8
  %__result.addr = alloca %class.cChannel**, align 8
  %__alloc.addr = alloca %"class.std::allocator.33"*, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store %class.cChannel** %__first, %class.cChannel*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__first.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  store %class.cChannel** %__last, %class.cChannel*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__last.addr, metadata !11062, metadata !DIExpression()), !dbg !11063
  store %class.cChannel** %__result, %class.cChannel*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__result.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  store %"class.std::allocator.33"* %__alloc, %"class.std::allocator.33"** %__alloc.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__alloc.addr, metadata !11066, metadata !DIExpression()), !dbg !11067
  %0 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !11068
  %1 = load %class.cChannel**, %class.cChannel*** %__last.addr, align 8, !dbg !11069
  %2 = load %class.cChannel**, %class.cChannel*** %__result.addr, align 8, !dbg !11070
  %3 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__alloc.addr, align 8, !dbg !11071
  %call = call %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE(%class.cChannel** %0, %class.cChannel** %1, %class.cChannel** %2, %"class.std::allocator.33"* dereferenceable(1) %3) #3, !dbg !11072
  ret %class.cChannel** %call, !dbg !11073
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) %class.cChannel*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %this) #5 comdat align 2 !dbg !11074 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %this, %"class.__gnu_cxx::__normal_iterator.46"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator.46"** %this.addr, metadata !11075, metadata !DIExpression()), !dbg !11077
  %this1 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %this1, i32 0, i32 0, !dbg !11078
  ret %class.cChannel*** %_M_current, !dbg !11079
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv(%"class.std::vector.31"* %this) #5 comdat align 2 !dbg !11080 {
entry:
  %this.addr = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %this, %"class.std::vector.31"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::vector.31"** %this.addr, metadata !11081, metadata !DIExpression()), !dbg !11082
  %this1 = load %"class.std::vector.31"*, %"class.std::vector.31"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.31"* %this1 to %"struct.std::_Vector_base.32"*, !dbg !11083
  %call = call dereferenceable(1) %"class.std::allocator.33"* @_ZNKSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %0) #3, !dbg !11083
  %call2 = call i64 @_ZNSt6vectorIP8cChannelSaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.33"* dereferenceable(1) %call) #3, !dbg !11084
  ret i64 %call2, !dbg !11085
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt6vectorIP8cChannelSaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator.33"* dereferenceable(1) %__a) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !11086 {
entry:
  %__a.addr = alloca %"class.std::allocator.33"*, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store %"class.std::allocator.33"* %__a, %"class.std::allocator.33"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__a.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  call void @llvm.dbg.declare(metadata i64* %__diffmax, metadata !11089, metadata !DIExpression()), !dbg !11090
  store i64 1152921504606846975, i64* %__diffmax, align 8, !dbg !11090
  call void @llvm.dbg.declare(metadata i64* %__allocmax, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__a.addr, align 8, !dbg !11093
  %call = call i64 @_ZNSt16allocator_traitsISaIP8cChannelEE8max_sizeERKS2_(%"class.std::allocator.33"* dereferenceable(1) %0) #3, !dbg !11094
  store i64 %call, i64* %__allocmax, align 8, !dbg !11092
  %call1 = invoke dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %__diffmax, i64* dereferenceable(8) %__allocmax)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !11095

invoke.cont:                                      ; preds = %entry
  %1 = load i64, i64* %call1, align 8, !dbg !11095
  ret i64 %1, !dbg !11096

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null, !dbg !11095
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !11095
  call void @__clang_call_terminate(i8* %3) #18, !dbg !11095
  unreachable, !dbg !11095
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator.33"* @_ZNKSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %this) #5 comdat align 2 !dbg !11097 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %this, %"struct.std::_Vector_base.32"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"struct.std::_Vector_base.32"** %this.addr, metadata !11098, metadata !DIExpression()), !dbg !11100
  %this1 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %this1, i32 0, i32 0, !dbg !11101
  %0 = bitcast %"struct.std::_Vector_base<cChannel *, std::allocator<cChannel *> >::_Vector_impl"* %_M_impl to %"class.std::allocator.33"*, !dbg !11102
  ret %"class.std::allocator.33"* %0, !dbg !11103
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIP8cChannelEE8max_sizeERKS2_(%"class.std::allocator.33"* dereferenceable(1) %__a) #5 comdat align 2 !dbg !11104 {
entry:
  %__a.addr = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %__a, %"class.std::allocator.33"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__a.addr, metadata !11105, metadata !DIExpression()), !dbg !11106
  %0 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__a.addr, align 8, !dbg !11107
  %1 = bitcast %"class.std::allocator.33"* %0 to %"class.__gnu_cxx::new_allocator.34"*, !dbg !11107
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIP8cChannelE8max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %1) #3, !dbg !11108
  ret i64 %call, !dbg !11109
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIP8cChannelE8max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %this) #5 comdat align 2 !dbg !11110 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !11111, metadata !DIExpression()), !dbg !11113
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIP8cChannelE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %this1) #3, !dbg !11114
  ret i64 %call, !dbg !11115
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIP8cChannelE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %this) #5 comdat align 2 !dbg !11116 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !11117, metadata !DIExpression()), !dbg !11118
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  ret i64 1152921504606846975, !dbg !11119
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.46"* %this, %class.cChannel*** dereferenceable(8) %__i) unnamed_addr #5 comdat align 2 !dbg !11120 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  %__i.addr = alloca %class.cChannel***, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %this, %"class.__gnu_cxx::__normal_iterator.46"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::__normal_iterator.46"** %this.addr, metadata !11121, metadata !DIExpression()), !dbg !11123
  store %class.cChannel*** %__i, %class.cChannel**** %__i.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel**** %__i.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  %this1 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %this1, i32 0, i32 0, !dbg !11126
  %0 = load %class.cChannel***, %class.cChannel**** %__i.addr, align 8, !dbg !11127
  %1 = load %class.cChannel**, %class.cChannel*** %0, align 8, !dbg !11127
  store %class.cChannel** %1, %class.cChannel*** %_M_current, align 8, !dbg !11126
  ret void, !dbg !11128
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cChannel** @_ZNSt16allocator_traitsISaIP8cChannelEE8allocateERS2_m(%"class.std::allocator.33"* dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 !dbg !11129 {
entry:
  %__a.addr = alloca %"class.std::allocator.33"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.33"* %__a, %"class.std::allocator.33"** %__a.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__a.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !11132, metadata !DIExpression()), !dbg !11133
  %0 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__a.addr, align 8, !dbg !11134
  %1 = bitcast %"class.std::allocator.33"* %0 to %"class.__gnu_cxx::new_allocator.34"*, !dbg !11134
  %2 = load i64, i64* %__n.addr, align 8, !dbg !11135
  %call = call %class.cChannel** @_ZN9__gnu_cxx13new_allocatorIP8cChannelE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.34"* %1, i64 %2, i8* null), !dbg !11136
  ret %class.cChannel** %call, !dbg !11137
}

; Function Attrs: noinline uwtable
define linkonce_odr dso_local %class.cChannel** @_ZN9__gnu_cxx13new_allocatorIP8cChannelE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.34"* %this, i64 %__n, i8* %0) #0 comdat align 2 !dbg !11138 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %this, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator.34"** %this.addr, metadata !11139, metadata !DIExpression()), !dbg !11140
  store i64 %__n, i64* %__n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  store i8* %0, i8** %.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %.addr, metadata !11143, metadata !DIExpression()), !dbg !11144
  %this1 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !dbg !11145
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIP8cChannelE11_M_max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %this1) #3, !dbg !11147
  %cmp = icmp ugt i64 %1, %call, !dbg !11148
  br i1 %cmp, label %if.then, label %if.end, !dbg !11149

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #16, !dbg !11150
  unreachable, !dbg !11150

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !dbg !11151
  %mul = mul i64 %2, 8, !dbg !11152
  %call2 = call i8* @_Znwm(i64 %mul), !dbg !11153
  %3 = bitcast i8* %call2 to %class.cChannel**, !dbg !11154
  ret %class.cChannel** %3, !dbg !11155
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZNSt6vectorIP8cChannelSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE(%class.cChannel** %__first, %class.cChannel** %__last, %class.cChannel** %__result, %"class.std::allocator.33"* dereferenceable(1) %__alloc) #5 comdat align 2 !dbg !11156 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %__first.addr = alloca %class.cChannel**, align 8
  %__last.addr = alloca %class.cChannel**, align 8
  %__result.addr = alloca %class.cChannel**, align 8
  %__alloc.addr = alloca %"class.std::allocator.33"*, align 8
  store %class.cChannel** %__first, %class.cChannel*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__first.addr, metadata !11157, metadata !DIExpression()), !dbg !11158
  store %class.cChannel** %__last, %class.cChannel*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__last.addr, metadata !11159, metadata !DIExpression()), !dbg !11160
  store %class.cChannel** %__result, %class.cChannel*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__result.addr, metadata !11161, metadata !DIExpression()), !dbg !11162
  store %"class.std::allocator.33"* %__alloc, %"class.std::allocator.33"** %__alloc.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__alloc.addr, metadata !11163, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.declare(metadata %"struct.std::integral_constant"* %0, metadata !11165, metadata !DIExpression()), !dbg !11166
  %1 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !11167
  %2 = load %class.cChannel**, %class.cChannel*** %__last.addr, align 8, !dbg !11168
  %3 = load %class.cChannel**, %class.cChannel*** %__result.addr, align 8, !dbg !11169
  %4 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__alloc.addr, align 8, !dbg !11170
  %call = call %class.cChannel** @_ZSt12__relocate_aIPP8cChannelS2_SaIS1_EET0_T_S5_S4_RT1_(%class.cChannel** %1, %class.cChannel** %2, %class.cChannel** %3, %"class.std::allocator.33"* dereferenceable(1) %4) #3, !dbg !11171
  ret %class.cChannel** %call, !dbg !11172
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZSt12__relocate_aIPP8cChannelS2_SaIS1_EET0_T_S5_S4_RT1_(%class.cChannel** %__first, %class.cChannel** %__last, %class.cChannel** %__result, %"class.std::allocator.33"* dereferenceable(1) %__alloc) #5 comdat !dbg !11173 {
entry:
  %__first.addr = alloca %class.cChannel**, align 8
  %__last.addr = alloca %class.cChannel**, align 8
  %__result.addr = alloca %class.cChannel**, align 8
  %__alloc.addr = alloca %"class.std::allocator.33"*, align 8
  store %class.cChannel** %__first, %class.cChannel*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__first.addr, metadata !11179, metadata !DIExpression()), !dbg !11180
  store %class.cChannel** %__last, %class.cChannel*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__last.addr, metadata !11181, metadata !DIExpression()), !dbg !11182
  store %class.cChannel** %__result, %class.cChannel*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__result.addr, metadata !11183, metadata !DIExpression()), !dbg !11184
  store %"class.std::allocator.33"* %__alloc, %"class.std::allocator.33"** %__alloc.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %__alloc.addr, metadata !11185, metadata !DIExpression()), !dbg !11186
  %0 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !11187
  %call = call %class.cChannel** @_ZSt12__niter_baseIPP8cChannelET_S3_(%class.cChannel** %0) #3, !dbg !11188
  %1 = load %class.cChannel**, %class.cChannel*** %__last.addr, align 8, !dbg !11189
  %call1 = call %class.cChannel** @_ZSt12__niter_baseIPP8cChannelET_S3_(%class.cChannel** %1) #3, !dbg !11190
  %2 = load %class.cChannel**, %class.cChannel*** %__result.addr, align 8, !dbg !11191
  %call2 = call %class.cChannel** @_ZSt12__niter_baseIPP8cChannelET_S3_(%class.cChannel** %2) #3, !dbg !11192
  %3 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %__alloc.addr, align 8, !dbg !11193
  %call3 = call %class.cChannel** @_ZSt14__relocate_a_1IP8cChannelS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(%class.cChannel** %call, %class.cChannel** %call1, %class.cChannel** %call2, %"class.std::allocator.33"* dereferenceable(1) %3) #3, !dbg !11194
  ret %class.cChannel** %call3, !dbg !11195
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZSt14__relocate_a_1IP8cChannelS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(%class.cChannel** %__first, %class.cChannel** %__last, %class.cChannel** %__result, %"class.std::allocator.33"* dereferenceable(1) %0) #5 comdat !dbg !11196 {
entry:
  %__first.addr = alloca %class.cChannel**, align 8
  %__last.addr = alloca %class.cChannel**, align 8
  %__result.addr = alloca %class.cChannel**, align 8
  %.addr = alloca %"class.std::allocator.33"*, align 8
  %__count = alloca i64, align 8
  store %class.cChannel** %__first, %class.cChannel*** %__first.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__first.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  store %class.cChannel** %__last, %class.cChannel*** %__last.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__last.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  store %class.cChannel** %__result, %class.cChannel*** %__result.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__result.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %.addr, align 8
  call void @llvm.dbg.declare(metadata %"class.std::allocator.33"** %.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.declare(metadata i64* %__count, metadata !11213, metadata !DIExpression()), !dbg !11214
  %1 = load %class.cChannel**, %class.cChannel*** %__last.addr, align 8, !dbg !11215
  %2 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !11216
  %sub.ptr.lhs.cast = ptrtoint %class.cChannel** %1 to i64, !dbg !11217
  %sub.ptr.rhs.cast = ptrtoint %class.cChannel** %2 to i64, !dbg !11217
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11217
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !11217
  store i64 %sub.ptr.div, i64* %__count, align 8, !dbg !11214
  %3 = load i64, i64* %__count, align 8, !dbg !11218
  %cmp = icmp sgt i64 %3, 0, !dbg !11220
  br i1 %cmp, label %if.then, label %if.end, !dbg !11221

if.then:                                          ; preds = %entry
  %4 = load %class.cChannel**, %class.cChannel*** %__result.addr, align 8, !dbg !11222
  %5 = bitcast %class.cChannel** %4 to i8*, !dbg !11223
  %6 = load %class.cChannel**, %class.cChannel*** %__first.addr, align 8, !dbg !11224
  %7 = bitcast %class.cChannel** %6 to i8*, !dbg !11223
  %8 = load i64, i64* %__count, align 8, !dbg !11225
  %mul = mul i64 %8, 8, !dbg !11226
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %7, i64 %mul, i1 false), !dbg !11223
  br label %if.end, !dbg !11223

if.end:                                           ; preds = %if.then, %entry
  %9 = load %class.cChannel**, %class.cChannel*** %__result.addr, align 8, !dbg !11227
  %10 = load i64, i64* %__count, align 8, !dbg !11228
  %add.ptr = getelementptr inbounds %class.cChannel*, %class.cChannel** %9, i64 %10, !dbg !11229
  ret %class.cChannel** %add.ptr, !dbg !11230
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dso_local %class.cChannel** @_ZSt12__niter_baseIPP8cChannelET_S3_(%class.cChannel** %__it) #5 comdat !dbg !11231 {
entry:
  %__it.addr = alloca %class.cChannel**, align 8
  store %class.cChannel** %__it, %class.cChannel*** %__it.addr, align 8
  call void @llvm.dbg.declare(metadata %class.cChannel*** %__it.addr, metadata !11234, metadata !DIExpression()), !dbg !11235
  %0 = load %class.cChannel**, %class.cChannel*** %__it.addr, align 8, !dbg !11236
  ret %class.cChannel** %0, !dbg !11237
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_cmodule.cc() #0 section ".text.startup" !dbg !11238 {
entry:
  call void @__cxx_global_var_init(), !dbg !11240
  call void @__cxx_global_var_init.1(), !dbg !11240
  call void @__cxx_global_var_init.3(), !dbg !11240
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone speculatable willreturn }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind willreturn }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone willreturn }
attributes #16 = { noreturn }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin }

!llvm.dbg.cu = !{!30}
!llvm.module.flags = !{!3875, !3876, !3877}
!llvm.ident = !{!3878}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__ioinit", linkageName: "_ZStL8__ioinit", scope: !2, file: !3, line: 74, type: !4, isLocal: true, isDefinition: true)
!2 = !DINamespace(name: "std", scope: null)
!3 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/iostream", directory: "")
!4 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Init", scope: !6, file: !5, line: 603, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7, identifier: "_ZTSNSt8ios_base4InitE")
!5 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/ios_base.h", directory: "")
!6 = !DICompositeType(tag: DW_TAG_class_type, name: "ios_base", scope: !2, file: !5, line: 228, flags: DIFlagFwdDecl)
!7 = !{!8, !12, !14, !18, !19, !24}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_S_refcount", scope: !4, file: !5, line: 616, baseType: !9, flags: DIFlagStaticMember)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Atomic_word", file: !10, line: 32, baseType: !11)
!10 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/x86_64-linux-gnu/c++/10/bits/atomic_word.h", directory: "")
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_S_synced_with_stdio", scope: !4, file: !5, line: 617, baseType: !13, flags: DIFlagStaticMember)
!13 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!14 = !DISubprogram(name: "Init", scope: !4, file: !5, line: 607, type: !15, scopeLine: 607, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!15 = !DISubroutineType(types: !16)
!16 = !{null, !17}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!18 = !DISubprogram(name: "~Init", scope: !4, file: !5, line: 608, type: !15, scopeLine: 608, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!19 = !DISubprogram(name: "Init", scope: !4, file: !5, line: 611, type: !20, scopeLine: 611, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!20 = !DISubroutineType(types: !21)
!21 = !{null, !17, !22}
!22 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!24 = !DISubprogram(name: "operator=", linkageName: "_ZNSt8ios_base4InitaSERKS0_", scope: !4, file: !5, line: 612, type: !25, scopeLine: 612, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!25 = !DISubroutineType(types: !26)
!26 = !{!27, !17, !22}
!27 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4, size: 64)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "lastmodulefullpath", linkageName: "_ZN7cModule18lastmodulefullpathB5cxx11E", scope: !30, file: !31, line: 46, type: !107, isLocal: false, isDefinition: true, declaration: !106)
!30 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !31, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !32, retainedTypes: !2029, globals: !2637, imports: !2642, splitDebugInlining: false, nameTableKind: None)
!31 = !DIFile(filename: "simulator/cmodule.cc", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!32 = !{!33, !42, !47, !92, !99, !2012, !2019, !2024}
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Type", scope: !35, file: !34, line: 74, baseType: !36, size: 32, elements: !37, identifier: "_ZTSN5cGate4TypeE")
!34 = !DIFile(filename: "simulator/cgate.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !DICompositeType(tag: DW_TAG_class_type, name: "cGate", file: !34, line: 64, flags: DIFlagFwdDecl)
!36 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!37 = !{!38, !39, !40, !41}
!38 = !DIEnumerator(name: "NONE", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "INPUT", value: 73, isUnsigned: true)
!40 = !DIEnumerator(name: "OUTPUT", value: 79, isUnsigned: true)
!41 = !DIEnumerator(name: "INOUT", value: 66, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_Rb_tree_color", scope: !2, file: !43, line: 99, baseType: !36, size: 32, elements: !44, identifier: "_ZTSSt14_Rb_tree_color")
!43 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_tree.h", directory: "")
!44 = !{!45, !46}
!45 = !DIEnumerator(name: "_S_red", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "_S_black", value: 1, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OppErrorCode", file: !48, line: 28, baseType: !36, size: 32, elements: !49, identifier: "_ZTS12OppErrorCode")
!48 = !DIFile(filename: "simulator/errmsg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91}
!50 = !DIEnumerator(name: "eOK", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "eBACKSCHED", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "eBADCAST", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "eBADEXP", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "eBADINIT", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "eCANCEL", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "eCANTCOPY", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "eCANTDUP", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "eCANTPACK", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "eCUSTOM", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "eDIMLESS", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "eEBADARGS", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "eECANTCAST", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "eENDEDOK", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "eENDSIM", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "eENOPARENT", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "eESTKOFLOW", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "eESTKUFLOW", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "eFINISH", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "eGATEID", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "eINFLOOP", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "eLOCKED", value: 21, isUnsigned: true)
!72 = !DIEnumerator(name: "eMODFIN", value: 22, isUnsigned: true)
!73 = !DIEnumerator(name: "eMODINI", value: 23, isUnsigned: true)
!74 = !DIEnumerator(name: "eNEGTIME", value: 24, isUnsigned: true)
!75 = !DIEnumerator(name: "eNEGTOUT", value: 25, isUnsigned: true)
!76 = !DIEnumerator(name: "eNOCHANDEF", value: 26, isUnsigned: true)
!77 = !DIEnumerator(name: "eNONET", value: 27, isUnsigned: true)
!78 = !DIEnumerator(name: "eNOPARENTMOD", value: 28, isUnsigned: true)
!79 = !DIEnumerator(name: "eNOPARSIM", value: 29, isUnsigned: true)
!80 = !DIEnumerator(name: "eNORECV", value: 30, isUnsigned: true)
!81 = !DIEnumerator(name: "eNOSUCHNET", value: 31, isUnsigned: true)
!82 = !DIEnumerator(name: "eNUMARGS", value: 32, isUnsigned: true)
!83 = !DIEnumerator(name: "ePARAM", value: 33, isUnsigned: true)
!84 = !DIEnumerator(name: "ePARAMSNOTREADY", value: 34, isUnsigned: true)
!85 = !DIEnumerator(name: "eREALTIME", value: 35, isUnsigned: true)
!86 = !DIEnumerator(name: "eSIMTIME", value: 36, isUnsigned: true)
!87 = !DIEnumerator(name: "eSTATECHG", value: 37, isUnsigned: true)
!88 = !DIEnumerator(name: "eSTKLOW", value: 38, isUnsigned: true)
!89 = !DIEnumerator(name: "eSTOPSIMRCVD", value: 39, isUnsigned: true)
!90 = !DIEnumerator(name: "eUSER", value: 40, isUnsigned: true)
!91 = !DIEnumerator(name: "eWRONGSIM", value: 41, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !93, line: 37, baseType: !36, size: 32, elements: !94)
!93 = !DIFile(filename: "simulator/simutil.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!94 = !{!95, !96, !97, !98}
!95 = !DIEnumerator(name: "CTX_BUILD", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "CTX_INITIALIZE", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "CTX_EVENT", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "CTX_FINISH", value: 3, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !101, file: !100, line: 209, baseType: !36, size: 32, elements: !2009, identifier: "_ZTSN7cModuleUt_E")
!100 = !DIFile(filename: "simulator/cmodule.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!101 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "cModule", file: !100, line: 46, size: 1408, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !102, vtableHolder: !2007)
!102 = !{!103, !106, !112, !115, !118, !119, !121, !122, !123, !124, !1135, !1136, !1198, !1199, !1200, !1204, !1208, !1209, !1212, !1213, !1358, !1361, !1364, !1367, !1370, !1371, !1374, !1377, !1380, !1383, !1387, !1390, !1393, !1394, !1395, !1398, !1401, !1402, !1403, !1404, !1410, !1413, !1416, !1419, !1422, !1425, !1428, !1432, !1433, !1436, !1437, !1438, !1439, !1442, !1448, !1454, !1455, !1456, !1457, !1458, !1459, !1462, !1465, !1468, !1471, !1474, !1477, !1480, !1483, !1486, !1489, !1492, !1493, !1985, !1988, !1991, !1994, !1995, !1996, !1999, !2000, !2001, !2002, !2005, !2006}
!103 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !101, baseType: !104, flags: DIFlagPublic, extraData: i32 0)
!104 = !DICompositeType(tag: DW_TAG_class_type, name: "cComponent", file: !105, line: 41, flags: DIFlagFwdDecl)
!105 = !DIFile(filename: "simulator/ccomponent.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!106 = !DIDerivedType(tag: DW_TAG_member, name: "lastmodulefullpath", scope: !101, file: !100, line: 205, baseType: !107, flags: DIFlagPublic | DIFlagStaticMember)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "string", scope: !2, file: !108, line: 79, baseType: !109)
!108 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stringfwd.h", directory: "")
!109 = !DICompositeType(tag: DW_TAG_class_type, name: "basic_string<char, std::char_traits<char>, std::allocator<char> >", scope: !111, file: !110, line: 1618, flags: DIFlagFwdDecl, identifier: "_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE")
!110 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.tcc", directory: "")
!111 = !DINamespace(name: "__cxx11", scope: !2, exportSymbols: true)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "lastmodulefullpathmod", scope: !101, file: !100, line: 206, baseType: !113, flags: DIFlagPublic | DIFlagStaticMember)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "fullname", scope: !101, file: !100, line: 215, baseType: !116, size: 64, offset: 832, flags: DIFlagProtected)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "mod_id", scope: !101, file: !100, line: 216, baseType: !11, size: 32, offset: 896, flags: DIFlagProtected)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "prevp", scope: !101, file: !100, line: 221, baseType: !120, size: 64, offset: 960, flags: DIFlagProtected)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "nextp", scope: !101, file: !100, line: 221, baseType: !120, size: 64, offset: 1024, flags: DIFlagProtected)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "firstsubmodp", scope: !101, file: !100, line: 222, baseType: !120, size: 64, offset: 1088, flags: DIFlagProtected)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "lastsubmodp", scope: !101, file: !100, line: 223, baseType: !120, size: 64, offset: 1152, flags: DIFlagProtected)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "namePool", scope: !101, file: !100, line: 226, baseType: !125, flags: DIFlagProtected | DIFlagStaticMember)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "NamePool", scope: !101, file: !100, line: 225, baseType: !126)
!126 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "set<cGate::Name, std::less<cGate::Name>, std::allocator<cGate::Name> >", scope: !2, file: !127, line: 94, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !128, templateParams: !1134, identifier: "_ZTSSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE")
!127 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_set.h", directory: "")
!128 = !{!129, !943, !947, !953, !958, !962, !967, !970, !973, !976, !979, !980, !984, !987, !990, !995, !999, !1002, !1006, !1007, !1011, !1012, !1013, !1014, !1015, !1016, !1019, !1023, !1024, !1027, !1088, !1092, !1096, !1099, !1102, !1105, !1111, !1114, !1115, !1118, !1121, !1124, !1125, !1126, !1127, !1128, !1131}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "_M_t", scope: !126, file: !127, line: 133, baseType: !130, size: 384)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Rep_type", scope: !126, file: !127, line: 132, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >", scope: !2, file: !43, line: 440, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !132, templateParams: !924, identifier: "_ZTSSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE")
!132 = !{!133, !529, !534, !541, !545, !549, !552, !553, !554, !559, !563, !564, !565, !566, !567, !568, !572, !575, !576, !579, !582, !585, !586, !587, !590, !594, !598, !599, !600, !670, !671, !746, !747, !751, !754, !757, !761, !762, !765, !768, !769, !770, !773, !778, !781, !784, !787, !791, !794, !812, !828, !831, !832, !836, !839, !842, !845, !846, !847, !853, !858, !859, !860, !863, !867, !868, !871, !874, !877, !880, !883, !887, !890, !891, !894, !897, !900, !901, !902, !903, !904, !908, !912, !913, !916, !919, !922, !923}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "_M_impl", scope: !131, file: !43, line: 720, baseType: !134, size: 384, flags: DIFlagProtected)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_impl<std::less<cGate::Name>, true>", scope: !131, file: !43, line: 677, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !135, templateParams: !527, identifier: "_ZTSNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEE")
!135 = !{!136, !449, !486, !504, !508, !513, !517, !521, !524}
!136 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !134, baseType: !137, extraData: i32 0)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Node_allocator", scope: !131, file: !43, line: 443, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "other", scope: !140, file: !139, line: 120, baseType: !393)
!139 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/alloc_traits.h", directory: "")
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rebind<std::_Rb_tree_node<cGate::Name> >", scope: !141, file: !139, line: 119, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !325, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E6rebindISt13_Rb_tree_nodeIS2_EEE")
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__alloc_traits<std::allocator<cGate::Name>, cGate::Name>", scope: !142, file: !139, line: 48, size: 8, flags: DIFlagTypePassByValue, elements: !143, templateParams: !322, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_EE")
!142 = !DINamespace(name: "__gnu_cxx", scope: null)
!143 = !{!144, !309, !312, !315, !318, !319, !320, !321}
!144 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !141, baseType: !145, extraData: i32 0)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "allocator_traits<std::allocator<cGate::Name> >", scope: !2, file: !146, line: 407, size: 8, flags: DIFlagTypePassByValue, elements: !147, templateParams: !307, identifier: "_ZTSSt16allocator_traitsISaIN5cGate4NameEEE")
!146 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/alloc_traits.h", directory: "")
!147 = !{!148, !291, !295, !298, !304}
!148 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIN5cGate4NameEEE8allocateERS2_m", scope: !145, file: !146, line: 459, type: !149, scopeLine: 459, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!149 = !DISubroutineType(types: !150)
!150 = !{!151, !224, !290}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !145, file: !146, line: 416, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Name", scope: !35, file: !34, line: 83, size: 256, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !154, identifier: "_ZTSN5cGate4NameE")
!154 = !{!155, !211, !212, !213, !214, !218}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !153, file: !34, line: 85, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "opp_string", file: !157, line: 41, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !158, identifier: "_ZTS10opp_string")
!157 = !DIFile(filename: "simulator/opp_string.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!158 = !{!159, !160, !164, !169, !174, !179, !180, !184, !187, !190, !193, !196, !200, !203, !206, !209, !210}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !156, file: !157, line: 44, baseType: !116, size: 64)
!160 = !DISubprogram(name: "opp_string", scope: !156, file: !157, line: 50, type: !161, scopeLine: 50, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!161 = !DISubroutineType(types: !162)
!162 = !{null, !163}
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!164 = !DISubprogram(name: "opp_string", scope: !156, file: !157, line: 55, type: !165, scopeLine: 55, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!165 = !DISubroutineType(types: !166)
!166 = !{null, !163, !167}
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!169 = !DISubprogram(name: "opp_string", scope: !156, file: !157, line: 60, type: !170, scopeLine: 60, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!170 = !DISubroutineType(types: !171)
!171 = !{null, !163, !172}
!172 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!174 = !DISubprogram(name: "opp_string", scope: !156, file: !157, line: 65, type: !175, scopeLine: 65, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!175 = !DISubroutineType(types: !176)
!176 = !{null, !163, !177}
!177 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !178, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!179 = !DISubprogram(name: "~opp_string", scope: !156, file: !157, line: 70, type: !161, scopeLine: 70, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!180 = !DISubprogram(name: "c_str", linkageName: "_ZNK10opp_string5c_strEv", scope: !156, file: !157, line: 75, type: !181, scopeLine: 75, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!181 = !DISubroutineType(types: !182)
!182 = !{!167, !183}
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!184 = !DISubprogram(name: "empty", linkageName: "_ZNK10opp_string5emptyEv", scope: !156, file: !157, line: 80, type: !185, scopeLine: 80, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!185 = !DISubroutineType(types: !186)
!186 = !{!13, !183}
!187 = !DISubprogram(name: "buffer", linkageName: "_ZN10opp_string6bufferEv", scope: !156, file: !157, line: 87, type: !188, scopeLine: 87, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!188 = !DISubroutineType(types: !189)
!189 = !{!116, !163}
!190 = !DISubprogram(name: "reserve", linkageName: "_ZN10opp_string7reserveEj", scope: !156, file: !157, line: 92, type: !191, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!191 = !DISubroutineType(types: !192)
!192 = !{!116, !163, !36}
!193 = !DISubprogram(name: "operator=", linkageName: "_ZN10opp_stringaSEPKc", scope: !156, file: !157, line: 98, type: !194, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!194 = !DISubroutineType(types: !195)
!195 = !{!167, !163, !167}
!196 = !DISubprogram(name: "operator=", linkageName: "_ZN10opp_stringaSERKS_", scope: !156, file: !157, line: 103, type: !197, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!197 = !DISubroutineType(types: !198)
!198 = !{!199, !163, !177}
!199 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !156, size: 64)
!200 = !DISubprogram(name: "operator=", linkageName: "_ZN10opp_stringaSERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", scope: !156, file: !157, line: 108, type: !201, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!201 = !DISubroutineType(types: !202)
!202 = !{!199, !163, !172}
!203 = !DISubprogram(name: "operator<", linkageName: "_ZNK10opp_stringltERKS_", scope: !156, file: !157, line: 113, type: !204, scopeLine: 113, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!204 = !DISubroutineType(types: !205)
!205 = !{!13, !183, !177}
!206 = !DISubprogram(name: "operator+=", linkageName: "_ZN10opp_stringpLEPKc", scope: !156, file: !157, line: 118, type: !207, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!207 = !DISubroutineType(types: !208)
!208 = !{!199, !163, !167}
!209 = !DISubprogram(name: "operator+=", linkageName: "_ZN10opp_stringpLERKS_", scope: !156, file: !157, line: 123, type: !197, scopeLine: 123, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!210 = !DISubprogram(name: "operator+=", linkageName: "_ZN10opp_stringpLERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", scope: !156, file: !157, line: 128, type: !201, scopeLine: 128, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "namei", scope: !153, file: !34, line: 86, baseType: !156, size: 64, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "nameo", scope: !153, file: !34, line: 87, baseType: !156, size: 64, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !153, file: !34, line: 88, baseType: !33, size: 32, offset: 192)
!214 = !DISubprogram(name: "Name", scope: !153, file: !34, line: 89, type: !215, scopeLine: 89, flags: DIFlagPrototyped, spFlags: 0)
!215 = !DISubroutineType(types: !216)
!216 = !{null, !217, !167, !33}
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!218 = !DISubprogram(name: "operator<", linkageName: "_ZNK5cGate4NameltERKS0_", scope: !153, file: !34, line: 90, type: !219, scopeLine: 90, flags: DIFlagPrototyped, spFlags: 0)
!219 = !DISubroutineType(types: !220)
!220 = !{!13, !221, !223}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!223 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !222, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !145, file: !146, line: 410, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "allocator<cGate::Name>", scope: !2, file: !227, line: 116, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !228, templateParams: !274, identifier: "_ZTSSaIN5cGate4NameEE")
!227 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/allocator.h", directory: "")
!228 = !{!229, !276, !280, !285, !289}
!229 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !226, baseType: !230, flags: DIFlagPublic, extraData: i32 0)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__allocator_base<cGate::Name>", scope: !2, file: !231, line: 48, baseType: !232)
!231 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/x86_64-linux-gnu/c++/10/bits/c++allocator.h", directory: "")
!232 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "new_allocator<cGate::Name>", scope: !142, file: !233, line: 55, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !234, templateParams: !274, identifier: "_ZTSN9__gnu_cxx13new_allocatorIN5cGate4NameEEE")
!233 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/new_allocator.h", directory: "")
!234 = !{!235, !239, !244, !245, !252, !258, !267, !270, !273}
!235 = !DISubprogram(name: "new_allocator", scope: !232, file: !233, line: 79, type: !236, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!236 = !DISubroutineType(types: !237)
!237 = !{null, !238}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!239 = !DISubprogram(name: "new_allocator", scope: !232, file: !233, line: 82, type: !240, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!240 = !DISubroutineType(types: !241)
!241 = !{null, !238, !242}
!242 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!244 = !DISubprogram(name: "~new_allocator", scope: !232, file: !233, line: 89, type: !236, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!245 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIN5cGate4NameEE7addressERS2_", scope: !232, file: !233, line: 92, type: !246, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!246 = !DISubroutineType(types: !247)
!247 = !{!248, !249, !250}
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !232, file: !233, line: 62, baseType: !152)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !232, file: !233, line: 64, baseType: !251)
!251 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !153, size: 64)
!252 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIN5cGate4NameEE7addressERKS2_", scope: !232, file: !233, line: 96, type: !253, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!253 = !DISubroutineType(types: !254)
!254 = !{!255, !249, !257}
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !232, file: !233, line: 63, baseType: !256)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !232, file: !233, line: 65, baseType: !223)
!258 = !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIN5cGate4NameEE8allocateEmPKv", scope: !232, file: !233, line: 103, type: !259, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!259 = !DISubroutineType(types: !260)
!260 = !{!152, !238, !261, !265}
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", file: !233, line: 59, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !2, file: !263, line: 260, baseType: !264)
!263 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/x86_64-linux-gnu/c++/10/bits/c++config.h", directory: "")
!264 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!267 = !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIN5cGate4NameEE10deallocateEPS2_m", scope: !232, file: !233, line: 120, type: !268, scopeLine: 120, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!268 = !DISubroutineType(types: !269)
!269 = !{null, !238, !152, !261}
!270 = !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIN5cGate4NameEE8max_sizeEv", scope: !232, file: !233, line: 142, type: !271, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!271 = !DISubroutineType(types: !272)
!272 = !{!261, !249}
!273 = !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIN5cGate4NameEE11_M_max_sizeEv", scope: !232, file: !233, line: 185, type: !271, scopeLine: 185, flags: DIFlagPrototyped, spFlags: 0)
!274 = !{!275}
!275 = !DITemplateTypeParameter(name: "_Tp", type: !153)
!276 = !DISubprogram(name: "allocator", scope: !226, file: !227, line: 144, type: !277, scopeLine: 144, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!280 = !DISubprogram(name: "allocator", scope: !226, file: !227, line: 147, type: !281, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !279, !283}
!283 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!285 = !DISubprogram(name: "operator=", linkageName: "_ZNSaIN5cGate4NameEEaSERKS1_", scope: !226, file: !227, line: 152, type: !286, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!286 = !DISubroutineType(types: !287)
!287 = !{!288, !279, !283}
!288 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !226, size: 64)
!289 = !DISubprogram(name: "~allocator", scope: !226, file: !227, line: 162, type: !277, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", file: !146, line: 431, baseType: !262)
!291 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIN5cGate4NameEEE8allocateERS2_mPKv", scope: !145, file: !146, line: 473, type: !292, scopeLine: 473, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!292 = !DISubroutineType(types: !293)
!293 = !{!151, !224, !290, !294}
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_void_pointer", file: !146, line: 425, baseType: !265)
!295 = !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIN5cGate4NameEEE10deallocateERS2_PS1_m", scope: !145, file: !146, line: 491, type: !296, scopeLine: 491, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!296 = !DISubroutineType(types: !297)
!297 = !{null, !224, !151, !290}
!298 = !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaIN5cGate4NameEEE8max_sizeERKS2_", scope: !145, file: !146, line: 543, type: !299, scopeLine: 543, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!299 = !DISubroutineType(types: !300)
!300 = !{!301, !302}
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !145, file: !146, line: 431, baseType: !262)
!302 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !225)
!304 = !DISubprogram(name: "select_on_container_copy_construction", linkageName: "_ZNSt16allocator_traitsISaIN5cGate4NameEEE37select_on_container_copy_constructionERKS2_", scope: !145, file: !146, line: 558, type: !305, scopeLine: 558, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!305 = !DISubroutineType(types: !306)
!306 = !{!225, !302}
!307 = !{!308}
!308 = !DITemplateTypeParameter(name: "_Alloc", type: !226)
!309 = !DISubprogram(name: "_S_select_on_copy", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E17_S_select_on_copyERKS3_", scope: !141, file: !139, line: 97, type: !310, scopeLine: 97, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!310 = !DISubroutineType(types: !311)
!311 = !{!226, !283}
!312 = !DISubprogram(name: "_S_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E10_S_on_swapERS3_S5_", scope: !141, file: !139, line: 100, type: !313, scopeLine: 100, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!313 = !DISubroutineType(types: !314)
!314 = !{null, !288, !288}
!315 = !DISubprogram(name: "_S_propagate_on_copy_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E27_S_propagate_on_copy_assignEv", scope: !141, file: !139, line: 103, type: !316, scopeLine: 103, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!316 = !DISubroutineType(types: !317)
!317 = !{!13}
!318 = !DISubprogram(name: "_S_propagate_on_move_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E27_S_propagate_on_move_assignEv", scope: !141, file: !139, line: 106, type: !316, scopeLine: 106, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!319 = !DISubprogram(name: "_S_propagate_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E20_S_propagate_on_swapEv", scope: !141, file: !139, line: 109, type: !316, scopeLine: 109, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!320 = !DISubprogram(name: "_S_always_equal", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E15_S_always_equalEv", scope: !141, file: !139, line: 112, type: !316, scopeLine: 112, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!321 = !DISubprogram(name: "_S_nothrow_move", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIN5cGate4NameEES2_E15_S_nothrow_moveEv", scope: !141, file: !139, line: 115, type: !316, scopeLine: 115, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!322 = !{!308, !323}
!323 = !DITemplateTypeParameter(type: !153)
!324 = !{}
!325 = !{!326}
!326 = !DITemplateTypeParameter(name: "_Tp", type: !327)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_node<cGate::Name>", scope: !2, file: !43, line: 216, size: 512, flags: DIFlagTypePassByValue, elements: !328, templateParams: !391, identifier: "_ZTSSt13_Rb_tree_nodeIN5cGate4NameEE")
!328 = !{!329, !349, !382, !386}
!329 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !327, baseType: !330, extraData: i32 0)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_node_base", scope: !2, file: !43, line: 101, size: 256, flags: DIFlagTypePassByValue, elements: !331, identifier: "_ZTSSt18_Rb_tree_node_base")
!331 = !{!332, !333, !336, !337, !338, !341, !347, !348}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "_M_color", scope: !330, file: !43, line: 106, baseType: !42, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "_M_parent", scope: !330, file: !43, line: 107, baseType: !334, size: 64, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Base_ptr", scope: !330, file: !43, line: 103, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "_M_left", scope: !330, file: !43, line: 108, baseType: !334, size: 64, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "_M_right", scope: !330, file: !43, line: 109, baseType: !334, size: 64, offset: 192)
!338 = !DISubprogram(name: "_S_minimum", linkageName: "_ZNSt18_Rb_tree_node_base10_S_minimumEPS_", scope: !330, file: !43, line: 112, type: !339, scopeLine: 112, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!339 = !DISubroutineType(types: !340)
!340 = !{!334, !334}
!341 = !DISubprogram(name: "_S_minimum", linkageName: "_ZNSt18_Rb_tree_node_base10_S_minimumEPKS_", scope: !330, file: !43, line: 119, type: !342, scopeLine: 119, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!342 = !DISubroutineType(types: !343)
!343 = !{!344, !344}
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Const_Base_ptr", scope: !330, file: !43, line: 104, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !330)
!347 = !DISubprogram(name: "_S_maximum", linkageName: "_ZNSt18_Rb_tree_node_base10_S_maximumEPS_", scope: !330, file: !43, line: 126, type: !339, scopeLine: 126, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!348 = !DISubprogram(name: "_S_maximum", linkageName: "_ZNSt18_Rb_tree_node_base10_S_maximumEPKS_", scope: !330, file: !43, line: 133, type: !342, scopeLine: 133, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_M_storage", scope: !327, file: !43, line: 231, baseType: !350, size: 256, offset: 256)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__aligned_membuf<cGate::Name>", scope: !142, file: !351, line: 47, size: 256, flags: DIFlagTypePassByValue, elements: !352, templateParams: !274, identifier: "_ZTSN9__gnu_cxx16__aligned_membufIN5cGate4NameEEE")
!351 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/ext/aligned_buffer.h", directory: "")
!352 = !{!353, !358, !362, !367, !371, !376, !379}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "_M_storage", scope: !350, file: !351, line: 56, baseType: !354, size: 256, align: 64)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 256, elements: !356)
!355 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!356 = !{!357}
!357 = !DISubrange(count: 32)
!358 = !DISubprogram(name: "__aligned_membuf", scope: !350, file: !351, line: 58, type: !359, scopeLine: 58, flags: DIFlagPrototyped, spFlags: 0)
!359 = !DISubroutineType(types: !360)
!360 = !{null, !361}
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!362 = !DISubprogram(name: "__aligned_membuf", scope: !350, file: !351, line: 61, type: !363, scopeLine: 61, flags: DIFlagPrototyped, spFlags: 0)
!363 = !DISubroutineType(types: !364)
!364 = !{null, !361, !365}
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !2, file: !263, line: 264, baseType: !366)
!366 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!367 = !DISubprogram(name: "_M_addr", linkageName: "_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv", scope: !350, file: !351, line: 64, type: !368, scopeLine: 64, flags: DIFlagPrototyped, spFlags: 0)
!368 = !DISubroutineType(types: !369)
!369 = !{!370, !361}
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!371 = !DISubprogram(name: "_M_addr", linkageName: "_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv", scope: !350, file: !351, line: 68, type: !372, scopeLine: 68, flags: DIFlagPrototyped, spFlags: 0)
!372 = !DISubroutineType(types: !373)
!373 = !{!265, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!376 = !DISubprogram(name: "_M_ptr", linkageName: "_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv", scope: !350, file: !351, line: 72, type: !377, scopeLine: 72, flags: DIFlagPrototyped, spFlags: 0)
!377 = !DISubroutineType(types: !378)
!378 = !{!152, !361}
!379 = !DISubprogram(name: "_M_ptr", linkageName: "_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv", scope: !350, file: !351, line: 76, type: !380, scopeLine: 76, flags: DIFlagPrototyped, spFlags: 0)
!380 = !DISubroutineType(types: !381)
!381 = !{!256, !374}
!382 = !DISubprogram(name: "_M_valptr", linkageName: "_ZNSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv", scope: !327, file: !43, line: 234, type: !383, scopeLine: 234, flags: DIFlagPrototyped, spFlags: 0)
!383 = !DISubroutineType(types: !384)
!384 = !{!152, !385}
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!386 = !DISubprogram(name: "_M_valptr", linkageName: "_ZNKSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv", scope: !327, file: !43, line: 238, type: !387, scopeLine: 238, flags: DIFlagPrototyped, spFlags: 0)
!387 = !DISubroutineType(types: !388)
!388 = !{!256, !389}
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!391 = !{!392}
!392 = !DITemplateTypeParameter(name: "_Val", type: !153)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "rebind_alloc<std::_Rb_tree_node<cGate::Name> >", scope: !145, file: !146, line: 446, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "allocator<std::_Rb_tree_node<cGate::Name> >", scope: !2, file: !227, line: 116, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !395, templateParams: !325, identifier: "_ZTSSaISt13_Rb_tree_nodeIN5cGate4NameEEE")
!395 = !{!396, !435, !439, !444, !448}
!396 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !394, baseType: !397, flags: DIFlagPublic, extraData: i32 0)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__allocator_base<std::_Rb_tree_node<cGate::Name> >", scope: !2, file: !231, line: 48, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "new_allocator<std::_Rb_tree_node<cGate::Name> >", scope: !142, file: !233, line: 55, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !399, templateParams: !325, identifier: "_ZTSN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEEE")
!399 = !{!400, !404, !409, !410, !418, !425, !428, !431, !434}
!400 = !DISubprogram(name: "new_allocator", scope: !398, file: !233, line: 79, type: !401, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!401 = !DISubroutineType(types: !402)
!402 = !{null, !403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!404 = !DISubprogram(name: "new_allocator", scope: !398, file: !233, line: 82, type: !405, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!405 = !DISubroutineType(types: !406)
!406 = !{null, !403, !407}
!407 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!409 = !DISubprogram(name: "~new_allocator", scope: !398, file: !233, line: 89, type: !401, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!410 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7addressERS4_", scope: !398, file: !233, line: 92, type: !411, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!411 = !DISubroutineType(types: !412)
!412 = !{!413, !415, !416}
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !398, file: !233, line: 62, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !398, file: !233, line: 64, baseType: !417)
!417 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !327, size: 64)
!418 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7addressERKS4_", scope: !398, file: !233, line: 96, type: !419, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!419 = !DISubroutineType(types: !420)
!420 = !{!421, !415, !423}
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !398, file: !233, line: 63, baseType: !422)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !398, file: !233, line: 65, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !390, size: 64)
!425 = !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE8allocateEmPKv", scope: !398, file: !233, line: 103, type: !426, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!426 = !DISubroutineType(types: !427)
!427 = !{!414, !403, !261, !265}
!428 = !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE10deallocateEPS4_m", scope: !398, file: !233, line: 120, type: !429, scopeLine: 120, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !403, !414, !261}
!431 = !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE8max_sizeEv", scope: !398, file: !233, line: 142, type: !432, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!432 = !DISubroutineType(types: !433)
!433 = !{!261, !415}
!434 = !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE11_M_max_sizeEv", scope: !398, file: !233, line: 185, type: !432, scopeLine: 185, flags: DIFlagPrototyped, spFlags: 0)
!435 = !DISubprogram(name: "allocator", scope: !394, file: !227, line: 144, type: !436, scopeLine: 144, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !438}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!439 = !DISubprogram(name: "allocator", scope: !394, file: !227, line: 147, type: !440, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !438, !442}
!442 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!444 = !DISubprogram(name: "operator=", linkageName: "_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEEaSERKS3_", scope: !394, file: !227, line: 152, type: !445, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!445 = !DISubroutineType(types: !446)
!446 = !{!447, !438, !442}
!447 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !394, size: 64)
!448 = !DISubprogram(name: "~allocator", scope: !394, file: !227, line: 162, type: !436, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!449 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !134, baseType: !450, extraData: i32 0)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_key_compare<std::less<cGate::Name> >", scope: !2, file: !43, line: 142, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !451, templateParams: !484, identifier: "_ZTSSt20_Rb_tree_key_compareISt4lessIN5cGate4NameEEE")
!451 = !{!452, !467, !471, !475, !480}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "_M_key_compare", scope: !450, file: !43, line: 144, baseType: !453, size: 8)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "less<cGate::Name>", scope: !2, file: !454, line: 381, size: 8, flags: DIFlagTypePassByValue, elements: !455, templateParams: !274, identifier: "_ZTSSt4lessIN5cGate4NameEE")
!454 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_function.h", directory: "")
!455 = !{!456, !462}
!456 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !453, baseType: !457, extraData: i32 0)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "binary_function<cGate::Name, cGate::Name, bool>", scope: !2, file: !454, line: 118, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !458, identifier: "_ZTSSt15binary_functionIN5cGate4NameES1_bE")
!458 = !{!459, !460, !461}
!459 = !DITemplateTypeParameter(name: "_Arg1", type: !153)
!460 = !DITemplateTypeParameter(name: "_Arg2", type: !153)
!461 = !DITemplateTypeParameter(name: "_Result", type: !13)
!462 = !DISubprogram(name: "operator()", linkageName: "_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_", scope: !453, file: !454, line: 385, type: !463, scopeLine: 385, flags: DIFlagPrototyped, spFlags: 0)
!463 = !DISubroutineType(types: !464)
!464 = !{!13, !465, !223, !223}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!467 = !DISubprogram(name: "_Rb_tree_key_compare", scope: !450, file: !43, line: 146, type: !468, scopeLine: 146, flags: DIFlagPrototyped, spFlags: 0)
!468 = !DISubroutineType(types: !469)
!469 = !{null, !470}
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!471 = !DISubprogram(name: "_Rb_tree_key_compare", scope: !450, file: !43, line: 152, type: !472, scopeLine: 152, flags: DIFlagPrototyped, spFlags: 0)
!472 = !DISubroutineType(types: !473)
!473 = !{null, !470, !474}
!474 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !466, size: 64)
!475 = !DISubprogram(name: "_Rb_tree_key_compare", scope: !450, file: !43, line: 158, type: !476, scopeLine: 158, flags: DIFlagPrototyped, spFlags: 0)
!476 = !DISubroutineType(types: !477)
!477 = !{null, !470, !478}
!478 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!480 = !DISubprogram(name: "_Rb_tree_key_compare", scope: !450, file: !43, line: 160, type: !481, scopeLine: 160, flags: DIFlagPrototyped, spFlags: 0)
!481 = !DISubroutineType(types: !482)
!482 = !{null, !470, !483}
!483 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !450, size: 64)
!484 = !{!485}
!485 = !DITemplateTypeParameter(name: "_Key_compare", type: !453)
!486 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !134, baseType: !487, offset: 64, extraData: i32 0)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_header", scope: !2, file: !43, line: 168, size: 320, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !488, identifier: "_ZTSSt15_Rb_tree_header")
!488 = !{!489, !490, !491, !495, !499, !503}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "_M_header", scope: !487, file: !43, line: 170, baseType: !330, size: 256)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "_M_node_count", scope: !487, file: !43, line: 171, baseType: !262, size: 64, offset: 256)
!491 = !DISubprogram(name: "_Rb_tree_header", scope: !487, file: !43, line: 173, type: !492, scopeLine: 173, flags: DIFlagPrototyped, spFlags: 0)
!492 = !DISubroutineType(types: !493)
!493 = !{null, !494}
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!495 = !DISubprogram(name: "_Rb_tree_header", scope: !487, file: !43, line: 180, type: !496, scopeLine: 180, flags: DIFlagPrototyped, spFlags: 0)
!496 = !DISubroutineType(types: !497)
!497 = !{null, !494, !498}
!498 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !487, size: 64)
!499 = !DISubprogram(name: "_M_move_data", linkageName: "_ZNSt15_Rb_tree_header12_M_move_dataERS_", scope: !487, file: !43, line: 193, type: !500, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0)
!500 = !DISubroutineType(types: !501)
!501 = !{null, !494, !502}
!502 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !487, size: 64)
!503 = !DISubprogram(name: "_M_reset", linkageName: "_ZNSt15_Rb_tree_header8_M_resetEv", scope: !487, file: !43, line: 206, type: !492, scopeLine: 206, flags: DIFlagPrototyped, spFlags: 0)
!504 = !DISubprogram(name: "_Rb_tree_impl", scope: !134, file: !43, line: 684, type: !505, scopeLine: 684, flags: DIFlagPrototyped, spFlags: 0)
!505 = !DISubroutineType(types: !506)
!506 = !{null, !507}
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!508 = !DISubprogram(name: "_Rb_tree_impl", scope: !134, file: !43, line: 691, type: !509, scopeLine: 691, flags: DIFlagPrototyped, spFlags: 0)
!509 = !DISubroutineType(types: !510)
!510 = !{null, !507, !511}
!511 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!513 = !DISubprogram(name: "_Rb_tree_impl", scope: !134, file: !43, line: 701, type: !514, scopeLine: 701, flags: DIFlagPrototyped, spFlags: 0)
!514 = !DISubroutineType(types: !515)
!515 = !{null, !507, !516}
!516 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !134, size: 64)
!517 = !DISubprogram(name: "_Rb_tree_impl", scope: !134, file: !43, line: 704, type: !518, scopeLine: 704, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!518 = !DISubroutineType(types: !519)
!519 = !{null, !507, !520}
!520 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !137, size: 64)
!521 = !DISubprogram(name: "_Rb_tree_impl", scope: !134, file: !43, line: 708, type: !522, scopeLine: 708, flags: DIFlagPrototyped, spFlags: 0)
!522 = !DISubroutineType(types: !523)
!523 = !{null, !507, !516, !520}
!524 = !DISubprogram(name: "_Rb_tree_impl", scope: !134, file: !43, line: 714, type: !525, scopeLine: 714, flags: DIFlagPrototyped, spFlags: 0)
!525 = !DISubroutineType(types: !526)
!526 = !{null, !507, !474, !520}
!527 = !{!485, !528}
!528 = !DITemplateValueParameter(type: !13, value: i8 1)
!529 = !DISubprogram(name: "_M_get_Node_allocator", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv", scope: !131, file: !43, line: 570, type: !530, scopeLine: 570, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!530 = !DISubroutineType(types: !531)
!531 = !{!532, !533}
!532 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !137, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!534 = !DISubprogram(name: "_M_get_Node_allocator", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv", scope: !131, file: !43, line: 574, type: !535, scopeLine: 574, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!535 = !DISubroutineType(types: !536)
!536 = !{!537, !539}
!537 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!541 = !DISubprogram(name: "get_allocator", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13get_allocatorEv", scope: !131, file: !43, line: 578, type: !542, scopeLine: 578, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!542 = !DISubroutineType(types: !543)
!543 = !{!544, !539}
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !131, file: !43, line: 567, baseType: !226)
!545 = !DISubprogram(name: "_M_get_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv", scope: !131, file: !43, line: 583, type: !546, scopeLine: 583, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!546 = !DISubroutineType(types: !547)
!547 = !{!548, !533}
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Link_type", scope: !131, file: !43, line: 450, baseType: !414)
!549 = !DISubprogram(name: "_M_put_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 587, type: !550, scopeLine: 587, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!550 = !DISubroutineType(types: !551)
!551 = !{null, !533, !548}
!552 = !DISubprogram(name: "_M_destroy_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 641, type: !550, scopeLine: 641, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!553 = !DISubprogram(name: "_M_drop_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 652, type: !550, scopeLine: 652, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!554 = !DISubprogram(name: "_M_root", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_M_rootEv", scope: !131, file: !43, line: 724, type: !555, scopeLine: 724, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!555 = !DISubroutineType(types: !556)
!556 = !{!557, !533}
!557 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Base_ptr", file: !43, line: 448, baseType: !335)
!559 = !DISubprogram(name: "_M_root", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_M_rootEv", scope: !131, file: !43, line: 728, type: !560, scopeLine: 728, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!560 = !DISubroutineType(types: !561)
!561 = !{!562, !539}
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Const_Base_ptr", file: !43, line: 449, baseType: !345)
!563 = !DISubprogram(name: "_M_leftmost", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_leftmostEv", scope: !131, file: !43, line: 732, type: !555, scopeLine: 732, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!564 = !DISubprogram(name: "_M_leftmost", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_leftmostEv", scope: !131, file: !43, line: 736, type: !560, scopeLine: 736, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!565 = !DISubprogram(name: "_M_rightmost", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_rightmostEv", scope: !131, file: !43, line: 740, type: !555, scopeLine: 740, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!566 = !DISubprogram(name: "_M_rightmost", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_rightmostEv", scope: !131, file: !43, line: 744, type: !560, scopeLine: 744, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!567 = !DISubprogram(name: "_M_begin", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv", scope: !131, file: !43, line: 748, type: !546, scopeLine: 748, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!568 = !DISubprogram(name: "_M_begin", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv", scope: !131, file: !43, line: 752, type: !569, scopeLine: 752, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!569 = !DISubroutineType(types: !570)
!570 = !{!571, !539}
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Const_Link_type", scope: !131, file: !43, line: 451, baseType: !422)
!572 = !DISubprogram(name: "_M_end", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv", scope: !131, file: !43, line: 759, type: !573, scopeLine: 759, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!573 = !DISubroutineType(types: !574)
!574 = !{!558, !533}
!575 = !DISubprogram(name: "_M_end", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv", scope: !131, file: !43, line: 763, type: !560, scopeLine: 763, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!576 = !DISubprogram(name: "_S_key", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 767, type: !577, scopeLine: 767, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!577 = !DISubroutineType(types: !578)
!578 = !{!223, !571}
!579 = !DISubprogram(name: "_S_left", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base", scope: !131, file: !43, line: 789, type: !580, scopeLine: 789, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!580 = !DISubroutineType(types: !581)
!581 = !{!548, !558}
!582 = !DISubprogram(name: "_S_left", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPKSt18_Rb_tree_node_base", scope: !131, file: !43, line: 793, type: !583, scopeLine: 793, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!583 = !DISubroutineType(types: !584)
!584 = !{!571, !562}
!585 = !DISubprogram(name: "_S_right", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base", scope: !131, file: !43, line: 797, type: !580, scopeLine: 797, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!586 = !DISubprogram(name: "_S_right", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPKSt18_Rb_tree_node_base", scope: !131, file: !43, line: 801, type: !583, scopeLine: 801, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!587 = !DISubprogram(name: "_S_key", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base", scope: !131, file: !43, line: 805, type: !588, scopeLine: 805, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!588 = !DISubroutineType(types: !589)
!589 = !{!223, !562}
!590 = !DISubprogram(name: "_S_minimum", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_S_minimumEPSt18_Rb_tree_node_base", scope: !131, file: !43, line: 809, type: !591, scopeLine: 809, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!591 = !DISubroutineType(types: !592)
!592 = !{!593, !558}
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Base_ptr", scope: !131, file: !43, line: 448, baseType: !335)
!594 = !DISubprogram(name: "_S_minimum", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_S_minimumEPKSt18_Rb_tree_node_base", scope: !131, file: !43, line: 813, type: !595, scopeLine: 813, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!595 = !DISubroutineType(types: !596)
!596 = !{!597, !562}
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Const_Base_ptr", scope: !131, file: !43, line: 449, baseType: !345)
!598 = !DISubprogram(name: "_S_maximum", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_S_maximumEPSt18_Rb_tree_node_base", scope: !131, file: !43, line: 817, type: !591, scopeLine: 817, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!599 = !DISubprogram(name: "_S_maximum", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_S_maximumEPKSt18_Rb_tree_node_base", scope: !131, file: !43, line: 821, type: !595, scopeLine: 821, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!600 = !DISubprogram(name: "_M_get_insert_unique_pos", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_", scope: !131, file: !43, line: 839, type: !601, scopeLine: 839, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!601 = !DISubroutineType(types: !602)
!602 = !{!603, !533, !667}
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pair<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *>", scope: !2, file: !604, line: 211, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !605, templateParams: !664, identifier: "_ZTSSt4pairIPSt18_Rb_tree_node_baseS1_E")
!604 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_pair.h", directory: "")
!605 = !{!606, !626, !627, !628, !634, !638, !652, !661}
!606 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !603, baseType: !607, flags: DIFlagPrivate, extraData: i32 0)
!607 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "__pair_base<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *>", scope: !2, file: !604, line: 189, size: 8, flags: DIFlagTypePassByValue, elements: !608, templateParams: !623, identifier: "_ZTSSt11__pair_baseIPSt18_Rb_tree_node_baseS1_E")
!608 = !{!609, !613, !614, !619}
!609 = !DISubprogram(name: "__pair_base", scope: !607, file: !604, line: 193, type: !610, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0)
!610 = !DISubroutineType(types: !611)
!611 = !{null, !612}
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!613 = !DISubprogram(name: "~__pair_base", scope: !607, file: !604, line: 194, type: !610, scopeLine: 194, flags: DIFlagPrototyped, spFlags: 0)
!614 = !DISubprogram(name: "__pair_base", scope: !607, file: !604, line: 195, type: !615, scopeLine: 195, flags: DIFlagPrototyped, spFlags: 0)
!615 = !DISubroutineType(types: !616)
!616 = !{null, !612, !617}
!617 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !607)
!619 = !DISubprogram(name: "operator=", linkageName: "_ZNSt11__pair_baseIPSt18_Rb_tree_node_baseS1_EaSERKS2_", scope: !607, file: !604, line: 196, type: !620, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDeleted)
!620 = !DISubroutineType(types: !621)
!621 = !{!622, !612, !617}
!622 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !607, size: 64)
!623 = !{!624, !625}
!624 = !DITemplateTypeParameter(name: "_U1", type: !335)
!625 = !DITemplateTypeParameter(name: "_U2", type: !335)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !603, file: !604, line: 217, baseType: !335, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !603, file: !604, line: 218, baseType: !335, size: 64, offset: 64)
!628 = !DISubprogram(name: "pair", scope: !603, file: !604, line: 314, type: !629, scopeLine: 314, flags: DIFlagPrototyped, spFlags: 0)
!629 = !DISubroutineType(types: !630)
!630 = !{null, !631, !632}
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!632 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !603)
!634 = !DISubprogram(name: "pair", scope: !603, file: !604, line: 315, type: !635, scopeLine: 315, flags: DIFlagPrototyped, spFlags: 0)
!635 = !DISubroutineType(types: !636)
!636 = !{null, !631, !637}
!637 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !603, size: 64)
!638 = !DISubprogram(name: "operator=", linkageName: "_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EaSERKS2_", scope: !603, file: !604, line: 390, type: !639, scopeLine: 390, flags: DIFlagPrototyped, spFlags: 0)
!639 = !DISubroutineType(types: !640)
!640 = !{!641, !631, !642}
!641 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !603, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !644, file: !643, line: 2201, baseType: !632)
!643 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/type_traits", directory: "")
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<true, const std::pair<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *> &, const std::__nonesuch &>", scope: !2, file: !643, line: 2200, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !645, identifier: "_ZTSSt11conditionalILb1ERKSt4pairIPSt18_Rb_tree_node_baseS2_ERKSt10__nonesuchE")
!645 = !{!646, !647, !648}
!646 = !DITemplateValueParameter(name: "_Cond", type: !13, value: i8 1)
!647 = !DITemplateTypeParameter(name: "_Iftrue", type: !632)
!648 = !DITemplateTypeParameter(name: "_Iffalse", type: !649)
!649 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "__nonesuch", scope: !2, file: !643, line: 2939, flags: DIFlagFwdDecl, identifier: "_ZTSSt10__nonesuch")
!652 = !DISubprogram(name: "operator=", linkageName: "_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EaSEOS2_", scope: !603, file: !604, line: 401, type: !653, scopeLine: 401, flags: DIFlagPrototyped, spFlags: 0)
!653 = !DISubroutineType(types: !654)
!654 = !{!641, !631, !655}
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !656, file: !643, line: 2201, baseType: !637)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<true, std::pair<std::_Rb_tree_node_base *, std::_Rb_tree_node_base *> &&, std::__nonesuch &&>", scope: !2, file: !643, line: 2200, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !657, identifier: "_ZTSSt11conditionalILb1EOSt4pairIPSt18_Rb_tree_node_baseS2_EOSt10__nonesuchE")
!657 = !{!646, !658, !659}
!658 = !DITemplateTypeParameter(name: "_Iftrue", type: !637)
!659 = !DITemplateTypeParameter(name: "_Iffalse", type: !660)
!660 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !651, size: 64)
!661 = !DISubprogram(name: "swap", linkageName: "_ZNSt4pairIPSt18_Rb_tree_node_baseS1_E4swapERS2_", scope: !603, file: !604, line: 439, type: !662, scopeLine: 439, flags: DIFlagPrototyped, spFlags: 0)
!662 = !DISubroutineType(types: !663)
!663 = !{null, !631, !641}
!664 = !{!665, !666}
!665 = !DITemplateTypeParameter(name: "_T1", type: !335)
!666 = !DITemplateTypeParameter(name: "_T2", type: !335)
!667 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_type", scope: !131, file: !43, line: 559, baseType: !153)
!670 = !DISubprogram(name: "_M_get_insert_equal_pos", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE23_M_get_insert_equal_posERKS1_", scope: !131, file: !43, line: 842, type: !601, scopeLine: 842, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!671 = !DISubprogram(name: "_M_get_insert_hint_unique_pos", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS1_ERKS1_", scope: !131, file: !43, line: 845, type: !672, scopeLine: 845, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!672 = !DISubroutineType(types: !673)
!673 = !{!603, !533, !674, !667}
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_iterator", scope: !131, file: !43, line: 826, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_const_iterator<cGate::Name>", scope: !2, file: !43, line: 328, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !676, templateParams: !274, identifier: "_ZTSSt23_Rb_tree_const_iteratorIN5cGate4NameEE")
!676 = !{!677, !679, !683, !686, !723, !728, !732, !736, !741, !744, !745}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "_M_node", scope: !675, file: !43, line: 405, baseType: !678, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Base_ptr", file: !43, line: 340, baseType: !344)
!679 = !DISubprogram(name: "_Rb_tree_const_iterator", scope: !675, file: !43, line: 343, type: !680, scopeLine: 343, flags: DIFlagPrototyped, spFlags: 0)
!680 = !DISubroutineType(types: !681)
!681 = !{null, !682}
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!683 = !DISubprogram(name: "_Rb_tree_const_iterator", scope: !675, file: !43, line: 347, type: !684, scopeLine: 347, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!684 = !DISubroutineType(types: !685)
!685 = !{null, !682, !678}
!686 = !DISubprogram(name: "_Rb_tree_const_iterator", scope: !675, file: !43, line: 350, type: !687, scopeLine: 350, flags: DIFlagPrototyped, spFlags: 0)
!687 = !DISubroutineType(types: !688)
!688 = !{null, !682, !689}
!689 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator", scope: !675, file: !43, line: 334, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Rb_tree_iterator<cGate::Name>", scope: !2, file: !43, line: 256, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !693, templateParams: !274, identifier: "_ZTSSt17_Rb_tree_iteratorIN5cGate4NameEE")
!693 = !{!694, !696, !700, !703, !709, !713, !718, !721, !722}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "_M_node", scope: !692, file: !43, line: 324, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Base_ptr", file: !43, line: 266, baseType: !334)
!696 = !DISubprogram(name: "_Rb_tree_iterator", scope: !692, file: !43, line: 269, type: !697, scopeLine: 269, flags: DIFlagPrototyped, spFlags: 0)
!697 = !DISubroutineType(types: !698)
!698 = !{null, !699}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!700 = !DISubprogram(name: "_Rb_tree_iterator", scope: !692, file: !43, line: 273, type: !701, scopeLine: 273, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !699, !695}
!703 = !DISubprogram(name: "operator*", linkageName: "_ZNKSt17_Rb_tree_iteratorIN5cGate4NameEEdeEv", scope: !692, file: !43, line: 277, type: !704, scopeLine: 277, flags: DIFlagPrototyped, spFlags: 0)
!704 = !DISubroutineType(types: !705)
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !692, file: !43, line: 259, baseType: !251)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!709 = !DISubprogram(name: "operator->", linkageName: "_ZNKSt17_Rb_tree_iteratorIN5cGate4NameEEptEv", scope: !692, file: !43, line: 281, type: !710, scopeLine: 281, flags: DIFlagPrototyped, spFlags: 0)
!710 = !DISubroutineType(types: !711)
!711 = !{!712, !707}
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !692, file: !43, line: 260, baseType: !152)
!713 = !DISubprogram(name: "operator++", linkageName: "_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEppEv", scope: !692, file: !43, line: 285, type: !714, scopeLine: 285, flags: DIFlagPrototyped, spFlags: 0)
!714 = !DISubroutineType(types: !715)
!715 = !{!716, !699}
!716 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Self", scope: !692, file: !43, line: 265, baseType: !692)
!718 = !DISubprogram(name: "operator++", linkageName: "_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEppEi", scope: !692, file: !43, line: 292, type: !719, scopeLine: 292, flags: DIFlagPrototyped, spFlags: 0)
!719 = !DISubroutineType(types: !720)
!720 = !{!717, !699, !11}
!721 = !DISubprogram(name: "operator--", linkageName: "_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEmmEv", scope: !692, file: !43, line: 300, type: !714, scopeLine: 300, flags: DIFlagPrototyped, spFlags: 0)
!722 = !DISubprogram(name: "operator--", linkageName: "_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEmmEi", scope: !692, file: !43, line: 307, type: !719, scopeLine: 307, flags: DIFlagPrototyped, spFlags: 0)
!723 = !DISubprogram(name: "_M_const_cast", linkageName: "_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEE13_M_const_castEv", scope: !675, file: !43, line: 354, type: !724, scopeLine: 354, flags: DIFlagPrototyped, spFlags: 0)
!724 = !DISubroutineType(types: !725)
!725 = !{!691, !726}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!728 = !DISubprogram(name: "operator*", linkageName: "_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEEdeEv", scope: !675, file: !43, line: 358, type: !729, scopeLine: 358, flags: DIFlagPrototyped, spFlags: 0)
!729 = !DISubroutineType(types: !730)
!730 = !{!731, !726}
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !675, file: !43, line: 331, baseType: !223)
!732 = !DISubprogram(name: "operator->", linkageName: "_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEEptEv", scope: !675, file: !43, line: 362, type: !733, scopeLine: 362, flags: DIFlagPrototyped, spFlags: 0)
!733 = !DISubroutineType(types: !734)
!734 = !{!735, !726}
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !675, file: !43, line: 332, baseType: !256)
!736 = !DISubprogram(name: "operator++", linkageName: "_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEppEv", scope: !675, file: !43, line: 366, type: !737, scopeLine: 366, flags: DIFlagPrototyped, spFlags: 0)
!737 = !DISubroutineType(types: !738)
!738 = !{!739, !682}
!739 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Self", scope: !675, file: !43, line: 339, baseType: !675)
!741 = !DISubprogram(name: "operator++", linkageName: "_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEppEi", scope: !675, file: !43, line: 373, type: !742, scopeLine: 373, flags: DIFlagPrototyped, spFlags: 0)
!742 = !DISubroutineType(types: !743)
!743 = !{!740, !682, !11}
!744 = !DISubprogram(name: "operator--", linkageName: "_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEmmEv", scope: !675, file: !43, line: 381, type: !737, scopeLine: 381, flags: DIFlagPrototyped, spFlags: 0)
!745 = !DISubprogram(name: "operator--", linkageName: "_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEmmEi", scope: !675, file: !43, line: 388, type: !742, scopeLine: 388, flags: DIFlagPrototyped, spFlags: 0)
!746 = !DISubprogram(name: "_M_get_insert_hint_equal_pos", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE28_M_get_insert_hint_equal_posESt23_Rb_tree_const_iteratorIS1_ERKS1_", scope: !131, file: !43, line: 849, type: !672, scopeLine: 849, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!747 = !DISubprogram(name: "_M_insert_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseS9_PSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 859, type: !748, scopeLine: 859, flags: DIFlagPrototyped, spFlags: 0)
!748 = !DISubroutineType(types: !749)
!749 = !{!750, !533, !558, !558, !548}
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator", scope: !131, file: !43, line: 825, baseType: !692)
!751 = !DISubprogram(name: "_M_insert_lower_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE20_M_insert_lower_nodeEPSt18_Rb_tree_node_basePSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 870, type: !752, scopeLine: 870, flags: DIFlagPrototyped, spFlags: 0)
!752 = !DISubroutineType(types: !753)
!753 = !{!750, !533, !558, !548}
!754 = !DISubprogram(name: "_M_insert_equal_lower_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE26_M_insert_equal_lower_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 873, type: !755, scopeLine: 873, flags: DIFlagPrototyped, spFlags: 0)
!755 = !DISubroutineType(types: !756)
!756 = !{!750, !533, !548}
!757 = !DISubprogram(name: "_M_copy", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_M_copyERKS7_", scope: !131, file: !43, line: 905, type: !758, scopeLine: 905, flags: DIFlagPrototyped, spFlags: 0)
!758 = !DISubroutineType(types: !759)
!759 = !{!548, !533, !760}
!760 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !540, size: 64)
!761 = !DISubprogram(name: "_M_erase", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 912, type: !550, scopeLine: 912, flags: DIFlagPrototyped, spFlags: 0)
!762 = !DISubprogram(name: "_M_lower_bound", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_EPSt18_Rb_tree_node_baseRKS1_", scope: !131, file: !43, line: 915, type: !763, scopeLine: 915, flags: DIFlagPrototyped, spFlags: 0)
!763 = !DISubroutineType(types: !764)
!764 = !{!750, !533, !548, !558, !223}
!765 = !DISubprogram(name: "_M_lower_bound", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS1_EPKSt18_Rb_tree_node_baseRKS1_", scope: !131, file: !43, line: 919, type: !766, scopeLine: 919, flags: DIFlagPrototyped, spFlags: 0)
!766 = !DISubroutineType(types: !767)
!767 = !{!674, !539, !571, !562, !223}
!768 = !DISubprogram(name: "_M_upper_bound", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS1_EPSt18_Rb_tree_node_baseRKS1_", scope: !131, file: !43, line: 923, type: !763, scopeLine: 923, flags: DIFlagPrototyped, spFlags: 0)
!769 = !DISubprogram(name: "_M_upper_bound", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_upper_boundEPKSt13_Rb_tree_nodeIS1_EPKSt18_Rb_tree_node_baseRKS1_", scope: !131, file: !43, line: 927, type: !766, scopeLine: 927, flags: DIFlagPrototyped, spFlags: 0)
!770 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 935, type: !771, scopeLine: 935, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!771 = !DISubroutineType(types: !772)
!772 = !{null, !533}
!773 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 938, type: !774, scopeLine: 938, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!774 = !DISubroutineType(types: !775)
!775 = !{null, !533, !474, !776}
!776 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!778 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 942, type: !779, scopeLine: 942, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !533, !760}
!781 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 950, type: !782, scopeLine: 950, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!782 = !DISubroutineType(types: !783)
!783 = !{null, !533, !776}
!784 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 954, type: !785, scopeLine: 954, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !533, !760, !776}
!787 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 961, type: !788, scopeLine: 961, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!788 = !DISubroutineType(types: !789)
!789 = !{null, !533, !790}
!790 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !131, size: 64)
!791 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 963, type: !792, scopeLine: 963, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!792 = !DISubroutineType(types: !793)
!793 = !{null, !533, !790, !776}
!794 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 968, type: !795, scopeLine: 968, flags: DIFlagPrototyped, spFlags: 0)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !533, !790, !520, !797}
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "true_type", scope: !2, file: !643, line: 75, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "integral_constant<bool, true>", scope: !2, file: !643, line: 57, size: 8, flags: DIFlagTypePassByValue, elements: !799, templateParams: !809, identifier: "_ZTSSt17integral_constantIbLb1EE")
!799 = !{!800, !802, !808}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !798, file: !643, line: 59, baseType: !801, flags: DIFlagStaticMember, extraData: i1 true)
!801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!802 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt17integral_constantIbLb1EEcvbEv", scope: !798, file: !643, line: 62, type: !803, scopeLine: 62, flags: DIFlagPrototyped, spFlags: 0)
!803 = !DISubroutineType(types: !804)
!804 = !{!805, !806}
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !798, file: !643, line: 60, baseType: !13)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!808 = !DISubprogram(name: "operator()", linkageName: "_ZNKSt17integral_constantIbLb1EEclEv", scope: !798, file: !643, line: 67, type: !803, scopeLine: 67, flags: DIFlagPrototyped, spFlags: 0)
!809 = !{!810, !811}
!810 = !DITemplateTypeParameter(name: "_Tp", type: !13)
!811 = !DITemplateValueParameter(name: "__v", type: !13, value: i8 1)
!812 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 973, type: !813, scopeLine: 973, flags: DIFlagPrototyped, spFlags: 0)
!813 = !DISubroutineType(types: !814)
!814 = !{null, !533, !790, !520, !815}
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "false_type", scope: !2, file: !643, line: 78, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "integral_constant<bool, false>", scope: !2, file: !643, line: 57, size: 8, flags: DIFlagTypePassByValue, elements: !817, templateParams: !826, identifier: "_ZTSSt17integral_constantIbLb0EE")
!817 = !{!818, !819, !825}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !816, file: !643, line: 59, baseType: !801, flags: DIFlagStaticMember, extraData: i1 false)
!819 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt17integral_constantIbLb0EEcvbEv", scope: !816, file: !643, line: 62, type: !820, scopeLine: 62, flags: DIFlagPrototyped, spFlags: 0)
!820 = !DISubroutineType(types: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !816, file: !643, line: 60, baseType: !13)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !816)
!825 = !DISubprogram(name: "operator()", linkageName: "_ZNKSt17integral_constantIbLb0EEclEv", scope: !816, file: !643, line: 67, type: !820, scopeLine: 67, flags: DIFlagPrototyped, spFlags: 0)
!826 = !{!810, !827}
!827 = !DITemplateValueParameter(name: "__v", type: !13, value: i8 0)
!828 = !DISubprogram(name: "_Rb_tree", scope: !131, file: !43, line: 981, type: !829, scopeLine: 981, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !533, !790, !520}
!831 = !DISubprogram(name: "~_Rb_tree", scope: !131, file: !43, line: 990, type: !771, scopeLine: 990, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!832 = !DISubprogram(name: "operator=", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEaSERKS7_", scope: !131, file: !43, line: 994, type: !833, scopeLine: 994, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!833 = !DISubroutineType(types: !834)
!834 = !{!835, !533, !760}
!835 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !131, size: 64)
!836 = !DISubprogram(name: "key_comp", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8key_compEv", scope: !131, file: !43, line: 998, type: !837, scopeLine: 998, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!837 = !DISubroutineType(types: !838)
!838 = !{!453, !539}
!839 = !DISubprogram(name: "begin", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv", scope: !131, file: !43, line: 1002, type: !840, scopeLine: 1002, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!840 = !DISubroutineType(types: !841)
!841 = !{!750, !533}
!842 = !DISubprogram(name: "begin", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv", scope: !131, file: !43, line: 1006, type: !843, scopeLine: 1006, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!843 = !DISubroutineType(types: !844)
!844 = !{!674, !539}
!845 = !DISubprogram(name: "end", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv", scope: !131, file: !43, line: 1010, type: !840, scopeLine: 1010, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!846 = !DISubprogram(name: "end", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv", scope: !131, file: !43, line: 1014, type: !843, scopeLine: 1014, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!847 = !DISubprogram(name: "rbegin", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6rbeginEv", scope: !131, file: !43, line: 1018, type: !848, scopeLine: 1018, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!848 = !DISubroutineType(types: !849)
!849 = !{!850, !533}
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "reverse_iterator", scope: !131, file: !43, line: 828, baseType: !851)
!851 = !DICompositeType(tag: DW_TAG_class_type, name: "reverse_iterator<std::_Rb_tree_iterator<cGate::Name> >", scope: !2, file: !852, line: 125, flags: DIFlagFwdDecl, identifier: "_ZTSSt16reverse_iteratorISt17_Rb_tree_iteratorIN5cGate4NameEEE")
!852 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_iterator.h", directory: "")
!853 = !DISubprogram(name: "rbegin", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6rbeginEv", scope: !131, file: !43, line: 1022, type: !854, scopeLine: 1022, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!854 = !DISubroutineType(types: !855)
!855 = !{!856, !539}
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reverse_iterator", scope: !131, file: !43, line: 829, baseType: !857)
!857 = !DICompositeType(tag: DW_TAG_class_type, name: "reverse_iterator<std::_Rb_tree_const_iterator<cGate::Name> >", scope: !2, file: !852, line: 125, flags: DIFlagFwdDecl, identifier: "_ZTSSt16reverse_iteratorISt23_Rb_tree_const_iteratorIN5cGate4NameEEE")
!858 = !DISubprogram(name: "rend", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4rendEv", scope: !131, file: !43, line: 1026, type: !848, scopeLine: 1026, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!859 = !DISubprogram(name: "rend", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4rendEv", scope: !131, file: !43, line: 1030, type: !854, scopeLine: 1030, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!860 = !DISubprogram(name: "empty", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5emptyEv", scope: !131, file: !43, line: 1034, type: !861, scopeLine: 1034, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!861 = !DISubroutineType(types: !862)
!862 = !{!13, !539}
!863 = !DISubprogram(name: "size", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4sizeEv", scope: !131, file: !43, line: 1038, type: !864, scopeLine: 1038, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!864 = !DISubroutineType(types: !865)
!865 = !{!866, !539}
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", file: !43, line: 565, baseType: !262)
!867 = !DISubprogram(name: "max_size", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8max_sizeEv", scope: !131, file: !43, line: 1042, type: !864, scopeLine: 1042, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!868 = !DISubprogram(name: "swap", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4swapERS7_", scope: !131, file: !43, line: 1046, type: !869, scopeLine: 1046, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !533, !835}
!871 = !DISubprogram(name: "_M_erase_aux", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_E", scope: !131, file: !43, line: 1188, type: !872, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: 0)
!872 = !DISubroutineType(types: !873)
!873 = !{null, !533, !674}
!874 = !DISubprogram(name: "_M_erase_aux", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_ES9_", scope: !131, file: !43, line: 1191, type: !875, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: 0)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !533, !674, !674}
!877 = !DISubprogram(name: "erase", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_E", scope: !131, file: !43, line: 1199, type: !878, scopeLine: 1199, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!878 = !DISubroutineType(types: !879)
!879 = !{!750, !533, !674}
!880 = !DISubprogram(name: "erase", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt17_Rb_tree_iteratorIS1_E", scope: !131, file: !43, line: 1211, type: !881, scopeLine: 1211, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!881 = !DISubroutineType(types: !882)
!882 = !{!750, !533, !750}
!883 = !DISubprogram(name: "erase", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseERKS1_", scope: !131, file: !43, line: 1236, type: !884, scopeLine: 1236, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!884 = !DISubroutineType(types: !885)
!885 = !{!886, !533, !667}
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !131, file: !43, line: 565, baseType: !262)
!887 = !DISubprogram(name: "erase", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_ES9_", scope: !131, file: !43, line: 1243, type: !888, scopeLine: 1243, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!888 = !DISubroutineType(types: !889)
!889 = !{!750, !533, !674, !674}
!890 = !DISubprogram(name: "clear", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv", scope: !131, file: !43, line: 1259, type: !771, scopeLine: 1259, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!891 = !DISubprogram(name: "find", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4findERKS1_", scope: !131, file: !43, line: 1267, type: !892, scopeLine: 1267, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!892 = !DISubroutineType(types: !893)
!893 = !{!750, !533, !667}
!894 = !DISubprogram(name: "find", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4findERKS1_", scope: !131, file: !43, line: 1270, type: !895, scopeLine: 1270, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!895 = !DISubroutineType(types: !896)
!896 = !{!674, !539, !667}
!897 = !DISubprogram(name: "count", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5countERKS1_", scope: !131, file: !43, line: 1273, type: !898, scopeLine: 1273, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!898 = !DISubroutineType(types: !899)
!899 = !{!886, !539, !667}
!900 = !DISubprogram(name: "lower_bound", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11lower_boundERKS1_", scope: !131, file: !43, line: 1276, type: !892, scopeLine: 1276, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!901 = !DISubprogram(name: "lower_bound", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11lower_boundERKS1_", scope: !131, file: !43, line: 1280, type: !895, scopeLine: 1280, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!902 = !DISubprogram(name: "upper_bound", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11upper_boundERKS1_", scope: !131, file: !43, line: 1284, type: !892, scopeLine: 1284, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!903 = !DISubprogram(name: "upper_bound", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11upper_boundERKS1_", scope: !131, file: !43, line: 1288, type: !895, scopeLine: 1288, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!904 = !DISubprogram(name: "equal_range", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_", scope: !131, file: !43, line: 1292, type: !905, scopeLine: 1292, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!905 = !DISubroutineType(types: !906)
!906 = !{!907, !533, !667}
!907 = !DICompositeType(tag: DW_TAG_structure_type, name: "pair<std::_Rb_tree_iterator<cGate::Name>, std::_Rb_tree_iterator<cGate::Name> >", scope: !2, file: !604, line: 211, flags: DIFlagFwdDecl, identifier: "_ZTSSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEES3_E")
!908 = !DISubprogram(name: "equal_range", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_", scope: !131, file: !43, line: 1295, type: !909, scopeLine: 1295, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!909 = !DISubroutineType(types: !910)
!910 = !{!911, !539, !667}
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "pair<std::_Rb_tree_const_iterator<cGate::Name>, std::_Rb_tree_const_iterator<cGate::Name> >", scope: !2, file: !604, line: 211, flags: DIFlagFwdDecl, identifier: "_ZTSSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEES3_E")
!912 = !DISubprogram(name: "__rb_verify", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11__rb_verifyEv", scope: !131, file: !43, line: 1407, type: !861, scopeLine: 1407, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!913 = !DISubprogram(name: "operator=", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEaSEOS7_", scope: !131, file: !43, line: 1411, type: !914, scopeLine: 1411, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!914 = !DISubroutineType(types: !915)
!915 = !{!835, !533, !790}
!916 = !DISubprogram(name: "_M_move_data", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_move_dataERS7_St17integral_constantIbLb1EE", scope: !131, file: !43, line: 1426, type: !917, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: 0)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !533, !835, !797}
!919 = !DISubprogram(name: "_M_move_data", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_move_dataERS7_St17integral_constantIbLb0EE", scope: !131, file: !43, line: 1432, type: !920, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: 0)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !533, !835, !815}
!922 = !DISubprogram(name: "_M_move_assign", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_move_assignERS7_St17integral_constantIbLb1EE", scope: !131, file: !43, line: 1436, type: !917, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: 0)
!923 = !DISubprogram(name: "_M_move_assign", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_move_assignERS7_St17integral_constantIbLb0EE", scope: !131, file: !43, line: 1441, type: !920, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: 0)
!924 = !{!925, !392, !926, !942, !308}
!925 = !DITemplateTypeParameter(name: "_Key", type: !153)
!926 = !DITemplateTypeParameter(name: "_KeyOfValue", type: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Identity<cGate::Name>", scope: !2, file: !454, line: 1131, size: 8, flags: DIFlagTypePassByValue, elements: !928, templateParams: !274, identifier: "_ZTSSt9_IdentityIN5cGate4NameEE")
!928 = !{!929, !934, !939}
!929 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !927, baseType: !930, extraData: i32 0)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unary_function<cGate::Name, cGate::Name>", scope: !2, file: !454, line: 105, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !931, identifier: "_ZTSSt14unary_functionIN5cGate4NameES1_E")
!931 = !{!932, !933}
!932 = !DITemplateTypeParameter(name: "_Arg", type: !153)
!933 = !DITemplateTypeParameter(name: "_Result", type: !153)
!934 = !DISubprogram(name: "operator()", linkageName: "_ZNKSt9_IdentityIN5cGate4NameEEclERS1_", scope: !927, file: !454, line: 1135, type: !935, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: 0)
!935 = !DISubroutineType(types: !936)
!936 = !{!251, !937, !251}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!939 = !DISubprogram(name: "operator()", linkageName: "_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_", scope: !927, file: !454, line: 1139, type: !940, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: 0)
!940 = !DISubroutineType(types: !941)
!941 = !{!223, !937, !223}
!942 = !DITemplateTypeParameter(name: "_Compare", type: !453)
!943 = !DISubprogram(name: "set", scope: !126, file: !127, line: 167, type: !944, scopeLine: 167, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!944 = !DISubroutineType(types: !945)
!945 = !{null, !946}
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!947 = !DISubprogram(name: "set", scope: !126, file: !127, line: 176, type: !948, scopeLine: 176, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!948 = !DISubroutineType(types: !949)
!949 = !{null, !946, !474, !950}
!950 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !126, file: !127, line: 124, baseType: !226)
!953 = !DISubprogram(name: "set", scope: !126, file: !127, line: 223, type: !954, scopeLine: 223, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!954 = !DISubroutineType(types: !955)
!955 = !{null, !946, !956}
!956 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !957, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!958 = !DISubprogram(name: "set", scope: !126, file: !127, line: 231, type: !959, scopeLine: 231, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !946, !961}
!961 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !126, size: 64)
!962 = !DISubprogram(name: "set", scope: !126, file: !127, line: 243, type: !963, scopeLine: 243, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !946, !965, !474, !950}
!965 = !DICompositeType(tag: DW_TAG_class_type, name: "initializer_list<cGate::Name>", scope: !2, file: !966, line: 47, flags: DIFlagFwdDecl, identifier: "_ZTSSt16initializer_listIN5cGate4NameEE")
!966 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/initializer_list", directory: "")
!967 = !DISubprogram(name: "set", scope: !126, file: !127, line: 251, type: !968, scopeLine: 251, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !946, !950}
!970 = !DISubprogram(name: "set", scope: !126, file: !127, line: 255, type: !971, scopeLine: 255, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !946, !956, !950}
!973 = !DISubprogram(name: "set", scope: !126, file: !127, line: 259, type: !974, scopeLine: 259, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !946, !961, !950}
!976 = !DISubprogram(name: "set", scope: !126, file: !127, line: 265, type: !977, scopeLine: 265, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !946, !965, !950}
!979 = !DISubprogram(name: "~set", scope: !126, file: !127, line: 281, type: !944, scopeLine: 281, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!980 = !DISubprogram(name: "operator=", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEaSERKS5_", scope: !126, file: !127, line: 298, type: !981, scopeLine: 298, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!981 = !DISubroutineType(types: !982)
!982 = !{!983, !946, !956}
!983 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !126, size: 64)
!984 = !DISubprogram(name: "operator=", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEaSEOS5_", scope: !126, file: !127, line: 302, type: !985, scopeLine: 302, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!985 = !DISubroutineType(types: !986)
!986 = !{!983, !946, !961}
!987 = !DISubprogram(name: "operator=", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEaSESt16initializer_listIS1_E", scope: !126, file: !127, line: 316, type: !988, scopeLine: 316, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!988 = !DISubroutineType(types: !989)
!989 = !{!983, !946, !965}
!990 = !DISubprogram(name: "key_comp", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE8key_compEv", scope: !126, file: !127, line: 327, type: !991, scopeLine: 327, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!991 = !DISubroutineType(types: !992)
!992 = !{!993, !994}
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_compare", scope: !126, file: !127, line: 122, baseType: !453)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!995 = !DISubprogram(name: "value_comp", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE10value_compEv", scope: !126, file: !127, line: 331, type: !996, scopeLine: 331, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!996 = !DISubroutineType(types: !997)
!997 = !{!998, !994}
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_compare", scope: !126, file: !127, line: 123, baseType: !453)
!999 = !DISubprogram(name: "get_allocator", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE13get_allocatorEv", scope: !126, file: !127, line: 335, type: !1000, scopeLine: 335, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!952, !994}
!1002 = !DISubprogram(name: "begin", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5beginEv", scope: !126, file: !127, line: 344, type: !1003, scopeLine: 344, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!1005, !994}
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator", scope: !126, file: !127, line: 147, baseType: !674)
!1006 = !DISubprogram(name: "end", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE3endEv", scope: !126, file: !127, line: 353, type: !1003, scopeLine: 353, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1007 = !DISubprogram(name: "rbegin", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6rbeginEv", scope: !126, file: !127, line: 362, type: !1008, scopeLine: 362, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!1010, !994}
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "reverse_iterator", scope: !126, file: !127, line: 149, baseType: !856)
!1011 = !DISubprogram(name: "rend", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4rendEv", scope: !126, file: !127, line: 371, type: !1008, scopeLine: 371, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1012 = !DISubprogram(name: "cbegin", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6cbeginEv", scope: !126, file: !127, line: 381, type: !1003, scopeLine: 381, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1013 = !DISubprogram(name: "cend", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4cendEv", scope: !126, file: !127, line: 390, type: !1003, scopeLine: 390, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1014 = !DISubprogram(name: "crbegin", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE7crbeginEv", scope: !126, file: !127, line: 399, type: !1008, scopeLine: 399, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1015 = !DISubprogram(name: "crend", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5crendEv", scope: !126, file: !127, line: 408, type: !1008, scopeLine: 408, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1016 = !DISubprogram(name: "empty", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5emptyEv", scope: !126, file: !127, line: 414, type: !1017, scopeLine: 414, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!13, !994}
!1019 = !DISubprogram(name: "size", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4sizeEv", scope: !126, file: !127, line: 419, type: !1020, scopeLine: 419, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!1022, !994}
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !126, file: !127, line: 151, baseType: !886)
!1023 = !DISubprogram(name: "max_size", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE8max_sizeEv", scope: !126, file: !127, line: 424, type: !1020, scopeLine: 424, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1024 = !DISubprogram(name: "swap", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4swapERS5_", scope: !126, file: !127, line: 441, type: !1025, scopeLine: 441, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{null, !946, !983}
!1027 = !DISubprogram(name: "insert", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertERKS1_", scope: !126, file: !127, line: 509, type: !1028, scopeLine: 509, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!1030, !946, !1085}
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pair<std::_Rb_tree_const_iterator<cGate::Name>, bool>", scope: !2, file: !604, line: 211, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !1031, templateParams: !1082, identifier: "_ZTSSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbE")
!1031 = !{!1032, !1052, !1053, !1054, !1060, !1064, !1072, !1079}
!1032 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1030, baseType: !1033, flags: DIFlagPrivate, extraData: i32 0)
!1033 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "__pair_base<std::_Rb_tree_const_iterator<cGate::Name>, bool>", scope: !2, file: !604, line: 189, size: 8, flags: DIFlagTypePassByValue, elements: !1034, templateParams: !1049, identifier: "_ZTSSt11__pair_baseISt23_Rb_tree_const_iteratorIN5cGate4NameEEbE")
!1034 = !{!1035, !1039, !1040, !1045}
!1035 = !DISubprogram(name: "__pair_base", scope: !1033, file: !604, line: 193, type: !1036, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !1038}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1039 = !DISubprogram(name: "~__pair_base", scope: !1033, file: !604, line: 194, type: !1036, scopeLine: 194, flags: DIFlagPrototyped, spFlags: 0)
!1040 = !DISubprogram(name: "__pair_base", scope: !1033, file: !604, line: 195, type: !1041, scopeLine: 195, flags: DIFlagPrototyped, spFlags: 0)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !1038, !1043}
!1043 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1045 = !DISubprogram(name: "operator=", linkageName: "_ZNSt11__pair_baseISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEaSERKS4_", scope: !1033, file: !604, line: 196, type: !1046, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDeleted)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!1048, !1038, !1043}
!1048 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1033, size: 64)
!1049 = !{!1050, !1051}
!1050 = !DITemplateTypeParameter(name: "_U1", type: !675)
!1051 = !DITemplateTypeParameter(name: "_U2", type: !13)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1030, file: !604, line: 217, baseType: !675, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !1030, file: !604, line: 218, baseType: !13, size: 8, offset: 64)
!1054 = !DISubprogram(name: "pair", scope: !1030, file: !604, line: 314, type: !1055, scopeLine: 314, flags: DIFlagPrototyped, spFlags: 0)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1058 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1060 = !DISubprogram(name: "pair", scope: !1030, file: !604, line: 315, type: !1061, scopeLine: 315, flags: DIFlagPrototyped, spFlags: 0)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{null, !1057, !1063}
!1063 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1030, size: 64)
!1064 = !DISubprogram(name: "operator=", linkageName: "_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEaSERKS4_", scope: !1030, file: !604, line: 390, type: !1065, scopeLine: 390, flags: DIFlagPrototyped, spFlags: 0)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!1067, !1057, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1030, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !1069, file: !643, line: 2201, baseType: !1058)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<true, const std::pair<std::_Rb_tree_const_iterator<cGate::Name>, bool> &, const std::__nonesuch &>", scope: !2, file: !643, line: 2200, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !1070, identifier: "_ZTSSt11conditionalILb1ERKSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbERKSt10__nonesuchE")
!1070 = !{!646, !1071, !648}
!1071 = !DITemplateTypeParameter(name: "_Iftrue", type: !1058)
!1072 = !DISubprogram(name: "operator=", linkageName: "_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEaSEOS4_", scope: !1030, file: !604, line: 401, type: !1073, scopeLine: 401, flags: DIFlagPrototyped, spFlags: 0)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!1067, !1057, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !1076, file: !643, line: 2201, baseType: !1063)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<true, std::pair<std::_Rb_tree_const_iterator<cGate::Name>, bool> &&, std::__nonesuch &&>", scope: !2, file: !643, line: 2200, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !1077, identifier: "_ZTSSt11conditionalILb1EOSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEOSt10__nonesuchE")
!1077 = !{!646, !1078, !659}
!1078 = !DITemplateTypeParameter(name: "_Iftrue", type: !1063)
!1079 = !DISubprogram(name: "swap", linkageName: "_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbE4swapERS4_", scope: !1030, file: !604, line: 439, type: !1080, scopeLine: 439, flags: DIFlagPrototyped, spFlags: 0)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !1057, !1067}
!1082 = !{!1083, !1084}
!1083 = !DITemplateTypeParameter(name: "_T1", type: !675)
!1084 = !DITemplateTypeParameter(name: "_T2", type: !13)
!1085 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !126, file: !127, line: 121, baseType: !153)
!1088 = !DISubprogram(name: "insert", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertEOS1_", scope: !126, file: !127, line: 518, type: !1089, scopeLine: 518, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!1030, !946, !1091}
!1091 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1087, size: 64)
!1092 = !DISubprogram(name: "insert", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertESt23_Rb_tree_const_iteratorIS1_ERKS1_", scope: !126, file: !127, line: 546, type: !1093, scopeLine: 546, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1005, !946, !1095, !1085}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_iterator", scope: !126, file: !127, line: 148, baseType: !674)
!1096 = !DISubprogram(name: "insert", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertESt23_Rb_tree_const_iteratorIS1_EOS1_", scope: !126, file: !127, line: 551, type: !1097, scopeLine: 551, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!1005, !946, !1095, !1091}
!1099 = !DISubprogram(name: "insert", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertESt16initializer_listIS1_E", scope: !126, file: !127, line: 578, type: !1100, scopeLine: 578, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !946, !965}
!1102 = !DISubprogram(name: "erase", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_E", scope: !126, file: !127, line: 654, type: !1103, scopeLine: 654, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!1005, !946, !1095}
!1105 = !DISubprogram(name: "erase", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5eraseERKS1_", scope: !126, file: !127, line: 684, type: !1106, scopeLine: 684, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!1022, !946, !1108}
!1108 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_type", scope: !126, file: !127, line: 120, baseType: !153)
!1111 = !DISubprogram(name: "erase", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_ES7_", scope: !126, file: !127, line: 706, type: !1112, scopeLine: 706, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!1005, !946, !1095, !1095}
!1114 = !DISubprogram(name: "clear", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5clearEv", scope: !126, file: !127, line: 733, type: !944, scopeLine: 733, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1115 = !DISubprogram(name: "count", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5countERKS1_", scope: !126, file: !127, line: 748, type: !1116, scopeLine: 748, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!1022, !994, !1108}
!1118 = !DISubprogram(name: "find", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4findERKS1_", scope: !126, file: !127, line: 794, type: !1119, scopeLine: 794, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!1005, !946, !1108}
!1121 = !DISubprogram(name: "find", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4findERKS1_", scope: !126, file: !127, line: 798, type: !1122, scopeLine: 798, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!1095, !994, !1108}
!1124 = !DISubprogram(name: "lower_bound", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE11lower_boundERKS1_", scope: !126, file: !127, line: 829, type: !1119, scopeLine: 829, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1125 = !DISubprogram(name: "lower_bound", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE11lower_boundERKS1_", scope: !126, file: !127, line: 833, type: !1122, scopeLine: 833, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1126 = !DISubprogram(name: "upper_bound", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE11upper_boundERKS1_", scope: !126, file: !127, line: 859, type: !1119, scopeLine: 859, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1127 = !DISubprogram(name: "upper_bound", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE11upper_boundERKS1_", scope: !126, file: !127, line: 863, type: !1122, scopeLine: 863, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1128 = !DISubprogram(name: "equal_range", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_", scope: !126, file: !127, line: 898, type: !1129, scopeLine: 898, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!911, !946, !1108}
!1131 = !DISubprogram(name: "equal_range", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_", scope: !126, file: !127, line: 902, type: !1132, scopeLine: 902, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!911, !994, !1108}
!1134 = !{!925, !942, !308}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "descvSize", scope: !101, file: !100, line: 227, baseType: !11, size: 32, offset: 1216, flags: DIFlagProtected)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "descv", scope: !101, file: !100, line: 228, baseType: !1137, size: 64, offset: 1280, flags: DIFlagProtected)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Desc", scope: !35, file: !34, line: 100, size: 320, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !1139, identifier: "_ZTSN5cGate4DescE")
!1139 = !{!1140, !1141, !1142, !1143, !1150, !1155, !1159, !1164, !1167, !1168, !1171, !1176, !1179, !1182, !1183, !1184, !1187, !1190, !1191, !1194, !1195}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ownerp", scope: !1138, file: !34, line: 102, baseType: !120, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "namep", scope: !1138, file: !34, line: 103, baseType: !152, size: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1138, file: !34, line: 104, baseType: !11, size: 32, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, scope: !1138, file: !34, line: 105, baseType: !1144, size: 64, offset: 192)
!1144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1138, file: !34, line: 105, size: 64, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !1145, identifier: "_ZTSN5cGate4DescUt_E")
!1145 = !{!1146, !1148}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "inputgate", scope: !1144, file: !34, line: 105, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "inputgatev", scope: !1144, file: !34, line: 105, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, scope: !1138, file: !34, line: 106, baseType: !1151, size: 64, offset: 256)
!1151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1138, file: !34, line: 106, size: 64, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !1152, identifier: "_ZTSN5cGate4DescUt0_E")
!1152 = !{!1153, !1154}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "outputgate", scope: !1151, file: !34, line: 106, baseType: !1147, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "outputgatev", scope: !1151, file: !34, line: 106, baseType: !1149, size: 64)
!1155 = !DISubprogram(name: "Desc", scope: !1138, file: !34, line: 108, type: !1156, scopeLine: 108, flags: DIFlagPrototyped, spFlags: 0)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{null, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1159 = !DISubprogram(name: "inUse", linkageName: "_ZNK5cGate4Desc5inUseEv", scope: !1138, file: !34, line: 109, type: !1160, scopeLine: 109, flags: DIFlagPrototyped, spFlags: 0)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!13, !1162}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1138)
!1164 = !DISubprogram(name: "getType", linkageName: "_ZNK5cGate4Desc7getTypeEv", scope: !1138, file: !34, line: 110, type: !1165, scopeLine: 110, flags: DIFlagPrototyped, spFlags: 0)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!33, !1162}
!1167 = !DISubprogram(name: "isVector", linkageName: "_ZNK5cGate4Desc8isVectorEv", scope: !1138, file: !34, line: 111, type: !1160, scopeLine: 111, flags: DIFlagPrototyped, spFlags: 0)
!1168 = !DISubprogram(name: "nameFor", linkageName: "_ZNK5cGate4Desc7nameForENS_4TypeE", scope: !1138, file: !34, line: 112, type: !1169, scopeLine: 112, flags: DIFlagPrototyped, spFlags: 0)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!167, !1162, !33}
!1171 = !DISubprogram(name: "indexOf", linkageName: "_ZNK5cGate4Desc7indexOfEPKS_", scope: !1138, file: !34, line: 113, type: !1172, scopeLine: 113, flags: DIFlagPrototyped, spFlags: 0)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!11, !1162, !1174}
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!1176 = !DISubprogram(name: "deliverOnReceptionStart", linkageName: "_ZNK5cGate4Desc23deliverOnReceptionStartEPKS_", scope: !1138, file: !34, line: 114, type: !1177, scopeLine: 114, flags: DIFlagPrototyped, spFlags: 0)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!13, !1162, !1174}
!1179 = !DISubprogram(name: "getTypeOf", linkageName: "_ZNK5cGate4Desc9getTypeOfEPKS_", scope: !1138, file: !34, line: 115, type: !1180, scopeLine: 115, flags: DIFlagPrototyped, spFlags: 0)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!33, !1162, !1174}
!1182 = !DISubprogram(name: "isInput", linkageName: "_ZNK5cGate4Desc7isInputEPKS_", scope: !1138, file: !34, line: 116, type: !1177, scopeLine: 116, flags: DIFlagPrototyped, spFlags: 0)
!1183 = !DISubprogram(name: "isOutput", linkageName: "_ZNK5cGate4Desc8isOutputEPKS_", scope: !1138, file: !34, line: 117, type: !1177, scopeLine: 117, flags: DIFlagPrototyped, spFlags: 0)
!1184 = !DISubprogram(name: "gateSize", linkageName: "_ZNK5cGate4Desc8gateSizeEv", scope: !1138, file: !34, line: 118, type: !1185, scopeLine: 118, flags: DIFlagPrototyped, spFlags: 0)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!11, !1162}
!1187 = !DISubprogram(name: "setInputGate", linkageName: "_ZN5cGate4Desc12setInputGateEPS_", scope: !1138, file: !34, line: 119, type: !1188, scopeLine: 119, flags: DIFlagPrototyped, spFlags: 0)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !1158, !1147}
!1190 = !DISubprogram(name: "setOutputGate", linkageName: "_ZN5cGate4Desc13setOutputGateEPS_", scope: !1138, file: !34, line: 120, type: !1188, scopeLine: 120, flags: DIFlagPrototyped, spFlags: 0)
!1191 = !DISubprogram(name: "setInputGate", linkageName: "_ZN5cGate4Desc12setInputGateEPS_i", scope: !1138, file: !34, line: 121, type: !1192, scopeLine: 121, flags: DIFlagPrototyped, spFlags: 0)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !1158, !1147, !11}
!1194 = !DISubprogram(name: "setOutputGate", linkageName: "_ZN5cGate4Desc13setOutputGateEPS_i", scope: !1138, file: !34, line: 122, type: !1192, scopeLine: 122, flags: DIFlagPrototyped, spFlags: 0)
!1195 = !DISubprogram(name: "capacityFor", linkageName: "_ZN5cGate4Desc11capacityForEi", scope: !1138, file: !34, line: 123, type: !1196, scopeLine: 123, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!11, !11}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !101, file: !100, line: 230, baseType: !11, size: 32, offset: 1344, flags: DIFlagProtected)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "vectsize", scope: !101, file: !100, line: 231, baseType: !11, size: 32, offset: 1376, flags: DIFlagProtected)
!1200 = !DISubprogram(name: "setRecordEvents", linkageName: "_ZN7cModule15setRecordEventsEb", scope: !101, file: !100, line: 235, type: !1201, scopeLine: 235, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !1203, !13}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1204 = !DISubprogram(name: "isRecordEvents", linkageName: "_ZNK7cModule14isRecordEventsEv", scope: !101, file: !100, line: 236, type: !1205, scopeLine: 236, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!13, !1207}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1208 = !DISubprogram(name: "buildInsideCalled", linkageName: "_ZNK7cModule17buildInsideCalledEv", scope: !101, file: !100, line: 240, type: !1205, scopeLine: 240, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1209 = !DISubprogram(name: "initializeModules", linkageName: "_ZN7cModule17initializeModulesEi", scope: !101, file: !100, line: 244, type: !1210, scopeLine: 244, containingType: !101, virtualIndex: 45, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!13, !1203, !11}
!1212 = !DISubprogram(name: "initializeChannels", linkageName: "_ZN7cModule18initializeChannelsEi", scope: !101, file: !100, line: 248, type: !1210, scopeLine: 248, containingType: !101, virtualIndex: 46, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1213 = !DISubprogram(name: "arrived", linkageName: "_ZN7cModule7arrivedEP8cMessageP5cGate7SimTime", scope: !101, file: !100, line: 252, type: !1214, scopeLine: 252, containingType: !101, virtualIndex: 47, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !1203, !1216, !1147, !1219}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_class_type, name: "cMessage", file: !1218, line: 110, flags: DIFlagFwdDecl)
!1218 = !DIFile(filename: "simulator/cmessage.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "simtime_t", file: !1220, line: 63, baseType: !1221)
!1220 = !DIFile(filename: "simulator/simtime_t.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1221 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SimTime", file: !1222, line: 60, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1223, identifier: "_ZTS7SimTime")
!1222 = !DIFile(filename: "simulator/simtime.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1223 = !{!1224, !1230, !1231, !1232, !1234, !1235, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1246, !1250, !1253, !1256, !1261, !1262, !1263, !1264, !1265, !1268, !1269, !1275, !1278, !1279, !1282, !1287, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1300, !1301, !1302, !1303, !1304, !1305, !1308, !1311, !1314, !1317, !1318, !1323, !1326, !1329, !1332, !1335, !1338, !1341, !1344, !1347, !1350, !1354}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1221, file: !1222, line: 63, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1226, line: 27, baseType: !1227)
!1226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !1228, line: 44, baseType: !1229)
!1228 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1229 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "scaleexp", scope: !1221, file: !1222, line: 65, baseType: !11, flags: DIFlagStaticMember)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1221, file: !1222, line: 66, baseType: !1225, flags: DIFlagStaticMember)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "fscale", scope: !1221, file: !1222, line: 67, baseType: !1233, flags: DIFlagStaticMember)
!1233 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "invfscale", scope: !1221, file: !1222, line: 68, baseType: !1233, flags: DIFlagStaticMember)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_S", scope: !1221, file: !1222, line: 107, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember)
!1236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_MS", scope: !1221, file: !1222, line: 108, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_US", scope: !1221, file: !1222, line: 109, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_NS", scope: !1221, file: !1222, line: 110, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_PS", scope: !1221, file: !1222, line: 111, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_FS", scope: !1221, file: !1222, line: 112, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "SCALEEXP_UNINITIALIZED", scope: !1221, file: !1222, line: 114, baseType: !1236, flags: DIFlagPublic | DIFlagStaticMember, extraData: i32 65535)
!1243 = !DISubprogram(name: "resetScale", linkageName: "_ZN7SimTime10resetScaleEv", scope: !1221, file: !1222, line: 71, type: !1244, scopeLine: 71, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null}
!1246 = !DISubprogram(name: "initError", linkageName: "_ZN7SimTime9initErrorEd", scope: !1221, file: !1222, line: 75, type: !1247, scopeLine: 75, flags: DIFlagPrototyped, spFlags: 0)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{null, !1249, !1233}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1250 = !DISubprogram(name: "haveSameSign", linkageName: "_ZN7SimTime12haveSameSignEll", scope: !1221, file: !1222, line: 77, type: !1251, scopeLine: 77, flags: DIFlagPrototyped, spFlags: 0)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!13, !1249, !1225, !1225}
!1253 = !DISubprogram(name: "toInt64", linkageName: "_ZN7SimTime7toInt64Ed", scope: !1221, file: !1222, line: 79, type: !1254, scopeLine: 79, flags: DIFlagPrototyped, spFlags: 0)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!1225, !1249, !1233}
!1256 = !DISubprogram(name: "checkedAdd", linkageName: "_ZN7SimTime10checkedAddERKS_", scope: !1221, file: !1222, line: 85, type: !1257, scopeLine: 85, flags: DIFlagPrototyped, spFlags: 0)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !1249, !1259}
!1259 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1261 = !DISubprogram(name: "checkedSub", linkageName: "_ZN7SimTime10checkedSubERKS_", scope: !1221, file: !1222, line: 93, type: !1257, scopeLine: 93, flags: DIFlagPrototyped, spFlags: 0)
!1262 = !DISubprogram(name: "rangeError", linkageName: "_ZN7SimTime10rangeErrorEd", scope: !1221, file: !1222, line: 101, type: !1247, scopeLine: 101, flags: DIFlagPrototyped, spFlags: 0)
!1263 = !DISubprogram(name: "overflowAdding", linkageName: "_ZN7SimTime14overflowAddingERKS_", scope: !1221, file: !1222, line: 102, type: !1257, scopeLine: 102, flags: DIFlagPrototyped, spFlags: 0)
!1264 = !DISubprogram(name: "overflowSubtracting", linkageName: "_ZN7SimTime19overflowSubtractingERKS_", scope: !1221, file: !1222, line: 103, type: !1257, scopeLine: 103, flags: DIFlagPrototyped, spFlags: 0)
!1265 = !DISubprogram(name: "SimTime", scope: !1221, file: !1222, line: 121, type: !1266, scopeLine: 121, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{null, !1249}
!1268 = !DISubprogram(name: "SimTime", scope: !1221, file: !1222, line: 131, type: !1247, scopeLine: 131, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1269 = !DISubprogram(name: "SimTime", scope: !1221, file: !1222, line: 139, type: !1270, scopeLine: 139, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{null, !1249, !1272}
!1272 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1273, size: 64)
!1273 = !DICompositeType(tag: DW_TAG_class_type, name: "cPar", file: !1274, line: 69, flags: DIFlagFwdDecl)
!1274 = !DIFile(filename: "simulator/cpar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1275 = !DISubprogram(name: "SimTime", scope: !1221, file: !1222, line: 159, type: !1276, scopeLine: 159, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null, !1249, !1225, !11}
!1278 = !DISubprogram(name: "SimTime", scope: !1221, file: !1222, line: 164, type: !1257, scopeLine: 164, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1279 = !DISubprogram(name: "operator=", linkageName: "_ZN7SimTimeaSEd", scope: !1221, file: !1222, line: 169, type: !1280, scopeLine: 169, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!1259, !1249, !1233}
!1282 = !DISubprogram(name: "operator=", linkageName: "_ZN7SimTimeaSERK4cPar", scope: !1221, file: !1222, line: 170, type: !1283, scopeLine: 170, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!1259, !1249, !1285}
!1285 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1273)
!1287 = !DISubprogram(name: "operator=", linkageName: "_ZN7SimTimeaSERKS_", scope: !1221, file: !1222, line: 171, type: !1288, scopeLine: 171, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!1259, !1249, !1259}
!1290 = !DISubprogram(name: "operator+=", linkageName: "_ZN7SimTimepLERKS_", scope: !1221, file: !1222, line: 174, type: !1288, scopeLine: 174, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1291 = !DISubprogram(name: "operator-=", linkageName: "_ZN7SimTimemIERKS_", scope: !1221, file: !1222, line: 175, type: !1288, scopeLine: 175, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1292 = !DISubprogram(name: "operator*=", linkageName: "_ZN7SimTimemLEd", scope: !1221, file: !1222, line: 177, type: !1280, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1293 = !DISubprogram(name: "operator/=", linkageName: "_ZN7SimTimedVEd", scope: !1221, file: !1222, line: 178, type: !1280, scopeLine: 178, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1294 = !DISubprogram(name: "operator*=", linkageName: "_ZN7SimTimemLERK4cPar", scope: !1221, file: !1222, line: 179, type: !1283, scopeLine: 179, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1295 = !DISubprogram(name: "operator/=", linkageName: "_ZN7SimTimedVERK4cPar", scope: !1221, file: !1222, line: 180, type: !1283, scopeLine: 180, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1296 = !DISubprogram(name: "operator==", linkageName: "_ZNK7SimTimeeqERKS_", scope: !1221, file: !1222, line: 184, type: !1297, scopeLine: 184, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!13, !1299, !1259}
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1300 = !DISubprogram(name: "operator!=", linkageName: "_ZNK7SimTimeneERKS_", scope: !1221, file: !1222, line: 185, type: !1297, scopeLine: 185, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1301 = !DISubprogram(name: "operator<", linkageName: "_ZNK7SimTimeltERKS_", scope: !1221, file: !1222, line: 186, type: !1297, scopeLine: 186, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1302 = !DISubprogram(name: "operator>", linkageName: "_ZNK7SimTimegtERKS_", scope: !1221, file: !1222, line: 187, type: !1297, scopeLine: 187, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1303 = !DISubprogram(name: "operator<=", linkageName: "_ZNK7SimTimeleERKS_", scope: !1221, file: !1222, line: 188, type: !1297, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1304 = !DISubprogram(name: "operator>=", linkageName: "_ZNK7SimTimegeERKS_", scope: !1221, file: !1222, line: 189, type: !1297, scopeLine: 189, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1305 = !DISubprogram(name: "operator-", linkageName: "_ZNK7SimTimengEv", scope: !1221, file: !1222, line: 191, type: !1306, scopeLine: 191, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!1221, !1299}
!1308 = !DISubprogram(name: "dbl", linkageName: "_ZNK7SimTime3dblEv", scope: !1221, file: !1222, line: 213, type: !1309, scopeLine: 213, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!1233, !1299}
!1311 = !DISubprogram(name: "inUnit", linkageName: "_ZNK7SimTime6inUnitEi", scope: !1221, file: !1222, line: 230, type: !1312, scopeLine: 230, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!1225, !1299, !11}
!1314 = !DISubprogram(name: "trunc", linkageName: "_ZNK7SimTime5truncEi", scope: !1221, file: !1222, line: 242, type: !1315, scopeLine: 242, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!1221, !1299, !11}
!1317 = !DISubprogram(name: "remainderForUnit", linkageName: "_ZNK7SimTime16remainderForUnitEi", scope: !1221, file: !1222, line: 250, type: !1315, scopeLine: 250, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1318 = !DISubprogram(name: "split", linkageName: "_ZNK7SimTime5splitEiRlRS_", scope: !1221, file: !1222, line: 263, type: !1319, scopeLine: 263, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !1299, !11, !1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1225, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1221, size: 64)
!1323 = !DISubprogram(name: "str", linkageName: "_ZNK7SimTime3strB5cxx11Ev", scope: !1221, file: !1222, line: 268, type: !1324, scopeLine: 268, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!107, !1299}
!1326 = !DISubprogram(name: "str", linkageName: "_ZNK7SimTime3strEPc", scope: !1221, file: !1222, line: 277, type: !1327, scopeLine: 277, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!116, !1299, !116}
!1329 = !DISubprogram(name: "raw", linkageName: "_ZNK7SimTime3rawEv", scope: !1221, file: !1222, line: 282, type: !1330, scopeLine: 282, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1225, !1299}
!1332 = !DISubprogram(name: "setRaw", linkageName: "_ZN7SimTime6setRawEl", scope: !1221, file: !1222, line: 287, type: !1333, scopeLine: 287, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1259, !1249, !1225}
!1335 = !DISubprogram(name: "getMaxTime", linkageName: "_ZN7SimTime10getMaxTimeEv", scope: !1221, file: !1222, line: 293, type: !1336, scopeLine: 293, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!1260}
!1338 = !DISubprogram(name: "getScale", linkageName: "_ZN7SimTime8getScaleEv", scope: !1221, file: !1222, line: 299, type: !1339, scopeLine: 299, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!1225}
!1341 = !DISubprogram(name: "getScaleExp", linkageName: "_ZN7SimTime11getScaleExpEv", scope: !1221, file: !1222, line: 305, type: !1342, scopeLine: 305, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!11}
!1344 = !DISubprogram(name: "setScaleExp", linkageName: "_ZN7SimTime11setScaleExpEi", scope: !1221, file: !1222, line: 319, type: !1345, scopeLine: 319, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !11}
!1347 = !DISubprogram(name: "parse", linkageName: "_ZN7SimTime5parseEPKc", scope: !1221, file: !1222, line: 326, type: !1348, scopeLine: 326, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!1260, !167}
!1350 = !DISubprogram(name: "parse", linkageName: "_ZN7SimTime5parseEPKcRS1_", scope: !1221, file: !1222, line: 337, type: !1351, scopeLine: 337, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!1260, !167, !1353}
!1353 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !167, size: 64)
!1354 = !DISubprogram(name: "ttoa", linkageName: "_ZN7SimTime4ttoaEPcliRS0_", scope: !1221, file: !1222, line: 348, type: !1355, scopeLine: 348, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!116, !116, !1225, !11, !1357}
!1357 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !116, size: 64)
!1358 = !DISubprogram(name: "setId", linkageName: "_ZN7cModule5setIdEi", scope: !101, file: !100, line: 255, type: !1359, scopeLine: 255, containingType: !101, virtualIndex: 48, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !1203, !11}
!1361 = !DISubprogram(name: "setIndex", linkageName: "_ZN7cModule8setIndexEii", scope: !101, file: !100, line: 259, type: !1362, scopeLine: 259, containingType: !101, virtualIndex: 49, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !1203, !11, !11}
!1364 = !DISubprogram(name: "updateFullName", linkageName: "_ZN7cModule14updateFullNameEv", scope: !101, file: !100, line: 262, type: !1365, scopeLine: 262, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{null, !1203}
!1367 = !DISubprogram(name: "insertSubmodule", linkageName: "_ZN7cModule15insertSubmoduleEPS_", scope: !101, file: !100, line: 265, type: !1368, scopeLine: 265, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !1203, !120}
!1370 = !DISubprogram(name: "removeSubmodule", linkageName: "_ZN7cModule15removeSubmoduleEPS_", scope: !101, file: !100, line: 268, type: !1368, scopeLine: 268, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1371 = !DISubprogram(name: "createGateObject", linkageName: "_ZN7cModule16createGateObjectEN5cGate4TypeE", scope: !101, file: !100, line: 272, type: !1372, scopeLine: 272, containingType: !101, virtualIndex: 50, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{!1147, !1203, !33}
!1374 = !DISubprogram(name: "disposeGateDesc", linkageName: "_ZN7cModule15disposeGateDescEPN5cGate4DescEb", scope: !101, file: !100, line: 275, type: !1375, scopeLine: 275, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{null, !1203, !1137, !13}
!1377 = !DISubprogram(name: "disposeGateObject", linkageName: "_ZN7cModule17disposeGateObjectEP5cGateb", scope: !101, file: !100, line: 278, type: !1378, scopeLine: 278, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !1203, !1147, !13}
!1380 = !DISubprogram(name: "addGateDesc", linkageName: "_ZN7cModule11addGateDescEPKcN5cGate4TypeEb", scope: !101, file: !100, line: 281, type: !1381, scopeLine: 281, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!1137, !1203, !167, !33, !13}
!1383 = !DISubprogram(name: "findGateDesc", linkageName: "_ZNK7cModule12findGateDescEPKcRc", scope: !101, file: !100, line: 285, type: !1384, scopeLine: 285, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!11, !1207, !167, !1386}
!1386 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !117, size: 64)
!1387 = !DISubprogram(name: "gateDesc", linkageName: "_ZNK7cModule8gateDescEPKcRc", scope: !101, file: !100, line: 288, type: !1388, scopeLine: 288, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!1137, !1207, !167, !1386}
!1390 = !DISubprogram(name: "adjustGateDesc", linkageName: "_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE", scope: !101, file: !100, line: 291, type: !1391, scopeLine: 291, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{null, !1203, !1147, !1137}
!1393 = !DISubprogram(name: "clearGates", linkageName: "_ZN7cModule10clearGatesEv", scope: !101, file: !100, line: 294, type: !1365, scopeLine: 294, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1394 = !DISubprogram(name: "clearNamePools", linkageName: "_ZN7cModule14clearNamePoolsEv", scope: !101, file: !100, line: 298, type: !1244, scopeLine: 298, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1395 = !DISubprogram(name: "gateCount", linkageName: "_ZNK7cModule9gateCountEv", scope: !101, file: !100, line: 301, type: !1396, scopeLine: 301, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!11, !1207}
!1398 = !DISubprogram(name: "gateByOrdinal", linkageName: "_ZNK7cModule13gateByOrdinalEi", scope: !101, file: !100, line: 304, type: !1399, scopeLine: 304, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!1147, !1207, !11}
!1401 = !DISubprogram(name: "doBuildInside", linkageName: "_ZN7cModule13doBuildInsideEv", scope: !101, file: !100, line: 313, type: !1365, scopeLine: 313, containingType: !101, virtualIndex: 51, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1402 = !DISubprogram(name: "cModule", scope: !101, file: !100, line: 325, type: !1365, scopeLine: 325, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1403 = !DISubprogram(name: "~cModule", scope: !101, file: !100, line: 330, type: !1365, scopeLine: 330, containingType: !101, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1404 = !DISubprogram(name: "forEachChild", linkageName: "_ZN7cModule12forEachChildEP8cVisitor", scope: !101, file: !100, line: 340, type: !1405, scopeLine: 340, containingType: !101, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{null, !1203, !1407}
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DICompositeType(tag: DW_TAG_class_type, name: "cVisitor", file: !1409, line: 59, flags: DIFlagFwdDecl)
!1409 = !DIFile(filename: "simulator/cvisitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1410 = !DISubprogram(name: "setName", linkageName: "_ZN7cModule7setNameEPKc", scope: !101, file: !100, line: 345, type: !1411, scopeLine: 345, containingType: !101, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !1203, !167}
!1413 = !DISubprogram(name: "getFullName", linkageName: "_ZNK7cModule11getFullNameEv", scope: !101, file: !100, line: 352, type: !1414, scopeLine: 352, containingType: !101, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!167, !1207}
!1416 = !DISubprogram(name: "getFullPath", linkageName: "_ZNK7cModule11getFullPathB5cxx11Ev", scope: !101, file: !100, line: 359, type: !1417, scopeLine: 359, containingType: !101, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!107, !1207}
!1419 = !DISubprogram(name: "addGate", linkageName: "_ZN7cModule7addGateEPKcN5cGate4TypeEb", scope: !101, file: !100, line: 372, type: !1420, scopeLine: 372, containingType: !101, virtualIndex: 52, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{null, !1203, !167, !33, !13}
!1422 = !DISubprogram(name: "setGateSize", linkageName: "_ZN7cModule11setGateSizeEPKci", scope: !101, file: !100, line: 380, type: !1423, scopeLine: 380, containingType: !101, virtualIndex: 53, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{null, !1203, !167, !11}
!1425 = !DISubprogram(name: "getOrCreateFirstUnconnectedGate", linkageName: "_ZN7cModule31getOrCreateFirstUnconnectedGateEPKccbb", scope: !101, file: !100, line: 393, type: !1426, scopeLine: 393, containingType: !101, virtualIndex: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!1147, !1203, !167, !117, !13, !13}
!1428 = !DISubprogram(name: "getOrCreateFirstUnconnectedGatePair", linkageName: "_ZN7cModule35getOrCreateFirstUnconnectedGatePairEPKcbbRP5cGateS4_", scope: !101, file: !100, line: 402, type: !1429, scopeLine: 402, containingType: !101, virtualIndex: 55, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1203, !167, !13, !13, !1431, !1431}
!1431 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1147, size: 64)
!1432 = !DISubprogram(name: "finalizeParameters", linkageName: "_ZN7cModule18finalizeParametersEv", scope: !101, file: !100, line: 423, type: !1365, scopeLine: 423, containingType: !101, virtualIndex: 33, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1433 = !DISubprogram(name: "buildInside", linkageName: "_ZN7cModule11buildInsideEv", scope: !101, file: !100, line: 434, type: !1434, scopeLine: 434, containingType: !101, virtualIndex: 56, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!11, !1203}
!1436 = !DISubprogram(name: "isSimple", linkageName: "_ZNK7cModule8isSimpleEv", scope: !101, file: !100, line: 444, type: !1205, scopeLine: 444, containingType: !101, virtualIndex: 57, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1437 = !DISubprogram(name: "isModule", linkageName: "_ZNK7cModule8isModuleEv", scope: !101, file: !100, line: 449, type: !1205, scopeLine: 449, containingType: !101, virtualIndex: 36, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1438 = !DISubprogram(name: "isPlaceholder", linkageName: "_ZNK7cModule13isPlaceholderEv", scope: !101, file: !100, line: 455, type: !1205, scopeLine: 455, containingType: !101, virtualIndex: 58, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1439 = !DISubprogram(name: "getParentModule", linkageName: "_ZNK7cModule15getParentModuleEv", scope: !101, file: !100, line: 461, type: !1440, scopeLine: 461, containingType: !101, virtualIndex: 37, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!120, !1207}
!1442 = !DISubprogram(name: "getModuleType", linkageName: "_ZNK7cModule13getModuleTypeEv", scope: !101, file: !100, line: 466, type: !1443, scopeLine: 466, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!1445, !1207}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DICompositeType(tag: DW_TAG_class_type, name: "cModuleType", file: !1447, line: 152, flags: DIFlagFwdDecl)
!1447 = !DIFile(filename: "simulator/ccomponenttype.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1448 = !DISubprogram(name: "getProperties", linkageName: "_ZNK7cModule13getPropertiesEv", scope: !101, file: !100, line: 472, type: !1449, scopeLine: 472, containingType: !101, virtualIndex: 34, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!1451, !1207}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DICompositeType(tag: DW_TAG_class_type, name: "cProperties", file: !1453, line: 34, flags: DIFlagFwdDecl)
!1453 = !DIFile(filename: "simulator/cproperties.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!1454 = !DISubprogram(name: "getId", linkageName: "_ZNK7cModule5getIdEv", scope: !101, file: !100, line: 481, type: !1396, scopeLine: 481, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1455 = !DISubprogram(name: "isVector", linkageName: "_ZNK7cModule8isVectorEv", scope: !101, file: !100, line: 486, type: !1205, scopeLine: 486, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1456 = !DISubprogram(name: "getIndex", linkageName: "_ZNK7cModule8getIndexEv", scope: !101, file: !100, line: 491, type: !1396, scopeLine: 491, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1457 = !DISubprogram(name: "getVectorSize", linkageName: "_ZNK7cModule13getVectorSizeEv", scope: !101, file: !100, line: 497, type: !1396, scopeLine: 497, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1458 = !DISubprogram(name: "size", linkageName: "_ZNK7cModule4sizeEv", scope: !101, file: !100, line: 502, type: !1396, scopeLine: 502, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1459 = !DISubprogram(name: "findSubmodule", linkageName: "_ZN7cModule13findSubmoduleEPKci", scope: !101, file: !100, line: 513, type: !1460, scopeLine: 513, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!11, !1203, !167, !11}
!1462 = !DISubprogram(name: "getSubmodule", linkageName: "_ZN7cModule12getSubmoduleEPKci", scope: !101, file: !100, line: 520, type: !1463, scopeLine: 520, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!120, !1203, !167, !11}
!1465 = !DISubprogram(name: "getModuleByRelativePath", linkageName: "_ZN7cModule23getModuleByRelativePathEPKc", scope: !101, file: !100, line: 528, type: !1466, scopeLine: 528, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!120, !1203, !167}
!1468 = !DISubprogram(name: "gate", linkageName: "_ZN7cModule4gateEPKci", scope: !101, file: !100, line: 540, type: !1469, scopeLine: 540, containingType: !101, virtualIndex: 59, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!1147, !1203, !167, !11}
!1471 = !DISubprogram(name: "gate", linkageName: "_ZNK7cModule4gateEPKci", scope: !101, file: !100, line: 548, type: !1472, scopeLine: 548, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!1174, !1207, !167, !11}
!1474 = !DISubprogram(name: "gateHalf", linkageName: "_ZN7cModule8gateHalfEPKcN5cGate4TypeEi", scope: !101, file: !100, line: 559, type: !1475, scopeLine: 559, containingType: !101, virtualIndex: 60, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!1147, !1203, !167, !33, !11}
!1477 = !DISubprogram(name: "gateHalf", linkageName: "_ZNK7cModule8gateHalfEPKcN5cGate4TypeEi", scope: !101, file: !100, line: 568, type: !1478, scopeLine: 568, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!1174, !1207, !167, !33, !11}
!1480 = !DISubprogram(name: "hasGate", linkageName: "_ZNK7cModule7hasGateEPKci", scope: !101, file: !100, line: 579, type: !1481, scopeLine: 579, containingType: !101, virtualIndex: 61, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!13, !1207, !167, !11}
!1483 = !DISubprogram(name: "findGate", linkageName: "_ZNK7cModule8findGateEPKci", scope: !101, file: !100, line: 588, type: !1484, scopeLine: 588, containingType: !101, virtualIndex: 62, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!11, !1207, !167, !11}
!1486 = !DISubprogram(name: "gate", linkageName: "_ZN7cModule4gateEi", scope: !101, file: !100, line: 597, type: !1487, scopeLine: 597, containingType: !101, virtualIndex: 63, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!1147, !1203, !11}
!1489 = !DISubprogram(name: "gate", linkageName: "_ZNK7cModule4gateEi", scope: !101, file: !100, line: 606, type: !1490, scopeLine: 606, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!1174, !1207, !11}
!1492 = !DISubprogram(name: "deleteGate", linkageName: "_ZN7cModule10deleteGateEPKc", scope: !101, file: !100, line: 613, type: !1411, scopeLine: 613, containingType: !101, virtualIndex: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1493 = !DISubprogram(name: "getGateNames", linkageName: "_ZNK7cModule12getGateNamesEv", scope: !101, file: !100, line: 625, type: !1494, scopeLine: 625, containingType: !101, virtualIndex: 65, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!1496, !1207}
!1496 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "vector<const char *, std::allocator<const char *> >", scope: !2, file: !1497, line: 389, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1498, templateParams: !1702, identifier: "_ZTSSt6vectorIPKcSaIS1_EE")
!1497 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h", directory: "")
!1498 = !{!1499, !1703, !1706, !1709, !1710, !1716, !1719, !1722, !1726, !1732, !1736, !1742, !1747, !1751, !1754, !1757, !1760, !1763, !1767, !1768, !1772, !1775, !1778, !1781, !1784, !1844, !1850, !1851, !1852, !1857, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1871, !1872, !1875, !1876, !1877, !1878, !1881, !1882, !1890, !1897, !1900, !1901, !1902, !1905, !1908, !1909, !1910, !1913, !1916, !1919, !1923, !1924, !1927, !1930, !1933, !1936, !1939, !1942, !1945, !1946, !1947, !1948, !1949, !1952, !1953, !1956, !1957, !1958, !1962, !1965, !1970, !1973, !1976, !1979, !1982}
!1499 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1496, baseType: !1500, flags: DIFlagProtected, extraData: i32 0)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Vector_base<const char *, std::allocator<const char *> >", scope: !2, file: !1497, line: 84, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1501, templateParams: !1702, identifier: "_ZTSSt12_Vector_baseIPKcSaIS1_EE")
!1501 = !{!1502, !1653, !1658, !1663, !1667, !1670, !1675, !1678, !1681, !1685, !1688, !1691, !1694, !1695, !1698, !1701}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "_M_impl", scope: !1500, file: !1497, line: 340, baseType: !1503, size: 192)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Vector_impl", scope: !1500, file: !1497, line: 128, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1504, identifier: "_ZTSNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implE")
!1504 = !{!1505, !1608, !1633, !1637, !1642, !1646, !1650}
!1505 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1503, baseType: !1506, extraData: i32 0)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Tp_alloc_type", scope: !1500, file: !1497, line: 87, baseType: !1507)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "other", scope: !1508, file: !139, line: 120, baseType: !1607)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rebind<const char *>", scope: !1509, file: !139, line: 119, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !1561, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIPKcES2_E6rebindIS2_EE")
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__alloc_traits<std::allocator<const char *>, const char *>", scope: !142, file: !139, line: 48, size: 8, flags: DIFlagTypePassByValue, elements: !1510, templateParams: !1605, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIPKcES2_EE")
!1510 = !{!1511, !1594, !1597, !1600, !1601, !1602, !1603, !1604}
!1511 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1509, baseType: !1512, extraData: i32 0)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "allocator_traits<std::allocator<const char *> >", scope: !2, file: !146, line: 407, size: 8, flags: DIFlagTypePassByValue, elements: !1513, templateParams: !1592, identifier: "_ZTSSt16allocator_traitsISaIPKcEE")
!1513 = !{!1514, !1577, !1580, !1583, !1589}
!1514 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m", scope: !1512, file: !146, line: 459, type: !1515, scopeLine: 459, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!1517, !1519, !290}
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1512, file: !146, line: 416, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !1512, file: !146, line: 410, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "allocator<const char *>", scope: !2, file: !227, line: 116, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1522, templateParams: !1561, identifier: "_ZTSSaIPKcE")
!1522 = !{!1523, !1563, !1567, !1572, !1576}
!1523 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1521, baseType: !1524, flags: DIFlagPublic, extraData: i32 0)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__allocator_base<const char *>", scope: !2, file: !231, line: 48, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "new_allocator<const char *>", scope: !142, file: !233, line: 55, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1526, templateParams: !1561, identifier: "_ZTSN9__gnu_cxx13new_allocatorIPKcEE")
!1526 = !{!1527, !1531, !1536, !1537, !1543, !1551, !1554, !1557, !1560}
!1527 = !DISubprogram(name: "new_allocator", scope: !1525, file: !233, line: 79, type: !1528, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{null, !1530}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1531 = !DISubprogram(name: "new_allocator", scope: !1525, file: !233, line: 82, type: !1532, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{null, !1530, !1534}
!1534 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1535, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1536 = !DISubprogram(name: "~new_allocator", scope: !1525, file: !233, line: 89, type: !1528, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1537 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIPKcE7addressERS2_", scope: !1525, file: !233, line: 92, type: !1538, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!1540, !1541, !1542}
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1525, file: !233, line: 62, baseType: !1518)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !1525, file: !233, line: 64, baseType: !1353)
!1543 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIPKcE7addressERKS2_", scope: !1525, file: !233, line: 96, type: !1544, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!1546, !1541, !1549}
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !1525, file: !233, line: 63, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !1525, file: !233, line: 65, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1548, size: 64)
!1551 = !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcE8allocateEmPKv", scope: !1525, file: !233, line: 103, type: !1552, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!1518, !1530, !261, !265}
!1554 = !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcE10deallocateEPS2_m", scope: !1525, file: !233, line: 120, type: !1555, scopeLine: 120, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{null, !1530, !1518, !261}
!1557 = !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIPKcE8max_sizeEv", scope: !1525, file: !233, line: 142, type: !1558, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!261, !1541}
!1560 = !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIPKcE11_M_max_sizeEv", scope: !1525, file: !233, line: 185, type: !1558, scopeLine: 185, flags: DIFlagPrototyped, spFlags: 0)
!1561 = !{!1562}
!1562 = !DITemplateTypeParameter(name: "_Tp", type: !167)
!1563 = !DISubprogram(name: "allocator", scope: !1521, file: !227, line: 144, type: !1564, scopeLine: 144, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{null, !1566}
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1567 = !DISubprogram(name: "allocator", scope: !1521, file: !227, line: 147, type: !1568, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !1566, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1572 = !DISubprogram(name: "operator=", linkageName: "_ZNSaIPKcEaSERKS1_", scope: !1521, file: !227, line: 152, type: !1573, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!1575, !1566, !1570}
!1575 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1521, size: 64)
!1576 = !DISubprogram(name: "~allocator", scope: !1521, file: !227, line: 162, type: !1564, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1577 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_mPKv", scope: !1512, file: !146, line: 473, type: !1578, scopeLine: 473, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!1517, !1519, !290, !294}
!1580 = !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m", scope: !1512, file: !146, line: 491, type: !1581, scopeLine: 491, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{null, !1519, !1517, !290}
!1583 = !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_", scope: !1512, file: !146, line: 543, type: !1584, scopeLine: 543, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !1512, file: !146, line: 431, baseType: !262)
!1587 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1589 = !DISubprogram(name: "select_on_container_copy_construction", linkageName: "_ZNSt16allocator_traitsISaIPKcEE37select_on_container_copy_constructionERKS2_", scope: !1512, file: !146, line: 558, type: !1590, scopeLine: 558, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!1520, !1587}
!1592 = !{!1593}
!1593 = !DITemplateTypeParameter(name: "_Alloc", type: !1521)
!1594 = !DISubprogram(name: "_S_select_on_copy", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E17_S_select_on_copyERKS3_", scope: !1509, file: !139, line: 97, type: !1595, scopeLine: 97, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!1521, !1570}
!1597 = !DISubprogram(name: "_S_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E10_S_on_swapERS3_S5_", scope: !1509, file: !139, line: 100, type: !1598, scopeLine: 100, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{null, !1575, !1575}
!1600 = !DISubprogram(name: "_S_propagate_on_copy_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E27_S_propagate_on_copy_assignEv", scope: !1509, file: !139, line: 103, type: !316, scopeLine: 103, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1601 = !DISubprogram(name: "_S_propagate_on_move_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E27_S_propagate_on_move_assignEv", scope: !1509, file: !139, line: 106, type: !316, scopeLine: 106, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1602 = !DISubprogram(name: "_S_propagate_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E20_S_propagate_on_swapEv", scope: !1509, file: !139, line: 109, type: !316, scopeLine: 109, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1603 = !DISubprogram(name: "_S_always_equal", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E15_S_always_equalEv", scope: !1509, file: !139, line: 112, type: !316, scopeLine: 112, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1604 = !DISubprogram(name: "_S_nothrow_move", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIPKcES2_E15_S_nothrow_moveEv", scope: !1509, file: !139, line: 115, type: !316, scopeLine: 115, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1605 = !{!1593, !1606}
!1606 = !DITemplateTypeParameter(type: !167)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "rebind_alloc<const char *>", scope: !1512, file: !146, line: 446, baseType: !1521)
!1608 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1503, baseType: !1609, extraData: i32 0)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Vector_impl_data", scope: !1500, file: !1497, line: 91, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1610, identifier: "_ZTSNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataE")
!1610 = !{!1611, !1614, !1615, !1616, !1620, !1624, !1629}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "_M_start", scope: !1609, file: !1497, line: 93, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1500, file: !1497, line: 89, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1509, file: !139, line: 57, baseType: !1517)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_M_finish", scope: !1609, file: !1497, line: 94, baseType: !1612, size: 64, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_M_end_of_storage", scope: !1609, file: !1497, line: 95, baseType: !1612, size: 64, offset: 128)
!1616 = !DISubprogram(name: "_Vector_impl_data", scope: !1609, file: !1497, line: 97, type: !1617, scopeLine: 97, flags: DIFlagPrototyped, spFlags: 0)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1620 = !DISubprogram(name: "_Vector_impl_data", scope: !1609, file: !1497, line: 102, type: !1621, scopeLine: 102, flags: DIFlagPrototyped, spFlags: 0)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !1619, !1623}
!1623 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1609, size: 64)
!1624 = !DISubprogram(name: "_M_copy_data", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_", scope: !1609, file: !1497, line: 109, type: !1625, scopeLine: 109, flags: DIFlagPrototyped, spFlags: 0)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{null, !1619, !1627}
!1627 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1609)
!1629 = !DISubprogram(name: "_M_swap_data", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_", scope: !1609, file: !1497, line: 117, type: !1630, scopeLine: 117, flags: DIFlagPrototyped, spFlags: 0)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !1619, !1632}
!1632 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1609, size: 64)
!1633 = !DISubprogram(name: "_Vector_impl", scope: !1503, file: !1497, line: 131, type: !1634, scopeLine: 131, flags: DIFlagPrototyped, spFlags: 0)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !1636}
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1637 = !DISubprogram(name: "_Vector_impl", scope: !1503, file: !1497, line: 136, type: !1638, scopeLine: 136, flags: DIFlagPrototyped, spFlags: 0)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{null, !1636, !1640}
!1640 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1641, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!1642 = !DISubprogram(name: "_Vector_impl", scope: !1503, file: !1497, line: 143, type: !1643, scopeLine: 143, flags: DIFlagPrototyped, spFlags: 0)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{null, !1636, !1645}
!1645 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1503, size: 64)
!1646 = !DISubprogram(name: "_Vector_impl", scope: !1503, file: !1497, line: 147, type: !1647, scopeLine: 147, flags: DIFlagPrototyped, spFlags: 0)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{null, !1636, !1649}
!1649 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1506, size: 64)
!1650 = !DISubprogram(name: "_Vector_impl", scope: !1503, file: !1497, line: 151, type: !1651, scopeLine: 151, flags: DIFlagPrototyped, spFlags: 0)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{null, !1636, !1649, !1645}
!1653 = !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv", scope: !1500, file: !1497, line: 276, type: !1654, scopeLine: 276, flags: DIFlagPrototyped, spFlags: 0)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1506, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1658 = !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv", scope: !1500, file: !1497, line: 280, type: !1659, scopeLine: 280, flags: DIFlagPrototyped, spFlags: 0)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!1640, !1661}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1663 = !DISubprogram(name: "get_allocator", linkageName: "_ZNKSt12_Vector_baseIPKcSaIS1_EE13get_allocatorEv", scope: !1500, file: !1497, line: 284, type: !1664, scopeLine: 284, flags: DIFlagPrototyped, spFlags: 0)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!1666, !1661}
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !1500, file: !1497, line: 273, baseType: !1521)
!1667 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 288, type: !1668, scopeLine: 288, flags: DIFlagPrototyped, spFlags: 0)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{null, !1657}
!1670 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 293, type: !1671, scopeLine: 293, flags: DIFlagPrototyped, spFlags: 0)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{null, !1657, !1673}
!1673 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1675 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 298, type: !1676, scopeLine: 298, flags: DIFlagPrototyped, spFlags: 0)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{null, !1657, !262}
!1678 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 303, type: !1679, scopeLine: 303, flags: DIFlagPrototyped, spFlags: 0)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{null, !1657, !262, !1673}
!1681 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 308, type: !1682, scopeLine: 308, flags: DIFlagPrototyped, spFlags: 0)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{null, !1657, !1684}
!1684 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1500, size: 64)
!1685 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 312, type: !1686, scopeLine: 312, flags: DIFlagPrototyped, spFlags: 0)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{null, !1657, !1649}
!1688 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 315, type: !1689, scopeLine: 315, flags: DIFlagPrototyped, spFlags: 0)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !1657, !1684, !1673}
!1691 = !DISubprogram(name: "_Vector_base", scope: !1500, file: !1497, line: 328, type: !1692, scopeLine: 328, flags: DIFlagPrototyped, spFlags: 0)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !1657, !1673, !1684}
!1694 = !DISubprogram(name: "~_Vector_base", scope: !1500, file: !1497, line: 333, type: !1668, scopeLine: 333, flags: DIFlagPrototyped, spFlags: 0)
!1695 = !DISubprogram(name: "_M_allocate", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm", scope: !1500, file: !1497, line: 343, type: !1696, scopeLine: 343, flags: DIFlagPrototyped, spFlags: 0)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!1612, !1657, !262}
!1698 = !DISubprogram(name: "_M_deallocate", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m", scope: !1500, file: !1497, line: 350, type: !1699, scopeLine: 350, flags: DIFlagPrototyped, spFlags: 0)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{null, !1657, !1612, !262}
!1701 = !DISubprogram(name: "_M_create_storage", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm", scope: !1500, file: !1497, line: 359, type: !1676, scopeLine: 359, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1702 = !{!1562, !1593}
!1703 = !DISubprogram(name: "_S_nothrow_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE", scope: !1496, file: !1497, line: 431, type: !1704, scopeLine: 431, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!13, !797}
!1706 = !DISubprogram(name: "_S_nothrow_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE19_S_nothrow_relocateESt17integral_constantIbLb0EE", scope: !1496, file: !1497, line: 440, type: !1707, scopeLine: 440, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!13, !815}
!1709 = !DISubprogram(name: "_S_use_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE15_S_use_relocateEv", scope: !1496, file: !1497, line: 444, type: !316, scopeLine: 444, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1710 = !DISubprogram(name: "_S_do_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE", scope: !1496, file: !1497, line: 453, type: !1711, scopeLine: 453, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!1713, !1713, !1713, !1713, !1714, !797}
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1496, file: !1497, line: 415, baseType: !1612)
!1714 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1715, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Tp_alloc_type", scope: !1496, file: !1497, line: 410, baseType: !1506)
!1716 = !DISubprogram(name: "_S_do_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb0EE", scope: !1496, file: !1497, line: 460, type: !1717, scopeLine: 460, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!1713, !1713, !1713, !1713, !1714, !815}
!1719 = !DISubprogram(name: "_S_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_", scope: !1496, file: !1497, line: 465, type: !1720, scopeLine: 465, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!1713, !1713, !1713, !1713, !1714}
!1722 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 487, type: !1723, scopeLine: 487, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{null, !1725}
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1726 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 497, type: !1727, scopeLine: 497, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{null, !1725, !1729}
!1729 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !1496, file: !1497, line: 426, baseType: !1521)
!1732 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 510, type: !1733, scopeLine: 510, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{null, !1725, !1735, !1729}
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", file: !1497, line: 424, baseType: !262)
!1736 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 522, type: !1737, scopeLine: 522, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{null, !1725, !1735, !1739, !1729}
!1739 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1740, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !1496, file: !1497, line: 414, baseType: !167)
!1742 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 553, type: !1743, scopeLine: 553, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !1725, !1745}
!1745 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!1747 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 572, type: !1748, scopeLine: 572, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{null, !1725, !1750}
!1750 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1496, size: 64)
!1751 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 575, type: !1752, scopeLine: 575, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{null, !1725, !1745, !1729}
!1754 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 585, type: !1755, scopeLine: 585, flags: DIFlagPrototyped, spFlags: 0)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{null, !1725, !1750, !1729, !797}
!1757 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 589, type: !1758, scopeLine: 589, flags: DIFlagPrototyped, spFlags: 0)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{null, !1725, !1750, !1729, !815}
!1760 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 607, type: !1761, scopeLine: 607, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{null, !1725, !1750, !1729}
!1763 = !DISubprogram(name: "vector", scope: !1496, file: !1497, line: 625, type: !1764, scopeLine: 625, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !1725, !1766, !1729}
!1766 = !DICompositeType(tag: DW_TAG_class_type, name: "initializer_list<const char *>", scope: !2, file: !966, line: 47, flags: DIFlagFwdDecl, identifier: "_ZTSSt16initializer_listIPKcE")
!1767 = !DISubprogram(name: "~vector", scope: !1496, file: !1497, line: 678, type: !1723, scopeLine: 678, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1768 = !DISubprogram(name: "operator=", linkageName: "_ZNSt6vectorIPKcSaIS1_EEaSERKS3_", scope: !1496, file: !1497, line: 695, type: !1769, scopeLine: 695, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!1771, !1725, !1745}
!1771 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1496, size: 64)
!1772 = !DISubprogram(name: "operator=", linkageName: "_ZNSt6vectorIPKcSaIS1_EEaSEOS3_", scope: !1496, file: !1497, line: 709, type: !1773, scopeLine: 709, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!1771, !1725, !1750}
!1775 = !DISubprogram(name: "operator=", linkageName: "_ZNSt6vectorIPKcSaIS1_EEaSESt16initializer_listIS1_E", scope: !1496, file: !1497, line: 730, type: !1776, scopeLine: 730, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!1771, !1725, !1766}
!1778 = !DISubprogram(name: "assign", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6assignEmRKS1_", scope: !1496, file: !1497, line: 749, type: !1779, scopeLine: 749, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{null, !1725, !1735, !1739}
!1781 = !DISubprogram(name: "assign", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6assignESt16initializer_listIS1_E", scope: !1496, file: !1497, line: 794, type: !1782, scopeLine: 794, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{null, !1725, !1766}
!1784 = !DISubprogram(name: "begin", linkageName: "_ZNSt6vectorIPKcSaIS1_EE5beginEv", scope: !1496, file: !1497, line: 811, type: !1785, scopeLine: 811, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!1787, !1725}
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator", scope: !1496, file: !1497, line: 419, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "__normal_iterator<const char **, std::vector<const char *, std::allocator<const char *> > >", scope: !142, file: !852, line: 930, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !1789, templateParams: !1842, identifier: "_ZTSN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEE")
!1789 = !{!1790, !1791, !1795, !1800, !1811, !1816, !1820, !1823, !1824, !1825, !1831, !1834, !1837, !1838, !1839}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "_M_current", scope: !1788, file: !852, line: 933, baseType: !1518, size: 64, flags: DIFlagProtected)
!1791 = !DISubprogram(name: "__normal_iterator", scope: !1788, file: !852, line: 949, type: !1792, scopeLine: 949, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{null, !1794}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1795 = !DISubprogram(name: "__normal_iterator", scope: !1788, file: !852, line: 953, type: !1796, scopeLine: 953, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{null, !1794, !1798}
!1798 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1800 = !DISubprogram(name: "operator*", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv", scope: !1788, file: !852, line: 968, type: !1801, scopeLine: 968, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!1803, !1809}
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !1788, file: !852, line: 942, baseType: !1804)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !1806, file: !1805, line: 216, baseType: !1353)
!1805 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_iterator_base_types.h", directory: "")
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iterator_traits<const char **>", scope: !2, file: !1805, line: 210, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !1807, identifier: "_ZTSSt15iterator_traitsIPPKcE")
!1807 = !{!1808}
!1808 = !DITemplateTypeParameter(name: "_Iterator", type: !1518)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1811 = !DISubprogram(name: "operator->", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEptEv", scope: !1788, file: !852, line: 973, type: !1812, scopeLine: 973, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!1814, !1809}
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1788, file: !852, line: 943, baseType: !1815)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !1806, file: !1805, line: 215, baseType: !1518)
!1816 = !DISubprogram(name: "operator++", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv", scope: !1788, file: !852, line: 978, type: !1817, scopeLine: 978, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!1819, !1794}
!1819 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1788, size: 64)
!1820 = !DISubprogram(name: "operator++", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEi", scope: !1788, file: !852, line: 986, type: !1821, scopeLine: 986, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!1788, !1794, !11}
!1823 = !DISubprogram(name: "operator--", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmmEv", scope: !1788, file: !852, line: 992, type: !1817, scopeLine: 992, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1824 = !DISubprogram(name: "operator--", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmmEi", scope: !1788, file: !852, line: 1000, type: !1821, scopeLine: 1000, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1825 = !DISubprogram(name: "operator[]", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEixEl", scope: !1788, file: !852, line: 1006, type: !1826, scopeLine: 1006, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1803, !1809, !1828}
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "difference_type", scope: !1788, file: !852, line: 941, baseType: !1829)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "difference_type", scope: !1806, file: !1805, line: 214, baseType: !1830)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !2, file: !263, line: 261, baseType: !1229)
!1831 = !DISubprogram(name: "operator+=", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEpLEl", scope: !1788, file: !852, line: 1011, type: !1832, scopeLine: 1011, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!1819, !1794, !1828}
!1834 = !DISubprogram(name: "operator+", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEplEl", scope: !1788, file: !852, line: 1016, type: !1835, scopeLine: 1016, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!1788, !1809, !1828}
!1837 = !DISubprogram(name: "operator-=", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmIEl", scope: !1788, file: !852, line: 1021, type: !1832, scopeLine: 1021, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1838 = !DISubprogram(name: "operator-", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl", scope: !1788, file: !852, line: 1026, type: !1835, scopeLine: 1026, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1839 = !DISubprogram(name: "base", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv", scope: !1788, file: !852, line: 1031, type: !1840, scopeLine: 1031, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!1798, !1809}
!1842 = !{!1808, !1843}
!1843 = !DITemplateTypeParameter(name: "_Container", type: !1496)
!1844 = !DISubprogram(name: "begin", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE5beginEv", scope: !1496, file: !1497, line: 820, type: !1845, scopeLine: 820, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!1847, !1849}
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_iterator", scope: !1496, file: !1497, line: 421, baseType: !1848)
!1848 = !DICompositeType(tag: DW_TAG_class_type, name: "__normal_iterator<const char *const *, std::vector<const char *, std::allocator<const char *> > >", scope: !142, file: !852, line: 930, flags: DIFlagFwdDecl, identifier: "_ZTSN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEE")
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1850 = !DISubprogram(name: "end", linkageName: "_ZNSt6vectorIPKcSaIS1_EE3endEv", scope: !1496, file: !1497, line: 829, type: !1785, scopeLine: 829, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1851 = !DISubprogram(name: "end", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE3endEv", scope: !1496, file: !1497, line: 838, type: !1845, scopeLine: 838, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1852 = !DISubprogram(name: "rbegin", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6rbeginEv", scope: !1496, file: !1497, line: 847, type: !1853, scopeLine: 847, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!1855, !1725}
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "reverse_iterator", scope: !1496, file: !1497, line: 423, baseType: !1856)
!1856 = !DICompositeType(tag: DW_TAG_class_type, name: "reverse_iterator<__gnu_cxx::__normal_iterator<const char **, std::vector<const char *, std::allocator<const char *> > > >", scope: !2, file: !852, line: 125, flags: DIFlagFwdDecl, identifier: "_ZTSSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS3_SaIS3_EEEEE")
!1857 = !DISubprogram(name: "rbegin", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE6rbeginEv", scope: !1496, file: !1497, line: 856, type: !1858, scopeLine: 856, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!1860, !1849}
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reverse_iterator", scope: !1496, file: !1497, line: 422, baseType: !1861)
!1861 = !DICompositeType(tag: DW_TAG_class_type, name: "reverse_iterator<__gnu_cxx::__normal_iterator<const char *const *, std::vector<const char *, std::allocator<const char *> > > >", scope: !2, file: !852, line: 125, flags: DIFlagFwdDecl, identifier: "_ZTSSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS3_SaIS3_EEEEE")
!1862 = !DISubprogram(name: "rend", linkageName: "_ZNSt6vectorIPKcSaIS1_EE4rendEv", scope: !1496, file: !1497, line: 865, type: !1853, scopeLine: 865, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1863 = !DISubprogram(name: "rend", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE4rendEv", scope: !1496, file: !1497, line: 874, type: !1858, scopeLine: 874, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1864 = !DISubprogram(name: "cbegin", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE6cbeginEv", scope: !1496, file: !1497, line: 884, type: !1845, scopeLine: 884, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1865 = !DISubprogram(name: "cend", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE4cendEv", scope: !1496, file: !1497, line: 893, type: !1845, scopeLine: 893, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1866 = !DISubprogram(name: "crbegin", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE7crbeginEv", scope: !1496, file: !1497, line: 902, type: !1858, scopeLine: 902, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1867 = !DISubprogram(name: "crend", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE5crendEv", scope: !1496, file: !1497, line: 911, type: !1858, scopeLine: 911, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1868 = !DISubprogram(name: "size", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE4sizeEv", scope: !1496, file: !1497, line: 918, type: !1869, scopeLine: 918, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!1735, !1849}
!1871 = !DISubprogram(name: "max_size", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv", scope: !1496, file: !1497, line: 923, type: !1869, scopeLine: 923, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1872 = !DISubprogram(name: "resize", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6resizeEm", scope: !1496, file: !1497, line: 937, type: !1873, scopeLine: 937, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{null, !1725, !1735}
!1875 = !DISubprogram(name: "resize", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6resizeEmRKS1_", scope: !1496, file: !1497, line: 957, type: !1779, scopeLine: 957, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1876 = !DISubprogram(name: "shrink_to_fit", linkageName: "_ZNSt6vectorIPKcSaIS1_EE13shrink_to_fitEv", scope: !1496, file: !1497, line: 989, type: !1723, scopeLine: 989, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1877 = !DISubprogram(name: "capacity", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE8capacityEv", scope: !1496, file: !1497, line: 998, type: !1869, scopeLine: 998, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1878 = !DISubprogram(name: "empty", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE5emptyEv", scope: !1496, file: !1497, line: 1007, type: !1879, scopeLine: 1007, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!13, !1849}
!1881 = !DISubprogram(name: "reserve", linkageName: "_ZNSt6vectorIPKcSaIS1_EE7reserveEm", scope: !1496, file: !1497, line: 1028, type: !1873, scopeLine: 1028, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1882 = !DISubprogram(name: "operator[]", linkageName: "_ZNSt6vectorIPKcSaIS1_EEixEm", scope: !1496, file: !1497, line: 1043, type: !1883, scopeLine: 1043, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!1885, !1725, !1735}
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !1496, file: !1497, line: 417, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !1509, file: !139, line: 62, baseType: !1887)
!1887 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !1509, file: !139, line: 56, baseType: !1889)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !1512, file: !146, line: 413, baseType: !167)
!1890 = !DISubprogram(name: "operator[]", linkageName: "_ZNKSt6vectorIPKcSaIS1_EEixEm", scope: !1496, file: !1497, line: 1061, type: !1891, scopeLine: 1061, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!1893, !1849, !1735}
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !1496, file: !1497, line: 418, baseType: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !1509, file: !139, line: 63, baseType: !1895)
!1895 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1888)
!1897 = !DISubprogram(name: "_M_range_check", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE14_M_range_checkEm", scope: !1496, file: !1497, line: 1070, type: !1898, scopeLine: 1070, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !1849, !1735}
!1900 = !DISubprogram(name: "at", linkageName: "_ZNSt6vectorIPKcSaIS1_EE2atEm", scope: !1496, file: !1497, line: 1092, type: !1883, scopeLine: 1092, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1901 = !DISubprogram(name: "at", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE2atEm", scope: !1496, file: !1497, line: 1110, type: !1891, scopeLine: 1110, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1902 = !DISubprogram(name: "front", linkageName: "_ZNSt6vectorIPKcSaIS1_EE5frontEv", scope: !1496, file: !1497, line: 1121, type: !1903, scopeLine: 1121, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!1885, !1725}
!1905 = !DISubprogram(name: "front", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE5frontEv", scope: !1496, file: !1497, line: 1132, type: !1906, scopeLine: 1132, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!1893, !1849}
!1908 = !DISubprogram(name: "back", linkageName: "_ZNSt6vectorIPKcSaIS1_EE4backEv", scope: !1496, file: !1497, line: 1143, type: !1903, scopeLine: 1143, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1909 = !DISubprogram(name: "back", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE4backEv", scope: !1496, file: !1497, line: 1154, type: !1906, scopeLine: 1154, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1910 = !DISubprogram(name: "data", linkageName: "_ZNSt6vectorIPKcSaIS1_EE4dataEv", scope: !1496, file: !1497, line: 1168, type: !1911, scopeLine: 1168, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!1518, !1725}
!1913 = !DISubprogram(name: "data", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE4dataEv", scope: !1496, file: !1497, line: 1172, type: !1914, scopeLine: 1172, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!1547, !1849}
!1916 = !DISubprogram(name: "push_back", linkageName: "_ZNSt6vectorIPKcSaIS1_EE9push_backERKS1_", scope: !1496, file: !1497, line: 1187, type: !1917, scopeLine: 1187, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{null, !1725, !1739}
!1919 = !DISubprogram(name: "push_back", linkageName: "_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_", scope: !1496, file: !1497, line: 1203, type: !1920, scopeLine: 1203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{null, !1725, !1922}
!1922 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1741, size: 64)
!1923 = !DISubprogram(name: "pop_back", linkageName: "_ZNSt6vectorIPKcSaIS1_EE8pop_backEv", scope: !1496, file: !1497, line: 1225, type: !1723, scopeLine: 1225, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1924 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EERS6_", scope: !1496, file: !1497, line: 1263, type: !1925, scopeLine: 1263, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!1787, !1725, !1847, !1739}
!1927 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_", scope: !1496, file: !1497, line: 1293, type: !1928, scopeLine: 1293, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!1787, !1725, !1847, !1922}
!1930 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EESt16initializer_listIS1_E", scope: !1496, file: !1497, line: 1310, type: !1931, scopeLine: 1310, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!1787, !1725, !1847, !1766}
!1933 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIPKcSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEmRS6_", scope: !1496, file: !1497, line: 1335, type: !1934, scopeLine: 1335, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!1787, !1725, !1847, !1735, !1739}
!1936 = !DISubprogram(name: "erase", linkageName: "_ZNSt6vectorIPKcSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE", scope: !1496, file: !1497, line: 1430, type: !1937, scopeLine: 1430, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!1787, !1725, !1847}
!1939 = !DISubprogram(name: "erase", linkageName: "_ZNSt6vectorIPKcSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_", scope: !1496, file: !1497, line: 1457, type: !1940, scopeLine: 1457, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!1787, !1725, !1847, !1847}
!1942 = !DISubprogram(name: "swap", linkageName: "_ZNSt6vectorIPKcSaIS1_EE4swapERS3_", scope: !1496, file: !1497, line: 1480, type: !1943, scopeLine: 1480, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1725, !1771}
!1945 = !DISubprogram(name: "clear", linkageName: "_ZNSt6vectorIPKcSaIS1_EE5clearEv", scope: !1496, file: !1497, line: 1498, type: !1723, scopeLine: 1498, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1946 = !DISubprogram(name: "_M_fill_initialize", linkageName: "_ZNSt6vectorIPKcSaIS1_EE18_M_fill_initializeEmRKS1_", scope: !1496, file: !1497, line: 1593, type: !1779, scopeLine: 1593, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1947 = !DISubprogram(name: "_M_default_initialize", linkageName: "_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm", scope: !1496, file: !1497, line: 1603, type: !1873, scopeLine: 1603, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1948 = !DISubprogram(name: "_M_fill_assign", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_M_fill_assignEmRKS1_", scope: !1496, file: !1497, line: 1645, type: !1779, scopeLine: 1645, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1949 = !DISubprogram(name: "_M_fill_insert", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_", scope: !1496, file: !1497, line: 1684, type: !1950, scopeLine: 1684, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1725, !1787, !1735, !1739}
!1952 = !DISubprogram(name: "_M_default_append", linkageName: "_ZNSt6vectorIPKcSaIS1_EE17_M_default_appendEm", scope: !1496, file: !1497, line: 1689, type: !1873, scopeLine: 1689, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1953 = !DISubprogram(name: "_M_shrink_to_fit", linkageName: "_ZNSt6vectorIPKcSaIS1_EE16_M_shrink_to_fitEv", scope: !1496, file: !1497, line: 1692, type: !1954, scopeLine: 1692, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!13, !1725}
!1956 = !DISubprogram(name: "_M_insert_rval", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_", scope: !1496, file: !1497, line: 1741, type: !1928, scopeLine: 1741, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1957 = !DISubprogram(name: "_M_emplace_aux", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_M_emplace_auxEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_", scope: !1496, file: !1497, line: 1750, type: !1928, scopeLine: 1750, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1958 = !DISubprogram(name: "_M_check_len", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_", scope: !1496, file: !1497, line: 1756, type: !1959, scopeLine: 1756, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!1961, !1849, !1735, !167}
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !1496, file: !1497, line: 424, baseType: !262)
!1962 = !DISubprogram(name: "_S_check_init_len", linkageName: "_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_", scope: !1496, file: !1497, line: 1767, type: !1963, scopeLine: 1767, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!1961, !1735, !1729}
!1965 = !DISubprogram(name: "_S_max_size", linkageName: "_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_", scope: !1496, file: !1497, line: 1776, type: !1966, scopeLine: 1776, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!1961, !1968}
!1968 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1970 = !DISubprogram(name: "_M_erase_at_end", linkageName: "_ZNSt6vectorIPKcSaIS1_EE15_M_erase_at_endEPS1_", scope: !1496, file: !1497, line: 1792, type: !1971, scopeLine: 1792, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !1725, !1713}
!1973 = !DISubprogram(name: "_M_erase", linkageName: "_ZNSt6vectorIPKcSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE", scope: !1496, file: !1497, line: 1804, type: !1974, scopeLine: 1804, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{!1787, !1725, !1787}
!1976 = !DISubprogram(name: "_M_erase", linkageName: "_ZNSt6vectorIPKcSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_", scope: !1496, file: !1497, line: 1807, type: !1977, scopeLine: 1807, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!1787, !1725, !1787, !1787}
!1979 = !DISubprogram(name: "_M_move_assign", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE", scope: !1496, file: !1497, line: 1815, type: !1980, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: 0)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1725, !1750, !797}
!1982 = !DISubprogram(name: "_M_move_assign", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb0EE", scope: !1496, file: !1497, line: 1826, type: !1983, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: 0)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{null, !1725, !1750, !815}
!1985 = !DISubprogram(name: "gateType", linkageName: "_ZNK7cModule8gateTypeEPKc", scope: !101, file: !100, line: 632, type: !1986, scopeLine: 632, containingType: !101, virtualIndex: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{!33, !1207, !167}
!1988 = !DISubprogram(name: "isGateVector", linkageName: "_ZNK7cModule12isGateVectorEPKc", scope: !101, file: !100, line: 639, type: !1989, scopeLine: 639, containingType: !101, virtualIndex: 67, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!13, !1207, !167}
!1991 = !DISubprogram(name: "gateSize", linkageName: "_ZNK7cModule8gateSizeEPKc", scope: !101, file: !100, line: 651, type: !1992, scopeLine: 651, containingType: !101, virtualIndex: 68, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!11, !1207, !167}
!1994 = !DISubprogram(name: "gateBaseId", linkageName: "_ZNK7cModule10gateBaseIdEPKc", scope: !101, file: !100, line: 662, type: !1992, scopeLine: 662, containingType: !101, virtualIndex: 69, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!1995 = !DISubprogram(name: "checkInternalConnections", linkageName: "_ZNK7cModule24checkInternalConnectionsEv", scope: !101, file: !100, line: 670, type: !1205, scopeLine: 670, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1996 = !DISubprogram(name: "getAncestorPar", linkageName: "_ZN7cModule14getAncestorParEPKc", scope: !101, file: !100, line: 679, type: !1997, scopeLine: 679, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!1272, !1203, !167}
!1999 = !DISubprogram(name: "callInitialize", linkageName: "_ZN7cModule14callInitializeEv", scope: !101, file: !100, line: 691, type: !1365, scopeLine: 691, containingType: !101, virtualIndex: 38, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!2000 = !DISubprogram(name: "callInitialize", linkageName: "_ZN7cModule14callInitializeEi", scope: !101, file: !100, line: 697, type: !1210, scopeLine: 697, containingType: !101, virtualIndex: 39, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!2001 = !DISubprogram(name: "callFinish", linkageName: "_ZN7cModule10callFinishEv", scope: !101, file: !100, line: 702, type: !1365, scopeLine: 702, containingType: !101, virtualIndex: 40, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!2002 = !DISubprogram(name: "scheduleStart", linkageName: "_ZN7cModule13scheduleStartE7SimTime", scope: !101, file: !100, line: 714, type: !2003, scopeLine: 714, containingType: !101, virtualIndex: 70, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{null, !1203, !1219}
!2005 = !DISubprogram(name: "deleteModule", linkageName: "_ZN7cModule12deleteModuleEv", scope: !101, file: !100, line: 721, type: !1365, scopeLine: 721, containingType: !101, virtualIndex: 71, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!2006 = !DISubprogram(name: "changeParentTo", linkageName: "_ZN7cModule14changeParentToEPS_", scope: !101, file: !100, line: 744, type: !1368, scopeLine: 744, containingType: !101, virtualIndex: 72, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!2007 = !DICompositeType(tag: DW_TAG_class_type, name: "cObject", file: !2008, line: 70, flags: DIFlagFwdDecl)
!2008 = !DIFile(filename: "simulator/cobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!2009 = !{!2010, !2011}
!2010 = !DIEnumerator(name: "FL_BUILDINSIDE_CALLED", value: 128, isUnsigned: true)
!2011 = !DIEnumerator(name: "FL_RECORD_EVENTS", value: 256, isUnsigned: true)
!2012 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !104, file: !105, line: 48, baseType: !36, size: 32, elements: !2013, identifier: "_ZTSN10cComponentUt_E")
!2013 = !{!2014, !2015, !2016, !2017, !2018}
!2014 = !DIEnumerator(name: "FL_PARAMSFINALIZED", value: 4, isUnsigned: true)
!2015 = !DIEnumerator(name: "FL_INITIALIZED", value: 8, isUnsigned: true)
!2016 = !DIEnumerator(name: "FL_EVLOGENABLED", value: 16, isUnsigned: true)
!2017 = !DIEnumerator(name: "FL_DISPSTR_CHECKED", value: 32, isUnsigned: true)
!2018 = !DIEnumerator(name: "FL_DISPSTR_NOTEMPTY", value: 64, isUnsigned: true)
!2019 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2021, file: !2020, line: 46, baseType: !36, size: 32, elements: !2022, identifier: "_ZTSN12cNamedObjectUt_E")
!2020 = !DIFile(filename: "simulator/cnamedobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!2021 = !DICompositeType(tag: DW_TAG_class_type, name: "cNamedObject", file: !2020, line: 38, flags: DIFlagFwdDecl)
!2022 = !{!2023}
!2023 = !DIEnumerator(name: "FL_NAMEPOOLING", value: 1, isUnsigned: true)
!2024 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2026, file: !2025, line: 45, baseType: !36, size: 32, elements: !2027, identifier: "_ZTSN12cDefaultListUt_E")
!2025 = !DIFile(filename: "simulator/cdefaultlist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!2026 = !DICompositeType(tag: DW_TAG_class_type, name: "cDefaultList", file: !2025, line: 38, flags: DIFlagFwdDecl)
!2027 = !{!2028}
!2028 = !DIEnumerator(name: "FL_PERFORMFINALGC", value: 2, isUnsigned: true)
!2029 = !{!120, !2030, !2032, !152, !36, !1137, !2036, !2046, !13, !107, !548, !370, !1445, !11, !1735, !750, !256, !265, !571, !674, !414, !262, !2056, !1787, !1518, !2057, !2060, !2087, !2112, !2131, !2150, !2172, !2635}
!2030 = !DICompositeType(tag: DW_TAG_class_type, name: "cRuntimeError", file: !2031, line: 221, flags: DIFlagFwdDecl, identifier: "_ZTS13cRuntimeError")
!2031 = !DIFile(filename: "simulator/cexception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2034)
!2034 = !DICompositeType(tag: DW_TAG_class_type, name: "cSimpleModule", file: !2035, line: 64, flags: DIFlagFwdDecl)
!2035 = !DIFile(filename: "simulator/csimplemodule.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "less_gatePairConnectedInside", file: !31, line: 733, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2037, identifier: "_ZTS28less_gatePairConnectedInside")
!2037 = !{!2038, !2039, !2043}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "otherv", scope: !2036, file: !31, line: 734, baseType: !1149, size: 64)
!2039 = !DISubprogram(name: "less_gatePairConnectedInside", scope: !2036, file: !31, line: 735, type: !2040, scopeLine: 735, flags: DIFlagPrototyped, spFlags: 0)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !2042, !1149}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2043 = !DISubprogram(name: "operator()", linkageName: "_ZN28less_gatePairConnectedInsideclEP5cGateS1_", scope: !2036, file: !31, line: 736, type: !2044, scopeLine: 736, flags: DIFlagPrototyped, spFlags: 0)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!13, !2042, !1147, !1147}
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "less_gatePairConnectedOutside", file: !31, line: 742, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2047, identifier: "_ZTS29less_gatePairConnectedOutside")
!2047 = !{!2048, !2049, !2053}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "otherv", scope: !2046, file: !31, line: 743, baseType: !1149, size: 64)
!2049 = !DISubprogram(name: "less_gatePairConnectedOutside", scope: !2046, file: !31, line: 744, type: !2050, scopeLine: 744, flags: DIFlagPrototyped, spFlags: 0)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !2052, !1149}
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2053 = !DISubprogram(name: "operator()", linkageName: "_ZN29less_gatePairConnectedOutsideclEP5cGateS1_", scope: !2046, file: !31, line: 745, type: !2054, scopeLine: 745, flags: DIFlagPrototyped, spFlags: 0)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!13, !2052, !1147, !1147}
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Link_type", scope: !675, file: !43, line: 341, baseType: !422)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__do_it", scope: !2058, file: !1497, line: 468, baseType: !2059)
!2058 = distinct !DISubprogram(name: "_S_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_", scope: !1496, file: !1497, line: 465, type: !1720, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1719, retainedNodes: !324)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "__bool_constant<_S_use_relocate()>", scope: !2, file: !643, line: 81, baseType: !798)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_val<less_gateConnectedInside>", scope: !2062, file: !2061, line: 166, size: 8, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2063, templateParams: !2085, identifier: "_ZTSN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEE")
!2061 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/predefined_ops.h", directory: "")
!2062 = !DINamespace(name: "__ops", scope: !142)
!2063 = !{!2064, !2071, !2075, !2081}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_M_comp", scope: !2060, file: !2061, line: 168, baseType: !2065, size: 8)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "less_gateConnectedInside", file: !31, line: 725, size: 8, flags: DIFlagTypePassByValue, elements: !2066, identifier: "_ZTS24less_gateConnectedInside")
!2066 = !{!2067}
!2067 = !DISubprogram(name: "operator()", linkageName: "_ZN24less_gateConnectedInsideclEP5cGateS1_", scope: !2065, file: !31, line: 726, type: !2068, scopeLine: 726, flags: DIFlagPrototyped, spFlags: 0)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!13, !2070, !1147, !1147}
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2071 = !DISubprogram(name: "_Iter_comp_val", scope: !2060, file: !2061, line: 172, type: !2072, scopeLine: 172, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !2074, !2065}
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2075 = !DISubprogram(name: "_Iter_comp_val", scope: !2060, file: !2061, line: 178, type: !2076, scopeLine: 178, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !2074, !2078}
!2078 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2080)
!2080 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_iter<less_gateConnectedInside>", scope: !2062, file: !2061, line: 143, flags: DIFlagFwdDecl, identifier: "_ZTSN9__gnu_cxx5__ops15_Iter_comp_iterI24less_gateConnectedInsideEE")
!2081 = !DISubprogram(name: "_Iter_comp_val", scope: !2060, file: !2061, line: 185, type: !2082, scopeLine: 185, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2074, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2080, size: 64)
!2085 = !{!2086}
!2086 = !DITemplateTypeParameter(name: "_Compare", type: !2065)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_val<less_gateConnectedOutside>", scope: !2062, file: !2061, line: 166, size: 8, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2088, templateParams: !2110, identifier: "_ZTSN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEE")
!2088 = !{!2089, !2096, !2100, !2106}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_M_comp", scope: !2087, file: !2061, line: 168, baseType: !2090, size: 8)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "less_gateConnectedOutside", file: !31, line: 729, size: 8, flags: DIFlagTypePassByValue, elements: !2091, identifier: "_ZTS25less_gateConnectedOutside")
!2091 = !{!2092}
!2092 = !DISubprogram(name: "operator()", linkageName: "_ZN25less_gateConnectedOutsideclEP5cGateS1_", scope: !2090, file: !31, line: 730, type: !2093, scopeLine: 730, flags: DIFlagPrototyped, spFlags: 0)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!13, !2095, !1147, !1147}
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2096 = !DISubprogram(name: "_Iter_comp_val", scope: !2087, file: !2061, line: 172, type: !2097, scopeLine: 172, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{null, !2099, !2090}
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2100 = !DISubprogram(name: "_Iter_comp_val", scope: !2087, file: !2061, line: 178, type: !2101, scopeLine: 178, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{null, !2099, !2103}
!2103 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2105)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_iter<less_gateConnectedOutside>", scope: !2062, file: !2061, line: 143, flags: DIFlagFwdDecl, identifier: "_ZTSN9__gnu_cxx5__ops15_Iter_comp_iterI25less_gateConnectedOutsideEE")
!2106 = !DISubprogram(name: "_Iter_comp_val", scope: !2087, file: !2061, line: 185, type: !2107, scopeLine: 185, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{null, !2099, !2109}
!2109 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2105, size: 64)
!2110 = !{!2111}
!2111 = !DITemplateTypeParameter(name: "_Compare", type: !2090)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_val<less_gatePairConnectedInside>", scope: !2062, file: !2061, line: 166, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2113, templateParams: !2129, identifier: "_ZTSN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEE")
!2113 = !{!2114, !2115, !2119, !2125}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_M_comp", scope: !2112, file: !2061, line: 168, baseType: !2036, size: 64)
!2115 = !DISubprogram(name: "_Iter_comp_val", scope: !2112, file: !2061, line: 172, type: !2116, scopeLine: 172, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{null, !2118, !2036}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2119 = !DISubprogram(name: "_Iter_comp_val", scope: !2112, file: !2061, line: 178, type: !2120, scopeLine: 178, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{null, !2118, !2122}
!2122 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2124)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_iter<less_gatePairConnectedInside>", scope: !2062, file: !2061, line: 143, flags: DIFlagFwdDecl, identifier: "_ZTSN9__gnu_cxx5__ops15_Iter_comp_iterI28less_gatePairConnectedInsideEE")
!2125 = !DISubprogram(name: "_Iter_comp_val", scope: !2112, file: !2061, line: 185, type: !2126, scopeLine: 185, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{null, !2118, !2128}
!2128 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2124, size: 64)
!2129 = !{!2130}
!2130 = !DITemplateTypeParameter(name: "_Compare", type: !2036)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_val<less_gatePairConnectedOutside>", scope: !2062, file: !2061, line: 166, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2132, templateParams: !2148, identifier: "_ZTSN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEE")
!2132 = !{!2133, !2134, !2138, !2144}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_M_comp", scope: !2131, file: !2061, line: 168, baseType: !2046, size: 64)
!2134 = !DISubprogram(name: "_Iter_comp_val", scope: !2131, file: !2061, line: 172, type: !2135, scopeLine: 172, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{null, !2137, !2046}
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2138 = !DISubprogram(name: "_Iter_comp_val", scope: !2131, file: !2061, line: 178, type: !2139, scopeLine: 178, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !2137, !2141}
!2141 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Iter_comp_iter<less_gatePairConnectedOutside>", scope: !2062, file: !2061, line: 143, flags: DIFlagFwdDecl, identifier: "_ZTSN9__gnu_cxx5__ops15_Iter_comp_iterI29less_gatePairConnectedOutsideEE")
!2144 = !DISubprogram(name: "_Iter_comp_val", scope: !2131, file: !2061, line: 185, type: !2145, scopeLine: 185, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{null, !2137, !2147}
!2147 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2143, size: 64)
!2148 = !{!2149}
!2149 = !DITemplateTypeParameter(name: "_Compare", type: !2046)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator", scope: !2151, file: !1497, line: 419, baseType: !2581)
!2151 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "vector<cChannel *, std::allocator<cChannel *> >", scope: !2, file: !1497, line: 389, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2152, templateParams: !2360, identifier: "_ZTSSt6vectorIP8cChannelSaIS1_EE")
!2152 = !{!2153, !2361, !2362, !2363, !2364, !2370, !2373, !2376, !2380, !2386, !2389, !2395, !2400, !2404, !2407, !2410, !2413, !2416, !2420, !2421, !2425, !2428, !2431, !2434, !2437, !2440, !2446, !2447, !2448, !2453, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2467, !2468, !2471, !2472, !2473, !2474, !2477, !2478, !2486, !2493, !2496, !2497, !2498, !2501, !2504, !2505, !2506, !2509, !2512, !2515, !2519, !2520, !2523, !2526, !2529, !2532, !2535, !2538, !2541, !2542, !2543, !2544, !2545, !2548, !2549, !2552, !2553, !2554, !2558, !2561, !2566, !2569, !2572, !2575, !2578}
!2153 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2151, baseType: !2154, flags: DIFlagProtected, extraData: i32 0)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Vector_base<cChannel *, std::allocator<cChannel *> >", scope: !2, file: !1497, line: 84, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2155, templateParams: !2360, identifier: "_ZTSSt12_Vector_baseIP8cChannelSaIS1_EE")
!2155 = !{!2156, !2311, !2316, !2321, !2325, !2328, !2333, !2336, !2339, !2343, !2346, !2349, !2352, !2353, !2356, !2359}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_M_impl", scope: !2154, file: !1497, line: 340, baseType: !2157, size: 192)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Vector_impl", scope: !2154, file: !1497, line: 128, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2158, identifier: "_ZTSNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implE")
!2158 = !{!2159, !2266, !2291, !2295, !2300, !2304, !2308}
!2159 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2157, baseType: !2160, extraData: i32 0)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Tp_alloc_type", scope: !2154, file: !1497, line: 87, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "other", scope: !2162, file: !139, line: 120, baseType: !2265)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rebind<cChannel *>", scope: !2163, file: !139, line: 119, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !2219, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E6rebindIS2_EE")
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__alloc_traits<std::allocator<cChannel *>, cChannel *>", scope: !142, file: !139, line: 48, size: 8, flags: DIFlagTypePassByValue, elements: !2164, templateParams: !2263, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_EE")
!2164 = !{!2165, !2252, !2255, !2258, !2259, !2260, !2261, !2262}
!2165 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2163, baseType: !2166, extraData: i32 0)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "allocator_traits<std::allocator<cChannel *> >", scope: !2, file: !146, line: 407, size: 8, flags: DIFlagTypePassByValue, elements: !2167, templateParams: !2250, identifier: "_ZTSSt16allocator_traitsISaIP8cChannelEE")
!2167 = !{!2168, !2235, !2238, !2241, !2247}
!2168 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE8allocateERS2_m", scope: !2166, file: !146, line: 459, type: !2169, scopeLine: 459, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{!2171, !2176, !290}
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2166, file: !146, line: 416, baseType: !2172)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_class_type, name: "cChannel", file: !2175, line: 37, flags: DIFlagFwdDecl)
!2175 = !DIFile(filename: "simulator/cchannel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!2176 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !2166, file: !146, line: 410, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "allocator<cChannel *>", scope: !2, file: !227, line: 116, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2179, templateParams: !2219, identifier: "_ZTSSaIP8cChannelE")
!2179 = !{!2180, !2221, !2225, !2230, !2234}
!2180 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2178, baseType: !2181, flags: DIFlagPublic, extraData: i32 0)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__allocator_base<cChannel *>", scope: !2, file: !231, line: 48, baseType: !2182)
!2182 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "new_allocator<cChannel *>", scope: !142, file: !233, line: 55, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2183, templateParams: !2219, identifier: "_ZTSN9__gnu_cxx13new_allocatorIP8cChannelEE")
!2183 = !{!2184, !2188, !2193, !2194, !2201, !2209, !2212, !2215, !2218}
!2184 = !DISubprogram(name: "new_allocator", scope: !2182, file: !233, line: 79, type: !2185, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{null, !2187}
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2188 = !DISubprogram(name: "new_allocator", scope: !2182, file: !233, line: 82, type: !2189, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2187, !2191}
!2191 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!2193 = !DISubprogram(name: "~new_allocator", scope: !2182, file: !233, line: 89, type: !2185, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2194 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIP8cChannelE7addressERS2_", scope: !2182, file: !233, line: 92, type: !2195, scopeLine: 92, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!2197, !2198, !2199}
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2182, file: !233, line: 62, baseType: !2172)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !2182, file: !233, line: 64, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2173, size: 64)
!2201 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIP8cChannelE7addressERKS2_", scope: !2182, file: !233, line: 96, type: !2202, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!2204, !2198, !2207}
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !2182, file: !233, line: 63, baseType: !2205)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !2182, file: !233, line: 65, baseType: !2208)
!2208 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2206, size: 64)
!2209 = !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelE8allocateEmPKv", scope: !2182, file: !233, line: 103, type: !2210, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!2172, !2187, !261, !265}
!2212 = !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelE10deallocateEPS2_m", scope: !2182, file: !233, line: 120, type: !2213, scopeLine: 120, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{null, !2187, !2172, !261}
!2215 = !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIP8cChannelE8max_sizeEv", scope: !2182, file: !233, line: 142, type: !2216, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!261, !2198}
!2218 = !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIP8cChannelE11_M_max_sizeEv", scope: !2182, file: !233, line: 185, type: !2216, scopeLine: 185, flags: DIFlagPrototyped, spFlags: 0)
!2219 = !{!2220}
!2220 = !DITemplateTypeParameter(name: "_Tp", type: !2173)
!2221 = !DISubprogram(name: "allocator", scope: !2178, file: !227, line: 144, type: !2222, scopeLine: 144, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{null, !2224}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2225 = !DISubprogram(name: "allocator", scope: !2178, file: !227, line: 147, type: !2226, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{null, !2224, !2228}
!2228 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2230 = !DISubprogram(name: "operator=", linkageName: "_ZNSaIP8cChannelEaSERKS1_", scope: !2178, file: !227, line: 152, type: !2231, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!2233, !2224, !2228}
!2233 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2178, size: 64)
!2234 = !DISubprogram(name: "~allocator", scope: !2178, file: !227, line: 162, type: !2222, scopeLine: 162, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2235 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE8allocateERS2_mPKv", scope: !2166, file: !146, line: 473, type: !2236, scopeLine: 473, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!2171, !2176, !290, !294}
!2238 = !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE10deallocateERS2_PS1_m", scope: !2166, file: !146, line: 491, type: !2239, scopeLine: 491, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{null, !2176, !2171, !290}
!2241 = !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE8max_sizeERKS2_", scope: !2166, file: !146, line: 543, type: !2242, scopeLine: 543, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !2166, file: !146, line: 431, baseType: !262)
!2245 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2177)
!2247 = !DISubprogram(name: "select_on_container_copy_construction", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE37select_on_container_copy_constructionERKS2_", scope: !2166, file: !146, line: 558, type: !2248, scopeLine: 558, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!2177, !2245}
!2250 = !{!2251}
!2251 = !DITemplateTypeParameter(name: "_Alloc", type: !2178)
!2252 = !DISubprogram(name: "_S_select_on_copy", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E17_S_select_on_copyERKS3_", scope: !2163, file: !139, line: 97, type: !2253, scopeLine: 97, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!2178, !2228}
!2255 = !DISubprogram(name: "_S_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E10_S_on_swapERS3_S5_", scope: !2163, file: !139, line: 100, type: !2256, scopeLine: 100, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{null, !2233, !2233}
!2258 = !DISubprogram(name: "_S_propagate_on_copy_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E27_S_propagate_on_copy_assignEv", scope: !2163, file: !139, line: 103, type: !316, scopeLine: 103, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2259 = !DISubprogram(name: "_S_propagate_on_move_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E27_S_propagate_on_move_assignEv", scope: !2163, file: !139, line: 106, type: !316, scopeLine: 106, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2260 = !DISubprogram(name: "_S_propagate_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E20_S_propagate_on_swapEv", scope: !2163, file: !139, line: 109, type: !316, scopeLine: 109, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2261 = !DISubprogram(name: "_S_always_equal", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E15_S_always_equalEv", scope: !2163, file: !139, line: 112, type: !316, scopeLine: 112, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2262 = !DISubprogram(name: "_S_nothrow_move", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIP8cChannelES2_E15_S_nothrow_moveEv", scope: !2163, file: !139, line: 115, type: !316, scopeLine: 115, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2263 = !{!2251, !2264}
!2264 = !DITemplateTypeParameter(type: !2173)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "rebind_alloc<cChannel *>", scope: !2166, file: !146, line: 446, baseType: !2178)
!2266 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2157, baseType: !2267, extraData: i32 0)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Vector_impl_data", scope: !2154, file: !1497, line: 91, size: 192, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2268, identifier: "_ZTSNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_dataE")
!2268 = !{!2269, !2272, !2273, !2274, !2278, !2282, !2287}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_M_start", scope: !2267, file: !1497, line: 93, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2154, file: !1497, line: 89, baseType: !2271)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2163, file: !139, line: 57, baseType: !2171)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_M_finish", scope: !2267, file: !1497, line: 94, baseType: !2270, size: 64, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_M_end_of_storage", scope: !2267, file: !1497, line: 95, baseType: !2270, size: 64, offset: 128)
!2274 = !DISubprogram(name: "_Vector_impl_data", scope: !2267, file: !1497, line: 97, type: !2275, scopeLine: 97, flags: DIFlagPrototyped, spFlags: 0)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{null, !2277}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2278 = !DISubprogram(name: "_Vector_impl_data", scope: !2267, file: !1497, line: 102, type: !2279, scopeLine: 102, flags: DIFlagPrototyped, spFlags: 0)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{null, !2277, !2281}
!2281 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2267, size: 64)
!2282 = !DISubprogram(name: "_M_copy_data", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_", scope: !2267, file: !1497, line: 109, type: !2283, scopeLine: 109, flags: DIFlagPrototyped, spFlags: 0)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{null, !2277, !2285}
!2285 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2286, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2267)
!2287 = !DISubprogram(name: "_M_swap_data", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_", scope: !2267, file: !1497, line: 117, type: !2288, scopeLine: 117, flags: DIFlagPrototyped, spFlags: 0)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{null, !2277, !2290}
!2290 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2267, size: 64)
!2291 = !DISubprogram(name: "_Vector_impl", scope: !2157, file: !1497, line: 131, type: !2292, scopeLine: 131, flags: DIFlagPrototyped, spFlags: 0)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !2294}
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2295 = !DISubprogram(name: "_Vector_impl", scope: !2157, file: !1497, line: 136, type: !2296, scopeLine: 136, flags: DIFlagPrototyped, spFlags: 0)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2294, !2298}
!2298 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2160)
!2300 = !DISubprogram(name: "_Vector_impl", scope: !2157, file: !1497, line: 143, type: !2301, scopeLine: 143, flags: DIFlagPrototyped, spFlags: 0)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{null, !2294, !2303}
!2303 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2157, size: 64)
!2304 = !DISubprogram(name: "_Vector_impl", scope: !2157, file: !1497, line: 147, type: !2305, scopeLine: 147, flags: DIFlagPrototyped, spFlags: 0)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{null, !2294, !2307}
!2307 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2160, size: 64)
!2308 = !DISubprogram(name: "_Vector_impl", scope: !2157, file: !1497, line: 151, type: !2309, scopeLine: 151, flags: DIFlagPrototyped, spFlags: 0)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{null, !2294, !2307, !2303}
!2311 = !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv", scope: !2154, file: !1497, line: 276, type: !2312, scopeLine: 276, flags: DIFlagPrototyped, spFlags: 0)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!2314, !2315}
!2314 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2160, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2316 = !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNKSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv", scope: !2154, file: !1497, line: 280, type: !2317, scopeLine: 280, flags: DIFlagPrototyped, spFlags: 0)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!2298, !2319}
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2154)
!2321 = !DISubprogram(name: "get_allocator", linkageName: "_ZNKSt12_Vector_baseIP8cChannelSaIS1_EE13get_allocatorEv", scope: !2154, file: !1497, line: 284, type: !2322, scopeLine: 284, flags: DIFlagPrototyped, spFlags: 0)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!2324, !2319}
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !2154, file: !1497, line: 273, baseType: !2178)
!2325 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 288, type: !2326, scopeLine: 288, flags: DIFlagPrototyped, spFlags: 0)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{null, !2315}
!2328 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 293, type: !2329, scopeLine: 293, flags: DIFlagPrototyped, spFlags: 0)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{null, !2315, !2331}
!2331 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2324)
!2333 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 298, type: !2334, scopeLine: 298, flags: DIFlagPrototyped, spFlags: 0)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{null, !2315, !262}
!2336 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 303, type: !2337, scopeLine: 303, flags: DIFlagPrototyped, spFlags: 0)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{null, !2315, !262, !2331}
!2339 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 308, type: !2340, scopeLine: 308, flags: DIFlagPrototyped, spFlags: 0)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{null, !2315, !2342}
!2342 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2154, size: 64)
!2343 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 312, type: !2344, scopeLine: 312, flags: DIFlagPrototyped, spFlags: 0)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{null, !2315, !2307}
!2346 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 315, type: !2347, scopeLine: 315, flags: DIFlagPrototyped, spFlags: 0)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{null, !2315, !2342, !2331}
!2349 = !DISubprogram(name: "_Vector_base", scope: !2154, file: !1497, line: 328, type: !2350, scopeLine: 328, flags: DIFlagPrototyped, spFlags: 0)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{null, !2315, !2331, !2342}
!2352 = !DISubprogram(name: "~_Vector_base", scope: !2154, file: !1497, line: 333, type: !2326, scopeLine: 333, flags: DIFlagPrototyped, spFlags: 0)
!2353 = !DISubprogram(name: "_M_allocate", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE11_M_allocateEm", scope: !2154, file: !1497, line: 343, type: !2354, scopeLine: 343, flags: DIFlagPrototyped, spFlags: 0)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!2270, !2315, !262}
!2356 = !DISubprogram(name: "_M_deallocate", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE13_M_deallocateEPS1_m", scope: !2154, file: !1497, line: 350, type: !2357, scopeLine: 350, flags: DIFlagPrototyped, spFlags: 0)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{null, !2315, !2270, !262}
!2359 = !DISubprogram(name: "_M_create_storage", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_M_create_storageEm", scope: !2154, file: !1497, line: 359, type: !2334, scopeLine: 359, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2360 = !{!2220, !2251}
!2361 = !DISubprogram(name: "_S_nothrow_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE", scope: !2151, file: !1497, line: 431, type: !1704, scopeLine: 431, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2362 = !DISubprogram(name: "_S_nothrow_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE19_S_nothrow_relocateESt17integral_constantIbLb0EE", scope: !2151, file: !1497, line: 440, type: !1707, scopeLine: 440, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2363 = !DISubprogram(name: "_S_use_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE15_S_use_relocateEv", scope: !2151, file: !1497, line: 444, type: !316, scopeLine: 444, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2364 = !DISubprogram(name: "_S_do_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE", scope: !2151, file: !1497, line: 453, type: !2365, scopeLine: 453, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!2367, !2367, !2367, !2367, !2368, !797}
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2151, file: !1497, line: 415, baseType: !2270)
!2368 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Tp_alloc_type", scope: !2151, file: !1497, line: 410, baseType: !2160)
!2370 = !DISubprogram(name: "_S_do_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb0EE", scope: !2151, file: !1497, line: 460, type: !2371, scopeLine: 460, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!2367, !2367, !2367, !2367, !2368, !815}
!2373 = !DISubprogram(name: "_S_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_", scope: !2151, file: !1497, line: 465, type: !2374, scopeLine: 465, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!2367, !2367, !2367, !2367, !2368}
!2376 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 487, type: !2377, scopeLine: 487, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{null, !2379}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2380 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 497, type: !2381, scopeLine: 497, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{null, !2379, !2383}
!2383 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2385)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !2151, file: !1497, line: 426, baseType: !2178)
!2386 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 510, type: !2387, scopeLine: 510, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{null, !2379, !1735, !2383}
!2389 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 522, type: !2390, scopeLine: 522, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{null, !2379, !1735, !2392, !2383}
!2392 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2394)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !2151, file: !1497, line: 414, baseType: !2173)
!2395 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 553, type: !2396, scopeLine: 553, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{null, !2379, !2398}
!2398 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2151)
!2400 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 572, type: !2401, scopeLine: 572, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{null, !2379, !2403}
!2403 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2151, size: 64)
!2404 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 575, type: !2405, scopeLine: 575, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{null, !2379, !2398, !2383}
!2407 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 585, type: !2408, scopeLine: 585, flags: DIFlagPrototyped, spFlags: 0)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{null, !2379, !2403, !2383, !797}
!2410 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 589, type: !2411, scopeLine: 589, flags: DIFlagPrototyped, spFlags: 0)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{null, !2379, !2403, !2383, !815}
!2413 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 607, type: !2414, scopeLine: 607, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{null, !2379, !2403, !2383}
!2416 = !DISubprogram(name: "vector", scope: !2151, file: !1497, line: 625, type: !2417, scopeLine: 625, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{null, !2379, !2419, !2383}
!2419 = !DICompositeType(tag: DW_TAG_class_type, name: "initializer_list<cChannel *>", scope: !2, file: !966, line: 47, flags: DIFlagFwdDecl, identifier: "_ZTSSt16initializer_listIP8cChannelE")
!2420 = !DISubprogram(name: "~vector", scope: !2151, file: !1497, line: 678, type: !2377, scopeLine: 678, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2421 = !DISubprogram(name: "operator=", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EEaSERKS3_", scope: !2151, file: !1497, line: 695, type: !2422, scopeLine: 695, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!2424, !2379, !2398}
!2424 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2151, size: 64)
!2425 = !DISubprogram(name: "operator=", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EEaSEOS3_", scope: !2151, file: !1497, line: 709, type: !2426, scopeLine: 709, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!2424, !2379, !2403}
!2428 = !DISubprogram(name: "operator=", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EEaSESt16initializer_listIS1_E", scope: !2151, file: !1497, line: 730, type: !2429, scopeLine: 730, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!2424, !2379, !2419}
!2431 = !DISubprogram(name: "assign", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6assignEmRKS1_", scope: !2151, file: !1497, line: 749, type: !2432, scopeLine: 749, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{null, !2379, !1735, !2392}
!2434 = !DISubprogram(name: "assign", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6assignESt16initializer_listIS1_E", scope: !2151, file: !1497, line: 794, type: !2435, scopeLine: 794, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{null, !2379, !2419}
!2437 = !DISubprogram(name: "begin", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5beginEv", scope: !2151, file: !1497, line: 811, type: !2438, scopeLine: 811, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!2150, !2379}
!2440 = !DISubprogram(name: "begin", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE5beginEv", scope: !2151, file: !1497, line: 820, type: !2441, scopeLine: 820, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!2443, !2445}
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_iterator", scope: !2151, file: !1497, line: 421, baseType: !2444)
!2444 = !DICompositeType(tag: DW_TAG_class_type, name: "__normal_iterator<cChannel *const *, std::vector<cChannel *, std::allocator<cChannel *> > >", scope: !142, file: !852, line: 930, flags: DIFlagFwdDecl, identifier: "_ZTSN9__gnu_cxx17__normal_iteratorIPKP8cChannelSt6vectorIS2_SaIS2_EEEE")
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2446 = !DISubprogram(name: "end", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE3endEv", scope: !2151, file: !1497, line: 829, type: !2438, scopeLine: 829, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2447 = !DISubprogram(name: "end", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE3endEv", scope: !2151, file: !1497, line: 838, type: !2441, scopeLine: 838, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2448 = !DISubprogram(name: "rbegin", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6rbeginEv", scope: !2151, file: !1497, line: 847, type: !2449, scopeLine: 847, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{!2451, !2379}
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "reverse_iterator", scope: !2151, file: !1497, line: 423, baseType: !2452)
!2452 = !DICompositeType(tag: DW_TAG_class_type, name: "reverse_iterator<__gnu_cxx::__normal_iterator<cChannel **, std::vector<cChannel *, std::allocator<cChannel *> > > >", scope: !2, file: !852, line: 125, flags: DIFlagFwdDecl, identifier: "_ZTSSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS3_SaIS3_EEEEE")
!2453 = !DISubprogram(name: "rbegin", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE6rbeginEv", scope: !2151, file: !1497, line: 856, type: !2454, scopeLine: 856, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!2456, !2445}
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reverse_iterator", scope: !2151, file: !1497, line: 422, baseType: !2457)
!2457 = !DICompositeType(tag: DW_TAG_class_type, name: "reverse_iterator<__gnu_cxx::__normal_iterator<cChannel *const *, std::vector<cChannel *, std::allocator<cChannel *> > > >", scope: !2, file: !852, line: 125, flags: DIFlagFwdDecl, identifier: "_ZTSSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKP8cChannelSt6vectorIS3_SaIS3_EEEEE")
!2458 = !DISubprogram(name: "rend", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE4rendEv", scope: !2151, file: !1497, line: 865, type: !2449, scopeLine: 865, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2459 = !DISubprogram(name: "rend", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE4rendEv", scope: !2151, file: !1497, line: 874, type: !2454, scopeLine: 874, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2460 = !DISubprogram(name: "cbegin", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE6cbeginEv", scope: !2151, file: !1497, line: 884, type: !2441, scopeLine: 884, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2461 = !DISubprogram(name: "cend", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE4cendEv", scope: !2151, file: !1497, line: 893, type: !2441, scopeLine: 893, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2462 = !DISubprogram(name: "crbegin", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE7crbeginEv", scope: !2151, file: !1497, line: 902, type: !2454, scopeLine: 902, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2463 = !DISubprogram(name: "crend", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE5crendEv", scope: !2151, file: !1497, line: 911, type: !2454, scopeLine: 911, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2464 = !DISubprogram(name: "size", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv", scope: !2151, file: !1497, line: 918, type: !2465, scopeLine: 918, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!1735, !2445}
!2467 = !DISubprogram(name: "max_size", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv", scope: !2151, file: !1497, line: 923, type: !2465, scopeLine: 923, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2468 = !DISubprogram(name: "resize", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6resizeEm", scope: !2151, file: !1497, line: 937, type: !2469, scopeLine: 937, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{null, !2379, !1735}
!2471 = !DISubprogram(name: "resize", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6resizeEmRKS1_", scope: !2151, file: !1497, line: 957, type: !2432, scopeLine: 957, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2472 = !DISubprogram(name: "shrink_to_fit", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE13shrink_to_fitEv", scope: !2151, file: !1497, line: 989, type: !2377, scopeLine: 989, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2473 = !DISubprogram(name: "capacity", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE8capacityEv", scope: !2151, file: !1497, line: 998, type: !2465, scopeLine: 998, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2474 = !DISubprogram(name: "empty", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE5emptyEv", scope: !2151, file: !1497, line: 1007, type: !2475, scopeLine: 1007, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{!13, !2445}
!2477 = !DISubprogram(name: "reserve", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE7reserveEm", scope: !2151, file: !1497, line: 1028, type: !2469, scopeLine: 1028, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2478 = !DISubprogram(name: "operator[]", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EEixEm", scope: !2151, file: !1497, line: 1043, type: !2479, scopeLine: 1043, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!2481, !2379, !1735}
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !2151, file: !1497, line: 417, baseType: !2482)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !2163, file: !139, line: 62, baseType: !2483)
!2483 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2484, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !2163, file: !139, line: 56, baseType: !2485)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_type", scope: !2166, file: !146, line: 413, baseType: !2173)
!2486 = !DISubprogram(name: "operator[]", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EEixEm", scope: !2151, file: !1497, line: 1061, type: !2487, scopeLine: 1061, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!2489, !2445, !1735}
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !2151, file: !1497, line: 418, baseType: !2490)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !2163, file: !139, line: 63, baseType: !2491)
!2491 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!2493 = !DISubprogram(name: "_M_range_check", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE14_M_range_checkEm", scope: !2151, file: !1497, line: 1070, type: !2494, scopeLine: 1070, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{null, !2445, !1735}
!2496 = !DISubprogram(name: "at", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE2atEm", scope: !2151, file: !1497, line: 1092, type: !2479, scopeLine: 1092, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2497 = !DISubprogram(name: "at", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE2atEm", scope: !2151, file: !1497, line: 1110, type: !2487, scopeLine: 1110, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2498 = !DISubprogram(name: "front", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5frontEv", scope: !2151, file: !1497, line: 1121, type: !2499, scopeLine: 1121, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!2481, !2379}
!2501 = !DISubprogram(name: "front", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE5frontEv", scope: !2151, file: !1497, line: 1132, type: !2502, scopeLine: 1132, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!2489, !2445}
!2504 = !DISubprogram(name: "back", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE4backEv", scope: !2151, file: !1497, line: 1143, type: !2499, scopeLine: 1143, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2505 = !DISubprogram(name: "back", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE4backEv", scope: !2151, file: !1497, line: 1154, type: !2502, scopeLine: 1154, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2506 = !DISubprogram(name: "data", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE4dataEv", scope: !2151, file: !1497, line: 1168, type: !2507, scopeLine: 1168, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!2172, !2379}
!2509 = !DISubprogram(name: "data", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE4dataEv", scope: !2151, file: !1497, line: 1172, type: !2510, scopeLine: 1172, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{!2205, !2445}
!2512 = !DISubprogram(name: "push_back", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE9push_backERKS1_", scope: !2151, file: !1497, line: 1187, type: !2513, scopeLine: 1187, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !2379, !2392}
!2515 = !DISubprogram(name: "push_back", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE9push_backEOS1_", scope: !2151, file: !1497, line: 1203, type: !2516, scopeLine: 1203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{null, !2379, !2518}
!2518 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2394, size: 64)
!2519 = !DISubprogram(name: "pop_back", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE8pop_backEv", scope: !2151, file: !1497, line: 1225, type: !2377, scopeLine: 1225, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2520 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EERS6_", scope: !2151, file: !1497, line: 1263, type: !2521, scopeLine: 1263, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!2150, !2379, !2443, !2392}
!2523 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_", scope: !2151, file: !1497, line: 1293, type: !2524, scopeLine: 1293, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!2150, !2379, !2443, !2518}
!2526 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EESt16initializer_listIS1_E", scope: !2151, file: !1497, line: 1310, type: !2527, scopeLine: 1310, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{!2150, !2379, !2443, !2419}
!2529 = !DISubprogram(name: "insert", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEmRS6_", scope: !2151, file: !1497, line: 1335, type: !2530, scopeLine: 1335, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!2150, !2379, !2443, !1735, !2392}
!2532 = !DISubprogram(name: "erase", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE", scope: !2151, file: !1497, line: 1430, type: !2533, scopeLine: 1430, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!2150, !2379, !2443}
!2535 = !DISubprogram(name: "erase", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_", scope: !2151, file: !1497, line: 1457, type: !2536, scopeLine: 1457, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!2150, !2379, !2443, !2443}
!2538 = !DISubprogram(name: "swap", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE4swapERS3_", scope: !2151, file: !1497, line: 1480, type: !2539, scopeLine: 1480, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{null, !2379, !2424}
!2541 = !DISubprogram(name: "clear", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5clearEv", scope: !2151, file: !1497, line: 1498, type: !2377, scopeLine: 1498, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2542 = !DISubprogram(name: "_M_fill_initialize", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE18_M_fill_initializeEmRKS1_", scope: !2151, file: !1497, line: 1593, type: !2432, scopeLine: 1593, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2543 = !DISubprogram(name: "_M_default_initialize", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE21_M_default_initializeEm", scope: !2151, file: !1497, line: 1603, type: !2469, scopeLine: 1603, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2544 = !DISubprogram(name: "_M_fill_assign", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_M_fill_assignEmRKS1_", scope: !2151, file: !1497, line: 1645, type: !2432, scopeLine: 1645, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2545 = !DISubprogram(name: "_M_fill_insert", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_", scope: !2151, file: !1497, line: 1684, type: !2546, scopeLine: 1684, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{null, !2379, !2150, !1735, !2392}
!2548 = !DISubprogram(name: "_M_default_append", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE17_M_default_appendEm", scope: !2151, file: !1497, line: 1689, type: !2469, scopeLine: 1689, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2549 = !DISubprogram(name: "_M_shrink_to_fit", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE16_M_shrink_to_fitEv", scope: !2151, file: !1497, line: 1692, type: !2550, scopeLine: 1692, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!13, !2379}
!2552 = !DISubprogram(name: "_M_insert_rval", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_", scope: !2151, file: !1497, line: 1741, type: !2524, scopeLine: 1741, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2553 = !DISubprogram(name: "_M_emplace_aux", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_M_emplace_auxEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_", scope: !2151, file: !1497, line: 1750, type: !2524, scopeLine: 1750, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2554 = !DISubprogram(name: "_M_check_len", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE12_M_check_lenEmPKc", scope: !2151, file: !1497, line: 1756, type: !2555, scopeLine: 1756, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!2557, !2445, !1735, !167}
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !2151, file: !1497, line: 424, baseType: !262)
!2558 = !DISubprogram(name: "_S_check_init_len", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE17_S_check_init_lenEmRKS2_", scope: !2151, file: !1497, line: 1767, type: !2559, scopeLine: 1767, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!2557, !1735, !2383}
!2561 = !DISubprogram(name: "_S_max_size", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE11_S_max_sizeERKS2_", scope: !2151, file: !1497, line: 1776, type: !2562, scopeLine: 1776, flags: DIFlagProtected | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!2557, !2564}
!2564 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2369)
!2566 = !DISubprogram(name: "_M_erase_at_end", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE15_M_erase_at_endEPS1_", scope: !2151, file: !1497, line: 1792, type: !2567, scopeLine: 1792, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2379, !2367}
!2569 = !DISubprogram(name: "_M_erase", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE", scope: !2151, file: !1497, line: 1804, type: !2570, scopeLine: 1804, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!2150, !2379, !2150}
!2572 = !DISubprogram(name: "_M_erase", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_", scope: !2151, file: !1497, line: 1807, type: !2573, scopeLine: 1807, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!2150, !2379, !2150, !2150}
!2575 = !DISubprogram(name: "_M_move_assign", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE", scope: !2151, file: !1497, line: 1815, type: !2576, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: 0)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{null, !2379, !2403, !797}
!2578 = !DISubprogram(name: "_M_move_assign", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb0EE", scope: !2151, file: !1497, line: 1826, type: !2579, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: 0)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{null, !2379, !2403, !815}
!2581 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "__normal_iterator<cChannel **, std::vector<cChannel *, std::allocator<cChannel *> > >", scope: !142, file: !852, line: 930, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !2582, templateParams: !2633, identifier: "_ZTSN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEE")
!2582 = !{!2583, !2584, !2588, !2593, !2603, !2608, !2612, !2615, !2616, !2617, !2622, !2625, !2628, !2629, !2630}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_M_current", scope: !2581, file: !852, line: 933, baseType: !2172, size: 64, flags: DIFlagProtected)
!2584 = !DISubprogram(name: "__normal_iterator", scope: !2581, file: !852, line: 949, type: !2585, scopeLine: 949, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{null, !2587}
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2588 = !DISubprogram(name: "__normal_iterator", scope: !2581, file: !852, line: 953, type: !2589, scopeLine: 953, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{null, !2587, !2591}
!2591 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2172)
!2593 = !DISubprogram(name: "operator*", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEdeEv", scope: !2581, file: !852, line: 968, type: !2594, scopeLine: 968, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{!2596, !2601}
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !2581, file: !852, line: 942, baseType: !2597)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !2598, file: !1805, line: 216, baseType: !2200)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iterator_traits<cChannel **>", scope: !2, file: !1805, line: 210, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !2599, identifier: "_ZTSSt15iterator_traitsIPP8cChannelE")
!2599 = !{!2600}
!2600 = !DITemplateTypeParameter(name: "_Iterator", type: !2172)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2581)
!2603 = !DISubprogram(name: "operator->", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEptEv", scope: !2581, file: !852, line: 973, type: !2604, scopeLine: 973, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!2606, !2601}
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2581, file: !852, line: 943, baseType: !2607)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2598, file: !1805, line: 215, baseType: !2172)
!2608 = !DISubprogram(name: "operator++", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEppEv", scope: !2581, file: !852, line: 978, type: !2609, scopeLine: 978, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!2611, !2587}
!2611 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2581, size: 64)
!2612 = !DISubprogram(name: "operator++", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEppEi", scope: !2581, file: !852, line: 986, type: !2613, scopeLine: 986, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!2581, !2587, !11}
!2615 = !DISubprogram(name: "operator--", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEmmEv", scope: !2581, file: !852, line: 992, type: !2609, scopeLine: 992, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2616 = !DISubprogram(name: "operator--", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEmmEi", scope: !2581, file: !852, line: 1000, type: !2613, scopeLine: 1000, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2617 = !DISubprogram(name: "operator[]", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEixEl", scope: !2581, file: !852, line: 1006, type: !2618, scopeLine: 1006, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!2596, !2601, !2620}
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "difference_type", scope: !2581, file: !852, line: 941, baseType: !2621)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "difference_type", scope: !2598, file: !1805, line: 214, baseType: !1830)
!2622 = !DISubprogram(name: "operator+=", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEpLEl", scope: !2581, file: !852, line: 1011, type: !2623, scopeLine: 1011, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!2611, !2587, !2620}
!2625 = !DISubprogram(name: "operator+", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEplEl", scope: !2581, file: !852, line: 1016, type: !2626, scopeLine: 1016, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!2581, !2601, !2620}
!2628 = !DISubprogram(name: "operator-=", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEmIEl", scope: !2581, file: !852, line: 1021, type: !2623, scopeLine: 1021, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2629 = !DISubprogram(name: "operator-", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEmiEl", scope: !2581, file: !852, line: 1026, type: !2626, scopeLine: 1026, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2630 = !DISubprogram(name: "base", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv", scope: !2581, file: !852, line: 1031, type: !2631, scopeLine: 1031, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!2591, !2601}
!2633 = !{!2600, !2634}
!2634 = !DITemplateTypeParameter(name: "_Container", type: !2151)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__do_it", scope: !2636, file: !1497, line: 468, baseType: !2059)
!2636 = distinct !DISubprogram(name: "_S_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_", scope: !2151, file: !1497, line: 465, type: !2374, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2373, retainedNodes: !324)
!2637 = !{!0, !28, !2638, !2640}
!2638 = !DIGlobalVariableExpression(var: !2639, expr: !DIExpression())
!2639 = distinct !DIGlobalVariable(name: "lastmodulefullpathmod", linkageName: "_ZN7cModule21lastmodulefullpathmodE", scope: !30, file: !31, line: 47, type: !113, isLocal: false, isDefinition: true, declaration: !112)
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "namePool", linkageName: "_ZN7cModule8namePoolE", scope: !30, file: !31, line: 248, type: !125, isLocal: false, isDefinition: true, declaration: !124)
!2642 = !{!2643, !2647, !2651, !2655, !2661, !2663, !2668, !2670, !2674, !2678, !2682, !2692, !2696, !2700, !2702, !2706, !2710, !2714, !2718, !2722, !2726, !2734, !2738, !2742, !2744, !2746, !2750, !2754, !2760, !2764, !2768, !2770, !2778, !2782, !2789, !2791, !2795, !2799, !2803, !2807, !2812, !2817, !2822, !2823, !2824, !2825, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2885, !2889, !2895, !2897, !2899, !2903, !2905, !2907, !2909, !2911, !2913, !2915, !2917, !2922, !2926, !2928, !2930, !2935, !2937, !2939, !2941, !2943, !2945, !2947, !2950, !2952, !2954, !2958, !2962, !2964, !2966, !2968, !2970, !2972, !2974, !2976, !2978, !2980, !2982, !2986, !2990, !2992, !2994, !2996, !2998, !3000, !3002, !3004, !3006, !3008, !3010, !3012, !3014, !3016, !3018, !3020, !3024, !3028, !3032, !3034, !3036, !3038, !3040, !3042, !3044, !3046, !3048, !3050, !3054, !3058, !3062, !3064, !3066, !3068, !3072, !3076, !3080, !3082, !3084, !3086, !3088, !3090, !3092, !3094, !3096, !3098, !3100, !3102, !3104, !3108, !3112, !3116, !3118, !3120, !3122, !3124, !3128, !3132, !3134, !3136, !3138, !3140, !3142, !3144, !3148, !3152, !3154, !3156, !3158, !3160, !3164, !3168, !3172, !3174, !3176, !3178, !3180, !3182, !3184, !3188, !3192, !3196, !3198, !3202, !3206, !3208, !3210, !3212, !3214, !3216, !3218, !3224, !3229, !3246, !3249, !3254, !3263, !3268, !3272, !3276, !3280, !3284, !3286, !3288, !3292, !3298, !3302, !3308, !3313, !3315, !3319, !3323, !3327, !3331, !3342, !3344, !3348, !3352, !3356, !3358, !3362, !3366, !3370, !3372, !3374, !3378, !3386, !3390, !3394, !3398, !3400, !3406, !3408, !3414, !3418, !3422, !3426, !3430, !3434, !3438, !3440, !3442, !3446, !3450, !3454, !3456, !3460, !3464, !3466, !3468, !3472, !3476, !3480, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3499, !3503, !3506, !3507, !3510, !3512, !3514, !3516, !3519, !3522, !3525, !3528, !3531, !3533, !3537, !3541, !3544, !3547, !3549, !3551, !3553, !3555, !3558, !3561, !3564, !3567, !3570, !3572, !3576, !3580, !3585, !3589, !3591, !3593, !3595, !3597, !3599, !3601, !3603, !3605, !3607, !3609, !3611, !3613, !3615, !3619, !3625, !3630, !3634, !3636, !3638, !3640, !3642, !3649, !3653, !3657, !3661, !3665, !3669, !3674, !3678, !3680, !3684, !3690, !3694, !3699, !3701, !3703, !3707, !3711, !3713, !3715, !3717, !3719, !3723, !3725, !3727, !3731, !3735, !3739, !3743, !3747, !3751, !3753, !3757, !3761, !3765, !3769, !3771, !3773, !3777, !3781, !3782, !3783, !3784, !3785, !3786, !3792, !3795, !3796, !3798, !3800, !3802, !3804, !3808, !3810, !3812, !3814, !3816, !3818, !3820, !3822, !3824, !3828, !3832, !3834, !3838, !3842, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874}
!2643 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !2644, entity: !2645, file: !2646, line: 58)
!2644 = !DINamespace(name: "__gnu_debug", scope: null)
!2645 = !DINamespace(name: "__debug", scope: !2)
!2646 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/debug/debug.h", directory: "")
!2647 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2648, file: !2650, line: 52)
!2648 = !DISubprogram(name: "abs", scope: !2649, file: !2649, line: 840, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!2649 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2650 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_abs.h", directory: "")
!2651 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2652, file: !2654, line: 127)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !2649, line: 62, baseType: !2653)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, file: !2649, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!2654 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cstdlib", directory: "")
!2655 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2656, file: !2654, line: 128)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !2649, line: 70, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2649, line: 66, size: 128, flags: DIFlagTypePassByValue, elements: !2658, identifier: "_ZTS6ldiv_t")
!2658 = !{!2659, !2660}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !2657, file: !2649, line: 68, baseType: !1229, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !2657, file: !2649, line: 69, baseType: !1229, size: 64, offset: 64)
!2661 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2662, file: !2654, line: 130)
!2662 = !DISubprogram(name: "abort", scope: !2649, file: !2649, line: 591, type: !1244, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!2663 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2664, file: !2654, line: 134)
!2664 = !DISubprogram(name: "atexit", scope: !2649, file: !2649, line: 595, type: !2665, flags: DIFlagPrototyped, spFlags: 0)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!11, !2667}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!2668 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2669, file: !2654, line: 137)
!2669 = !DISubprogram(name: "at_quick_exit", scope: !2649, file: !2649, line: 600, type: !2665, flags: DIFlagPrototyped, spFlags: 0)
!2670 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2671, file: !2654, line: 140)
!2671 = !DISubprogram(name: "atof", scope: !2649, file: !2649, line: 101, type: !2672, flags: DIFlagPrototyped, spFlags: 0)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{!1233, !167}
!2674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2675, file: !2654, line: 141)
!2675 = !DISubprogram(name: "atoi", scope: !2649, file: !2649, line: 104, type: !2676, flags: DIFlagPrototyped, spFlags: 0)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{!11, !167}
!2678 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2679, file: !2654, line: 142)
!2679 = !DISubprogram(name: "atol", scope: !2649, file: !2649, line: 107, type: !2680, flags: DIFlagPrototyped, spFlags: 0)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!1229, !167}
!2682 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2683, file: !2654, line: 143)
!2683 = !DISubprogram(name: "bsearch", scope: !2649, file: !2649, line: 820, type: !2684, flags: DIFlagPrototyped, spFlags: 0)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!370, !265, !265, !2686, !2686, !2688}
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2687, line: 46, baseType: !264)
!2687 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2649, line: 808, baseType: !2689)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!11, !265, !265}
!2692 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2693, file: !2654, line: 144)
!2693 = !DISubprogram(name: "calloc", scope: !2649, file: !2649, line: 542, type: !2694, flags: DIFlagPrototyped, spFlags: 0)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!370, !2686, !2686}
!2696 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2697, file: !2654, line: 145)
!2697 = !DISubprogram(name: "div", scope: !2649, file: !2649, line: 852, type: !2698, flags: DIFlagPrototyped, spFlags: 0)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!2652, !11, !11}
!2700 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2701, file: !2654, line: 146)
!2701 = !DISubprogram(name: "exit", scope: !2649, file: !2649, line: 617, type: !1345, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!2702 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2703, file: !2654, line: 147)
!2703 = !DISubprogram(name: "free", scope: !2649, file: !2649, line: 565, type: !2704, flags: DIFlagPrototyped, spFlags: 0)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{null, !370}
!2706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2707, file: !2654, line: 148)
!2707 = !DISubprogram(name: "getenv", scope: !2649, file: !2649, line: 634, type: !2708, flags: DIFlagPrototyped, spFlags: 0)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!116, !167}
!2710 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2711, file: !2654, line: 149)
!2711 = !DISubprogram(name: "labs", scope: !2649, file: !2649, line: 841, type: !2712, flags: DIFlagPrototyped, spFlags: 0)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!1229, !1229}
!2714 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2715, file: !2654, line: 150)
!2715 = !DISubprogram(name: "ldiv", scope: !2649, file: !2649, line: 854, type: !2716, flags: DIFlagPrototyped, spFlags: 0)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!2656, !1229, !1229}
!2718 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2719, file: !2654, line: 151)
!2719 = !DISubprogram(name: "malloc", scope: !2649, file: !2649, line: 539, type: !2720, flags: DIFlagPrototyped, spFlags: 0)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!370, !2686}
!2722 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2723, file: !2654, line: 153)
!2723 = !DISubprogram(name: "mblen", scope: !2649, file: !2649, line: 922, type: !2724, flags: DIFlagPrototyped, spFlags: 0)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!11, !167, !2686}
!2726 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2727, file: !2654, line: 154)
!2727 = !DISubprogram(name: "mbstowcs", scope: !2649, file: !2649, line: 933, type: !2728, flags: DIFlagPrototyped, spFlags: 0)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!2686, !2730, !2733, !2686}
!2730 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2731)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!2733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !167)
!2734 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2735, file: !2654, line: 155)
!2735 = !DISubprogram(name: "mbtowc", scope: !2649, file: !2649, line: 925, type: !2736, flags: DIFlagPrototyped, spFlags: 0)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!11, !2730, !2733, !2686}
!2738 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2739, file: !2654, line: 157)
!2739 = !DISubprogram(name: "qsort", scope: !2649, file: !2649, line: 830, type: !2740, flags: DIFlagPrototyped, spFlags: 0)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{null, !370, !2686, !2686, !2688}
!2742 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2743, file: !2654, line: 160)
!2743 = !DISubprogram(name: "quick_exit", scope: !2649, file: !2649, line: 623, type: !1345, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!2744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2745, file: !2654, line: 163)
!2745 = !DISubprogram(name: "rand", scope: !2649, file: !2649, line: 453, type: !1342, flags: DIFlagPrototyped, spFlags: 0)
!2746 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2747, file: !2654, line: 164)
!2747 = !DISubprogram(name: "realloc", scope: !2649, file: !2649, line: 550, type: !2748, flags: DIFlagPrototyped, spFlags: 0)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!370, !370, !2686}
!2750 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2751, file: !2654, line: 165)
!2751 = !DISubprogram(name: "srand", scope: !2649, file: !2649, line: 455, type: !2752, flags: DIFlagPrototyped, spFlags: 0)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{null, !36}
!2754 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2755, file: !2654, line: 166)
!2755 = !DISubprogram(name: "strtod", scope: !2649, file: !2649, line: 117, type: !2756, flags: DIFlagPrototyped, spFlags: 0)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!1233, !2733, !2758}
!2758 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2759)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!2760 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2761, file: !2654, line: 167)
!2761 = !DISubprogram(name: "strtol", scope: !2649, file: !2649, line: 176, type: !2762, flags: DIFlagPrototyped, spFlags: 0)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!1229, !2733, !2758, !11}
!2764 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2765, file: !2654, line: 168)
!2765 = !DISubprogram(name: "strtoul", scope: !2649, file: !2649, line: 180, type: !2766, flags: DIFlagPrototyped, spFlags: 0)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!264, !2733, !2758, !11}
!2768 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2769, file: !2654, line: 169)
!2769 = !DISubprogram(name: "system", scope: !2649, file: !2649, line: 784, type: !2676, flags: DIFlagPrototyped, spFlags: 0)
!2770 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2771, file: !2654, line: 171)
!2771 = !DISubprogram(name: "wcstombs", scope: !2649, file: !2649, line: 936, type: !2772, flags: DIFlagPrototyped, spFlags: 0)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{!2686, !2774, !2775, !2686}
!2774 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !116)
!2775 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2776)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2732)
!2778 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2779, file: !2654, line: 172)
!2779 = !DISubprogram(name: "wctomb", scope: !2649, file: !2649, line: 929, type: !2780, flags: DIFlagPrototyped, spFlags: 0)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!11, !116, !2732}
!2782 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2783, file: !2654, line: 200)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !2649, line: 80, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2649, line: 76, size: 128, flags: DIFlagTypePassByValue, elements: !2785, identifier: "_ZTS7lldiv_t")
!2785 = !{!2786, !2788}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !2784, file: !2649, line: 78, baseType: !2787, size: 64)
!2787 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !2784, file: !2649, line: 79, baseType: !2787, size: 64, offset: 64)
!2789 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2790, file: !2654, line: 206)
!2790 = !DISubprogram(name: "_Exit", scope: !2649, file: !2649, line: 629, type: !1345, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!2791 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2792, file: !2654, line: 210)
!2792 = !DISubprogram(name: "llabs", scope: !2649, file: !2649, line: 844, type: !2793, flags: DIFlagPrototyped, spFlags: 0)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!2787, !2787}
!2795 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2796, file: !2654, line: 216)
!2796 = !DISubprogram(name: "lldiv", scope: !2649, file: !2649, line: 858, type: !2797, flags: DIFlagPrototyped, spFlags: 0)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!2783, !2787, !2787}
!2799 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2800, file: !2654, line: 227)
!2800 = !DISubprogram(name: "atoll", scope: !2649, file: !2649, line: 112, type: !2801, flags: DIFlagPrototyped, spFlags: 0)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!2787, !167}
!2803 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2804, file: !2654, line: 228)
!2804 = !DISubprogram(name: "strtoll", scope: !2649, file: !2649, line: 200, type: !2805, flags: DIFlagPrototyped, spFlags: 0)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!2787, !2733, !2758, !11}
!2807 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2808, file: !2654, line: 229)
!2808 = !DISubprogram(name: "strtoull", scope: !2649, file: !2649, line: 205, type: !2809, flags: DIFlagPrototyped, spFlags: 0)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!2811, !2733, !2758, !11}
!2811 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2812 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2813, file: !2654, line: 231)
!2813 = !DISubprogram(name: "strtof", scope: !2649, file: !2649, line: 123, type: !2814, flags: DIFlagPrototyped, spFlags: 0)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!2816, !2733, !2758}
!2816 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2817 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !2818, file: !2654, line: 232)
!2818 = !DISubprogram(name: "strtold", scope: !2649, file: !2649, line: 126, type: !2819, flags: DIFlagPrototyped, spFlags: 0)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!2821, !2733, !2758}
!2821 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!2822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2783, file: !2654, line: 240)
!2823 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2790, file: !2654, line: 242)
!2824 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2792, file: !2654, line: 244)
!2825 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2826, file: !2654, line: 245)
!2826 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !142, file: !2654, line: 213, type: !2797, flags: DIFlagPrototyped, spFlags: 0)
!2827 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2796, file: !2654, line: 246)
!2828 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2800, file: !2654, line: 248)
!2829 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2813, file: !2654, line: 249)
!2830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2804, file: !2654, line: 250)
!2831 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2808, file: !2654, line: 251)
!2832 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2818, file: !2654, line: 252)
!2833 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2834, file: !2835, line: 58)
!2834 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !2836, file: !2835, line: 80, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2837, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!2835 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/exception_ptr.h", directory: "")
!2836 = !DINamespace(name: "__exception_ptr", scope: !2)
!2837 = !{!2838, !2839, !2843, !2846, !2847, !2852, !2853, !2857, !2860, !2864, !2868, !2871, !2872, !2875, !2878}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !2834, file: !2835, line: 82, baseType: !370, size: 64)
!2839 = !DISubprogram(name: "exception_ptr", scope: !2834, file: !2835, line: 84, type: !2840, scopeLine: 84, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{null, !2842, !370}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2843 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !2834, file: !2835, line: 86, type: !2844, scopeLine: 86, flags: DIFlagPrototyped, spFlags: 0)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{null, !2842}
!2846 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !2834, file: !2835, line: 87, type: !2844, scopeLine: 87, flags: DIFlagPrototyped, spFlags: 0)
!2847 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !2834, file: !2835, line: 89, type: !2848, scopeLine: 89, flags: DIFlagPrototyped, spFlags: 0)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!370, !2850}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2834)
!2852 = !DISubprogram(name: "exception_ptr", scope: !2834, file: !2835, line: 97, type: !2844, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2853 = !DISubprogram(name: "exception_ptr", scope: !2834, file: !2835, line: 99, type: !2854, scopeLine: 99, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{null, !2842, !2856}
!2856 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2851, size: 64)
!2857 = !DISubprogram(name: "exception_ptr", scope: !2834, file: !2835, line: 102, type: !2858, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{null, !2842, !365}
!2860 = !DISubprogram(name: "exception_ptr", scope: !2834, file: !2835, line: 106, type: !2861, scopeLine: 106, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{null, !2842, !2863}
!2863 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2834, size: 64)
!2864 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !2834, file: !2835, line: 119, type: !2865, scopeLine: 119, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!2867, !2842, !2856}
!2867 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2834, size: 64)
!2868 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !2834, file: !2835, line: 123, type: !2869, scopeLine: 123, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{!2867, !2842, !2863}
!2871 = !DISubprogram(name: "~exception_ptr", scope: !2834, file: !2835, line: 130, type: !2844, scopeLine: 130, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2872 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !2834, file: !2835, line: 133, type: !2873, scopeLine: 133, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{null, !2842, !2867}
!2875 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !2834, file: !2835, line: 145, type: !2876, scopeLine: 145, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: 0)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!13, !2850}
!2878 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !2834, file: !2835, line: 154, type: !2879, scopeLine: 154, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!2881, !2850}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2883)
!2883 = !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !2, file: !2884, line: 88, flags: DIFlagFwdDecl)
!2884 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/typeinfo", directory: "")
!2885 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2836, entity: !2886, file: !2835, line: 74)
!2886 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !2, file: !2835, line: 70, type: !2887, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: 0)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !2834}
!2889 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2890, file: !2894, line: 83)
!2890 = !DISubprogram(name: "acos", scope: !2891, file: !2891, line: 53, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2891 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "")
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!1233, !1233}
!2894 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cmath", directory: "")
!2895 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2896, file: !2894, line: 102)
!2896 = !DISubprogram(name: "asin", scope: !2891, file: !2891, line: 55, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2897 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2898, file: !2894, line: 121)
!2898 = !DISubprogram(name: "atan", scope: !2891, file: !2891, line: 57, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2899 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2900, file: !2894, line: 140)
!2900 = !DISubprogram(name: "atan2", scope: !2891, file: !2891, line: 59, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!1233, !1233, !1233}
!2903 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2904, file: !2894, line: 161)
!2904 = !DISubprogram(name: "ceil", scope: !2891, file: !2891, line: 159, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2905 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2906, file: !2894, line: 180)
!2906 = !DISubprogram(name: "cos", scope: !2891, file: !2891, line: 62, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2908, file: !2894, line: 199)
!2908 = !DISubprogram(name: "cosh", scope: !2891, file: !2891, line: 71, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2909 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2910, file: !2894, line: 218)
!2910 = !DISubprogram(name: "exp", scope: !2891, file: !2891, line: 95, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2912, file: !2894, line: 237)
!2912 = !DISubprogram(name: "fabs", scope: !2891, file: !2891, line: 162, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2914, file: !2894, line: 256)
!2914 = !DISubprogram(name: "floor", scope: !2891, file: !2891, line: 165, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2916, file: !2894, line: 275)
!2916 = !DISubprogram(name: "fmod", scope: !2891, file: !2891, line: 168, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!2917 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2918, file: !2894, line: 296)
!2918 = !DISubprogram(name: "frexp", scope: !2891, file: !2891, line: 98, type: !2919, flags: DIFlagPrototyped, spFlags: 0)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!1233, !1233, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!2922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2923, file: !2894, line: 315)
!2923 = !DISubprogram(name: "ldexp", scope: !2891, file: !2891, line: 101, type: !2924, flags: DIFlagPrototyped, spFlags: 0)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!1233, !1233, !11}
!2926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2927, file: !2894, line: 334)
!2927 = !DISubprogram(name: "log", scope: !2891, file: !2891, line: 104, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2929, file: !2894, line: 353)
!2929 = !DISubprogram(name: "log10", scope: !2891, file: !2891, line: 107, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2931, file: !2894, line: 372)
!2931 = !DISubprogram(name: "modf", scope: !2891, file: !2891, line: 110, type: !2932, flags: DIFlagPrototyped, spFlags: 0)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!1233, !1233, !2934}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!2935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2936, file: !2894, line: 384)
!2936 = !DISubprogram(name: "pow", scope: !2891, file: !2891, line: 140, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!2937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2938, file: !2894, line: 421)
!2938 = !DISubprogram(name: "sin", scope: !2891, file: !2891, line: 64, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2940, file: !2894, line: 440)
!2940 = !DISubprogram(name: "sinh", scope: !2891, file: !2891, line: 73, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2941 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2942, file: !2894, line: 459)
!2942 = !DISubprogram(name: "sqrt", scope: !2891, file: !2891, line: 143, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2944, file: !2894, line: 478)
!2944 = !DISubprogram(name: "tan", scope: !2891, file: !2891, line: 66, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2945 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2946, file: !2894, line: 497)
!2946 = !DISubprogram(name: "tanh", scope: !2891, file: !2891, line: 75, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2948, file: !2894, line: 1065)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !2949, line: 150, baseType: !1233)
!2949 = !DIFile(filename: "/usr/include/math.h", directory: "")
!2950 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2951, file: !2894, line: 1066)
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !2949, line: 149, baseType: !2816)
!2952 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2953, file: !2894, line: 1069)
!2953 = !DISubprogram(name: "acosh", scope: !2891, file: !2891, line: 85, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2954 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2955, file: !2894, line: 1070)
!2955 = !DISubprogram(name: "acoshf", scope: !2891, file: !2891, line: 85, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!2816, !2816}
!2958 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2959, file: !2894, line: 1071)
!2959 = !DISubprogram(name: "acoshl", scope: !2891, file: !2891, line: 85, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!2821, !2821}
!2962 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2963, file: !2894, line: 1073)
!2963 = !DISubprogram(name: "asinh", scope: !2891, file: !2891, line: 87, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2964 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2965, file: !2894, line: 1074)
!2965 = !DISubprogram(name: "asinhf", scope: !2891, file: !2891, line: 87, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!2966 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2967, file: !2894, line: 1075)
!2967 = !DISubprogram(name: "asinhl", scope: !2891, file: !2891, line: 87, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!2968 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2969, file: !2894, line: 1077)
!2969 = !DISubprogram(name: "atanh", scope: !2891, file: !2891, line: 89, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2970 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2971, file: !2894, line: 1078)
!2971 = !DISubprogram(name: "atanhf", scope: !2891, file: !2891, line: 89, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!2972 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2973, file: !2894, line: 1079)
!2973 = !DISubprogram(name: "atanhl", scope: !2891, file: !2891, line: 89, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!2974 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2975, file: !2894, line: 1081)
!2975 = !DISubprogram(name: "cbrt", scope: !2891, file: !2891, line: 152, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2976 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2977, file: !2894, line: 1082)
!2977 = !DISubprogram(name: "cbrtf", scope: !2891, file: !2891, line: 152, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!2978 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2979, file: !2894, line: 1083)
!2979 = !DISubprogram(name: "cbrtl", scope: !2891, file: !2891, line: 152, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!2980 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2981, file: !2894, line: 1085)
!2981 = !DISubprogram(name: "copysign", scope: !2891, file: !2891, line: 196, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!2982 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2983, file: !2894, line: 1086)
!2983 = !DISubprogram(name: "copysignf", scope: !2891, file: !2891, line: 196, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{!2816, !2816, !2816}
!2986 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2987, file: !2894, line: 1087)
!2987 = !DISubprogram(name: "copysignl", scope: !2891, file: !2891, line: 196, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!2821, !2821, !2821}
!2990 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2991, file: !2894, line: 1089)
!2991 = !DISubprogram(name: "erf", scope: !2891, file: !2891, line: 228, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2992 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2993, file: !2894, line: 1090)
!2993 = !DISubprogram(name: "erff", scope: !2891, file: !2891, line: 228, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!2994 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2995, file: !2894, line: 1091)
!2995 = !DISubprogram(name: "erfl", scope: !2891, file: !2891, line: 228, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!2996 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2997, file: !2894, line: 1093)
!2997 = !DISubprogram(name: "erfc", scope: !2891, file: !2891, line: 229, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!2998 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !2999, file: !2894, line: 1094)
!2999 = !DISubprogram(name: "erfcf", scope: !2891, file: !2891, line: 229, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3000 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3001, file: !2894, line: 1095)
!3001 = !DISubprogram(name: "erfcl", scope: !2891, file: !2891, line: 229, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3002 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3003, file: !2894, line: 1097)
!3003 = !DISubprogram(name: "exp2", scope: !2891, file: !2891, line: 130, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3004 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3005, file: !2894, line: 1098)
!3005 = !DISubprogram(name: "exp2f", scope: !2891, file: !2891, line: 130, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3006 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3007, file: !2894, line: 1099)
!3007 = !DISubprogram(name: "exp2l", scope: !2891, file: !2891, line: 130, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3008 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3009, file: !2894, line: 1101)
!3009 = !DISubprogram(name: "expm1", scope: !2891, file: !2891, line: 119, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3010 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3011, file: !2894, line: 1102)
!3011 = !DISubprogram(name: "expm1f", scope: !2891, file: !2891, line: 119, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3012 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3013, file: !2894, line: 1103)
!3013 = !DISubprogram(name: "expm1l", scope: !2891, file: !2891, line: 119, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3014 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3015, file: !2894, line: 1105)
!3015 = !DISubprogram(name: "fdim", scope: !2891, file: !2891, line: 326, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!3016 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3017, file: !2894, line: 1106)
!3017 = !DISubprogram(name: "fdimf", scope: !2891, file: !2891, line: 326, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!3018 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3019, file: !2894, line: 1107)
!3019 = !DISubprogram(name: "fdiml", scope: !2891, file: !2891, line: 326, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3020 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3021, file: !2894, line: 1109)
!3021 = !DISubprogram(name: "fma", scope: !2891, file: !2891, line: 335, type: !3022, flags: DIFlagPrototyped, spFlags: 0)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!1233, !1233, !1233, !1233}
!3024 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3025, file: !2894, line: 1110)
!3025 = !DISubprogram(name: "fmaf", scope: !2891, file: !2891, line: 335, type: !3026, flags: DIFlagPrototyped, spFlags: 0)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!2816, !2816, !2816, !2816}
!3028 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3029, file: !2894, line: 1111)
!3029 = !DISubprogram(name: "fmal", scope: !2891, file: !2891, line: 335, type: !3030, flags: DIFlagPrototyped, spFlags: 0)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!2821, !2821, !2821, !2821}
!3032 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3033, file: !2894, line: 1113)
!3033 = !DISubprogram(name: "fmax", scope: !2891, file: !2891, line: 329, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!3034 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3035, file: !2894, line: 1114)
!3035 = !DISubprogram(name: "fmaxf", scope: !2891, file: !2891, line: 329, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!3036 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3037, file: !2894, line: 1115)
!3037 = !DISubprogram(name: "fmaxl", scope: !2891, file: !2891, line: 329, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3038 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3039, file: !2894, line: 1117)
!3039 = !DISubprogram(name: "fmin", scope: !2891, file: !2891, line: 332, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!3040 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3041, file: !2894, line: 1118)
!3041 = !DISubprogram(name: "fminf", scope: !2891, file: !2891, line: 332, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!3042 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3043, file: !2894, line: 1119)
!3043 = !DISubprogram(name: "fminl", scope: !2891, file: !2891, line: 332, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3044 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3045, file: !2894, line: 1121)
!3045 = !DISubprogram(name: "hypot", scope: !2891, file: !2891, line: 147, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!3046 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3047, file: !2894, line: 1122)
!3047 = !DISubprogram(name: "hypotf", scope: !2891, file: !2891, line: 147, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!3048 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3049, file: !2894, line: 1123)
!3049 = !DISubprogram(name: "hypotl", scope: !2891, file: !2891, line: 147, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3050 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3051, file: !2894, line: 1125)
!3051 = !DISubprogram(name: "ilogb", scope: !2891, file: !2891, line: 280, type: !3052, flags: DIFlagPrototyped, spFlags: 0)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!11, !1233}
!3054 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3055, file: !2894, line: 1126)
!3055 = !DISubprogram(name: "ilogbf", scope: !2891, file: !2891, line: 280, type: !3056, flags: DIFlagPrototyped, spFlags: 0)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!11, !2816}
!3058 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3059, file: !2894, line: 1127)
!3059 = !DISubprogram(name: "ilogbl", scope: !2891, file: !2891, line: 280, type: !3060, flags: DIFlagPrototyped, spFlags: 0)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!11, !2821}
!3062 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3063, file: !2894, line: 1129)
!3063 = !DISubprogram(name: "lgamma", scope: !2891, file: !2891, line: 230, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3064 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3065, file: !2894, line: 1130)
!3065 = !DISubprogram(name: "lgammaf", scope: !2891, file: !2891, line: 230, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3066 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3067, file: !2894, line: 1131)
!3067 = !DISubprogram(name: "lgammal", scope: !2891, file: !2891, line: 230, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3068 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3069, file: !2894, line: 1134)
!3069 = !DISubprogram(name: "llrint", scope: !2891, file: !2891, line: 316, type: !3070, flags: DIFlagPrototyped, spFlags: 0)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!2787, !1233}
!3072 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3073, file: !2894, line: 1135)
!3073 = !DISubprogram(name: "llrintf", scope: !2891, file: !2891, line: 316, type: !3074, flags: DIFlagPrototyped, spFlags: 0)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!2787, !2816}
!3076 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3077, file: !2894, line: 1136)
!3077 = !DISubprogram(name: "llrintl", scope: !2891, file: !2891, line: 316, type: !3078, flags: DIFlagPrototyped, spFlags: 0)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!2787, !2821}
!3080 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3081, file: !2894, line: 1138)
!3081 = !DISubprogram(name: "llround", scope: !2891, file: !2891, line: 322, type: !3070, flags: DIFlagPrototyped, spFlags: 0)
!3082 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3083, file: !2894, line: 1139)
!3083 = !DISubprogram(name: "llroundf", scope: !2891, file: !2891, line: 322, type: !3074, flags: DIFlagPrototyped, spFlags: 0)
!3084 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3085, file: !2894, line: 1140)
!3085 = !DISubprogram(name: "llroundl", scope: !2891, file: !2891, line: 322, type: !3078, flags: DIFlagPrototyped, spFlags: 0)
!3086 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3087, file: !2894, line: 1143)
!3087 = !DISubprogram(name: "log1p", scope: !2891, file: !2891, line: 122, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3088 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3089, file: !2894, line: 1144)
!3089 = !DISubprogram(name: "log1pf", scope: !2891, file: !2891, line: 122, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3090 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3091, file: !2894, line: 1145)
!3091 = !DISubprogram(name: "log1pl", scope: !2891, file: !2891, line: 122, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3092 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3093, file: !2894, line: 1147)
!3093 = !DISubprogram(name: "log2", scope: !2891, file: !2891, line: 133, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3094 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3095, file: !2894, line: 1148)
!3095 = !DISubprogram(name: "log2f", scope: !2891, file: !2891, line: 133, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3096 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3097, file: !2894, line: 1149)
!3097 = !DISubprogram(name: "log2l", scope: !2891, file: !2891, line: 133, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3098 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3099, file: !2894, line: 1151)
!3099 = !DISubprogram(name: "logb", scope: !2891, file: !2891, line: 125, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3100 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3101, file: !2894, line: 1152)
!3101 = !DISubprogram(name: "logbf", scope: !2891, file: !2891, line: 125, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3103, file: !2894, line: 1153)
!3103 = !DISubprogram(name: "logbl", scope: !2891, file: !2891, line: 125, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3105, file: !2894, line: 1155)
!3105 = !DISubprogram(name: "lrint", scope: !2891, file: !2891, line: 314, type: !3106, flags: DIFlagPrototyped, spFlags: 0)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!1229, !1233}
!3108 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3109, file: !2894, line: 1156)
!3109 = !DISubprogram(name: "lrintf", scope: !2891, file: !2891, line: 314, type: !3110, flags: DIFlagPrototyped, spFlags: 0)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!1229, !2816}
!3112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3113, file: !2894, line: 1157)
!3113 = !DISubprogram(name: "lrintl", scope: !2891, file: !2891, line: 314, type: !3114, flags: DIFlagPrototyped, spFlags: 0)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!1229, !2821}
!3116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3117, file: !2894, line: 1159)
!3117 = !DISubprogram(name: "lround", scope: !2891, file: !2891, line: 320, type: !3106, flags: DIFlagPrototyped, spFlags: 0)
!3118 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3119, file: !2894, line: 1160)
!3119 = !DISubprogram(name: "lroundf", scope: !2891, file: !2891, line: 320, type: !3110, flags: DIFlagPrototyped, spFlags: 0)
!3120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3121, file: !2894, line: 1161)
!3121 = !DISubprogram(name: "lroundl", scope: !2891, file: !2891, line: 320, type: !3114, flags: DIFlagPrototyped, spFlags: 0)
!3122 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3123, file: !2894, line: 1163)
!3123 = !DISubprogram(name: "nan", scope: !2891, file: !2891, line: 201, type: !2672, flags: DIFlagPrototyped, spFlags: 0)
!3124 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3125, file: !2894, line: 1164)
!3125 = !DISubprogram(name: "nanf", scope: !2891, file: !2891, line: 201, type: !3126, flags: DIFlagPrototyped, spFlags: 0)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!2816, !167}
!3128 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3129, file: !2894, line: 1165)
!3129 = !DISubprogram(name: "nanl", scope: !2891, file: !2891, line: 201, type: !3130, flags: DIFlagPrototyped, spFlags: 0)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!2821, !167}
!3132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3133, file: !2894, line: 1167)
!3133 = !DISubprogram(name: "nearbyint", scope: !2891, file: !2891, line: 294, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3134 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3135, file: !2894, line: 1168)
!3135 = !DISubprogram(name: "nearbyintf", scope: !2891, file: !2891, line: 294, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3137, file: !2894, line: 1169)
!3137 = !DISubprogram(name: "nearbyintl", scope: !2891, file: !2891, line: 294, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3138 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3139, file: !2894, line: 1171)
!3139 = !DISubprogram(name: "nextafter", scope: !2891, file: !2891, line: 259, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!3140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3141, file: !2894, line: 1172)
!3141 = !DISubprogram(name: "nextafterf", scope: !2891, file: !2891, line: 259, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!3142 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3143, file: !2894, line: 1173)
!3143 = !DISubprogram(name: "nextafterl", scope: !2891, file: !2891, line: 259, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3145, file: !2894, line: 1175)
!3145 = !DISubprogram(name: "nexttoward", scope: !2891, file: !2891, line: 261, type: !3146, flags: DIFlagPrototyped, spFlags: 0)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!1233, !1233, !2821}
!3148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3149, file: !2894, line: 1176)
!3149 = !DISubprogram(name: "nexttowardf", scope: !2891, file: !2891, line: 261, type: !3150, flags: DIFlagPrototyped, spFlags: 0)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!2816, !2816, !2821}
!3152 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3153, file: !2894, line: 1177)
!3153 = !DISubprogram(name: "nexttowardl", scope: !2891, file: !2891, line: 261, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3154 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3155, file: !2894, line: 1179)
!3155 = !DISubprogram(name: "remainder", scope: !2891, file: !2891, line: 272, type: !2901, flags: DIFlagPrototyped, spFlags: 0)
!3156 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3157, file: !2894, line: 1180)
!3157 = !DISubprogram(name: "remainderf", scope: !2891, file: !2891, line: 272, type: !2984, flags: DIFlagPrototyped, spFlags: 0)
!3158 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3159, file: !2894, line: 1181)
!3159 = !DISubprogram(name: "remainderl", scope: !2891, file: !2891, line: 272, type: !2988, flags: DIFlagPrototyped, spFlags: 0)
!3160 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3161, file: !2894, line: 1183)
!3161 = !DISubprogram(name: "remquo", scope: !2891, file: !2891, line: 307, type: !3162, flags: DIFlagPrototyped, spFlags: 0)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!1233, !1233, !1233, !2921}
!3164 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3165, file: !2894, line: 1184)
!3165 = !DISubprogram(name: "remquof", scope: !2891, file: !2891, line: 307, type: !3166, flags: DIFlagPrototyped, spFlags: 0)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!2816, !2816, !2816, !2921}
!3168 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3169, file: !2894, line: 1185)
!3169 = !DISubprogram(name: "remquol", scope: !2891, file: !2891, line: 307, type: !3170, flags: DIFlagPrototyped, spFlags: 0)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!2821, !2821, !2821, !2921}
!3172 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3173, file: !2894, line: 1187)
!3173 = !DISubprogram(name: "rint", scope: !2891, file: !2891, line: 256, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3174 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3175, file: !2894, line: 1188)
!3175 = !DISubprogram(name: "rintf", scope: !2891, file: !2891, line: 256, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3176 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3177, file: !2894, line: 1189)
!3177 = !DISubprogram(name: "rintl", scope: !2891, file: !2891, line: 256, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3178 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3179, file: !2894, line: 1191)
!3179 = !DISubprogram(name: "round", scope: !2891, file: !2891, line: 298, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3180 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3181, file: !2894, line: 1192)
!3181 = !DISubprogram(name: "roundf", scope: !2891, file: !2891, line: 298, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3182 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3183, file: !2894, line: 1193)
!3183 = !DISubprogram(name: "roundl", scope: !2891, file: !2891, line: 298, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3184 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3185, file: !2894, line: 1195)
!3185 = !DISubprogram(name: "scalbln", scope: !2891, file: !2891, line: 290, type: !3186, flags: DIFlagPrototyped, spFlags: 0)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!1233, !1233, !1229}
!3188 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3189, file: !2894, line: 1196)
!3189 = !DISubprogram(name: "scalblnf", scope: !2891, file: !2891, line: 290, type: !3190, flags: DIFlagPrototyped, spFlags: 0)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{!2816, !2816, !1229}
!3192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3193, file: !2894, line: 1197)
!3193 = !DISubprogram(name: "scalblnl", scope: !2891, file: !2891, line: 290, type: !3194, flags: DIFlagPrototyped, spFlags: 0)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!2821, !2821, !1229}
!3196 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3197, file: !2894, line: 1199)
!3197 = !DISubprogram(name: "scalbn", scope: !2891, file: !2891, line: 276, type: !2924, flags: DIFlagPrototyped, spFlags: 0)
!3198 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3199, file: !2894, line: 1200)
!3199 = !DISubprogram(name: "scalbnf", scope: !2891, file: !2891, line: 276, type: !3200, flags: DIFlagPrototyped, spFlags: 0)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{!2816, !2816, !11}
!3202 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3203, file: !2894, line: 1201)
!3203 = !DISubprogram(name: "scalbnl", scope: !2891, file: !2891, line: 276, type: !3204, flags: DIFlagPrototyped, spFlags: 0)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!2821, !2821, !11}
!3206 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3207, file: !2894, line: 1203)
!3207 = !DISubprogram(name: "tgamma", scope: !2891, file: !2891, line: 235, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3208 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3209, file: !2894, line: 1204)
!3209 = !DISubprogram(name: "tgammaf", scope: !2891, file: !2891, line: 235, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3210 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3211, file: !2894, line: 1205)
!3211 = !DISubprogram(name: "tgammal", scope: !2891, file: !2891, line: 235, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3213, file: !2894, line: 1207)
!3213 = !DISubprogram(name: "trunc", scope: !2891, file: !2891, line: 302, type: !2892, flags: DIFlagPrototyped, spFlags: 0)
!3214 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3215, file: !2894, line: 1208)
!3215 = !DISubprogram(name: "truncf", scope: !2891, file: !2891, line: 302, type: !2956, flags: DIFlagPrototyped, spFlags: 0)
!3216 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3217, file: !2894, line: 1209)
!3217 = !DISubprogram(name: "truncl", scope: !2891, file: !2891, line: 302, type: !2960, flags: DIFlagPrototyped, spFlags: 0)
!3218 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !3219, file: !3223, line: 38)
!3219 = !DISubprogram(name: "abs", linkageName: "_ZSt3absg", scope: !2, file: !2650, line: 103, type: !3220, flags: DIFlagPrototyped, spFlags: 0)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{!3222, !3222}
!3222 = !DIBasicType(name: "__float128", size: 128, encoding: DW_ATE_float)
!3223 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/math.h", directory: "")
!3224 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !3225, file: !3223, line: 54)
!3225 = !DISubprogram(name: "modf", linkageName: "_ZSt4modfePe", scope: !2, file: !2894, line: 380, type: !3226, flags: DIFlagPrototyped, spFlags: 0)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!2821, !2821, !3228}
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!3229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3230, file: !3245, line: 64)
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !3231, line: 6, baseType: !3232)
!3231 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !3233, line: 21, baseType: !3234)
!3233 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3233, line: 13, size: 64, flags: DIFlagTypePassByValue, elements: !3235, identifier: "_ZTS11__mbstate_t")
!3235 = !{!3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3234, file: !3233, line: 15, baseType: !11, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3234, file: !3233, line: 20, baseType: !3238, size: 32, offset: 32)
!3238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3234, file: !3233, line: 16, size: 32, flags: DIFlagTypePassByValue, elements: !3239, identifier: "_ZTSN11__mbstate_tUt_E")
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3238, file: !3233, line: 18, baseType: !36, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3238, file: !3233, line: 19, baseType: !3242, size: 32)
!3242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 32, elements: !3243)
!3243 = !{!3244}
!3244 = !DISubrange(count: 4)
!3245 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cwchar", directory: "")
!3246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3247, file: !3245, line: 141)
!3247 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !3248, line: 20, baseType: !36)
!3248 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "")
!3249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3250, file: !3245, line: 143)
!3250 = !DISubprogram(name: "btowc", scope: !3251, file: !3251, line: 284, type: !3252, flags: DIFlagPrototyped, spFlags: 0)
!3251 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!3247, !11}
!3254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3255, file: !3245, line: 144)
!3255 = !DISubprogram(name: "fgetwc", scope: !3251, file: !3251, line: 726, type: !3256, flags: DIFlagPrototyped, spFlags: 0)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!3247, !3258}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !3260, line: 5, baseType: !3261)
!3260 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "")
!3261 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3262, line: 49, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!3262 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3264, file: !3245, line: 145)
!3264 = !DISubprogram(name: "fgetws", scope: !3251, file: !3251, line: 755, type: !3265, flags: DIFlagPrototyped, spFlags: 0)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!2731, !2730, !11, !3267}
!3267 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3258)
!3268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3269, file: !3245, line: 146)
!3269 = !DISubprogram(name: "fputwc", scope: !3251, file: !3251, line: 740, type: !3270, flags: DIFlagPrototyped, spFlags: 0)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!3247, !2732, !3258}
!3272 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3273, file: !3245, line: 147)
!3273 = !DISubprogram(name: "fputws", scope: !3251, file: !3251, line: 762, type: !3274, flags: DIFlagPrototyped, spFlags: 0)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!11, !2775, !3267}
!3276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3277, file: !3245, line: 148)
!3277 = !DISubprogram(name: "fwide", scope: !3251, file: !3251, line: 573, type: !3278, flags: DIFlagPrototyped, spFlags: 0)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!11, !3258, !11}
!3280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3281, file: !3245, line: 149)
!3281 = !DISubprogram(name: "fwprintf", scope: !3251, file: !3251, line: 580, type: !3282, flags: DIFlagPrototyped, spFlags: 0)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!11, !3267, !2775, null}
!3284 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3285, file: !3245, line: 150)
!3285 = !DISubprogram(name: "fwscanf", linkageName: "__isoc99_fwscanf", scope: !3251, file: !3251, line: 640, type: !3282, flags: DIFlagPrototyped, spFlags: 0)
!3286 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3287, file: !3245, line: 151)
!3287 = !DISubprogram(name: "getwc", scope: !3251, file: !3251, line: 727, type: !3256, flags: DIFlagPrototyped, spFlags: 0)
!3288 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3289, file: !3245, line: 152)
!3289 = !DISubprogram(name: "getwchar", scope: !3251, file: !3251, line: 733, type: !3290, flags: DIFlagPrototyped, spFlags: 0)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!3247}
!3292 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3293, file: !3245, line: 153)
!3293 = !DISubprogram(name: "mbrlen", scope: !3251, file: !3251, line: 307, type: !3294, flags: DIFlagPrototyped, spFlags: 0)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!2686, !2733, !2686, !3296}
!3296 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3297)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3298 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3299, file: !3245, line: 154)
!3299 = !DISubprogram(name: "mbrtowc", scope: !3251, file: !3251, line: 296, type: !3300, flags: DIFlagPrototyped, spFlags: 0)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!2686, !2730, !2733, !2686, !3296}
!3302 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3303, file: !3245, line: 155)
!3303 = !DISubprogram(name: "mbsinit", scope: !3251, file: !3251, line: 292, type: !3304, flags: DIFlagPrototyped, spFlags: 0)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!11, !3306}
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3230)
!3308 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3309, file: !3245, line: 156)
!3309 = !DISubprogram(name: "mbsrtowcs", scope: !3251, file: !3251, line: 337, type: !3310, flags: DIFlagPrototyped, spFlags: 0)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!2686, !2730, !3312, !2686, !3296}
!3312 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1518)
!3313 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3314, file: !3245, line: 157)
!3314 = !DISubprogram(name: "putwc", scope: !3251, file: !3251, line: 741, type: !3270, flags: DIFlagPrototyped, spFlags: 0)
!3315 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3316, file: !3245, line: 158)
!3316 = !DISubprogram(name: "putwchar", scope: !3251, file: !3251, line: 747, type: !3317, flags: DIFlagPrototyped, spFlags: 0)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!3247, !2732}
!3319 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3320, file: !3245, line: 160)
!3320 = !DISubprogram(name: "swprintf", scope: !3251, file: !3251, line: 590, type: !3321, flags: DIFlagPrototyped, spFlags: 0)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!11, !2730, !2686, !2775, null}
!3323 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3324, file: !3245, line: 162)
!3324 = !DISubprogram(name: "swscanf", linkageName: "__isoc99_swscanf", scope: !3251, file: !3251, line: 647, type: !3325, flags: DIFlagPrototyped, spFlags: 0)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!11, !2775, !2775, null}
!3327 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3328, file: !3245, line: 163)
!3328 = !DISubprogram(name: "ungetwc", scope: !3251, file: !3251, line: 770, type: !3329, flags: DIFlagPrototyped, spFlags: 0)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!3247, !3247, !3258}
!3331 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3332, file: !3245, line: 164)
!3332 = !DISubprogram(name: "vfwprintf", scope: !3251, file: !3251, line: 598, type: !3333, flags: DIFlagPrototyped, spFlags: 0)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{!11, !3267, !2775, !3335}
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !31, size: 192, flags: DIFlagTypePassByValue, elements: !3337, identifier: "_ZTS13__va_list_tag")
!3337 = !{!3338, !3339, !3340, !3341}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3336, file: !31, baseType: !36, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3336, file: !31, baseType: !36, size: 32, offset: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3336, file: !31, baseType: !370, size: 64, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3336, file: !31, baseType: !370, size: 64, offset: 128)
!3342 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3343, file: !3245, line: 166)
!3343 = !DISubprogram(name: "vfwscanf", linkageName: "__isoc99_vfwscanf", scope: !3251, file: !3251, line: 693, type: !3333, flags: DIFlagPrototyped, spFlags: 0)
!3344 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3345, file: !3245, line: 169)
!3345 = !DISubprogram(name: "vswprintf", scope: !3251, file: !3251, line: 611, type: !3346, flags: DIFlagPrototyped, spFlags: 0)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!11, !2730, !2686, !2775, !3335}
!3348 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3349, file: !3245, line: 172)
!3349 = !DISubprogram(name: "vswscanf", linkageName: "__isoc99_vswscanf", scope: !3251, file: !3251, line: 700, type: !3350, flags: DIFlagPrototyped, spFlags: 0)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!11, !2775, !2775, !3335}
!3352 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3353, file: !3245, line: 174)
!3353 = !DISubprogram(name: "vwprintf", scope: !3251, file: !3251, line: 606, type: !3354, flags: DIFlagPrototyped, spFlags: 0)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!11, !2775, !3335}
!3356 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3357, file: !3245, line: 176)
!3357 = !DISubprogram(name: "vwscanf", linkageName: "__isoc99_vwscanf", scope: !3251, file: !3251, line: 697, type: !3354, flags: DIFlagPrototyped, spFlags: 0)
!3358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3359, file: !3245, line: 178)
!3359 = !DISubprogram(name: "wcrtomb", scope: !3251, file: !3251, line: 301, type: !3360, flags: DIFlagPrototyped, spFlags: 0)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!2686, !2774, !2732, !3296}
!3362 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3363, file: !3245, line: 179)
!3363 = !DISubprogram(name: "wcscat", scope: !3251, file: !3251, line: 97, type: !3364, flags: DIFlagPrototyped, spFlags: 0)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!2731, !2730, !2775}
!3366 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3367, file: !3245, line: 180)
!3367 = !DISubprogram(name: "wcscmp", scope: !3251, file: !3251, line: 106, type: !3368, flags: DIFlagPrototyped, spFlags: 0)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!11, !2776, !2776}
!3370 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3371, file: !3245, line: 181)
!3371 = !DISubprogram(name: "wcscoll", scope: !3251, file: !3251, line: 131, type: !3368, flags: DIFlagPrototyped, spFlags: 0)
!3372 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3373, file: !3245, line: 182)
!3373 = !DISubprogram(name: "wcscpy", scope: !3251, file: !3251, line: 87, type: !3364, flags: DIFlagPrototyped, spFlags: 0)
!3374 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3375, file: !3245, line: 183)
!3375 = !DISubprogram(name: "wcscspn", scope: !3251, file: !3251, line: 187, type: !3376, flags: DIFlagPrototyped, spFlags: 0)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!2686, !2776, !2776}
!3378 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3379, file: !3245, line: 184)
!3379 = !DISubprogram(name: "wcsftime", scope: !3251, file: !3251, line: 834, type: !3380, flags: DIFlagPrototyped, spFlags: 0)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!2686, !2730, !2686, !2775, !3382}
!3382 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3383)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3385)
!3385 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !3251, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!3386 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3387, file: !3245, line: 185)
!3387 = !DISubprogram(name: "wcslen", scope: !3251, file: !3251, line: 222, type: !3388, flags: DIFlagPrototyped, spFlags: 0)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!2686, !2776}
!3390 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3391, file: !3245, line: 186)
!3391 = !DISubprogram(name: "wcsncat", scope: !3251, file: !3251, line: 101, type: !3392, flags: DIFlagPrototyped, spFlags: 0)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!2731, !2730, !2775, !2686}
!3394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3395, file: !3245, line: 187)
!3395 = !DISubprogram(name: "wcsncmp", scope: !3251, file: !3251, line: 109, type: !3396, flags: DIFlagPrototyped, spFlags: 0)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!11, !2776, !2776, !2686}
!3398 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3399, file: !3245, line: 188)
!3399 = !DISubprogram(name: "wcsncpy", scope: !3251, file: !3251, line: 92, type: !3392, flags: DIFlagPrototyped, spFlags: 0)
!3400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3401, file: !3245, line: 189)
!3401 = !DISubprogram(name: "wcsrtombs", scope: !3251, file: !3251, line: 343, type: !3402, flags: DIFlagPrototyped, spFlags: 0)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!2686, !2774, !3404, !2686, !3296}
!3404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3405)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!3406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3407, file: !3245, line: 190)
!3407 = !DISubprogram(name: "wcsspn", scope: !3251, file: !3251, line: 191, type: !3376, flags: DIFlagPrototyped, spFlags: 0)
!3408 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3409, file: !3245, line: 191)
!3409 = !DISubprogram(name: "wcstod", scope: !3251, file: !3251, line: 377, type: !3410, flags: DIFlagPrototyped, spFlags: 0)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!1233, !2775, !3412}
!3412 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3413)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!3414 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3415, file: !3245, line: 193)
!3415 = !DISubprogram(name: "wcstof", scope: !3251, file: !3251, line: 382, type: !3416, flags: DIFlagPrototyped, spFlags: 0)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!2816, !2775, !3412}
!3418 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3419, file: !3245, line: 195)
!3419 = !DISubprogram(name: "wcstok", scope: !3251, file: !3251, line: 217, type: !3420, flags: DIFlagPrototyped, spFlags: 0)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!2731, !2730, !2775, !3412}
!3422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3423, file: !3245, line: 196)
!3423 = !DISubprogram(name: "wcstol", scope: !3251, file: !3251, line: 428, type: !3424, flags: DIFlagPrototyped, spFlags: 0)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!1229, !2775, !3412, !11}
!3426 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3427, file: !3245, line: 197)
!3427 = !DISubprogram(name: "wcstoul", scope: !3251, file: !3251, line: 433, type: !3428, flags: DIFlagPrototyped, spFlags: 0)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!264, !2775, !3412, !11}
!3430 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3431, file: !3245, line: 198)
!3431 = !DISubprogram(name: "wcsxfrm", scope: !3251, file: !3251, line: 135, type: !3432, flags: DIFlagPrototyped, spFlags: 0)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!2686, !2730, !2775, !2686}
!3434 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3435, file: !3245, line: 199)
!3435 = !DISubprogram(name: "wctob", scope: !3251, file: !3251, line: 288, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!11, !3247}
!3438 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3439, file: !3245, line: 200)
!3439 = !DISubprogram(name: "wmemcmp", scope: !3251, file: !3251, line: 258, type: !3396, flags: DIFlagPrototyped, spFlags: 0)
!3440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3441, file: !3245, line: 201)
!3441 = !DISubprogram(name: "wmemcpy", scope: !3251, file: !3251, line: 262, type: !3392, flags: DIFlagPrototyped, spFlags: 0)
!3442 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3443, file: !3245, line: 202)
!3443 = !DISubprogram(name: "wmemmove", scope: !3251, file: !3251, line: 267, type: !3444, flags: DIFlagPrototyped, spFlags: 0)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!2731, !2731, !2776, !2686}
!3446 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3447, file: !3245, line: 203)
!3447 = !DISubprogram(name: "wmemset", scope: !3251, file: !3251, line: 271, type: !3448, flags: DIFlagPrototyped, spFlags: 0)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!2731, !2731, !2732, !2686}
!3450 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3451, file: !3245, line: 204)
!3451 = !DISubprogram(name: "wprintf", scope: !3251, file: !3251, line: 587, type: !3452, flags: DIFlagPrototyped, spFlags: 0)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!11, !2775, null}
!3454 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3455, file: !3245, line: 205)
!3455 = !DISubprogram(name: "wscanf", linkageName: "__isoc99_wscanf", scope: !3251, file: !3251, line: 644, type: !3452, flags: DIFlagPrototyped, spFlags: 0)
!3456 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3457, file: !3245, line: 206)
!3457 = !DISubprogram(name: "wcschr", scope: !3251, file: !3251, line: 164, type: !3458, flags: DIFlagPrototyped, spFlags: 0)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!2731, !2776, !2732}
!3460 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3461, file: !3245, line: 207)
!3461 = !DISubprogram(name: "wcspbrk", scope: !3251, file: !3251, line: 201, type: !3462, flags: DIFlagPrototyped, spFlags: 0)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!2731, !2776, !2776}
!3464 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3465, file: !3245, line: 208)
!3465 = !DISubprogram(name: "wcsrchr", scope: !3251, file: !3251, line: 174, type: !3458, flags: DIFlagPrototyped, spFlags: 0)
!3466 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3467, file: !3245, line: 209)
!3467 = !DISubprogram(name: "wcsstr", scope: !3251, file: !3251, line: 212, type: !3462, flags: DIFlagPrototyped, spFlags: 0)
!3468 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3469, file: !3245, line: 210)
!3469 = !DISubprogram(name: "wmemchr", scope: !3251, file: !3251, line: 253, type: !3470, flags: DIFlagPrototyped, spFlags: 0)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!2731, !2776, !2732, !2686}
!3472 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3473, file: !3245, line: 251)
!3473 = !DISubprogram(name: "wcstold", scope: !3251, file: !3251, line: 384, type: !3474, flags: DIFlagPrototyped, spFlags: 0)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!2821, !2775, !3412}
!3476 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3477, file: !3245, line: 260)
!3477 = !DISubprogram(name: "wcstoll", scope: !3251, file: !3251, line: 441, type: !3478, flags: DIFlagPrototyped, spFlags: 0)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!2787, !2775, !3412, !11}
!3480 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3481, file: !3245, line: 261)
!3481 = !DISubprogram(name: "wcstoull", scope: !3251, file: !3251, line: 448, type: !3482, flags: DIFlagPrototyped, spFlags: 0)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!2811, !2775, !3412, !11}
!3484 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3473, file: !3245, line: 267)
!3485 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3477, file: !3245, line: 268)
!3486 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3481, file: !3245, line: 269)
!3487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3415, file: !3245, line: 283)
!3488 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3343, file: !3245, line: 286)
!3489 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3349, file: !3245, line: 289)
!3490 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3357, file: !3245, line: 292)
!3491 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3473, file: !3245, line: 296)
!3492 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3477, file: !3245, line: 297)
!3493 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3481, file: !3245, line: 298)
!3494 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3495, file: !3498, line: 47)
!3495 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1226, line: 24, baseType: !3496)
!3496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !1228, line: 37, baseType: !3497)
!3497 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3498 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cstdint", directory: "")
!3499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3500, file: !3498, line: 48)
!3500 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1226, line: 25, baseType: !3501)
!3501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !1228, line: 39, baseType: !3502)
!3502 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3504, file: !3498, line: 49)
!3504 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1226, line: 26, baseType: !3505)
!3505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !1228, line: 41, baseType: !11)
!3506 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1225, file: !3498, line: 50)
!3507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3508, file: !3498, line: 52)
!3508 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !3509, line: 58, baseType: !3497)
!3509 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3510 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3511, file: !3498, line: 53)
!3511 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !3509, line: 60, baseType: !1229)
!3512 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3513, file: !3498, line: 54)
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !3509, line: 61, baseType: !1229)
!3514 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3515, file: !3498, line: 55)
!3515 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !3509, line: 62, baseType: !1229)
!3516 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3517, file: !3498, line: 57)
!3517 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !3509, line: 43, baseType: !3518)
!3518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !1228, line: 52, baseType: !3496)
!3519 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3520, file: !3498, line: 58)
!3520 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !3509, line: 44, baseType: !3521)
!3521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !1228, line: 54, baseType: !3501)
!3522 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3523, file: !3498, line: 59)
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !3509, line: 45, baseType: !3524)
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !1228, line: 56, baseType: !3505)
!3525 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3526, file: !3498, line: 60)
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !3509, line: 46, baseType: !3527)
!3527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !1228, line: 58, baseType: !1227)
!3528 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3529, file: !3498, line: 62)
!3529 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3509, line: 101, baseType: !3530)
!3530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !1228, line: 72, baseType: !1229)
!3531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3532, file: !3498, line: 63)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3509, line: 87, baseType: !1229)
!3533 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3534, file: !3498, line: 65)
!3534 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !3535, line: 24, baseType: !3536)
!3535 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!3536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !1228, line: 38, baseType: !355)
!3537 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3538, file: !3498, line: 66)
!3538 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !3535, line: 25, baseType: !3539)
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !1228, line: 40, baseType: !3540)
!3540 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3541 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3542, file: !3498, line: 67)
!3542 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !3535, line: 26, baseType: !3543)
!3543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1228, line: 42, baseType: !36)
!3544 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3545, file: !3498, line: 68)
!3545 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !3535, line: 27, baseType: !3546)
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1228, line: 45, baseType: !264)
!3547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3548, file: !3498, line: 70)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !3509, line: 71, baseType: !355)
!3549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3550, file: !3498, line: 71)
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !3509, line: 73, baseType: !264)
!3551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3552, file: !3498, line: 72)
!3552 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !3509, line: 74, baseType: !264)
!3553 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3554, file: !3498, line: 73)
!3554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !3509, line: 75, baseType: !264)
!3555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3556, file: !3498, line: 75)
!3556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !3509, line: 49, baseType: !3557)
!3557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !1228, line: 53, baseType: !3536)
!3558 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3559, file: !3498, line: 76)
!3559 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !3509, line: 50, baseType: !3560)
!3560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !1228, line: 55, baseType: !3539)
!3561 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3562, file: !3498, line: 77)
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !3509, line: 51, baseType: !3563)
!3563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !1228, line: 57, baseType: !3543)
!3564 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3565, file: !3498, line: 78)
!3565 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !3509, line: 52, baseType: !3566)
!3566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !1228, line: 59, baseType: !3546)
!3567 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3568, file: !3498, line: 80)
!3568 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3509, line: 102, baseType: !3569)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !1228, line: 73, baseType: !264)
!3570 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3571, file: !3498, line: 81)
!3571 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !3509, line: 90, baseType: !264)
!3572 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3573, file: !3575, line: 53)
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !3574, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!3574 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!3575 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/clocale", directory: "")
!3576 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3577, file: !3575, line: 54)
!3577 = !DISubprogram(name: "setlocale", scope: !3574, file: !3574, line: 122, type: !3578, flags: DIFlagPrototyped, spFlags: 0)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!116, !11, !167}
!3580 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3581, file: !3575, line: 55)
!3581 = !DISubprogram(name: "localeconv", scope: !3574, file: !3574, line: 125, type: !3582, flags: DIFlagPrototyped, spFlags: 0)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!3584}
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3586, file: !3588, line: 64)
!3586 = !DISubprogram(name: "isalnum", scope: !3587, file: !3587, line: 108, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3587 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3588 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cctype", directory: "")
!3589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3590, file: !3588, line: 65)
!3590 = !DISubprogram(name: "isalpha", scope: !3587, file: !3587, line: 109, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3591 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3592, file: !3588, line: 66)
!3592 = !DISubprogram(name: "iscntrl", scope: !3587, file: !3587, line: 110, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3594, file: !3588, line: 67)
!3594 = !DISubprogram(name: "isdigit", scope: !3587, file: !3587, line: 111, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3596, file: !3588, line: 68)
!3596 = !DISubprogram(name: "isgraph", scope: !3587, file: !3587, line: 113, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3598, file: !3588, line: 69)
!3598 = !DISubprogram(name: "islower", scope: !3587, file: !3587, line: 112, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3600, file: !3588, line: 70)
!3600 = !DISubprogram(name: "isprint", scope: !3587, file: !3587, line: 114, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3602, file: !3588, line: 71)
!3602 = !DISubprogram(name: "ispunct", scope: !3587, file: !3587, line: 115, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3604, file: !3588, line: 72)
!3604 = !DISubprogram(name: "isspace", scope: !3587, file: !3587, line: 116, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3605 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3606, file: !3588, line: 73)
!3606 = !DISubprogram(name: "isupper", scope: !3587, file: !3587, line: 117, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3607 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3608, file: !3588, line: 74)
!3608 = !DISubprogram(name: "isxdigit", scope: !3587, file: !3587, line: 118, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3610, file: !3588, line: 75)
!3610 = !DISubprogram(name: "tolower", scope: !3587, file: !3587, line: 122, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3612, file: !3588, line: 76)
!3612 = !DISubprogram(name: "toupper", scope: !3587, file: !3587, line: 125, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3614, file: !3588, line: 87)
!3614 = !DISubprogram(name: "isblank", scope: !3587, file: !3587, line: 130, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3616, file: !3618, line: 98)
!3616 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3617, line: 7, baseType: !3261)
!3617 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3618 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cstdio", directory: "")
!3619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3620, file: !3618, line: 99)
!3620 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !3621, line: 84, baseType: !3622)
!3621 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!3622 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fpos_t", file: !3623, line: 14, baseType: !3624)
!3623 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h", directory: "")
!3624 = !DICompositeType(tag: DW_TAG_structure_type, name: "_G_fpos_t", file: !3623, line: 10, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!3625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3626, file: !3618, line: 101)
!3626 = !DISubprogram(name: "clearerr", scope: !3621, file: !3621, line: 757, type: !3627, flags: DIFlagPrototyped, spFlags: 0)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{null, !3629}
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3630 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3631, file: !3618, line: 102)
!3631 = !DISubprogram(name: "fclose", scope: !3621, file: !3621, line: 213, type: !3632, flags: DIFlagPrototyped, spFlags: 0)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!11, !3629}
!3634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3635, file: !3618, line: 103)
!3635 = !DISubprogram(name: "feof", scope: !3621, file: !3621, line: 759, type: !3632, flags: DIFlagPrototyped, spFlags: 0)
!3636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3637, file: !3618, line: 104)
!3637 = !DISubprogram(name: "ferror", scope: !3621, file: !3621, line: 761, type: !3632, flags: DIFlagPrototyped, spFlags: 0)
!3638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3639, file: !3618, line: 105)
!3639 = !DISubprogram(name: "fflush", scope: !3621, file: !3621, line: 218, type: !3632, flags: DIFlagPrototyped, spFlags: 0)
!3640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3641, file: !3618, line: 106)
!3641 = !DISubprogram(name: "fgetc", scope: !3621, file: !3621, line: 485, type: !3632, flags: DIFlagPrototyped, spFlags: 0)
!3642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3643, file: !3618, line: 107)
!3643 = !DISubprogram(name: "fgetpos", scope: !3621, file: !3621, line: 731, type: !3644, flags: DIFlagPrototyped, spFlags: 0)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!11, !3646, !3647}
!3646 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3629)
!3647 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3648)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3649 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3650, file: !3618, line: 108)
!3650 = !DISubprogram(name: "fgets", scope: !3621, file: !3621, line: 564, type: !3651, flags: DIFlagPrototyped, spFlags: 0)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!116, !2774, !11, !3646}
!3653 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3654, file: !3618, line: 109)
!3654 = !DISubprogram(name: "fopen", scope: !3621, file: !3621, line: 246, type: !3655, flags: DIFlagPrototyped, spFlags: 0)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!3629, !2733, !2733}
!3657 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3658, file: !3618, line: 110)
!3658 = !DISubprogram(name: "fprintf", scope: !3621, file: !3621, line: 326, type: !3659, flags: DIFlagPrototyped, spFlags: 0)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{!11, !3646, !2733, null}
!3661 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3662, file: !3618, line: 111)
!3662 = !DISubprogram(name: "fputc", scope: !3621, file: !3621, line: 521, type: !3663, flags: DIFlagPrototyped, spFlags: 0)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!11, !11, !3629}
!3665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3666, file: !3618, line: 112)
!3666 = !DISubprogram(name: "fputs", scope: !3621, file: !3621, line: 626, type: !3667, flags: DIFlagPrototyped, spFlags: 0)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!11, !2733, !3646}
!3669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3670, file: !3618, line: 113)
!3670 = !DISubprogram(name: "fread", scope: !3621, file: !3621, line: 646, type: !3671, flags: DIFlagPrototyped, spFlags: 0)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!2686, !3673, !2686, !2686, !3646}
!3673 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !370)
!3674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3675, file: !3618, line: 114)
!3675 = !DISubprogram(name: "freopen", scope: !3621, file: !3621, line: 252, type: !3676, flags: DIFlagPrototyped, spFlags: 0)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!3629, !2733, !2733, !3646}
!3678 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3679, file: !3618, line: 115)
!3679 = !DISubprogram(name: "fscanf", linkageName: "__isoc99_fscanf", scope: !3621, file: !3621, line: 407, type: !3659, flags: DIFlagPrototyped, spFlags: 0)
!3680 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3681, file: !3618, line: 116)
!3681 = !DISubprogram(name: "fseek", scope: !3621, file: !3621, line: 684, type: !3682, flags: DIFlagPrototyped, spFlags: 0)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!11, !3629, !1229, !11}
!3684 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3685, file: !3618, line: 117)
!3685 = !DISubprogram(name: "fsetpos", scope: !3621, file: !3621, line: 736, type: !3686, flags: DIFlagPrototyped, spFlags: 0)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!11, !3629, !3688}
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3620)
!3690 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3691, file: !3618, line: 118)
!3691 = !DISubprogram(name: "ftell", scope: !3621, file: !3621, line: 689, type: !3692, flags: DIFlagPrototyped, spFlags: 0)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!1229, !3629}
!3694 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3695, file: !3618, line: 119)
!3695 = !DISubprogram(name: "fwrite", scope: !3621, file: !3621, line: 652, type: !3696, flags: DIFlagPrototyped, spFlags: 0)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!2686, !3698, !2686, !2686, !3646}
!3698 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !265)
!3699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3700, file: !3618, line: 120)
!3700 = !DISubprogram(name: "getc", scope: !3621, file: !3621, line: 486, type: !3632, flags: DIFlagPrototyped, spFlags: 0)
!3701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3702, file: !3618, line: 121)
!3702 = !DISubprogram(name: "getchar", scope: !3621, file: !3621, line: 492, type: !1342, flags: DIFlagPrototyped, spFlags: 0)
!3703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3704, file: !3618, line: 126)
!3704 = !DISubprogram(name: "perror", scope: !3621, file: !3621, line: 775, type: !3705, flags: DIFlagPrototyped, spFlags: 0)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{null, !167}
!3707 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3708, file: !3618, line: 127)
!3708 = !DISubprogram(name: "printf", scope: !3621, file: !3621, line: 332, type: !3709, flags: DIFlagPrototyped, spFlags: 0)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!11, !2733, null}
!3711 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3712, file: !3618, line: 128)
!3712 = !DISubprogram(name: "putc", scope: !3621, file: !3621, line: 522, type: !3663, flags: DIFlagPrototyped, spFlags: 0)
!3713 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3714, file: !3618, line: 129)
!3714 = !DISubprogram(name: "putchar", scope: !3621, file: !3621, line: 528, type: !1196, flags: DIFlagPrototyped, spFlags: 0)
!3715 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3716, file: !3618, line: 130)
!3716 = !DISubprogram(name: "puts", scope: !3621, file: !3621, line: 632, type: !2676, flags: DIFlagPrototyped, spFlags: 0)
!3717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3718, file: !3618, line: 131)
!3718 = !DISubprogram(name: "remove", scope: !3621, file: !3621, line: 146, type: !2676, flags: DIFlagPrototyped, spFlags: 0)
!3719 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3720, file: !3618, line: 132)
!3720 = !DISubprogram(name: "rename", scope: !3621, file: !3621, line: 148, type: !3721, flags: DIFlagPrototyped, spFlags: 0)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!11, !167, !167}
!3723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3724, file: !3618, line: 133)
!3724 = !DISubprogram(name: "rewind", scope: !3621, file: !3621, line: 694, type: !3627, flags: DIFlagPrototyped, spFlags: 0)
!3725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3726, file: !3618, line: 134)
!3726 = !DISubprogram(name: "scanf", linkageName: "__isoc99_scanf", scope: !3621, file: !3621, line: 410, type: !3709, flags: DIFlagPrototyped, spFlags: 0)
!3727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3728, file: !3618, line: 135)
!3728 = !DISubprogram(name: "setbuf", scope: !3621, file: !3621, line: 304, type: !3729, flags: DIFlagPrototyped, spFlags: 0)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !3646, !2774}
!3731 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3732, file: !3618, line: 136)
!3732 = !DISubprogram(name: "setvbuf", scope: !3621, file: !3621, line: 308, type: !3733, flags: DIFlagPrototyped, spFlags: 0)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!11, !3646, !2774, !11, !2686}
!3735 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3736, file: !3618, line: 137)
!3736 = !DISubprogram(name: "sprintf", scope: !3621, file: !3621, line: 334, type: !3737, flags: DIFlagPrototyped, spFlags: 0)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!11, !2774, !2733, null}
!3739 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3740, file: !3618, line: 138)
!3740 = !DISubprogram(name: "sscanf", linkageName: "__isoc99_sscanf", scope: !3621, file: !3621, line: 412, type: !3741, flags: DIFlagPrototyped, spFlags: 0)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!11, !2733, !2733, null}
!3743 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3744, file: !3618, line: 139)
!3744 = !DISubprogram(name: "tmpfile", scope: !3621, file: !3621, line: 173, type: !3745, flags: DIFlagPrototyped, spFlags: 0)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{!3629}
!3747 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3748, file: !3618, line: 141)
!3748 = !DISubprogram(name: "tmpnam", scope: !3621, file: !3621, line: 187, type: !3749, flags: DIFlagPrototyped, spFlags: 0)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!116, !116}
!3751 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3752, file: !3618, line: 143)
!3752 = !DISubprogram(name: "ungetc", scope: !3621, file: !3621, line: 639, type: !3663, flags: DIFlagPrototyped, spFlags: 0)
!3753 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3754, file: !3618, line: 144)
!3754 = !DISubprogram(name: "vfprintf", scope: !3621, file: !3621, line: 341, type: !3755, flags: DIFlagPrototyped, spFlags: 0)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!11, !3646, !2733, !3335}
!3757 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3758, file: !3618, line: 145)
!3758 = !DISubprogram(name: "vprintf", scope: !3621, file: !3621, line: 347, type: !3759, flags: DIFlagPrototyped, spFlags: 0)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!11, !2733, !3335}
!3761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3762, file: !3618, line: 146)
!3762 = !DISubprogram(name: "vsprintf", scope: !3621, file: !3621, line: 349, type: !3763, flags: DIFlagPrototyped, spFlags: 0)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!11, !2774, !2733, !3335}
!3765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3766, file: !3618, line: 175)
!3766 = !DISubprogram(name: "snprintf", scope: !3621, file: !3621, line: 354, type: !3767, flags: DIFlagPrototyped, spFlags: 0)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!11, !2774, !2686, !2733, null}
!3769 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3770, file: !3618, line: 176)
!3770 = !DISubprogram(name: "vfscanf", linkageName: "__isoc99_vfscanf", scope: !3621, file: !3621, line: 451, type: !3755, flags: DIFlagPrototyped, spFlags: 0)
!3771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3772, file: !3618, line: 177)
!3772 = !DISubprogram(name: "vscanf", linkageName: "__isoc99_vscanf", scope: !3621, file: !3621, line: 456, type: !3759, flags: DIFlagPrototyped, spFlags: 0)
!3773 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3774, file: !3618, line: 178)
!3774 = !DISubprogram(name: "vsnprintf", scope: !3621, file: !3621, line: 358, type: !3775, flags: DIFlagPrototyped, spFlags: 0)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!11, !2774, !2686, !2733, !3335}
!3777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !142, entity: !3778, file: !3618, line: 179)
!3778 = !DISubprogram(name: "vsscanf", linkageName: "__isoc99_vsscanf", scope: !3621, file: !3621, line: 459, type: !3779, flags: DIFlagPrototyped, spFlags: 0)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!11, !2733, !2733, !3335}
!3781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3766, file: !3618, line: 185)
!3782 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3770, file: !3618, line: 186)
!3783 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3772, file: !3618, line: 187)
!3784 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3774, file: !3618, line: 188)
!3785 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3778, file: !3618, line: 189)
!3786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3787, file: !3791, line: 82)
!3787 = !DIDerivedType(tag: DW_TAG_typedef, name: "wctrans_t", file: !3788, line: 48, baseType: !3789)
!3788 = !DIFile(filename: "/usr/include/wctype.h", directory: "")
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3505)
!3791 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/cwctype", directory: "")
!3792 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3793, file: !3791, line: 83)
!3793 = !DIDerivedType(tag: DW_TAG_typedef, name: "wctype_t", file: !3794, line: 38, baseType: !264)
!3794 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h", directory: "")
!3795 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3247, file: !3791, line: 84)
!3796 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3797, file: !3791, line: 86)
!3797 = !DISubprogram(name: "iswalnum", scope: !3794, file: !3794, line: 95, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3799, file: !3791, line: 87)
!3799 = !DISubprogram(name: "iswalpha", scope: !3794, file: !3794, line: 101, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3800 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3801, file: !3791, line: 89)
!3801 = !DISubprogram(name: "iswblank", scope: !3794, file: !3794, line: 146, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3803, file: !3791, line: 91)
!3803 = !DISubprogram(name: "iswcntrl", scope: !3794, file: !3794, line: 104, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3805, file: !3791, line: 92)
!3805 = !DISubprogram(name: "iswctype", scope: !3794, file: !3794, line: 159, type: !3806, flags: DIFlagPrototyped, spFlags: 0)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!11, !3247, !3793}
!3808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3809, file: !3791, line: 93)
!3809 = !DISubprogram(name: "iswdigit", scope: !3794, file: !3794, line: 108, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3811, file: !3791, line: 94)
!3811 = !DISubprogram(name: "iswgraph", scope: !3794, file: !3794, line: 112, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3812 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3813, file: !3791, line: 95)
!3813 = !DISubprogram(name: "iswlower", scope: !3794, file: !3794, line: 117, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3815, file: !3791, line: 96)
!3815 = !DISubprogram(name: "iswprint", scope: !3794, file: !3794, line: 120, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3817, file: !3791, line: 97)
!3817 = !DISubprogram(name: "iswpunct", scope: !3794, file: !3794, line: 125, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3819, file: !3791, line: 98)
!3819 = !DISubprogram(name: "iswspace", scope: !3794, file: !3794, line: 130, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3820 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3821, file: !3791, line: 99)
!3821 = !DISubprogram(name: "iswupper", scope: !3794, file: !3794, line: 135, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3823, file: !3791, line: 100)
!3823 = !DISubprogram(name: "iswxdigit", scope: !3794, file: !3794, line: 140, type: !3436, flags: DIFlagPrototyped, spFlags: 0)
!3824 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3825, file: !3791, line: 101)
!3825 = !DISubprogram(name: "towctrans", scope: !3788, file: !3788, line: 55, type: !3826, flags: DIFlagPrototyped, spFlags: 0)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!3247, !3247, !3787}
!3828 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3829, file: !3791, line: 102)
!3829 = !DISubprogram(name: "towlower", scope: !3794, file: !3794, line: 166, type: !3830, flags: DIFlagPrototyped, spFlags: 0)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!3247, !3247}
!3832 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3833, file: !3791, line: 103)
!3833 = !DISubprogram(name: "towupper", scope: !3794, file: !3794, line: 169, type: !3830, flags: DIFlagPrototyped, spFlags: 0)
!3834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3835, file: !3791, line: 104)
!3835 = !DISubprogram(name: "wctrans", scope: !3788, file: !3788, line: 52, type: !3836, flags: DIFlagPrototyped, spFlags: 0)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!3787, !167}
!3838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !3839, file: !3791, line: 105)
!3839 = !DISubprogram(name: "wctype", scope: !3794, file: !3794, line: 155, type: !3840, flags: DIFlagPrototyped, spFlags: 0)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!3793, !167}
!3842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2662, file: !3843, line: 38)
!3843 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/stdlib.h", directory: "")
!3844 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2664, file: !3843, line: 39)
!3845 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2701, file: !3843, line: 40)
!3846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2669, file: !3843, line: 43)
!3847 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2743, file: !3843, line: 46)
!3848 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2652, file: !3843, line: 51)
!3849 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2656, file: !3843, line: 52)
!3850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !3219, file: !3843, line: 54)
!3851 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2671, file: !3843, line: 55)
!3852 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2675, file: !3843, line: 56)
!3853 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2679, file: !3843, line: 57)
!3854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2683, file: !3843, line: 58)
!3855 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2693, file: !3843, line: 59)
!3856 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2826, file: !3843, line: 60)
!3857 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2703, file: !3843, line: 61)
!3858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2707, file: !3843, line: 62)
!3859 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2711, file: !3843, line: 63)
!3860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2715, file: !3843, line: 64)
!3861 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2719, file: !3843, line: 65)
!3862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2723, file: !3843, line: 67)
!3863 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2727, file: !3843, line: 68)
!3864 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2735, file: !3843, line: 69)
!3865 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2739, file: !3843, line: 71)
!3866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2745, file: !3843, line: 72)
!3867 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2747, file: !3843, line: 73)
!3868 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2751, file: !3843, line: 74)
!3869 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2755, file: !3843, line: 75)
!3870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2761, file: !3843, line: 76)
!3871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2765, file: !3843, line: 77)
!3872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2769, file: !3843, line: 78)
!3873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2771, file: !3843, line: 80)
!3874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !30, entity: !2779, file: !3843, line: 81)
!3875 = !{i32 7, !"Dwarf Version", i32 4}
!3876 = !{i32 2, !"Debug Info Version", i32 3}
!3877 = !{i32 1, !"wchar_size", i32 4}
!3878 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3879 = distinct !DISubprogram(name: "__cxx_global_var_init", scope: !3, file: !3, line: 74, type: !1244, scopeLine: 74, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !324)
!3880 = !DILocation(line: 74, column: 25, scope: !3879)
!3881 = distinct !DISubprogram(name: "__cxx_global_var_init.1", scope: !31, file: !31, line: 46, type: !1244, scopeLine: 46, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !324)
!3882 = !DILocation(line: 46, column: 22, scope: !3881)
!3883 = distinct !DISubprogram(name: "cModule", linkageName: "_ZN7cModuleC2Ev", scope: !101, file: !31, line: 50, type: !1365, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1402, retainedNodes: !324)
!3884 = !DILocalVariable(name: "this", arg: 1, scope: !3883, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!3885 = !DILocation(line: 0, scope: !3883)
!3886 = !DILocation(line: 51, column: 1, scope: !3883)
!3887 = !DILocation(line: 50, column: 10, scope: !3883)
!3888 = !DILocation(line: 52, column: 5, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3883, file: !31, line: 51, column: 1)
!3890 = !DILocation(line: 52, column: 12, scope: !3889)
!3891 = !DILocation(line: 53, column: 5, scope: !3889)
!3892 = !DILocation(line: 53, column: 9, scope: !3889)
!3893 = !DILocation(line: 54, column: 5, scope: !3889)
!3894 = !DILocation(line: 54, column: 14, scope: !3889)
!3895 = !DILocation(line: 55, column: 5, scope: !3889)
!3896 = !DILocation(line: 55, column: 14, scope: !3889)
!3897 = !DILocation(line: 57, column: 36, scope: !3889)
!3898 = !DILocation(line: 57, column: 48, scope: !3889)
!3899 = !DILocation(line: 57, column: 21, scope: !3889)
!3900 = !DILocation(line: 57, column: 34, scope: !3889)
!3901 = !DILocation(line: 57, column: 13, scope: !3889)
!3902 = !DILocation(line: 57, column: 19, scope: !3889)
!3903 = !DILocation(line: 57, column: 5, scope: !3889)
!3904 = !DILocation(line: 57, column: 11, scope: !3889)
!3905 = !DILocation(line: 59, column: 5, scope: !3889)
!3906 = !DILocation(line: 59, column: 15, scope: !3889)
!3907 = !DILocation(line: 60, column: 5, scope: !3889)
!3908 = !DILocation(line: 60, column: 11, scope: !3889)
!3909 = !DILocation(line: 63, column: 1, scope: !3883)
!3910 = distinct !DISubprogram(name: "~cModule", linkageName: "_ZN7cModuleD2Ev", scope: !101, file: !31, line: 65, type: !1365, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1403, retainedNodes: !324)
!3911 = !DILocalVariable(name: "this", arg: 1, scope: !3910, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!3912 = !DILocation(line: 0, scope: !3910)
!3913 = !DILocation(line: 66, column: 1, scope: !3910)
!3914 = !DILocation(line: 68, column: 5, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3910, file: !31, line: 66, column: 1)
!3916 = !DILocation(line: 68, column: 10, scope: !3915)
!3917 = !DILocalVariable(name: "submod", scope: !3918, file: !31, line: 71, type: !3919)
!3918 = distinct !DILexicalBlock(scope: !3915, file: !31, line: 71, column: 5)
!3919 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SubmoduleIterator", scope: !101, file: !100, line: 126, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !3920, identifier: "_ZTSN7cModule17SubmoduleIteratorE")
!3920 = !{!3921, !3922, !3926, !3927, !3932, !3935}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3919, file: !100, line: 129, baseType: !120, size: 64)
!3922 = !DISubprogram(name: "SubmoduleIterator", scope: !3919, file: !100, line: 135, type: !3923, scopeLine: 135, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{null, !3925, !113}
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3926 = !DISubprogram(name: "init", linkageName: "_ZN7cModule17SubmoduleIterator4initEPKS_", scope: !3919, file: !100, line: 140, type: !3923, scopeLine: 140, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3927 = !DISubprogram(name: "operator()", linkageName: "_ZNK7cModule17SubmoduleIteratorclEv", scope: !3919, file: !100, line: 147, type: !3928, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!120, !3930}
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3919)
!3932 = !DISubprogram(name: "end", linkageName: "_ZNK7cModule17SubmoduleIterator3endEv", scope: !3919, file: !100, line: 152, type: !3933, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!13, !3930}
!3935 = !DISubprogram(name: "operator++", linkageName: "_ZN7cModule17SubmoduleIteratorppEi", scope: !3919, file: !100, line: 159, type: !3936, scopeLine: 159, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!120, !3925, !11}
!3938 = !DILocation(line: 71, column: 28, scope: !3918)
!3939 = !DILocation(line: 71, column: 10, scope: !3918)
!3940 = !DILocation(line: 71, column: 50, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3918, file: !31, line: 71, column: 5)
!3942 = !DILocation(line: 71, column: 42, scope: !3941)
!3943 = !DILocation(line: 71, column: 5, scope: !3918)
!3944 = !DILocation(line: 73, column: 13, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !31, line: 73, column: 13)
!3946 = distinct !DILexicalBlock(scope: !3941, file: !31, line: 72, column: 5)
!3947 = !DILocation(line: 73, column: 36, scope: !3945)
!3948 = !DILocation(line: 73, column: 47, scope: !3945)
!3949 = !DILocation(line: 73, column: 22, scope: !3945)
!3950 = !DILocation(line: 73, column: 13, scope: !3946)
!3951 = !DILocation(line: 75, column: 13, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3945, file: !31, line: 74, column: 9)
!3953 = !DILocation(line: 75, column: 19, scope: !3952)
!3954 = !DILocation(line: 110, column: 1, scope: !3915)
!3955 = !DILocation(line: 110, column: 1, scope: !3952)
!3956 = !DILocalVariable(name: "mod", scope: !3946, file: !31, line: 86, type: !120)
!3957 = !DILocation(line: 86, column: 18, scope: !3946)
!3958 = !DILocation(line: 86, column: 24, scope: !3946)
!3959 = !DILocation(line: 87, column: 16, scope: !3946)
!3960 = !DILocation(line: 87, column: 9, scope: !3946)
!3961 = !DILocation(line: 71, column: 5, scope: !3941)
!3962 = distinct !{!3962, !3943, !3963}
!3963 = !DILocation(line: 88, column: 5, scope: !3918)
!3964 = !DILocalVariable(name: "i", scope: !3965, file: !31, line: 91, type: !3966)
!3965 = distinct !DILexicalBlock(scope: !3915, file: !31, line: 91, column: 5)
!3966 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "GateIterator", scope: !101, file: !100, line: 66, size: 192, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !3967, identifier: "_ZTSN7cModule12GateIteratorE")
!3967 = !{!3968, !3969, !3970, !3971, !3972, !3976, !3981, !3984, !3985, !3986, !3989, !3992}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3966, file: !100, line: 69, baseType: !113, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "descIndex", scope: !3966, file: !100, line: 70, baseType: !11, size: 32, offset: 64)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "isOutput", scope: !3966, file: !100, line: 71, baseType: !13, size: 8, offset: 96)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3966, file: !100, line: 72, baseType: !11, size: 32, offset: 128)
!3972 = !DISubprogram(name: "advance", linkageName: "_ZN7cModule12GateIterator7advanceEv", scope: !3966, file: !100, line: 75, type: !3973, scopeLine: 75, flags: DIFlagPrototyped, spFlags: 0)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{null, !3975}
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3976 = !DISubprogram(name: "current", linkageName: "_ZNK7cModule12GateIterator7currentEv", scope: !3966, file: !100, line: 76, type: !3977, scopeLine: 76, flags: DIFlagPrototyped, spFlags: 0)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!1147, !3979}
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3966)
!3981 = !DISubprogram(name: "GateIterator", scope: !3966, file: !100, line: 82, type: !3982, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{null, !3975, !113}
!3984 = !DISubprogram(name: "init", linkageName: "_ZN7cModule12GateIterator4initEPKS_", scope: !3966, file: !100, line: 87, type: !3982, scopeLine: 87, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3985 = !DISubprogram(name: "operator()", linkageName: "_ZNK7cModule12GateIteratorclEv", scope: !3966, file: !100, line: 93, type: !3977, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3986 = !DISubprogram(name: "end", linkageName: "_ZNK7cModule12GateIterator3endEv", scope: !3966, file: !100, line: 98, type: !3987, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!13, !3979}
!3989 = !DISubprogram(name: "operator++", linkageName: "_ZN7cModule12GateIteratorppEi", scope: !3966, file: !100, line: 105, type: !3990, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!1147, !3975, !11}
!3992 = !DISubprogram(name: "operator+=", linkageName: "_ZN7cModule12GateIteratorpLEi", scope: !3966, file: !100, line: 111, type: !3990, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!3993 = !DILocation(line: 91, column: 23, scope: !3965)
!3994 = !DILocation(line: 91, column: 10, scope: !3965)
!3995 = !DILocation(line: 91, column: 35, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3965, file: !31, line: 91, column: 5)
!3997 = !DILocation(line: 91, column: 32, scope: !3996)
!3998 = !DILocation(line: 91, column: 5, scope: !3965)
!3999 = !DILocalVariable(name: "gate", scope: !4000, file: !31, line: 93, type: !1147)
!4000 = distinct !DILexicalBlock(scope: !3996, file: !31, line: 92, column: 5)
!4001 = !DILocation(line: 93, column: 16, scope: !4000)
!4002 = !DILocation(line: 93, column: 23, scope: !4000)
!4003 = !DILocation(line: 94, column: 13, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4000, file: !31, line: 94, column: 13)
!4005 = !DILocation(line: 94, column: 19, scope: !4004)
!4006 = !DILocation(line: 94, column: 33, scope: !4004)
!4007 = !DILocation(line: 94, column: 36, scope: !4004)
!4008 = !DILocation(line: 94, column: 42, scope: !4004)
!4009 = !DILocation(line: 94, column: 57, scope: !4004)
!4010 = !DILocation(line: 94, column: 76, scope: !4004)
!4011 = !DILocation(line: 94, column: 74, scope: !4004)
!4012 = !DILocation(line: 94, column: 13, scope: !4000)
!4013 = !DILocation(line: 95, column: 12, scope: !4004)
!4014 = !DILocation(line: 95, column: 18, scope: !4004)
!4015 = !DILocation(line: 96, column: 13, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4000, file: !31, line: 96, column: 13)
!4017 = !DILocation(line: 96, column: 19, scope: !4016)
!4018 = !DILocation(line: 96, column: 37, scope: !4016)
!4019 = !DILocation(line: 96, column: 40, scope: !4016)
!4020 = !DILocation(line: 96, column: 46, scope: !4016)
!4021 = !DILocation(line: 96, column: 65, scope: !4016)
!4022 = !DILocation(line: 96, column: 80, scope: !4016)
!4023 = !DILocation(line: 96, column: 78, scope: !4016)
!4024 = !DILocation(line: 96, column: 13, scope: !4000)
!4025 = !DILocation(line: 97, column: 12, scope: !4016)
!4026 = !DILocation(line: 97, column: 18, scope: !4016)
!4027 = !DILocation(line: 97, column: 37, scope: !4016)
!4028 = !DILocation(line: 98, column: 5, scope: !4000)
!4029 = !DILocation(line: 91, column: 42, scope: !3996)
!4030 = !DILocation(line: 91, column: 5, scope: !3996)
!4031 = distinct !{!4031, !3998, !4032}
!4032 = !DILocation(line: 98, column: 5, scope: !3965)
!4033 = !DILocation(line: 101, column: 5, scope: !3915)
!4034 = !DILocation(line: 104, column: 9, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3915, file: !31, line: 104, column: 9)
!4036 = !DILocation(line: 104, column: 15, scope: !4035)
!4037 = !DILocation(line: 104, column: 9, scope: !3915)
!4038 = !DILocation(line: 105, column: 9, scope: !4035)
!4039 = !DILocation(line: 105, column: 20, scope: !4035)
!4040 = !DILocation(line: 106, column: 9, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3915, file: !31, line: 106, column: 9)
!4042 = !DILocation(line: 106, column: 9, scope: !3915)
!4043 = !DILocation(line: 107, column: 9, scope: !4041)
!4044 = !DILocation(line: 107, column: 28, scope: !4041)
!4045 = !DILocation(line: 109, column: 15, scope: !3915)
!4046 = !DILocation(line: 109, column: 5, scope: !3915)
!4047 = !DILocation(line: 110, column: 1, scope: !3910)
!4048 = distinct !DISubprogram(name: "getActiveEnvir", linkageName: "_ZN11cSimulation14getActiveEnvirEv", scope: !4050, file: !4049, line: 153, type: !4051, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !4056, retainedNodes: !324)
!4049 = !DIFile(filename: "simulator/csimulation.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!4050 = !DICompositeType(tag: DW_TAG_class_type, name: "cSimulation", file: !4049, line: 71, flags: DIFlagFwdDecl)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!4053}
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DICompositeType(tag: DW_TAG_class_type, name: "cEnvir", file: !4055, line: 101, flags: DIFlagFwdDecl)
!4055 = !DIFile(filename: "simulator/cenvir.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!4056 = !DISubprogram(name: "getActiveEnvir", linkageName: "_ZN11cSimulation14getActiveEnvirEv", scope: !4050, file: !4049, line: 153, type: !4051, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4057 = !DILocation(line: 153, column: 46, scope: !4048)
!4058 = !DILocation(line: 153, column: 39, scope: !4048)
!4059 = distinct !DISubprogram(name: "SubmoduleIterator", linkageName: "_ZN7cModule17SubmoduleIteratorC2EPKS_", scope: !3919, file: !100, line: 135, type: !3923, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3922, retainedNodes: !324)
!4060 = !DILocalVariable(name: "this", arg: 1, scope: !4059, type: !4061, flags: DIFlagArtificial | DIFlagObjectPointer)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!4062 = !DILocation(line: 0, scope: !4059)
!4063 = !DILocalVariable(name: "m", arg: 2, scope: !4059, file: !100, line: 135, type: !113)
!4064 = !DILocation(line: 135, column: 42, scope: !4059)
!4065 = !DILocation(line: 135, column: 52, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4059, file: !100, line: 135, column: 46)
!4067 = !DILocation(line: 135, column: 47, scope: !4066)
!4068 = !DILocation(line: 135, column: 55, scope: !4059)
!4069 = distinct !DISubprogram(name: "end", linkageName: "_ZNK7cModule17SubmoduleIterator3endEv", scope: !3919, file: !100, line: 152, type: !3933, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3932, retainedNodes: !324)
!4070 = !DILocalVariable(name: "this", arg: 1, scope: !4069, type: !4071, flags: DIFlagArtificial | DIFlagObjectPointer)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!4072 = !DILocation(line: 0, scope: !4069)
!4073 = !DILocation(line: 152, column: 42, scope: !4069)
!4074 = !DILocation(line: 152, column: 43, scope: !4069)
!4075 = !DILocation(line: 152, column: 28, scope: !4069)
!4076 = distinct !DISubprogram(name: "operator()", linkageName: "_ZNK7cModule17SubmoduleIteratorclEv", scope: !3919, file: !100, line: 147, type: !3928, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3927, retainedNodes: !324)
!4077 = !DILocalVariable(name: "this", arg: 1, scope: !4076, type: !4071, flags: DIFlagArtificial | DIFlagObjectPointer)
!4078 = !DILocation(line: 0, scope: !4076)
!4079 = !DILocation(line: 147, column: 45, scope: !4076)
!4080 = !DILocation(line: 147, column: 38, scope: !4076)
!4081 = distinct !DISubprogram(name: "getActiveSimulation", linkageName: "_ZN11cSimulation19getActiveSimulationEv", scope: !4050, file: !4049, line: 147, type: !4082, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !4085, retainedNodes: !324)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!4084}
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4085 = !DISubprogram(name: "getActiveSimulation", linkageName: "_ZN11cSimulation19getActiveSimulationEv", scope: !4050, file: !4049, line: 147, type: !4082, scopeLine: 147, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4086 = !DILocation(line: 147, column: 56, scope: !4081)
!4087 = !DILocation(line: 147, column: 49, scope: !4081)
!4088 = distinct !DISubprogram(name: "getActivityModule", linkageName: "_ZNK11cSimulation17getActivityModuleEv", scope: !4050, file: !4049, line: 467, type: !4089, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !4094, retainedNodes: !324)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!4091, !4092}
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4050)
!4094 = !DISubprogram(name: "getActivityModule", linkageName: "_ZNK11cSimulation17getActivityModuleEv", scope: !4050, file: !4049, line: 467, type: !4089, scopeLine: 467, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4095 = !DILocalVariable(name: "this", arg: 1, scope: !4088, type: !4096, flags: DIFlagArtificial | DIFlagObjectPointer)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4097 = !DILocation(line: 0, scope: !4088)
!4098 = !DILocation(line: 467, column: 54, scope: !4088)
!4099 = !DILocation(line: 467, column: 47, scope: !4088)
!4100 = distinct !DISubprogram(name: "~cRuntimeError", linkageName: "_ZN13cRuntimeErrorD2Ev", scope: !2030, file: !2031, line: 221, type: !4101, scopeLine: 221, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !4104, retainedNodes: !324)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{null, !4103}
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4104 = !DISubprogram(name: "~cRuntimeError", scope: !2030, type: !4101, containingType: !2030, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!4105 = !DILocalVariable(name: "this", arg: 1, scope: !4100, type: !4106, flags: DIFlagArtificial | DIFlagObjectPointer)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!4107 = !DILocation(line: 0, scope: !4100)
!4108 = !DILocation(line: 221, column: 15, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4100, file: !2031, line: 221, column: 15)
!4110 = !DILocation(line: 221, column: 15, scope: !4100)
!4111 = distinct !DISubprogram(name: "operator++", linkageName: "_ZN7cModule17SubmoduleIteratorppEi", scope: !3919, file: !100, line: 159, type: !3936, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3935, retainedNodes: !324)
!4112 = !DILocalVariable(name: "this", arg: 1, scope: !4111, type: !4061, flags: DIFlagArtificial | DIFlagObjectPointer)
!4113 = !DILocation(line: 0, scope: !4111)
!4114 = !DILocalVariable(arg: 2, scope: !4111, file: !100, line: 159, type: !11)
!4115 = !DILocation(line: 159, column: 32, scope: !4111)
!4116 = !DILocation(line: 159, column: 41, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4111, file: !100, line: 159, column: 40)
!4118 = !DILocation(line: 159, column: 40, scope: !4111)
!4119 = !DILocation(line: 159, column: 44, scope: !4117)
!4120 = !DILocalVariable(name: "t", scope: !4111, file: !100, line: 159, type: !120)
!4121 = !DILocation(line: 159, column: 66, scope: !4111)
!4122 = !DILocation(line: 159, column: 68, scope: !4111)
!4123 = !DILocation(line: 159, column: 73, scope: !4111)
!4124 = !DILocation(line: 159, column: 76, scope: !4111)
!4125 = !DILocation(line: 159, column: 71, scope: !4111)
!4126 = !DILocation(line: 159, column: 72, scope: !4111)
!4127 = !DILocation(line: 159, column: 90, scope: !4111)
!4128 = !DILocation(line: 159, column: 83, scope: !4111)
!4129 = !DILocation(line: 159, column: 92, scope: !4111)
!4130 = distinct !DISubprogram(name: "GateIterator", linkageName: "_ZN7cModule12GateIteratorC2EPKS_", scope: !3966, file: !100, line: 82, type: !3982, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3981, retainedNodes: !324)
!4131 = !DILocalVariable(name: "this", arg: 1, scope: !4130, type: !4132, flags: DIFlagArtificial | DIFlagObjectPointer)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!4133 = !DILocation(line: 0, scope: !4130)
!4134 = !DILocalVariable(name: "m", arg: 2, scope: !4130, file: !100, line: 82, type: !113)
!4135 = !DILocation(line: 82, column: 37, scope: !4130)
!4136 = !DILocation(line: 82, column: 47, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4130, file: !100, line: 82, column: 41)
!4138 = !DILocation(line: 82, column: 42, scope: !4137)
!4139 = !DILocation(line: 82, column: 50, scope: !4130)
!4140 = distinct !DISubprogram(name: "end", linkageName: "_ZNK7cModule12GateIterator3endEv", scope: !3966, file: !31, line: 1201, type: !3987, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3986, retainedNodes: !324)
!4141 = !DILocalVariable(name: "this", arg: 1, scope: !4140, type: !4142, flags: DIFlagArtificial | DIFlagObjectPointer)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!4143 = !DILocation(line: 0, scope: !4140)
!4144 = !DILocation(line: 1203, column: 12, scope: !4140)
!4145 = !DILocation(line: 1203, column: 25, scope: !4140)
!4146 = !DILocation(line: 1203, column: 33, scope: !4140)
!4147 = !DILocation(line: 1203, column: 22, scope: !4140)
!4148 = !DILocation(line: 1203, column: 5, scope: !4140)
!4149 = distinct !DISubprogram(name: "operator()", linkageName: "_ZNK7cModule12GateIteratorclEv", scope: !3966, file: !100, line: 93, type: !3977, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3985, retainedNodes: !324)
!4150 = !DILocalVariable(name: "this", arg: 1, scope: !4149, type: !4142, flags: DIFlagArtificial | DIFlagObjectPointer)
!4151 = !DILocation(line: 0, scope: !4149)
!4152 = !DILocalVariable(name: "result", scope: !4149, file: !100, line: 93, type: !1147)
!4153 = !DILocation(line: 93, column: 43, scope: !4149)
!4154 = !DILocation(line: 93, column: 50, scope: !4149)
!4155 = !DILocation(line: 93, column: 91, scope: !4149)
!4156 = !DILocation(line: 93, column: 84, scope: !4149)
!4157 = distinct !DISubprogram(name: "getNextGate", linkageName: "_ZNK5cGate11getNextGateEv", scope: !35, file: !34, line: 394, type: !4158, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !4161, retainedNodes: !324)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!1147, !4160}
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!4161 = !DISubprogram(name: "getNextGate", linkageName: "_ZNK5cGate11getNextGateEv", scope: !35, file: !34, line: 394, type: !4158, scopeLine: 394, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4162 = !DILocalVariable(name: "this", arg: 1, scope: !4157, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!4163 = !DILocation(line: 0, scope: !4157)
!4164 = !DILocation(line: 394, column: 42, scope: !4157)
!4165 = !DILocation(line: 394, column: 35, scope: !4157)
!4166 = distinct !DISubprogram(name: "getPreviousGate", linkageName: "_ZNK5cGate15getPreviousGateEv", scope: !35, file: !34, line: 387, type: !4158, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !4167, retainedNodes: !324)
!4167 = !DISubprogram(name: "getPreviousGate", linkageName: "_ZNK5cGate15getPreviousGateEv", scope: !35, file: !34, line: 387, type: !4158, scopeLine: 387, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!4168 = !DILocalVariable(name: "this", arg: 1, scope: !4166, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!4169 = !DILocation(line: 0, scope: !4166)
!4170 = !DILocation(line: 387, column: 44, scope: !4166)
!4171 = !DILocation(line: 387, column: 37, scope: !4166)
!4172 = distinct !DISubprogram(name: "operator++", linkageName: "_ZN7cModule12GateIteratorppEi", scope: !3966, file: !31, line: 1223, type: !3990, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3989, retainedNodes: !324)
!4173 = !DILocalVariable(name: "this", arg: 1, scope: !4172, type: !4132, flags: DIFlagArtificial | DIFlagObjectPointer)
!4174 = !DILocation(line: 0, scope: !4172)
!4175 = !DILocalVariable(arg: 2, scope: !4172, file: !31, line: 1223, type: !11)
!4176 = !DILocation(line: 1223, column: 45, scope: !4172)
!4177 = !DILocation(line: 1225, column: 9, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4172, file: !31, line: 1225, column: 9)
!4179 = !DILocation(line: 1225, column: 9, scope: !4172)
!4180 = !DILocation(line: 1226, column: 9, scope: !4178)
!4181 = !DILocalVariable(name: "gate", scope: !4172, file: !31, line: 1227, type: !1147)
!4182 = !DILocation(line: 1227, column: 12, scope: !4172)
!4183 = !DILocation(line: 1228, column: 5, scope: !4172)
!4184 = !DILocation(line: 1229, column: 9, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4172, file: !31, line: 1228, column: 8)
!4186 = !DILocation(line: 1230, column: 5, scope: !4185)
!4187 = !DILocation(line: 1230, column: 15, scope: !4172)
!4188 = !DILocation(line: 1230, column: 21, scope: !4172)
!4189 = !DILocation(line: 1230, column: 30, scope: !4172)
!4190 = !DILocation(line: 1230, column: 29, scope: !4172)
!4191 = !DILocation(line: 1230, column: 40, scope: !4172)
!4192 = distinct !{!4192, !4183, !4193}
!4193 = !DILocation(line: 1230, column: 46, scope: !4172)
!4194 = !DILocation(line: 1231, column: 12, scope: !4172)
!4195 = !DILocation(line: 1231, column: 5, scope: !4172)
!4196 = !DILocation(line: 1232, column: 1, scope: !4172)
!4197 = distinct !DISubprogram(name: "clearGates", linkageName: "_ZN7cModule10clearGatesEv", scope: !101, file: !31, line: 283, type: !1365, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1393, retainedNodes: !324)
!4198 = !DILocalVariable(name: "this", arg: 1, scope: !4197, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4199 = !DILocation(line: 0, scope: !4197)
!4200 = !DILocalVariable(name: "i", scope: !4201, file: !31, line: 285, type: !11)
!4201 = distinct !DILexicalBlock(scope: !4197, file: !31, line: 285, column: 5)
!4202 = !DILocation(line: 285, column: 14, scope: !4201)
!4203 = !DILocation(line: 285, column: 10, scope: !4201)
!4204 = !DILocation(line: 285, column: 19, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !31, line: 285, column: 5)
!4206 = !DILocation(line: 285, column: 21, scope: !4205)
!4207 = !DILocation(line: 285, column: 20, scope: !4205)
!4208 = !DILocation(line: 285, column: 5, scope: !4201)
!4209 = !DILocation(line: 286, column: 25, scope: !4205)
!4210 = !DILocation(line: 286, column: 33, scope: !4205)
!4211 = !DILocation(line: 286, column: 31, scope: !4205)
!4212 = !DILocation(line: 286, column: 9, scope: !4205)
!4213 = !DILocation(line: 285, column: 33, scope: !4205)
!4214 = !DILocation(line: 285, column: 5, scope: !4205)
!4215 = distinct !{!4215, !4208, !4216}
!4216 = !DILocation(line: 286, column: 41, scope: !4201)
!4217 = !DILocation(line: 287, column: 15, scope: !4197)
!4218 = !DILocation(line: 287, column: 5, scope: !4197)
!4219 = !DILocation(line: 288, column: 5, scope: !4197)
!4220 = !DILocation(line: 288, column: 11, scope: !4197)
!4221 = !DILocation(line: 289, column: 5, scope: !4197)
!4222 = !DILocation(line: 289, column: 15, scope: !4197)
!4223 = !DILocation(line: 290, column: 1, scope: !4197)
!4224 = distinct !DISubprogram(name: "removeSubmodule", linkageName: "_ZN7cModule15removeSubmoduleEPS_", scope: !101, file: !31, line: 153, type: !1368, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1370, retainedNodes: !324)
!4225 = !DILocalVariable(name: "this", arg: 1, scope: !4224, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4226 = !DILocation(line: 0, scope: !4224)
!4227 = !DILocalVariable(name: "mod", arg: 2, scope: !4224, file: !31, line: 153, type: !120)
!4228 = !DILocation(line: 153, column: 40, scope: !4224)
!4229 = !DILocation(line: 160, column: 9, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4224, file: !31, line: 160, column: 9)
!4231 = !DILocation(line: 160, column: 14, scope: !4230)
!4232 = !DILocation(line: 160, column: 9, scope: !4224)
!4233 = !DILocation(line: 161, column: 30, scope: !4230)
!4234 = !DILocation(line: 161, column: 35, scope: !4230)
!4235 = !DILocation(line: 161, column: 10, scope: !4230)
!4236 = !DILocation(line: 161, column: 15, scope: !4230)
!4237 = !DILocation(line: 161, column: 22, scope: !4230)
!4238 = !DILocation(line: 161, column: 28, scope: !4230)
!4239 = !DILocation(line: 162, column: 9, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4224, file: !31, line: 162, column: 9)
!4241 = !DILocation(line: 162, column: 14, scope: !4240)
!4242 = !DILocation(line: 162, column: 9, scope: !4224)
!4243 = !DILocation(line: 163, column: 30, scope: !4240)
!4244 = !DILocation(line: 163, column: 35, scope: !4240)
!4245 = !DILocation(line: 163, column: 10, scope: !4240)
!4246 = !DILocation(line: 163, column: 15, scope: !4240)
!4247 = !DILocation(line: 163, column: 22, scope: !4240)
!4248 = !DILocation(line: 163, column: 28, scope: !4240)
!4249 = !DILocation(line: 164, column: 9, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4224, file: !31, line: 164, column: 9)
!4251 = !DILocation(line: 164, column: 23, scope: !4250)
!4252 = !DILocation(line: 164, column: 21, scope: !4250)
!4253 = !DILocation(line: 164, column: 9, scope: !4224)
!4254 = !DILocation(line: 165, column: 25, scope: !4250)
!4255 = !DILocation(line: 165, column: 30, scope: !4250)
!4256 = !DILocation(line: 165, column: 10, scope: !4250)
!4257 = !DILocation(line: 165, column: 23, scope: !4250)
!4258 = !DILocation(line: 166, column: 9, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4224, file: !31, line: 166, column: 9)
!4260 = !DILocation(line: 166, column: 22, scope: !4259)
!4261 = !DILocation(line: 166, column: 20, scope: !4259)
!4262 = !DILocation(line: 166, column: 9, scope: !4224)
!4263 = !DILocation(line: 167, column: 24, scope: !4259)
!4264 = !DILocation(line: 167, column: 29, scope: !4259)
!4265 = !DILocation(line: 167, column: 10, scope: !4259)
!4266 = !DILocation(line: 167, column: 22, scope: !4259)
!4267 = !DILocation(line: 170, column: 18, scope: !4224)
!4268 = !DILocation(line: 170, column: 23, scope: !4224)
!4269 = !DILocation(line: 170, column: 29, scope: !4224)
!4270 = !DILocation(line: 170, column: 5, scope: !4224)
!4271 = !DILocation(line: 170, column: 10, scope: !4224)
!4272 = !DILocation(line: 170, column: 16, scope: !4224)
!4273 = !DILocation(line: 173, column: 27, scope: !4224)
!4274 = !DILocation(line: 174, column: 1, scope: !4224)
!4275 = distinct !DISubprogram(name: "~cModule", linkageName: "_ZN7cModuleD0Ev", scope: !101, file: !31, line: 65, type: !1365, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1403, retainedNodes: !324)
!4276 = !DILocalVariable(name: "this", arg: 1, scope: !4275, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4277 = !DILocation(line: 0, scope: !4275)
!4278 = !DILocation(line: 66, column: 1, scope: !4275)
!4279 = distinct !DISubprogram(name: "forEachChild", linkageName: "_ZN7cModule12forEachChildEP8cVisitor", scope: !101, file: !31, line: 112, type: !1405, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1404, retainedNodes: !324)
!4280 = !DILocalVariable(name: "this", arg: 1, scope: !4279, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4281 = !DILocation(line: 0, scope: !4279)
!4282 = !DILocalVariable(name: "v", arg: 2, scope: !4279, file: !31, line: 112, type: !1407)
!4283 = !DILocation(line: 112, column: 38, scope: !4279)
!4284 = !DILocalVariable(name: "i", scope: !4285, file: !31, line: 114, type: !11)
!4285 = distinct !DILexicalBlock(scope: !4279, file: !31, line: 114, column: 5)
!4286 = !DILocation(line: 114, column: 14, scope: !4285)
!4287 = !DILocation(line: 114, column: 10, scope: !4285)
!4288 = !DILocation(line: 114, column: 19, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4285, file: !31, line: 114, column: 5)
!4290 = !DILocation(line: 114, column: 21, scope: !4289)
!4291 = !DILocation(line: 114, column: 20, scope: !4289)
!4292 = !DILocation(line: 114, column: 5, scope: !4285)
!4293 = !DILocation(line: 115, column: 9, scope: !4289)
!4294 = !DILocation(line: 115, column: 19, scope: !4289)
!4295 = !DILocation(line: 115, column: 26, scope: !4289)
!4296 = !DILocation(line: 115, column: 18, scope: !4289)
!4297 = !DILocation(line: 115, column: 12, scope: !4289)
!4298 = !DILocation(line: 114, column: 33, scope: !4289)
!4299 = !DILocation(line: 114, column: 5, scope: !4289)
!4300 = distinct !{!4300, !4292, !4301}
!4301 = !DILocation(line: 115, column: 28, scope: !4285)
!4302 = !DILocalVariable(name: "i", scope: !4303, file: !31, line: 117, type: !3966)
!4303 = distinct !DILexicalBlock(scope: !4279, file: !31, line: 117, column: 5)
!4304 = !DILocation(line: 117, column: 23, scope: !4303)
!4305 = !DILocation(line: 117, column: 10, scope: !4303)
!4306 = !DILocation(line: 117, column: 35, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !31, line: 117, column: 5)
!4308 = !DILocation(line: 117, column: 32, scope: !4307)
!4309 = !DILocation(line: 117, column: 5, scope: !4303)
!4310 = !DILocation(line: 118, column: 9, scope: !4307)
!4311 = !DILocation(line: 118, column: 18, scope: !4307)
!4312 = !DILocation(line: 118, column: 12, scope: !4307)
!4313 = !DILocation(line: 117, column: 42, scope: !4307)
!4314 = !DILocation(line: 117, column: 5, scope: !4307)
!4315 = distinct !{!4315, !4309, !4316}
!4316 = !DILocation(line: 118, column: 21, scope: !4303)
!4317 = !DILocation(line: 120, column: 19, scope: !4279)
!4318 = !DILocation(line: 120, column: 32, scope: !4279)
!4319 = !DILocation(line: 121, column: 1, scope: !4279)
!4320 = distinct !DISubprogram(name: "setId", linkageName: "_ZN7cModule5setIdEi", scope: !101, file: !31, line: 123, type: !1359, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1358, retainedNodes: !324)
!4321 = !DILocalVariable(name: "this", arg: 1, scope: !4320, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4322 = !DILocation(line: 0, scope: !4320)
!4323 = !DILocalVariable(name: "n", arg: 2, scope: !4320, file: !31, line: 123, type: !11)
!4324 = !DILocation(line: 123, column: 25, scope: !4320)
!4325 = !DILocation(line: 125, column: 14, scope: !4320)
!4326 = !DILocation(line: 125, column: 5, scope: !4320)
!4327 = !DILocation(line: 125, column: 12, scope: !4320)
!4328 = !DILocation(line: 126, column: 1, scope: !4320)
!4329 = distinct !DISubprogram(name: "setIndex", linkageName: "_ZN7cModule8setIndexEii", scope: !101, file: !31, line: 128, type: !1362, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1361, retainedNodes: !324)
!4330 = !DILocalVariable(name: "this", arg: 1, scope: !4329, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4331 = !DILocation(line: 0, scope: !4329)
!4332 = !DILocalVariable(name: "i", arg: 2, scope: !4329, file: !31, line: 128, type: !11)
!4333 = !DILocation(line: 128, column: 28, scope: !4329)
!4334 = !DILocalVariable(name: "n", arg: 3, scope: !4329, file: !31, line: 128, type: !11)
!4335 = !DILocation(line: 128, column: 35, scope: !4329)
!4336 = !DILocation(line: 130, column: 11, scope: !4329)
!4337 = !DILocation(line: 130, column: 5, scope: !4329)
!4338 = !DILocation(line: 130, column: 9, scope: !4329)
!4339 = !DILocation(line: 131, column: 16, scope: !4329)
!4340 = !DILocation(line: 131, column: 5, scope: !4329)
!4341 = !DILocation(line: 131, column: 14, scope: !4329)
!4342 = !DILocation(line: 132, column: 5, scope: !4329)
!4343 = !DILocation(line: 133, column: 1, scope: !4329)
!4344 = distinct !DISubprogram(name: "updateFullName", linkageName: "_ZN7cModule14updateFullNameEv", scope: !101, file: !31, line: 187, type: !1365, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1364, retainedNodes: !324)
!4345 = !DILocalVariable(name: "this", arg: 1, scope: !4344, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4346 = !DILocation(line: 0, scope: !4344)
!4347 = !DILocation(line: 189, column: 9, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4344, file: !31, line: 189, column: 9)
!4349 = !DILocation(line: 189, column: 9, scope: !4344)
!4350 = !DILocation(line: 191, column: 19, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4348, file: !31, line: 190, column: 5)
!4352 = !DILocation(line: 191, column: 9, scope: !4351)
!4353 = !DILocation(line: 192, column: 9, scope: !4351)
!4354 = !DILocation(line: 192, column: 18, scope: !4351)
!4355 = !DILocation(line: 193, column: 5, scope: !4351)
!4356 = !DILocation(line: 194, column: 9, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4344, file: !31, line: 194, column: 9)
!4358 = !DILocation(line: 194, column: 9, scope: !4344)
!4359 = !DILocation(line: 196, column: 40, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4357, file: !31, line: 195, column: 5)
!4361 = !DILocation(line: 196, column: 29, scope: !4360)
!4362 = !DILocation(line: 196, column: 50, scope: !4360)
!4363 = !DILocation(line: 196, column: 20, scope: !4360)
!4364 = !DILocation(line: 196, column: 9, scope: !4360)
!4365 = !DILocation(line: 196, column: 18, scope: !4360)
!4366 = !DILocation(line: 197, column: 16, scope: !4360)
!4367 = !DILocation(line: 197, column: 26, scope: !4360)
!4368 = !DILocation(line: 197, column: 9, scope: !4360)
!4369 = !DILocation(line: 198, column: 25, scope: !4360)
!4370 = !DILocation(line: 198, column: 35, scope: !4360)
!4371 = !DILocation(line: 198, column: 9, scope: !4360)
!4372 = !DILocation(line: 199, column: 5, scope: !4360)
!4373 = !DILocation(line: 201, column: 9, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4344, file: !31, line: 201, column: 9)
!4375 = !DILocation(line: 201, column: 31, scope: !4374)
!4376 = !DILocation(line: 201, column: 9, scope: !4344)
!4377 = !DILocation(line: 202, column: 31, scope: !4374)
!4378 = !DILocation(line: 202, column: 9, scope: !4374)
!4379 = !DILocation(line: 203, column: 1, scope: !4344)
!4380 = distinct !DISubprogram(name: "insertSubmodule", linkageName: "_ZN7cModule15insertSubmoduleEPS_", scope: !101, file: !31, line: 135, type: !1368, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1367, retainedNodes: !324)
!4381 = !DILocalVariable(name: "this", arg: 1, scope: !4380, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4382 = !DILocation(line: 0, scope: !4380)
!4383 = !DILocalVariable(name: "mod", arg: 2, scope: !4380, file: !31, line: 135, type: !120)
!4384 = !DILocation(line: 135, column: 40, scope: !4380)
!4385 = !DILocation(line: 138, column: 5, scope: !4380)
!4386 = !DILocation(line: 138, column: 10, scope: !4380)
!4387 = !DILocation(line: 141, column: 5, scope: !4380)
!4388 = !DILocation(line: 141, column: 10, scope: !4380)
!4389 = !DILocation(line: 141, column: 16, scope: !4380)
!4390 = !DILocation(line: 142, column: 18, scope: !4380)
!4391 = !DILocation(line: 142, column: 5, scope: !4380)
!4392 = !DILocation(line: 142, column: 10, scope: !4380)
!4393 = !DILocation(line: 142, column: 16, scope: !4380)
!4394 = !DILocation(line: 143, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4380, file: !31, line: 143, column: 9)
!4396 = !DILocation(line: 143, column: 14, scope: !4395)
!4397 = !DILocation(line: 143, column: 9, scope: !4380)
!4398 = !DILocation(line: 144, column: 29, scope: !4395)
!4399 = !DILocation(line: 144, column: 9, scope: !4395)
!4400 = !DILocation(line: 144, column: 14, scope: !4395)
!4401 = !DILocation(line: 144, column: 21, scope: !4395)
!4402 = !DILocation(line: 144, column: 27, scope: !4395)
!4403 = !DILocation(line: 145, column: 10, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4380, file: !31, line: 145, column: 9)
!4405 = !DILocation(line: 145, column: 9, scope: !4380)
!4406 = !DILocation(line: 146, column: 24, scope: !4404)
!4407 = !DILocation(line: 146, column: 9, scope: !4404)
!4408 = !DILocation(line: 146, column: 22, scope: !4404)
!4409 = !DILocation(line: 147, column: 19, scope: !4380)
!4410 = !DILocation(line: 147, column: 5, scope: !4380)
!4411 = !DILocation(line: 147, column: 17, scope: !4380)
!4412 = !DILocation(line: 150, column: 27, scope: !4380)
!4413 = !DILocation(line: 151, column: 1, scope: !4380)
!4414 = distinct !DISubprogram(name: "getParentModule", linkageName: "_ZNK7cModule15getParentModuleEv", scope: !101, file: !31, line: 176, type: !1440, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1439, retainedNodes: !324)
!4415 = !DILocalVariable(name: "this", arg: 1, scope: !4414, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4416 = !DILocation(line: 0, scope: !4414)
!4417 = !DILocation(line: 178, column: 36, scope: !4414)
!4418 = !DILocation(line: 178, column: 12, scope: !4414)
!4419 = !DILocation(line: 178, column: 5, scope: !4414)
!4420 = distinct !DISubprogram(name: "setName", linkageName: "_ZN7cModule7setNameEPKc", scope: !101, file: !31, line: 181, type: !1411, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1410, retainedNodes: !324)
!4421 = !DILocalVariable(name: "this", arg: 1, scope: !4420, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4422 = !DILocation(line: 0, scope: !4420)
!4423 = !DILocalVariable(name: "s", arg: 2, scope: !4420, file: !31, line: 181, type: !167)
!4424 = !DILocation(line: 181, column: 35, scope: !4420)
!4425 = !DILocation(line: 183, column: 19, scope: !4420)
!4426 = !DILocation(line: 183, column: 27, scope: !4420)
!4427 = !DILocation(line: 184, column: 5, scope: !4420)
!4428 = !DILocation(line: 185, column: 1, scope: !4420)
!4429 = distinct !DISubprogram(name: "isVector", linkageName: "_ZNK7cModule8isVectorEv", scope: !101, file: !100, line: 486, type: !1205, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1455, retainedNodes: !324)
!4430 = !DILocalVariable(name: "this", arg: 1, scope: !4429, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4431 = !DILocation(line: 0, scope: !4429)
!4432 = !DILocation(line: 486, column: 36, scope: !4429)
!4433 = !DILocation(line: 486, column: 44, scope: !4429)
!4434 = !DILocation(line: 486, column: 29, scope: !4429)
!4435 = distinct !DISubprogram(name: "opp_strlen", linkageName: "_Z10opp_strlenPKc", scope: !93, file: !93, line: 305, type: !2676, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !324)
!4436 = !DILocalVariable(name: "s", arg: 1, scope: !4435, file: !93, line: 305, type: !167)
!4437 = !DILocation(line: 305, column: 35, scope: !4435)
!4438 = !DILocation(line: 307, column: 12, scope: !4435)
!4439 = !DILocation(line: 307, column: 23, scope: !4435)
!4440 = !DILocation(line: 307, column: 16, scope: !4435)
!4441 = !DILocation(line: 307, column: 5, scope: !4435)
!4442 = distinct !DISubprogram(name: "opp_appendindex", linkageName: "_Z15opp_appendindexPcj", scope: !93, file: !93, line: 329, type: !4443, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !324)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{null, !116, !36}
!4445 = !DILocalVariable(name: "s", arg: 1, scope: !4442, file: !93, line: 329, type: !116)
!4446 = !DILocation(line: 329, column: 35, scope: !4442)
!4447 = !DILocalVariable(name: "i", arg: 2, scope: !4442, file: !93, line: 329, type: !36)
!4448 = !DILocation(line: 329, column: 51, scope: !4442)
!4449 = !DILocation(line: 331, column: 4, scope: !4442)
!4450 = !DILocation(line: 331, column: 12, scope: !4442)
!4451 = !DILocation(line: 331, column: 11, scope: !4442)
!4452 = !DILocation(line: 331, column: 16, scope: !4442)
!4453 = distinct !{!4453, !4449, !4452}
!4454 = !DILocation(line: 332, column: 6, scope: !4442)
!4455 = !DILocation(line: 332, column: 9, scope: !4442)
!4456 = !DILocation(line: 333, column: 8, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4442, file: !93, line: 333, column: 8)
!4458 = !DILocation(line: 333, column: 9, scope: !4457)
!4459 = !DILocation(line: 333, column: 8, scope: !4442)
!4460 = !DILocation(line: 334, column: 20, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4457, file: !93, line: 334, column: 8)
!4462 = !DILocation(line: 334, column: 19, scope: !4461)
!4463 = !DILocation(line: 334, column: 16, scope: !4461)
!4464 = !DILocation(line: 334, column: 11, scope: !4461)
!4465 = !DILocation(line: 334, column: 14, scope: !4461)
!4466 = !DILocation(line: 334, column: 25, scope: !4461)
!4467 = !DILocation(line: 334, column: 27, scope: !4461)
!4468 = !DILocation(line: 334, column: 34, scope: !4461)
!4469 = !DILocation(line: 334, column: 35, scope: !4461)
!4470 = !DILocation(line: 334, column: 39, scope: !4461)
!4471 = !DILocation(line: 335, column: 8, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4442, file: !93, line: 335, column: 8)
!4473 = !DILocation(line: 335, column: 9, scope: !4472)
!4474 = !DILocation(line: 335, column: 8, scope: !4442)
!4475 = !DILocation(line: 336, column: 20, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !93, line: 336, column: 8)
!4477 = !DILocation(line: 336, column: 21, scope: !4476)
!4478 = !DILocation(line: 336, column: 19, scope: !4476)
!4479 = !DILocation(line: 336, column: 16, scope: !4476)
!4480 = !DILocation(line: 336, column: 11, scope: !4476)
!4481 = !DILocation(line: 336, column: 14, scope: !4476)
!4482 = !DILocation(line: 336, column: 35, scope: !4476)
!4483 = !DILocation(line: 336, column: 36, scope: !4476)
!4484 = !DILocation(line: 336, column: 34, scope: !4476)
!4485 = !DILocation(line: 336, column: 31, scope: !4476)
!4486 = !DILocation(line: 336, column: 28, scope: !4476)
!4487 = !DILocation(line: 336, column: 30, scope: !4476)
!4488 = !DILocation(line: 336, column: 43, scope: !4476)
!4489 = !DILocation(line: 336, column: 45, scope: !4476)
!4490 = !DILocation(line: 336, column: 52, scope: !4476)
!4491 = !DILocation(line: 336, column: 53, scope: !4476)
!4492 = !DILocation(line: 336, column: 57, scope: !4476)
!4493 = !DILocation(line: 337, column: 12, scope: !4442)
!4494 = !DILocation(line: 337, column: 20, scope: !4442)
!4495 = !DILocation(line: 337, column: 4, scope: !4442)
!4496 = !DILocation(line: 338, column: 1, scope: !4442)
!4497 = distinct !DISubprogram(name: "getIndex", linkageName: "_ZNK7cModule8getIndexEv", scope: !101, file: !100, line: 491, type: !1396, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1456, retainedNodes: !324)
!4498 = !DILocalVariable(name: "this", arg: 1, scope: !4497, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4499 = !DILocation(line: 0, scope: !4497)
!4500 = !DILocation(line: 491, column: 35, scope: !4497)
!4501 = !DILocation(line: 491, column: 28, scope: !4497)
!4502 = distinct !DISubprogram(name: "getFullName", linkageName: "_ZNK7cModule11getFullNameEv", scope: !101, file: !31, line: 205, type: !1414, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1413, retainedNodes: !324)
!4503 = !DILocalVariable(name: "this", arg: 1, scope: !4502, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4504 = !DILocation(line: 0, scope: !4502)
!4505 = !DILocation(line: 208, column: 12, scope: !4502)
!4506 = !DILocation(line: 208, column: 25, scope: !4502)
!4507 = !DILocation(line: 208, column: 36, scope: !4502)
!4508 = !DILocation(line: 208, column: 5, scope: !4502)
!4509 = distinct !DISubprogram(name: "getFullPath", linkageName: "_ZNK7cModule11getFullPathB5cxx11Ev", scope: !101, file: !31, line: 211, type: !1417, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1416, retainedNodes: !324)
!4510 = !DILocalVariable(name: "this", arg: 1, scope: !4509, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4511 = !DILocation(line: 0, scope: !4509)
!4512 = !DILocation(line: 213, column: 9, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !31, line: 213, column: 9)
!4514 = !DILocation(line: 213, column: 31, scope: !4513)
!4515 = !DILocation(line: 213, column: 9, scope: !4509)
!4516 = !DILocation(line: 217, column: 13, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !31, line: 217, column: 13)
!4518 = distinct !DILexicalBlock(scope: !4513, file: !31, line: 214, column: 5)
!4519 = !DILocation(line: 217, column: 30, scope: !4517)
!4520 = !DILocation(line: 217, column: 13, scope: !4518)
!4521 = !DILocation(line: 218, column: 34, scope: !4517)
!4522 = !DILocation(line: 218, column: 32, scope: !4517)
!4523 = !DILocation(line: 218, column: 13, scope: !4517)
!4524 = !DILocation(line: 220, column: 34, scope: !4517)
!4525 = !DILocation(line: 220, column: 53, scope: !4517)
!4526 = !DILocation(line: 220, column: 67, scope: !4517)
!4527 = !DILocation(line: 220, column: 75, scope: !4517)
!4528 = !DILocation(line: 220, column: 73, scope: !4517)
!4529 = !DILocation(line: 220, column: 32, scope: !4517)
!4530 = !DILocation(line: 220, column: 13, scope: !4517)
!4531 = !DILocation(line: 224, column: 1, scope: !4517)
!4532 = !DILocation(line: 221, column: 31, scope: !4518)
!4533 = !DILocation(line: 222, column: 5, scope: !4518)
!4534 = !DILocation(line: 223, column: 12, scope: !4509)
!4535 = !DILocation(line: 223, column: 5, scope: !4509)
!4536 = distinct !DISubprogram(name: "operator+<char, std::char_traits<char>, std::allocator<char> >", linkageName: "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_", scope: !2, file: !4537, line: 6133, type: !4538, scopeLine: 6135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !4541, retainedNodes: !324)
!4537 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.h", directory: "")
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!109, !4540, !167}
!4540 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !109, size: 64)
!4541 = !{!4542, !4543, !4595}
!4542 = !DITemplateTypeParameter(name: "_CharT", type: !117)
!4543 = !DITemplateTypeParameter(name: "_Traits", type: !4544)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "char_traits<char>", scope: !2, file: !4545, line: 309, size: 8, flags: DIFlagTypePassByValue, elements: !4546, templateParams: !4594, identifier: "_ZTSSt11char_traitsIcE")
!4545 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/char_traits.h", directory: "")
!4546 = !{!4547, !4554, !4557, !4558, !4562, !4565, !4568, !4572, !4573, !4576, !4582, !4585, !4588, !4591}
!4547 = !DISubprogram(name: "assign", linkageName: "_ZNSt11char_traitsIcE6assignERcRKc", scope: !4544, file: !4545, line: 321, type: !4548, scopeLine: 321, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{null, !4550, !4552}
!4550 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4551, size: 64)
!4551 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_type", scope: !4544, file: !4545, line: 311, baseType: !117)
!4552 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4553, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4551)
!4554 = !DISubprogram(name: "eq", linkageName: "_ZNSt11char_traitsIcE2eqERKcS2_", scope: !4544, file: !4545, line: 325, type: !4555, scopeLine: 325, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{!13, !4552, !4552}
!4557 = !DISubprogram(name: "lt", linkageName: "_ZNSt11char_traitsIcE2ltERKcS2_", scope: !4544, file: !4545, line: 329, type: !4555, scopeLine: 329, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4558 = !DISubprogram(name: "compare", linkageName: "_ZNSt11char_traitsIcE7compareEPKcS2_m", scope: !4544, file: !4545, line: 337, type: !4559, scopeLine: 337, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{!11, !4561, !4561, !262}
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4562 = !DISubprogram(name: "length", linkageName: "_ZNSt11char_traitsIcE6lengthEPKc", scope: !4544, file: !4545, line: 351, type: !4563, scopeLine: 351, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!262, !4561}
!4565 = !DISubprogram(name: "find", linkageName: "_ZNSt11char_traitsIcE4findEPKcmRS1_", scope: !4544, file: !4545, line: 361, type: !4566, scopeLine: 361, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{!4561, !4561, !262, !4552}
!4568 = !DISubprogram(name: "move", linkageName: "_ZNSt11char_traitsIcE4moveEPcPKcm", scope: !4544, file: !4545, line: 375, type: !4569, scopeLine: 375, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!4571, !4571, !4561, !262}
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4572 = !DISubprogram(name: "copy", linkageName: "_ZNSt11char_traitsIcE4copyEPcPKcm", scope: !4544, file: !4545, line: 387, type: !4569, scopeLine: 387, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4573 = !DISubprogram(name: "assign", linkageName: "_ZNSt11char_traitsIcE6assignEPcmc", scope: !4544, file: !4545, line: 399, type: !4574, scopeLine: 399, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!4571, !4571, !262, !4551}
!4576 = !DISubprogram(name: "to_char_type", linkageName: "_ZNSt11char_traitsIcE12to_char_typeERKi", scope: !4544, file: !4545, line: 411, type: !4577, scopeLine: 411, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!4551, !4579}
!4579 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4580, size: 64)
!4580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4581)
!4581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_type", scope: !4544, file: !4545, line: 312, baseType: !11)
!4582 = !DISubprogram(name: "to_int_type", linkageName: "_ZNSt11char_traitsIcE11to_int_typeERKc", scope: !4544, file: !4545, line: 417, type: !4583, scopeLine: 417, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!4581, !4552}
!4585 = !DISubprogram(name: "eq_int_type", linkageName: "_ZNSt11char_traitsIcE11eq_int_typeERKiS2_", scope: !4544, file: !4545, line: 421, type: !4586, scopeLine: 421, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!13, !4579, !4579}
!4588 = !DISubprogram(name: "eof", linkageName: "_ZNSt11char_traitsIcE3eofEv", scope: !4544, file: !4545, line: 425, type: !4589, scopeLine: 425, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!4581}
!4591 = !DISubprogram(name: "not_eof", linkageName: "_ZNSt11char_traitsIcE7not_eofERKi", scope: !4544, file: !4545, line: 429, type: !4592, scopeLine: 429, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!4581, !4579}
!4594 = !{!4542}
!4595 = !DITemplateTypeParameter(name: "_Alloc", type: !4596)
!4596 = !DICompositeType(tag: DW_TAG_class_type, name: "allocator<char>", scope: !2, file: !227, line: 249, flags: DIFlagFwdDecl, identifier: "_ZTSSaIcE")
!4597 = !DILocalVariable(name: "__lhs", arg: 1, scope: !4536, file: !4537, line: 6133, type: !4540)
!4598 = !DILocation(line: 6133, column: 55, scope: !4536)
!4599 = !DILocalVariable(name: "__rhs", arg: 2, scope: !4536, file: !4537, line: 6134, type: !167)
!4600 = !DILocation(line: 6134, column: 22, scope: !4536)
!4601 = !DILocation(line: 6135, column: 24, scope: !4536)
!4602 = !DILocation(line: 6135, column: 37, scope: !4536)
!4603 = !DILocation(line: 6135, column: 30, scope: !4536)
!4604 = !DILocation(line: 6135, column: 14, scope: !4536)
!4605 = !DILocation(line: 6135, column: 7, scope: !4536)
!4606 = distinct !DISubprogram(name: "isSimple", linkageName: "_ZNK7cModule8isSimpleEv", scope: !101, file: !31, line: 226, type: !1205, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1436, retainedNodes: !324)
!4607 = !DILocalVariable(name: "this", arg: 1, scope: !4606, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4608 = !DILocation(line: 0, scope: !4606)
!4609 = !DILocation(line: 228, column: 12, scope: !4606)
!4610 = !DILocation(line: 228, column: 54, scope: !4606)
!4611 = !DILocation(line: 228, column: 5, scope: !4606)
!4612 = distinct !DISubprogram(name: "getProperties", linkageName: "_ZNK7cModule13getPropertiesEv", scope: !101, file: !31, line: 231, type: !1449, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1448, retainedNodes: !324)
!4613 = !DILocalVariable(name: "this", arg: 1, scope: !4612, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!4614 = !DILocation(line: 0, scope: !4612)
!4615 = !DILocalVariable(name: "parent", scope: !4612, file: !31, line: 233, type: !120)
!4616 = !DILocation(line: 233, column: 14, scope: !4612)
!4617 = !DILocation(line: 233, column: 23, scope: !4612)
!4618 = !DILocalVariable(name: "type", scope: !4612, file: !31, line: 234, type: !4619)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 64)
!4620 = !DICompositeType(tag: DW_TAG_class_type, name: "cComponentType", file: !1447, line: 46, flags: DIFlagFwdDecl)
!4621 = !DILocation(line: 234, column: 21, scope: !4612)
!4622 = !DILocation(line: 234, column: 28, scope: !4612)
!4623 = !DILocalVariable(name: "props", scope: !4612, file: !31, line: 235, type: !1451)
!4624 = !DILocation(line: 235, column: 18, scope: !4612)
!4625 = !DILocation(line: 236, column: 9, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4612, file: !31, line: 236, column: 9)
!4627 = !DILocation(line: 236, column: 9, scope: !4612)
!4628 = !DILocation(line: 237, column: 17, scope: !4626)
!4629 = !DILocation(line: 237, column: 25, scope: !4626)
!4630 = !DILocation(line: 237, column: 68, scope: !4626)
!4631 = !DILocation(line: 237, column: 79, scope: !4626)
!4632 = !DILocation(line: 237, column: 85, scope: !4626)
!4633 = !DILocation(line: 237, column: 45, scope: !4626)
!4634 = !DILocation(line: 237, column: 15, scope: !4626)
!4635 = !DILocation(line: 237, column: 9, scope: !4626)
!4636 = !DILocation(line: 239, column: 17, scope: !4626)
!4637 = !DILocation(line: 239, column: 23, scope: !4626)
!4638 = !DILocation(line: 239, column: 15, scope: !4626)
!4639 = !DILocation(line: 240, column: 12, scope: !4612)
!4640 = !DILocation(line: 240, column: 5, scope: !4612)
!4641 = distinct !DISubprogram(name: "createGateObject", linkageName: "_ZN7cModule16createGateObjectEN5cGate4TypeE", scope: !101, file: !31, line: 243, type: !1372, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1371, retainedNodes: !324)
!4642 = !DILocalVariable(name: "this", arg: 1, scope: !4641, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4643 = !DILocation(line: 0, scope: !4641)
!4644 = !DILocalVariable(arg: 2, scope: !4641, file: !31, line: 243, type: !33)
!4645 = !DILocation(line: 243, column: 45, scope: !4641)
!4646 = !DILocation(line: 245, column: 12, scope: !4641)
!4647 = !DILocation(line: 245, column: 16, scope: !4641)
!4648 = !DILocation(line: 245, column: 5, scope: !4641)
!4649 = !DILocation(line: 246, column: 1, scope: !4641)
!4650 = distinct !DISubprogram(name: "__cxx_global_var_init.3", scope: !31, file: !31, line: 248, type: !1244, scopeLine: 248, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !324)
!4651 = !DILocation(line: 248, column: 28, scope: !4650)
!4652 = distinct !DISubprogram(name: "set", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EEC2Ev", scope: !126, file: !127, line: 167, type: !944, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !943, retainedNodes: !324)
!4653 = !DILocalVariable(name: "this", arg: 1, scope: !4652, type: !4654, flags: DIFlagArtificial | DIFlagObjectPointer)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!4655 = !DILocation(line: 0, scope: !4652)
!4656 = !DILocation(line: 167, column: 7, scope: !4652)
!4657 = !DILocation(line: 167, column: 21, scope: !4652)
!4658 = distinct !DISubprogram(name: "~set", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EED2Ev", scope: !126, file: !127, line: 281, type: !944, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !979, retainedNodes: !324)
!4659 = !DILocalVariable(name: "this", arg: 1, scope: !4658, type: !4654, flags: DIFlagArtificial | DIFlagObjectPointer)
!4660 = !DILocation(line: 0, scope: !4658)
!4661 = !DILocation(line: 281, column: 22, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4658, file: !127, line: 281, column: 22)
!4663 = !DILocation(line: 281, column: 22, scope: !4658)
!4664 = distinct !DISubprogram(name: "disposeGateObject", linkageName: "_ZN7cModule17disposeGateObjectEP5cGateb", scope: !101, file: !31, line: 250, type: !1378, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1377, retainedNodes: !324)
!4665 = !DILocalVariable(name: "this", arg: 1, scope: !4664, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4666 = !DILocation(line: 0, scope: !4664)
!4667 = !DILocalVariable(name: "gate", arg: 2, scope: !4664, file: !31, line: 250, type: !1147)
!4668 = !DILocation(line: 250, column: 40, scope: !4664)
!4669 = !DILocalVariable(name: "checkConnected", arg: 3, scope: !4664, file: !31, line: 250, type: !13)
!4670 = !DILocation(line: 250, column: 51, scope: !4664)
!4671 = !DILocation(line: 252, column: 9, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !31, line: 252, column: 9)
!4673 = !DILocation(line: 252, column: 9, scope: !4664)
!4674 = !DILocation(line: 254, column: 13, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !31, line: 254, column: 13)
!4676 = distinct !DILexicalBlock(scope: !4672, file: !31, line: 253, column: 5)
!4677 = !DILocation(line: 254, column: 28, scope: !4675)
!4678 = !DILocation(line: 254, column: 32, scope: !4675)
!4679 = !DILocation(line: 254, column: 38, scope: !4675)
!4680 = !DILocation(line: 254, column: 56, scope: !4675)
!4681 = !DILocation(line: 254, column: 59, scope: !4675)
!4682 = !DILocation(line: 254, column: 65, scope: !4675)
!4683 = !DILocation(line: 254, column: 13, scope: !4676)
!4684 = !DILocation(line: 255, column: 13, scope: !4675)
!4685 = !DILocation(line: 255, column: 33, scope: !4675)
!4686 = !DILocation(line: 255, column: 89, scope: !4675)
!4687 = !DILocation(line: 255, column: 95, scope: !4675)
!4688 = !DILocation(line: 255, column: 19, scope: !4675)
!4689 = !DILocation(line: 259, column: 1, scope: !4675)
!4690 = !DILocation(line: 256, column: 9, scope: !4676)
!4691 = !DILocation(line: 256, column: 26, scope: !4676)
!4692 = !DILocation(line: 256, column: 14, scope: !4676)
!4693 = !DILocation(line: 257, column: 16, scope: !4676)
!4694 = !DILocation(line: 257, column: 9, scope: !4676)
!4695 = !DILocation(line: 258, column: 5, scope: !4676)
!4696 = !DILocation(line: 259, column: 1, scope: !4664)
!4697 = distinct !DISubprogram(name: "disposeGateDesc", linkageName: "_ZN7cModule15disposeGateDescEPN5cGate4DescEb", scope: !101, file: !31, line: 261, type: !1375, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1374, retainedNodes: !324)
!4698 = !DILocalVariable(name: "this", arg: 1, scope: !4697, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4699 = !DILocation(line: 0, scope: !4697)
!4700 = !DILocalVariable(name: "desc", arg: 2, scope: !4697, file: !31, line: 261, type: !1137)
!4701 = !DILocation(line: 261, column: 44, scope: !4697)
!4702 = !DILocalVariable(name: "checkConnected", arg: 3, scope: !4697, file: !31, line: 261, type: !13)
!4703 = !DILocation(line: 261, column: 55, scope: !4697)
!4704 = !DILocation(line: 263, column: 9, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4697, file: !31, line: 263, column: 9)
!4706 = !DILocation(line: 263, column: 15, scope: !4705)
!4707 = !DILocation(line: 263, column: 9, scope: !4697)
!4708 = !DILocation(line: 265, column: 14, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !31, line: 265, column: 13)
!4710 = distinct !DILexicalBlock(scope: !4705, file: !31, line: 264, column: 5)
!4711 = !DILocation(line: 265, column: 20, scope: !4709)
!4712 = !DILocation(line: 265, column: 13, scope: !4710)
!4713 = !DILocation(line: 266, column: 31, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4709, file: !31, line: 265, column: 32)
!4715 = !DILocation(line: 266, column: 37, scope: !4714)
!4716 = !DILocation(line: 266, column: 48, scope: !4714)
!4717 = !DILocation(line: 266, column: 13, scope: !4714)
!4718 = !DILocation(line: 267, column: 31, scope: !4714)
!4719 = !DILocation(line: 267, column: 37, scope: !4714)
!4720 = !DILocation(line: 267, column: 49, scope: !4714)
!4721 = !DILocation(line: 267, column: 13, scope: !4714)
!4722 = !DILocation(line: 268, column: 9, scope: !4714)
!4723 = !DILocalVariable(name: "j", scope: !4724, file: !31, line: 270, type: !11)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !31, line: 270, column: 13)
!4725 = distinct !DILexicalBlock(scope: !4709, file: !31, line: 269, column: 14)
!4726 = !DILocation(line: 270, column: 22, scope: !4724)
!4727 = !DILocation(line: 270, column: 18, scope: !4724)
!4728 = !DILocation(line: 270, column: 27, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4724, file: !31, line: 270, column: 13)
!4730 = !DILocation(line: 270, column: 29, scope: !4729)
!4731 = !DILocation(line: 270, column: 35, scope: !4729)
!4732 = !DILocation(line: 270, column: 28, scope: !4729)
!4733 = !DILocation(line: 270, column: 13, scope: !4724)
!4734 = !DILocation(line: 271, column: 21, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !31, line: 271, column: 21)
!4736 = distinct !DILexicalBlock(scope: !4729, file: !31, line: 270, column: 52)
!4737 = !DILocation(line: 271, column: 27, scope: !4735)
!4738 = !DILocation(line: 271, column: 21, scope: !4736)
!4739 = !DILocation(line: 272, column: 39, scope: !4735)
!4740 = !DILocation(line: 272, column: 45, scope: !4735)
!4741 = !DILocation(line: 272, column: 56, scope: !4735)
!4742 = !DILocation(line: 272, column: 60, scope: !4735)
!4743 = !DILocation(line: 272, column: 21, scope: !4735)
!4744 = !DILocation(line: 273, column: 21, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4736, file: !31, line: 273, column: 21)
!4746 = !DILocation(line: 273, column: 27, scope: !4745)
!4747 = !DILocation(line: 273, column: 21, scope: !4736)
!4748 = !DILocation(line: 274, column: 39, scope: !4745)
!4749 = !DILocation(line: 274, column: 45, scope: !4745)
!4750 = !DILocation(line: 274, column: 57, scope: !4745)
!4751 = !DILocation(line: 274, column: 61, scope: !4745)
!4752 = !DILocation(line: 274, column: 21, scope: !4745)
!4753 = !DILocation(line: 275, column: 13, scope: !4736)
!4754 = !DILocation(line: 270, column: 48, scope: !4729)
!4755 = !DILocation(line: 270, column: 13, scope: !4729)
!4756 = distinct !{!4756, !4733, !4757}
!4757 = !DILocation(line: 275, column: 13, scope: !4724)
!4758 = !DILocation(line: 276, column: 23, scope: !4725)
!4759 = !DILocation(line: 276, column: 29, scope: !4725)
!4760 = !DILocation(line: 276, column: 13, scope: !4725)
!4761 = !DILocation(line: 277, column: 23, scope: !4725)
!4762 = !DILocation(line: 277, column: 29, scope: !4725)
!4763 = !DILocation(line: 277, column: 13, scope: !4725)
!4764 = !DILocation(line: 279, column: 9, scope: !4710)
!4765 = !DILocation(line: 279, column: 15, scope: !4710)
!4766 = !DILocation(line: 279, column: 21, scope: !4710)
!4767 = !DILocation(line: 280, column: 5, scope: !4710)
!4768 = !DILocation(line: 281, column: 1, scope: !4697)
!4769 = distinct !DISubprogram(name: "isVector", linkageName: "_ZNK5cGate4Desc8isVectorEv", scope: !1138, file: !34, line: 111, type: !1160, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1167, retainedNodes: !324)
!4770 = !DILocalVariable(name: "this", arg: 1, scope: !4769, type: !4771, flags: DIFlagArtificial | DIFlagObjectPointer)
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!4772 = !DILocation(line: 0, scope: !4769)
!4773 = !DILocation(line: 111, column: 39, scope: !4769)
!4774 = !DILocation(line: 111, column: 43, scope: !4769)
!4775 = !DILocation(line: 111, column: 32, scope: !4769)
!4776 = distinct !DISubprogram(name: "gateSize", linkageName: "_ZNK5cGate4Desc8gateSizeEv", scope: !1138, file: !34, line: 118, type: !1185, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1184, retainedNodes: !324)
!4777 = !DILocalVariable(name: "this", arg: 1, scope: !4776, type: !4771, flags: DIFlagArtificial | DIFlagObjectPointer)
!4778 = !DILocation(line: 0, scope: !4776)
!4779 = !DILocation(line: 118, column: 38, scope: !4776)
!4780 = !DILocation(line: 118, column: 42, scope: !4776)
!4781 = !DILocation(line: 118, column: 48, scope: !4776)
!4782 = !DILocation(line: 118, column: 31, scope: !4776)
!4783 = distinct !DISubprogram(name: "clearNamePools", linkageName: "_ZN7cModule14clearNamePoolsEv", scope: !101, file: !31, line: 292, type: !1244, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1394, retainedNodes: !324)
!4784 = !DILocation(line: 294, column: 14, scope: !4783)
!4785 = !DILocation(line: 295, column: 5, scope: !4783)
!4786 = !DILocation(line: 296, column: 1, scope: !4783)
!4787 = distinct !DISubprogram(name: "clear", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE5clearEv", scope: !126, file: !127, line: 733, type: !944, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1114, retainedNodes: !324)
!4788 = !DILocalVariable(name: "this", arg: 1, scope: !4787, type: !4654, flags: DIFlagArtificial | DIFlagObjectPointer)
!4789 = !DILocation(line: 0, scope: !4787)
!4790 = !DILocation(line: 734, column: 9, scope: !4787)
!4791 = !DILocation(line: 734, column: 14, scope: !4787)
!4792 = !DILocation(line: 734, column: 23, scope: !4787)
!4793 = distinct !DISubprogram(name: "adjustGateDesc", linkageName: "_ZN7cModule14adjustGateDescEP5cGatePNS0_4DescE", scope: !101, file: !31, line: 298, type: !1391, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1390, retainedNodes: !324)
!4794 = !DILocalVariable(name: "this", arg: 1, scope: !4793, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4795 = !DILocation(line: 0, scope: !4793)
!4796 = !DILocalVariable(name: "gate", arg: 2, scope: !4793, file: !31, line: 298, type: !1147)
!4797 = !DILocation(line: 298, column: 37, scope: !4793)
!4798 = !DILocalVariable(name: "newvec", arg: 3, scope: !4793, file: !31, line: 298, type: !1137)
!4799 = !DILocation(line: 298, column: 56, scope: !4793)
!4800 = !DILocation(line: 300, column: 9, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4793, file: !31, line: 300, column: 9)
!4802 = !DILocation(line: 300, column: 9, scope: !4793)
!4803 = !DILocation(line: 303, column: 22, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4801, file: !31, line: 300, column: 15)
!4805 = !DILocation(line: 303, column: 32, scope: !4804)
!4806 = !DILocation(line: 303, column: 38, scope: !4804)
!4807 = !DILocation(line: 303, column: 45, scope: !4804)
!4808 = !DILocation(line: 303, column: 43, scope: !4804)
!4809 = !DILocation(line: 303, column: 29, scope: !4804)
!4810 = !DILocation(line: 303, column: 9, scope: !4804)
!4811 = !DILocation(line: 303, column: 15, scope: !4804)
!4812 = !DILocation(line: 303, column: 20, scope: !4804)
!4813 = !DILocation(line: 304, column: 5, scope: !4804)
!4814 = !DILocation(line: 305, column: 1, scope: !4793)
!4815 = distinct !DISubprogram(name: "addGateDesc", linkageName: "_ZN7cModule11addGateDescEPKcN5cGate4TypeEb", scope: !101, file: !31, line: 307, type: !1381, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1380, retainedNodes: !324)
!4816 = !DILocalVariable(name: "this", arg: 1, scope: !4815, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!4817 = !DILocation(line: 0, scope: !4815)
!4818 = !DILocalVariable(name: "gatename", arg: 2, scope: !4815, file: !31, line: 307, type: !167)
!4819 = !DILocation(line: 307, column: 47, scope: !4815)
!4820 = !DILocalVariable(name: "type", arg: 3, scope: !4815, file: !31, line: 307, type: !33)
!4821 = !DILocation(line: 307, column: 69, scope: !4815)
!4822 = !DILocalVariable(name: "isVector", arg: 4, scope: !4815, file: !31, line: 307, type: !13)
!4823 = !DILocation(line: 307, column: 80, scope: !4815)
!4824 = !DILocation(line: 310, column: 9, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4815, file: !31, line: 310, column: 9)
!4826 = !DILocation(line: 310, column: 9, scope: !4815)
!4827 = !DILocation(line: 311, column: 13, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !31, line: 311, column: 13)
!4829 = distinct !DILexicalBlock(scope: !4825, file: !31, line: 310, column: 19)
!4830 = !DILocation(line: 311, column: 23, scope: !4828)
!4831 = !DILocation(line: 311, column: 13, scope: !4829)
!4832 = !DILocation(line: 312, column: 13, scope: !4828)
!4833 = !DILocation(line: 312, column: 33, scope: !4828)
!4834 = !DILocation(line: 312, column: 102, scope: !4828)
!4835 = !DILocation(line: 312, column: 19, scope: !4828)
!4836 = !DILocation(line: 357, column: 1, scope: !4828)
!4837 = !DILocation(line: 313, column: 5, scope: !4829)
!4838 = !DILocation(line: 315, column: 13, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !31, line: 315, column: 13)
!4840 = distinct !DILexicalBlock(scope: !4825, file: !31, line: 314, column: 10)
!4841 = !DILocation(line: 315, column: 23, scope: !4839)
!4842 = !DILocation(line: 315, column: 13, scope: !4840)
!4843 = !DILocation(line: 316, column: 13, scope: !4839)
!4844 = !DILocation(line: 316, column: 33, scope: !4839)
!4845 = !DILocation(line: 316, column: 100, scope: !4839)
!4846 = !DILocation(line: 316, column: 19, scope: !4839)
!4847 = !DILocation(line: 357, column: 1, scope: !4839)
!4848 = !DILocalVariable(name: "newv", scope: !4815, file: !31, line: 321, type: !1137)
!4849 = !DILocation(line: 321, column: 18, scope: !4815)
!4850 = !DILocation(line: 321, column: 41, scope: !4815)
!4851 = !DILocation(line: 321, column: 50, scope: !4815)
!4852 = !DILocation(line: 321, column: 25, scope: !4815)
!4853 = !DILocation(line: 322, column: 12, scope: !4815)
!4854 = !DILocation(line: 322, column: 5, scope: !4815)
!4855 = !DILocation(line: 322, column: 18, scope: !4815)
!4856 = !DILocation(line: 322, column: 25, scope: !4815)
!4857 = !DILocation(line: 322, column: 34, scope: !4815)
!4858 = !DILocalVariable(name: "i", scope: !4859, file: !31, line: 325, type: !11)
!4859 = distinct !DILexicalBlock(scope: !4815, file: !31, line: 325, column: 5)
!4860 = !DILocation(line: 325, column: 14, scope: !4859)
!4861 = !DILocation(line: 325, column: 10, scope: !4859)
!4862 = !DILocation(line: 325, column: 19, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4859, file: !31, line: 325, column: 5)
!4864 = !DILocation(line: 325, column: 21, scope: !4863)
!4865 = !DILocation(line: 325, column: 20, scope: !4863)
!4866 = !DILocation(line: 325, column: 5, scope: !4859)
!4867 = !DILocalVariable(name: "desc", scope: !4868, file: !31, line: 327, type: !1137)
!4868 = distinct !DILexicalBlock(scope: !4863, file: !31, line: 326, column: 5)
!4869 = !DILocation(line: 327, column: 22, scope: !4868)
!4870 = !DILocation(line: 327, column: 29, scope: !4868)
!4871 = !DILocation(line: 327, column: 37, scope: !4868)
!4872 = !DILocation(line: 327, column: 35, scope: !4868)
!4873 = !DILocation(line: 328, column: 13, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4868, file: !31, line: 328, column: 13)
!4875 = !DILocation(line: 328, column: 19, scope: !4874)
!4876 = !DILocation(line: 328, column: 13, scope: !4868)
!4877 = !DILocation(line: 329, column: 18, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !31, line: 329, column: 17)
!4879 = distinct !DILexicalBlock(scope: !4874, file: !31, line: 328, column: 26)
!4880 = !DILocation(line: 329, column: 24, scope: !4878)
!4881 = !DILocation(line: 329, column: 17, scope: !4879)
!4882 = !DILocation(line: 330, column: 32, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4878, file: !31, line: 329, column: 36)
!4884 = !DILocation(line: 330, column: 38, scope: !4883)
!4885 = !DILocation(line: 330, column: 49, scope: !4883)
!4886 = !DILocation(line: 330, column: 17, scope: !4883)
!4887 = !DILocation(line: 331, column: 32, scope: !4883)
!4888 = !DILocation(line: 331, column: 38, scope: !4883)
!4889 = !DILocation(line: 331, column: 50, scope: !4883)
!4890 = !DILocation(line: 331, column: 17, scope: !4883)
!4891 = !DILocation(line: 332, column: 13, scope: !4883)
!4892 = !DILocation(line: 357, column: 1, scope: !4815)
!4893 = !DILocalVariable(name: "j", scope: !4894, file: !31, line: 334, type: !11)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !31, line: 334, column: 17)
!4895 = distinct !DILexicalBlock(scope: !4878, file: !31, line: 333, column: 18)
!4896 = !DILocation(line: 334, column: 26, scope: !4894)
!4897 = !DILocation(line: 334, column: 22, scope: !4894)
!4898 = !DILocation(line: 334, column: 31, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4894, file: !31, line: 334, column: 17)
!4900 = !DILocation(line: 334, column: 33, scope: !4899)
!4901 = !DILocation(line: 334, column: 39, scope: !4899)
!4902 = !DILocation(line: 334, column: 32, scope: !4899)
!4903 = !DILocation(line: 334, column: 17, scope: !4894)
!4904 = !DILocation(line: 335, column: 25, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !31, line: 335, column: 25)
!4906 = distinct !DILexicalBlock(scope: !4899, file: !31, line: 334, column: 56)
!4907 = !DILocation(line: 335, column: 31, scope: !4905)
!4908 = !DILocation(line: 335, column: 25, scope: !4906)
!4909 = !DILocation(line: 336, column: 40, scope: !4905)
!4910 = !DILocation(line: 336, column: 46, scope: !4905)
!4911 = !DILocation(line: 336, column: 57, scope: !4905)
!4912 = !DILocation(line: 336, column: 61, scope: !4905)
!4913 = !DILocation(line: 336, column: 25, scope: !4905)
!4914 = !DILocation(line: 337, column: 25, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4906, file: !31, line: 337, column: 25)
!4916 = !DILocation(line: 337, column: 31, scope: !4915)
!4917 = !DILocation(line: 337, column: 25, scope: !4906)
!4918 = !DILocation(line: 338, column: 40, scope: !4915)
!4919 = !DILocation(line: 338, column: 46, scope: !4915)
!4920 = !DILocation(line: 338, column: 58, scope: !4915)
!4921 = !DILocation(line: 338, column: 62, scope: !4915)
!4922 = !DILocation(line: 338, column: 25, scope: !4915)
!4923 = !DILocation(line: 339, column: 17, scope: !4906)
!4924 = !DILocation(line: 334, column: 52, scope: !4899)
!4925 = !DILocation(line: 334, column: 17, scope: !4899)
!4926 = distinct !{!4926, !4903, !4927}
!4927 = !DILocation(line: 339, column: 17, scope: !4894)
!4928 = !DILocation(line: 341, column: 9, scope: !4879)
!4929 = !DILocation(line: 342, column: 5, scope: !4868)
!4930 = !DILocation(line: 325, column: 33, scope: !4863)
!4931 = !DILocation(line: 325, column: 5, scope: !4863)
!4932 = distinct !{!4932, !4866, !4933}
!4933 = !DILocation(line: 342, column: 5, scope: !4859)
!4934 = !DILocation(line: 345, column: 15, scope: !4815)
!4935 = !DILocation(line: 345, column: 5, scope: !4815)
!4936 = !DILocation(line: 346, column: 13, scope: !4815)
!4937 = !DILocation(line: 346, column: 5, scope: !4815)
!4938 = !DILocation(line: 346, column: 11, scope: !4815)
!4939 = !DILocalVariable(name: "newDesc", scope: !4815, file: !31, line: 347, type: !1137)
!4940 = !DILocation(line: 347, column: 18, scope: !4815)
!4941 = !DILocation(line: 347, column: 28, scope: !4815)
!4942 = !DILocation(line: 347, column: 36, scope: !4815)
!4943 = !DILocation(line: 347, column: 45, scope: !4815)
!4944 = !DILocation(line: 347, column: 34, scope: !4815)
!4945 = !DILocalVariable(name: "key", scope: !4815, file: !31, line: 350, type: !153)
!4946 = !DILocation(line: 350, column: 17, scope: !4815)
!4947 = !DILocation(line: 350, column: 21, scope: !4815)
!4948 = !DILocation(line: 350, column: 31, scope: !4815)
!4949 = !DILocalVariable(name: "it", scope: !4815, file: !31, line: 351, type: !1005)
!4950 = !DILocation(line: 351, column: 24, scope: !4815)
!4951 = !DILocation(line: 351, column: 38, scope: !4815)
!4952 = !DILocation(line: 352, column: 22, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4815, file: !31, line: 352, column: 9)
!4954 = !DILocation(line: 352, column: 11, scope: !4953)
!4955 = !DILocation(line: 352, column: 9, scope: !4815)
!4956 = !DILocation(line: 353, column: 23, scope: !4953)
!4957 = !DILocation(line: 353, column: 35, scope: !4953)
!4958 = !DILocation(line: 353, column: 12, scope: !4953)
!4959 = !DILocation(line: 353, column: 9, scope: !4953)
!4960 = !DILocation(line: 354, column: 49, scope: !4815)
!4961 = !DILocation(line: 354, column: 5, scope: !4815)
!4962 = !DILocation(line: 354, column: 14, scope: !4815)
!4963 = !DILocation(line: 354, column: 20, scope: !4815)
!4964 = !DILocation(line: 355, column: 21, scope: !4815)
!4965 = !DILocation(line: 355, column: 5, scope: !4815)
!4966 = !DILocation(line: 355, column: 14, scope: !4815)
!4967 = !DILocation(line: 355, column: 19, scope: !4815)
!4968 = !DILocation(line: 356, column: 12, scope: !4815)
!4969 = distinct !DISubprogram(name: "Desc", linkageName: "_ZN5cGate4DescC2Ev", scope: !1138, file: !34, line: 108, type: !1156, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1155, retainedNodes: !324)
!4970 = !DILocalVariable(name: "this", arg: 1, scope: !4969, type: !1137, flags: DIFlagArtificial | DIFlagObjectPointer)
!4971 = !DILocation(line: 0, scope: !4969)
!4972 = !DILocation(line: 108, column: 17, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4969, file: !34, line: 108, column: 16)
!4974 = !DILocation(line: 108, column: 23, scope: !4973)
!4975 = !DILocation(line: 108, column: 30, scope: !4973)
!4976 = !DILocation(line: 108, column: 34, scope: !4973)
!4977 = !DILocation(line: 108, column: 39, scope: !4973)
!4978 = !DILocation(line: 108, column: 44, scope: !4973)
!4979 = !DILocation(line: 108, column: 61, scope: !4973)
!4980 = !DILocation(line: 108, column: 71, scope: !4973)
!4981 = !DILocation(line: 108, column: 51, scope: !4973)
!4982 = !DILocation(line: 108, column: 60, scope: !4973)
!4983 = !DILocation(line: 108, column: 77, scope: !4969)
!4984 = distinct !DISubprogram(name: "find", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE4findERKS1_", scope: !126, file: !127, line: 794, type: !1119, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1118, retainedNodes: !324)
!4985 = !DILocalVariable(name: "this", arg: 1, scope: !4984, type: !4654, flags: DIFlagArtificial | DIFlagObjectPointer)
!4986 = !DILocation(line: 0, scope: !4984)
!4987 = !DILocalVariable(name: "__x", arg: 2, scope: !4984, file: !127, line: 794, type: !1108)
!4988 = !DILocation(line: 794, column: 28, scope: !4984)
!4989 = !DILocation(line: 795, column: 16, scope: !4984)
!4990 = !DILocation(line: 795, column: 26, scope: !4984)
!4991 = !DILocation(line: 795, column: 21, scope: !4984)
!4992 = !DILocation(line: 795, column: 9, scope: !4984)
!4993 = distinct !DISubprogram(name: "operator==", linkageName: "_ZSteqRKSt23_Rb_tree_const_iteratorIN5cGate4NameEES4_", scope: !2, file: !43, line: 396, type: !4994, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !324)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!13, !4996, !4996}
!4996 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !4997, size: 64)
!4997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !740)
!4998 = !DILocalVariable(name: "__x", arg: 1, scope: !4993, file: !43, line: 396, type: !4996)
!4999 = !DILocation(line: 396, column: 31, scope: !4993)
!5000 = !DILocalVariable(name: "__y", arg: 2, scope: !4993, file: !43, line: 396, type: !4996)
!5001 = !DILocation(line: 396, column: 49, scope: !4993)
!5002 = !DILocation(line: 397, column: 16, scope: !4993)
!5003 = !DILocation(line: 397, column: 20, scope: !4993)
!5004 = !DILocation(line: 397, column: 31, scope: !4993)
!5005 = !DILocation(line: 397, column: 35, scope: !4993)
!5006 = !DILocation(line: 397, column: 28, scope: !4993)
!5007 = !DILocation(line: 397, column: 9, scope: !4993)
!5008 = distinct !DISubprogram(name: "end", linkageName: "_ZNKSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE3endEv", scope: !126, file: !127, line: 353, type: !1003, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1006, retainedNodes: !324)
!5009 = !DILocalVariable(name: "this", arg: 1, scope: !5008, type: !5010, flags: DIFlagArtificial | DIFlagObjectPointer)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!5011 = !DILocation(line: 0, scope: !5008)
!5012 = !DILocation(line: 354, column: 16, scope: !5008)
!5013 = !DILocation(line: 354, column: 21, scope: !5008)
!5014 = !DILocation(line: 354, column: 9, scope: !5008)
!5015 = distinct !DISubprogram(name: "insert", linkageName: "_ZNSt3setIN5cGate4NameESt4lessIS1_ESaIS1_EE6insertERKS1_", scope: !126, file: !127, line: 509, type: !1028, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1027, retainedNodes: !324)
!5016 = !DILocalVariable(name: "this", arg: 1, scope: !5015, type: !4654, flags: DIFlagArtificial | DIFlagObjectPointer)
!5017 = !DILocation(line: 0, scope: !5015)
!5018 = !DILocalVariable(name: "__x", arg: 2, scope: !5015, file: !127, line: 509, type: !1085)
!5019 = !DILocation(line: 509, column: 32, scope: !5015)
!5020 = !DILocalVariable(name: "__p", scope: !5015, file: !127, line: 511, type: !5021)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pair<std::_Rb_tree_iterator<cGate::Name>, bool>", scope: !2, file: !604, line: 211, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !5022, templateParams: !5072, identifier: "_ZTSSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbE")
!5022 = !{!5023, !5042, !5043, !5044, !5050, !5054, !5062, !5069}
!5023 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !5021, baseType: !5024, flags: DIFlagPrivate, extraData: i32 0)
!5024 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "__pair_base<std::_Rb_tree_iterator<cGate::Name>, bool>", scope: !2, file: !604, line: 189, size: 8, flags: DIFlagTypePassByValue, elements: !5025, templateParams: !5040, identifier: "_ZTSSt11__pair_baseISt17_Rb_tree_iteratorIN5cGate4NameEEbE")
!5025 = !{!5026, !5030, !5031, !5036}
!5026 = !DISubprogram(name: "__pair_base", scope: !5024, file: !604, line: 193, type: !5027, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{null, !5029}
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!5030 = !DISubprogram(name: "~__pair_base", scope: !5024, file: !604, line: 194, type: !5027, scopeLine: 194, flags: DIFlagPrototyped, spFlags: 0)
!5031 = !DISubprogram(name: "__pair_base", scope: !5024, file: !604, line: 195, type: !5032, scopeLine: 195, flags: DIFlagPrototyped, spFlags: 0)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{null, !5029, !5034}
!5034 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !5035, size: 64)
!5035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5024)
!5036 = !DISubprogram(name: "operator=", linkageName: "_ZNSt11__pair_baseISt17_Rb_tree_iteratorIN5cGate4NameEEbEaSERKS4_", scope: !5024, file: !604, line: 196, type: !5037, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDeleted)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{!5039, !5029, !5034}
!5039 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !5024, size: 64)
!5040 = !{!5041, !1051}
!5041 = !DITemplateTypeParameter(name: "_U1", type: !692)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !5021, file: !604, line: 217, baseType: !692, size: 64)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !5021, file: !604, line: 218, baseType: !13, size: 8, offset: 64)
!5044 = !DISubprogram(name: "pair", scope: !5021, file: !604, line: 314, type: !5045, scopeLine: 314, flags: DIFlagPrototyped, spFlags: 0)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{null, !5047, !5048}
!5047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!5048 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !5049, size: 64)
!5049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5021)
!5050 = !DISubprogram(name: "pair", scope: !5021, file: !604, line: 315, type: !5051, scopeLine: 315, flags: DIFlagPrototyped, spFlags: 0)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{null, !5047, !5053}
!5053 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !5021, size: 64)
!5054 = !DISubprogram(name: "operator=", linkageName: "_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEaSERKS4_", scope: !5021, file: !604, line: 390, type: !5055, scopeLine: 390, flags: DIFlagPrototyped, spFlags: 0)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!5057, !5047, !5058}
!5057 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !5021, size: 64)
!5058 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !5059, file: !643, line: 2201, baseType: !5048)
!5059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<true, const std::pair<std::_Rb_tree_iterator<cGate::Name>, bool> &, const std::__nonesuch &>", scope: !2, file: !643, line: 2200, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !5060, identifier: "_ZTSSt11conditionalILb1ERKSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbERKSt10__nonesuchE")
!5060 = !{!646, !5061, !648}
!5061 = !DITemplateTypeParameter(name: "_Iftrue", type: !5048)
!5062 = !DISubprogram(name: "operator=", linkageName: "_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEaSEOS4_", scope: !5021, file: !604, line: 401, type: !5063, scopeLine: 401, flags: DIFlagPrototyped, spFlags: 0)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!5057, !5047, !5065}
!5065 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !5066, file: !643, line: 2201, baseType: !5053)
!5066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<true, std::pair<std::_Rb_tree_iterator<cGate::Name>, bool> &&, std::__nonesuch &&>", scope: !2, file: !643, line: 2200, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !5067, identifier: "_ZTSSt11conditionalILb1EOSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEOSt10__nonesuchE")
!5067 = !{!646, !5068, !659}
!5068 = !DITemplateTypeParameter(name: "_Iftrue", type: !5053)
!5069 = !DISubprogram(name: "swap", linkageName: "_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbE4swapERS4_", scope: !5021, file: !604, line: 439, type: !5070, scopeLine: 439, flags: DIFlagPrototyped, spFlags: 0)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{null, !5047, !5057}
!5072 = !{!5073, !1084}
!5073 = !DITemplateTypeParameter(name: "_T1", type: !692)
!5074 = !DILocation(line: 511, column: 48, scope: !5015)
!5075 = !DILocation(line: 512, column: 4, scope: !5015)
!5076 = !DILocation(line: 512, column: 26, scope: !5015)
!5077 = !DILocation(line: 512, column: 9, scope: !5015)
!5078 = !DILocation(line: 513, column: 39, scope: !5015)
!5079 = !DILocation(line: 513, column: 50, scope: !5015)
!5080 = !DILocation(line: 513, column: 9, scope: !5015)
!5081 = !DILocation(line: 513, column: 2, scope: !5015)
!5082 = distinct !DISubprogram(name: "operator*", linkageName: "_ZNKSt23_Rb_tree_const_iteratorIN5cGate4NameEEdeEv", scope: !675, file: !43, line: 358, type: !729, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !728, retainedNodes: !324)
!5083 = !DILocalVariable(name: "this", arg: 1, scope: !5082, type: !5084, flags: DIFlagArtificial | DIFlagObjectPointer)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!5085 = !DILocation(line: 0, scope: !5082)
!5086 = !DILocation(line: 359, column: 41, scope: !5082)
!5087 = !DILocation(line: 359, column: 17, scope: !5082)
!5088 = !DILocation(line: 359, column: 51, scope: !5082)
!5089 = !DILocation(line: 359, column: 9, scope: !5082)
!5090 = distinct !DISubprogram(name: "~Name", linkageName: "_ZN5cGate4NameD2Ev", scope: !153, file: !34, line: 83, type: !5091, scopeLine: 83, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !5093, retainedNodes: !324)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{null, !217}
!5093 = !DISubprogram(name: "~Name", scope: !153, type: !5091, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: 0)
!5094 = !DILocalVariable(name: "this", arg: 1, scope: !5090, type: !152, flags: DIFlagArtificial | DIFlagObjectPointer)
!5095 = !DILocation(line: 0, scope: !5090)
!5096 = !DILocation(line: 83, column: 20, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5090, file: !34, line: 83, column: 20)
!5098 = !DILocation(line: 83, column: 20, scope: !5090)
!5099 = distinct !DISubprogram(name: "findGateDesc", linkageName: "_ZNK7cModule12findGateDescEPKcRc", scope: !101, file: !31, line: 359, type: !1384, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1383, retainedNodes: !324)
!5100 = !DILocalVariable(name: "this", arg: 1, scope: !5099, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!5101 = !DILocation(line: 0, scope: !5099)
!5102 = !DILocalVariable(name: "gatename", arg: 2, scope: !5099, file: !31, line: 359, type: !167)
!5103 = !DILocation(line: 359, column: 39, scope: !5099)
!5104 = !DILocalVariable(name: "suffix", arg: 3, scope: !5099, file: !31, line: 359, type: !1386)
!5105 = !DILocation(line: 359, column: 55, scope: !5099)
!5106 = !DILocalVariable(name: "len", scope: !5099, file: !31, line: 362, type: !11)
!5107 = !DILocation(line: 362, column: 9, scope: !5099)
!5108 = !DILocation(line: 362, column: 22, scope: !5099)
!5109 = !DILocation(line: 362, column: 15, scope: !5099)
!5110 = !DILocation(line: 363, column: 15, scope: !5099)
!5111 = !DILocation(line: 363, column: 18, scope: !5099)
!5112 = !DILocation(line: 363, column: 21, scope: !5099)
!5113 = !DILocation(line: 363, column: 24, scope: !5099)
!5114 = !DILocation(line: 363, column: 33, scope: !5099)
!5115 = !DILocation(line: 363, column: 36, scope: !5099)
!5116 = !DILocation(line: 363, column: 39, scope: !5099)
!5117 = !DILocation(line: 363, column: 14, scope: !5099)
!5118 = !DILocation(line: 363, column: 48, scope: !5099)
!5119 = !DILocation(line: 363, column: 57, scope: !5099)
!5120 = !DILocation(line: 363, column: 60, scope: !5099)
!5121 = !DILocation(line: 363, column: 5, scope: !5099)
!5122 = !DILocation(line: 363, column: 12, scope: !5099)
!5123 = !DILocation(line: 364, column: 9, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5099, file: !31, line: 364, column: 9)
!5125 = !DILocation(line: 364, column: 16, scope: !5124)
!5126 = !DILocation(line: 364, column: 19, scope: !5124)
!5127 = !DILocation(line: 364, column: 25, scope: !5124)
!5128 = !DILocation(line: 364, column: 31, scope: !5124)
!5129 = !DILocation(line: 364, column: 34, scope: !5124)
!5130 = !DILocation(line: 364, column: 40, scope: !5124)
!5131 = !DILocation(line: 364, column: 9, scope: !5099)
!5132 = !DILocation(line: 365, column: 9, scope: !5124)
!5133 = !DILocation(line: 368, column: 13, scope: !5099)
!5134 = !DILocation(line: 368, column: 5, scope: !5099)
!5135 = !DILocalVariable(name: "i", scope: !5136, file: !31, line: 370, type: !11)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !31, line: 370, column: 13)
!5137 = distinct !DILexicalBlock(scope: !5099, file: !31, line: 368, column: 21)
!5138 = !DILocation(line: 370, column: 22, scope: !5136)
!5139 = !DILocation(line: 370, column: 18, scope: !5136)
!5140 = !DILocation(line: 370, column: 27, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5136, file: !31, line: 370, column: 13)
!5142 = !DILocation(line: 370, column: 29, scope: !5141)
!5143 = !DILocation(line: 370, column: 28, scope: !5141)
!5144 = !DILocation(line: 370, column: 13, scope: !5136)
!5145 = !DILocalVariable(name: "desc", scope: !5146, file: !31, line: 371, type: !4771)
!5146 = distinct !DILexicalBlock(scope: !5141, file: !31, line: 370, column: 45)
!5147 = !DILocation(line: 371, column: 36, scope: !5146)
!5148 = !DILocation(line: 371, column: 43, scope: !5146)
!5149 = !DILocation(line: 371, column: 51, scope: !5146)
!5150 = !DILocation(line: 371, column: 49, scope: !5146)
!5151 = !DILocation(line: 372, column: 21, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !31, line: 372, column: 21)
!5153 = !DILocation(line: 372, column: 27, scope: !5152)
!5154 = !DILocation(line: 372, column: 33, scope: !5152)
!5155 = !DILocation(line: 372, column: 43, scope: !5152)
!5156 = !DILocation(line: 372, column: 49, scope: !5152)
!5157 = !DILocation(line: 372, column: 56, scope: !5152)
!5158 = !DILocation(line: 372, column: 61, scope: !5152)
!5159 = !DILocation(line: 372, column: 70, scope: !5152)
!5160 = !DILocation(line: 372, column: 36, scope: !5152)
!5161 = !DILocation(line: 372, column: 79, scope: !5152)
!5162 = !DILocation(line: 372, column: 21, scope: !5146)
!5163 = !DILocation(line: 373, column: 28, scope: !5152)
!5164 = !DILocation(line: 373, column: 21, scope: !5152)
!5165 = !DILocation(line: 374, column: 13, scope: !5146)
!5166 = !DILocation(line: 370, column: 41, scope: !5141)
!5167 = !DILocation(line: 370, column: 13, scope: !5141)
!5168 = distinct !{!5168, !5144, !5169}
!5169 = !DILocation(line: 374, column: 13, scope: !5136)
!5170 = !DILocation(line: 375, column: 13, scope: !5137)
!5171 = !DILocalVariable(name: "i", scope: !5172, file: !31, line: 377, type: !11)
!5172 = distinct !DILexicalBlock(scope: !5137, file: !31, line: 377, column: 13)
!5173 = !DILocation(line: 377, column: 22, scope: !5172)
!5174 = !DILocation(line: 377, column: 18, scope: !5172)
!5175 = !DILocation(line: 377, column: 27, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5172, file: !31, line: 377, column: 13)
!5177 = !DILocation(line: 377, column: 29, scope: !5176)
!5178 = !DILocation(line: 377, column: 28, scope: !5176)
!5179 = !DILocation(line: 377, column: 13, scope: !5172)
!5180 = !DILocalVariable(name: "desc", scope: !5181, file: !31, line: 378, type: !4771)
!5181 = distinct !DILexicalBlock(scope: !5176, file: !31, line: 377, column: 45)
!5182 = !DILocation(line: 378, column: 36, scope: !5181)
!5183 = !DILocation(line: 378, column: 43, scope: !5181)
!5184 = !DILocation(line: 378, column: 51, scope: !5181)
!5185 = !DILocation(line: 378, column: 49, scope: !5181)
!5186 = !DILocation(line: 379, column: 21, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5181, file: !31, line: 379, column: 21)
!5188 = !DILocation(line: 379, column: 27, scope: !5187)
!5189 = !DILocation(line: 379, column: 33, scope: !5187)
!5190 = !DILocation(line: 379, column: 43, scope: !5187)
!5191 = !DILocation(line: 379, column: 49, scope: !5187)
!5192 = !DILocation(line: 379, column: 56, scope: !5187)
!5193 = !DILocation(line: 379, column: 62, scope: !5187)
!5194 = !DILocation(line: 379, column: 71, scope: !5187)
!5195 = !DILocation(line: 379, column: 36, scope: !5187)
!5196 = !DILocation(line: 379, column: 80, scope: !5187)
!5197 = !DILocation(line: 379, column: 21, scope: !5181)
!5198 = !DILocation(line: 380, column: 28, scope: !5187)
!5199 = !DILocation(line: 380, column: 21, scope: !5187)
!5200 = !DILocation(line: 381, column: 13, scope: !5181)
!5201 = !DILocation(line: 377, column: 41, scope: !5176)
!5202 = !DILocation(line: 377, column: 13, scope: !5176)
!5203 = distinct !{!5203, !5179, !5204}
!5204 = !DILocation(line: 381, column: 13, scope: !5172)
!5205 = !DILocation(line: 382, column: 13, scope: !5137)
!5206 = !DILocalVariable(name: "i", scope: !5207, file: !31, line: 384, type: !11)
!5207 = distinct !DILexicalBlock(scope: !5137, file: !31, line: 384, column: 13)
!5208 = !DILocation(line: 384, column: 22, scope: !5207)
!5209 = !DILocation(line: 384, column: 18, scope: !5207)
!5210 = !DILocation(line: 384, column: 27, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !31, line: 384, column: 13)
!5212 = !DILocation(line: 384, column: 29, scope: !5211)
!5213 = !DILocation(line: 384, column: 28, scope: !5211)
!5214 = !DILocation(line: 384, column: 13, scope: !5207)
!5215 = !DILocalVariable(name: "desc", scope: !5216, file: !31, line: 385, type: !4771)
!5216 = distinct !DILexicalBlock(scope: !5211, file: !31, line: 384, column: 45)
!5217 = !DILocation(line: 385, column: 36, scope: !5216)
!5218 = !DILocation(line: 385, column: 43, scope: !5216)
!5219 = !DILocation(line: 385, column: 51, scope: !5216)
!5220 = !DILocation(line: 385, column: 49, scope: !5216)
!5221 = !DILocation(line: 386, column: 21, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5216, file: !31, line: 386, column: 21)
!5223 = !DILocation(line: 386, column: 27, scope: !5222)
!5224 = !DILocation(line: 386, column: 33, scope: !5222)
!5225 = !DILocation(line: 386, column: 43, scope: !5222)
!5226 = !DILocation(line: 386, column: 49, scope: !5222)
!5227 = !DILocation(line: 386, column: 56, scope: !5222)
!5228 = !DILocation(line: 386, column: 62, scope: !5222)
!5229 = !DILocation(line: 386, column: 71, scope: !5222)
!5230 = !DILocation(line: 386, column: 36, scope: !5222)
!5231 = !DILocation(line: 386, column: 80, scope: !5222)
!5232 = !DILocation(line: 386, column: 21, scope: !5216)
!5233 = !DILocation(line: 387, column: 28, scope: !5222)
!5234 = !DILocation(line: 387, column: 21, scope: !5222)
!5235 = !DILocation(line: 388, column: 13, scope: !5216)
!5236 = !DILocation(line: 384, column: 41, scope: !5211)
!5237 = !DILocation(line: 384, column: 13, scope: !5211)
!5238 = distinct !{!5238, !5214, !5239}
!5239 = !DILocation(line: 388, column: 13, scope: !5207)
!5240 = !DILocation(line: 389, column: 13, scope: !5137)
!5241 = !DILocation(line: 391, column: 5, scope: !5099)
!5242 = !DILocation(line: 392, column: 1, scope: !5099)
!5243 = distinct !DISubprogram(name: "c_str", linkageName: "_ZNK10opp_string5c_strEv", scope: !156, file: !157, line: 75, type: !181, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !180, retainedNodes: !324)
!5244 = !DILocalVariable(name: "this", arg: 1, scope: !5243, type: !5245, flags: DIFlagArtificial | DIFlagObjectPointer)
!5245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!5246 = !DILocation(line: 0, scope: !5243)
!5247 = !DILocation(line: 75, column: 40, scope: !5243)
!5248 = !DILocation(line: 75, column: 46, scope: !5243)
!5249 = !DILocation(line: 75, column: 33, scope: !5243)
!5250 = distinct !DISubprogram(name: "gateDesc", linkageName: "_ZNK7cModule8gateDescEPKcRc", scope: !101, file: !31, line: 394, type: !1388, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1387, retainedNodes: !324)
!5251 = !DILocalVariable(name: "this", arg: 1, scope: !5250, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!5252 = !DILocation(line: 0, scope: !5250)
!5253 = !DILocalVariable(name: "gatename", arg: 2, scope: !5250, file: !31, line: 394, type: !167)
!5254 = !DILocation(line: 394, column: 44, scope: !5250)
!5255 = !DILocalVariable(name: "suffix", arg: 3, scope: !5250, file: !31, line: 394, type: !1386)
!5256 = !DILocation(line: 394, column: 60, scope: !5250)
!5257 = !DILocalVariable(name: "descIndex", scope: !5250, file: !31, line: 396, type: !11)
!5258 = !DILocation(line: 396, column: 9, scope: !5250)
!5259 = !DILocation(line: 396, column: 34, scope: !5250)
!5260 = !DILocation(line: 396, column: 44, scope: !5250)
!5261 = !DILocation(line: 396, column: 21, scope: !5250)
!5262 = !DILocation(line: 397, column: 9, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5250, file: !31, line: 397, column: 9)
!5264 = !DILocation(line: 397, column: 18, scope: !5263)
!5265 = !DILocation(line: 397, column: 9, scope: !5250)
!5266 = !DILocation(line: 398, column: 9, scope: !5263)
!5267 = !DILocation(line: 398, column: 29, scope: !5263)
!5268 = !DILocation(line: 398, column: 72, scope: !5263)
!5269 = !DILocation(line: 398, column: 15, scope: !5263)
!5270 = !DILocation(line: 400, column: 1, scope: !5263)
!5271 = !DILocation(line: 399, column: 12, scope: !5250)
!5272 = !DILocation(line: 399, column: 20, scope: !5250)
!5273 = !DILocation(line: 399, column: 18, scope: !5250)
!5274 = !DILocation(line: 399, column: 5, scope: !5250)
!5275 = distinct !DISubprogram(name: "gate", linkageName: "_ZN7cModule4gateEi", scope: !101, file: !31, line: 404, type: !1487, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1486, retainedNodes: !324)
!5276 = !DILocalVariable(name: "this", arg: 1, scope: !5275, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!5277 = !DILocation(line: 0, scope: !5275)
!5278 = !DILocalVariable(name: "id", arg: 2, scope: !5275, file: !31, line: 404, type: !11)
!5279 = !DILocation(line: 404, column: 26, scope: !5275)
!5280 = !DILocalVariable(name: "h", scope: !5275, file: !31, line: 408, type: !36)
!5281 = !DILocation(line: 408, column: 18, scope: !5275)
!5282 = !DILocation(line: 408, column: 22, scope: !5275)
!5283 = !DILocation(line: 408, column: 25, scope: !5275)
!5284 = !DILocation(line: 409, column: 9, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5275, file: !31, line: 409, column: 9)
!5286 = !DILocation(line: 409, column: 10, scope: !5285)
!5287 = !DILocation(line: 409, column: 9, scope: !5275)
!5288 = !DILocalVariable(name: "descIndex", scope: !5289, file: !31, line: 411, type: !36)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !31, line: 409, column: 15)
!5290 = !DILocation(line: 411, column: 22, scope: !5289)
!5291 = !DILocation(line: 411, column: 34, scope: !5289)
!5292 = !DILocation(line: 411, column: 36, scope: !5289)
!5293 = !DILocation(line: 412, column: 9, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !31, line: 412, column: 9)
!5295 = !DILocation(line: 412, column: 9, scope: !5289)
!5296 = !DILocation(line: 441, column: 1, scope: !5294)
!5297 = !DILocalVariable(name: "desc", scope: !5289, file: !31, line: 413, type: !1137)
!5298 = !DILocation(line: 413, column: 22, scope: !5289)
!5299 = !DILocation(line: 413, column: 29, scope: !5289)
!5300 = !DILocation(line: 413, column: 37, scope: !5289)
!5301 = !DILocation(line: 413, column: 35, scope: !5289)
!5302 = !DILocation(line: 414, column: 9, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5289, file: !31, line: 414, column: 9)
!5304 = !DILocation(line: 414, column: 9, scope: !5289)
!5305 = !DILocation(line: 441, column: 1, scope: !5303)
!5306 = !DILocation(line: 415, column: 9, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5289, file: !31, line: 415, column: 9)
!5308 = !DILocation(line: 415, column: 9, scope: !5289)
!5309 = !DILocation(line: 441, column: 1, scope: !5307)
!5310 = !DILocation(line: 416, column: 9, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5289, file: !31, line: 416, column: 9)
!5312 = !DILocation(line: 416, column: 9, scope: !5289)
!5313 = !DILocation(line: 441, column: 1, scope: !5311)
!5314 = !DILocalVariable(name: "g", scope: !5289, file: !31, line: 417, type: !1147)
!5315 = !DILocation(line: 417, column: 16, scope: !5289)
!5316 = !DILocation(line: 417, column: 21, scope: !5289)
!5317 = !DILocation(line: 417, column: 23, scope: !5289)
!5318 = !DILocation(line: 417, column: 26, scope: !5289)
!5319 = !DILocation(line: 417, column: 20, scope: !5289)
!5320 = !DILocation(line: 417, column: 32, scope: !5289)
!5321 = !DILocation(line: 417, column: 38, scope: !5289)
!5322 = !DILocation(line: 417, column: 50, scope: !5289)
!5323 = !DILocation(line: 417, column: 56, scope: !5289)
!5324 = !DILocation(line: 418, column: 9, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5289, file: !31, line: 418, column: 9)
!5326 = !DILocation(line: 418, column: 9, scope: !5289)
!5327 = !DILocation(line: 441, column: 1, scope: !5325)
!5328 = !DILocation(line: 419, column: 16, scope: !5289)
!5329 = !DILocation(line: 419, column: 9, scope: !5289)
!5330 = !DILocalVariable(name: "descIndex", scope: !5331, file: !31, line: 423, type: !36)
!5331 = distinct !DILexicalBlock(scope: !5285, file: !31, line: 421, column: 10)
!5332 = !DILocation(line: 423, column: 22, scope: !5331)
!5333 = !DILocation(line: 423, column: 35, scope: !5331)
!5334 = !DILocation(line: 423, column: 36, scope: !5331)
!5335 = !DILocation(line: 423, column: 51, scope: !5331)
!5336 = !DILocation(line: 424, column: 9, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5331, file: !31, line: 424, column: 9)
!5338 = !DILocation(line: 424, column: 9, scope: !5331)
!5339 = !DILocation(line: 441, column: 1, scope: !5337)
!5340 = !DILocalVariable(name: "desc", scope: !5331, file: !31, line: 425, type: !1137)
!5341 = !DILocation(line: 425, column: 22, scope: !5331)
!5342 = !DILocation(line: 425, column: 29, scope: !5331)
!5343 = !DILocation(line: 425, column: 37, scope: !5331)
!5344 = !DILocation(line: 425, column: 35, scope: !5331)
!5345 = !DILocation(line: 426, column: 9, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5331, file: !31, line: 426, column: 9)
!5347 = !DILocation(line: 426, column: 9, scope: !5331)
!5348 = !DILocation(line: 441, column: 1, scope: !5346)
!5349 = !DILocation(line: 427, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5331, file: !31, line: 427, column: 9)
!5351 = !DILocation(line: 427, column: 9, scope: !5331)
!5352 = !DILocation(line: 441, column: 1, scope: !5350)
!5353 = !DILocalVariable(name: "isOutput", scope: !5331, file: !31, line: 428, type: !13)
!5354 = !DILocation(line: 428, column: 14, scope: !5331)
!5355 = !DILocation(line: 428, column: 25, scope: !5331)
!5356 = !DILocation(line: 428, column: 28, scope: !5331)
!5357 = !DILocation(line: 429, column: 9, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5331, file: !31, line: 429, column: 9)
!5359 = !DILocation(line: 429, column: 9, scope: !5331)
!5360 = !DILocation(line: 441, column: 1, scope: !5358)
!5361 = !DILocalVariable(name: "index", scope: !5331, file: !31, line: 430, type: !36)
!5362 = !DILocation(line: 430, column: 22, scope: !5331)
!5363 = !DILocation(line: 430, column: 30, scope: !5331)
!5364 = !DILocation(line: 430, column: 33, scope: !5331)
!5365 = !DILocation(line: 431, column: 13, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5331, file: !31, line: 431, column: 13)
!5367 = !DILocation(line: 431, column: 36, scope: !5366)
!5368 = !DILocation(line: 431, column: 42, scope: !5366)
!5369 = !DILocation(line: 431, column: 19, scope: !5366)
!5370 = !DILocation(line: 431, column: 13, scope: !5331)
!5371 = !DILocation(line: 433, column: 17, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !31, line: 433, column: 17)
!5373 = distinct !DILexicalBlock(scope: !5366, file: !31, line: 431, column: 54)
!5374 = !DILocation(line: 433, column: 22, scope: !5372)
!5375 = !DILocation(line: 433, column: 17, scope: !5373)
!5376 = !DILocation(line: 434, column: 17, scope: !5372)
!5377 = !DILocation(line: 434, column: 37, scope: !5372)
!5378 = !DILocation(line: 435, column: 43, scope: !5372)
!5379 = !DILocation(line: 435, column: 47, scope: !5372)
!5380 = !DILocation(line: 435, column: 61, scope: !5372)
!5381 = !DILocation(line: 435, column: 53, scope: !5372)
!5382 = !DILocation(line: 435, column: 103, scope: !5372)
!5383 = !DILocation(line: 435, column: 109, scope: !5372)
!5384 = !DILocation(line: 435, column: 121, scope: !5372)
!5385 = !DILocation(line: 434, column: 23, scope: !5372)
!5386 = !DILocation(line: 441, column: 1, scope: !5372)
!5387 = !DILocation(line: 437, column: 17, scope: !5372)
!5388 = !DILocation(line: 437, column: 37, scope: !5372)
!5389 = !DILocation(line: 437, column: 52, scope: !5372)
!5390 = !DILocation(line: 437, column: 23, scope: !5372)
!5391 = !DILocation(line: 439, column: 16, scope: !5331)
!5392 = !DILocation(line: 439, column: 27, scope: !5331)
!5393 = !DILocation(line: 439, column: 33, scope: !5331)
!5394 = !DILocation(line: 439, column: 45, scope: !5331)
!5395 = !DILocation(line: 439, column: 54, scope: !5331)
!5396 = !DILocation(line: 439, column: 60, scope: !5331)
!5397 = !DILocation(line: 439, column: 71, scope: !5331)
!5398 = !DILocation(line: 439, column: 9, scope: !5331)
!5399 = !DILocation(line: 441, column: 1, scope: !5275)
!5400 = distinct !DISubprogram(name: "getType", linkageName: "_ZNK5cGate4Desc7getTypeEv", scope: !1138, file: !34, line: 110, type: !1165, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1164, retainedNodes: !324)
!5401 = !DILocalVariable(name: "this", arg: 1, scope: !5400, type: !4771, flags: DIFlagArtificial | DIFlagObjectPointer)
!5402 = !DILocation(line: 0, scope: !5400)
!5403 = !DILocation(line: 110, column: 38, scope: !5400)
!5404 = !DILocation(line: 110, column: 45, scope: !5400)
!5405 = !DILocation(line: 110, column: 31, scope: !5400)
!5406 = distinct !DISubprogram(name: "nameFor", linkageName: "_ZNK5cGate4Desc7nameForENS_4TypeE", scope: !1138, file: !34, line: 112, type: !1169, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1168, retainedNodes: !324)
!5407 = !DILocalVariable(name: "this", arg: 1, scope: !5406, type: !4771, flags: DIFlagArtificial | DIFlagObjectPointer)
!5408 = !DILocation(line: 0, scope: !5406)
!5409 = !DILocalVariable(name: "t", arg: 2, scope: !5406, file: !34, line: 112, type: !33)
!5410 = !DILocation(line: 112, column: 34, scope: !5406)
!5411 = !DILocation(line: 112, column: 52, scope: !5406)
!5412 = !DILocation(line: 112, column: 53, scope: !5406)
!5413 = !DILocation(line: 112, column: 60, scope: !5406)
!5414 = !DILocation(line: 112, column: 62, scope: !5406)
!5415 = !DILocation(line: 112, column: 69, scope: !5406)
!5416 = !DILocation(line: 112, column: 73, scope: !5406)
!5417 = !DILocation(line: 112, column: 51, scope: !5406)
!5418 = !DILocation(line: 112, column: 84, scope: !5406)
!5419 = !DILocation(line: 112, column: 91, scope: !5406)
!5420 = !DILocation(line: 112, column: 96, scope: !5406)
!5421 = !DILocation(line: 112, column: 106, scope: !5406)
!5422 = !DILocation(line: 112, column: 107, scope: !5406)
!5423 = !DILocation(line: 112, column: 117, scope: !5406)
!5424 = !DILocation(line: 112, column: 124, scope: !5406)
!5425 = !DILocation(line: 112, column: 130, scope: !5406)
!5426 = !DILocation(line: 112, column: 140, scope: !5406)
!5427 = !DILocation(line: 112, column: 147, scope: !5406)
!5428 = !DILocation(line: 112, column: 153, scope: !5406)
!5429 = !DILocation(line: 112, column: 44, scope: !5406)
!5430 = distinct !DISubprogram(name: "addGate", linkageName: "_ZN7cModule7addGateEPKcN5cGate4TypeEb", scope: !101, file: !31, line: 445, type: !1420, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1419, retainedNodes: !324)
!5431 = !DILocalVariable(name: "this", arg: 1, scope: !5430, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!5432 = !DILocation(line: 0, scope: !5430)
!5433 = !DILocalVariable(name: "gatename", arg: 2, scope: !5430, file: !31, line: 445, type: !167)
!5434 = !DILocation(line: 445, column: 35, scope: !5430)
!5435 = !DILocalVariable(name: "type", arg: 3, scope: !5430, file: !31, line: 445, type: !33)
!5436 = !DILocation(line: 445, column: 57, scope: !5430)
!5437 = !DILocalVariable(name: "isVector", arg: 4, scope: !5430, file: !31, line: 445, type: !13)
!5438 = !DILocation(line: 445, column: 68, scope: !5430)
!5439 = !DILocalVariable(name: "suffix", scope: !5430, file: !31, line: 447, type: !117)
!5440 = !DILocation(line: 447, column: 10, scope: !5430)
!5441 = !DILocation(line: 448, column: 22, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5430, file: !31, line: 448, column: 9)
!5443 = !DILocation(line: 448, column: 9, scope: !5442)
!5444 = !DILocation(line: 448, column: 39, scope: !5442)
!5445 = !DILocation(line: 448, column: 9, scope: !5430)
!5446 = !DILocation(line: 449, column: 9, scope: !5442)
!5447 = !DILocation(line: 449, column: 29, scope: !5442)
!5448 = !DILocation(line: 449, column: 75, scope: !5442)
!5449 = !DILocation(line: 449, column: 15, scope: !5442)
!5450 = !DILocation(line: 473, column: 1, scope: !5442)
!5451 = !DILocation(line: 450, column: 9, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5430, file: !31, line: 450, column: 9)
!5453 = !DILocation(line: 450, column: 9, scope: !5430)
!5454 = !DILocation(line: 451, column: 9, scope: !5452)
!5455 = !DILocation(line: 451, column: 29, scope: !5452)
!5456 = !DILocation(line: 451, column: 104, scope: !5452)
!5457 = !DILocation(line: 451, column: 15, scope: !5452)
!5458 = !DILocation(line: 473, column: 1, scope: !5452)
!5459 = !DILocalVariable(name: "desc", scope: !5430, file: !31, line: 454, type: !1137)
!5460 = !DILocation(line: 454, column: 18, scope: !5430)
!5461 = !DILocation(line: 454, column: 37, scope: !5430)
!5462 = !DILocation(line: 454, column: 47, scope: !5430)
!5463 = !DILocation(line: 454, column: 53, scope: !5430)
!5464 = !DILocation(line: 454, column: 25, scope: !5430)
!5465 = !DILocation(line: 455, column: 5, scope: !5430)
!5466 = !DILocation(line: 455, column: 11, scope: !5430)
!5467 = !DILocation(line: 455, column: 18, scope: !5430)
!5468 = !DILocation(line: 458, column: 10, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5430, file: !31, line: 458, column: 9)
!5470 = !DILocation(line: 458, column: 9, scope: !5430)
!5471 = !DILocation(line: 460, column: 13, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !31, line: 460, column: 13)
!5473 = distinct !DILexicalBlock(scope: !5469, file: !31, line: 459, column: 5)
!5474 = !DILocation(line: 460, column: 17, scope: !5472)
!5475 = !DILocation(line: 460, column: 13, scope: !5473)
!5476 = !DILocalVariable(name: "newGate", scope: !5477, file: !31, line: 462, type: !1147)
!5477 = distinct !DILexicalBlock(scope: !5472, file: !31, line: 461, column: 9)
!5478 = !DILocation(line: 462, column: 20, scope: !5477)
!5479 = !DILocation(line: 462, column: 47, scope: !5477)
!5480 = !DILocation(line: 462, column: 30, scope: !5477)
!5481 = !DILocation(line: 463, column: 13, scope: !5477)
!5482 = !DILocation(line: 463, column: 32, scope: !5477)
!5483 = !DILocation(line: 463, column: 19, scope: !5477)
!5484 = !DILocation(line: 464, column: 13, scope: !5477)
!5485 = !DILocation(line: 464, column: 30, scope: !5477)
!5486 = !DILocation(line: 464, column: 18, scope: !5477)
!5487 = !DILocation(line: 465, column: 9, scope: !5477)
!5488 = !DILocation(line: 466, column: 13, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5473, file: !31, line: 466, column: 13)
!5490 = !DILocation(line: 466, column: 17, scope: !5489)
!5491 = !DILocation(line: 466, column: 13, scope: !5473)
!5492 = !DILocalVariable(name: "newGate", scope: !5493, file: !31, line: 468, type: !1147)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !31, line: 467, column: 9)
!5494 = !DILocation(line: 468, column: 20, scope: !5493)
!5495 = !DILocation(line: 468, column: 47, scope: !5493)
!5496 = !DILocation(line: 468, column: 30, scope: !5493)
!5497 = !DILocation(line: 469, column: 13, scope: !5493)
!5498 = !DILocation(line: 469, column: 33, scope: !5493)
!5499 = !DILocation(line: 469, column: 19, scope: !5493)
!5500 = !DILocation(line: 470, column: 13, scope: !5493)
!5501 = !DILocation(line: 470, column: 30, scope: !5493)
!5502 = !DILocation(line: 470, column: 18, scope: !5493)
!5503 = !DILocation(line: 471, column: 9, scope: !5493)
!5504 = !DILocation(line: 472, column: 5, scope: !5473)
!5505 = !DILocation(line: 473, column: 1, scope: !5430)
!5506 = distinct !DISubprogram(name: "setInputGate", linkageName: "_ZN5cGate4Desc12setInputGateEPS_", scope: !1138, file: !34, line: 119, type: !1188, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1187, retainedNodes: !324)
!5507 = !DILocalVariable(name: "this", arg: 1, scope: !5506, type: !1137, flags: DIFlagArtificial | DIFlagObjectPointer)
!5508 = !DILocation(line: 0, scope: !5506)
!5509 = !DILocalVariable(name: "g", arg: 2, scope: !5506, file: !34, line: 119, type: !1147)
!5510 = !DILocation(line: 119, column: 34, scope: !5506)
!5511 = !DILocation(line: 119, column: 90, scope: !5506)
!5512 = !DILocation(line: 119, column: 80, scope: !5506)
!5513 = !DILocation(line: 119, column: 89, scope: !5506)
!5514 = !DILocation(line: 119, column: 93, scope: !5506)
!5515 = !DILocation(line: 119, column: 96, scope: !5506)
!5516 = !DILocation(line: 119, column: 100, scope: !5506)
!5517 = !DILocation(line: 119, column: 107, scope: !5506)
!5518 = !DILocation(line: 119, column: 110, scope: !5506)
!5519 = !DILocation(line: 119, column: 113, scope: !5506)
!5520 = !DILocation(line: 119, column: 122, scope: !5506)
!5521 = distinct !DISubprogram(name: "setOutputGate", linkageName: "_ZN5cGate4Desc13setOutputGateEPS_", scope: !1138, file: !34, line: 120, type: !1188, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1190, retainedNodes: !324)
!5522 = !DILocalVariable(name: "this", arg: 1, scope: !5521, type: !1137, flags: DIFlagArtificial | DIFlagObjectPointer)
!5523 = !DILocation(line: 0, scope: !5521)
!5524 = !DILocalVariable(name: "g", arg: 2, scope: !5521, file: !34, line: 120, type: !1147)
!5525 = !DILocation(line: 120, column: 35, scope: !5521)
!5526 = !DILocation(line: 120, column: 91, scope: !5521)
!5527 = !DILocation(line: 120, column: 80, scope: !5521)
!5528 = !DILocation(line: 120, column: 90, scope: !5521)
!5529 = !DILocation(line: 120, column: 94, scope: !5521)
!5530 = !DILocation(line: 120, column: 97, scope: !5521)
!5531 = !DILocation(line: 120, column: 101, scope: !5521)
!5532 = !DILocation(line: 120, column: 108, scope: !5521)
!5533 = !DILocation(line: 120, column: 111, scope: !5521)
!5534 = !DILocation(line: 120, column: 114, scope: !5521)
!5535 = !DILocation(line: 120, column: 125, scope: !5521)
!5536 = distinct !DISubprogram(name: "setGateSize", linkageName: "_ZN7cModule11setGateSizeEPKci", scope: !101, file: !31, line: 487, type: !1423, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1422, retainedNodes: !324)
!5537 = !DILocalVariable(name: "this", arg: 1, scope: !5536, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!5538 = !DILocation(line: 0, scope: !5536)
!5539 = !DILocalVariable(name: "gatename", arg: 2, scope: !5536, file: !31, line: 487, type: !167)
!5540 = !DILocation(line: 487, column: 39, scope: !5536)
!5541 = !DILocalVariable(name: "newSize", arg: 3, scope: !5536, file: !31, line: 487, type: !11)
!5542 = !DILocation(line: 487, column: 53, scope: !5536)
!5543 = !DILocalVariable(name: "suffix", scope: !5536, file: !31, line: 489, type: !117)
!5544 = !DILocation(line: 489, column: 10, scope: !5536)
!5545 = !DILocalVariable(name: "descIndex", scope: !5536, file: !31, line: 490, type: !11)
!5546 = !DILocation(line: 490, column: 9, scope: !5536)
!5547 = !DILocation(line: 490, column: 34, scope: !5536)
!5548 = !DILocation(line: 490, column: 21, scope: !5536)
!5549 = !DILocation(line: 491, column: 9, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 491, column: 9)
!5551 = !DILocation(line: 491, column: 18, scope: !5550)
!5552 = !DILocation(line: 491, column: 9, scope: !5536)
!5553 = !DILocation(line: 492, column: 9, scope: !5550)
!5554 = !DILocation(line: 492, column: 29, scope: !5550)
!5555 = !DILocation(line: 492, column: 61, scope: !5550)
!5556 = !DILocation(line: 492, column: 71, scope: !5550)
!5557 = !DILocation(line: 492, column: 15, scope: !5550)
!5558 = !DILocation(line: 580, column: 1, scope: !5550)
!5559 = !DILocation(line: 493, column: 9, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 493, column: 9)
!5561 = !DILocation(line: 493, column: 9, scope: !5536)
!5562 = !DILocation(line: 494, column: 9, scope: !5560)
!5563 = !DILocation(line: 494, column: 29, scope: !5560)
!5564 = !DILocation(line: 494, column: 110, scope: !5560)
!5565 = !DILocation(line: 494, column: 15, scope: !5560)
!5566 = !DILocation(line: 580, column: 1, scope: !5560)
!5567 = !DILocalVariable(name: "desc", scope: !5536, file: !31, line: 495, type: !1137)
!5568 = !DILocation(line: 495, column: 18, scope: !5536)
!5569 = !DILocation(line: 495, column: 25, scope: !5536)
!5570 = !DILocation(line: 495, column: 33, scope: !5536)
!5571 = !DILocation(line: 495, column: 31, scope: !5536)
!5572 = !DILocation(line: 496, column: 10, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 496, column: 9)
!5574 = !DILocation(line: 496, column: 16, scope: !5573)
!5575 = !DILocation(line: 496, column: 9, scope: !5536)
!5576 = !DILocation(line: 497, column: 9, scope: !5573)
!5577 = !DILocation(line: 497, column: 29, scope: !5573)
!5578 = !DILocation(line: 497, column: 84, scope: !5573)
!5579 = !DILocation(line: 497, column: 15, scope: !5573)
!5580 = !DILocation(line: 580, column: 1, scope: !5573)
!5581 = !DILocation(line: 498, column: 9, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 498, column: 9)
!5583 = !DILocation(line: 498, column: 16, scope: !5582)
!5584 = !DILocation(line: 498, column: 9, scope: !5536)
!5585 = !DILocation(line: 499, column: 9, scope: !5582)
!5586 = !DILocation(line: 499, column: 29, scope: !5582)
!5587 = !DILocation(line: 499, column: 103, scope: !5582)
!5588 = !DILocation(line: 499, column: 112, scope: !5582)
!5589 = !DILocation(line: 499, column: 15, scope: !5582)
!5590 = !DILocation(line: 580, column: 1, scope: !5582)
!5591 = !DILocation(line: 500, column: 9, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 500, column: 9)
!5593 = !DILocation(line: 500, column: 16, scope: !5592)
!5594 = !DILocation(line: 500, column: 9, scope: !5536)
!5595 = !DILocation(line: 501, column: 9, scope: !5592)
!5596 = !DILocation(line: 501, column: 29, scope: !5592)
!5597 = !DILocation(line: 501, column: 107, scope: !5592)
!5598 = !DILocation(line: 501, column: 117, scope: !5592)
!5599 = !DILocation(line: 501, column: 15, scope: !5592)
!5600 = !DILocation(line: 580, column: 1, scope: !5592)
!5601 = !DILocalVariable(name: "oldSize", scope: !5536, file: !31, line: 502, type: !11)
!5602 = !DILocation(line: 502, column: 9, scope: !5536)
!5603 = !DILocation(line: 502, column: 19, scope: !5536)
!5604 = !DILocation(line: 502, column: 25, scope: !5536)
!5605 = !DILocalVariable(name: "type", scope: !5536, file: !31, line: 503, type: !33)
!5606 = !DILocation(line: 503, column: 17, scope: !5536)
!5607 = !DILocation(line: 503, column: 24, scope: !5536)
!5608 = !DILocation(line: 503, column: 30, scope: !5536)
!5609 = !DILocalVariable(name: "oldCapacity", scope: !5536, file: !31, line: 509, type: !11)
!5610 = !DILocation(line: 509, column: 9, scope: !5536)
!5611 = !DILocation(line: 509, column: 48, scope: !5536)
!5612 = !DILocation(line: 509, column: 23, scope: !5536)
!5613 = !DILocalVariable(name: "newCapacity", scope: !5536, file: !31, line: 510, type: !11)
!5614 = !DILocation(line: 510, column: 9, scope: !5536)
!5615 = !DILocation(line: 510, column: 48, scope: !5536)
!5616 = !DILocation(line: 510, column: 23, scope: !5536)
!5617 = !DILocation(line: 513, column: 9, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 513, column: 9)
!5619 = !DILocation(line: 513, column: 19, scope: !5618)
!5620 = !DILocation(line: 513, column: 17, scope: !5618)
!5621 = !DILocation(line: 513, column: 9, scope: !5536)
!5622 = !DILocalVariable(name: "i", scope: !5623, file: !31, line: 516, type: !11)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !31, line: 516, column: 9)
!5624 = distinct !DILexicalBlock(scope: !5618, file: !31, line: 514, column: 5)
!5625 = !DILocation(line: 516, column: 18, scope: !5623)
!5626 = !DILocation(line: 516, column: 20, scope: !5623)
!5627 = !DILocation(line: 516, column: 27, scope: !5623)
!5628 = !DILocation(line: 516, column: 14, scope: !5623)
!5629 = !DILocation(line: 516, column: 31, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5623, file: !31, line: 516, column: 9)
!5631 = !DILocation(line: 516, column: 34, scope: !5630)
!5632 = !DILocation(line: 516, column: 32, scope: !5630)
!5633 = !DILocation(line: 516, column: 9, scope: !5623)
!5634 = !DILocation(line: 519, column: 17, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !31, line: 519, column: 17)
!5636 = distinct !DILexicalBlock(scope: !5630, file: !31, line: 517, column: 9)
!5637 = !DILocation(line: 519, column: 21, scope: !5635)
!5638 = !DILocation(line: 519, column: 17, scope: !5636)
!5639 = !DILocalVariable(name: "gate", scope: !5640, file: !31, line: 520, type: !1147)
!5640 = distinct !DILexicalBlock(scope: !5635, file: !31, line: 519, column: 38)
!5641 = !DILocation(line: 520, column: 24, scope: !5640)
!5642 = !DILocation(line: 520, column: 31, scope: !5640)
!5643 = !DILocation(line: 520, column: 37, scope: !5640)
!5644 = !DILocation(line: 520, column: 48, scope: !5640)
!5645 = !DILocation(line: 521, column: 21, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5640, file: !31, line: 521, column: 21)
!5647 = !DILocation(line: 521, column: 27, scope: !5646)
!5648 = !DILocation(line: 521, column: 45, scope: !5646)
!5649 = !DILocation(line: 521, column: 48, scope: !5646)
!5650 = !DILocation(line: 521, column: 54, scope: !5646)
!5651 = !DILocation(line: 521, column: 21, scope: !5640)
!5652 = !DILocation(line: 522, column: 21, scope: !5646)
!5653 = !DILocation(line: 522, column: 41, scope: !5646)
!5654 = !DILocation(line: 522, column: 131, scope: !5646)
!5655 = !DILocation(line: 522, column: 141, scope: !5646)
!5656 = !DILocation(line: 522, column: 150, scope: !5646)
!5657 = !DILocation(line: 522, column: 156, scope: !5646)
!5658 = !DILocation(line: 522, column: 170, scope: !5646)
!5659 = !DILocation(line: 522, column: 27, scope: !5646)
!5660 = !DILocation(line: 580, column: 1, scope: !5646)
!5661 = !DILocation(line: 523, column: 17, scope: !5640)
!5662 = !DILocation(line: 523, column: 34, scope: !5640)
!5663 = !DILocation(line: 523, column: 22, scope: !5640)
!5664 = !DILocation(line: 524, column: 13, scope: !5640)
!5665 = !DILocation(line: 525, column: 17, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5636, file: !31, line: 525, column: 17)
!5667 = !DILocation(line: 525, column: 21, scope: !5666)
!5668 = !DILocation(line: 525, column: 17, scope: !5636)
!5669 = !DILocalVariable(name: "gate", scope: !5670, file: !31, line: 526, type: !1147)
!5670 = distinct !DILexicalBlock(scope: !5666, file: !31, line: 525, column: 37)
!5671 = !DILocation(line: 526, column: 24, scope: !5670)
!5672 = !DILocation(line: 526, column: 31, scope: !5670)
!5673 = !DILocation(line: 526, column: 37, scope: !5670)
!5674 = !DILocation(line: 526, column: 49, scope: !5670)
!5675 = !DILocation(line: 527, column: 21, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5670, file: !31, line: 527, column: 21)
!5677 = !DILocation(line: 527, column: 27, scope: !5676)
!5678 = !DILocation(line: 527, column: 45, scope: !5676)
!5679 = !DILocation(line: 527, column: 48, scope: !5676)
!5680 = !DILocation(line: 527, column: 54, scope: !5676)
!5681 = !DILocation(line: 527, column: 21, scope: !5670)
!5682 = !DILocation(line: 528, column: 21, scope: !5676)
!5683 = !DILocation(line: 528, column: 41, scope: !5676)
!5684 = !DILocation(line: 528, column: 131, scope: !5676)
!5685 = !DILocation(line: 528, column: 141, scope: !5676)
!5686 = !DILocation(line: 528, column: 150, scope: !5676)
!5687 = !DILocation(line: 528, column: 156, scope: !5676)
!5688 = !DILocation(line: 528, column: 170, scope: !5676)
!5689 = !DILocation(line: 528, column: 27, scope: !5676)
!5690 = !DILocation(line: 580, column: 1, scope: !5676)
!5691 = !DILocation(line: 529, column: 17, scope: !5670)
!5692 = !DILocation(line: 529, column: 34, scope: !5670)
!5693 = !DILocation(line: 529, column: 22, scope: !5670)
!5694 = !DILocation(line: 530, column: 13, scope: !5670)
!5695 = !DILocation(line: 533, column: 26, scope: !5636)
!5696 = !DILocation(line: 533, column: 13, scope: !5636)
!5697 = !DILocation(line: 533, column: 19, scope: !5636)
!5698 = !DILocation(line: 533, column: 24, scope: !5636)
!5699 = !DILocation(line: 534, column: 17, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5636, file: !31, line: 534, column: 17)
!5701 = !DILocation(line: 534, column: 21, scope: !5700)
!5702 = !DILocation(line: 534, column: 17, scope: !5636)
!5703 = !DILocation(line: 535, column: 24, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5700, file: !31, line: 534, column: 38)
!5705 = !DILocation(line: 535, column: 30, scope: !5704)
!5706 = !DILocation(line: 535, column: 41, scope: !5704)
!5707 = !DILocation(line: 535, column: 17, scope: !5704)
!5708 = !DILocation(line: 536, column: 17, scope: !5704)
!5709 = !DILocation(line: 536, column: 23, scope: !5704)
!5710 = !DILocation(line: 536, column: 34, scope: !5704)
!5711 = !DILocation(line: 536, column: 37, scope: !5704)
!5712 = !DILocation(line: 537, column: 13, scope: !5704)
!5713 = !DILocation(line: 538, column: 17, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5636, file: !31, line: 538, column: 17)
!5715 = !DILocation(line: 538, column: 21, scope: !5714)
!5716 = !DILocation(line: 538, column: 17, scope: !5636)
!5717 = !DILocation(line: 539, column: 24, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !31, line: 538, column: 37)
!5719 = !DILocation(line: 539, column: 30, scope: !5718)
!5720 = !DILocation(line: 539, column: 42, scope: !5718)
!5721 = !DILocation(line: 539, column: 17, scope: !5718)
!5722 = !DILocation(line: 540, column: 17, scope: !5718)
!5723 = !DILocation(line: 540, column: 23, scope: !5718)
!5724 = !DILocation(line: 540, column: 35, scope: !5718)
!5725 = !DILocation(line: 540, column: 38, scope: !5718)
!5726 = !DILocation(line: 541, column: 13, scope: !5718)
!5727 = !DILocation(line: 542, column: 9, scope: !5636)
!5728 = !DILocation(line: 516, column: 44, scope: !5630)
!5729 = !DILocation(line: 516, column: 9, scope: !5630)
!5730 = distinct !{!5730, !5633, !5731}
!5731 = !DILocation(line: 542, column: 9, scope: !5623)
!5732 = !DILocation(line: 545, column: 13, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5624, file: !31, line: 545, column: 13)
!5734 = !DILocation(line: 545, column: 17, scope: !5733)
!5735 = !DILocation(line: 545, column: 13, scope: !5624)
!5736 = !DILocation(line: 546, column: 26, scope: !5733)
!5737 = !DILocation(line: 546, column: 32, scope: !5733)
!5738 = !DILocation(line: 546, column: 44, scope: !5733)
!5739 = !DILocation(line: 546, column: 57, scope: !5733)
!5740 = !DILocation(line: 546, column: 13, scope: !5733)
!5741 = !DILocation(line: 547, column: 13, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5624, file: !31, line: 547, column: 13)
!5743 = !DILocation(line: 547, column: 17, scope: !5742)
!5744 = !DILocation(line: 547, column: 13, scope: !5624)
!5745 = !DILocation(line: 548, column: 26, scope: !5742)
!5746 = !DILocation(line: 548, column: 32, scope: !5742)
!5747 = !DILocation(line: 548, column: 45, scope: !5742)
!5748 = !DILocation(line: 548, column: 58, scope: !5742)
!5749 = !DILocation(line: 548, column: 13, scope: !5742)
!5750 = !DILocation(line: 549, column: 22, scope: !5624)
!5751 = !DILocation(line: 549, column: 9, scope: !5624)
!5752 = !DILocation(line: 549, column: 15, scope: !5624)
!5753 = !DILocation(line: 549, column: 20, scope: !5624)
!5754 = !DILocation(line: 550, column: 5, scope: !5624)
!5755 = !DILocation(line: 553, column: 9, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5536, file: !31, line: 553, column: 9)
!5757 = !DILocation(line: 553, column: 19, scope: !5756)
!5758 = !DILocation(line: 553, column: 17, scope: !5756)
!5759 = !DILocation(line: 553, column: 9, scope: !5536)
!5760 = !DILocation(line: 556, column: 13, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !31, line: 556, column: 13)
!5762 = distinct !DILexicalBlock(scope: !5756, file: !31, line: 554, column: 5)
!5763 = !DILocation(line: 556, column: 17, scope: !5761)
!5764 = !DILocation(line: 556, column: 13, scope: !5762)
!5765 = !DILocation(line: 557, column: 26, scope: !5761)
!5766 = !DILocation(line: 557, column: 32, scope: !5761)
!5767 = !DILocation(line: 557, column: 44, scope: !5761)
!5768 = !DILocation(line: 557, column: 57, scope: !5761)
!5769 = !DILocation(line: 557, column: 13, scope: !5761)
!5770 = !DILocation(line: 558, column: 13, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5762, file: !31, line: 558, column: 13)
!5772 = !DILocation(line: 558, column: 17, scope: !5771)
!5773 = !DILocation(line: 558, column: 13, scope: !5762)
!5774 = !DILocation(line: 559, column: 26, scope: !5771)
!5775 = !DILocation(line: 559, column: 32, scope: !5771)
!5776 = !DILocation(line: 559, column: 45, scope: !5771)
!5777 = !DILocation(line: 559, column: 58, scope: !5771)
!5778 = !DILocation(line: 559, column: 13, scope: !5771)
!5779 = !DILocation(line: 563, column: 22, scope: !5762)
!5780 = !DILocation(line: 563, column: 9, scope: !5762)
!5781 = !DILocation(line: 563, column: 15, scope: !5762)
!5782 = !DILocation(line: 563, column: 20, scope: !5762)
!5783 = !DILocalVariable(name: "i", scope: !5784, file: !31, line: 566, type: !11)
!5784 = distinct !DILexicalBlock(scope: !5762, file: !31, line: 566, column: 9)
!5785 = !DILocation(line: 566, column: 18, scope: !5784)
!5786 = !DILocation(line: 566, column: 20, scope: !5784)
!5787 = !DILocation(line: 566, column: 14, scope: !5784)
!5788 = !DILocation(line: 566, column: 29, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5784, file: !31, line: 566, column: 9)
!5790 = !DILocation(line: 566, column: 31, scope: !5789)
!5791 = !DILocation(line: 566, column: 30, scope: !5789)
!5792 = !DILocation(line: 566, column: 9, scope: !5784)
!5793 = !DILocation(line: 568, column: 17, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !31, line: 568, column: 17)
!5795 = distinct !DILexicalBlock(scope: !5789, file: !31, line: 567, column: 9)
!5796 = !DILocation(line: 568, column: 21, scope: !5794)
!5797 = !DILocation(line: 568, column: 17, scope: !5795)
!5798 = !DILocalVariable(name: "newGate", scope: !5799, file: !31, line: 569, type: !1147)
!5799 = distinct !DILexicalBlock(scope: !5794, file: !31, line: 568, column: 38)
!5800 = !DILocation(line: 569, column: 24, scope: !5799)
!5801 = !DILocation(line: 569, column: 51, scope: !5799)
!5802 = !DILocation(line: 569, column: 34, scope: !5799)
!5803 = !DILocation(line: 570, column: 17, scope: !5799)
!5804 = !DILocation(line: 570, column: 36, scope: !5799)
!5805 = !DILocation(line: 570, column: 45, scope: !5799)
!5806 = !DILocation(line: 570, column: 23, scope: !5799)
!5807 = !DILocation(line: 571, column: 17, scope: !5799)
!5808 = !DILocation(line: 571, column: 34, scope: !5799)
!5809 = !DILocation(line: 571, column: 22, scope: !5799)
!5810 = !DILocation(line: 572, column: 13, scope: !5799)
!5811 = !DILocation(line: 573, column: 17, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5795, file: !31, line: 573, column: 17)
!5813 = !DILocation(line: 573, column: 21, scope: !5812)
!5814 = !DILocation(line: 573, column: 17, scope: !5795)
!5815 = !DILocalVariable(name: "newGate", scope: !5816, file: !31, line: 574, type: !1147)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !31, line: 573, column: 37)
!5817 = !DILocation(line: 574, column: 24, scope: !5816)
!5818 = !DILocation(line: 574, column: 51, scope: !5816)
!5819 = !DILocation(line: 574, column: 34, scope: !5816)
!5820 = !DILocation(line: 575, column: 17, scope: !5816)
!5821 = !DILocation(line: 575, column: 37, scope: !5816)
!5822 = !DILocation(line: 575, column: 46, scope: !5816)
!5823 = !DILocation(line: 575, column: 23, scope: !5816)
!5824 = !DILocation(line: 576, column: 17, scope: !5816)
!5825 = !DILocation(line: 576, column: 34, scope: !5816)
!5826 = !DILocation(line: 576, column: 22, scope: !5816)
!5827 = !DILocation(line: 577, column: 13, scope: !5816)
!5828 = !DILocation(line: 578, column: 9, scope: !5795)
!5829 = !DILocation(line: 566, column: 41, scope: !5789)
!5830 = !DILocation(line: 566, column: 9, scope: !5789)
!5831 = distinct !{!5831, !5792, !5832}
!5832 = !DILocation(line: 578, column: 9, scope: !5784)
!5833 = !DILocation(line: 579, column: 5, scope: !5762)
!5834 = !DILocation(line: 580, column: 1, scope: !5536)
!5835 = distinct !DISubprogram(name: "capacityFor", linkageName: "_ZN5cGate4Desc11capacityForEi", scope: !1138, file: !34, line: 123, type: !1196, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1195, retainedNodes: !324)
!5836 = !DILocalVariable(name: "size", arg: 1, scope: !5835, file: !34, line: 123, type: !11)
!5837 = !DILocation(line: 123, column: 36, scope: !5835)
!5838 = !DILocation(line: 123, column: 50, scope: !5835)
!5839 = !DILocation(line: 123, column: 54, scope: !5835)
!5840 = !DILocation(line: 123, column: 60, scope: !5835)
!5841 = !DILocation(line: 123, column: 64, scope: !5835)
!5842 = !DILocation(line: 123, column: 67, scope: !5835)
!5843 = !DILocation(line: 123, column: 73, scope: !5835)
!5844 = !DILocation(line: 123, column: 77, scope: !5835)
!5845 = !DILocation(line: 123, column: 84, scope: !5835)
!5846 = !DILocation(line: 123, column: 88, scope: !5835)
!5847 = !DILocation(line: 123, column: 91, scope: !5835)
!5848 = !DILocation(line: 123, column: 97, scope: !5835)
!5849 = !DILocation(line: 123, column: 101, scope: !5835)
!5850 = !DILocation(line: 123, column: 109, scope: !5835)
!5851 = !DILocation(line: 123, column: 113, scope: !5835)
!5852 = !DILocation(line: 123, column: 117, scope: !5835)
!5853 = !DILocation(line: 123, column: 125, scope: !5835)
!5854 = !DILocation(line: 123, column: 129, scope: !5835)
!5855 = !DILocation(line: 123, column: 133, scope: !5835)
!5856 = !DILocation(line: 123, column: 43, scope: !5835)
!5857 = distinct !DISubprogram(name: "reallocGatev", linkageName: "_ZL12reallocGatevRPP5cGateii", scope: !31, file: !31, line: 475, type: !5858, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !324)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{null, !5860, !11, !11}
!5860 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1149, size: 64)
!5861 = !DILocalVariable(name: "v", arg: 1, scope: !5857, file: !31, line: 475, type: !5860)
!5862 = !DILocation(line: 475, column: 35, scope: !5857)
!5863 = !DILocalVariable(name: "oldSize", arg: 2, scope: !5857, file: !31, line: 475, type: !11)
!5864 = !DILocation(line: 475, column: 42, scope: !5857)
!5865 = !DILocalVariable(name: "newSize", arg: 3, scope: !5857, file: !31, line: 475, type: !11)
!5866 = !DILocation(line: 475, column: 55, scope: !5857)
!5867 = !DILocation(line: 477, column: 9, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5857, file: !31, line: 477, column: 9)
!5869 = !DILocation(line: 477, column: 20, scope: !5868)
!5870 = !DILocation(line: 477, column: 17, scope: !5868)
!5871 = !DILocation(line: 477, column: 9, scope: !5857)
!5872 = !DILocalVariable(name: "newv", scope: !5873, file: !31, line: 478, type: !1149)
!5873 = distinct !DILexicalBlock(scope: !5868, file: !31, line: 477, column: 29)
!5874 = !DILocation(line: 478, column: 17, scope: !5873)
!5875 = !DILocation(line: 478, column: 35, scope: !5873)
!5876 = !DILocation(line: 478, column: 24, scope: !5873)
!5877 = !DILocation(line: 479, column: 16, scope: !5873)
!5878 = !DILocation(line: 479, column: 9, scope: !5873)
!5879 = !DILocation(line: 479, column: 22, scope: !5873)
!5880 = !DILocation(line: 479, column: 26, scope: !5873)
!5881 = !DILocation(line: 479, column: 34, scope: !5873)
!5882 = !DILocation(line: 479, column: 33, scope: !5873)
!5883 = !DILocation(line: 479, column: 42, scope: !5873)
!5884 = !DILocation(line: 479, column: 50, scope: !5873)
!5885 = !DILocation(line: 479, column: 25, scope: !5873)
!5886 = !DILocation(line: 479, column: 58, scope: !5873)
!5887 = !DILocation(line: 480, column: 13, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5873, file: !31, line: 480, column: 13)
!5889 = !DILocation(line: 480, column: 21, scope: !5888)
!5890 = !DILocation(line: 480, column: 20, scope: !5888)
!5891 = !DILocation(line: 480, column: 13, scope: !5873)
!5892 = !DILocation(line: 481, column: 20, scope: !5888)
!5893 = !DILocation(line: 481, column: 25, scope: !5888)
!5894 = !DILocation(line: 481, column: 24, scope: !5888)
!5895 = !DILocation(line: 481, column: 13, scope: !5888)
!5896 = !DILocation(line: 481, column: 38, scope: !5888)
!5897 = !DILocation(line: 481, column: 46, scope: !5888)
!5898 = !DILocation(line: 481, column: 45, scope: !5888)
!5899 = !DILocation(line: 481, column: 37, scope: !5888)
!5900 = !DILocation(line: 481, column: 54, scope: !5888)
!5901 = !DILocation(line: 482, column: 19, scope: !5873)
!5902 = !DILocation(line: 482, column: 9, scope: !5873)
!5903 = !DILocation(line: 483, column: 13, scope: !5873)
!5904 = !DILocation(line: 483, column: 9, scope: !5873)
!5905 = !DILocation(line: 483, column: 11, scope: !5873)
!5906 = !DILocation(line: 484, column: 5, scope: !5873)
!5907 = !DILocation(line: 485, column: 1, scope: !5857)
!5908 = distinct !DISubprogram(name: "setInputGate", linkageName: "_ZN5cGate4Desc12setInputGateEPS_i", scope: !1138, file: !34, line: 121, type: !1192, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1191, retainedNodes: !324)
!5909 = !DILocalVariable(name: "this", arg: 1, scope: !5908, type: !1137, flags: DIFlagArtificial | DIFlagObjectPointer)
!5910 = !DILocation(line: 0, scope: !5908)
!5911 = !DILocalVariable(name: "g", arg: 2, scope: !5908, file: !34, line: 121, type: !1147)
!5912 = !DILocation(line: 121, column: 34, scope: !5908)
!5913 = !DILocalVariable(name: "index", arg: 3, scope: !5908, file: !34, line: 121, type: !11)
!5914 = !DILocation(line: 121, column: 41, scope: !5908)
!5915 = !DILocation(line: 121, column: 108, scope: !5908)
!5916 = !DILocation(line: 121, column: 90, scope: !5908)
!5917 = !DILocation(line: 121, column: 101, scope: !5908)
!5918 = !DILocation(line: 121, column: 107, scope: !5908)
!5919 = !DILocation(line: 121, column: 111, scope: !5908)
!5920 = !DILocation(line: 121, column: 114, scope: !5908)
!5921 = !DILocation(line: 121, column: 118, scope: !5908)
!5922 = !DILocation(line: 121, column: 133, scope: !5908)
!5923 = !DILocation(line: 121, column: 138, scope: !5908)
!5924 = !DILocation(line: 121, column: 125, scope: !5908)
!5925 = !DILocation(line: 121, column: 128, scope: !5908)
!5926 = !DILocation(line: 121, column: 131, scope: !5908)
!5927 = !DILocation(line: 121, column: 143, scope: !5908)
!5928 = distinct !DISubprogram(name: "setOutputGate", linkageName: "_ZN5cGate4Desc13setOutputGateEPS_i", scope: !1138, file: !34, line: 122, type: !1192, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1194, retainedNodes: !324)
!5929 = !DILocalVariable(name: "this", arg: 1, scope: !5928, type: !1137, flags: DIFlagArtificial | DIFlagObjectPointer)
!5930 = !DILocation(line: 0, scope: !5928)
!5931 = !DILocalVariable(name: "g", arg: 2, scope: !5928, file: !34, line: 122, type: !1147)
!5932 = !DILocation(line: 122, column: 35, scope: !5928)
!5933 = !DILocalVariable(name: "index", arg: 3, scope: !5928, file: !34, line: 122, type: !11)
!5934 = !DILocation(line: 122, column: 42, scope: !5928)
!5935 = !DILocation(line: 122, column: 109, scope: !5928)
!5936 = !DILocation(line: 122, column: 90, scope: !5928)
!5937 = !DILocation(line: 122, column: 102, scope: !5928)
!5938 = !DILocation(line: 122, column: 108, scope: !5928)
!5939 = !DILocation(line: 122, column: 112, scope: !5928)
!5940 = !DILocation(line: 122, column: 115, scope: !5928)
!5941 = !DILocation(line: 122, column: 119, scope: !5928)
!5942 = !DILocation(line: 122, column: 134, scope: !5928)
!5943 = !DILocation(line: 122, column: 139, scope: !5928)
!5944 = !DILocation(line: 122, column: 143, scope: !5928)
!5945 = !DILocation(line: 122, column: 126, scope: !5928)
!5946 = !DILocation(line: 122, column: 129, scope: !5928)
!5947 = !DILocation(line: 122, column: 132, scope: !5928)
!5948 = !DILocation(line: 122, column: 146, scope: !5928)
!5949 = distinct !DISubprogram(name: "gateSize", linkageName: "_ZNK7cModule8gateSizeEPKc", scope: !101, file: !31, line: 582, type: !1992, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1991, retainedNodes: !324)
!5950 = !DILocalVariable(name: "this", arg: 1, scope: !5949, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!5951 = !DILocation(line: 0, scope: !5949)
!5952 = !DILocalVariable(name: "gatename", arg: 2, scope: !5949, file: !31, line: 582, type: !167)
!5953 = !DILocation(line: 582, column: 35, scope: !5949)
!5954 = !DILocalVariable(name: "dummy", scope: !5949, file: !31, line: 584, type: !117)
!5955 = !DILocation(line: 584, column: 10, scope: !5949)
!5956 = !DILocalVariable(name: "desc", scope: !5949, file: !31, line: 585, type: !4771)
!5957 = !DILocation(line: 585, column: 24, scope: !5949)
!5958 = !DILocation(line: 585, column: 40, scope: !5949)
!5959 = !DILocation(line: 585, column: 31, scope: !5949)
!5960 = !DILocation(line: 586, column: 12, scope: !5949)
!5961 = !DILocation(line: 586, column: 18, scope: !5949)
!5962 = !DILocation(line: 586, column: 5, scope: !5949)
!5963 = distinct !DISubprogram(name: "gateBaseId", linkageName: "_ZNK7cModule10gateBaseIdEPKc", scope: !101, file: !31, line: 589, type: !1992, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1994, retainedNodes: !324)
!5964 = !DILocalVariable(name: "this", arg: 1, scope: !5963, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!5965 = !DILocation(line: 0, scope: !5963)
!5966 = !DILocalVariable(name: "gatename", arg: 2, scope: !5963, file: !31, line: 589, type: !167)
!5967 = !DILocation(line: 589, column: 37, scope: !5963)
!5968 = !DILocalVariable(name: "suffix", scope: !5963, file: !31, line: 591, type: !117)
!5969 = !DILocation(line: 591, column: 10, scope: !5963)
!5970 = !DILocalVariable(name: "descIndex", scope: !5963, file: !31, line: 592, type: !11)
!5971 = !DILocation(line: 592, column: 9, scope: !5963)
!5972 = !DILocation(line: 592, column: 34, scope: !5963)
!5973 = !DILocation(line: 592, column: 21, scope: !5963)
!5974 = !DILocation(line: 593, column: 9, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5963, file: !31, line: 593, column: 9)
!5976 = !DILocation(line: 593, column: 18, scope: !5975)
!5977 = !DILocation(line: 593, column: 9, scope: !5963)
!5978 = !DILocation(line: 594, column: 9, scope: !5975)
!5979 = !DILocation(line: 594, column: 29, scope: !5975)
!5980 = !DILocation(line: 594, column: 86, scope: !5975)
!5981 = !DILocation(line: 594, column: 15, scope: !5975)
!5982 = !DILocation(line: 608, column: 1, scope: !5975)
!5983 = !DILocalVariable(name: "desc", scope: !5963, file: !31, line: 595, type: !4771)
!5984 = !DILocation(line: 595, column: 24, scope: !5963)
!5985 = !DILocation(line: 595, column: 31, scope: !5963)
!5986 = !DILocation(line: 595, column: 37, scope: !5963)
!5987 = !DILocation(line: 595, column: 36, scope: !5963)
!5988 = !DILocation(line: 596, column: 9, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5963, file: !31, line: 596, column: 9)
!5990 = !DILocation(line: 596, column: 15, scope: !5989)
!5991 = !DILocation(line: 596, column: 24, scope: !5989)
!5992 = !DILocation(line: 596, column: 39, scope: !5989)
!5993 = !DILocation(line: 596, column: 43, scope: !5989)
!5994 = !DILocation(line: 596, column: 9, scope: !5963)
!5995 = !DILocation(line: 597, column: 9, scope: !5989)
!5996 = !DILocation(line: 597, column: 29, scope: !5989)
!5997 = !DILocation(line: 597, column: 110, scope: !5989)
!5998 = !DILocation(line: 597, column: 15, scope: !5989)
!5999 = !DILocation(line: 608, column: 1, scope: !5989)
!6000 = !DILocalVariable(name: "isInput", scope: !5963, file: !31, line: 598, type: !13)
!6001 = !DILocation(line: 598, column: 10, scope: !5963)
!6002 = !DILocation(line: 598, column: 21, scope: !5963)
!6003 = !DILocation(line: 598, column: 27, scope: !5963)
!6004 = !DILocation(line: 598, column: 33, scope: !5963)
!6005 = !DILocation(line: 598, column: 36, scope: !5963)
!6006 = !DILocation(line: 598, column: 42, scope: !5963)
!6007 = !DILocation(line: 598, column: 51, scope: !5963)
!6008 = !DILocalVariable(name: "id", scope: !5963, file: !31, line: 602, type: !11)
!6009 = !DILocation(line: 602, column: 9, scope: !5963)
!6010 = !DILocation(line: 603, column: 10, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5963, file: !31, line: 603, column: 9)
!6012 = !DILocation(line: 603, column: 16, scope: !6011)
!6013 = !DILocation(line: 603, column: 9, scope: !5963)
!6014 = !DILocation(line: 604, column: 15, scope: !6011)
!6015 = !DILocation(line: 604, column: 24, scope: !6011)
!6016 = !DILocation(line: 604, column: 32, scope: !6011)
!6017 = !DILocation(line: 604, column: 29, scope: !6011)
!6018 = !DILocation(line: 604, column: 12, scope: !6011)
!6019 = !DILocation(line: 604, column: 9, scope: !6011)
!6020 = !DILocation(line: 606, column: 16, scope: !6011)
!6021 = !DILocation(line: 606, column: 25, scope: !6011)
!6022 = !DILocation(line: 606, column: 28, scope: !6011)
!6023 = !DILocation(line: 606, column: 48, scope: !6011)
!6024 = !DILocation(line: 606, column: 60, scope: !6011)
!6025 = !DILocation(line: 606, column: 44, scope: !6011)
!6026 = !DILocation(line: 606, column: 12, scope: !6011)
!6027 = !DILocation(line: 607, column: 12, scope: !5963)
!6028 = !DILocation(line: 607, column: 5, scope: !5963)
!6029 = distinct !DISubprogram(name: "gate", linkageName: "_ZN7cModule4gateEPKci", scope: !101, file: !31, line: 610, type: !1469, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1468, retainedNodes: !324)
!6030 = !DILocalVariable(name: "this", arg: 1, scope: !6029, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!6031 = !DILocation(line: 0, scope: !6029)
!6032 = !DILocalVariable(name: "gatename", arg: 2, scope: !6029, file: !31, line: 610, type: !167)
!6033 = !DILocation(line: 610, column: 34, scope: !6029)
!6034 = !DILocalVariable(name: "index", arg: 3, scope: !6029, file: !31, line: 610, type: !11)
!6035 = !DILocation(line: 610, column: 48, scope: !6029)
!6036 = !DILocalVariable(name: "suffix", scope: !6029, file: !31, line: 612, type: !117)
!6037 = !DILocation(line: 612, column: 10, scope: !6029)
!6038 = !DILocalVariable(name: "desc", scope: !6029, file: !31, line: 613, type: !4771)
!6039 = !DILocation(line: 613, column: 24, scope: !6029)
!6040 = !DILocation(line: 613, column: 40, scope: !6029)
!6041 = !DILocation(line: 613, column: 31, scope: !6029)
!6042 = !DILocation(line: 614, column: 9, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6029, file: !31, line: 614, column: 9)
!6044 = !DILocation(line: 614, column: 15, scope: !6043)
!6045 = !DILocation(line: 614, column: 24, scope: !6043)
!6046 = !DILocation(line: 614, column: 39, scope: !6043)
!6047 = !DILocation(line: 614, column: 43, scope: !6043)
!6048 = !DILocation(line: 614, column: 9, scope: !6029)
!6049 = !DILocation(line: 615, column: 9, scope: !6043)
!6050 = !DILocation(line: 615, column: 29, scope: !6043)
!6051 = !DILocation(line: 615, column: 96, scope: !6043)
!6052 = !DILocation(line: 615, column: 15, scope: !6043)
!6053 = !DILocation(line: 634, column: 1, scope: !6043)
!6054 = !DILocalVariable(name: "isInput", scope: !6029, file: !31, line: 616, type: !13)
!6055 = !DILocation(line: 616, column: 10, scope: !6029)
!6056 = !DILocation(line: 616, column: 21, scope: !6029)
!6057 = !DILocation(line: 616, column: 27, scope: !6029)
!6058 = !DILocation(line: 616, column: 33, scope: !6029)
!6059 = !DILocation(line: 616, column: 36, scope: !6029)
!6060 = !DILocation(line: 616, column: 42, scope: !6029)
!6061 = !DILocation(line: 616, column: 51, scope: !6029)
!6062 = !DILocation(line: 618, column: 10, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6029, file: !31, line: 618, column: 9)
!6064 = !DILocation(line: 618, column: 16, scope: !6063)
!6065 = !DILocation(line: 618, column: 9, scope: !6029)
!6066 = !DILocation(line: 621, column: 13, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !31, line: 621, column: 13)
!6068 = distinct !DILexicalBlock(scope: !6063, file: !31, line: 619, column: 5)
!6069 = !DILocation(line: 621, column: 18, scope: !6067)
!6070 = !DILocation(line: 621, column: 13, scope: !6068)
!6071 = !DILocation(line: 622, column: 13, scope: !6067)
!6072 = !DILocation(line: 622, column: 33, scope: !6067)
!6073 = !DILocation(line: 622, column: 81, scope: !6067)
!6074 = !DILocation(line: 622, column: 19, scope: !6067)
!6075 = !DILocation(line: 634, column: 1, scope: !6067)
!6076 = !DILocation(line: 623, column: 16, scope: !6068)
!6077 = !DILocation(line: 623, column: 26, scope: !6068)
!6078 = !DILocation(line: 623, column: 32, scope: !6068)
!6079 = !DILocation(line: 623, column: 44, scope: !6068)
!6080 = !DILocation(line: 623, column: 50, scope: !6068)
!6081 = !DILocation(line: 623, column: 9, scope: !6068)
!6082 = !DILocation(line: 628, column: 13, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !31, line: 628, column: 13)
!6084 = distinct !DILexicalBlock(scope: !6063, file: !31, line: 626, column: 5)
!6085 = !DILocation(line: 628, column: 18, scope: !6083)
!6086 = !DILocation(line: 628, column: 13, scope: !6084)
!6087 = !DILocation(line: 629, column: 13, scope: !6083)
!6088 = !DILocation(line: 629, column: 33, scope: !6083)
!6089 = !DILocation(line: 629, column: 78, scope: !6083)
!6090 = !DILocation(line: 629, column: 83, scope: !6083)
!6091 = !DILocation(line: 629, column: 148, scope: !6083)
!6092 = !DILocation(line: 629, column: 19, scope: !6083)
!6093 = !DILocation(line: 634, column: 1, scope: !6083)
!6094 = !DILocation(line: 630, column: 13, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6084, file: !31, line: 630, column: 13)
!6096 = !DILocation(line: 630, column: 20, scope: !6095)
!6097 = !DILocation(line: 630, column: 26, scope: !6095)
!6098 = !DILocation(line: 630, column: 18, scope: !6095)
!6099 = !DILocation(line: 630, column: 13, scope: !6084)
!6100 = !DILocation(line: 631, column: 13, scope: !6095)
!6101 = !DILocation(line: 631, column: 33, scope: !6095)
!6102 = !DILocation(line: 631, column: 116, scope: !6095)
!6103 = !DILocation(line: 631, column: 123, scope: !6095)
!6104 = !DILocation(line: 631, column: 133, scope: !6095)
!6105 = !DILocation(line: 631, column: 139, scope: !6095)
!6106 = !DILocation(line: 631, column: 19, scope: !6095)
!6107 = !DILocation(line: 634, column: 1, scope: !6095)
!6108 = !DILocation(line: 632, column: 16, scope: !6084)
!6109 = !DILocation(line: 632, column: 26, scope: !6084)
!6110 = !DILocation(line: 632, column: 32, scope: !6084)
!6111 = !DILocation(line: 632, column: 43, scope: !6084)
!6112 = !DILocation(line: 632, column: 52, scope: !6084)
!6113 = !DILocation(line: 632, column: 58, scope: !6084)
!6114 = !DILocation(line: 632, column: 70, scope: !6084)
!6115 = !DILocation(line: 632, column: 9, scope: !6084)
!6116 = !DILocation(line: 634, column: 1, scope: !6029)
!6117 = distinct !DISubprogram(name: "findGate", linkageName: "_ZNK7cModule8findGateEPKci", scope: !101, file: !31, line: 636, type: !1484, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1483, retainedNodes: !324)
!6118 = !DILocalVariable(name: "this", arg: 1, scope: !6117, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6119 = !DILocation(line: 0, scope: !6117)
!6120 = !DILocalVariable(name: "gatename", arg: 2, scope: !6117, file: !31, line: 636, type: !167)
!6121 = !DILocation(line: 636, column: 35, scope: !6117)
!6122 = !DILocalVariable(name: "index", arg: 3, scope: !6117, file: !31, line: 636, type: !11)
!6123 = !DILocation(line: 636, column: 49, scope: !6117)
!6124 = !DILocalVariable(name: "suffix", scope: !6117, file: !31, line: 638, type: !117)
!6125 = !DILocation(line: 638, column: 10, scope: !6117)
!6126 = !DILocalVariable(name: "descIndex", scope: !6117, file: !31, line: 639, type: !11)
!6127 = !DILocation(line: 639, column: 9, scope: !6117)
!6128 = !DILocation(line: 639, column: 34, scope: !6117)
!6129 = !DILocation(line: 639, column: 21, scope: !6117)
!6130 = !DILocation(line: 640, column: 9, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6117, file: !31, line: 640, column: 9)
!6132 = !DILocation(line: 640, column: 18, scope: !6131)
!6133 = !DILocation(line: 640, column: 9, scope: !6117)
!6134 = !DILocation(line: 641, column: 9, scope: !6131)
!6135 = !DILocalVariable(name: "desc", scope: !6117, file: !31, line: 642, type: !4771)
!6136 = !DILocation(line: 642, column: 24, scope: !6117)
!6137 = !DILocation(line: 642, column: 31, scope: !6117)
!6138 = !DILocation(line: 642, column: 39, scope: !6117)
!6139 = !DILocation(line: 642, column: 37, scope: !6117)
!6140 = !DILocation(line: 643, column: 9, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6117, file: !31, line: 643, column: 9)
!6142 = !DILocation(line: 643, column: 15, scope: !6141)
!6143 = !DILocation(line: 643, column: 24, scope: !6141)
!6144 = !DILocation(line: 643, column: 39, scope: !6141)
!6145 = !DILocation(line: 643, column: 43, scope: !6141)
!6146 = !DILocation(line: 643, column: 9, scope: !6117)
!6147 = !DILocation(line: 644, column: 9, scope: !6141)
!6148 = !DILocalVariable(name: "isInput", scope: !6117, file: !31, line: 645, type: !13)
!6149 = !DILocation(line: 645, column: 10, scope: !6117)
!6150 = !DILocation(line: 645, column: 21, scope: !6117)
!6151 = !DILocation(line: 645, column: 27, scope: !6117)
!6152 = !DILocation(line: 645, column: 33, scope: !6117)
!6153 = !DILocation(line: 645, column: 36, scope: !6117)
!6154 = !DILocation(line: 645, column: 42, scope: !6117)
!6155 = !DILocation(line: 645, column: 51, scope: !6117)
!6156 = !DILocation(line: 647, column: 10, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6117, file: !31, line: 647, column: 9)
!6158 = !DILocation(line: 647, column: 16, scope: !6157)
!6159 = !DILocation(line: 647, column: 9, scope: !6117)
!6160 = !DILocation(line: 650, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !31, line: 650, column: 13)
!6162 = distinct !DILexicalBlock(scope: !6157, file: !31, line: 648, column: 5)
!6163 = !DILocation(line: 650, column: 18, scope: !6161)
!6164 = !DILocation(line: 650, column: 13, scope: !6162)
!6165 = !DILocation(line: 651, column: 13, scope: !6161)
!6166 = !DILocation(line: 652, column: 16, scope: !6162)
!6167 = !DILocation(line: 652, column: 26, scope: !6162)
!6168 = !DILocation(line: 652, column: 32, scope: !6162)
!6169 = !DILocation(line: 652, column: 43, scope: !6162)
!6170 = !DILocation(line: 652, column: 53, scope: !6162)
!6171 = !DILocation(line: 652, column: 59, scope: !6162)
!6172 = !DILocation(line: 652, column: 71, scope: !6162)
!6173 = !DILocation(line: 652, column: 9, scope: !6162)
!6174 = !DILocation(line: 657, column: 13, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !31, line: 657, column: 13)
!6176 = distinct !DILexicalBlock(scope: !6157, file: !31, line: 655, column: 5)
!6177 = !DILocation(line: 657, column: 18, scope: !6175)
!6178 = !DILocation(line: 657, column: 21, scope: !6175)
!6179 = !DILocation(line: 657, column: 24, scope: !6175)
!6180 = !DILocation(line: 657, column: 31, scope: !6175)
!6181 = !DILocation(line: 657, column: 37, scope: !6175)
!6182 = !DILocation(line: 657, column: 29, scope: !6175)
!6183 = !DILocation(line: 657, column: 13, scope: !6176)
!6184 = !DILocation(line: 658, column: 13, scope: !6175)
!6185 = !DILocation(line: 659, column: 16, scope: !6176)
!6186 = !DILocation(line: 659, column: 26, scope: !6176)
!6187 = !DILocation(line: 659, column: 32, scope: !6176)
!6188 = !DILocation(line: 659, column: 43, scope: !6176)
!6189 = !DILocation(line: 659, column: 51, scope: !6176)
!6190 = !DILocation(line: 659, column: 61, scope: !6176)
!6191 = !DILocation(line: 659, column: 67, scope: !6176)
!6192 = !DILocation(line: 659, column: 79, scope: !6176)
!6193 = !DILocation(line: 659, column: 87, scope: !6176)
!6194 = !DILocation(line: 659, column: 9, scope: !6176)
!6195 = !DILocation(line: 661, column: 1, scope: !6117)
!6196 = distinct !DISubprogram(name: "gateHalf", linkageName: "_ZN7cModule8gateHalfEPKcN5cGate4TypeEi", scope: !101, file: !31, line: 663, type: !1475, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1474, retainedNodes: !324)
!6197 = !DILocalVariable(name: "this", arg: 1, scope: !6196, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!6198 = !DILocation(line: 0, scope: !6196)
!6199 = !DILocalVariable(name: "gatename", arg: 2, scope: !6196, file: !31, line: 663, type: !167)
!6200 = !DILocation(line: 663, column: 38, scope: !6196)
!6201 = !DILocalVariable(name: "type", arg: 3, scope: !6196, file: !31, line: 663, type: !33)
!6202 = !DILocation(line: 663, column: 60, scope: !6196)
!6203 = !DILocalVariable(name: "index", arg: 4, scope: !6196, file: !31, line: 663, type: !11)
!6204 = !DILocation(line: 663, column: 70, scope: !6196)
!6205 = !DILocalVariable(name: "dummy", scope: !6196, file: !31, line: 665, type: !117)
!6206 = !DILocation(line: 665, column: 10, scope: !6196)
!6207 = !DILocalVariable(name: "desc", scope: !6196, file: !31, line: 666, type: !4771)
!6208 = !DILocation(line: 666, column: 24, scope: !6196)
!6209 = !DILocation(line: 666, column: 40, scope: !6196)
!6210 = !DILocation(line: 666, column: 31, scope: !6196)
!6211 = !DILocalVariable(name: "nameWithSuffix", scope: !6196, file: !31, line: 667, type: !167)
!6212 = !DILocation(line: 667, column: 17, scope: !6196)
!6213 = !DILocation(line: 667, column: 35, scope: !6196)
!6214 = !DILocation(line: 667, column: 39, scope: !6196)
!6215 = !DILocation(line: 667, column: 34, scope: !6196)
!6216 = !DILocation(line: 667, column: 57, scope: !6196)
!6217 = !DILocation(line: 667, column: 63, scope: !6196)
!6218 = !DILocation(line: 667, column: 70, scope: !6196)
!6219 = !DILocation(line: 667, column: 76, scope: !6196)
!6220 = !DILocation(line: 667, column: 86, scope: !6196)
!6221 = !DILocation(line: 667, column: 92, scope: !6196)
!6222 = !DILocation(line: 667, column: 99, scope: !6196)
!6223 = !DILocation(line: 667, column: 105, scope: !6196)
!6224 = !DILocation(line: 668, column: 17, scope: !6196)
!6225 = !DILocation(line: 668, column: 33, scope: !6196)
!6226 = !DILocation(line: 668, column: 12, scope: !6196)
!6227 = !DILocation(line: 668, column: 5, scope: !6196)
!6228 = distinct !DISubprogram(name: "hasGate", linkageName: "_ZNK7cModule7hasGateEPKci", scope: !101, file: !31, line: 671, type: !1481, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1480, retainedNodes: !324)
!6229 = !DILocalVariable(name: "this", arg: 1, scope: !6228, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6230 = !DILocation(line: 0, scope: !6228)
!6231 = !DILocalVariable(name: "gatename", arg: 2, scope: !6228, file: !31, line: 671, type: !167)
!6232 = !DILocation(line: 671, column: 35, scope: !6228)
!6233 = !DILocalVariable(name: "index", arg: 3, scope: !6228, file: !31, line: 671, type: !11)
!6234 = !DILocation(line: 671, column: 49, scope: !6228)
!6235 = !DILocalVariable(name: "suffix", scope: !6228, file: !31, line: 673, type: !117)
!6236 = !DILocation(line: 673, column: 10, scope: !6228)
!6237 = !DILocalVariable(name: "descIndex", scope: !6228, file: !31, line: 674, type: !11)
!6238 = !DILocation(line: 674, column: 9, scope: !6228)
!6239 = !DILocation(line: 674, column: 34, scope: !6228)
!6240 = !DILocation(line: 674, column: 21, scope: !6228)
!6241 = !DILocation(line: 675, column: 9, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6228, file: !31, line: 675, column: 9)
!6243 = !DILocation(line: 675, column: 18, scope: !6242)
!6244 = !DILocation(line: 675, column: 9, scope: !6228)
!6245 = !DILocation(line: 676, column: 9, scope: !6242)
!6246 = !DILocalVariable(name: "desc", scope: !6228, file: !31, line: 677, type: !4771)
!6247 = !DILocation(line: 677, column: 24, scope: !6228)
!6248 = !DILocation(line: 677, column: 31, scope: !6228)
!6249 = !DILocation(line: 677, column: 39, scope: !6228)
!6250 = !DILocation(line: 677, column: 37, scope: !6228)
!6251 = !DILocation(line: 678, column: 12, scope: !6228)
!6252 = !DILocation(line: 678, column: 17, scope: !6228)
!6253 = !DILocation(line: 678, column: 32, scope: !6228)
!6254 = !DILocation(line: 678, column: 37, scope: !6228)
!6255 = !DILocation(line: 678, column: 41, scope: !6228)
!6256 = !DILocation(line: 678, column: 44, scope: !6228)
!6257 = !DILocation(line: 678, column: 50, scope: !6228)
!6258 = !DILocation(line: 678, column: 56, scope: !6228)
!6259 = !DILocation(line: 678, column: 49, scope: !6228)
!6260 = !DILocation(line: 678, column: 5, scope: !6228)
!6261 = !DILocation(line: 679, column: 1, scope: !6228)
!6262 = distinct !DISubprogram(name: "deleteGate", linkageName: "_ZN7cModule10deleteGateEPKc", scope: !101, file: !31, line: 681, type: !1411, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1492, retainedNodes: !324)
!6263 = !DILocalVariable(name: "this", arg: 1, scope: !6262, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!6264 = !DILocation(line: 0, scope: !6262)
!6265 = !DILocalVariable(name: "gatename", arg: 2, scope: !6262, file: !31, line: 681, type: !167)
!6266 = !DILocation(line: 681, column: 38, scope: !6262)
!6267 = !DILocalVariable(name: "suffix", scope: !6262, file: !31, line: 683, type: !117)
!6268 = !DILocation(line: 683, column: 10, scope: !6262)
!6269 = !DILocalVariable(name: "desc", scope: !6262, file: !31, line: 684, type: !1137)
!6270 = !DILocation(line: 684, column: 18, scope: !6262)
!6271 = !DILocation(line: 684, column: 34, scope: !6262)
!6272 = !DILocation(line: 684, column: 25, scope: !6262)
!6273 = !DILocation(line: 685, column: 9, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6262, file: !31, line: 685, column: 9)
!6275 = !DILocation(line: 685, column: 9, scope: !6262)
!6276 = !DILocation(line: 686, column: 9, scope: !6274)
!6277 = !DILocation(line: 686, column: 29, scope: !6274)
!6278 = !DILocation(line: 686, column: 84, scope: !6274)
!6279 = !DILocation(line: 686, column: 15, scope: !6274)
!6280 = !DILocation(line: 688, column: 1, scope: !6274)
!6281 = !DILocation(line: 687, column: 21, scope: !6262)
!6282 = !DILocation(line: 687, column: 5, scope: !6262)
!6283 = !DILocation(line: 688, column: 1, scope: !6262)
!6284 = distinct !DISubprogram(name: "getGateNames", linkageName: "_ZNK7cModule12getGateNamesEv", scope: !101, file: !31, line: 690, type: !1494, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1493, retainedNodes: !324)
!6285 = !DILocalVariable(name: "this", arg: 1, scope: !6284, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6286 = !DILocation(line: 0, scope: !6284)
!6287 = !DILocation(line: 692, column: 5, scope: !6284)
!6288 = !DILocalVariable(name: "result", scope: !6284, file: !31, line: 692, type: !1496)
!6289 = !DILocation(line: 692, column: 31, scope: !6284)
!6290 = !DILocalVariable(name: "i", scope: !6291, file: !31, line: 693, type: !11)
!6291 = distinct !DILexicalBlock(scope: !6284, file: !31, line: 693, column: 5)
!6292 = !DILocation(line: 693, column: 14, scope: !6291)
!6293 = !DILocation(line: 693, column: 10, scope: !6291)
!6294 = !DILocation(line: 693, column: 19, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !31, line: 693, column: 5)
!6296 = !DILocation(line: 693, column: 21, scope: !6295)
!6297 = !DILocation(line: 693, column: 20, scope: !6295)
!6298 = !DILocation(line: 693, column: 5, scope: !6291)
!6299 = !DILocation(line: 694, column: 13, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !31, line: 694, column: 13)
!6301 = !DILocation(line: 694, column: 19, scope: !6300)
!6302 = !DILocation(line: 694, column: 22, scope: !6300)
!6303 = !DILocation(line: 694, column: 13, scope: !6295)
!6304 = !DILocation(line: 695, column: 30, scope: !6300)
!6305 = !DILocation(line: 695, column: 36, scope: !6300)
!6306 = !DILocation(line: 695, column: 39, scope: !6300)
!6307 = !DILocation(line: 695, column: 46, scope: !6300)
!6308 = !DILocation(line: 695, column: 51, scope: !6300)
!6309 = !DILocation(line: 695, column: 20, scope: !6300)
!6310 = !DILocation(line: 695, column: 13, scope: !6300)
!6311 = !DILocation(line: 697, column: 1, scope: !6300)
!6312 = !DILocation(line: 697, column: 1, scope: !6284)
!6313 = !DILocation(line: 693, column: 33, scope: !6295)
!6314 = !DILocation(line: 693, column: 5, scope: !6295)
!6315 = distinct !{!6315, !6298, !6316}
!6316 = !DILocation(line: 695, column: 58, scope: !6291)
!6317 = !DILocation(line: 696, column: 5, scope: !6284)
!6318 = distinct !DISubprogram(name: "vector", linkageName: "_ZNSt6vectorIPKcSaIS1_EEC2Ev", scope: !1496, file: !1497, line: 487, type: !1723, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1722, retainedNodes: !324)
!6319 = !DILocalVariable(name: "this", arg: 1, scope: !6318, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!6320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!6321 = !DILocation(line: 0, scope: !6318)
!6322 = !DILocation(line: 487, column: 24, scope: !6318)
!6323 = !DILocation(line: 487, column: 7, scope: !6318)
!6324 = distinct !DISubprogram(name: "push_back", linkageName: "_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_", scope: !1496, file: !1497, line: 1203, type: !1920, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1919, retainedNodes: !324)
!6325 = !DILocalVariable(name: "this", arg: 1, scope: !6324, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!6326 = !DILocation(line: 0, scope: !6324)
!6327 = !DILocalVariable(name: "__x", arg: 2, scope: !6324, file: !1497, line: 1203, type: !1922)
!6328 = !DILocation(line: 1203, column: 30, scope: !6324)
!6329 = !DILocation(line: 1204, column: 32, scope: !6324)
!6330 = !DILocation(line: 1204, column: 22, scope: !6324)
!6331 = !DILocation(line: 1204, column: 9, scope: !6324)
!6332 = !DILocation(line: 1204, column: 39, scope: !6324)
!6333 = distinct !DISubprogram(name: "~vector", linkageName: "_ZNSt6vectorIPKcSaIS1_EED2Ev", scope: !1496, file: !1497, line: 678, type: !1723, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1767, retainedNodes: !324)
!6334 = !DILocalVariable(name: "this", arg: 1, scope: !6333, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!6335 = !DILocation(line: 0, scope: !6333)
!6336 = !DILocation(line: 680, column: 22, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6333, file: !1497, line: 679, column: 7)
!6338 = !DILocation(line: 680, column: 16, scope: !6337)
!6339 = !DILocation(line: 680, column: 30, scope: !6337)
!6340 = !DILocation(line: 680, column: 46, scope: !6337)
!6341 = !DILocation(line: 680, column: 40, scope: !6337)
!6342 = !DILocation(line: 680, column: 54, scope: !6337)
!6343 = !DILocation(line: 681, column: 9, scope: !6337)
!6344 = !DILocation(line: 680, column: 2, scope: !6337)
!6345 = !DILocation(line: 683, column: 7, scope: !6337)
!6346 = !DILocation(line: 683, column: 7, scope: !6333)
!6347 = distinct !DISubprogram(name: "gateType", linkageName: "_ZNK7cModule8gateTypeEPKc", scope: !101, file: !31, line: 699, type: !1986, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1985, retainedNodes: !324)
!6348 = !DILocalVariable(name: "this", arg: 1, scope: !6347, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6349 = !DILocation(line: 0, scope: !6347)
!6350 = !DILocalVariable(name: "gatename", arg: 2, scope: !6347, file: !31, line: 699, type: !167)
!6351 = !DILocation(line: 699, column: 43, scope: !6347)
!6352 = !DILocalVariable(name: "suffix", scope: !6347, file: !31, line: 701, type: !117)
!6353 = !DILocation(line: 701, column: 10, scope: !6347)
!6354 = !DILocalVariable(name: "desc", scope: !6347, file: !31, line: 702, type: !4771)
!6355 = !DILocation(line: 702, column: 24, scope: !6347)
!6356 = !DILocation(line: 702, column: 40, scope: !6347)
!6357 = !DILocation(line: 702, column: 31, scope: !6347)
!6358 = !DILocation(line: 703, column: 9, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6347, file: !31, line: 703, column: 9)
!6360 = !DILocation(line: 703, column: 9, scope: !6347)
!6361 = !DILocation(line: 704, column: 16, scope: !6359)
!6362 = !DILocation(line: 704, column: 22, scope: !6359)
!6363 = !DILocation(line: 704, column: 9, scope: !6359)
!6364 = !DILocation(line: 706, column: 16, scope: !6359)
!6365 = !DILocation(line: 706, column: 22, scope: !6359)
!6366 = !DILocation(line: 706, column: 29, scope: !6359)
!6367 = !DILocation(line: 706, column: 9, scope: !6359)
!6368 = !DILocation(line: 707, column: 1, scope: !6347)
!6369 = distinct !DISubprogram(name: "isGateVector", linkageName: "_ZNK7cModule12isGateVectorEPKc", scope: !101, file: !31, line: 709, type: !1989, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1988, retainedNodes: !324)
!6370 = !DILocalVariable(name: "this", arg: 1, scope: !6369, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6371 = !DILocation(line: 0, scope: !6369)
!6372 = !DILocalVariable(name: "gatename", arg: 2, scope: !6369, file: !31, line: 709, type: !167)
!6373 = !DILocation(line: 709, column: 40, scope: !6369)
!6374 = !DILocalVariable(name: "dummy", scope: !6369, file: !31, line: 711, type: !117)
!6375 = !DILocation(line: 711, column: 10, scope: !6369)
!6376 = !DILocalVariable(name: "desc", scope: !6369, file: !31, line: 712, type: !4771)
!6377 = !DILocation(line: 712, column: 24, scope: !6369)
!6378 = !DILocation(line: 712, column: 40, scope: !6369)
!6379 = !DILocation(line: 712, column: 31, scope: !6369)
!6380 = !DILocation(line: 713, column: 12, scope: !6369)
!6381 = !DILocation(line: 713, column: 18, scope: !6369)
!6382 = !DILocation(line: 713, column: 5, scope: !6369)
!6383 = distinct !DISubprogram(name: "getOrCreateFirstUnconnectedGate", linkageName: "_ZN7cModule31getOrCreateFirstUnconnectedGateEPKccbb", scope: !101, file: !31, line: 752, type: !1426, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1425, retainedNodes: !324)
!6384 = !DILocalVariable(name: "this", arg: 1, scope: !6383, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!6385 = !DILocation(line: 0, scope: !6383)
!6386 = !DILocalVariable(name: "gatename", arg: 2, scope: !6383, file: !31, line: 752, type: !167)
!6387 = !DILocation(line: 752, column: 61, scope: !6383)
!6388 = !DILocalVariable(name: "suffix", arg: 3, scope: !6383, file: !31, line: 752, type: !117)
!6389 = !DILocation(line: 752, column: 76, scope: !6383)
!6390 = !DILocalVariable(name: "inside", arg: 4, scope: !6383, file: !31, line: 753, type: !13)
!6391 = !DILocation(line: 753, column: 54, scope: !6383)
!6392 = !DILocalVariable(name: "expand", arg: 5, scope: !6383, file: !31, line: 753, type: !13)
!6393 = !DILocation(line: 753, column: 67, scope: !6383)
!6394 = !DILocalVariable(name: "suffix1", scope: !6383, file: !31, line: 756, type: !117)
!6395 = !DILocation(line: 756, column: 10, scope: !6383)
!6396 = !DILocalVariable(name: "desc", scope: !6383, file: !31, line: 757, type: !1137)
!6397 = !DILocation(line: 757, column: 18, scope: !6383)
!6398 = !DILocation(line: 757, column: 60, scope: !6383)
!6399 = !DILocation(line: 757, column: 51, scope: !6383)
!6400 = !DILocation(line: 758, column: 10, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6383, file: !31, line: 758, column: 9)
!6402 = !DILocation(line: 758, column: 16, scope: !6401)
!6403 = !DILocation(line: 758, column: 9, scope: !6383)
!6404 = !DILocation(line: 759, column: 9, scope: !6401)
!6405 = !DILocation(line: 759, column: 29, scope: !6401)
!6406 = !DILocation(line: 759, column: 103, scope: !6401)
!6407 = !DILocation(line: 759, column: 15, scope: !6401)
!6408 = !DILocation(line: 810, column: 1, scope: !6401)
!6409 = !DILocation(line: 760, column: 9, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6383, file: !31, line: 760, column: 9)
!6411 = !DILocation(line: 760, column: 17, scope: !6410)
!6412 = !DILocation(line: 760, column: 20, scope: !6410)
!6413 = !DILocation(line: 760, column: 9, scope: !6383)
!6414 = !DILocation(line: 761, column: 9, scope: !6410)
!6415 = !DILocation(line: 761, column: 29, scope: !6410)
!6416 = !DILocation(line: 761, column: 104, scope: !6410)
!6417 = !DILocation(line: 761, column: 114, scope: !6410)
!6418 = !DILocation(line: 761, column: 15, scope: !6410)
!6419 = !DILocation(line: 810, column: 1, scope: !6410)
!6420 = !DILocation(line: 762, column: 14, scope: !6383)
!6421 = !DILocation(line: 762, column: 23, scope: !6383)
!6422 = !DILocation(line: 762, column: 21, scope: !6383)
!6423 = !DILocation(line: 762, column: 12, scope: !6383)
!6424 = !DILocalVariable(name: "inputSide", scope: !6383, file: !31, line: 765, type: !13)
!6425 = !DILocation(line: 765, column: 10, scope: !6383)
!6426 = !DILocation(line: 766, column: 10, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6383, file: !31, line: 766, column: 9)
!6428 = !DILocation(line: 766, column: 9, scope: !6383)
!6429 = !DILocation(line: 768, column: 13, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !31, line: 768, column: 13)
!6431 = distinct !DILexicalBlock(scope: !6427, file: !31, line: 767, column: 5)
!6432 = !DILocation(line: 768, column: 19, scope: !6430)
!6433 = !DILocation(line: 768, column: 28, scope: !6430)
!6434 = !DILocation(line: 768, column: 13, scope: !6431)
!6435 = !DILocation(line: 769, column: 13, scope: !6430)
!6436 = !DILocation(line: 769, column: 33, scope: !6430)
!6437 = !DILocation(line: 769, column: 19, scope: !6430)
!6438 = !DILocation(line: 810, column: 1, scope: !6430)
!6439 = !DILocation(line: 770, column: 21, scope: !6431)
!6440 = !DILocation(line: 770, column: 27, scope: !6431)
!6441 = !DILocation(line: 770, column: 36, scope: !6431)
!6442 = !DILocation(line: 770, column: 19, scope: !6431)
!6443 = !DILocation(line: 771, column: 5, scope: !6431)
!6444 = !DILocation(line: 774, column: 13, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !31, line: 774, column: 13)
!6446 = distinct !DILexicalBlock(scope: !6427, file: !31, line: 773, column: 5)
!6447 = !DILocation(line: 774, column: 19, scope: !6445)
!6448 = !DILocation(line: 774, column: 25, scope: !6445)
!6449 = !DILocation(line: 774, column: 28, scope: !6445)
!6450 = !DILocation(line: 774, column: 34, scope: !6445)
!6451 = !DILocation(line: 774, column: 13, scope: !6446)
!6452 = !DILocation(line: 775, column: 13, scope: !6445)
!6453 = !DILocation(line: 775, column: 33, scope: !6445)
!6454 = !DILocation(line: 775, column: 104, scope: !6445)
!6455 = !DILocation(line: 775, column: 19, scope: !6445)
!6456 = !DILocation(line: 810, column: 1, scope: !6445)
!6457 = !DILocation(line: 776, column: 21, scope: !6446)
!6458 = !DILocation(line: 776, column: 27, scope: !6446)
!6459 = !DILocation(line: 776, column: 19, scope: !6446)
!6460 = !DILocalVariable(name: "gatev", scope: !6383, file: !31, line: 780, type: !1149)
!6461 = !DILocation(line: 780, column: 13, scope: !6383)
!6462 = !DILocation(line: 780, column: 21, scope: !6383)
!6463 = !DILocation(line: 780, column: 33, scope: !6383)
!6464 = !DILocation(line: 780, column: 39, scope: !6383)
!6465 = !DILocation(line: 780, column: 52, scope: !6383)
!6466 = !DILocation(line: 780, column: 58, scope: !6383)
!6467 = !DILocalVariable(name: "oldSize", scope: !6383, file: !31, line: 781, type: !11)
!6468 = !DILocation(line: 781, column: 9, scope: !6383)
!6469 = !DILocation(line: 781, column: 19, scope: !6383)
!6470 = !DILocation(line: 781, column: 25, scope: !6383)
!6471 = !DILocalVariable(name: "it", scope: !6383, file: !31, line: 789, type: !1149)
!6472 = !DILocation(line: 789, column: 13, scope: !6383)
!6473 = !DILocation(line: 789, column: 18, scope: !6383)
!6474 = !DILocation(line: 790, column: 26, scope: !6383)
!6475 = !DILocation(line: 790, column: 33, scope: !6383)
!6476 = !DILocation(line: 790, column: 39, scope: !6383)
!6477 = !DILocation(line: 790, column: 38, scope: !6383)
!6478 = !DILocation(line: 790, column: 48, scope: !6383)
!6479 = !DILocation(line: 790, column: 9, scope: !6383)
!6480 = !DILocation(line: 791, column: 26, scope: !6383)
!6481 = !DILocation(line: 791, column: 33, scope: !6383)
!6482 = !DILocation(line: 791, column: 39, scope: !6383)
!6483 = !DILocation(line: 791, column: 38, scope: !6383)
!6484 = !DILocation(line: 791, column: 48, scope: !6383)
!6485 = !DILocation(line: 791, column: 9, scope: !6383)
!6486 = !DILocation(line: 792, column: 9, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6383, file: !31, line: 792, column: 9)
!6488 = !DILocation(line: 792, column: 15, scope: !6487)
!6489 = !DILocation(line: 792, column: 21, scope: !6487)
!6490 = !DILocation(line: 792, column: 20, scope: !6487)
!6491 = !DILocation(line: 792, column: 12, scope: !6487)
!6492 = !DILocation(line: 792, column: 9, scope: !6383)
!6493 = !DILocation(line: 793, column: 17, scope: !6487)
!6494 = !DILocation(line: 793, column: 16, scope: !6487)
!6495 = !DILocation(line: 793, column: 9, scope: !6487)
!6496 = !DILocation(line: 796, column: 9, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6383, file: !31, line: 796, column: 9)
!6498 = !DILocation(line: 796, column: 9, scope: !6383)
!6499 = !DILocation(line: 798, column: 21, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6497, file: !31, line: 797, column: 5)
!6501 = !DILocation(line: 798, column: 27, scope: !6500)
!6502 = !DILocation(line: 798, column: 34, scope: !6500)
!6503 = !DILocation(line: 798, column: 39, scope: !6500)
!6504 = !DILocation(line: 798, column: 48, scope: !6500)
!6505 = !DILocation(line: 798, column: 55, scope: !6500)
!6506 = !DILocation(line: 798, column: 9, scope: !6500)
!6507 = !DILocation(line: 799, column: 16, scope: !6500)
!6508 = !DILocation(line: 799, column: 28, scope: !6500)
!6509 = !DILocation(line: 799, column: 34, scope: !6500)
!6510 = !DILocation(line: 799, column: 45, scope: !6500)
!6511 = !DILocation(line: 799, column: 56, scope: !6500)
!6512 = !DILocation(line: 799, column: 62, scope: !6500)
!6513 = !DILocation(line: 799, column: 74, scope: !6500)
!6514 = !DILocation(line: 799, column: 9, scope: !6500)
!6515 = !DILocalVariable(name: "i", scope: !6516, file: !31, line: 805, type: !11)
!6516 = distinct !DILexicalBlock(scope: !6517, file: !31, line: 805, column: 9)
!6517 = distinct !DILexicalBlock(scope: !6497, file: !31, line: 802, column: 5)
!6518 = !DILocation(line: 805, column: 18, scope: !6516)
!6519 = !DILocation(line: 805, column: 14, scope: !6516)
!6520 = !DILocation(line: 805, column: 23, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6516, file: !31, line: 805, column: 9)
!6522 = !DILocation(line: 805, column: 25, scope: !6521)
!6523 = !DILocation(line: 805, column: 24, scope: !6521)
!6524 = !DILocation(line: 805, column: 9, scope: !6516)
!6525 = !DILocation(line: 806, column: 17, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6521, file: !31, line: 806, column: 17)
!6527 = !DILocation(line: 806, column: 17, scope: !6521)
!6528 = !DILocation(line: 806, column: 27, scope: !6526)
!6529 = !DILocation(line: 806, column: 33, scope: !6526)
!6530 = !DILocation(line: 806, column: 37, scope: !6526)
!6531 = !DILocation(line: 806, column: 60, scope: !6526)
!6532 = !DILocation(line: 806, column: 66, scope: !6526)
!6533 = !DILocation(line: 806, column: 70, scope: !6526)
!6534 = !DILocation(line: 807, column: 24, scope: !6526)
!6535 = !DILocation(line: 807, column: 30, scope: !6526)
!6536 = !DILocation(line: 807, column: 17, scope: !6526)
!6537 = !DILocation(line: 806, column: 89, scope: !6526)
!6538 = !DILocation(line: 805, column: 35, scope: !6521)
!6539 = !DILocation(line: 805, column: 9, scope: !6521)
!6540 = distinct !{!6540, !6524, !6541}
!6541 = !DILocation(line: 807, column: 31, scope: !6516)
!6542 = !DILocation(line: 808, column: 9, scope: !6517)
!6543 = !DILocation(line: 810, column: 1, scope: !6383)
!6544 = distinct !DISubprogram(name: "lower_bound<cGate **, cGate *, less_gateConnectedInside>", linkageName: "_ZSt11lower_boundIPP5cGateS1_24less_gateConnectedInsideET_S4_S4_RKT0_T1_", scope: !2, file: !6545, line: 2031, type: !6546, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !6550, retainedNodes: !324)
!6545 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algo.h", directory: "")
!6546 = !DISubroutineType(types: !6547)
!6547 = !{!1149, !1149, !1149, !6548, !2065}
!6548 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !6549, size: 64)
!6549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!6550 = !{!6551, !6552, !2086}
!6551 = !DITemplateTypeParameter(name: "_ForwardIterator", type: !1149)
!6552 = !DITemplateTypeParameter(name: "_Tp", type: !1147)
!6553 = !DILocalVariable(name: "__first", arg: 1, scope: !6544, file: !6545, line: 2031, type: !1149)
!6554 = !DILocation(line: 2031, column: 34, scope: !6544)
!6555 = !DILocalVariable(name: "__last", arg: 2, scope: !6544, file: !6545, line: 2031, type: !1149)
!6556 = !DILocation(line: 2031, column: 60, scope: !6544)
!6557 = !DILocalVariable(name: "__val", arg: 3, scope: !6544, file: !6545, line: 2032, type: !6548)
!6558 = !DILocation(line: 2032, column: 14, scope: !6544)
!6559 = !DILocalVariable(name: "__comp", arg: 4, scope: !6544, file: !6545, line: 2032, type: !2065)
!6560 = !DILocation(line: 2032, column: 30, scope: !6544)
!6561 = !DILocation(line: 2041, column: 33, scope: !6544)
!6562 = !DILocation(line: 2041, column: 42, scope: !6544)
!6563 = !DILocation(line: 2041, column: 50, scope: !6544)
!6564 = !DILocation(line: 2042, column: 5, scope: !6544)
!6565 = !DILocation(line: 2041, column: 14, scope: !6544)
!6566 = !DILocation(line: 2041, column: 7, scope: !6544)
!6567 = distinct !DISubprogram(name: "lower_bound<cGate **, cGate *, less_gateConnectedOutside>", linkageName: "_ZSt11lower_boundIPP5cGateS1_25less_gateConnectedOutsideET_S4_S4_RKT0_T1_", scope: !2, file: !6545, line: 2031, type: !6568, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !6570, retainedNodes: !324)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{!1149, !1149, !1149, !6548, !2090}
!6570 = !{!6551, !6552, !2111}
!6571 = !DILocalVariable(name: "__first", arg: 1, scope: !6567, file: !6545, line: 2031, type: !1149)
!6572 = !DILocation(line: 2031, column: 34, scope: !6567)
!6573 = !DILocalVariable(name: "__last", arg: 2, scope: !6567, file: !6545, line: 2031, type: !1149)
!6574 = !DILocation(line: 2031, column: 60, scope: !6567)
!6575 = !DILocalVariable(name: "__val", arg: 3, scope: !6567, file: !6545, line: 2032, type: !6548)
!6576 = !DILocation(line: 2032, column: 14, scope: !6567)
!6577 = !DILocalVariable(name: "__comp", arg: 4, scope: !6567, file: !6545, line: 2032, type: !2090)
!6578 = !DILocation(line: 2032, column: 30, scope: !6567)
!6579 = !DILocation(line: 2041, column: 33, scope: !6567)
!6580 = !DILocation(line: 2041, column: 42, scope: !6567)
!6581 = !DILocation(line: 2041, column: 50, scope: !6567)
!6582 = !DILocation(line: 2042, column: 5, scope: !6567)
!6583 = !DILocation(line: 2041, column: 14, scope: !6567)
!6584 = !DILocation(line: 2041, column: 7, scope: !6567)
!6585 = distinct !DISubprogram(name: "getOrCreateFirstUnconnectedGatePair", linkageName: "_ZN7cModule35getOrCreateFirstUnconnectedGatePairEPKcbbRP5cGateS4_", scope: !101, file: !31, line: 812, type: !1429, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1428, retainedNodes: !324)
!6586 = !DILocalVariable(name: "this", arg: 1, scope: !6585, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!6587 = !DILocation(line: 0, scope: !6585)
!6588 = !DILocalVariable(name: "gatename", arg: 2, scope: !6585, file: !31, line: 812, type: !167)
!6589 = !DILocation(line: 812, column: 63, scope: !6585)
!6590 = !DILocalVariable(name: "inside", arg: 3, scope: !6585, file: !31, line: 813, type: !13)
!6591 = !DILocation(line: 813, column: 56, scope: !6585)
!6592 = !DILocalVariable(name: "expand", arg: 4, scope: !6585, file: !31, line: 813, type: !13)
!6593 = !DILocation(line: 813, column: 69, scope: !6585)
!6594 = !DILocalVariable(name: "gatein", arg: 5, scope: !6585, file: !31, line: 814, type: !1431)
!6595 = !DILocation(line: 814, column: 59, scope: !6585)
!6596 = !DILocalVariable(name: "gateout", arg: 6, scope: !6585, file: !31, line: 814, type: !1431)
!6597 = !DILocation(line: 814, column: 75, scope: !6585)
!6598 = !DILocalVariable(name: "suffix", scope: !6585, file: !31, line: 817, type: !117)
!6599 = !DILocation(line: 817, column: 10, scope: !6585)
!6600 = !DILocalVariable(name: "desc", scope: !6585, file: !31, line: 818, type: !1137)
!6601 = !DILocation(line: 818, column: 18, scope: !6585)
!6602 = !DILocation(line: 818, column: 60, scope: !6585)
!6603 = !DILocation(line: 818, column: 51, scope: !6585)
!6604 = !DILocation(line: 819, column: 10, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6585, file: !31, line: 819, column: 9)
!6606 = !DILocation(line: 819, column: 16, scope: !6605)
!6607 = !DILocation(line: 819, column: 9, scope: !6585)
!6608 = !DILocation(line: 820, column: 9, scope: !6605)
!6609 = !DILocation(line: 820, column: 29, scope: !6605)
!6610 = !DILocation(line: 820, column: 107, scope: !6605)
!6611 = !DILocation(line: 820, column: 15, scope: !6605)
!6612 = !DILocation(line: 857, column: 1, scope: !6605)
!6613 = !DILocation(line: 821, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6585, file: !31, line: 821, column: 9)
!6615 = !DILocation(line: 821, column: 9, scope: !6585)
!6616 = !DILocation(line: 822, column: 9, scope: !6614)
!6617 = !DILocation(line: 822, column: 29, scope: !6614)
!6618 = !DILocation(line: 822, column: 15, scope: !6614)
!6619 = !DILocation(line: 857, column: 1, scope: !6614)
!6620 = !DILocalVariable(name: "oldSize", scope: !6585, file: !31, line: 825, type: !11)
!6621 = !DILocation(line: 825, column: 9, scope: !6585)
!6622 = !DILocation(line: 825, column: 19, scope: !6585)
!6623 = !DILocation(line: 825, column: 25, scope: !6585)
!6624 = !DILocalVariable(name: "inputgatev", scope: !6585, file: !31, line: 826, type: !1149)
!6625 = !DILocation(line: 826, column: 13, scope: !6585)
!6626 = !DILocation(line: 826, column: 26, scope: !6585)
!6627 = !DILocation(line: 826, column: 32, scope: !6585)
!6628 = !DILocalVariable(name: "outputgatev", scope: !6585, file: !31, line: 827, type: !1149)
!6629 = !DILocation(line: 827, column: 13, scope: !6585)
!6630 = !DILocation(line: 827, column: 27, scope: !6585)
!6631 = !DILocation(line: 827, column: 33, scope: !6585)
!6632 = !DILocalVariable(name: "it", scope: !6585, file: !31, line: 830, type: !1149)
!6633 = !DILocation(line: 830, column: 13, scope: !6585)
!6634 = !DILocation(line: 830, column: 18, scope: !6585)
!6635 = !DILocation(line: 831, column: 26, scope: !6585)
!6636 = !DILocation(line: 831, column: 38, scope: !6585)
!6637 = !DILocation(line: 831, column: 49, scope: !6585)
!6638 = !DILocation(line: 831, column: 48, scope: !6585)
!6639 = !DILocation(line: 831, column: 58, scope: !6585)
!6640 = !DILocation(line: 831, column: 102, scope: !6585)
!6641 = !DILocation(line: 831, column: 73, scope: !6585)
!6642 = !DILocation(line: 831, column: 9, scope: !6585)
!6643 = !DILocation(line: 832, column: 26, scope: !6585)
!6644 = !DILocation(line: 832, column: 38, scope: !6585)
!6645 = !DILocation(line: 832, column: 49, scope: !6585)
!6646 = !DILocation(line: 832, column: 48, scope: !6585)
!6647 = !DILocation(line: 832, column: 58, scope: !6585)
!6648 = !DILocation(line: 832, column: 103, scope: !6585)
!6649 = !DILocation(line: 832, column: 73, scope: !6585)
!6650 = !DILocation(line: 832, column: 9, scope: !6585)
!6651 = !DILocation(line: 833, column: 9, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6585, file: !31, line: 833, column: 9)
!6653 = !DILocation(line: 833, column: 15, scope: !6652)
!6654 = !DILocation(line: 833, column: 26, scope: !6652)
!6655 = !DILocation(line: 833, column: 25, scope: !6652)
!6656 = !DILocation(line: 833, column: 12, scope: !6652)
!6657 = !DILocation(line: 833, column: 9, scope: !6585)
!6658 = !DILocation(line: 834, column: 19, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6652, file: !31, line: 833, column: 35)
!6660 = !DILocation(line: 834, column: 18, scope: !6659)
!6661 = !DILocation(line: 834, column: 9, scope: !6659)
!6662 = !DILocation(line: 834, column: 16, scope: !6659)
!6663 = !DILocation(line: 835, column: 19, scope: !6659)
!6664 = !DILocation(line: 835, column: 31, scope: !6659)
!6665 = !DILocation(line: 835, column: 39, scope: !6659)
!6666 = !DILocation(line: 835, column: 9, scope: !6659)
!6667 = !DILocation(line: 835, column: 17, scope: !6659)
!6668 = !DILocation(line: 836, column: 9, scope: !6659)
!6669 = !DILocation(line: 840, column: 9, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6585, file: !31, line: 840, column: 9)
!6671 = !DILocation(line: 840, column: 9, scope: !6585)
!6672 = !DILocation(line: 842, column: 21, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6670, file: !31, line: 841, column: 5)
!6674 = !DILocation(line: 842, column: 27, scope: !6673)
!6675 = !DILocation(line: 842, column: 34, scope: !6673)
!6676 = !DILocation(line: 842, column: 39, scope: !6673)
!6677 = !DILocation(line: 842, column: 48, scope: !6673)
!6678 = !DILocation(line: 842, column: 55, scope: !6673)
!6679 = !DILocation(line: 842, column: 9, scope: !6673)
!6680 = !DILocation(line: 843, column: 18, scope: !6673)
!6681 = !DILocation(line: 843, column: 24, scope: !6673)
!6682 = !DILocation(line: 843, column: 35, scope: !6673)
!6683 = !DILocation(line: 843, column: 9, scope: !6673)
!6684 = !DILocation(line: 843, column: 16, scope: !6673)
!6685 = !DILocation(line: 844, column: 19, scope: !6673)
!6686 = !DILocation(line: 844, column: 25, scope: !6673)
!6687 = !DILocation(line: 844, column: 37, scope: !6673)
!6688 = !DILocation(line: 844, column: 9, scope: !6673)
!6689 = !DILocation(line: 844, column: 17, scope: !6673)
!6690 = !DILocation(line: 845, column: 9, scope: !6673)
!6691 = !DILocalVariable(name: "i", scope: !6692, file: !31, line: 851, type: !11)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !31, line: 851, column: 9)
!6693 = distinct !DILexicalBlock(scope: !6670, file: !31, line: 848, column: 5)
!6694 = !DILocation(line: 851, column: 18, scope: !6692)
!6695 = !DILocation(line: 851, column: 14, scope: !6692)
!6696 = !DILocation(line: 851, column: 23, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !31, line: 851, column: 9)
!6698 = !DILocation(line: 851, column: 25, scope: !6697)
!6699 = !DILocation(line: 851, column: 24, scope: !6697)
!6700 = !DILocation(line: 851, column: 9, scope: !6692)
!6701 = !DILocation(line: 852, column: 17, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6697, file: !31, line: 852, column: 17)
!6703 = !DILocation(line: 852, column: 17, scope: !6697)
!6704 = !DILocation(line: 852, column: 27, scope: !6702)
!6705 = !DILocation(line: 852, column: 38, scope: !6702)
!6706 = !DILocation(line: 852, column: 42, scope: !6702)
!6707 = !DILocation(line: 852, column: 65, scope: !6702)
!6708 = !DILocation(line: 852, column: 76, scope: !6702)
!6709 = !DILocation(line: 852, column: 80, scope: !6702)
!6710 = !DILocation(line: 853, column: 21, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6702, file: !31, line: 853, column: 21)
!6712 = !DILocation(line: 853, column: 21, scope: !6702)
!6713 = !DILocation(line: 853, column: 31, scope: !6711)
!6714 = !DILocation(line: 853, column: 43, scope: !6711)
!6715 = !DILocation(line: 853, column: 47, scope: !6711)
!6716 = !DILocation(line: 853, column: 70, scope: !6711)
!6717 = !DILocation(line: 853, column: 82, scope: !6711)
!6718 = !DILocation(line: 853, column: 86, scope: !6711)
!6719 = !DILocation(line: 854, column: 31, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6711, file: !31, line: 854, column: 21)
!6721 = !DILocation(line: 854, column: 42, scope: !6720)
!6722 = !DILocation(line: 854, column: 22, scope: !6720)
!6723 = !DILocation(line: 854, column: 29, scope: !6720)
!6724 = !DILocation(line: 854, column: 56, scope: !6720)
!6725 = !DILocation(line: 854, column: 68, scope: !6720)
!6726 = !DILocation(line: 854, column: 46, scope: !6720)
!6727 = !DILocation(line: 854, column: 54, scope: !6720)
!6728 = !DILocation(line: 854, column: 72, scope: !6720)
!6729 = !DILocation(line: 853, column: 105, scope: !6711)
!6730 = !DILocation(line: 852, column: 99, scope: !6702)
!6731 = !DILocation(line: 851, column: 35, scope: !6697)
!6732 = !DILocation(line: 851, column: 9, scope: !6697)
!6733 = distinct !{!6733, !6700, !6734}
!6734 = !DILocation(line: 854, column: 79, scope: !6692)
!6735 = !DILocation(line: 855, column: 18, scope: !6693)
!6736 = !DILocation(line: 855, column: 26, scope: !6693)
!6737 = !DILocation(line: 855, column: 9, scope: !6693)
!6738 = !DILocation(line: 855, column: 16, scope: !6693)
!6739 = !DILocation(line: 857, column: 1, scope: !6585)
!6740 = distinct !DISubprogram(name: "lower_bound<cGate **, cGate *, less_gatePairConnectedInside>", linkageName: "_ZSt11lower_boundIPP5cGateS1_28less_gatePairConnectedInsideET_S4_S4_RKT0_T1_", scope: !2, file: !6545, line: 2031, type: !6741, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !6743, retainedNodes: !324)
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!1149, !1149, !1149, !6548, !2036}
!6743 = !{!6551, !6552, !2130}
!6744 = !DILocalVariable(name: "__first", arg: 1, scope: !6740, file: !6545, line: 2031, type: !1149)
!6745 = !DILocation(line: 2031, column: 34, scope: !6740)
!6746 = !DILocalVariable(name: "__last", arg: 2, scope: !6740, file: !6545, line: 2031, type: !1149)
!6747 = !DILocation(line: 2031, column: 60, scope: !6740)
!6748 = !DILocalVariable(name: "__val", arg: 3, scope: !6740, file: !6545, line: 2032, type: !6548)
!6749 = !DILocation(line: 2032, column: 14, scope: !6740)
!6750 = !DILocalVariable(name: "__comp", arg: 4, scope: !6740, file: !6545, line: 2032, type: !2036)
!6751 = !DILocation(line: 2032, column: 30, scope: !6740)
!6752 = !DILocation(line: 2041, column: 33, scope: !6740)
!6753 = !DILocation(line: 2041, column: 42, scope: !6740)
!6754 = !DILocation(line: 2041, column: 50, scope: !6740)
!6755 = !DILocation(line: 2042, column: 39, scope: !6740)
!6756 = !DILocation(line: 2042, column: 5, scope: !6740)
!6757 = !DILocation(line: 2041, column: 14, scope: !6740)
!6758 = !DILocation(line: 2041, column: 7, scope: !6740)
!6759 = distinct !DISubprogram(name: "less_gatePairConnectedInside", linkageName: "_ZN28less_gatePairConnectedInsideC2EPP5cGate", scope: !2036, file: !31, line: 735, type: !2040, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2039, retainedNodes: !324)
!6760 = !DILocalVariable(name: "this", arg: 1, scope: !6759, type: !6761, flags: DIFlagArtificial | DIFlagObjectPointer)
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!6762 = !DILocation(line: 0, scope: !6759)
!6763 = !DILocalVariable(name: "otherv", arg: 2, scope: !6759, file: !31, line: 735, type: !1149)
!6764 = !DILocation(line: 735, column: 42, scope: !6759)
!6765 = !DILocation(line: 735, column: 66, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6759, file: !31, line: 735, column: 50)
!6767 = !DILocation(line: 735, column: 57, scope: !6766)
!6768 = !DILocation(line: 735, column: 64, scope: !6766)
!6769 = !DILocation(line: 735, column: 73, scope: !6759)
!6770 = distinct !DISubprogram(name: "lower_bound<cGate **, cGate *, less_gatePairConnectedOutside>", linkageName: "_ZSt11lower_boundIPP5cGateS1_29less_gatePairConnectedOutsideET_S4_S4_RKT0_T1_", scope: !2, file: !6545, line: 2031, type: !6771, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !6773, retainedNodes: !324)
!6771 = !DISubroutineType(types: !6772)
!6772 = !{!1149, !1149, !1149, !6548, !2046}
!6773 = !{!6551, !6552, !2149}
!6774 = !DILocalVariable(name: "__first", arg: 1, scope: !6770, file: !6545, line: 2031, type: !1149)
!6775 = !DILocation(line: 2031, column: 34, scope: !6770)
!6776 = !DILocalVariable(name: "__last", arg: 2, scope: !6770, file: !6545, line: 2031, type: !1149)
!6777 = !DILocation(line: 2031, column: 60, scope: !6770)
!6778 = !DILocalVariable(name: "__val", arg: 3, scope: !6770, file: !6545, line: 2032, type: !6548)
!6779 = !DILocation(line: 2032, column: 14, scope: !6770)
!6780 = !DILocalVariable(name: "__comp", arg: 4, scope: !6770, file: !6545, line: 2032, type: !2046)
!6781 = !DILocation(line: 2032, column: 30, scope: !6770)
!6782 = !DILocation(line: 2041, column: 33, scope: !6770)
!6783 = !DILocation(line: 2041, column: 42, scope: !6770)
!6784 = !DILocation(line: 2041, column: 50, scope: !6770)
!6785 = !DILocation(line: 2042, column: 39, scope: !6770)
!6786 = !DILocation(line: 2042, column: 5, scope: !6770)
!6787 = !DILocation(line: 2041, column: 14, scope: !6770)
!6788 = !DILocation(line: 2041, column: 7, scope: !6770)
!6789 = distinct !DISubprogram(name: "less_gatePairConnectedOutside", linkageName: "_ZN29less_gatePairConnectedOutsideC2EPP5cGate", scope: !2046, file: !31, line: 744, type: !2050, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2049, retainedNodes: !324)
!6790 = !DILocalVariable(name: "this", arg: 1, scope: !6789, type: !6791, flags: DIFlagArtificial | DIFlagObjectPointer)
!6791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!6792 = !DILocation(line: 0, scope: !6789)
!6793 = !DILocalVariable(name: "otherv", arg: 2, scope: !6789, file: !31, line: 744, type: !1149)
!6794 = !DILocation(line: 744, column: 43, scope: !6789)
!6795 = !DILocation(line: 744, column: 67, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6789, file: !31, line: 744, column: 51)
!6797 = !DILocation(line: 744, column: 58, scope: !6796)
!6798 = !DILocation(line: 744, column: 65, scope: !6796)
!6799 = !DILocation(line: 744, column: 74, scope: !6789)
!6800 = distinct !DISubprogram(name: "getIndex", linkageName: "_ZNK5cGate8getIndexEv", scope: !35, file: !34, line: 294, type: !6801, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !6803, retainedNodes: !324)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!11, !4160}
!6803 = !DISubprogram(name: "getIndex", linkageName: "_ZNK5cGate8getIndexEv", scope: !35, file: !34, line: 294, type: !6801, scopeLine: 294, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!6804 = !DILocalVariable(name: "this", arg: 1, scope: !6800, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!6805 = !DILocation(line: 0, scope: !6800)
!6806 = !DILocation(line: 294, column: 35, scope: !6800)
!6807 = !DILocation(line: 294, column: 41, scope: !6800)
!6808 = !DILocation(line: 294, column: 28, scope: !6800)
!6809 = distinct !DISubprogram(name: "gateCount", linkageName: "_ZNK7cModule9gateCountEv", scope: !101, file: !31, line: 859, type: !1396, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1395, retainedNodes: !324)
!6810 = !DILocalVariable(name: "this", arg: 1, scope: !6809, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6811 = !DILocation(line: 0, scope: !6809)
!6812 = !DILocalVariable(name: "n", scope: !6809, file: !31, line: 861, type: !11)
!6813 = !DILocation(line: 861, column: 9, scope: !6809)
!6814 = !DILocalVariable(name: "i", scope: !6815, file: !31, line: 862, type: !11)
!6815 = distinct !DILexicalBlock(scope: !6809, file: !31, line: 862, column: 5)
!6816 = !DILocation(line: 862, column: 14, scope: !6815)
!6817 = !DILocation(line: 862, column: 10, scope: !6815)
!6818 = !DILocation(line: 862, column: 19, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6815, file: !31, line: 862, column: 5)
!6820 = !DILocation(line: 862, column: 21, scope: !6819)
!6821 = !DILocation(line: 862, column: 20, scope: !6819)
!6822 = !DILocation(line: 862, column: 5, scope: !6815)
!6823 = !DILocalVariable(name: "desc", scope: !6824, file: !31, line: 864, type: !1137)
!6824 = distinct !DILexicalBlock(scope: !6819, file: !31, line: 863, column: 5)
!6825 = !DILocation(line: 864, column: 22, scope: !6824)
!6826 = !DILocation(line: 864, column: 29, scope: !6824)
!6827 = !DILocation(line: 864, column: 37, scope: !6824)
!6828 = !DILocation(line: 864, column: 35, scope: !6824)
!6829 = !DILocation(line: 865, column: 13, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6824, file: !31, line: 865, column: 13)
!6831 = !DILocation(line: 865, column: 19, scope: !6830)
!6832 = !DILocation(line: 865, column: 13, scope: !6824)
!6833 = !DILocation(line: 866, column: 18, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !31, line: 866, column: 17)
!6835 = distinct !DILexicalBlock(scope: !6830, file: !31, line: 865, column: 26)
!6836 = !DILocation(line: 866, column: 24, scope: !6834)
!6837 = !DILocation(line: 866, column: 17, scope: !6835)
!6838 = !DILocation(line: 867, column: 23, scope: !6834)
!6839 = !DILocation(line: 867, column: 29, scope: !6834)
!6840 = !DILocation(line: 867, column: 38, scope: !6834)
!6841 = !DILocation(line: 867, column: 22, scope: !6834)
!6842 = !DILocation(line: 867, column: 19, scope: !6834)
!6843 = !DILocation(line: 867, column: 17, scope: !6834)
!6844 = !DILocation(line: 869, column: 23, scope: !6834)
!6845 = !DILocation(line: 869, column: 29, scope: !6834)
!6846 = !DILocation(line: 869, column: 38, scope: !6834)
!6847 = !DILocation(line: 869, column: 22, scope: !6834)
!6848 = !DILocation(line: 869, column: 58, scope: !6834)
!6849 = !DILocation(line: 869, column: 64, scope: !6834)
!6850 = !DILocation(line: 869, column: 57, scope: !6834)
!6851 = !DILocation(line: 869, column: 71, scope: !6834)
!6852 = !DILocation(line: 869, column: 77, scope: !6834)
!6853 = !DILocation(line: 869, column: 19, scope: !6834)
!6854 = !DILocation(line: 870, column: 9, scope: !6835)
!6855 = !DILocation(line: 871, column: 5, scope: !6824)
!6856 = !DILocation(line: 862, column: 33, scope: !6819)
!6857 = !DILocation(line: 862, column: 5, scope: !6819)
!6858 = distinct !{!6858, !6822, !6859}
!6859 = !DILocation(line: 871, column: 5, scope: !6815)
!6860 = !DILocation(line: 872, column: 12, scope: !6809)
!6861 = !DILocation(line: 872, column: 5, scope: !6809)
!6862 = distinct !DISubprogram(name: "gateByOrdinal", linkageName: "_ZNK7cModule13gateByOrdinalEi", scope: !101, file: !31, line: 875, type: !1399, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1398, retainedNodes: !324)
!6863 = !DILocalVariable(name: "this", arg: 1, scope: !6862, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6864 = !DILocation(line: 0, scope: !6862)
!6865 = !DILocalVariable(name: "k", arg: 2, scope: !6862, file: !31, line: 875, type: !11)
!6866 = !DILocation(line: 875, column: 35, scope: !6862)
!6867 = !DILocalVariable(name: "it", scope: !6862, file: !31, line: 877, type: !3966)
!6868 = !DILocation(line: 877, column: 18, scope: !6862)
!6869 = !DILocation(line: 878, column: 11, scope: !6862)
!6870 = !DILocation(line: 878, column: 8, scope: !6862)
!6871 = !DILocation(line: 879, column: 15, scope: !6862)
!6872 = !DILocation(line: 879, column: 12, scope: !6862)
!6873 = !DILocation(line: 879, column: 30, scope: !6862)
!6874 = !DILocation(line: 879, column: 5, scope: !6862)
!6875 = distinct !DISubprogram(name: "operator+=", linkageName: "_ZN7cModule12GateIteratorpLEi", scope: !3966, file: !31, line: 1234, type: !3990, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3992, retainedNodes: !324)
!6876 = !DILocalVariable(name: "this", arg: 1, scope: !6875, type: !4132, flags: DIFlagArtificial | DIFlagObjectPointer)
!6877 = !DILocation(line: 0, scope: !6875)
!6878 = !DILocalVariable(name: "k", arg: 2, scope: !6875, file: !31, line: 1234, type: !11)
!6879 = !DILocation(line: 1234, column: 46, scope: !6875)
!6880 = !DILocalVariable(name: "i", scope: !6881, file: !31, line: 1237, type: !11)
!6881 = distinct !DILexicalBlock(scope: !6875, file: !31, line: 1237, column: 5)
!6882 = !DILocation(line: 1237, column: 14, scope: !6881)
!6883 = !DILocation(line: 1237, column: 10, scope: !6881)
!6884 = !DILocation(line: 1237, column: 19, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6881, file: !31, line: 1237, column: 5)
!6886 = !DILocation(line: 1237, column: 21, scope: !6885)
!6887 = !DILocation(line: 1237, column: 20, scope: !6885)
!6888 = !DILocation(line: 1237, column: 5, scope: !6881)
!6889 = !DILocation(line: 1238, column: 9, scope: !6885)
!6890 = !DILocation(line: 1237, column: 25, scope: !6885)
!6891 = !DILocation(line: 1237, column: 5, scope: !6885)
!6892 = distinct !{!6892, !6888, !6893}
!6893 = !DILocation(line: 1238, column: 16, scope: !6881)
!6894 = !DILocation(line: 1239, column: 12, scope: !6875)
!6895 = !DILocation(line: 1239, column: 5, scope: !6875)
!6896 = distinct !DISubprogram(name: "checkInternalConnections", linkageName: "_ZNK7cModule24checkInternalConnectionsEv", scope: !101, file: !31, line: 882, type: !1205, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1995, retainedNodes: !324)
!6897 = !DILocalVariable(name: "this", arg: 1, scope: !6896, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!6898 = !DILocation(line: 0, scope: !6896)
!6899 = !DILocalVariable(name: "i", scope: !6900, file: !31, line: 891, type: !3966)
!6900 = distinct !DILexicalBlock(scope: !6896, file: !31, line: 891, column: 5)
!6901 = !DILocation(line: 891, column: 23, scope: !6900)
!6902 = !DILocation(line: 891, column: 10, scope: !6900)
!6903 = !DILocation(line: 891, column: 35, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6900, file: !31, line: 891, column: 5)
!6905 = !DILocation(line: 891, column: 32, scope: !6904)
!6906 = !DILocation(line: 891, column: 5, scope: !6900)
!6907 = !DILocalVariable(name: "g", scope: !6908, file: !31, line: 893, type: !1147)
!6908 = distinct !DILexicalBlock(scope: !6904, file: !31, line: 892, column: 5)
!6909 = !DILocation(line: 893, column: 15, scope: !6908)
!6910 = !DILocation(line: 893, column: 19, scope: !6908)
!6911 = !DILocation(line: 894, column: 12, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6908, file: !31, line: 894, column: 12)
!6913 = !DILocation(line: 894, column: 15, scope: !6912)
!6914 = !DILocation(line: 894, column: 21, scope: !6912)
!6915 = !DILocation(line: 894, column: 25, scope: !6912)
!6916 = !DILocation(line: 894, column: 29, scope: !6912)
!6917 = !DILocation(line: 894, column: 32, scope: !6912)
!6918 = !DILocation(line: 894, column: 12, scope: !6908)
!6919 = !DILocation(line: 895, column: 13, scope: !6912)
!6920 = !DILocation(line: 895, column: 33, scope: !6912)
!6921 = !DILocation(line: 895, column: 134, scope: !6912)
!6922 = !DILocation(line: 895, column: 137, scope: !6912)
!6923 = !DILocation(line: 895, column: 151, scope: !6912)
!6924 = !DILocation(line: 895, column: 19, scope: !6912)
!6925 = !DILocation(line: 912, column: 1, scope: !6912)
!6926 = !DILocation(line: 896, column: 5, scope: !6908)
!6927 = !DILocation(line: 891, column: 42, scope: !6904)
!6928 = !DILocation(line: 891, column: 5, scope: !6904)
!6929 = distinct !{!6929, !6906, !6930}
!6930 = !DILocation(line: 896, column: 5, scope: !6900)
!6931 = !DILocalVariable(name: "submod", scope: !6932, file: !31, line: 899, type: !3919)
!6932 = distinct !DILexicalBlock(scope: !6896, file: !31, line: 899, column: 5)
!6933 = !DILocation(line: 899, column: 28, scope: !6932)
!6934 = !DILocation(line: 899, column: 10, scope: !6932)
!6935 = !DILocation(line: 899, column: 50, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6932, file: !31, line: 899, column: 5)
!6937 = !DILocation(line: 899, column: 42, scope: !6936)
!6938 = !DILocation(line: 899, column: 5, scope: !6932)
!6939 = !DILocalVariable(name: "m", scope: !6940, file: !31, line: 901, type: !120)
!6940 = distinct !DILexicalBlock(scope: !6936, file: !31, line: 900, column: 5)
!6941 = !DILocation(line: 901, column: 18, scope: !6940)
!6942 = !DILocation(line: 901, column: 22, scope: !6940)
!6943 = !DILocalVariable(name: "i", scope: !6944, file: !31, line: 902, type: !3966)
!6944 = distinct !DILexicalBlock(scope: !6940, file: !31, line: 902, column: 9)
!6945 = !DILocation(line: 902, column: 27, scope: !6944)
!6946 = !DILocation(line: 902, column: 29, scope: !6944)
!6947 = !DILocation(line: 902, column: 14, scope: !6944)
!6948 = !DILocation(line: 902, column: 36, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !31, line: 902, column: 9)
!6950 = !DILocation(line: 902, column: 33, scope: !6949)
!6951 = !DILocation(line: 902, column: 9, scope: !6944)
!6952 = !DILocalVariable(name: "g", scope: !6953, file: !31, line: 904, type: !1147)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !31, line: 903, column: 9)
!6954 = !DILocation(line: 904, column: 20, scope: !6953)
!6955 = !DILocation(line: 904, column: 24, scope: !6953)
!6956 = !DILocation(line: 905, column: 17, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6953, file: !31, line: 905, column: 17)
!6958 = !DILocation(line: 905, column: 20, scope: !6957)
!6959 = !DILocation(line: 905, column: 26, scope: !6957)
!6960 = !DILocation(line: 905, column: 30, scope: !6957)
!6961 = !DILocation(line: 905, column: 34, scope: !6957)
!6962 = !DILocation(line: 905, column: 37, scope: !6957)
!6963 = !DILocation(line: 905, column: 58, scope: !6957)
!6964 = !DILocation(line: 906, column: 17, scope: !6957)
!6965 = !DILocation(line: 906, column: 20, scope: !6957)
!6966 = !DILocation(line: 906, column: 37, scope: !6957)
!6967 = !DILocation(line: 906, column: 55, scope: !6957)
!6968 = !DILocation(line: 906, column: 63, scope: !6957)
!6969 = !DILocation(line: 907, column: 17, scope: !6957)
!6970 = !DILocation(line: 907, column: 20, scope: !6957)
!6971 = !DILocation(line: 907, column: 37, scope: !6957)
!6972 = !DILocation(line: 907, column: 58, scope: !6957)
!6973 = !DILocation(line: 905, column: 17, scope: !6953)
!6974 = !DILocation(line: 908, column: 17, scope: !6957)
!6975 = !DILocation(line: 908, column: 37, scope: !6957)
!6976 = !DILocation(line: 908, column: 100, scope: !6957)
!6977 = !DILocation(line: 908, column: 103, scope: !6957)
!6978 = !DILocation(line: 908, column: 117, scope: !6957)
!6979 = !DILocation(line: 908, column: 23, scope: !6957)
!6980 = !DILocation(line: 912, column: 1, scope: !6957)
!6981 = !DILocation(line: 909, column: 9, scope: !6953)
!6982 = !DILocation(line: 902, column: 43, scope: !6949)
!6983 = !DILocation(line: 902, column: 9, scope: !6949)
!6984 = distinct !{!6984, !6951, !6985}
!6985 = !DILocation(line: 909, column: 9, scope: !6944)
!6986 = !DILocation(line: 910, column: 5, scope: !6940)
!6987 = !DILocation(line: 899, column: 57, scope: !6936)
!6988 = !DILocation(line: 899, column: 5, scope: !6936)
!6989 = distinct !{!6989, !6938, !6990}
!6990 = !DILocation(line: 910, column: 5, scope: !6932)
!6991 = !DILocation(line: 911, column: 5, scope: !6896)
!6992 = distinct !DISubprogram(name: "size", linkageName: "_ZNK5cGate4sizeEv", scope: !35, file: !34, line: 307, type: !6801, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !6993, retainedNodes: !324)
!6993 = !DISubprogram(name: "size", linkageName: "_ZNK5cGate4sizeEv", scope: !35, file: !34, line: 307, type: !6801, scopeLine: 307, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!6994 = !DILocalVariable(name: "this", arg: 1, scope: !6992, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!6995 = !DILocation(line: 0, scope: !6992)
!6996 = !DILocation(line: 307, column: 31, scope: !6992)
!6997 = !DILocation(line: 307, column: 24, scope: !6992)
!6998 = distinct !DISubprogram(name: "findSubmodule", linkageName: "_ZN7cModule13findSubmoduleEPKci", scope: !101, file: !31, line: 914, type: !1460, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1459, retainedNodes: !324)
!6999 = !DILocalVariable(name: "this", arg: 1, scope: !6998, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7000 = !DILocation(line: 0, scope: !6998)
!7001 = !DILocalVariable(name: "submodname", arg: 2, scope: !6998, file: !31, line: 914, type: !167)
!7002 = !DILocation(line: 914, column: 40, scope: !6998)
!7003 = !DILocalVariable(name: "idx", arg: 3, scope: !6998, file: !31, line: 914, type: !11)
!7004 = !DILocation(line: 914, column: 56, scope: !6998)
!7005 = !DILocalVariable(name: "i", scope: !7006, file: !31, line: 916, type: !3919)
!7006 = distinct !DILexicalBlock(scope: !6998, file: !31, line: 916, column: 5)
!7007 = !DILocation(line: 916, column: 28, scope: !7006)
!7008 = !DILocation(line: 916, column: 10, scope: !7006)
!7009 = !DILocation(line: 916, column: 40, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !31, line: 916, column: 5)
!7011 = !DILocation(line: 916, column: 37, scope: !7010)
!7012 = !DILocation(line: 916, column: 5, scope: !7006)
!7013 = !DILocation(line: 917, column: 13, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7010, file: !31, line: 917, column: 13)
!7015 = !DILocation(line: 917, column: 18, scope: !7014)
!7016 = !DILocation(line: 917, column: 25, scope: !7014)
!7017 = !DILocation(line: 917, column: 37, scope: !7014)
!7018 = !DILocation(line: 918, column: 15, scope: !7014)
!7019 = !DILocation(line: 918, column: 18, scope: !7014)
!7020 = !DILocation(line: 918, column: 23, scope: !7014)
!7021 = !DILocation(line: 918, column: 27, scope: !7014)
!7022 = !DILocation(line: 918, column: 32, scope: !7014)
!7023 = !DILocation(line: 918, column: 44, scope: !7014)
!7024 = !DILocation(line: 918, column: 47, scope: !7014)
!7025 = !DILocation(line: 918, column: 52, scope: !7014)
!7026 = !DILocation(line: 918, column: 64, scope: !7014)
!7027 = !DILocation(line: 918, column: 62, scope: !7014)
!7028 = !DILocation(line: 917, column: 13, scope: !7010)
!7029 = !DILocation(line: 920, column: 20, scope: !7014)
!7030 = !DILocation(line: 920, column: 25, scope: !7014)
!7031 = !DILocation(line: 920, column: 13, scope: !7014)
!7032 = !DILocation(line: 918, column: 67, scope: !7014)
!7033 = !DILocation(line: 916, column: 47, scope: !7010)
!7034 = !DILocation(line: 916, column: 5, scope: !7010)
!7035 = distinct !{!7035, !7012, !7036}
!7036 = !DILocation(line: 920, column: 31, scope: !7006)
!7037 = !DILocation(line: 921, column: 5, scope: !6998)
!7038 = !DILocation(line: 922, column: 1, scope: !6998)
!7039 = distinct !DISubprogram(name: "isName", linkageName: "_ZNK7cObject6isNameEPKc", scope: !2007, file: !2008, line: 118, type: !7040, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7044, retainedNodes: !324)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!13, !7042, !167}
!7042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7043, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2007)
!7044 = !DISubprogram(name: "isName", linkageName: "_ZNK7cObject6isNameEPKc", scope: !2007, file: !2008, line: 118, type: !7040, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7045 = !DILocalVariable(name: "this", arg: 1, scope: !7039, type: !7046, flags: DIFlagArtificial | DIFlagObjectPointer)
!7046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7043, size: 64)
!7047 = !DILocation(line: 0, scope: !7039)
!7048 = !DILocalVariable(name: "s", arg: 2, scope: !7039, file: !2008, line: 118, type: !167)
!7049 = !DILocation(line: 118, column: 29, scope: !7039)
!7050 = !DILocation(line: 118, column: 58, scope: !7039)
!7051 = !DILocation(line: 118, column: 68, scope: !7039)
!7052 = !DILocation(line: 118, column: 47, scope: !7039)
!7053 = !DILocation(line: 118, column: 46, scope: !7039)
!7054 = !DILocation(line: 118, column: 39, scope: !7039)
!7055 = distinct !DISubprogram(name: "getId", linkageName: "_ZNK7cModule5getIdEv", scope: !101, file: !100, line: 481, type: !1396, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1454, retainedNodes: !324)
!7056 = !DILocalVariable(name: "this", arg: 1, scope: !7055, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!7057 = !DILocation(line: 0, scope: !7055)
!7058 = !DILocation(line: 481, column: 32, scope: !7055)
!7059 = !DILocation(line: 481, column: 25, scope: !7055)
!7060 = distinct !DISubprogram(name: "getSubmodule", linkageName: "_ZN7cModule12getSubmoduleEPKci", scope: !101, file: !31, line: 924, type: !1463, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1462, retainedNodes: !324)
!7061 = !DILocalVariable(name: "this", arg: 1, scope: !7060, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7062 = !DILocation(line: 0, scope: !7060)
!7063 = !DILocalVariable(name: "submodname", arg: 2, scope: !7060, file: !31, line: 924, type: !167)
!7064 = !DILocation(line: 924, column: 44, scope: !7060)
!7065 = !DILocalVariable(name: "idx", arg: 3, scope: !7060, file: !31, line: 924, type: !11)
!7066 = !DILocation(line: 924, column: 60, scope: !7060)
!7067 = !DILocalVariable(name: "i", scope: !7068, file: !31, line: 926, type: !3919)
!7068 = distinct !DILexicalBlock(scope: !7060, file: !31, line: 926, column: 5)
!7069 = !DILocation(line: 926, column: 28, scope: !7068)
!7070 = !DILocation(line: 926, column: 10, scope: !7068)
!7071 = !DILocation(line: 926, column: 40, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7068, file: !31, line: 926, column: 5)
!7073 = !DILocation(line: 926, column: 37, scope: !7072)
!7074 = !DILocation(line: 926, column: 5, scope: !7068)
!7075 = !DILocation(line: 927, column: 13, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7072, file: !31, line: 927, column: 13)
!7077 = !DILocation(line: 927, column: 18, scope: !7076)
!7078 = !DILocation(line: 927, column: 25, scope: !7076)
!7079 = !DILocation(line: 927, column: 37, scope: !7076)
!7080 = !DILocation(line: 928, column: 15, scope: !7076)
!7081 = !DILocation(line: 928, column: 18, scope: !7076)
!7082 = !DILocation(line: 928, column: 23, scope: !7076)
!7083 = !DILocation(line: 928, column: 27, scope: !7076)
!7084 = !DILocation(line: 928, column: 32, scope: !7076)
!7085 = !DILocation(line: 928, column: 44, scope: !7076)
!7086 = !DILocation(line: 928, column: 47, scope: !7076)
!7087 = !DILocation(line: 928, column: 52, scope: !7076)
!7088 = !DILocation(line: 928, column: 64, scope: !7076)
!7089 = !DILocation(line: 928, column: 62, scope: !7076)
!7090 = !DILocation(line: 927, column: 13, scope: !7072)
!7091 = !DILocation(line: 930, column: 20, scope: !7076)
!7092 = !DILocation(line: 930, column: 13, scope: !7076)
!7093 = !DILocation(line: 928, column: 67, scope: !7076)
!7094 = !DILocation(line: 926, column: 47, scope: !7072)
!7095 = !DILocation(line: 926, column: 5, scope: !7072)
!7096 = distinct !{!7096, !7074, !7097}
!7097 = !DILocation(line: 930, column: 22, scope: !7068)
!7098 = !DILocation(line: 931, column: 5, scope: !7060)
!7099 = !DILocation(line: 932, column: 1, scope: !7060)
!7100 = distinct !DISubprogram(name: "getModuleByRelativePath", linkageName: "_ZN7cModule23getModuleByRelativePathEPKc", scope: !101, file: !31, line: 934, type: !1466, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1465, retainedNodes: !324)
!7101 = !DILocalVariable(name: "this", arg: 1, scope: !7100, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7102 = !DILocation(line: 0, scope: !7100)
!7103 = !DILocalVariable(name: "path", arg: 2, scope: !7100, file: !31, line: 934, type: !167)
!7104 = !DILocation(line: 934, column: 55, scope: !7100)
!7105 = !DILocalVariable(name: "pathbuf", scope: !7100, file: !31, line: 937, type: !156)
!7106 = !DILocation(line: 937, column: 16, scope: !7100)
!7107 = !DILocation(line: 937, column: 24, scope: !7100)
!7108 = !DILocalVariable(name: "s", scope: !7100, file: !31, line: 938, type: !116)
!7109 = !DILocation(line: 938, column: 11, scope: !7100)
!7110 = !DILocation(line: 938, column: 30, scope: !7100)
!7111 = !DILocation(line: 938, column: 15, scope: !7100)
!7112 = !DILocalVariable(name: "modp", scope: !7100, file: !31, line: 941, type: !120)
!7113 = !DILocation(line: 941, column: 14, scope: !7100)
!7114 = !DILocation(line: 944, column: 5, scope: !7100)
!7115 = !DILocalVariable(name: "b", scope: !7116, file: !31, line: 945, type: !116)
!7116 = distinct !DILexicalBlock(scope: !7100, file: !31, line: 944, column: 8)
!7117 = !DILocation(line: 945, column: 15, scope: !7116)
!7118 = !DILocation(line: 946, column: 23, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7116, file: !31, line: 946, column: 13)
!7120 = !DILocation(line: 946, column: 16, scope: !7119)
!7121 = !DILocation(line: 946, column: 15, scope: !7119)
!7122 = !DILocation(line: 946, column: 30, scope: !7119)
!7123 = !DILocation(line: 946, column: 13, scope: !7116)
!7124 = !DILocation(line: 947, column: 20, scope: !7119)
!7125 = !DILocation(line: 947, column: 39, scope: !7119)
!7126 = !DILocation(line: 947, column: 26, scope: !7119)
!7127 = !DILocation(line: 947, column: 18, scope: !7119)
!7128 = !DILocation(line: 947, column: 13, scope: !7119)
!7129 = !DILocation(line: 958, column: 1, scope: !7100)
!7130 = !DILocation(line: 950, column: 17, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !31, line: 950, column: 17)
!7132 = distinct !DILexicalBlock(scope: !7119, file: !31, line: 949, column: 9)
!7133 = !DILocation(line: 950, column: 26, scope: !7131)
!7134 = !DILocation(line: 950, column: 19, scope: !7131)
!7135 = !DILocation(line: 950, column: 28, scope: !7131)
!7136 = !DILocation(line: 950, column: 31, scope: !7131)
!7137 = !DILocation(line: 950, column: 17, scope: !7132)
!7138 = !DILocation(line: 951, column: 17, scope: !7131)
!7139 = !DILocation(line: 951, column: 37, scope: !7131)
!7140 = !DILocation(line: 951, column: 98, scope: !7131)
!7141 = !DILocation(line: 951, column: 23, scope: !7131)
!7142 = !DILocation(line: 958, column: 1, scope: !7131)
!7143 = !DILocation(line: 952, column: 14, scope: !7132)
!7144 = !DILocation(line: 952, column: 15, scope: !7132)
!7145 = !DILocation(line: 953, column: 20, scope: !7132)
!7146 = !DILocation(line: 953, column: 39, scope: !7132)
!7147 = !DILocation(line: 953, column: 46, scope: !7132)
!7148 = !DILocation(line: 953, column: 47, scope: !7132)
!7149 = !DILocation(line: 953, column: 41, scope: !7132)
!7150 = !DILocation(line: 953, column: 26, scope: !7132)
!7151 = !DILocation(line: 953, column: 18, scope: !7132)
!7152 = !DILocation(line: 955, column: 5, scope: !7116)
!7153 = !DILocation(line: 955, column: 17, scope: !7100)
!7154 = !DILocation(line: 955, column: 16, scope: !7100)
!7155 = !DILocation(line: 955, column: 34, scope: !7100)
!7156 = !DILocation(line: 955, column: 41, scope: !7100)
!7157 = !DILocation(line: 955, column: 44, scope: !7100)
!7158 = !DILocation(line: 955, column: 48, scope: !7100)
!7159 = distinct !{!7159, !7114, !7160}
!7160 = !DILocation(line: 955, column: 54, scope: !7100)
!7161 = !DILocation(line: 957, column: 12, scope: !7100)
!7162 = distinct !DISubprogram(name: "opp_string", linkageName: "_ZN10opp_stringC2EPKc", scope: !156, file: !157, line: 55, type: !165, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !164, retainedNodes: !324)
!7163 = !DILocalVariable(name: "this", arg: 1, scope: !7162, type: !7164, flags: DIFlagArtificial | DIFlagObjectPointer)
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!7165 = !DILocation(line: 0, scope: !7162)
!7166 = !DILocalVariable(name: "s", arg: 2, scope: !7162, file: !157, line: 55, type: !167)
!7167 = !DILocation(line: 55, column: 28, scope: !7162)
!7168 = !DILocation(line: 55, column: 50, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7162, file: !157, line: 55, column: 32)
!7170 = !DILocation(line: 55, column: 39, scope: !7169)
!7171 = !DILocation(line: 55, column: 33, scope: !7169)
!7172 = !DILocation(line: 55, column: 37, scope: !7169)
!7173 = !DILocation(line: 55, column: 53, scope: !7162)
!7174 = distinct !DISubprogram(name: "buffer", linkageName: "_ZN10opp_string6bufferEv", scope: !156, file: !157, line: 87, type: !188, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !187, retainedNodes: !324)
!7175 = !DILocalVariable(name: "this", arg: 1, scope: !7174, type: !7164, flags: DIFlagArtificial | DIFlagObjectPointer)
!7176 = !DILocation(line: 0, scope: !7174)
!7177 = !DILocation(line: 87, column: 29, scope: !7174)
!7178 = !DILocation(line: 87, column: 22, scope: !7174)
!7179 = distinct !DISubprogram(name: "~opp_string", linkageName: "_ZN10opp_stringD2Ev", scope: !156, file: !157, line: 70, type: !161, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !179, retainedNodes: !324)
!7180 = !DILocalVariable(name: "this", arg: 1, scope: !7179, type: !7164, flags: DIFlagArtificial | DIFlagObjectPointer)
!7181 = !DILocation(line: 0, scope: !7179)
!7182 = !DILocation(line: 70, column: 31, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7179, file: !157, line: 70, column: 20)
!7184 = !DILocation(line: 70, column: 21, scope: !7183)
!7185 = !DILocation(line: 70, column: 35, scope: !7179)
!7186 = distinct !DISubprogram(name: "getAncestorPar", linkageName: "_ZN7cModule14getAncestorParEPKc", scope: !101, file: !31, line: 960, type: !1997, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1996, retainedNodes: !324)
!7187 = !DILocalVariable(name: "this", arg: 1, scope: !7186, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7188 = !DILocation(line: 0, scope: !7186)
!7189 = !DILocalVariable(name: "name", arg: 2, scope: !7186, file: !31, line: 960, type: !167)
!7190 = !DILocation(line: 960, column: 43, scope: !7186)
!7191 = !DILocalVariable(name: "pmod", scope: !7186, file: !31, line: 963, type: !120)
!7192 = !DILocation(line: 963, column: 14, scope: !7186)
!7193 = !DILocalVariable(name: "k", scope: !7186, file: !31, line: 964, type: !11)
!7194 = !DILocation(line: 964, column: 9, scope: !7186)
!7195 = !DILocation(line: 965, column: 5, scope: !7186)
!7196 = !DILocation(line: 965, column: 12, scope: !7186)
!7197 = !DILocation(line: 965, column: 17, scope: !7186)
!7198 = !DILocation(line: 965, column: 23, scope: !7186)
!7199 = !DILocation(line: 965, column: 29, scope: !7186)
!7200 = !DILocation(line: 965, column: 37, scope: !7186)
!7201 = !DILocation(line: 965, column: 22, scope: !7186)
!7202 = !DILocation(line: 965, column: 43, scope: !7186)
!7203 = !DILocation(line: 966, column: 16, scope: !7186)
!7204 = !DILocation(line: 966, column: 22, scope: !7186)
!7205 = !DILocation(line: 966, column: 14, scope: !7186)
!7206 = distinct !{!7206, !7195, !7207}
!7207 = !DILocation(line: 966, column: 38, scope: !7186)
!7208 = !DILocation(line: 967, column: 10, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7186, file: !31, line: 967, column: 9)
!7210 = !DILocation(line: 967, column: 9, scope: !7186)
!7211 = !DILocation(line: 968, column: 9, scope: !7209)
!7212 = !DILocation(line: 968, column: 29, scope: !7209)
!7213 = !DILocation(line: 968, column: 74, scope: !7209)
!7214 = !DILocation(line: 968, column: 15, scope: !7209)
!7215 = !DILocation(line: 970, column: 1, scope: !7209)
!7216 = !DILocation(line: 969, column: 12, scope: !7186)
!7217 = !DILocation(line: 969, column: 18, scope: !7186)
!7218 = !DILocation(line: 969, column: 22, scope: !7186)
!7219 = !DILocation(line: 969, column: 5, scope: !7186)
!7220 = distinct !DISubprogram(name: "finalizeParameters", linkageName: "_ZN7cModule18finalizeParametersEv", scope: !101, file: !31, line: 972, type: !1365, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1432, retainedNodes: !324)
!7221 = !DILocalVariable(name: "this", arg: 1, scope: !7220, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7222 = !DILocation(line: 0, scope: !7220)
!7223 = !DILocalVariable(name: "tmp", scope: !7220, file: !31, line: 975, type: !7224)
!7224 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "cContextSwitcher", file: !93, line: 231, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7225, identifier: "_ZTS16cContextSwitcher")
!7225 = !{!7226, !7228, !7234}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "callerContext", scope: !7224, file: !93, line: 234, baseType: !7227, size: 64, flags: DIFlagProtected)
!7227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!7228 = !DISubprogram(name: "cContextSwitcher", scope: !7224, file: !93, line: 239, type: !7229, scopeLine: 239, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7229 = !DISubroutineType(types: !7230)
!7230 = !{null, !7231, !7232}
!7231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7233, size: 64)
!7233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!7234 = !DISubprogram(name: "~cContextSwitcher", scope: !7224, file: !93, line: 244, type: !7235, scopeLine: 244, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{null, !7231}
!7237 = !DILocation(line: 975, column: 22, scope: !7220)
!7238 = !DILocation(line: 975, column: 26, scope: !7220)
!7239 = !DILocalVariable(name: "tmp2", scope: !7220, file: !31, line: 976, type: !7240)
!7240 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "cContextTypeSwitcher", file: !93, line: 278, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7241, identifier: "_ZTS20cContextTypeSwitcher")
!7241 = !{!7242, !7243, !7247}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "contexttype", scope: !7240, file: !93, line: 281, baseType: !11, size: 32)
!7243 = !DISubprogram(name: "cContextTypeSwitcher", scope: !7240, file: !93, line: 287, type: !7244, scopeLine: 287, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7244 = !DISubroutineType(types: !7245)
!7245 = !{null, !7246, !11}
!7246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7247 = !DISubprogram(name: "~cContextTypeSwitcher", scope: !7240, file: !93, line: 292, type: !7248, scopeLine: 292, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{null, !7246}
!7250 = !DILocation(line: 976, column: 26, scope: !7220)
!7251 = !DILocation(line: 978, column: 17, scope: !7220)
!7252 = !DILocation(line: 981, column: 5, scope: !7220)
!7253 = !DILocation(line: 981, column: 22, scope: !7220)
!7254 = !DILocation(line: 982, column: 1, scope: !7220)
!7255 = distinct !DISubprogram(name: "getModuleType", linkageName: "_ZNK7cModule13getModuleTypeEv", scope: !101, file: !100, line: 466, type: !1443, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1442, retainedNodes: !324)
!7256 = !DILocalVariable(name: "this", arg: 1, scope: !7255, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!7257 = !DILocation(line: 0, scope: !7255)
!7258 = !DILocation(line: 466, column: 64, scope: !7255)
!7259 = !DILocation(line: 466, column: 49, scope: !7255)
!7260 = !DILocation(line: 466, column: 42, scope: !7255)
!7261 = distinct !DISubprogram(name: "buildInside", linkageName: "_ZN7cModule11buildInsideEv", scope: !101, file: !31, line: 984, type: !1434, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1433, retainedNodes: !324)
!7262 = !DILocalVariable(name: "this", arg: 1, scope: !7261, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7263 = !DILocation(line: 0, scope: !7261)
!7264 = !DILocation(line: 986, column: 9, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7261, file: !31, line: 986, column: 9)
!7266 = !DILocation(line: 986, column: 9, scope: !7261)
!7267 = !DILocation(line: 987, column: 9, scope: !7265)
!7268 = !DILocation(line: 987, column: 29, scope: !7265)
!7269 = !DILocation(line: 987, column: 15, scope: !7265)
!7270 = !DILocation(line: 1004, column: 1, scope: !7265)
!7271 = !DILocation(line: 991, column: 10, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7261, file: !31, line: 991, column: 9)
!7273 = !DILocation(line: 991, column: 9, scope: !7261)
!7274 = !DILocation(line: 992, column: 9, scope: !7272)
!7275 = !DILocalVariable(name: "tmp", scope: !7261, file: !31, line: 995, type: !7224)
!7276 = !DILocation(line: 995, column: 22, scope: !7261)
!7277 = !DILocation(line: 995, column: 26, scope: !7261)
!7278 = !DILocalVariable(name: "tmp2", scope: !7261, file: !31, line: 996, type: !7240)
!7279 = !DILocation(line: 996, column: 26, scope: !7261)
!7280 = !DILocation(line: 999, column: 5, scope: !7261)
!7281 = !DILocation(line: 1001, column: 5, scope: !7261)
!7282 = !DILocation(line: 1004, column: 1, scope: !7261)
!7283 = distinct !DISubprogram(name: "buildInsideCalled", linkageName: "_ZNK7cModule17buildInsideCalledEv", scope: !101, file: !100, line: 240, type: !1205, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1208, retainedNodes: !324)
!7284 = !DILocalVariable(name: "this", arg: 1, scope: !7283, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!7285 = !DILocation(line: 0, scope: !7283)
!7286 = !DILocation(line: 240, column: 44, scope: !7283)
!7287 = !DILocation(line: 240, column: 49, scope: !7283)
!7288 = !DILocation(line: 240, column: 37, scope: !7283)
!7289 = distinct !DISubprogram(name: "parametersFinalized", linkageName: "_ZNK10cComponent19parametersFinalizedEv", scope: !104, file: !105, line: 90, type: !7290, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7293, retainedNodes: !324)
!7290 = !DISubroutineType(types: !7291)
!7291 = !{!13, !7292}
!7292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7233, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7293 = !DISubprogram(name: "parametersFinalized", linkageName: "_ZNK10cComponent19parametersFinalizedEv", scope: !104, file: !105, line: 90, type: !7290, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7294 = !DILocalVariable(name: "this", arg: 1, scope: !7289, type: !7232, flags: DIFlagArtificial | DIFlagObjectPointer)
!7295 = !DILocation(line: 0, scope: !7289)
!7296 = !DILocation(line: 90, column: 46, scope: !7289)
!7297 = !DILocation(line: 90, column: 51, scope: !7289)
!7298 = !DILocation(line: 90, column: 39, scope: !7289)
!7299 = distinct !DISubprogram(name: "setFlag", linkageName: "_ZN12cNamedObject7setFlagEib", scope: !2021, file: !2020, line: 50, type: !7300, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7303, retainedNodes: !324)
!7300 = !DISubroutineType(types: !7301)
!7301 = !{null, !7302, !11, !13}
!7302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7303 = !DISubprogram(name: "setFlag", linkageName: "_ZN12cNamedObject7setFlagEib", scope: !2021, file: !2020, line: 50, type: !7300, scopeLine: 50, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!7304 = !DILocalVariable(name: "this", arg: 1, scope: !7299, type: !7305, flags: DIFlagArtificial | DIFlagObjectPointer)
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!7306 = !DILocation(line: 0, scope: !7299)
!7307 = !DILocalVariable(name: "flag", arg: 2, scope: !7299, file: !2020, line: 50, type: !11)
!7308 = !DILocation(line: 50, column: 22, scope: !7299)
!7309 = !DILocalVariable(name: "value", arg: 3, scope: !7299, file: !2020, line: 50, type: !13)
!7310 = !DILocation(line: 50, column: 33, scope: !7299)
!7311 = !DILocation(line: 50, column: 45, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7299, file: !2020, line: 50, column: 45)
!7313 = !DILocation(line: 50, column: 45, scope: !7299)
!7314 = !DILocation(line: 50, column: 59, scope: !7312)
!7315 = !DILocation(line: 50, column: 52, scope: !7312)
!7316 = !DILocation(line: 50, column: 57, scope: !7312)
!7317 = !DILocation(line: 50, column: 78, scope: !7312)
!7318 = !DILocation(line: 50, column: 77, scope: !7312)
!7319 = !DILocation(line: 50, column: 70, scope: !7312)
!7320 = !DILocation(line: 50, column: 75, scope: !7312)
!7321 = !DILocation(line: 50, column: 83, scope: !7299)
!7322 = distinct !DISubprogram(name: "deleteModule", linkageName: "_ZN7cModule12deleteModuleEv", scope: !101, file: !31, line: 1006, type: !1365, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2005, retainedNodes: !324)
!7323 = !DILocalVariable(name: "this", arg: 1, scope: !7322, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7324 = !DILocation(line: 0, scope: !7322)
!7325 = !DILocalVariable(name: "mod", scope: !7326, file: !31, line: 1009, type: !120)
!7326 = distinct !DILexicalBlock(scope: !7322, file: !31, line: 1009, column: 5)
!7327 = !DILocation(line: 1009, column: 19, scope: !7326)
!7328 = !DILocation(line: 1009, column: 25, scope: !7326)
!7329 = !DILocation(line: 1009, column: 36, scope: !7326)
!7330 = !DILocation(line: 1009, column: 10, scope: !7326)
!7331 = !DILocation(line: 1009, column: 56, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7326, file: !31, line: 1009, column: 5)
!7333 = !DILocation(line: 1009, column: 5, scope: !7326)
!7334 = !DILocation(line: 1010, column: 13, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7332, file: !31, line: 1010, column: 13)
!7336 = !DILocation(line: 1010, column: 16, scope: !7335)
!7337 = !DILocation(line: 1010, column: 13, scope: !7332)
!7338 = !DILocation(line: 1011, column: 13, scope: !7335)
!7339 = !DILocation(line: 1011, column: 33, scope: !7335)
!7340 = !DILocation(line: 1011, column: 19, scope: !7335)
!7341 = !DILocation(line: 1015, column: 1, scope: !7335)
!7342 = !DILocation(line: 1010, column: 18, scope: !7335)
!7343 = !DILocation(line: 1009, column: 67, scope: !7332)
!7344 = !DILocation(line: 1009, column: 72, scope: !7332)
!7345 = !DILocation(line: 1009, column: 65, scope: !7332)
!7346 = !DILocation(line: 1009, column: 5, scope: !7332)
!7347 = distinct !{!7347, !7333, !7348}
!7348 = !DILocation(line: 1012, column: 78, scope: !7326)
!7349 = !DILocation(line: 1014, column: 5, scope: !7322)
!7350 = !DILocation(line: 1015, column: 1, scope: !7322)
!7351 = distinct !DISubprogram(name: "changeParentTo", linkageName: "_ZN7cModule14changeParentToEPS_", scope: !101, file: !31, line: 1017, type: !1368, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2006, retainedNodes: !324)
!7352 = !DILocalVariable(name: "this", arg: 1, scope: !7351, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7353 = !DILocation(line: 0, scope: !7351)
!7354 = !DILocalVariable(name: "mod", arg: 2, scope: !7351, file: !31, line: 1017, type: !120)
!7355 = !DILocation(line: 1017, column: 39, scope: !7351)
!7356 = !DILocation(line: 1019, column: 10, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7351, file: !31, line: 1019, column: 9)
!7358 = !DILocation(line: 1019, column: 9, scope: !7351)
!7359 = !DILocation(line: 1020, column: 9, scope: !7357)
!7360 = !DILocation(line: 1020, column: 29, scope: !7357)
!7361 = !DILocation(line: 1020, column: 15, scope: !7357)
!7362 = !DILocation(line: 1041, column: 1, scope: !7357)
!7363 = !DILocalVariable(name: "g", scope: !7351, file: !31, line: 1023, type: !1147)
!7364 = !DILocation(line: 1023, column: 12, scope: !7351)
!7365 = !DILocalVariable(name: "i", scope: !7366, file: !31, line: 1024, type: !3966)
!7366 = distinct !DILexicalBlock(scope: !7351, file: !31, line: 1024, column: 5)
!7367 = !DILocation(line: 1024, column: 23, scope: !7366)
!7368 = !DILocation(line: 1024, column: 10, scope: !7366)
!7369 = !DILocation(line: 1024, column: 35, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7366, file: !31, line: 1024, column: 5)
!7371 = !DILocation(line: 1024, column: 32, scope: !7370)
!7372 = !DILocation(line: 1024, column: 5, scope: !7366)
!7373 = !DILocation(line: 1025, column: 15, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7370, file: !31, line: 1025, column: 13)
!7375 = !DILocation(line: 1025, column: 14, scope: !7374)
!7376 = !DILocation(line: 1025, column: 20, scope: !7374)
!7377 = !DILocation(line: 1025, column: 23, scope: !7374)
!7378 = !DILocation(line: 1025, column: 13, scope: !7370)
!7379 = !DILocation(line: 1026, column: 13, scope: !7374)
!7380 = !DILocation(line: 1026, column: 33, scope: !7374)
!7381 = !DILocation(line: 1027, column: 74, scope: !7374)
!7382 = !DILocation(line: 1027, column: 77, scope: !7374)
!7383 = !DILocation(line: 1026, column: 19, scope: !7374)
!7384 = !DILocation(line: 1041, column: 1, scope: !7374)
!7385 = !DILocation(line: 1025, column: 42, scope: !7374)
!7386 = !DILocation(line: 1024, column: 42, scope: !7370)
!7387 = !DILocation(line: 1024, column: 5, scope: !7370)
!7388 = distinct !{!7388, !7372, !7389}
!7389 = !DILocation(line: 1027, column: 90, scope: !7366)
!7390 = !DILocalVariable(name: "m", scope: !7391, file: !31, line: 1030, type: !120)
!7391 = distinct !DILexicalBlock(scope: !7351, file: !31, line: 1030, column: 5)
!7392 = !DILocation(line: 1030, column: 19, scope: !7391)
!7393 = !DILocation(line: 1030, column: 23, scope: !7391)
!7394 = !DILocation(line: 1030, column: 10, scope: !7391)
!7395 = !DILocation(line: 1030, column: 28, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7391, file: !31, line: 1030, column: 5)
!7397 = !DILocation(line: 1030, column: 5, scope: !7391)
!7398 = !DILocation(line: 1031, column: 13, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7396, file: !31, line: 1031, column: 13)
!7400 = !DILocation(line: 1031, column: 14, scope: !7399)
!7401 = !DILocation(line: 1031, column: 13, scope: !7396)
!7402 = !DILocation(line: 1032, column: 13, scope: !7399)
!7403 = !DILocation(line: 1032, column: 33, scope: !7399)
!7404 = !DILocation(line: 1032, column: 19, scope: !7399)
!7405 = !DILocation(line: 1041, column: 1, scope: !7399)
!7406 = !DILocation(line: 1031, column: 16, scope: !7399)
!7407 = !DILocation(line: 1030, column: 35, scope: !7396)
!7408 = !DILocation(line: 1030, column: 38, scope: !7396)
!7409 = !DILocation(line: 1030, column: 33, scope: !7396)
!7410 = !DILocation(line: 1030, column: 5, scope: !7396)
!7411 = distinct !{!7411, !7397, !7412}
!7412 = !DILocation(line: 1032, column: 109, scope: !7391)
!7413 = !DILocalVariable(name: "oldparent", scope: !7351, file: !31, line: 1035, type: !120)
!7414 = !DILocation(line: 1035, column: 14, scope: !7351)
!7415 = !DILocation(line: 1035, column: 26, scope: !7351)
!7416 = !DILocation(line: 1036, column: 5, scope: !7351)
!7417 = !DILocation(line: 1036, column: 16, scope: !7351)
!7418 = !DILocation(line: 1037, column: 5, scope: !7351)
!7419 = !DILocation(line: 1037, column: 10, scope: !7351)
!7420 = !DILocation(line: 1040, column: 5, scope: !7351)
!7421 = !DILocation(line: 1040, column: 32, scope: !7351)
!7422 = !DILocation(line: 1040, column: 10, scope: !7351)
!7423 = !DILocation(line: 1041, column: 1, scope: !7351)
!7424 = distinct !DISubprogram(name: "callInitialize", linkageName: "_ZN7cModule14callInitializeEv", scope: !101, file: !31, line: 1043, type: !1365, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1999, retainedNodes: !324)
!7425 = !DILocalVariable(name: "this", arg: 1, scope: !7424, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7426 = !DILocation(line: 0, scope: !7424)
!7427 = !DILocalVariable(name: "tmp", scope: !7424, file: !31, line: 1052, type: !7240)
!7428 = !DILocation(line: 1052, column: 26, scope: !7424)
!7429 = !DILocalVariable(name: "stage", scope: !7424, file: !31, line: 1053, type: !11)
!7430 = !DILocation(line: 1053, column: 9, scope: !7424)
!7431 = !DILocalVariable(name: "moreChannelStages", scope: !7424, file: !31, line: 1054, type: !13)
!7432 = !DILocation(line: 1054, column: 10, scope: !7424)
!7433 = !DILocalVariable(name: "moreModuleStages", scope: !7424, file: !31, line: 1054, type: !13)
!7434 = !DILocation(line: 1054, column: 36, scope: !7424)
!7435 = !DILocation(line: 1055, column: 5, scope: !7424)
!7436 = !DILocation(line: 1055, column: 12, scope: !7424)
!7437 = !DILocation(line: 1055, column: 30, scope: !7424)
!7438 = !DILocation(line: 1055, column: 33, scope: !7424)
!7439 = !DILocation(line: 1057, column: 13, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !31, line: 1057, column: 13)
!7441 = distinct !DILexicalBlock(scope: !7424, file: !31, line: 1056, column: 5)
!7442 = !DILocation(line: 1057, column: 13, scope: !7441)
!7443 = !DILocation(line: 1058, column: 52, scope: !7440)
!7444 = !DILocation(line: 1058, column: 33, scope: !7440)
!7445 = !DILocation(line: 1058, column: 31, scope: !7440)
!7446 = !DILocation(line: 1058, column: 13, scope: !7440)
!7447 = !DILocation(line: 1063, column: 1, scope: !7440)
!7448 = !DILocation(line: 1063, column: 1, scope: !7424)
!7449 = !DILocation(line: 1059, column: 13, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7441, file: !31, line: 1059, column: 13)
!7451 = !DILocation(line: 1059, column: 13, scope: !7441)
!7452 = !DILocation(line: 1060, column: 50, scope: !7450)
!7453 = !DILocation(line: 1060, column: 32, scope: !7450)
!7454 = !DILocation(line: 1060, column: 30, scope: !7450)
!7455 = !DILocation(line: 1060, column: 13, scope: !7450)
!7456 = !DILocation(line: 1061, column: 9, scope: !7441)
!7457 = distinct !{!7457, !7435, !7458}
!7458 = !DILocation(line: 1062, column: 5, scope: !7424)
!7459 = distinct !DISubprogram(name: "callInitialize", linkageName: "_ZN7cModule14callInitializeEi", scope: !101, file: !31, line: 1065, type: !1210, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2000, retainedNodes: !324)
!7460 = !DILocalVariable(name: "this", arg: 1, scope: !7459, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7461 = !DILocation(line: 0, scope: !7459)
!7462 = !DILocalVariable(name: "stage", arg: 2, scope: !7459, file: !31, line: 1065, type: !11)
!7463 = !DILocation(line: 1065, column: 34, scope: !7459)
!7464 = !DILocalVariable(name: "tmp", scope: !7459, file: !31, line: 1067, type: !7240)
!7465 = !DILocation(line: 1067, column: 26, scope: !7459)
!7466 = !DILocalVariable(name: "moreChannelStages", scope: !7459, file: !31, line: 1068, type: !13)
!7467 = !DILocation(line: 1068, column: 10, scope: !7459)
!7468 = !DILocation(line: 1068, column: 49, scope: !7459)
!7469 = !DILocation(line: 1068, column: 30, scope: !7459)
!7470 = !DILocalVariable(name: "moreModuleStages", scope: !7459, file: !31, line: 1069, type: !13)
!7471 = !DILocation(line: 1069, column: 10, scope: !7459)
!7472 = !DILocation(line: 1069, column: 47, scope: !7459)
!7473 = !DILocation(line: 1069, column: 29, scope: !7459)
!7474 = !DILocation(line: 1070, column: 12, scope: !7459)
!7475 = !DILocation(line: 1070, column: 30, scope: !7459)
!7476 = !DILocation(line: 1070, column: 33, scope: !7459)
!7477 = !DILocation(line: 1071, column: 1, scope: !7459)
!7478 = distinct !DISubprogram(name: "initializeChannels", linkageName: "_ZN7cModule18initializeChannelsEi", scope: !101, file: !31, line: 1073, type: !1210, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1212, retainedNodes: !324)
!7479 = !DILocalVariable(name: "this", arg: 1, scope: !7478, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7480 = !DILocation(line: 0, scope: !7478)
!7481 = !DILocalVariable(name: "stage", arg: 2, scope: !7478, file: !31, line: 1073, type: !11)
!7482 = !DILocation(line: 1073, column: 38, scope: !7478)
!7483 = !DILocation(line: 1075, column: 9, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7478, file: !31, line: 1075, column: 9)
!7485 = !DILocation(line: 1075, column: 20, scope: !7484)
!7486 = !DILocation(line: 1075, column: 36, scope: !7484)
!7487 = !DILocation(line: 1075, column: 9, scope: !7478)
!7488 = !DILocation(line: 1076, column: 9, scope: !7484)
!7489 = !DILocation(line: 1076, column: 15, scope: !7484)
!7490 = !DILocation(line: 1090, column: 1, scope: !7484)
!7491 = !DILocalVariable(name: "moreStages", scope: !7478, file: !31, line: 1079, type: !13)
!7492 = !DILocation(line: 1079, column: 10, scope: !7478)
!7493 = !DILocalVariable(name: "chan", scope: !7494, file: !31, line: 1080, type: !7495)
!7494 = distinct !DILexicalBlock(scope: !7478, file: !31, line: 1080, column: 5)
!7495 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ChannelIterator", scope: !101, file: !100, line: 167, size: 256, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7496, identifier: "_ZTSN7cModule15ChannelIteratorE")
!7496 = !{!7497, !7498, !7499, !7503, !7504, !7507, !7512}
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !7495, file: !100, line: 170, baseType: !2151, size: 192)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !7495, file: !100, line: 171, baseType: !11, size: 32, offset: 192)
!7499 = !DISubprogram(name: "ChannelIterator", scope: !7495, file: !100, line: 177, type: !7500, scopeLine: 177, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7500 = !DISubroutineType(types: !7501)
!7501 = !{null, !7502, !113}
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7495, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7503 = !DISubprogram(name: "init", linkageName: "_ZN7cModule15ChannelIterator4initEPKS_", scope: !7495, file: !100, line: 182, type: !7500, scopeLine: 182, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7504 = !DISubprogram(name: "operator()", linkageName: "_ZN7cModule15ChannelIteratorclEv", scope: !7495, file: !100, line: 188, type: !7505, scopeLine: 188, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7505 = !DISubroutineType(types: !7506)
!7506 = !{!2173, !7502}
!7507 = !DISubprogram(name: "end", linkageName: "_ZNK7cModule15ChannelIterator3endEv", scope: !7495, file: !100, line: 193, type: !7508, scopeLine: 193, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!13, !7510}
!7510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7511, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7495)
!7512 = !DISubprogram(name: "operator++", linkageName: "_ZN7cModule15ChannelIteratorppEi", scope: !7495, file: !100, line: 201, type: !7513, scopeLine: 201, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7513 = !DISubroutineType(types: !7514)
!7514 = !{!2173, !7502, !11}
!7515 = !DILocation(line: 1080, column: 26, scope: !7494)
!7516 = !DILocation(line: 1080, column: 10, scope: !7494)
!7517 = !DILocation(line: 1080, column: 44, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7494, file: !31, line: 1080, column: 5)
!7519 = !DILocation(line: 1080, column: 38, scope: !7518)
!7520 = !DILocation(line: 1080, column: 5, scope: !7494)
!7521 = !DILocation(line: 1080, column: 5, scope: !7518)
!7522 = !DILocation(line: 1090, column: 1, scope: !7518)
!7523 = !DILocation(line: 1081, column: 13, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7518, file: !31, line: 1081, column: 13)
!7525 = !DILocation(line: 1081, column: 39, scope: !7524)
!7526 = !DILocation(line: 1081, column: 21, scope: !7524)
!7527 = !DILocation(line: 1081, column: 13, scope: !7518)
!7528 = !DILocation(line: 1082, column: 24, scope: !7524)
!7529 = !DILocation(line: 1082, column: 13, scope: !7524)
!7530 = !DILocation(line: 1081, column: 44, scope: !7524)
!7531 = !DILocation(line: 1080, column: 51, scope: !7518)
!7532 = distinct !{!7532, !7520, !7533}
!7533 = !DILocation(line: 1082, column: 26, scope: !7494)
!7534 = !DILocalVariable(name: "submod", scope: !7535, file: !31, line: 1085, type: !3919)
!7535 = distinct !DILexicalBlock(scope: !7478, file: !31, line: 1085, column: 5)
!7536 = !DILocation(line: 1085, column: 28, scope: !7535)
!7537 = !DILocation(line: 1085, column: 10, scope: !7535)
!7538 = !DILocation(line: 1085, column: 50, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7535, file: !31, line: 1085, column: 5)
!7540 = !DILocation(line: 1085, column: 42, scope: !7539)
!7541 = !DILocation(line: 1085, column: 5, scope: !7535)
!7542 = !DILocation(line: 1086, column: 13, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !31, line: 1086, column: 13)
!7544 = !DILocation(line: 1086, column: 42, scope: !7543)
!7545 = !DILocation(line: 1086, column: 23, scope: !7543)
!7546 = !DILocation(line: 1086, column: 13, scope: !7539)
!7547 = !DILocation(line: 1087, column: 24, scope: !7543)
!7548 = !DILocation(line: 1087, column: 13, scope: !7543)
!7549 = !DILocation(line: 1086, column: 47, scope: !7543)
!7550 = !DILocation(line: 1085, column: 57, scope: !7539)
!7551 = !DILocation(line: 1085, column: 5, scope: !7539)
!7552 = distinct !{!7552, !7541, !7553}
!7553 = !DILocation(line: 1087, column: 26, scope: !7535)
!7554 = !DILocation(line: 1089, column: 12, scope: !7478)
!7555 = !DILocation(line: 1089, column: 5, scope: !7478)
!7556 = distinct !DISubprogram(name: "getContextType", linkageName: "_ZNK11cSimulation14getContextTypeEv", scope: !4050, file: !4049, line: 479, type: !7557, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7559, retainedNodes: !324)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!11, !4092}
!7559 = !DISubprogram(name: "getContextType", linkageName: "_ZNK11cSimulation14getContextTypeEv", scope: !4050, file: !4049, line: 479, type: !7557, scopeLine: 479, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7560 = !DILocalVariable(name: "this", arg: 1, scope: !7556, type: !4096, flags: DIFlagArtificial | DIFlagObjectPointer)
!7561 = !DILocation(line: 0, scope: !7556)
!7562 = !DILocation(line: 479, column: 40, scope: !7556)
!7563 = !DILocation(line: 479, column: 33, scope: !7556)
!7564 = distinct !DISubprogram(name: "ChannelIterator", linkageName: "_ZN7cModule15ChannelIteratorC2EPKS_", scope: !7495, file: !100, line: 177, type: !7500, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7499, retainedNodes: !324)
!7565 = !DILocalVariable(name: "this", arg: 1, scope: !7564, type: !7566, flags: DIFlagArtificial | DIFlagObjectPointer)
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7495, size: 64)
!7567 = !DILocation(line: 0, scope: !7564)
!7568 = !DILocalVariable(name: "parentmodule", arg: 2, scope: !7564, file: !100, line: 177, type: !113)
!7569 = !DILocation(line: 177, column: 40, scope: !7564)
!7570 = !DILocation(line: 177, column: 9, scope: !7564)
!7571 = !DILocation(line: 177, column: 60, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7564, file: !100, line: 177, column: 54)
!7573 = !DILocation(line: 177, column: 55, scope: !7572)
!7574 = !DILocation(line: 177, column: 74, scope: !7564)
!7575 = !DILocation(line: 177, column: 74, scope: !7572)
!7576 = distinct !DISubprogram(name: "end", linkageName: "_ZNK7cModule15ChannelIterator3endEv", scope: !7495, file: !100, line: 193, type: !7508, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7507, retainedNodes: !324)
!7577 = !DILocalVariable(name: "this", arg: 1, scope: !7576, type: !7578, flags: DIFlagArtificial | DIFlagObjectPointer)
!7578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7511, size: 64)
!7579 = !DILocation(line: 0, scope: !7576)
!7580 = !DILocation(line: 193, column: 34, scope: !7576)
!7581 = !DILocation(line: 193, column: 44, scope: !7576)
!7582 = !DILocation(line: 193, column: 53, scope: !7576)
!7583 = !DILocation(line: 193, column: 36, scope: !7576)
!7584 = !DILocation(line: 193, column: 27, scope: !7576)
!7585 = distinct !DISubprogram(name: "operator()", linkageName: "_ZN7cModule15ChannelIteratorclEv", scope: !7495, file: !100, line: 188, type: !7505, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7504, retainedNodes: !324)
!7586 = !DILocalVariable(name: "this", arg: 1, scope: !7585, type: !7566, flags: DIFlagArtificial | DIFlagObjectPointer)
!7587 = !DILocation(line: 0, scope: !7585)
!7588 = !DILocation(line: 188, column: 40, scope: !7585)
!7589 = !DILocation(line: 188, column: 49, scope: !7585)
!7590 = !DILocation(line: 188, column: 58, scope: !7585)
!7591 = !DILocation(line: 188, column: 42, scope: !7585)
!7592 = !DILocation(line: 188, column: 67, scope: !7585)
!7593 = !DILocation(line: 188, column: 76, scope: !7585)
!7594 = !DILocation(line: 188, column: 33, scope: !7585)
!7595 = distinct !DISubprogram(name: "operator++", linkageName: "_ZN7cModule15ChannelIteratorppEi", scope: !7495, file: !100, line: 201, type: !7513, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7512, retainedNodes: !324)
!7596 = !DILocalVariable(name: "this", arg: 1, scope: !7595, type: !7566, flags: DIFlagArtificial | DIFlagObjectPointer)
!7597 = !DILocation(line: 0, scope: !7595)
!7598 = !DILocalVariable(arg: 2, scope: !7595, file: !100, line: 201, type: !11)
!7599 = !DILocation(line: 201, column: 33, scope: !7595)
!7600 = !DILocation(line: 201, column: 43, scope: !7595)
!7601 = !DILocation(line: 201, column: 58, scope: !7595)
!7602 = !DILocation(line: 201, column: 67, scope: !7595)
!7603 = !DILocation(line: 201, column: 68, scope: !7595)
!7604 = !DILocation(line: 201, column: 36, scope: !7595)
!7605 = distinct !DISubprogram(name: "~ChannelIterator", linkageName: "_ZN7cModule15ChannelIteratorD2Ev", scope: !7495, file: !100, line: 167, type: !7606, scopeLine: 167, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7608, retainedNodes: !324)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{null, !7502}
!7608 = !DISubprogram(name: "~ChannelIterator", scope: !7495, type: !7606, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: 0)
!7609 = !DILocalVariable(name: "this", arg: 1, scope: !7605, type: !7566, flags: DIFlagArtificial | DIFlagObjectPointer)
!7610 = !DILocation(line: 0, scope: !7605)
!7611 = !DILocation(line: 167, column: 19, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7605, file: !100, line: 167, column: 19)
!7613 = !DILocation(line: 167, column: 19, scope: !7605)
!7614 = distinct !DISubprogram(name: "initializeModules", linkageName: "_ZN7cModule17initializeModulesEi", scope: !101, file: !31, line: 1092, type: !1210, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1209, retainedNodes: !324)
!7615 = !DILocalVariable(name: "this", arg: 1, scope: !7614, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7616 = !DILocation(line: 0, scope: !7614)
!7617 = !DILocalVariable(name: "stage", arg: 2, scope: !7614, file: !31, line: 1092, type: !11)
!7618 = !DILocation(line: 1092, column: 37, scope: !7614)
!7619 = !DILocation(line: 1094, column: 9, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7614, file: !31, line: 1094, column: 9)
!7621 = !DILocation(line: 1094, column: 20, scope: !7620)
!7622 = !DILocation(line: 1094, column: 36, scope: !7620)
!7623 = !DILocation(line: 1094, column: 9, scope: !7614)
!7624 = !DILocation(line: 1095, column: 9, scope: !7620)
!7625 = !DILocation(line: 1095, column: 15, scope: !7620)
!7626 = !DILocation(line: 1134, column: 1, scope: !7620)
!7627 = !DILocation(line: 1097, column: 9, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7614, file: !31, line: 1097, column: 9)
!7629 = !DILocation(line: 1097, column: 14, scope: !7628)
!7630 = !DILocation(line: 1097, column: 9, scope: !7614)
!7631 = !DILocation(line: 1099, column: 13, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !31, line: 1099, column: 13)
!7633 = distinct !DILexicalBlock(scope: !7628, file: !31, line: 1098, column: 5)
!7634 = !DILocation(line: 1099, column: 13, scope: !7633)
!7635 = !DILocation(line: 1100, column: 13, scope: !7632)
!7636 = !DILocation(line: 1100, column: 33, scope: !7632)
!7637 = !DILocation(line: 1100, column: 19, scope: !7632)
!7638 = !DILocation(line: 1134, column: 1, scope: !7632)
!7639 = !DILocation(line: 1104, column: 14, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7633, file: !31, line: 1104, column: 13)
!7641 = !DILocation(line: 1104, column: 13, scope: !7633)
!7642 = !DILocation(line: 1105, column: 13, scope: !7640)
!7643 = !DILocation(line: 1106, column: 5, scope: !7633)
!7644 = !DILocalVariable(name: "numStages", scope: !7614, file: !31, line: 1109, type: !11)
!7645 = !DILocation(line: 1109, column: 9, scope: !7614)
!7646 = !DILocation(line: 1109, column: 21, scope: !7614)
!7647 = !DILocation(line: 1110, column: 9, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7614, file: !31, line: 1110, column: 9)
!7649 = !DILocation(line: 1110, column: 17, scope: !7648)
!7650 = !DILocation(line: 1110, column: 15, scope: !7648)
!7651 = !DILocation(line: 1110, column: 9, scope: !7614)
!7652 = !DILocalVariable(name: "__ctx", scope: !7653, file: !31, line: 1113, type: !7654)
!7653 = distinct !DILexicalBlock(scope: !7648, file: !31, line: 1111, column: 5)
!7654 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "cMethodCallContextSwitcher", file: !93, line: 251, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7655, identifier: "_ZTS26cMethodCallContextSwitcher")
!7655 = !{!7656, !7657, !7661, !7664}
!7656 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !7654, baseType: !7224, flags: DIFlagPublic, extraData: i32 0)
!7657 = !DISubprogram(name: "cMethodCallContextSwitcher", scope: !7654, file: !93, line: 257, type: !7658, scopeLine: 257, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{null, !7660, !7232, !13}
!7660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7654, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7661 = !DISubprogram(name: "~cMethodCallContextSwitcher", scope: !7654, file: !93, line: 262, type: !7662, scopeLine: 262, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{null, !7660}
!7664 = !DISubprogram(name: "methodCall", linkageName: "_ZN26cMethodCallContextSwitcher10methodCallEPKcz", scope: !7654, file: !93, line: 268, type: !7665, scopeLine: 268, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{null, !7660, !167, null}
!7667 = !DILocation(line: 1113, column: 9, scope: !7653)
!7668 = !DILocation(line: 1118, column: 13, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7653, file: !31, line: 1117, column: 13)
!7670 = !DILocation(line: 1118, column: 24, scope: !7669)
!7671 = !DILocation(line: 1119, column: 9, scope: !7669)
!7672 = !DILocation(line: 1134, column: 1, scope: !7653)
!7673 = !DILocation(line: 1134, column: 1, scope: !7669)
!7674 = !DILocalVariable(scope: !7653, file: !31, line: 1119, type: !7675)
!7675 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !7676, size: 64)
!7676 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "cException", file: !2031, line: 42, size: 1024, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7677, vtableHolder: !7679, identifier: "_ZTS10cException")
!7677 = !{!7678, !7681, !7682, !7683, !7684, !7685, !7686, !7687, !7691, !7694, !7695, !7696, !7699, !7702, !7705, !7708, !7713, !7718, !7719, !7722, !7725, !7728, !7729, !7732, !7733, !7734}
!7678 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !7676, baseType: !7679, flags: DIFlagPublic, extraData: i32 0)
!7679 = !DICompositeType(tag: DW_TAG_class_type, name: "exception", scope: !2, file: !7680, line: 60, flags: DIFlagFwdDecl)
!7680 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/exception.h", directory: "")
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "errorcode", scope: !7676, file: !2031, line: 45, baseType: !11, size: 32, offset: 64, flags: DIFlagProtected)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !7676, file: !2031, line: 46, baseType: !107, size: 256, offset: 128, flags: DIFlagProtected)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "hascontext", scope: !7676, file: !2031, line: 47, baseType: !13, size: 8, offset: 384, flags: DIFlagProtected)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "contextclassname", scope: !7676, file: !2031, line: 48, baseType: !107, size: 256, offset: 448, flags: DIFlagProtected)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "contextfullpath", scope: !7676, file: !2031, line: 49, baseType: !107, size: 256, offset: 704, flags: DIFlagProtected)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "moduleid", scope: !7676, file: !2031, line: 50, baseType: !11, size: 32, offset: 960, flags: DIFlagProtected)
!7687 = !DISubprogram(name: "init", linkageName: "_ZN10cException4initEPK7cObject12OppErrorCodePKcP13__va_list_tag", scope: !7676, file: !2031, line: 57, type: !7688, scopeLine: 57, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{null, !7690, !7046, !47, !167, !3335}
!7690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7676, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7691 = !DISubprogram(name: "storeCtx", linkageName: "_ZN10cException8storeCtxEv", scope: !7676, file: !2031, line: 60, type: !7692, scopeLine: 60, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{null, !7690}
!7694 = !DISubprogram(name: "cException", scope: !7676, file: !2031, line: 63, type: !7692, scopeLine: 63, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!7695 = !DISubprogram(name: "exitIfStartupError", linkageName: "_ZN10cException18exitIfStartupErrorEv", scope: !7676, file: !2031, line: 74, type: !7692, scopeLine: 74, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0)
!7696 = !DISubprogram(name: "cException", scope: !7676, file: !2031, line: 84, type: !7697, scopeLine: 84, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{null, !7690, !47, null}
!7699 = !DISubprogram(name: "cException", scope: !7676, file: !2031, line: 89, type: !7700, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{null, !7690, !167, null}
!7702 = !DISubprogram(name: "cException", scope: !7676, file: !2031, line: 98, type: !7703, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{null, !7690, !7046, !47, null}
!7705 = !DISubprogram(name: "cException", scope: !7676, file: !2031, line: 105, type: !7706, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{null, !7690, !7046, !167, null}
!7708 = !DISubprogram(name: "cException", scope: !7676, file: !2031, line: 111, type: !7709, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7709 = !DISubroutineType(types: !7710)
!7710 = !{null, !7690, !7711}
!7711 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !7712, size: 64)
!7712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7676)
!7713 = !DISubprogram(name: "dup", linkageName: "_ZNK10cException3dupEv", scope: !7676, file: !2031, line: 117, type: !7714, scopeLine: 117, containingType: !7676, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{!7716, !7717}
!7716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7676, size: 64)
!7717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7712, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!7718 = !DISubprogram(name: "~cException", scope: !7676, file: !2031, line: 122, type: !7692, scopeLine: 122, containingType: !7676, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7719 = !DISubprogram(name: "getErrorCode", linkageName: "_ZNK10cException12getErrorCodeEv", scope: !7676, file: !2031, line: 131, type: !7720, scopeLine: 131, containingType: !7676, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!11, !7717}
!7722 = !DISubprogram(name: "what", linkageName: "_ZNK10cException4whatEv", scope: !7676, file: !2031, line: 136, type: !7723, scopeLine: 136, containingType: !7676, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{!167, !7717}
!7725 = !DISubprogram(name: "setMessage", linkageName: "_ZN10cException10setMessageEPKc", scope: !7676, file: !2031, line: 141, type: !7726, scopeLine: 141, containingType: !7676, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{null, !7690, !167}
!7728 = !DISubprogram(name: "prependMessage", linkageName: "_ZN10cException14prependMessageEPKc", scope: !7676, file: !2031, line: 146, type: !7726, scopeLine: 146, containingType: !7676, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7729 = !DISubprogram(name: "hasContext", linkageName: "_ZNK10cException10hasContextEv", scope: !7676, file: !2031, line: 153, type: !7730, scopeLine: 153, containingType: !7676, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7730 = !DISubroutineType(types: !7731)
!7731 = !{!13, !7717}
!7732 = !DISubprogram(name: "getContextClassName", linkageName: "_ZNK10cException19getContextClassNameEv", scope: !7676, file: !2031, line: 159, type: !7723, scopeLine: 159, containingType: !7676, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7733 = !DISubprogram(name: "getContextFullPath", linkageName: "_ZNK10cException18getContextFullPathEv", scope: !7676, file: !2031, line: 165, type: !7723, scopeLine: 165, containingType: !7676, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7734 = !DISubprogram(name: "getModuleID", linkageName: "_ZNK10cException11getModuleIDEv", scope: !7676, file: !2031, line: 173, type: !7720, scopeLine: 173, containingType: !7676, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!7735 = !DILocation(line: 1119, column: 29, scope: !7653)
!7736 = !DILocation(line: 1123, column: 9, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7653, file: !31, line: 1121, column: 37)
!7738 = !DILocation(line: 1120, column: 13, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7653, file: !31, line: 1119, column: 31)
!7740 = !DILocalVariable(name: "e", scope: !7653, file: !31, line: 1121, type: !7741)
!7741 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !7679, size: 64)
!7742 = !DILocation(line: 1121, column: 34, scope: !7653)
!7743 = !DILocation(line: 1122, column: 13, scope: !7737)
!7744 = !DILocation(line: 1122, column: 83, scope: !7737)
!7745 = !DILocation(line: 1122, column: 76, scope: !7737)
!7746 = !DILocation(line: 1122, column: 63, scope: !7737)
!7747 = !DILocation(line: 1122, column: 88, scope: !7737)
!7748 = !DILocation(line: 1122, column: 90, scope: !7737)
!7749 = !DILocation(line: 1122, column: 19, scope: !7737)
!7750 = !DILocation(line: 1134, column: 1, scope: !7737)
!7751 = !DILocation(line: 1134, column: 1, scope: !7739)
!7752 = !DILocation(line: 1121, column: 9, scope: !7739)
!7753 = !DILocation(line: 1124, column: 9, scope: !7653)
!7754 = !DILocation(line: 1125, column: 5, scope: !7648)
!7755 = !DILocation(line: 1125, column: 5, scope: !7653)
!7756 = !DILocalVariable(name: "moreStages", scope: !7614, file: !31, line: 1128, type: !13)
!7757 = !DILocation(line: 1128, column: 10, scope: !7614)
!7758 = !DILocation(line: 1128, column: 23, scope: !7614)
!7759 = !DILocation(line: 1128, column: 31, scope: !7614)
!7760 = !DILocation(line: 1128, column: 40, scope: !7614)
!7761 = !DILocation(line: 1128, column: 29, scope: !7614)
!7762 = !DILocalVariable(name: "submod", scope: !7763, file: !31, line: 1129, type: !3919)
!7763 = distinct !DILexicalBlock(scope: !7614, file: !31, line: 1129, column: 5)
!7764 = !DILocation(line: 1129, column: 28, scope: !7763)
!7765 = !DILocation(line: 1129, column: 10, scope: !7763)
!7766 = !DILocation(line: 1129, column: 50, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7763, file: !31, line: 1129, column: 5)
!7768 = !DILocation(line: 1129, column: 42, scope: !7767)
!7769 = !DILocation(line: 1129, column: 5, scope: !7763)
!7770 = !DILocation(line: 1130, column: 13, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !31, line: 1130, column: 13)
!7772 = !DILocation(line: 1130, column: 41, scope: !7771)
!7773 = !DILocation(line: 1130, column: 23, scope: !7771)
!7774 = !DILocation(line: 1130, column: 13, scope: !7767)
!7775 = !DILocation(line: 1131, column: 24, scope: !7771)
!7776 = !DILocation(line: 1131, column: 13, scope: !7771)
!7777 = !DILocation(line: 1130, column: 46, scope: !7771)
!7778 = !DILocation(line: 1129, column: 57, scope: !7767)
!7779 = !DILocation(line: 1129, column: 5, scope: !7767)
!7780 = distinct !{!7780, !7769, !7781}
!7781 = !DILocation(line: 1131, column: 26, scope: !7763)
!7782 = !DILocation(line: 1133, column: 12, scope: !7614)
!7783 = !DILocation(line: 1133, column: 5, scope: !7614)
!7784 = distinct !DISubprogram(name: "initialized", linkageName: "_ZNK10cComponent11initializedEv", scope: !104, file: !105, line: 93, type: !7290, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7785, retainedNodes: !324)
!7785 = !DISubprogram(name: "initialized", linkageName: "_ZNK10cComponent11initializedEv", scope: !104, file: !105, line: 93, type: !7290, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!7786 = !DILocalVariable(name: "this", arg: 1, scope: !7784, type: !7232, flags: DIFlagArtificial | DIFlagObjectPointer)
!7787 = !DILocation(line: 0, scope: !7784)
!7788 = !DILocation(line: 93, column: 38, scope: !7784)
!7789 = !DILocation(line: 93, column: 43, scope: !7784)
!7790 = !DILocation(line: 93, column: 31, scope: !7784)
!7791 = distinct !DISubprogram(name: "callFinish", linkageName: "_ZN7cModule10callFinishEv", scope: !101, file: !31, line: 1136, type: !1365, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2001, retainedNodes: !324)
!7792 = !DILocalVariable(name: "this", arg: 1, scope: !7791, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!7793 = !DILocation(line: 0, scope: !7791)
!7794 = !DILocalVariable(name: "chan", scope: !7795, file: !31, line: 1141, type: !7495)
!7795 = distinct !DILexicalBlock(scope: !7791, file: !31, line: 1141, column: 5)
!7796 = !DILocation(line: 1141, column: 26, scope: !7795)
!7797 = !DILocation(line: 1141, column: 10, scope: !7795)
!7798 = !DILocation(line: 1141, column: 44, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7795, file: !31, line: 1141, column: 5)
!7800 = !DILocation(line: 1141, column: 38, scope: !7799)
!7801 = !DILocation(line: 1141, column: 5, scope: !7795)
!7802 = !DILocation(line: 1141, column: 5, scope: !7799)
!7803 = !DILocation(line: 1157, column: 1, scope: !7799)
!7804 = !DILocation(line: 1142, column: 9, scope: !7799)
!7805 = !DILocation(line: 1142, column: 17, scope: !7799)
!7806 = !DILocation(line: 1141, column: 51, scope: !7799)
!7807 = distinct !{!7807, !7801, !7808}
!7808 = !DILocation(line: 1142, column: 28, scope: !7795)
!7809 = !DILocalVariable(name: "submod", scope: !7810, file: !31, line: 1143, type: !3919)
!7810 = distinct !DILexicalBlock(scope: !7791, file: !31, line: 1143, column: 5)
!7811 = !DILocation(line: 1143, column: 28, scope: !7810)
!7812 = !DILocation(line: 1143, column: 10, scope: !7810)
!7813 = !DILocation(line: 1143, column: 50, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7810, file: !31, line: 1143, column: 5)
!7815 = !DILocation(line: 1143, column: 42, scope: !7814)
!7816 = !DILocation(line: 1143, column: 5, scope: !7810)
!7817 = !DILocation(line: 1144, column: 9, scope: !7814)
!7818 = !DILocation(line: 1144, column: 19, scope: !7814)
!7819 = !DILocation(line: 1143, column: 57, scope: !7814)
!7820 = !DILocation(line: 1143, column: 5, scope: !7814)
!7821 = distinct !{!7821, !7816, !7822}
!7822 = !DILocation(line: 1144, column: 30, scope: !7810)
!7823 = !DILocalVariable(name: "tmp", scope: !7791, file: !31, line: 1147, type: !7224)
!7824 = !DILocation(line: 1147, column: 22, scope: !7791)
!7825 = !DILocation(line: 1147, column: 26, scope: !7791)
!7826 = !DILocalVariable(name: "tmp2", scope: !7791, file: !31, line: 1148, type: !7240)
!7827 = !DILocation(line: 1148, column: 26, scope: !7791)
!7828 = !DILocation(line: 1149, column: 5, scope: !7791)
!7829 = !DILocation(line: 1151, column: 9, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7791, file: !31, line: 1150, column: 9)
!7831 = !DILocation(line: 1152, column: 5, scope: !7830)
!7832 = !DILocation(line: 1157, column: 1, scope: !7791)
!7833 = !DILocation(line: 1157, column: 1, scope: !7830)
!7834 = !DILocalVariable(scope: !7791, file: !31, line: 1152, type: !7675)
!7835 = !DILocation(line: 1152, column: 25, scope: !7791)
!7836 = !DILocation(line: 1156, column: 5, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7791, file: !31, line: 1154, column: 33)
!7838 = !DILocation(line: 1153, column: 9, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7791, file: !31, line: 1152, column: 27)
!7840 = !DILocalVariable(name: "e", scope: !7791, file: !31, line: 1154, type: !7741)
!7841 = !DILocation(line: 1154, column: 30, scope: !7791)
!7842 = !DILocation(line: 1155, column: 9, scope: !7837)
!7843 = !DILocation(line: 1155, column: 75, scope: !7837)
!7844 = !DILocation(line: 1155, column: 68, scope: !7837)
!7845 = !DILocation(line: 1155, column: 55, scope: !7837)
!7846 = !DILocation(line: 1155, column: 80, scope: !7837)
!7847 = !DILocation(line: 1155, column: 82, scope: !7837)
!7848 = !DILocation(line: 1155, column: 15, scope: !7837)
!7849 = !DILocation(line: 1157, column: 1, scope: !7837)
!7850 = !DILocation(line: 1157, column: 1, scope: !7839)
!7851 = !DILocation(line: 1154, column: 5, scope: !7839)
!7852 = distinct !DISubprogram(name: "init", linkageName: "_ZN7cModule12GateIterator4initEPKS_", scope: !3966, file: !31, line: 1161, type: !3982, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3984, retainedNodes: !324)
!7853 = !DILocalVariable(name: "this", arg: 1, scope: !7852, type: !4132, flags: DIFlagArtificial | DIFlagObjectPointer)
!7854 = !DILocation(line: 0, scope: !7852)
!7855 = !DILocalVariable(name: "module", arg: 2, scope: !7852, file: !31, line: 1161, type: !113)
!7856 = !DILocation(line: 1161, column: 49, scope: !7852)
!7857 = !DILocation(line: 1163, column: 20, scope: !7852)
!7858 = !DILocation(line: 1163, column: 11, scope: !7852)
!7859 = !DILocation(line: 1163, column: 18, scope: !7852)
!7860 = !DILocation(line: 1164, column: 5, scope: !7852)
!7861 = !DILocation(line: 1164, column: 15, scope: !7852)
!7862 = !DILocation(line: 1165, column: 5, scope: !7852)
!7863 = !DILocation(line: 1165, column: 14, scope: !7852)
!7864 = !DILocation(line: 1166, column: 5, scope: !7852)
!7865 = !DILocation(line: 1166, column: 11, scope: !7852)
!7866 = !DILocation(line: 1168, column: 5, scope: !7852)
!7867 = !DILocation(line: 1168, column: 13, scope: !7852)
!7868 = !DILocation(line: 1168, column: 19, scope: !7852)
!7869 = !DILocation(line: 1168, column: 22, scope: !7852)
!7870 = !DILocation(line: 1168, column: 31, scope: !7852)
!7871 = !DILocation(line: 1169, column: 9, scope: !7852)
!7872 = distinct !{!7872, !7866, !7873}
!7873 = !DILocation(line: 1169, column: 17, scope: !7852)
!7874 = !DILocation(line: 1170, column: 1, scope: !7852)
!7875 = distinct !DISubprogram(name: "current", linkageName: "_ZNK7cModule12GateIterator7currentEv", scope: !3966, file: !31, line: 1206, type: !3977, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3976, retainedNodes: !324)
!7876 = !DILocalVariable(name: "this", arg: 1, scope: !7875, type: !4142, flags: DIFlagArtificial | DIFlagObjectPointer)
!7877 = !DILocation(line: 0, scope: !7875)
!7878 = !DILocation(line: 1208, column: 9, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7875, file: !31, line: 1208, column: 9)
!7880 = !DILocation(line: 1208, column: 22, scope: !7879)
!7881 = !DILocation(line: 1208, column: 30, scope: !7879)
!7882 = !DILocation(line: 1208, column: 19, scope: !7879)
!7883 = !DILocation(line: 1208, column: 9, scope: !7875)
!7884 = !DILocation(line: 1209, column: 9, scope: !7879)
!7885 = !DILocalVariable(name: "desc", scope: !7875, file: !31, line: 1210, type: !1137)
!7886 = !DILocation(line: 1210, column: 18, scope: !7875)
!7887 = !DILocation(line: 1210, column: 25, scope: !7875)
!7888 = !DILocation(line: 1210, column: 33, scope: !7875)
!7889 = !DILocation(line: 1210, column: 41, scope: !7875)
!7890 = !DILocation(line: 1210, column: 39, scope: !7875)
!7891 = !DILocation(line: 1211, column: 10, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7875, file: !31, line: 1211, column: 9)
!7893 = !DILocation(line: 1211, column: 16, scope: !7892)
!7894 = !DILocation(line: 1211, column: 9, scope: !7875)
!7895 = !DILocation(line: 1212, column: 9, scope: !7892)
!7896 = !DILocation(line: 1213, column: 9, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7875, file: !31, line: 1213, column: 9)
!7898 = !DILocation(line: 1213, column: 17, scope: !7897)
!7899 = !DILocation(line: 1213, column: 25, scope: !7897)
!7900 = !DILocation(line: 1213, column: 28, scope: !7897)
!7901 = !DILocation(line: 1213, column: 34, scope: !7897)
!7902 = !DILocation(line: 1213, column: 43, scope: !7897)
!7903 = !DILocation(line: 1213, column: 9, scope: !7875)
!7904 = !DILocation(line: 1214, column: 9, scope: !7897)
!7905 = !DILocation(line: 1215, column: 10, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7875, file: !31, line: 1215, column: 9)
!7907 = !DILocation(line: 1215, column: 16, scope: !7906)
!7908 = !DILocation(line: 1215, column: 9, scope: !7875)
!7909 = !DILocation(line: 1216, column: 16, scope: !7906)
!7910 = !DILocation(line: 1216, column: 27, scope: !7906)
!7911 = !DILocation(line: 1216, column: 33, scope: !7906)
!7912 = !DILocation(line: 1216, column: 46, scope: !7906)
!7913 = !DILocation(line: 1216, column: 52, scope: !7906)
!7914 = !DILocation(line: 1216, column: 9, scope: !7906)
!7915 = !DILocation(line: 1217, column: 14, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7906, file: !31, line: 1217, column: 14)
!7917 = !DILocation(line: 1217, column: 20, scope: !7916)
!7918 = !DILocation(line: 1217, column: 24, scope: !7916)
!7919 = !DILocation(line: 1217, column: 14, scope: !7906)
!7920 = !DILocation(line: 1218, column: 9, scope: !7916)
!7921 = !DILocation(line: 1220, column: 16, scope: !7916)
!7922 = !DILocation(line: 1220, column: 27, scope: !7916)
!7923 = !DILocation(line: 1220, column: 33, scope: !7916)
!7924 = !DILocation(line: 1220, column: 45, scope: !7916)
!7925 = !DILocation(line: 1220, column: 54, scope: !7916)
!7926 = !DILocation(line: 1220, column: 60, scope: !7916)
!7927 = !DILocation(line: 1220, column: 71, scope: !7916)
!7928 = !DILocation(line: 1220, column: 9, scope: !7916)
!7929 = !DILocation(line: 1221, column: 1, scope: !7875)
!7930 = distinct !DISubprogram(name: "advance", linkageName: "_ZN7cModule12GateIterator7advanceEv", scope: !3966, file: !31, line: 1172, type: !3973, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3972, retainedNodes: !324)
!7931 = !DILocalVariable(name: "this", arg: 1, scope: !7930, type: !4132, flags: DIFlagArtificial | DIFlagObjectPointer)
!7932 = !DILocation(line: 0, scope: !7930)
!7933 = !DILocalVariable(name: "desc", scope: !7930, file: !31, line: 1174, type: !1137)
!7934 = !DILocation(line: 1174, column: 18, scope: !7930)
!7935 = !DILocation(line: 1174, column: 25, scope: !7930)
!7936 = !DILocation(line: 1174, column: 33, scope: !7930)
!7937 = !DILocation(line: 1174, column: 41, scope: !7930)
!7938 = !DILocation(line: 1174, column: 39, scope: !7930)
!7939 = !DILocation(line: 1176, column: 9, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7930, file: !31, line: 1176, column: 9)
!7941 = !DILocation(line: 1176, column: 15, scope: !7940)
!7942 = !DILocation(line: 1176, column: 9, scope: !7930)
!7943 = !DILocation(line: 1177, column: 13, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !31, line: 1177, column: 13)
!7945 = distinct !DILexicalBlock(scope: !7940, file: !31, line: 1176, column: 22)
!7946 = !DILocation(line: 1177, column: 21, scope: !7944)
!7947 = !DILocation(line: 1177, column: 29, scope: !7944)
!7948 = !DILocation(line: 1177, column: 32, scope: !7944)
!7949 = !DILocation(line: 1177, column: 38, scope: !7944)
!7950 = !DILocation(line: 1177, column: 47, scope: !7944)
!7951 = !DILocation(line: 1177, column: 13, scope: !7945)
!7952 = !DILocation(line: 1178, column: 13, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7944, file: !31, line: 1177, column: 64)
!7954 = !DILocation(line: 1178, column: 22, scope: !7953)
!7955 = !DILocation(line: 1179, column: 13, scope: !7953)
!7956 = !DILocation(line: 1182, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7945, file: !31, line: 1182, column: 13)
!7958 = !DILocation(line: 1182, column: 19, scope: !7957)
!7959 = !DILocation(line: 1182, column: 13, scope: !7945)
!7960 = !DILocation(line: 1183, column: 17, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !31, line: 1183, column: 17)
!7962 = distinct !DILexicalBlock(scope: !7957, file: !31, line: 1182, column: 31)
!7963 = !DILocation(line: 1183, column: 25, scope: !7961)
!7964 = !DILocation(line: 1183, column: 31, scope: !7961)
!7965 = !DILocation(line: 1183, column: 35, scope: !7961)
!7966 = !DILocation(line: 1183, column: 23, scope: !7961)
!7967 = !DILocation(line: 1183, column: 17, scope: !7962)
!7968 = !DILocation(line: 1184, column: 17, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7961, file: !31, line: 1183, column: 39)
!7970 = !DILocation(line: 1184, column: 22, scope: !7969)
!7971 = !DILocation(line: 1185, column: 17, scope: !7969)
!7972 = !DILocation(line: 1187, column: 13, scope: !7962)
!7973 = !DILocation(line: 1187, column: 19, scope: !7962)
!7974 = !DILocation(line: 1188, column: 9, scope: !7962)
!7975 = !DILocation(line: 1189, column: 13, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7945, file: !31, line: 1189, column: 13)
!7977 = !DILocation(line: 1189, column: 21, scope: !7976)
!7978 = !DILocation(line: 1189, column: 29, scope: !7976)
!7979 = !DILocation(line: 1189, column: 32, scope: !7976)
!7980 = !DILocation(line: 1189, column: 38, scope: !7976)
!7981 = !DILocation(line: 1189, column: 47, scope: !7976)
!7982 = !DILocation(line: 1189, column: 13, scope: !7945)
!7983 = !DILocation(line: 1190, column: 13, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7976, file: !31, line: 1189, column: 63)
!7985 = !DILocation(line: 1190, column: 22, scope: !7984)
!7986 = !DILocation(line: 1191, column: 13, scope: !7984)
!7987 = !DILocation(line: 1193, column: 5, scope: !7945)
!7988 = !DILocation(line: 1194, column: 9, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7930, file: !31, line: 1194, column: 9)
!7990 = !DILocation(line: 1194, column: 21, scope: !7989)
!7991 = !DILocation(line: 1194, column: 29, scope: !7989)
!7992 = !DILocation(line: 1194, column: 19, scope: !7989)
!7993 = !DILocation(line: 1194, column: 9, scope: !7930)
!7994 = !DILocation(line: 1195, column: 9, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7989, file: !31, line: 1194, column: 40)
!7996 = !DILocation(line: 1195, column: 18, scope: !7995)
!7997 = !DILocation(line: 1196, column: 9, scope: !7995)
!7998 = !DILocation(line: 1196, column: 18, scope: !7995)
!7999 = !DILocation(line: 1197, column: 9, scope: !7995)
!8000 = !DILocation(line: 1197, column: 15, scope: !7995)
!8001 = !DILocation(line: 1198, column: 5, scope: !7995)
!8002 = !DILocation(line: 1199, column: 1, scope: !7930)
!8003 = distinct !DISubprogram(name: "init", linkageName: "_ZN7cModule15ChannelIterator4initEPKS_", scope: !7495, file: !31, line: 1244, type: !7500, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7503, retainedNodes: !324)
!8004 = !DILocalVariable(name: "this", arg: 1, scope: !8003, type: !7566, flags: DIFlagArtificial | DIFlagObjectPointer)
!8005 = !DILocation(line: 0, scope: !8003)
!8006 = !DILocalVariable(name: "parentmodule", arg: 2, scope: !8003, file: !31, line: 1244, type: !113)
!8007 = !DILocation(line: 1244, column: 52, scope: !8003)
!8008 = !DILocalVariable(name: "parent", scope: !8003, file: !31, line: 1248, type: !13)
!8009 = !DILocation(line: 1248, column: 10, scope: !8003)
!8010 = !DILocation(line: 1249, column: 5, scope: !8003)
!8011 = !DILocation(line: 1249, column: 14, scope: !8003)
!8012 = !DILocalVariable(name: "it", scope: !8013, file: !31, line: 1250, type: !3919)
!8013 = distinct !DILexicalBlock(scope: !8003, file: !31, line: 1250, column: 5)
!8014 = !DILocation(line: 1250, column: 28, scope: !8013)
!8015 = !DILocation(line: 1250, column: 31, scope: !8013)
!8016 = !DILocation(line: 1250, column: 10, scope: !8013)
!8017 = !DILocation(line: 1250, column: 47, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8013, file: !31, line: 1250, column: 5)
!8019 = !DILocation(line: 1250, column: 46, scope: !8018)
!8020 = !DILocation(line: 1250, column: 5, scope: !8013)
!8021 = !DILocalVariable(name: "mod", scope: !8022, file: !31, line: 1252, type: !113)
!8022 = distinct !DILexicalBlock(scope: !8018, file: !31, line: 1251, column: 5)
!8023 = !DILocation(line: 1252, column: 24, scope: !8022)
!8024 = !DILocation(line: 1252, column: 34, scope: !8022)
!8025 = !DILocation(line: 1252, column: 30, scope: !8022)
!8026 = !DILocation(line: 1252, column: 42, scope: !8022)
!8027 = !DILocation(line: 1252, column: 56, scope: !8022)
!8028 = !DILocation(line: 1252, column: 62, scope: !8022)
!8029 = !DILocalVariable(name: "i", scope: !8030, file: !31, line: 1254, type: !3966)
!8030 = distinct !DILexicalBlock(scope: !8022, file: !31, line: 1254, column: 9)
!8031 = !DILocation(line: 1254, column: 27, scope: !8030)
!8032 = !DILocation(line: 1254, column: 29, scope: !8030)
!8033 = !DILocation(line: 1254, column: 14, scope: !8030)
!8034 = !DILocation(line: 1254, column: 38, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8030, file: !31, line: 1254, column: 9)
!8036 = !DILocation(line: 1254, column: 35, scope: !8035)
!8037 = !DILocation(line: 1254, column: 9, scope: !8030)
!8038 = !DILocalVariable(name: "gate", scope: !8039, file: !31, line: 1256, type: !1174)
!8039 = distinct !DILexicalBlock(scope: !8035, file: !31, line: 1255, column: 9)
!8040 = !DILocation(line: 1256, column: 26, scope: !8039)
!8041 = !DILocation(line: 1256, column: 33, scope: !8039)
!8042 = !DILocalVariable(name: "wantedGateType", scope: !8039, file: !31, line: 1257, type: !33)
!8043 = !DILocation(line: 1257, column: 25, scope: !8039)
!8044 = !DILocation(line: 1257, column: 42, scope: !8039)
!8045 = !DILocation(line: 1258, column: 17, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8039, file: !31, line: 1258, column: 17)
!8047 = !DILocation(line: 1258, column: 22, scope: !8046)
!8048 = !DILocation(line: 1258, column: 25, scope: !8046)
!8049 = !DILocation(line: 1258, column: 31, scope: !8046)
!8050 = !DILocation(line: 1258, column: 44, scope: !8046)
!8051 = !DILocation(line: 1258, column: 47, scope: !8046)
!8052 = !DILocation(line: 1258, column: 53, scope: !8046)
!8053 = !DILocation(line: 1258, column: 64, scope: !8046)
!8054 = !DILocation(line: 1258, column: 62, scope: !8046)
!8055 = !DILocation(line: 1258, column: 17, scope: !8039)
!8056 = !DILocation(line: 1259, column: 17, scope: !8046)
!8057 = !DILocation(line: 1259, column: 36, scope: !8046)
!8058 = !DILocation(line: 1259, column: 42, scope: !8046)
!8059 = !DILocation(line: 1259, column: 26, scope: !8046)
!8060 = !DILocation(line: 1260, column: 9, scope: !8039)
!8061 = !DILocation(line: 1254, column: 45, scope: !8035)
!8062 = !DILocation(line: 1254, column: 9, scope: !8035)
!8063 = distinct !{!8063, !8037, !8064}
!8064 = !DILocation(line: 1260, column: 9, scope: !8030)
!8065 = !DILocation(line: 1261, column: 5, scope: !8022)
!8066 = !DILocation(line: 1250, column: 55, scope: !8018)
!8067 = !DILocation(line: 1250, column: 5, scope: !8018)
!8068 = distinct !{!8068, !8020, !8069}
!8069 = !DILocation(line: 1261, column: 5, scope: !8013)
!8070 = !DILocation(line: 1264, column: 5, scope: !8003)
!8071 = !DILocation(line: 1264, column: 7, scope: !8003)
!8072 = !DILocation(line: 1265, column: 1, scope: !8003)
!8073 = distinct !DISubprogram(name: "clear", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5clearEv", scope: !2151, file: !1497, line: 1498, type: !2377, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2541, retainedNodes: !324)
!8074 = !DILocalVariable(name: "this", arg: 1, scope: !8073, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!8075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!8076 = !DILocation(line: 0, scope: !8073)
!8077 = !DILocation(line: 1499, column: 31, scope: !8073)
!8078 = !DILocation(line: 1499, column: 25, scope: !8073)
!8079 = !DILocation(line: 1499, column: 39, scope: !8073)
!8080 = !DILocation(line: 1499, column: 9, scope: !8073)
!8081 = !DILocation(line: 1499, column: 50, scope: !8073)
!8082 = distinct !DISubprogram(name: "getChannel", linkageName: "_ZNK5cGate10getChannelEv", scope: !35, file: !34, line: 314, type: !8083, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8085, retainedNodes: !324)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!2173, !4160}
!8085 = !DISubprogram(name: "getChannel", linkageName: "_ZNK5cGate10getChannelEv", scope: !35, file: !34, line: 314, type: !8083, scopeLine: 314, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!8086 = !DILocalVariable(name: "this", arg: 1, scope: !8082, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!8087 = !DILocation(line: 0, scope: !8082)
!8088 = !DILocation(line: 314, column: 43, scope: !8082)
!8089 = !DILocation(line: 314, column: 36, scope: !8082)
!8090 = distinct !DISubprogram(name: "getType", linkageName: "_ZNK5cGate7getTypeEv", scope: !35, file: !34, line: 258, type: !8091, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8093, retainedNodes: !324)
!8091 = !DISubroutineType(types: !8092)
!8092 = !{!33, !4160}
!8093 = !DISubprogram(name: "getType", linkageName: "_ZNK5cGate7getTypeEv", scope: !35, file: !34, line: 258, type: !8091, scopeLine: 258, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!8094 = !DILocalVariable(name: "this", arg: 1, scope: !8090, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!8095 = !DILocation(line: 0, scope: !8090)
!8096 = !DILocation(line: 258, column: 35, scope: !8090)
!8097 = !DILocation(line: 258, column: 41, scope: !8090)
!8098 = !DILocation(line: 258, column: 28, scope: !8090)
!8099 = distinct !DISubprogram(name: "push_back", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE9push_backEOS1_", scope: !2151, file: !1497, line: 1203, type: !2516, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2515, retainedNodes: !324)
!8100 = !DILocalVariable(name: "this", arg: 1, scope: !8099, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!8101 = !DILocation(line: 0, scope: !8099)
!8102 = !DILocalVariable(name: "__x", arg: 2, scope: !8099, file: !1497, line: 1203, type: !2518)
!8103 = !DILocation(line: 1203, column: 30, scope: !8099)
!8104 = !DILocation(line: 1204, column: 32, scope: !8099)
!8105 = !DILocation(line: 1204, column: 22, scope: !8099)
!8106 = !DILocation(line: 1204, column: 9, scope: !8099)
!8107 = !DILocation(line: 1204, column: 39, scope: !8099)
!8108 = distinct !DISubprogram(name: "getName", linkageName: "_ZNK12cNamedObject7getNameEv", scope: !2021, file: !2020, line: 117, type: !8109, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8113, retainedNodes: !324)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!167, !8111}
!8111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8112, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!8112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2021)
!8113 = !DISubprogram(name: "getName", linkageName: "_ZNK12cNamedObject7getNameEv", scope: !2021, file: !2020, line: 117, type: !8109, scopeLine: 117, containingType: !2021, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8114 = !DILocalVariable(name: "this", arg: 1, scope: !8108, type: !8115, flags: DIFlagArtificial | DIFlagObjectPointer)
!8115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8112, size: 64)
!8116 = !DILocation(line: 0, scope: !8108)
!8117 = !DILocation(line: 117, column: 50, scope: !8108)
!8118 = !DILocation(line: 117, column: 58, scope: !8108)
!8119 = !DILocation(line: 117, column: 43, scope: !8108)
!8120 = distinct !DISubprogram(name: "getOwner", linkageName: "_ZNK12cOwnedObject8getOwnerEv", scope: !8122, file: !8121, line: 193, type: !8123, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8128, retainedNodes: !324)
!8121 = !DIFile(filename: "simulator/cownedobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/520.omnetpp_r/build/build_base_ld-loop-ext-m64.0000")
!8122 = !DICompositeType(tag: DW_TAG_class_type, name: "cOwnedObject", file: !8121, line: 108, flags: DIFlagFwdDecl)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!8125, !8126}
!8125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!8126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8127, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!8127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8122)
!8128 = !DISubprogram(name: "getOwner", linkageName: "_ZNK12cOwnedObject8getOwnerEv", scope: !8122, file: !8121, line: 193, type: !8123, scopeLine: 193, containingType: !8122, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8129 = !DILocalVariable(name: "this", arg: 1, scope: !8120, type: !8130, flags: DIFlagArtificial | DIFlagObjectPointer)
!8130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8127, size: 64)
!8131 = !DILocation(line: 0, scope: !8120)
!8132 = !DILocation(line: 193, column: 47, scope: !8120)
!8133 = !DILocation(line: 193, column: 40, scope: !8120)
!8134 = distinct !DISubprogram(name: "isOwnedObject", linkageName: "_ZNK12cOwnedObject13isOwnedObjectEv", scope: !8122, file: !8121, line: 198, type: !8135, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8137, retainedNodes: !324)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!13, !8126}
!8137 = !DISubprogram(name: "isOwnedObject", linkageName: "_ZNK12cOwnedObject13isOwnedObjectEv", scope: !8122, file: !8121, line: 198, type: !8135, scopeLine: 198, containingType: !8122, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8138 = !DILocalVariable(name: "this", arg: 1, scope: !8134, type: !8130, flags: DIFlagArtificial | DIFlagObjectPointer)
!8139 = !DILocation(line: 0, scope: !8134)
!8140 = !DILocation(line: 198, column: 41, scope: !8134)
!8141 = distinct !DISubprogram(name: "getNamePooling", linkageName: "_ZN12cNamedObject14getNamePoolingEv", scope: !2021, file: !2020, line: 128, type: !8142, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8144, retainedNodes: !324)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!13, !7302}
!8144 = !DISubprogram(name: "getNamePooling", linkageName: "_ZN12cNamedObject14getNamePoolingEv", scope: !2021, file: !2020, line: 128, type: !8142, scopeLine: 128, containingType: !2021, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8145 = !DILocalVariable(name: "this", arg: 1, scope: !8141, type: !7305, flags: DIFlagArtificial | DIFlagObjectPointer)
!8146 = !DILocation(line: 0, scope: !8141)
!8147 = !DILocation(line: 128, column: 43, scope: !8141)
!8148 = !DILocation(line: 128, column: 48, scope: !8141)
!8149 = !DILocation(line: 128, column: 36, scope: !8141)
!8150 = distinct !DISubprogram(name: "isSoftOwner", linkageName: "_ZNK12cDefaultList11isSoftOwnerEv", scope: !2026, file: !2025, line: 95, type: !8151, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8155, retainedNodes: !324)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!13, !8153}
!8153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8154, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!8154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2026)
!8155 = !DISubprogram(name: "isSoftOwner", linkageName: "_ZNK12cDefaultList11isSoftOwnerEv", scope: !2026, file: !2025, line: 95, type: !8151, scopeLine: 95, containingType: !2026, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8156 = !DILocalVariable(name: "this", arg: 1, scope: !8150, type: !8157, flags: DIFlagArtificial | DIFlagObjectPointer)
!8157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8154, size: 64)
!8158 = !DILocation(line: 0, scope: !8150)
!8159 = !DILocation(line: 95, column: 39, scope: !8150)
!8160 = distinct !DISubprogram(name: "setPerformFinalGC", linkageName: "_ZN12cDefaultList17setPerformFinalGCEb", scope: !2026, file: !2025, line: 154, type: !8161, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8164, retainedNodes: !324)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{null, !8163, !13}
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!8164 = !DISubprogram(name: "setPerformFinalGC", linkageName: "_ZN12cDefaultList17setPerformFinalGCEb", scope: !2026, file: !2025, line: 154, type: !8161, scopeLine: 154, containingType: !2026, virtualIndex: 24, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8165 = !DILocalVariable(name: "this", arg: 1, scope: !8160, type: !8166, flags: DIFlagArtificial | DIFlagObjectPointer)
!8166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!8167 = !DILocation(line: 0, scope: !8160)
!8168 = !DILocalVariable(name: "b", arg: 2, scope: !8160, file: !2025, line: 154, type: !13)
!8169 = !DILocation(line: 154, column: 41, scope: !8160)
!8170 = !DILocation(line: 154, column: 46, scope: !8160)
!8171 = !DILocation(line: 154, column: 72, scope: !8160)
!8172 = !DILocation(line: 154, column: 75, scope: !8160)
!8173 = distinct !DISubprogram(name: "initialize", linkageName: "_ZN10cComponent10initializeEi", scope: !104, file: !105, line: 124, type: !8174, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8177, retainedNodes: !324)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{null, !8176, !11}
!8176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!8177 = !DISubprogram(name: "initialize", linkageName: "_ZN10cComponent10initializeEi", scope: !104, file: !105, line: 124, type: !8174, scopeLine: 124, containingType: !104, virtualIndex: 28, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8178 = !DILocalVariable(name: "this", arg: 1, scope: !8173, type: !7227, flags: DIFlagArtificial | DIFlagObjectPointer)
!8179 = !DILocation(line: 0, scope: !8173)
!8180 = !DILocalVariable(name: "stage", arg: 2, scope: !8173, file: !105, line: 124, type: !11)
!8181 = !DILocation(line: 124, column: 33, scope: !8173)
!8182 = !DILocation(line: 124, column: 45, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8173, file: !105, line: 124, column: 45)
!8184 = !DILocation(line: 124, column: 50, scope: !8183)
!8185 = !DILocation(line: 124, column: 45, scope: !8173)
!8186 = !DILocation(line: 124, column: 55, scope: !8183)
!8187 = !DILocation(line: 124, column: 68, scope: !8173)
!8188 = distinct !DISubprogram(name: "numInitStages", linkageName: "_ZNK10cComponent13numInitStagesEv", scope: !104, file: !105, line: 131, type: !8189, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8191, retainedNodes: !324)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!11, !7292}
!8191 = !DISubprogram(name: "numInitStages", linkageName: "_ZNK10cComponent13numInitStagesEv", scope: !104, file: !105, line: 131, type: !8189, scopeLine: 131, containingType: !104, virtualIndex: 29, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8192 = !DILocalVariable(name: "this", arg: 1, scope: !8188, type: !7232, flags: DIFlagArtificial | DIFlagObjectPointer)
!8193 = !DILocation(line: 0, scope: !8188)
!8194 = !DILocation(line: 131, column: 41, scope: !8188)
!8195 = distinct !DISubprogram(name: "isModule", linkageName: "_ZNK7cModule8isModuleEv", scope: !101, file: !100, line: 449, type: !1205, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1437, retainedNodes: !324)
!8196 = !DILocalVariable(name: "this", arg: 1, scope: !8195, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!8197 = !DILocation(line: 0, scope: !8195)
!8198 = !DILocation(line: 449, column: 37, scope: !8195)
!8199 = distinct !DISubprogram(name: "getNumParams", linkageName: "_ZNK10cComponent12getNumParamsEv", scope: !104, file: !105, line: 274, type: !8189, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8200, retainedNodes: !324)
!8200 = !DISubprogram(name: "getNumParams", linkageName: "_ZNK10cComponent12getNumParamsEv", scope: !104, file: !105, line: 274, type: !8189, scopeLine: 274, containingType: !104, virtualIndex: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual)
!8201 = !DILocalVariable(name: "this", arg: 1, scope: !8199, type: !7232, flags: DIFlagArtificial | DIFlagObjectPointer)
!8202 = !DILocation(line: 0, scope: !8199)
!8203 = !DILocation(line: 274, column: 47, scope: !8199)
!8204 = !DILocation(line: 274, column: 40, scope: !8199)
!8205 = distinct !DISubprogram(name: "doBuildInside", linkageName: "_ZN7cModule13doBuildInsideEv", scope: !101, file: !100, line: 313, type: !1365, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1401, retainedNodes: !324)
!8206 = !DILocalVariable(name: "this", arg: 1, scope: !8205, type: !120, flags: DIFlagArtificial | DIFlagObjectPointer)
!8207 = !DILocation(line: 0, scope: !8205)
!8208 = !DILocation(line: 313, column: 35, scope: !8205)
!8209 = distinct !DISubprogram(name: "isPlaceholder", linkageName: "_ZNK7cModule13isPlaceholderEv", scope: !101, file: !100, line: 455, type: !1205, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1438, retainedNodes: !324)
!8210 = !DILocalVariable(name: "this", arg: 1, scope: !8209, type: !113, flags: DIFlagArtificial | DIFlagObjectPointer)
!8211 = !DILocation(line: 0, scope: !8209)
!8212 = !DILocation(line: 455, column: 42, scope: !8209)
!8213 = distinct !DISubprogram(name: "init", linkageName: "_ZN7cModule17SubmoduleIterator4initEPKS_", scope: !3919, file: !100, line: 140, type: !3923, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !3926, retainedNodes: !324)
!8214 = !DILocalVariable(name: "this", arg: 1, scope: !8213, type: !4061, flags: DIFlagArtificial | DIFlagObjectPointer)
!8215 = !DILocation(line: 0, scope: !8213)
!8216 = !DILocalVariable(name: "m", arg: 2, scope: !8213, file: !100, line: 140, type: !113)
!8217 = !DILocation(line: 140, column: 34, scope: !8213)
!8218 = !DILocation(line: 140, column: 43, scope: !8213)
!8219 = !DILocation(line: 140, column: 69, scope: !8213)
!8220 = !DILocation(line: 140, column: 72, scope: !8213)
!8221 = !DILocation(line: 140, column: 39, scope: !8213)
!8222 = !DILocation(line: 140, column: 41, scope: !8213)
!8223 = !DILocation(line: 140, column: 93, scope: !8213)
!8224 = distinct !DISubprogram(name: "~cException", linkageName: "_ZN10cExceptionD2Ev", scope: !7676, file: !2031, line: 122, type: !7692, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7718, retainedNodes: !324)
!8225 = !DILocalVariable(name: "this", arg: 1, scope: !8224, type: !7716, flags: DIFlagArtificial | DIFlagObjectPointer)
!8226 = !DILocation(line: 0, scope: !8224)
!8227 = !DILocation(line: 122, column: 35, scope: !8224)
!8228 = !DILocation(line: 122, column: 36, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8224, file: !2031, line: 122, column: 35)
!8230 = !DILocation(line: 122, column: 36, scope: !8224)
!8231 = distinct !DISubprogram(name: "~cException", linkageName: "_ZN10cExceptionD0Ev", scope: !7676, file: !2031, line: 122, type: !7692, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7718, retainedNodes: !324)
!8232 = !DILocalVariable(name: "this", arg: 1, scope: !8231, type: !7716, flags: DIFlagArtificial | DIFlagObjectPointer)
!8233 = !DILocation(line: 0, scope: !8231)
!8234 = !DILocation(line: 122, column: 35, scope: !8231)
!8235 = !DILocation(line: 122, column: 36, scope: !8231)
!8236 = distinct !DISubprogram(name: "what", linkageName: "_ZNK10cException4whatEv", scope: !7676, file: !2031, line: 136, type: !7723, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7722, retainedNodes: !324)
!8237 = !DILocalVariable(name: "this", arg: 1, scope: !8236, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7712, size: 64)
!8239 = !DILocation(line: 0, scope: !8236)
!8240 = !DILocation(line: 136, column: 54, scope: !8236)
!8241 = !DILocation(line: 136, column: 58, scope: !8236)
!8242 = !DILocation(line: 136, column: 47, scope: !8236)
!8243 = distinct !DISubprogram(name: "dup", linkageName: "_ZNK10cException3dupEv", scope: !7676, file: !2031, line: 117, type: !7714, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7713, retainedNodes: !324)
!8244 = !DILocalVariable(name: "this", arg: 1, scope: !8243, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8245 = !DILocation(line: 0, scope: !8243)
!8246 = !DILocation(line: 117, column: 45, scope: !8243)
!8247 = !DILocation(line: 117, column: 49, scope: !8243)
!8248 = !DILocation(line: 117, column: 38, scope: !8243)
!8249 = !DILocation(line: 117, column: 67, scope: !8243)
!8250 = distinct !DISubprogram(name: "getErrorCode", linkageName: "_ZNK10cException12getErrorCodeEv", scope: !7676, file: !2031, line: 131, type: !7720, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7719, retainedNodes: !324)
!8251 = !DILocalVariable(name: "this", arg: 1, scope: !8250, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8252 = !DILocation(line: 0, scope: !8250)
!8253 = !DILocation(line: 131, column: 46, scope: !8250)
!8254 = !DILocation(line: 131, column: 39, scope: !8250)
!8255 = distinct !DISubprogram(name: "setMessage", linkageName: "_ZN10cException10setMessageEPKc", scope: !7676, file: !2031, line: 141, type: !7726, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7725, retainedNodes: !324)
!8256 = !DILocalVariable(name: "this", arg: 1, scope: !8255, type: !7716, flags: DIFlagArtificial | DIFlagObjectPointer)
!8257 = !DILocation(line: 0, scope: !8255)
!8258 = !DILocalVariable(name: "txt", arg: 2, scope: !8255, file: !2031, line: 141, type: !167)
!8259 = !DILocation(line: 141, column: 41, scope: !8255)
!8260 = !DILocation(line: 141, column: 53, scope: !8255)
!8261 = !DILocation(line: 141, column: 47, scope: !8255)
!8262 = !DILocation(line: 141, column: 51, scope: !8255)
!8263 = !DILocation(line: 141, column: 57, scope: !8255)
!8264 = distinct !DISubprogram(name: "prependMessage", linkageName: "_ZN10cException14prependMessageEPKc", scope: !7676, file: !2031, line: 146, type: !7726, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7728, retainedNodes: !324)
!8265 = !DILocalVariable(name: "this", arg: 1, scope: !8264, type: !7716, flags: DIFlagArtificial | DIFlagObjectPointer)
!8266 = !DILocation(line: 0, scope: !8264)
!8267 = !DILocalVariable(name: "txt", arg: 2, scope: !8264, file: !2031, line: 146, type: !167)
!8268 = !DILocation(line: 146, column: 45, scope: !8264)
!8269 = !DILocation(line: 146, column: 69, scope: !8264)
!8270 = !DILocation(line: 146, column: 57, scope: !8264)
!8271 = !DILocation(line: 146, column: 74, scope: !8264)
!8272 = !DILocation(line: 146, column: 83, scope: !8264)
!8273 = !DILocation(line: 146, column: 81, scope: !8264)
!8274 = !DILocation(line: 146, column: 51, scope: !8264)
!8275 = !DILocation(line: 146, column: 55, scope: !8264)
!8276 = !DILocation(line: 146, column: 87, scope: !8264)
!8277 = distinct !DISubprogram(name: "hasContext", linkageName: "_ZNK10cException10hasContextEv", scope: !7676, file: !2031, line: 153, type: !7730, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7729, retainedNodes: !324)
!8278 = !DILocalVariable(name: "this", arg: 1, scope: !8277, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8279 = !DILocation(line: 0, scope: !8277)
!8280 = !DILocation(line: 153, column: 45, scope: !8277)
!8281 = !DILocation(line: 153, column: 38, scope: !8277)
!8282 = distinct !DISubprogram(name: "getContextClassName", linkageName: "_ZNK10cException19getContextClassNameEv", scope: !7676, file: !2031, line: 159, type: !7723, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7732, retainedNodes: !324)
!8283 = !DILocalVariable(name: "this", arg: 1, scope: !8282, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8284 = !DILocation(line: 0, scope: !8282)
!8285 = !DILocation(line: 159, column: 61, scope: !8282)
!8286 = !DILocation(line: 159, column: 78, scope: !8282)
!8287 = !DILocation(line: 159, column: 54, scope: !8282)
!8288 = distinct !DISubprogram(name: "getContextFullPath", linkageName: "_ZNK10cException18getContextFullPathEv", scope: !7676, file: !2031, line: 165, type: !7723, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7733, retainedNodes: !324)
!8289 = !DILocalVariable(name: "this", arg: 1, scope: !8288, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8290 = !DILocation(line: 0, scope: !8288)
!8291 = !DILocation(line: 165, column: 60, scope: !8288)
!8292 = !DILocation(line: 165, column: 76, scope: !8288)
!8293 = !DILocation(line: 165, column: 53, scope: !8288)
!8294 = distinct !DISubprogram(name: "getModuleID", linkageName: "_ZNK10cException11getModuleIDEv", scope: !7676, file: !2031, line: 173, type: !7720, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !7734, retainedNodes: !324)
!8295 = !DILocalVariable(name: "this", arg: 1, scope: !8294, type: !8238, flags: DIFlagArtificial | DIFlagObjectPointer)
!8296 = !DILocation(line: 0, scope: !8294)
!8297 = !DILocation(line: 173, column: 45, scope: !8294)
!8298 = !DILocation(line: 173, column: 38, scope: !8294)
!8299 = distinct !DISubprogram(name: "operator+<char, std::char_traits<char>, std::allocator<char> >", linkageName: "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_", scope: !2, file: !4537, line: 6087, type: !8300, scopeLine: 6089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !4541, retainedNodes: !324)
!8300 = !DISubroutineType(types: !8301)
!8301 = !{!109, !4540, !8302}
!8302 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !8303, size: 64)
!8303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!8304 = !DILocalVariable(name: "__lhs", arg: 1, scope: !8299, file: !4537, line: 6087, type: !4540)
!8305 = !DILocation(line: 6087, column: 55, scope: !8299)
!8306 = !DILocalVariable(name: "__rhs", arg: 2, scope: !8299, file: !4537, line: 6088, type: !8302)
!8307 = !DILocation(line: 6088, column: 53, scope: !8299)
!8308 = !DILocation(line: 6089, column: 24, scope: !8299)
!8309 = !DILocation(line: 6089, column: 37, scope: !8299)
!8310 = !DILocation(line: 6089, column: 30, scope: !8299)
!8311 = !DILocation(line: 6089, column: 14, scope: !8299)
!8312 = !DILocation(line: 6089, column: 7, scope: !8299)
!8313 = distinct !DISubprogram(name: "move<std::__cxx11::basic_string<char> &>", linkageName: "_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_", scope: !2, file: !8314, line: 101, type: !8315, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8320, retainedNodes: !324)
!8314 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/move.h", directory: "")
!8315 = !DISubroutineType(types: !8316)
!8316 = !{!8317, !8322}
!8317 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !8318, size: 64)
!8318 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !8319, file: !643, line: 1598, baseType: !109)
!8319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !8320, identifier: "_ZTSSt16remove_referenceIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE")
!8320 = !{!8321}
!8321 = !DITemplateTypeParameter(name: "_Tp", type: !8322)
!8322 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !109, size: 64)
!8323 = !DILocalVariable(name: "__t", arg: 1, scope: !8313, file: !8314, line: 101, type: !8322)
!8324 = !DILocation(line: 101, column: 16, scope: !8313)
!8325 = !DILocation(line: 102, column: 71, scope: !8313)
!8326 = !DILocation(line: 102, column: 7, scope: !8313)
!8327 = distinct !DISubprogram(name: "_Rb_tree", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev", scope: !131, file: !43, line: 935, type: !771, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !770, retainedNodes: !324)
!8328 = !DILocalVariable(name: "this", arg: 1, scope: !8327, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!8330 = !DILocation(line: 0, scope: !8327)
!8331 = !DILocation(line: 935, column: 7, scope: !8327)
!8332 = !DILocation(line: 935, column: 26, scope: !8327)
!8333 = distinct !DISubprogram(name: "_Rb_tree_impl", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev", scope: !134, file: !43, line: 684, type: !505, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !504, retainedNodes: !324)
!8334 = !DILocalVariable(name: "this", arg: 1, scope: !8333, type: !8335, flags: DIFlagArtificial | DIFlagObjectPointer)
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!8336 = !DILocation(line: 0, scope: !8333)
!8337 = !DILocation(line: 689, column: 4, scope: !8333)
!8338 = !DILocation(line: 688, column: 6, scope: !8333)
!8339 = !DILocation(line: 684, column: 4, scope: !8333)
!8340 = !DILocation(line: 689, column: 6, scope: !8333)
!8341 = distinct !DISubprogram(name: "allocator", linkageName: "_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev", scope: !394, file: !227, line: 144, type: !436, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !435, retainedNodes: !324)
!8342 = !DILocalVariable(name: "this", arg: 1, scope: !8341, type: !8343, flags: DIFlagArtificial | DIFlagObjectPointer)
!8343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!8344 = !DILocation(line: 0, scope: !8341)
!8345 = !DILocation(line: 144, column: 36, scope: !8341)
!8346 = !DILocation(line: 144, column: 7, scope: !8341)
!8347 = !DILocation(line: 144, column: 38, scope: !8341)
!8348 = distinct !DISubprogram(name: "_Rb_tree_key_compare", linkageName: "_ZNSt20_Rb_tree_key_compareISt4lessIN5cGate4NameEEEC2Ev", scope: !450, file: !43, line: 146, type: !468, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !467, retainedNodes: !324)
!8349 = !DILocalVariable(name: "this", arg: 1, scope: !8348, type: !8350, flags: DIFlagArtificial | DIFlagObjectPointer)
!8350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!8351 = !DILocation(line: 0, scope: !8348)
!8352 = !DILocation(line: 149, column: 9, scope: !8348)
!8353 = !DILocation(line: 150, column: 9, scope: !8348)
!8354 = distinct !DISubprogram(name: "_Rb_tree_header", linkageName: "_ZNSt15_Rb_tree_headerC2Ev", scope: !487, file: !43, line: 173, type: !492, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !491, retainedNodes: !324)
!8355 = !DILocalVariable(name: "this", arg: 1, scope: !8354, type: !8356, flags: DIFlagArtificial | DIFlagObjectPointer)
!8356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!8357 = !DILocation(line: 0, scope: !8354)
!8358 = !DILocation(line: 173, column: 5, scope: !8354)
!8359 = !DILocation(line: 175, column: 7, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8354, file: !43, line: 174, column: 5)
!8361 = !DILocation(line: 175, column: 17, scope: !8360)
!8362 = !DILocation(line: 175, column: 26, scope: !8360)
!8363 = !DILocation(line: 176, column: 7, scope: !8360)
!8364 = !DILocation(line: 177, column: 5, scope: !8354)
!8365 = distinct !DISubprogram(name: "new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEEC2Ev", scope: !398, file: !233, line: 79, type: !401, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !400, retainedNodes: !324)
!8366 = !DILocalVariable(name: "this", arg: 1, scope: !8365, type: !8367, flags: DIFlagArtificial | DIFlagObjectPointer)
!8367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!8368 = !DILocation(line: 0, scope: !8365)
!8369 = !DILocation(line: 79, column: 47, scope: !8365)
!8370 = distinct !DISubprogram(name: "_M_reset", linkageName: "_ZNSt15_Rb_tree_header8_M_resetEv", scope: !487, file: !43, line: 206, type: !492, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !503, retainedNodes: !324)
!8371 = !DILocalVariable(name: "this", arg: 1, scope: !8370, type: !8356, flags: DIFlagArtificial | DIFlagObjectPointer)
!8372 = !DILocation(line: 0, scope: !8370)
!8373 = !DILocation(line: 208, column: 7, scope: !8370)
!8374 = !DILocation(line: 208, column: 17, scope: !8370)
!8375 = !DILocation(line: 208, column: 27, scope: !8370)
!8376 = !DILocation(line: 209, column: 28, scope: !8370)
!8377 = !DILocation(line: 209, column: 7, scope: !8370)
!8378 = !DILocation(line: 209, column: 17, scope: !8370)
!8379 = !DILocation(line: 209, column: 25, scope: !8370)
!8380 = !DILocation(line: 210, column: 29, scope: !8370)
!8381 = !DILocation(line: 210, column: 7, scope: !8370)
!8382 = !DILocation(line: 210, column: 17, scope: !8370)
!8383 = !DILocation(line: 210, column: 26, scope: !8370)
!8384 = !DILocation(line: 211, column: 7, scope: !8370)
!8385 = !DILocation(line: 211, column: 21, scope: !8370)
!8386 = !DILocation(line: 212, column: 5, scope: !8370)
!8387 = distinct !DISubprogram(name: "~_Rb_tree", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev", scope: !131, file: !43, line: 990, type: !771, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !831, retainedNodes: !324)
!8388 = !DILocalVariable(name: "this", arg: 1, scope: !8387, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8389 = !DILocation(line: 0, scope: !8387)
!8390 = !DILocation(line: 991, column: 18, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8387, file: !43, line: 991, column: 7)
!8392 = !DILocation(line: 991, column: 9, scope: !8391)
!8393 = !DILocation(line: 991, column: 31, scope: !8391)
!8394 = !DILocation(line: 991, column: 31, scope: !8387)
!8395 = distinct !DISubprogram(name: "_M_erase", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 1914, type: !550, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !761, retainedNodes: !324)
!8396 = !DILocalVariable(name: "this", arg: 1, scope: !8395, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8397 = !DILocation(line: 0, scope: !8395)
!8398 = !DILocalVariable(name: "__x", arg: 2, scope: !8395, file: !43, line: 912, type: !548)
!8399 = !DILocation(line: 912, column: 27, scope: !8395)
!8400 = !DILocation(line: 1917, column: 7, scope: !8395)
!8401 = !DILocation(line: 1917, column: 14, scope: !8395)
!8402 = !DILocation(line: 1917, column: 18, scope: !8395)
!8403 = !DILocation(line: 1919, column: 22, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8395, file: !43, line: 1918, column: 2)
!8405 = !DILocation(line: 1919, column: 13, scope: !8404)
!8406 = !DILocation(line: 1919, column: 4, scope: !8404)
!8407 = !DILocalVariable(name: "__y", scope: !8404, file: !43, line: 1920, type: !548)
!8408 = !DILocation(line: 1920, column: 15, scope: !8404)
!8409 = !DILocation(line: 1920, column: 29, scope: !8404)
!8410 = !DILocation(line: 1920, column: 21, scope: !8404)
!8411 = !DILocation(line: 1921, column: 17, scope: !8404)
!8412 = !DILocation(line: 1921, column: 4, scope: !8404)
!8413 = !DILocation(line: 1922, column: 10, scope: !8404)
!8414 = !DILocation(line: 1922, column: 8, scope: !8404)
!8415 = distinct !{!8415, !8400, !8416}
!8416 = !DILocation(line: 1923, column: 2, scope: !8395)
!8417 = !DILocation(line: 1924, column: 5, scope: !8395)
!8418 = distinct !DISubprogram(name: "_M_begin", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv", scope: !131, file: !43, line: 748, type: !546, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !567, retainedNodes: !324)
!8419 = !DILocalVariable(name: "this", arg: 1, scope: !8418, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8420 = !DILocation(line: 0, scope: !8418)
!8421 = !DILocation(line: 749, column: 46, scope: !8418)
!8422 = !DILocation(line: 749, column: 40, scope: !8418)
!8423 = !DILocation(line: 749, column: 54, scope: !8418)
!8424 = !DILocation(line: 749, column: 64, scope: !8418)
!8425 = !DILocation(line: 749, column: 16, scope: !8418)
!8426 = !DILocation(line: 749, column: 9, scope: !8418)
!8427 = distinct !DISubprogram(name: "~_Rb_tree_impl", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev", scope: !134, file: !43, line: 677, type: !505, scopeLine: 677, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8428, retainedNodes: !324)
!8428 = !DISubprogram(name: "~_Rb_tree_impl", scope: !134, type: !505, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: 0)
!8429 = !DILocalVariable(name: "this", arg: 1, scope: !8427, type: !8335, flags: DIFlagArtificial | DIFlagObjectPointer)
!8430 = !DILocation(line: 0, scope: !8427)
!8431 = !DILocation(line: 677, column: 9, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !43, line: 677, column: 9)
!8433 = !DILocation(line: 677, column: 9, scope: !8427)
!8434 = distinct !DISubprogram(name: "_S_right", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base", scope: !131, file: !43, line: 797, type: !580, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !585, retainedNodes: !324)
!8435 = !DILocalVariable(name: "__x", arg: 1, scope: !8434, file: !43, line: 797, type: !558)
!8436 = !DILocation(line: 797, column: 26, scope: !8434)
!8437 = !DILocation(line: 798, column: 40, scope: !8434)
!8438 = !DILocation(line: 798, column: 45, scope: !8434)
!8439 = !DILocation(line: 798, column: 16, scope: !8434)
!8440 = !DILocation(line: 798, column: 9, scope: !8434)
!8441 = distinct !DISubprogram(name: "_S_left", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base", scope: !131, file: !43, line: 789, type: !580, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !579, retainedNodes: !324)
!8442 = !DILocalVariable(name: "__x", arg: 1, scope: !8441, file: !43, line: 789, type: !558)
!8443 = !DILocation(line: 789, column: 25, scope: !8441)
!8444 = !DILocation(line: 790, column: 40, scope: !8441)
!8445 = !DILocation(line: 790, column: 45, scope: !8441)
!8446 = !DILocation(line: 790, column: 16, scope: !8441)
!8447 = !DILocation(line: 790, column: 9, scope: !8441)
!8448 = distinct !DISubprogram(name: "_M_drop_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 652, type: !550, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !553, retainedNodes: !324)
!8449 = !DILocalVariable(name: "this", arg: 1, scope: !8448, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8450 = !DILocation(line: 0, scope: !8448)
!8451 = !DILocalVariable(name: "__p", arg: 2, scope: !8448, file: !43, line: 652, type: !548)
!8452 = !DILocation(line: 652, column: 31, scope: !8448)
!8453 = !DILocation(line: 654, column: 18, scope: !8448)
!8454 = !DILocation(line: 654, column: 2, scope: !8448)
!8455 = !DILocation(line: 655, column: 14, scope: !8448)
!8456 = !DILocation(line: 655, column: 2, scope: !8448)
!8457 = !DILocation(line: 656, column: 7, scope: !8448)
!8458 = distinct !DISubprogram(name: "_M_destroy_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 641, type: !550, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !552, retainedNodes: !324)
!8459 = !DILocalVariable(name: "this", arg: 1, scope: !8458, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8460 = !DILocation(line: 0, scope: !8458)
!8461 = !DILocalVariable(name: "__p", arg: 2, scope: !8458, file: !43, line: 641, type: !548)
!8462 = !DILocation(line: 641, column: 34, scope: !8458)
!8463 = !DILocation(line: 646, column: 25, scope: !8458)
!8464 = !DILocation(line: 646, column: 50, scope: !8458)
!8465 = !DILocation(line: 646, column: 55, scope: !8458)
!8466 = !DILocation(line: 646, column: 2, scope: !8458)
!8467 = !DILocation(line: 647, column: 2, scope: !8458)
!8468 = !DILocation(line: 649, column: 7, scope: !8458)
!8469 = distinct !DISubprogram(name: "_M_put_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 587, type: !550, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !549, retainedNodes: !324)
!8470 = !DILocalVariable(name: "this", arg: 1, scope: !8469, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8471 = !DILocation(line: 0, scope: !8469)
!8472 = !DILocalVariable(name: "__p", arg: 2, scope: !8469, file: !43, line: 587, type: !548)
!8473 = !DILocation(line: 587, column: 30, scope: !8469)
!8474 = !DILocation(line: 588, column: 35, scope: !8469)
!8475 = !DILocation(line: 588, column: 60, scope: !8469)
!8476 = !DILocation(line: 588, column: 9, scope: !8469)
!8477 = !DILocation(line: 588, column: 69, scope: !8469)
!8478 = distinct !DISubprogram(name: "destroy<cGate::Name>", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE7destroyIS2_EEvRS4_PT_", scope: !8479, file: !146, line: 527, type: !8504, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8507, declaration: !8506, retainedNodes: !324)
!8479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "allocator_traits<std::allocator<std::_Rb_tree_node<cGate::Name> > >", scope: !2, file: !146, line: 407, size: 8, flags: DIFlagTypePassByValue, elements: !8480, templateParams: !8502, identifier: "_ZTSSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE")
!8480 = !{!8481, !8487, !8490, !8493, !8499}
!8481 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8allocateERS4_m", scope: !8479, file: !146, line: 459, type: !8482, scopeLine: 459, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!8484, !8485, !290}
!8484 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !8479, file: !146, line: 416, baseType: !414)
!8485 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !8486, size: 64)
!8486 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !8479, file: !146, line: 410, baseType: !394)
!8487 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8allocateERS4_mPKv", scope: !8479, file: !146, line: 473, type: !8488, scopeLine: 473, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!8484, !8485, !290, !294}
!8490 = !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE10deallocateERS4_PS3_m", scope: !8479, file: !146, line: 491, type: !8491, scopeLine: 491, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!8491 = !DISubroutineType(types: !8492)
!8492 = !{null, !8485, !8484, !290}
!8493 = !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8max_sizeERKS4_", scope: !8479, file: !146, line: 543, type: !8494, scopeLine: 543, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{!8496, !8497}
!8496 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !8479, file: !146, line: 431, baseType: !262)
!8497 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !8498, size: 64)
!8498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8486)
!8499 = !DISubprogram(name: "select_on_container_copy_construction", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE37select_on_container_copy_constructionERKS4_", scope: !8479, file: !146, line: 558, type: !8500, scopeLine: 558, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!8486, !8497}
!8502 = !{!8503}
!8503 = !DITemplateTypeParameter(name: "_Alloc", type: !394)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{null, !8485, !152}
!8506 = !DISubprogram(name: "destroy<cGate::Name>", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE7destroyIS2_EEvRS4_PT_", scope: !8479, file: !146, line: 527, type: !8504, scopeLine: 527, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0, templateParams: !8507)
!8507 = !{!8508}
!8508 = !DITemplateTypeParameter(name: "_Up", type: !153)
!8509 = !DILocalVariable(name: "__a", arg: 1, scope: !8478, file: !146, line: 527, type: !8485)
!8510 = !DILocation(line: 527, column: 26, scope: !8478)
!8511 = !DILocalVariable(name: "__p", arg: 2, scope: !8478, file: !146, line: 527, type: !152)
!8512 = !DILocation(line: 527, column: 64, scope: !8478)
!8513 = !DILocation(line: 531, column: 4, scope: !8478)
!8514 = !DILocation(line: 531, column: 16, scope: !8478)
!8515 = !DILocation(line: 531, column: 8, scope: !8478)
!8516 = !DILocation(line: 535, column: 2, scope: !8478)
!8517 = distinct !DISubprogram(name: "_M_get_Node_allocator", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv", scope: !131, file: !43, line: 570, type: !530, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !529, retainedNodes: !324)
!8518 = !DILocalVariable(name: "this", arg: 1, scope: !8517, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8519 = !DILocation(line: 0, scope: !8517)
!8520 = !DILocation(line: 571, column: 22, scope: !8517)
!8521 = !DILocation(line: 571, column: 16, scope: !8517)
!8522 = !DILocation(line: 571, column: 9, scope: !8517)
!8523 = distinct !DISubprogram(name: "_M_valptr", linkageName: "_ZNSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv", scope: !327, file: !43, line: 234, type: !383, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !382, retainedNodes: !324)
!8524 = !DILocalVariable(name: "this", arg: 1, scope: !8523, type: !414, flags: DIFlagArtificial | DIFlagObjectPointer)
!8525 = !DILocation(line: 0, scope: !8523)
!8526 = !DILocation(line: 235, column: 16, scope: !8523)
!8527 = !DILocation(line: 235, column: 27, scope: !8523)
!8528 = !DILocation(line: 235, column: 9, scope: !8523)
!8529 = distinct !DISubprogram(name: "destroy<cGate::Name>", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7destroyIS3_EEvPT_", scope: !398, file: !233, line: 154, type: !8530, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8507, declaration: !8532, retainedNodes: !324)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{null, !403, !152}
!8532 = !DISubprogram(name: "destroy<cGate::Name>", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE7destroyIS3_EEvPT_", scope: !398, file: !233, line: 154, type: !8530, scopeLine: 154, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !8507)
!8533 = !DILocalVariable(name: "this", arg: 1, scope: !8529, type: !8367, flags: DIFlagArtificial | DIFlagObjectPointer)
!8534 = !DILocation(line: 0, scope: !8529)
!8535 = !DILocalVariable(name: "__p", arg: 2, scope: !8529, file: !233, line: 154, type: !152)
!8536 = !DILocation(line: 154, column: 15, scope: !8529)
!8537 = !DILocation(line: 156, column: 4, scope: !8529)
!8538 = !DILocation(line: 156, column: 10, scope: !8529)
!8539 = !DILocation(line: 156, column: 17, scope: !8529)
!8540 = distinct !DISubprogram(name: "_M_ptr", linkageName: "_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv", scope: !350, file: !351, line: 72, type: !377, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !376, retainedNodes: !324)
!8541 = !DILocalVariable(name: "this", arg: 1, scope: !8540, type: !8542, flags: DIFlagArtificial | DIFlagObjectPointer)
!8542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!8543 = !DILocation(line: 0, scope: !8540)
!8544 = !DILocation(line: 73, column: 34, scope: !8540)
!8545 = !DILocation(line: 73, column: 16, scope: !8540)
!8546 = !DILocation(line: 73, column: 9, scope: !8540)
!8547 = distinct !DISubprogram(name: "_M_addr", linkageName: "_ZN9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv", scope: !350, file: !351, line: 64, type: !368, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !367, retainedNodes: !324)
!8548 = !DILocalVariable(name: "this", arg: 1, scope: !8547, type: !8542, flags: DIFlagArtificial | DIFlagObjectPointer)
!8549 = !DILocation(line: 0, scope: !8547)
!8550 = !DILocation(line: 65, column: 36, scope: !8547)
!8551 = !DILocation(line: 65, column: 35, scope: !8547)
!8552 = !DILocation(line: 65, column: 9, scope: !8547)
!8553 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE10deallocateERS4_PS3_m", scope: !8479, file: !146, line: 491, type: !8491, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8490, retainedNodes: !324)
!8554 = !DILocalVariable(name: "__a", arg: 1, scope: !8553, file: !146, line: 491, type: !8485)
!8555 = !DILocation(line: 491, column: 34, scope: !8553)
!8556 = !DILocalVariable(name: "__p", arg: 2, scope: !8553, file: !146, line: 491, type: !8484)
!8557 = !DILocation(line: 491, column: 47, scope: !8553)
!8558 = !DILocalVariable(name: "__n", arg: 3, scope: !8553, file: !146, line: 491, type: !290)
!8559 = !DILocation(line: 491, column: 62, scope: !8553)
!8560 = !DILocation(line: 492, column: 9, scope: !8553)
!8561 = !DILocation(line: 492, column: 24, scope: !8553)
!8562 = !DILocation(line: 492, column: 29, scope: !8553)
!8563 = !DILocation(line: 492, column: 13, scope: !8553)
!8564 = !DILocation(line: 492, column: 35, scope: !8553)
!8565 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE10deallocateEPS4_m", scope: !398, file: !233, line: 120, type: !429, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !428, retainedNodes: !324)
!8566 = !DILocalVariable(name: "this", arg: 1, scope: !8565, type: !8367, flags: DIFlagArtificial | DIFlagObjectPointer)
!8567 = !DILocation(line: 0, scope: !8565)
!8568 = !DILocalVariable(name: "__p", arg: 2, scope: !8565, file: !233, line: 120, type: !414)
!8569 = !DILocation(line: 120, column: 23, scope: !8565)
!8570 = !DILocalVariable(name: "__t", arg: 3, scope: !8565, file: !233, line: 120, type: !261)
!8571 = !DILocation(line: 120, column: 38, scope: !8565)
!8572 = !DILocation(line: 133, column: 20, scope: !8565)
!8573 = !DILocation(line: 133, column: 2, scope: !8565)
!8574 = !DILocation(line: 138, column: 7, scope: !8565)
!8575 = distinct !DISubprogram(name: "~allocator", linkageName: "_ZNSaISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev", scope: !394, file: !227, line: 162, type: !436, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !448, retainedNodes: !324)
!8576 = !DILocalVariable(name: "this", arg: 1, scope: !8575, type: !8343, flags: DIFlagArtificial | DIFlagObjectPointer)
!8577 = !DILocation(line: 0, scope: !8575)
!8578 = !DILocation(line: 162, column: 39, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8575, file: !227, line: 162, column: 37)
!8580 = !DILocation(line: 162, column: 39, scope: !8575)
!8581 = distinct !DISubprogram(name: "~new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEED2Ev", scope: !398, file: !233, line: 89, type: !401, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !409, retainedNodes: !324)
!8582 = !DILocalVariable(name: "this", arg: 1, scope: !8581, type: !8367, flags: DIFlagArtificial | DIFlagObjectPointer)
!8583 = !DILocation(line: 0, scope: !8581)
!8584 = !DILocation(line: 89, column: 48, scope: !8581)
!8585 = distinct !DISubprogram(name: "_Vector_base", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EEC2Ev", scope: !1500, file: !1497, line: 288, type: !1668, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1667, retainedNodes: !324)
!8586 = !DILocalVariable(name: "this", arg: 1, scope: !8585, type: !8587, flags: DIFlagArtificial | DIFlagObjectPointer)
!8587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!8588 = !DILocation(line: 0, scope: !8585)
!8589 = !DILocation(line: 288, column: 7, scope: !8585)
!8590 = !DILocation(line: 288, column: 30, scope: !8585)
!8591 = distinct !DISubprogram(name: "_Vector_impl", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC2Ev", scope: !1503, file: !1497, line: 131, type: !1634, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1633, retainedNodes: !324)
!8592 = !DILocalVariable(name: "this", arg: 1, scope: !8591, type: !8593, flags: DIFlagArtificial | DIFlagObjectPointer)
!8593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!8594 = !DILocation(line: 0, scope: !8591)
!8595 = !DILocation(line: 134, column: 2, scope: !8591)
!8596 = !DILocation(line: 133, column: 4, scope: !8591)
!8597 = !DILocation(line: 131, column: 2, scope: !8591)
!8598 = !DILocation(line: 134, column: 4, scope: !8591)
!8599 = distinct !DISubprogram(name: "allocator", linkageName: "_ZNSaIPKcEC2Ev", scope: !1521, file: !227, line: 144, type: !1564, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1563, retainedNodes: !324)
!8600 = !DILocalVariable(name: "this", arg: 1, scope: !8599, type: !8601, flags: DIFlagArtificial | DIFlagObjectPointer)
!8601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!8602 = !DILocation(line: 0, scope: !8599)
!8603 = !DILocation(line: 144, column: 36, scope: !8599)
!8604 = !DILocation(line: 144, column: 7, scope: !8599)
!8605 = !DILocation(line: 144, column: 38, scope: !8599)
!8606 = distinct !DISubprogram(name: "_Vector_impl_data", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev", scope: !1609, file: !1497, line: 97, type: !1617, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1616, retainedNodes: !324)
!8607 = !DILocalVariable(name: "this", arg: 1, scope: !8606, type: !8608, flags: DIFlagArtificial | DIFlagObjectPointer)
!8608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!8609 = !DILocation(line: 0, scope: !8606)
!8610 = !DILocation(line: 98, column: 4, scope: !8606)
!8611 = !DILocation(line: 98, column: 16, scope: !8606)
!8612 = !DILocation(line: 98, column: 29, scope: !8606)
!8613 = !DILocation(line: 99, column: 4, scope: !8606)
!8614 = distinct !DISubprogram(name: "new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcEC2Ev", scope: !1525, file: !233, line: 79, type: !1528, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1527, retainedNodes: !324)
!8615 = !DILocalVariable(name: "this", arg: 1, scope: !8614, type: !8616, flags: DIFlagArtificial | DIFlagObjectPointer)
!8616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!8617 = !DILocation(line: 0, scope: !8614)
!8618 = !DILocation(line: 79, column: 47, scope: !8614)
!8619 = distinct !DISubprogram(name: "indexOf", linkageName: "_ZNK5cGate4Desc7indexOfEPKS_", scope: !1138, file: !34, line: 113, type: !1172, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1171, retainedNodes: !324)
!8620 = !DILocalVariable(name: "this", arg: 1, scope: !8619, type: !4771, flags: DIFlagArtificial | DIFlagObjectPointer)
!8621 = !DILocation(line: 0, scope: !8619)
!8622 = !DILocalVariable(name: "g", arg: 2, scope: !8619, file: !34, line: 113, type: !1174)
!8623 = !DILocation(line: 113, column: 34, scope: !8619)
!8624 = !DILocation(line: 113, column: 52, scope: !8619)
!8625 = !DILocation(line: 113, column: 55, scope: !8619)
!8626 = !DILocation(line: 113, column: 58, scope: !8619)
!8627 = !DILocation(line: 113, column: 62, scope: !8619)
!8628 = !DILocation(line: 113, column: 51, scope: !8619)
!8629 = !DILocation(line: 113, column: 73, scope: !8619)
!8630 = !DILocation(line: 113, column: 76, scope: !8619)
!8631 = !DILocation(line: 113, column: 79, scope: !8619)
!8632 = !DILocation(line: 113, column: 44, scope: !8619)
!8633 = distinct !DISubprogram(name: "getVectorSize", linkageName: "_ZNK5cGate13getVectorSizeEv", scope: !35, file: !34, line: 302, type: !6801, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8634, retainedNodes: !324)
!8634 = !DISubprogram(name: "getVectorSize", linkageName: "_ZNK5cGate13getVectorSizeEv", scope: !35, file: !34, line: 302, type: !6801, scopeLine: 302, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0)
!8635 = !DILocalVariable(name: "this", arg: 1, scope: !8633, type: !1174, flags: DIFlagArtificial | DIFlagObjectPointer)
!8636 = !DILocation(line: 0, scope: !8633)
!8637 = !DILocation(line: 302, column: 40, scope: !8633)
!8638 = !DILocation(line: 302, column: 46, scope: !8633)
!8639 = !DILocation(line: 302, column: 33, scope: !8633)
!8640 = distinct !DISubprogram(name: "opp_strcmp", linkageName: "_Z10opp_strcmpPKcS0_", scope: !93, file: !93, line: 318, type: !3721, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !324)
!8641 = !DILocalVariable(name: "s1", arg: 1, scope: !8640, file: !93, line: 318, type: !167)
!8642 = !DILocation(line: 318, column: 35, scope: !8640)
!8643 = !DILocalVariable(name: "s2", arg: 2, scope: !8640, file: !93, line: 318, type: !167)
!8644 = !DILocation(line: 318, column: 51, scope: !8640)
!8645 = !DILocation(line: 320, column: 9, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8640, file: !93, line: 320, column: 9)
!8647 = !DILocation(line: 320, column: 9, scope: !8640)
!8648 = !DILocation(line: 321, column: 16, scope: !8646)
!8649 = !DILocation(line: 321, column: 28, scope: !8646)
!8650 = !DILocation(line: 321, column: 31, scope: !8646)
!8651 = !DILocation(line: 321, column: 21, scope: !8646)
!8652 = !DILocation(line: 321, column: 39, scope: !8646)
!8653 = !DILocation(line: 321, column: 38, scope: !8646)
!8654 = !DILocation(line: 321, column: 9, scope: !8646)
!8655 = !DILocation(line: 323, column: 17, scope: !8646)
!8656 = !DILocation(line: 323, column: 20, scope: !8646)
!8657 = !DILocation(line: 323, column: 24, scope: !8646)
!8658 = !DILocation(line: 323, column: 23, scope: !8646)
!8659 = !DILocation(line: 0, scope: !8646)
!8660 = !DILocation(line: 323, column: 16, scope: !8646)
!8661 = !DILocation(line: 323, column: 9, scope: !8646)
!8662 = !DILocation(line: 324, column: 1, scope: !8640)
!8663 = distinct !DISubprogram(name: "opp_strdup", linkageName: "_Z10opp_strdupPKc", scope: !93, file: !93, line: 310, type: !2708, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !324)
!8664 = !DILocalVariable(name: "s", arg: 1, scope: !8663, file: !93, line: 310, type: !167)
!8665 = !DILocation(line: 310, column: 37, scope: !8663)
!8666 = !DILocation(line: 312, column: 10, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8663, file: !93, line: 312, column: 9)
!8668 = !DILocation(line: 312, column: 12, scope: !8667)
!8669 = !DILocation(line: 312, column: 16, scope: !8667)
!8670 = !DILocation(line: 312, column: 9, scope: !8663)
!8671 = !DILocation(line: 312, column: 22, scope: !8667)
!8672 = !DILocalVariable(name: "p", scope: !8663, file: !93, line: 313, type: !116)
!8673 = !DILocation(line: 313, column: 11, scope: !8663)
!8674 = !DILocation(line: 313, column: 31, scope: !8663)
!8675 = !DILocation(line: 313, column: 24, scope: !8663)
!8676 = !DILocation(line: 313, column: 33, scope: !8663)
!8677 = !DILocation(line: 313, column: 15, scope: !8663)
!8678 = !DILocation(line: 314, column: 12, scope: !8663)
!8679 = !DILocation(line: 314, column: 14, scope: !8663)
!8680 = !DILocation(line: 314, column: 5, scope: !8663)
!8681 = !DILocation(line: 315, column: 12, scope: !8663)
!8682 = !DILocation(line: 315, column: 5, scope: !8663)
!8683 = !DILocation(line: 316, column: 1, scope: !8663)
!8684 = distinct !DISubprogram(name: "vector", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EEC2Ev", scope: !2151, file: !1497, line: 487, type: !2377, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2376, retainedNodes: !324)
!8685 = !DILocalVariable(name: "this", arg: 1, scope: !8684, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!8686 = !DILocation(line: 0, scope: !8684)
!8687 = !DILocation(line: 487, column: 24, scope: !8684)
!8688 = !DILocation(line: 487, column: 7, scope: !8684)
!8689 = distinct !DISubprogram(name: "~vector", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EED2Ev", scope: !2151, file: !1497, line: 678, type: !2377, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2420, retainedNodes: !324)
!8690 = !DILocalVariable(name: "this", arg: 1, scope: !8689, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!8691 = !DILocation(line: 0, scope: !8689)
!8692 = !DILocation(line: 680, column: 22, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8689, file: !1497, line: 679, column: 7)
!8694 = !DILocation(line: 680, column: 16, scope: !8693)
!8695 = !DILocation(line: 680, column: 30, scope: !8693)
!8696 = !DILocation(line: 680, column: 46, scope: !8693)
!8697 = !DILocation(line: 680, column: 40, scope: !8693)
!8698 = !DILocation(line: 680, column: 54, scope: !8693)
!8699 = !DILocation(line: 681, column: 9, scope: !8693)
!8700 = !DILocation(line: 680, column: 2, scope: !8693)
!8701 = !DILocation(line: 683, column: 7, scope: !8693)
!8702 = !DILocation(line: 683, column: 7, scope: !8689)
!8703 = distinct !DISubprogram(name: "_Vector_base", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EEC2Ev", scope: !2154, file: !1497, line: 288, type: !2326, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2325, retainedNodes: !324)
!8704 = !DILocalVariable(name: "this", arg: 1, scope: !8703, type: !8705, flags: DIFlagArtificial | DIFlagObjectPointer)
!8705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!8706 = !DILocation(line: 0, scope: !8703)
!8707 = !DILocation(line: 288, column: 7, scope: !8703)
!8708 = !DILocation(line: 288, column: 30, scope: !8703)
!8709 = distinct !DISubprogram(name: "_Vector_impl", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implC2Ev", scope: !2157, file: !1497, line: 131, type: !2292, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2291, retainedNodes: !324)
!8710 = !DILocalVariable(name: "this", arg: 1, scope: !8709, type: !8711, flags: DIFlagArtificial | DIFlagObjectPointer)
!8711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!8712 = !DILocation(line: 0, scope: !8709)
!8713 = !DILocation(line: 134, column: 2, scope: !8709)
!8714 = !DILocation(line: 133, column: 4, scope: !8709)
!8715 = !DILocation(line: 131, column: 2, scope: !8709)
!8716 = !DILocation(line: 134, column: 4, scope: !8709)
!8717 = distinct !DISubprogram(name: "allocator", linkageName: "_ZNSaIP8cChannelEC2Ev", scope: !2178, file: !227, line: 144, type: !2222, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2221, retainedNodes: !324)
!8718 = !DILocalVariable(name: "this", arg: 1, scope: !8717, type: !8719, flags: DIFlagArtificial | DIFlagObjectPointer)
!8719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!8720 = !DILocation(line: 0, scope: !8717)
!8721 = !DILocation(line: 144, column: 36, scope: !8717)
!8722 = !DILocation(line: 144, column: 7, scope: !8717)
!8723 = !DILocation(line: 144, column: 38, scope: !8717)
!8724 = distinct !DISubprogram(name: "_Vector_impl_data", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE17_Vector_impl_dataC2Ev", scope: !2267, file: !1497, line: 97, type: !2275, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2274, retainedNodes: !324)
!8725 = !DILocalVariable(name: "this", arg: 1, scope: !8724, type: !8726, flags: DIFlagArtificial | DIFlagObjectPointer)
!8726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!8727 = !DILocation(line: 0, scope: !8724)
!8728 = !DILocation(line: 98, column: 4, scope: !8724)
!8729 = !DILocation(line: 98, column: 16, scope: !8724)
!8730 = !DILocation(line: 98, column: 29, scope: !8724)
!8731 = !DILocation(line: 99, column: 4, scope: !8724)
!8732 = distinct !DISubprogram(name: "new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelEC2Ev", scope: !2182, file: !233, line: 79, type: !2185, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2184, retainedNodes: !324)
!8733 = !DILocalVariable(name: "this", arg: 1, scope: !8732, type: !8734, flags: DIFlagArtificial | DIFlagObjectPointer)
!8734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!8735 = !DILocation(line: 0, scope: !8732)
!8736 = !DILocation(line: 79, column: 47, scope: !8732)
!8737 = distinct !DISubprogram(name: "_Destroy<cChannel **, cChannel *>", linkageName: "_ZSt8_DestroyIPP8cChannelS1_EvT_S3_RSaIT0_E", scope: !2, file: !146, line: 735, type: !8738, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8740, retainedNodes: !324)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{null, !2172, !2172, !2233}
!8740 = !{!8741, !2220}
!8741 = !DITemplateTypeParameter(name: "_ForwardIterator", type: !2172)
!8742 = !DILocalVariable(name: "__first", arg: 1, scope: !8737, file: !146, line: 735, type: !2172)
!8743 = !DILocation(line: 735, column: 31, scope: !8737)
!8744 = !DILocalVariable(name: "__last", arg: 2, scope: !8737, file: !146, line: 735, type: !2172)
!8745 = !DILocation(line: 735, column: 57, scope: !8737)
!8746 = !DILocalVariable(arg: 3, scope: !8737, file: !146, line: 736, type: !2233)
!8747 = !DILocation(line: 736, column: 22, scope: !8737)
!8748 = !DILocation(line: 738, column: 16, scope: !8737)
!8749 = !DILocation(line: 738, column: 25, scope: !8737)
!8750 = !DILocation(line: 738, column: 7, scope: !8737)
!8751 = !DILocation(line: 739, column: 5, scope: !8737)
!8752 = distinct !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv", scope: !2154, file: !1497, line: 276, type: !2312, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2311, retainedNodes: !324)
!8753 = !DILocalVariable(name: "this", arg: 1, scope: !8752, type: !8705, flags: DIFlagArtificial | DIFlagObjectPointer)
!8754 = !DILocation(line: 0, scope: !8752)
!8755 = !DILocation(line: 277, column: 22, scope: !8752)
!8756 = !DILocation(line: 277, column: 16, scope: !8752)
!8757 = !DILocation(line: 277, column: 9, scope: !8752)
!8758 = distinct !DISubprogram(name: "~_Vector_base", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EED2Ev", scope: !2154, file: !1497, line: 333, type: !2326, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2352, retainedNodes: !324)
!8759 = !DILocalVariable(name: "this", arg: 1, scope: !8758, type: !8705, flags: DIFlagArtificial | DIFlagObjectPointer)
!8760 = !DILocation(line: 0, scope: !8758)
!8761 = !DILocation(line: 335, column: 16, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8758, file: !1497, line: 334, column: 7)
!8763 = !DILocation(line: 335, column: 24, scope: !8762)
!8764 = !DILocation(line: 336, column: 9, scope: !8762)
!8765 = !DILocation(line: 336, column: 17, scope: !8762)
!8766 = !DILocation(line: 336, column: 37, scope: !8762)
!8767 = !DILocation(line: 336, column: 45, scope: !8762)
!8768 = !DILocation(line: 336, column: 35, scope: !8762)
!8769 = !DILocation(line: 335, column: 2, scope: !8762)
!8770 = !DILocation(line: 337, column: 7, scope: !8762)
!8771 = !DILocation(line: 337, column: 7, scope: !8758)
!8772 = distinct !DISubprogram(name: "_Destroy<cChannel **>", linkageName: "_ZSt8_DestroyIPP8cChannelEvT_S3_", scope: !2, file: !8773, line: 171, type: !8774, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8776, retainedNodes: !324)
!8773 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_construct.h", directory: "")
!8774 = !DISubroutineType(types: !8775)
!8775 = !{null, !2172, !2172}
!8776 = !{!8741}
!8777 = !DILocalVariable(name: "__first", arg: 1, scope: !8772, file: !8773, line: 171, type: !2172)
!8778 = !DILocation(line: 171, column: 31, scope: !8772)
!8779 = !DILocalVariable(name: "__last", arg: 2, scope: !8772, file: !8773, line: 171, type: !2172)
!8780 = !DILocation(line: 171, column: 57, scope: !8772)
!8781 = !DILocation(line: 185, column: 12, scope: !8772)
!8782 = !DILocation(line: 185, column: 21, scope: !8772)
!8783 = !DILocation(line: 184, column: 7, scope: !8772)
!8784 = !DILocation(line: 186, column: 5, scope: !8772)
!8785 = distinct !DISubprogram(name: "__destroy<cChannel **>", linkageName: "_ZNSt12_Destroy_auxILb1EE9__destroyIPP8cChannelEEvT_S5_", scope: !8786, file: !8773, line: 161, type: !8774, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8776, declaration: !8788, retainedNodes: !324)
!8786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Destroy_aux<true>", scope: !2, file: !8773, line: 157, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !8787, identifier: "_ZTSSt12_Destroy_auxILb1EE")
!8787 = !{!528}
!8788 = !DISubprogram(name: "__destroy<cChannel **>", linkageName: "_ZNSt12_Destroy_auxILb1EE9__destroyIPP8cChannelEEvT_S5_", scope: !8786, file: !8773, line: 161, type: !8774, scopeLine: 161, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0, templateParams: !8776)
!8789 = !DILocalVariable(arg: 1, scope: !8785, file: !8773, line: 161, type: !2172)
!8790 = !DILocation(line: 161, column: 35, scope: !8785)
!8791 = !DILocalVariable(arg: 2, scope: !8785, file: !8773, line: 161, type: !2172)
!8792 = !DILocation(line: 161, column: 53, scope: !8785)
!8793 = !DILocation(line: 161, column: 57, scope: !8785)
!8794 = distinct !DISubprogram(name: "_M_deallocate", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE13_M_deallocateEPS1_m", scope: !2154, file: !1497, line: 350, type: !2357, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2356, retainedNodes: !324)
!8795 = !DILocalVariable(name: "this", arg: 1, scope: !8794, type: !8705, flags: DIFlagArtificial | DIFlagObjectPointer)
!8796 = !DILocation(line: 0, scope: !8794)
!8797 = !DILocalVariable(name: "__p", arg: 2, scope: !8794, file: !1497, line: 350, type: !2270)
!8798 = !DILocation(line: 350, column: 29, scope: !8794)
!8799 = !DILocalVariable(name: "__n", arg: 3, scope: !8794, file: !1497, line: 350, type: !262)
!8800 = !DILocation(line: 350, column: 41, scope: !8794)
!8801 = !DILocation(line: 353, column: 6, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8794, file: !1497, line: 353, column: 6)
!8803 = !DILocation(line: 353, column: 6, scope: !8794)
!8804 = !DILocation(line: 354, column: 20, scope: !8802)
!8805 = !DILocation(line: 354, column: 29, scope: !8802)
!8806 = !DILocation(line: 354, column: 34, scope: !8802)
!8807 = !DILocation(line: 354, column: 4, scope: !8802)
!8808 = !DILocation(line: 355, column: 7, scope: !8794)
!8809 = distinct !DISubprogram(name: "~_Vector_impl", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE12_Vector_implD2Ev", scope: !2157, file: !1497, line: 128, type: !2292, scopeLine: 128, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8810, retainedNodes: !324)
!8810 = !DISubprogram(name: "~_Vector_impl", scope: !2157, type: !2292, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: 0)
!8811 = !DILocalVariable(name: "this", arg: 1, scope: !8809, type: !8711, flags: DIFlagArtificial | DIFlagObjectPointer)
!8812 = !DILocation(line: 0, scope: !8809)
!8813 = !DILocation(line: 128, column: 14, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8809, file: !1497, line: 128, column: 14)
!8815 = !DILocation(line: 128, column: 14, scope: !8809)
!8816 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE10deallocateERS2_PS1_m", scope: !2166, file: !146, line: 491, type: !2239, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2238, retainedNodes: !324)
!8817 = !DILocalVariable(name: "__a", arg: 1, scope: !8816, file: !146, line: 491, type: !2176)
!8818 = !DILocation(line: 491, column: 34, scope: !8816)
!8819 = !DILocalVariable(name: "__p", arg: 2, scope: !8816, file: !146, line: 491, type: !2171)
!8820 = !DILocation(line: 491, column: 47, scope: !8816)
!8821 = !DILocalVariable(name: "__n", arg: 3, scope: !8816, file: !146, line: 491, type: !290)
!8822 = !DILocation(line: 491, column: 62, scope: !8816)
!8823 = !DILocation(line: 492, column: 9, scope: !8816)
!8824 = !DILocation(line: 492, column: 24, scope: !8816)
!8825 = !DILocation(line: 492, column: 29, scope: !8816)
!8826 = !DILocation(line: 492, column: 13, scope: !8816)
!8827 = !DILocation(line: 492, column: 35, scope: !8816)
!8828 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelE10deallocateEPS2_m", scope: !2182, file: !233, line: 120, type: !2213, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2212, retainedNodes: !324)
!8829 = !DILocalVariable(name: "this", arg: 1, scope: !8828, type: !8734, flags: DIFlagArtificial | DIFlagObjectPointer)
!8830 = !DILocation(line: 0, scope: !8828)
!8831 = !DILocalVariable(name: "__p", arg: 2, scope: !8828, file: !233, line: 120, type: !2172)
!8832 = !DILocation(line: 120, column: 23, scope: !8828)
!8833 = !DILocalVariable(name: "__t", arg: 3, scope: !8828, file: !233, line: 120, type: !261)
!8834 = !DILocation(line: 120, column: 38, scope: !8828)
!8835 = !DILocation(line: 133, column: 20, scope: !8828)
!8836 = !DILocation(line: 133, column: 2, scope: !8828)
!8837 = !DILocation(line: 138, column: 7, scope: !8828)
!8838 = distinct !DISubprogram(name: "~allocator", linkageName: "_ZNSaIP8cChannelED2Ev", scope: !2178, file: !227, line: 162, type: !2222, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2234, retainedNodes: !324)
!8839 = !DILocalVariable(name: "this", arg: 1, scope: !8838, type: !8719, flags: DIFlagArtificial | DIFlagObjectPointer)
!8840 = !DILocation(line: 0, scope: !8838)
!8841 = !DILocation(line: 162, column: 39, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8838, file: !227, line: 162, column: 37)
!8843 = !DILocation(line: 162, column: 39, scope: !8838)
!8844 = distinct !DISubprogram(name: "~new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelED2Ev", scope: !2182, file: !233, line: 89, type: !2185, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2193, retainedNodes: !324)
!8845 = !DILocalVariable(name: "this", arg: 1, scope: !8844, type: !8734, flags: DIFlagArtificial | DIFlagObjectPointer)
!8846 = !DILocation(line: 0, scope: !8844)
!8847 = !DILocation(line: 89, column: 48, scope: !8844)
!8848 = distinct !DISubprogram(name: "size", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE4sizeEv", scope: !2151, file: !1497, line: 918, type: !2465, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2464, retainedNodes: !324)
!8849 = !DILocalVariable(name: "this", arg: 1, scope: !8848, type: !8850, flags: DIFlagArtificial | DIFlagObjectPointer)
!8850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!8851 = !DILocation(line: 0, scope: !8848)
!8852 = !DILocation(line: 919, column: 32, scope: !8848)
!8853 = !DILocation(line: 919, column: 26, scope: !8848)
!8854 = !DILocation(line: 919, column: 40, scope: !8848)
!8855 = !DILocation(line: 919, column: 58, scope: !8848)
!8856 = !DILocation(line: 919, column: 52, scope: !8848)
!8857 = !DILocation(line: 919, column: 66, scope: !8848)
!8858 = !DILocation(line: 919, column: 50, scope: !8848)
!8859 = !DILocation(line: 919, column: 9, scope: !8848)
!8860 = distinct !DISubprogram(name: "operator[]", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EEixEm", scope: !2151, file: !1497, line: 1043, type: !2479, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2478, retainedNodes: !324)
!8861 = !DILocalVariable(name: "this", arg: 1, scope: !8860, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!8862 = !DILocation(line: 0, scope: !8860)
!8863 = !DILocalVariable(name: "__n", arg: 2, scope: !8860, file: !1497, line: 1043, type: !1735)
!8864 = !DILocation(line: 1043, column: 28, scope: !8860)
!8865 = !DILocation(line: 1046, column: 17, scope: !8860)
!8866 = !DILocation(line: 1046, column: 11, scope: !8860)
!8867 = !DILocation(line: 1046, column: 25, scope: !8860)
!8868 = !DILocation(line: 1046, column: 36, scope: !8860)
!8869 = !DILocation(line: 1046, column: 34, scope: !8860)
!8870 = !DILocation(line: 1046, column: 2, scope: !8860)
!8871 = distinct !DISubprogram(name: "getTypeOf", linkageName: "_ZNK5cGate4Desc9getTypeOfEPKS_", scope: !1138, file: !34, line: 115, type: !1180, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1179, retainedNodes: !324)
!8872 = !DILocalVariable(name: "this", arg: 1, scope: !8871, type: !4771, flags: DIFlagArtificial | DIFlagObjectPointer)
!8873 = !DILocation(line: 0, scope: !8871)
!8874 = !DILocalVariable(name: "g", arg: 2, scope: !8871, file: !34, line: 115, type: !1174)
!8875 = !DILocation(line: 115, column: 37, scope: !8871)
!8876 = !DILocation(line: 115, column: 55, scope: !8871)
!8877 = !DILocation(line: 115, column: 58, scope: !8871)
!8878 = !DILocation(line: 115, column: 61, scope: !8871)
!8879 = !DILocation(line: 115, column: 64, scope: !8871)
!8880 = !DILocation(line: 115, column: 54, scope: !8871)
!8881 = !DILocation(line: 115, column: 47, scope: !8871)
!8882 = distinct !DISubprogram(name: "_Destroy<const char **, const char *>", linkageName: "_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E", scope: !2, file: !146, line: 735, type: !8883, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8885, retainedNodes: !324)
!8883 = !DISubroutineType(types: !8884)
!8884 = !{null, !1518, !1518, !1575}
!8885 = !{!8886, !1562}
!8886 = !DITemplateTypeParameter(name: "_ForwardIterator", type: !1518)
!8887 = !DILocalVariable(name: "__first", arg: 1, scope: !8882, file: !146, line: 735, type: !1518)
!8888 = !DILocation(line: 735, column: 31, scope: !8882)
!8889 = !DILocalVariable(name: "__last", arg: 2, scope: !8882, file: !146, line: 735, type: !1518)
!8890 = !DILocation(line: 735, column: 57, scope: !8882)
!8891 = !DILocalVariable(arg: 3, scope: !8882, file: !146, line: 736, type: !1575)
!8892 = !DILocation(line: 736, column: 22, scope: !8882)
!8893 = !DILocation(line: 738, column: 16, scope: !8882)
!8894 = !DILocation(line: 738, column: 25, scope: !8882)
!8895 = !DILocation(line: 738, column: 7, scope: !8882)
!8896 = !DILocation(line: 739, column: 5, scope: !8882)
!8897 = distinct !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv", scope: !1500, file: !1497, line: 276, type: !1654, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1653, retainedNodes: !324)
!8898 = !DILocalVariable(name: "this", arg: 1, scope: !8897, type: !8587, flags: DIFlagArtificial | DIFlagObjectPointer)
!8899 = !DILocation(line: 0, scope: !8897)
!8900 = !DILocation(line: 277, column: 22, scope: !8897)
!8901 = !DILocation(line: 277, column: 16, scope: !8897)
!8902 = !DILocation(line: 277, column: 9, scope: !8897)
!8903 = distinct !DISubprogram(name: "~_Vector_base", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EED2Ev", scope: !1500, file: !1497, line: 333, type: !1668, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1694, retainedNodes: !324)
!8904 = !DILocalVariable(name: "this", arg: 1, scope: !8903, type: !8587, flags: DIFlagArtificial | DIFlagObjectPointer)
!8905 = !DILocation(line: 0, scope: !8903)
!8906 = !DILocation(line: 335, column: 16, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !1497, line: 334, column: 7)
!8908 = !DILocation(line: 335, column: 24, scope: !8907)
!8909 = !DILocation(line: 336, column: 9, scope: !8907)
!8910 = !DILocation(line: 336, column: 17, scope: !8907)
!8911 = !DILocation(line: 336, column: 37, scope: !8907)
!8912 = !DILocation(line: 336, column: 45, scope: !8907)
!8913 = !DILocation(line: 336, column: 35, scope: !8907)
!8914 = !DILocation(line: 335, column: 2, scope: !8907)
!8915 = !DILocation(line: 337, column: 7, scope: !8907)
!8916 = !DILocation(line: 337, column: 7, scope: !8903)
!8917 = distinct !DISubprogram(name: "_Destroy<const char **>", linkageName: "_ZSt8_DestroyIPPKcEvT_S3_", scope: !2, file: !8773, line: 171, type: !8918, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8920, retainedNodes: !324)
!8918 = !DISubroutineType(types: !8919)
!8919 = !{null, !1518, !1518}
!8920 = !{!8886}
!8921 = !DILocalVariable(name: "__first", arg: 1, scope: !8917, file: !8773, line: 171, type: !1518)
!8922 = !DILocation(line: 171, column: 31, scope: !8917)
!8923 = !DILocalVariable(name: "__last", arg: 2, scope: !8917, file: !8773, line: 171, type: !1518)
!8924 = !DILocation(line: 171, column: 57, scope: !8917)
!8925 = !DILocation(line: 185, column: 12, scope: !8917)
!8926 = !DILocation(line: 185, column: 21, scope: !8917)
!8927 = !DILocation(line: 184, column: 7, scope: !8917)
!8928 = !DILocation(line: 186, column: 5, scope: !8917)
!8929 = distinct !DISubprogram(name: "__destroy<const char **>", linkageName: "_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_", scope: !8786, file: !8773, line: 161, type: !8918, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !8920, declaration: !8930, retainedNodes: !324)
!8930 = !DISubprogram(name: "__destroy<const char **>", linkageName: "_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_", scope: !8786, file: !8773, line: 161, type: !8918, scopeLine: 161, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0, templateParams: !8920)
!8931 = !DILocalVariable(arg: 1, scope: !8929, file: !8773, line: 161, type: !1518)
!8932 = !DILocation(line: 161, column: 35, scope: !8929)
!8933 = !DILocalVariable(arg: 2, scope: !8929, file: !8773, line: 161, type: !1518)
!8934 = !DILocation(line: 161, column: 53, scope: !8929)
!8935 = !DILocation(line: 161, column: 57, scope: !8929)
!8936 = distinct !DISubprogram(name: "_M_deallocate", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m", scope: !1500, file: !1497, line: 350, type: !1699, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1698, retainedNodes: !324)
!8937 = !DILocalVariable(name: "this", arg: 1, scope: !8936, type: !8587, flags: DIFlagArtificial | DIFlagObjectPointer)
!8938 = !DILocation(line: 0, scope: !8936)
!8939 = !DILocalVariable(name: "__p", arg: 2, scope: !8936, file: !1497, line: 350, type: !1612)
!8940 = !DILocation(line: 350, column: 29, scope: !8936)
!8941 = !DILocalVariable(name: "__n", arg: 3, scope: !8936, file: !1497, line: 350, type: !262)
!8942 = !DILocation(line: 350, column: 41, scope: !8936)
!8943 = !DILocation(line: 353, column: 6, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8936, file: !1497, line: 353, column: 6)
!8945 = !DILocation(line: 353, column: 6, scope: !8936)
!8946 = !DILocation(line: 354, column: 20, scope: !8944)
!8947 = !DILocation(line: 354, column: 29, scope: !8944)
!8948 = !DILocation(line: 354, column: 34, scope: !8944)
!8949 = !DILocation(line: 354, column: 4, scope: !8944)
!8950 = !DILocation(line: 355, column: 7, scope: !8936)
!8951 = distinct !DISubprogram(name: "~_Vector_impl", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD2Ev", scope: !1503, file: !1497, line: 128, type: !1634, scopeLine: 128, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8952, retainedNodes: !324)
!8952 = !DISubprogram(name: "~_Vector_impl", scope: !1503, type: !1634, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: 0)
!8953 = !DILocalVariable(name: "this", arg: 1, scope: !8951, type: !8593, flags: DIFlagArtificial | DIFlagObjectPointer)
!8954 = !DILocation(line: 0, scope: !8951)
!8955 = !DILocation(line: 128, column: 14, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8951, file: !1497, line: 128, column: 14)
!8957 = !DILocation(line: 128, column: 14, scope: !8951)
!8958 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m", scope: !1512, file: !146, line: 491, type: !1581, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1580, retainedNodes: !324)
!8959 = !DILocalVariable(name: "__a", arg: 1, scope: !8958, file: !146, line: 491, type: !1519)
!8960 = !DILocation(line: 491, column: 34, scope: !8958)
!8961 = !DILocalVariable(name: "__p", arg: 2, scope: !8958, file: !146, line: 491, type: !1517)
!8962 = !DILocation(line: 491, column: 47, scope: !8958)
!8963 = !DILocalVariable(name: "__n", arg: 3, scope: !8958, file: !146, line: 491, type: !290)
!8964 = !DILocation(line: 491, column: 62, scope: !8958)
!8965 = !DILocation(line: 492, column: 9, scope: !8958)
!8966 = !DILocation(line: 492, column: 24, scope: !8958)
!8967 = !DILocation(line: 492, column: 29, scope: !8958)
!8968 = !DILocation(line: 492, column: 13, scope: !8958)
!8969 = !DILocation(line: 492, column: 35, scope: !8958)
!8970 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcE10deallocateEPS2_m", scope: !1525, file: !233, line: 120, type: !1555, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1554, retainedNodes: !324)
!8971 = !DILocalVariable(name: "this", arg: 1, scope: !8970, type: !8616, flags: DIFlagArtificial | DIFlagObjectPointer)
!8972 = !DILocation(line: 0, scope: !8970)
!8973 = !DILocalVariable(name: "__p", arg: 2, scope: !8970, file: !233, line: 120, type: !1518)
!8974 = !DILocation(line: 120, column: 23, scope: !8970)
!8975 = !DILocalVariable(name: "__t", arg: 3, scope: !8970, file: !233, line: 120, type: !261)
!8976 = !DILocation(line: 120, column: 38, scope: !8970)
!8977 = !DILocation(line: 133, column: 20, scope: !8970)
!8978 = !DILocation(line: 133, column: 2, scope: !8970)
!8979 = !DILocation(line: 138, column: 7, scope: !8970)
!8980 = distinct !DISubprogram(name: "~allocator", linkageName: "_ZNSaIPKcED2Ev", scope: !1521, file: !227, line: 162, type: !1564, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1576, retainedNodes: !324)
!8981 = !DILocalVariable(name: "this", arg: 1, scope: !8980, type: !8601, flags: DIFlagArtificial | DIFlagObjectPointer)
!8982 = !DILocation(line: 0, scope: !8980)
!8983 = !DILocation(line: 162, column: 39, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8980, file: !227, line: 162, column: 37)
!8985 = !DILocation(line: 162, column: 39, scope: !8980)
!8986 = distinct !DISubprogram(name: "~new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcED2Ev", scope: !1525, file: !233, line: 89, type: !1528, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1536, retainedNodes: !324)
!8987 = !DILocalVariable(name: "this", arg: 1, scope: !8986, type: !8616, flags: DIFlagArtificial | DIFlagObjectPointer)
!8988 = !DILocation(line: 0, scope: !8986)
!8989 = !DILocation(line: 89, column: 48, scope: !8986)
!8990 = distinct !DISubprogram(name: "clear", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv", scope: !131, file: !43, line: 1259, type: !771, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !890, retainedNodes: !324)
!8991 = !DILocalVariable(name: "this", arg: 1, scope: !8990, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!8992 = !DILocation(line: 0, scope: !8990)
!8993 = !DILocation(line: 1261, column: 11, scope: !8990)
!8994 = !DILocation(line: 1261, column: 2, scope: !8990)
!8995 = !DILocation(line: 1262, column: 2, scope: !8990)
!8996 = !DILocation(line: 1262, column: 10, scope: !8990)
!8997 = !DILocation(line: 1263, column: 7, scope: !8990)
!8998 = distinct !DISubprogram(name: "find", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4findERKS1_", scope: !131, file: !43, line: 2551, type: !892, scopeLine: 2552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !891, retainedNodes: !324)
!8999 = !DILocalVariable(name: "this", arg: 1, scope: !8998, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9000 = !DILocation(line: 0, scope: !8998)
!9001 = !DILocalVariable(name: "__k", arg: 2, scope: !8998, file: !43, line: 1267, type: !667)
!9002 = !DILocation(line: 1267, column: 28, scope: !8998)
!9003 = !DILocalVariable(name: "__j", scope: !8998, file: !43, line: 2553, type: !750)
!9004 = !DILocation(line: 2553, column: 16, scope: !8998)
!9005 = !DILocation(line: 2553, column: 37, scope: !8998)
!9006 = !DILocation(line: 2553, column: 49, scope: !8998)
!9007 = !DILocation(line: 2553, column: 59, scope: !8998)
!9008 = !DILocation(line: 2553, column: 22, scope: !8998)
!9009 = !DILocation(line: 2554, column: 22, scope: !8998)
!9010 = !DILocation(line: 2554, column: 19, scope: !8998)
!9011 = !DILocation(line: 2555, column: 8, scope: !8998)
!9012 = !DILocation(line: 2555, column: 11, scope: !8998)
!9013 = !DILocation(line: 2555, column: 19, scope: !8998)
!9014 = !DILocation(line: 2555, column: 34, scope: !8998)
!9015 = !DILocation(line: 2556, column: 17, scope: !8998)
!9016 = !DILocation(line: 2556, column: 6, scope: !8998)
!9017 = !DILocation(line: 2554, column: 14, scope: !8998)
!9018 = !DILocation(line: 2556, column: 30, scope: !8998)
!9019 = !DILocation(line: 2556, column: 38, scope: !8998)
!9020 = !DILocation(line: 2554, column: 7, scope: !8998)
!9021 = distinct !DISubprogram(name: "_Rb_tree_const_iterator", linkageName: "_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2ERKSt17_Rb_tree_iteratorIS1_E", scope: !675, file: !43, line: 350, type: !687, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !686, retainedNodes: !324)
!9022 = !DILocalVariable(name: "this", arg: 1, scope: !9021, type: !9023, flags: DIFlagArtificial | DIFlagObjectPointer)
!9023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!9024 = !DILocation(line: 0, scope: !9021)
!9025 = !DILocalVariable(name: "__it", arg: 2, scope: !9021, file: !43, line: 350, type: !689)
!9026 = !DILocation(line: 350, column: 47, scope: !9021)
!9027 = !DILocation(line: 351, column: 9, scope: !9021)
!9028 = !DILocation(line: 351, column: 17, scope: !9021)
!9029 = !DILocation(line: 351, column: 22, scope: !9021)
!9030 = !DILocation(line: 351, column: 33, scope: !9021)
!9031 = distinct !DISubprogram(name: "_M_lower_bound", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_EPSt18_Rb_tree_node_baseRKS1_", scope: !131, file: !43, line: 1931, type: !763, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !762, retainedNodes: !324)
!9032 = !DILocalVariable(name: "this", arg: 1, scope: !9031, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9033 = !DILocation(line: 0, scope: !9031)
!9034 = !DILocalVariable(name: "__x", arg: 2, scope: !9031, file: !43, line: 915, type: !548)
!9035 = !DILocation(line: 915, column: 33, scope: !9031)
!9036 = !DILocalVariable(name: "__y", arg: 3, scope: !9031, file: !43, line: 915, type: !558)
!9037 = !DILocation(line: 915, column: 48, scope: !9031)
!9038 = !DILocalVariable(name: "__k", arg: 4, scope: !9031, file: !43, line: 916, type: !223)
!9039 = !DILocation(line: 916, column: 20, scope: !9031)
!9040 = !DILocation(line: 1934, column: 7, scope: !9031)
!9041 = !DILocation(line: 1934, column: 14, scope: !9031)
!9042 = !DILocation(line: 1934, column: 18, scope: !9031)
!9043 = !DILocation(line: 1935, column: 7, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9031, file: !43, line: 1935, column: 6)
!9045 = !DILocation(line: 1935, column: 15, scope: !9044)
!9046 = !DILocation(line: 1935, column: 37, scope: !9044)
!9047 = !DILocation(line: 1935, column: 30, scope: !9044)
!9048 = !DILocation(line: 1935, column: 43, scope: !9044)
!9049 = !DILocation(line: 1935, column: 6, scope: !9031)
!9050 = !DILocation(line: 1936, column: 10, scope: !9044)
!9051 = !DILocation(line: 1936, column: 8, scope: !9044)
!9052 = !DILocation(line: 1936, column: 29, scope: !9044)
!9053 = !DILocation(line: 1936, column: 21, scope: !9044)
!9054 = !DILocation(line: 1936, column: 19, scope: !9044)
!9055 = !DILocation(line: 1936, column: 4, scope: !9044)
!9056 = !DILocation(line: 1938, column: 19, scope: !9044)
!9057 = !DILocation(line: 1938, column: 10, scope: !9044)
!9058 = !DILocation(line: 1938, column: 8, scope: !9044)
!9059 = distinct !{!9059, !9040, !9060}
!9060 = !DILocation(line: 1938, column: 22, scope: !9031)
!9061 = !DILocation(line: 1939, column: 23, scope: !9031)
!9062 = !DILocation(line: 1939, column: 14, scope: !9031)
!9063 = !DILocation(line: 1939, column: 7, scope: !9031)
!9064 = distinct !DISubprogram(name: "_M_end", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv", scope: !131, file: !43, line: 759, type: !573, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !572, retainedNodes: !324)
!9065 = !DILocalVariable(name: "this", arg: 1, scope: !9064, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9066 = !DILocation(line: 0, scope: !9064)
!9067 = !DILocation(line: 760, column: 23, scope: !9064)
!9068 = !DILocation(line: 760, column: 17, scope: !9064)
!9069 = !DILocation(line: 760, column: 31, scope: !9064)
!9070 = !DILocation(line: 760, column: 9, scope: !9064)
!9071 = distinct !DISubprogram(name: "operator==", linkageName: "_ZSteqRKSt17_Rb_tree_iteratorIN5cGate4NameEES4_", scope: !2, file: !43, line: 315, type: !9072, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, retainedNodes: !324)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!13, !9074, !9074}
!9074 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9075, size: 64)
!9075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!9076 = !DILocalVariable(name: "__x", arg: 1, scope: !9071, file: !43, line: 315, type: !9074)
!9077 = !DILocation(line: 315, column: 31, scope: !9071)
!9078 = !DILocalVariable(name: "__y", arg: 2, scope: !9071, file: !43, line: 315, type: !9074)
!9079 = !DILocation(line: 315, column: 49, scope: !9071)
!9080 = !DILocation(line: 316, column: 16, scope: !9071)
!9081 = !DILocation(line: 316, column: 20, scope: !9071)
!9082 = !DILocation(line: 316, column: 31, scope: !9071)
!9083 = !DILocation(line: 316, column: 35, scope: !9071)
!9084 = !DILocation(line: 316, column: 28, scope: !9071)
!9085 = !DILocation(line: 316, column: 9, scope: !9071)
!9086 = distinct !DISubprogram(name: "end", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv", scope: !131, file: !43, line: 1010, type: !840, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !845, retainedNodes: !324)
!9087 = !DILocalVariable(name: "this", arg: 1, scope: !9086, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9088 = !DILocation(line: 0, scope: !9086)
!9089 = !DILocation(line: 1011, column: 32, scope: !9086)
!9090 = !DILocation(line: 1011, column: 26, scope: !9086)
!9091 = !DILocation(line: 1011, column: 40, scope: !9086)
!9092 = !DILocation(line: 1011, column: 16, scope: !9086)
!9093 = !DILocation(line: 1011, column: 9, scope: !9086)
!9094 = distinct !DISubprogram(name: "operator()", linkageName: "_ZNKSt4lessIN5cGate4NameEEclERKS1_S4_", scope: !453, file: !454, line: 385, type: !463, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !462, retainedNodes: !324)
!9095 = !DILocalVariable(name: "this", arg: 1, scope: !9094, type: !9096, flags: DIFlagArtificial | DIFlagObjectPointer)
!9096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!9097 = !DILocation(line: 0, scope: !9094)
!9098 = !DILocalVariable(name: "__x", arg: 2, scope: !9094, file: !454, line: 385, type: !223)
!9099 = !DILocation(line: 385, column: 29, scope: !9094)
!9100 = !DILocalVariable(name: "__y", arg: 3, scope: !9094, file: !454, line: 385, type: !223)
!9101 = !DILocation(line: 385, column: 45, scope: !9094)
!9102 = !DILocation(line: 386, column: 16, scope: !9094)
!9103 = !DILocation(line: 386, column: 22, scope: !9094)
!9104 = !DILocation(line: 386, column: 20, scope: !9094)
!9105 = !DILocation(line: 386, column: 9, scope: !9094)
!9106 = distinct !DISubprogram(name: "_S_key", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base", scope: !131, file: !43, line: 805, type: !588, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !587, retainedNodes: !324)
!9107 = !DILocalVariable(name: "__x", arg: 1, scope: !9106, file: !43, line: 805, type: !562)
!9108 = !DILocation(line: 805, column: 30, scope: !9106)
!9109 = !DILocation(line: 806, column: 53, scope: !9106)
!9110 = !DILocation(line: 806, column: 23, scope: !9106)
!9111 = !DILocation(line: 806, column: 16, scope: !9106)
!9112 = !DILocation(line: 806, column: 9, scope: !9106)
!9113 = distinct !DISubprogram(name: "_S_key", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E", scope: !131, file: !43, line: 767, type: !577, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !576, retainedNodes: !324)
!9114 = !DILocalVariable(name: "__x", arg: 1, scope: !9113, file: !43, line: 767, type: !571)
!9115 = !DILocation(line: 767, column: 31, scope: !9113)
!9116 = !DILocation(line: 785, column: 24, scope: !9113)
!9117 = !DILocation(line: 785, column: 29, scope: !9113)
!9118 = !DILocation(line: 785, column: 9, scope: !9113)
!9119 = !DILocation(line: 785, column: 2, scope: !9113)
!9120 = distinct !DISubprogram(name: "_Rb_tree_iterator", linkageName: "_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEC2EPSt18_Rb_tree_node_base", scope: !692, file: !43, line: 273, type: !701, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !700, retainedNodes: !324)
!9121 = !DILocalVariable(name: "this", arg: 1, scope: !9120, type: !9122, flags: DIFlagArtificial | DIFlagObjectPointer)
!9122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!9123 = !DILocation(line: 0, scope: !9120)
!9124 = !DILocalVariable(name: "__x", arg: 2, scope: !9120, file: !43, line: 273, type: !695)
!9125 = !DILocation(line: 273, column: 35, scope: !9120)
!9126 = !DILocation(line: 274, column: 9, scope: !9120)
!9127 = !DILocation(line: 274, column: 17, scope: !9120)
!9128 = !DILocation(line: 274, column: 24, scope: !9120)
!9129 = distinct !DISubprogram(name: "operator()", linkageName: "_ZNKSt9_IdentityIN5cGate4NameEEclERKS1_", scope: !927, file: !454, line: 1139, type: !940, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !939, retainedNodes: !324)
!9130 = !DILocalVariable(name: "this", arg: 1, scope: !9129, type: !9131, flags: DIFlagArtificial | DIFlagObjectPointer)
!9131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!9132 = !DILocation(line: 0, scope: !9129)
!9133 = !DILocalVariable(name: "__x", arg: 2, scope: !9129, file: !454, line: 1139, type: !223)
!9134 = !DILocation(line: 1139, column: 29, scope: !9129)
!9135 = !DILocation(line: 1140, column: 16, scope: !9129)
!9136 = !DILocation(line: 1140, column: 9, scope: !9129)
!9137 = distinct !DISubprogram(name: "_M_valptr", linkageName: "_ZNKSt13_Rb_tree_nodeIN5cGate4NameEE9_M_valptrEv", scope: !327, file: !43, line: 238, type: !387, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !386, retainedNodes: !324)
!9138 = !DILocalVariable(name: "this", arg: 1, scope: !9137, type: !422, flags: DIFlagArtificial | DIFlagObjectPointer)
!9139 = !DILocation(line: 0, scope: !9137)
!9140 = !DILocation(line: 239, column: 16, scope: !9137)
!9141 = !DILocation(line: 239, column: 27, scope: !9137)
!9142 = !DILocation(line: 239, column: 9, scope: !9137)
!9143 = distinct !DISubprogram(name: "_M_ptr", linkageName: "_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE6_M_ptrEv", scope: !350, file: !351, line: 76, type: !380, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !379, retainedNodes: !324)
!9144 = !DILocalVariable(name: "this", arg: 1, scope: !9143, type: !9145, flags: DIFlagArtificial | DIFlagObjectPointer)
!9145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!9146 = !DILocation(line: 0, scope: !9143)
!9147 = !DILocation(line: 77, column: 40, scope: !9143)
!9148 = !DILocation(line: 77, column: 16, scope: !9143)
!9149 = !DILocation(line: 77, column: 9, scope: !9143)
!9150 = distinct !DISubprogram(name: "_M_addr", linkageName: "_ZNK9__gnu_cxx16__aligned_membufIN5cGate4NameEE7_M_addrEv", scope: !350, file: !351, line: 68, type: !372, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !371, retainedNodes: !324)
!9151 = !DILocalVariable(name: "this", arg: 1, scope: !9150, type: !9145, flags: DIFlagArtificial | DIFlagObjectPointer)
!9152 = !DILocation(line: 0, scope: !9150)
!9153 = !DILocation(line: 69, column: 42, scope: !9150)
!9154 = !DILocation(line: 69, column: 41, scope: !9150)
!9155 = !DILocation(line: 69, column: 9, scope: !9150)
!9156 = distinct !DISubprogram(name: "end", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv", scope: !131, file: !43, line: 1014, type: !843, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !846, retainedNodes: !324)
!9157 = !DILocalVariable(name: "this", arg: 1, scope: !9156, type: !9158, flags: DIFlagArtificial | DIFlagObjectPointer)
!9158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!9159 = !DILocation(line: 0, scope: !9156)
!9160 = !DILocation(line: 1015, column: 38, scope: !9156)
!9161 = !DILocation(line: 1015, column: 32, scope: !9156)
!9162 = !DILocation(line: 1015, column: 46, scope: !9156)
!9163 = !DILocation(line: 1015, column: 16, scope: !9156)
!9164 = !DILocation(line: 1015, column: 9, scope: !9156)
!9165 = distinct !DISubprogram(name: "_Rb_tree_const_iterator", linkageName: "_ZNSt23_Rb_tree_const_iteratorIN5cGate4NameEEC2EPKSt18_Rb_tree_node_base", scope: !675, file: !43, line: 347, type: !684, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !683, retainedNodes: !324)
!9166 = !DILocalVariable(name: "this", arg: 1, scope: !9165, type: !9023, flags: DIFlagArtificial | DIFlagObjectPointer)
!9167 = !DILocation(line: 0, scope: !9165)
!9168 = !DILocalVariable(name: "__x", arg: 2, scope: !9165, file: !43, line: 347, type: !678)
!9169 = !DILocation(line: 347, column: 41, scope: !9165)
!9170 = !DILocation(line: 348, column: 9, scope: !9165)
!9171 = !DILocation(line: 348, column: 17, scope: !9165)
!9172 = !DILocation(line: 348, column: 24, scope: !9165)
!9173 = distinct !DISubprogram(name: "_M_insert_unique<const cGate::Name &>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE16_M_insert_uniqueIRKS1_EESt4pairISt17_Rb_tree_iteratorIS1_EbEOT_", scope: !131, file: !43, line: 2147, type: !9174, scopeLine: 2151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9177, declaration: !9176, retainedNodes: !324)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{!5021, !533, !223}
!9176 = !DISubprogram(name: "_M_insert_unique<const cGate::Name &>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE16_M_insert_uniqueIRKS1_EESt4pairISt17_Rb_tree_iteratorIS1_EbEOT_", scope: !131, file: !43, line: 1053, type: !9174, scopeLine: 1053, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !9177)
!9177 = !{!9178}
!9178 = !DITemplateTypeParameter(name: "_Arg", type: !223)
!9179 = !DILocalVariable(name: "this", arg: 1, scope: !9173, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9180 = !DILocation(line: 0, scope: !9173)
!9181 = !DILocalVariable(name: "__v", arg: 2, scope: !9173, file: !43, line: 1053, type: !223)
!9182 = !DILocation(line: 1053, column: 26, scope: !9173)
!9183 = !DILocalVariable(name: "__res", scope: !9173, file: !43, line: 2153, type: !603)
!9184 = !DILocation(line: 2153, column: 34, scope: !9173)
!9185 = !DILocation(line: 2154, column: 43, scope: !9173)
!9186 = !DILocation(line: 2154, column: 29, scope: !9173)
!9187 = !DILocation(line: 2154, column: 4, scope: !9173)
!9188 = !DILocation(line: 2156, column: 17, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9173, file: !43, line: 2156, column: 11)
!9190 = !DILocation(line: 2156, column: 11, scope: !9189)
!9191 = !DILocation(line: 2156, column: 11, scope: !9173)
!9192 = !DILocalVariable(name: "__an", scope: !9193, file: !43, line: 2158, type: !9194)
!9193 = distinct !DILexicalBlock(scope: !9189, file: !43, line: 2157, column: 2)
!9194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Alloc_node", scope: !131, file: !43, line: 540, size: 64, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !9195, identifier: "_ZTSNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeE")
!9195 = !{!9196, !9197}
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "_M_t", scope: !9194, file: !43, line: 555, baseType: !835, size: 64, flags: DIFlagPrivate)
!9197 = !DISubprogram(name: "_Alloc_node", scope: !9194, file: !43, line: 542, type: !9198, scopeLine: 542, flags: DIFlagPrototyped, spFlags: 0)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{null, !9200, !835}
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!9201 = !DILocation(line: 2158, column: 16, scope: !9193)
!9202 = !DILocation(line: 2159, column: 33, scope: !9193)
!9203 = !DILocation(line: 2159, column: 46, scope: !9193)
!9204 = !DILocation(line: 2160, column: 6, scope: !9193)
!9205 = !DILocation(line: 2159, column: 16, scope: !9193)
!9206 = !DILocation(line: 2161, column: 9, scope: !9193)
!9207 = !DILocation(line: 2159, column: 11, scope: !9193)
!9208 = !DILocation(line: 2159, column: 4, scope: !9193)
!9209 = !DILocation(line: 2164, column: 34, scope: !9173)
!9210 = !DILocation(line: 2164, column: 19, scope: !9173)
!9211 = !DILocation(line: 2164, column: 42, scope: !9173)
!9212 = !DILocation(line: 2164, column: 14, scope: !9173)
!9213 = !DILocation(line: 2164, column: 7, scope: !9173)
!9214 = !DILocation(line: 2165, column: 5, scope: !9173)
!9215 = distinct !DISubprogram(name: "pair<std::_Rb_tree_iterator<cGate::Name> &, bool &, true>", linkageName: "_ZNSt4pairISt23_Rb_tree_const_iteratorIN5cGate4NameEEbEC2IRSt17_Rb_tree_iteratorIS2_ERbLb1EEEOT_OT0_", scope: !1030, file: !604, line: 352, type: !9216, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9221, declaration: !9220, retainedNodes: !324)
!9216 = !DISubroutineType(types: !9217)
!9217 = !{null, !1057, !9218, !9219}
!9218 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !692, size: 64)
!9219 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !13, size: 64)
!9220 = !DISubprogram(name: "pair<std::_Rb_tree_iterator<cGate::Name> &, bool &, true>", scope: !1030, file: !604, line: 352, type: !9216, scopeLine: 352, flags: DIFlagPrototyped, spFlags: 0, templateParams: !9221)
!9221 = !{!9222, !9223, !528}
!9222 = !DITemplateTypeParameter(name: "_U1", type: !9218)
!9223 = !DITemplateTypeParameter(name: "_U2", type: !9219)
!9224 = !DILocalVariable(name: "this", arg: 1, scope: !9215, type: !9225, flags: DIFlagArtificial | DIFlagObjectPointer)
!9225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!9226 = !DILocation(line: 0, scope: !9215)
!9227 = !DILocalVariable(name: "__x", arg: 2, scope: !9215, file: !604, line: 352, type: !9218)
!9228 = !DILocation(line: 352, column: 23, scope: !9215)
!9229 = !DILocalVariable(name: "__y", arg: 3, scope: !9215, file: !604, line: 352, type: !9219)
!9230 = !DILocation(line: 352, column: 34, scope: !9215)
!9231 = !DILocation(line: 353, column: 66, scope: !9215)
!9232 = !DILocation(line: 353, column: 4, scope: !9215)
!9233 = !DILocation(line: 353, column: 28, scope: !9215)
!9234 = !DILocation(line: 353, column: 10, scope: !9215)
!9235 = !DILocation(line: 353, column: 35, scope: !9215)
!9236 = !DILocation(line: 353, column: 60, scope: !9215)
!9237 = !DILocation(line: 353, column: 42, scope: !9215)
!9238 = !DILocation(line: 353, column: 68, scope: !9215)
!9239 = distinct !DISubprogram(name: "_M_get_insert_unique_pos", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_", scope: !131, file: !43, line: 2092, type: !601, scopeLine: 2093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !600, retainedNodes: !324)
!9240 = !DILocalVariable(name: "this", arg: 1, scope: !9239, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9241 = !DILocation(line: 0, scope: !9239)
!9242 = !DILocalVariable(name: "__k", arg: 2, scope: !9239, file: !43, line: 839, type: !667)
!9243 = !DILocation(line: 839, column: 48, scope: !9239)
!9244 = !DILocalVariable(name: "__x", scope: !9239, file: !43, line: 2095, type: !548)
!9245 = !DILocation(line: 2095, column: 18, scope: !9239)
!9246 = !DILocation(line: 2095, column: 24, scope: !9239)
!9247 = !DILocalVariable(name: "__y", scope: !9239, file: !43, line: 2096, type: !558)
!9248 = !DILocation(line: 2096, column: 17, scope: !9239)
!9249 = !DILocation(line: 2096, column: 23, scope: !9239)
!9250 = !DILocalVariable(name: "__comp", scope: !9239, file: !43, line: 2097, type: !13)
!9251 = !DILocation(line: 2097, column: 12, scope: !9239)
!9252 = !DILocation(line: 2098, column: 7, scope: !9239)
!9253 = !DILocation(line: 2098, column: 14, scope: !9239)
!9254 = !DILocation(line: 2098, column: 18, scope: !9239)
!9255 = !DILocation(line: 2100, column: 10, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9239, file: !43, line: 2099, column: 2)
!9257 = !DILocation(line: 2100, column: 8, scope: !9256)
!9258 = !DILocation(line: 2101, column: 13, scope: !9256)
!9259 = !DILocation(line: 2101, column: 21, scope: !9256)
!9260 = !DILocation(line: 2101, column: 36, scope: !9256)
!9261 = !DILocation(line: 2101, column: 48, scope: !9256)
!9262 = !DILocation(line: 2101, column: 41, scope: !9256)
!9263 = !DILocation(line: 2101, column: 11, scope: !9256)
!9264 = !DILocation(line: 2102, column: 10, scope: !9256)
!9265 = !DILocation(line: 2102, column: 27, scope: !9256)
!9266 = !DILocation(line: 2102, column: 19, scope: !9256)
!9267 = !DILocation(line: 2102, column: 43, scope: !9256)
!9268 = !DILocation(line: 2102, column: 34, scope: !9256)
!9269 = !DILocation(line: 2102, column: 8, scope: !9256)
!9270 = distinct !{!9270, !9252, !9271}
!9271 = !DILocation(line: 2103, column: 2, scope: !9239)
!9272 = !DILocalVariable(name: "__j", scope: !9239, file: !43, line: 2104, type: !750)
!9273 = !DILocation(line: 2104, column: 16, scope: !9239)
!9274 = !DILocation(line: 2104, column: 31, scope: !9239)
!9275 = !DILocation(line: 2104, column: 22, scope: !9239)
!9276 = !DILocation(line: 2105, column: 11, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9239, file: !43, line: 2105, column: 11)
!9278 = !DILocation(line: 2105, column: 11, scope: !9239)
!9279 = !DILocation(line: 2107, column: 15, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !43, line: 2107, column: 8)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !43, line: 2106, column: 2)
!9282 = !DILocation(line: 2107, column: 12, scope: !9280)
!9283 = !DILocation(line: 2107, column: 8, scope: !9281)
!9284 = !DILocation(line: 2108, column: 13, scope: !9280)
!9285 = !DILocation(line: 2108, column: 6, scope: !9280)
!9286 = !DILocation(line: 2110, column: 6, scope: !9280)
!9287 = !DILocation(line: 2111, column: 2, scope: !9281)
!9288 = !DILocation(line: 2112, column: 11, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9239, file: !43, line: 2112, column: 11)
!9290 = !DILocation(line: 2112, column: 19, scope: !9289)
!9291 = !DILocation(line: 2112, column: 45, scope: !9289)
!9292 = !DILocation(line: 2112, column: 34, scope: !9289)
!9293 = !DILocation(line: 2112, column: 55, scope: !9289)
!9294 = !DILocation(line: 2112, column: 11, scope: !9239)
!9295 = !DILocation(line: 2113, column: 9, scope: !9289)
!9296 = !DILocation(line: 2113, column: 2, scope: !9289)
!9297 = !DILocation(line: 2114, column: 23, scope: !9239)
!9298 = !DILocation(line: 2114, column: 32, scope: !9239)
!9299 = !DILocation(line: 2114, column: 14, scope: !9239)
!9300 = !DILocation(line: 2114, column: 7, scope: !9239)
!9301 = !DILocation(line: 2115, column: 5, scope: !9239)
!9302 = distinct !DISubprogram(name: "_Alloc_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeC2ERS7_", scope: !9194, file: !43, line: 542, type: !9198, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !9197, retainedNodes: !324)
!9303 = !DILocalVariable(name: "this", arg: 1, scope: !9302, type: !9304, flags: DIFlagArtificial | DIFlagObjectPointer)
!9304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 64)
!9305 = !DILocation(line: 0, scope: !9302)
!9306 = !DILocalVariable(name: "__t", arg: 2, scope: !9302, file: !43, line: 542, type: !835)
!9307 = !DILocation(line: 542, column: 24, scope: !9302)
!9308 = !DILocation(line: 543, column: 4, scope: !9302)
!9309 = !DILocation(line: 543, column: 9, scope: !9302)
!9310 = !DILocation(line: 543, column: 16, scope: !9302)
!9311 = distinct !DISubprogram(name: "_M_insert_<const cGate::Name &, std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_M_insert_IRKS1_NS7_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS1_EPSt18_Rb_tree_node_baseSF_OT_RT0_", scope: !131, file: !43, line: 1804, type: !9312, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9316, declaration: !9315, retainedNodes: !324)
!9312 = !DISubroutineType(types: !9313)
!9313 = !{!750, !533, !558, !558, !223, !9314}
!9314 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9194, size: 64)
!9315 = !DISubprogram(name: "_M_insert_<const cGate::Name &, std::_Rb_tree<cGate::Name, cGate::Name, std::_Identity<cGate::Name>, std::less<cGate::Name>, std::allocator<cGate::Name> >::_Alloc_node>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE10_M_insert_IRKS1_NS7_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS1_EPSt18_Rb_tree_node_baseSF_OT_RT0_", scope: !131, file: !43, line: 856, type: !9312, scopeLine: 856, flags: DIFlagPrototyped, spFlags: 0, templateParams: !9316)
!9316 = !{!9178, !9317}
!9317 = !DITemplateTypeParameter(name: "_NodeGen", type: !9194)
!9318 = !DILocalVariable(name: "this", arg: 1, scope: !9311, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9319 = !DILocation(line: 0, scope: !9311)
!9320 = !DILocalVariable(name: "__x", arg: 2, scope: !9311, file: !43, line: 856, type: !558)
!9321 = !DILocation(line: 856, column: 23, scope: !9311)
!9322 = !DILocalVariable(name: "__p", arg: 3, scope: !9311, file: !43, line: 856, type: !558)
!9323 = !DILocation(line: 856, column: 38, scope: !9311)
!9324 = !DILocalVariable(name: "__v", arg: 4, scope: !9311, file: !43, line: 856, type: !223)
!9325 = !DILocation(line: 856, column: 50, scope: !9311)
!9326 = !DILocalVariable(name: "__node_gen", arg: 5, scope: !9311, file: !43, line: 856, type: !9314)
!9327 = !DILocation(line: 856, column: 64, scope: !9311)
!9328 = !DILocalVariable(name: "__insert_left", scope: !9311, file: !43, line: 1812, type: !13)
!9329 = !DILocation(line: 1812, column: 7, scope: !9311)
!9330 = !DILocation(line: 1812, column: 24, scope: !9311)
!9331 = !DILocation(line: 1812, column: 28, scope: !9311)
!9332 = !DILocation(line: 1812, column: 33, scope: !9311)
!9333 = !DILocation(line: 1812, column: 36, scope: !9311)
!9334 = !DILocation(line: 1812, column: 43, scope: !9311)
!9335 = !DILocation(line: 1812, column: 40, scope: !9311)
!9336 = !DILocation(line: 1813, column: 10, scope: !9311)
!9337 = !DILocation(line: 1813, column: 13, scope: !9311)
!9338 = !DILocation(line: 1813, column: 21, scope: !9311)
!9339 = !DILocation(line: 1813, column: 50, scope: !9311)
!9340 = !DILocation(line: 1813, column: 36, scope: !9311)
!9341 = !DILocation(line: 1814, column: 15, scope: !9311)
!9342 = !DILocation(line: 1814, column: 8, scope: !9311)
!9343 = !DILocalVariable(name: "__z", scope: !9311, file: !43, line: 1816, type: !548)
!9344 = !DILocation(line: 1816, column: 13, scope: !9311)
!9345 = !DILocation(line: 1816, column: 19, scope: !9311)
!9346 = !DILocation(line: 1816, column: 30, scope: !9311)
!9347 = !DILocation(line: 1818, column: 32, scope: !9311)
!9348 = !DILocation(line: 1818, column: 47, scope: !9311)
!9349 = !DILocation(line: 1818, column: 52, scope: !9311)
!9350 = !DILocation(line: 1819, column: 17, scope: !9311)
!9351 = !DILocation(line: 1819, column: 11, scope: !9311)
!9352 = !DILocation(line: 1819, column: 25, scope: !9311)
!9353 = !DILocation(line: 1818, column: 2, scope: !9311)
!9354 = !DILocation(line: 1820, column: 4, scope: !9311)
!9355 = !DILocation(line: 1820, column: 12, scope: !9311)
!9356 = !DILocation(line: 1820, column: 2, scope: !9311)
!9357 = !DILocation(line: 1821, column: 18, scope: !9311)
!9358 = !DILocation(line: 1821, column: 9, scope: !9311)
!9359 = !DILocation(line: 1821, column: 2, scope: !9311)
!9360 = distinct !DISubprogram(name: "forward<const cGate::Name &>", linkageName: "_ZSt7forwardIRKN5cGate4NameEEOT_RNSt16remove_referenceIS4_E4typeE", scope: !2, file: !8314, line: 76, type: !9361, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9366, retainedNodes: !324)
!9361 = !DISubroutineType(types: !9362)
!9362 = !{!223, !9363}
!9363 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9364, size: 64)
!9364 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9365, file: !643, line: 1598, baseType: !222)
!9365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<const cGate::Name &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9366, identifier: "_ZTSSt16remove_referenceIRKN5cGate4NameEE")
!9366 = !{!9367}
!9367 = !DITemplateTypeParameter(name: "_Tp", type: !223)
!9368 = !DILocalVariable(name: "__t", arg: 1, scope: !9360, file: !8314, line: 76, type: !9363)
!9369 = !DILocation(line: 76, column: 56, scope: !9360)
!9370 = !DILocation(line: 77, column: 33, scope: !9360)
!9371 = !DILocation(line: 77, column: 7, scope: !9360)
!9372 = distinct !DISubprogram(name: "pair<std::_Rb_tree_iterator<cGate::Name>, bool, true>", linkageName: "_ZNSt4pairISt17_Rb_tree_iteratorIN5cGate4NameEEbEC2IS3_bLb1EEEOT_OT0_", scope: !5021, file: !604, line: 352, type: !9373, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9378, declaration: !9377, retainedNodes: !324)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{null, !5047, !9375, !9376}
!9375 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !692, size: 64)
!9376 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !13, size: 64)
!9377 = !DISubprogram(name: "pair<std::_Rb_tree_iterator<cGate::Name>, bool, true>", scope: !5021, file: !604, line: 352, type: !9373, scopeLine: 352, flags: DIFlagPrototyped, spFlags: 0, templateParams: !9378)
!9378 = !{!5041, !1051, !528}
!9379 = !DILocalVariable(name: "this", arg: 1, scope: !9372, type: !9380, flags: DIFlagArtificial | DIFlagObjectPointer)
!9380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!9381 = !DILocation(line: 0, scope: !9372)
!9382 = !DILocalVariable(name: "__x", arg: 2, scope: !9372, file: !604, line: 352, type: !9375)
!9383 = !DILocation(line: 352, column: 23, scope: !9372)
!9384 = !DILocalVariable(name: "__y", arg: 3, scope: !9372, file: !604, line: 352, type: !9376)
!9385 = !DILocation(line: 352, column: 34, scope: !9372)
!9386 = !DILocation(line: 353, column: 66, scope: !9372)
!9387 = !DILocation(line: 353, column: 4, scope: !9372)
!9388 = !DILocation(line: 353, column: 28, scope: !9372)
!9389 = !DILocation(line: 353, column: 10, scope: !9372)
!9390 = !DILocation(line: 353, column: 35, scope: !9372)
!9391 = !DILocation(line: 353, column: 60, scope: !9372)
!9392 = !DILocation(line: 353, column: 42, scope: !9372)
!9393 = !DILocation(line: 353, column: 68, scope: !9372)
!9394 = distinct !DISubprogram(name: "begin", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv", scope: !131, file: !43, line: 1002, type: !840, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !839, retainedNodes: !324)
!9395 = !DILocalVariable(name: "this", arg: 1, scope: !9394, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9396 = !DILocation(line: 0, scope: !9394)
!9397 = !DILocation(line: 1003, column: 31, scope: !9394)
!9398 = !DILocation(line: 1003, column: 25, scope: !9394)
!9399 = !DILocation(line: 1003, column: 39, scope: !9394)
!9400 = !DILocation(line: 1003, column: 49, scope: !9394)
!9401 = !DILocation(line: 1003, column: 16, scope: !9394)
!9402 = !DILocation(line: 1003, column: 9, scope: !9394)
!9403 = distinct !DISubprogram(name: "pair<std::_Rb_tree_node<cGate::Name> *&, std::_Rb_tree_node_base *&, true>", linkageName: "_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIN5cGate4NameEERS1_Lb1EEEOT_OT0_", scope: !603, file: !604, line: 352, type: !9404, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9409, declaration: !9408, retainedNodes: !324)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{null, !631, !9406, !9407}
!9406 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !414, size: 64)
!9407 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !335, size: 64)
!9408 = !DISubprogram(name: "pair<std::_Rb_tree_node<cGate::Name> *&, std::_Rb_tree_node_base *&, true>", scope: !603, file: !604, line: 352, type: !9404, scopeLine: 352, flags: DIFlagPrototyped, spFlags: 0, templateParams: !9409)
!9409 = !{!9410, !9411, !528}
!9410 = !DITemplateTypeParameter(name: "_U1", type: !9406)
!9411 = !DITemplateTypeParameter(name: "_U2", type: !9407)
!9412 = !DILocalVariable(name: "this", arg: 1, scope: !9403, type: !9413, flags: DIFlagArtificial | DIFlagObjectPointer)
!9413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!9414 = !DILocation(line: 0, scope: !9403)
!9415 = !DILocalVariable(name: "__x", arg: 2, scope: !9403, file: !604, line: 352, type: !9406)
!9416 = !DILocation(line: 352, column: 23, scope: !9403)
!9417 = !DILocalVariable(name: "__y", arg: 3, scope: !9403, file: !604, line: 352, type: !9407)
!9418 = !DILocation(line: 352, column: 34, scope: !9403)
!9419 = !DILocation(line: 353, column: 66, scope: !9403)
!9420 = !DILocation(line: 353, column: 4, scope: !9403)
!9421 = !DILocation(line: 353, column: 28, scope: !9403)
!9422 = !DILocation(line: 353, column: 10, scope: !9403)
!9423 = !DILocation(line: 353, column: 35, scope: !9403)
!9424 = !DILocation(line: 353, column: 60, scope: !9403)
!9425 = !DILocation(line: 353, column: 42, scope: !9403)
!9426 = !DILocation(line: 353, column: 68, scope: !9403)
!9427 = distinct !DISubprogram(name: "operator--", linkageName: "_ZNSt17_Rb_tree_iteratorIN5cGate4NameEEmmEv", scope: !692, file: !43, line: 300, type: !714, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !721, retainedNodes: !324)
!9428 = !DILocalVariable(name: "this", arg: 1, scope: !9427, type: !9122, flags: DIFlagArtificial | DIFlagObjectPointer)
!9429 = !DILocation(line: 0, scope: !9427)
!9430 = !DILocation(line: 302, column: 31, scope: !9427)
!9431 = !DILocation(line: 302, column: 12, scope: !9427)
!9432 = !DILocation(line: 302, column: 2, scope: !9427)
!9433 = !DILocation(line: 302, column: 10, scope: !9427)
!9434 = !DILocation(line: 303, column: 2, scope: !9427)
!9435 = distinct !DISubprogram(name: "pair<std::_Rb_tree_node_base *&, true>", linkageName: "_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_Lb1EEEOT_RKS1_", scope: !603, file: !604, line: 322, type: !9436, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9441, declaration: !9440, retainedNodes: !324)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{null, !631, !9407, !9438}
!9438 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9439, size: 64)
!9439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!9440 = !DISubprogram(name: "pair<std::_Rb_tree_node_base *&, true>", scope: !603, file: !604, line: 322, type: !9436, scopeLine: 322, flags: DIFlagPrototyped, spFlags: 0, templateParams: !9441)
!9441 = !{!9442, !528}
!9442 = !DITemplateTypeParameter(name: "_U1", type: !9407)
!9443 = !DILocalVariable(name: "this", arg: 1, scope: !9435, type: !9413, flags: DIFlagArtificial | DIFlagObjectPointer)
!9444 = !DILocation(line: 0, scope: !9435)
!9445 = !DILocalVariable(name: "__x", arg: 2, scope: !9435, file: !604, line: 322, type: !9407)
!9446 = !DILocation(line: 322, column: 29, scope: !9435)
!9447 = !DILocalVariable(name: "__y", arg: 3, scope: !9435, file: !604, line: 322, type: !9438)
!9448 = !DILocation(line: 322, column: 45, scope: !9435)
!9449 = !DILocation(line: 323, column: 53, scope: !9435)
!9450 = !DILocation(line: 323, column: 10, scope: !9435)
!9451 = !DILocation(line: 323, column: 34, scope: !9435)
!9452 = !DILocation(line: 323, column: 16, scope: !9435)
!9453 = !DILocation(line: 323, column: 41, scope: !9435)
!9454 = !DILocation(line: 323, column: 48, scope: !9435)
!9455 = !DILocation(line: 323, column: 55, scope: !9435)
!9456 = distinct !DISubprogram(name: "forward<std::_Rb_tree_node<cGate::Name> *&>", linkageName: "_ZSt7forwardIRPSt13_Rb_tree_nodeIN5cGate4NameEEEOT_RNSt16remove_referenceIS6_E4typeE", scope: !2, file: !8314, line: 76, type: !9457, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9462, retainedNodes: !324)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{!9406, !9459}
!9459 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9460, size: 64)
!9460 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9461, file: !643, line: 1598, baseType: !414)
!9461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<std::_Rb_tree_node<cGate::Name> *&>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9462, identifier: "_ZTSSt16remove_referenceIRPSt13_Rb_tree_nodeIN5cGate4NameEEE")
!9462 = !{!9463}
!9463 = !DITemplateTypeParameter(name: "_Tp", type: !9406)
!9464 = !DILocalVariable(name: "__t", arg: 1, scope: !9456, file: !8314, line: 76, type: !9459)
!9465 = !DILocation(line: 76, column: 56, scope: !9456)
!9466 = !DILocation(line: 77, column: 33, scope: !9456)
!9467 = !DILocation(line: 77, column: 7, scope: !9456)
!9468 = distinct !DISubprogram(name: "forward<std::_Rb_tree_node_base *&>", linkageName: "_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE", scope: !2, file: !8314, line: 76, type: !9469, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9474, retainedNodes: !324)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!9407, !9471}
!9471 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9472, size: 64)
!9472 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9473, file: !643, line: 1598, baseType: !335)
!9473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<std::_Rb_tree_node_base *&>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9474, identifier: "_ZTSSt16remove_referenceIRPSt18_Rb_tree_node_baseE")
!9474 = !{!9475}
!9475 = !DITemplateTypeParameter(name: "_Tp", type: !9407)
!9476 = !DILocalVariable(name: "__t", arg: 1, scope: !9468, file: !8314, line: 76, type: !9471)
!9477 = !DILocation(line: 76, column: 56, scope: !9468)
!9478 = !DILocation(line: 77, column: 33, scope: !9468)
!9479 = !DILocation(line: 77, column: 7, scope: !9468)
!9480 = distinct !DISubprogram(name: "operator()<const cGate::Name &>", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeclIRKS1_EEPSt13_Rb_tree_nodeIS1_EOT_", scope: !9194, file: !43, line: 550, type: !9481, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9177, declaration: !9485, retainedNodes: !324)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{!548, !9483, !223}
!9483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9484, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!9484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9194)
!9485 = !DISubprogram(name: "operator()<const cGate::Name &>", linkageName: "_ZNKSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_Alloc_nodeclIRKS1_EEPSt13_Rb_tree_nodeIS1_EOT_", scope: !9194, file: !43, line: 550, type: !9481, scopeLine: 550, flags: DIFlagPrototyped, spFlags: 0, templateParams: !9177)
!9486 = !DILocalVariable(name: "this", arg: 1, scope: !9480, type: !9487, flags: DIFlagArtificial | DIFlagObjectPointer)
!9487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9484, size: 64)
!9488 = !DILocation(line: 0, scope: !9480)
!9489 = !DILocalVariable(name: "__arg", arg: 2, scope: !9480, file: !43, line: 550, type: !223)
!9490 = !DILocation(line: 550, column: 22, scope: !9480)
!9491 = !DILocation(line: 552, column: 13, scope: !9480)
!9492 = !DILocation(line: 552, column: 33, scope: !9480)
!9493 = !DILocation(line: 552, column: 18, scope: !9480)
!9494 = !DILocation(line: 552, column: 6, scope: !9480)
!9495 = distinct !DISubprogram(name: "_M_create_node<const cGate::Name &>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRKS1_EEEPSt13_Rb_tree_nodeIS1_EDpOT_", scope: !131, file: !43, line: 632, type: !9496, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9499, declaration: !9498, retainedNodes: !324)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!548, !533, !223}
!9498 = !DISubprogram(name: "_M_create_node<const cGate::Name &>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRKS1_EEEPSt13_Rb_tree_nodeIS1_EDpOT_", scope: !131, file: !43, line: 632, type: !9496, scopeLine: 632, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0, templateParams: !9499)
!9499 = !{!9500}
!9500 = !DITemplateValueParameter(tag: DW_TAG_GNU_template_parameter_pack, name: "_Args", value: !9501)
!9501 = !{!9502}
!9502 = !DITemplateTypeParameter(type: !223)
!9503 = !DILocalVariable(name: "this", arg: 1, scope: !9495, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9504 = !DILocation(line: 0, scope: !9495)
!9505 = !DILocalVariable(name: "__args", arg: 2, scope: !9495, file: !43, line: 632, type: !223)
!9506 = !DILocation(line: 632, column: 28, scope: !9495)
!9507 = !DILocalVariable(name: "__tmp", scope: !9495, file: !43, line: 634, type: !548)
!9508 = !DILocation(line: 634, column: 15, scope: !9495)
!9509 = !DILocation(line: 634, column: 23, scope: !9495)
!9510 = !DILocation(line: 635, column: 22, scope: !9495)
!9511 = !DILocation(line: 635, column: 49, scope: !9495)
!9512 = !DILocation(line: 635, column: 29, scope: !9495)
!9513 = !DILocation(line: 635, column: 4, scope: !9495)
!9514 = !DILocation(line: 636, column: 11, scope: !9495)
!9515 = !DILocation(line: 636, column: 4, scope: !9495)
!9516 = distinct !DISubprogram(name: "_M_get_node", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv", scope: !131, file: !43, line: 583, type: !546, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !545, retainedNodes: !324)
!9517 = !DILocalVariable(name: "this", arg: 1, scope: !9516, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9518 = !DILocation(line: 0, scope: !9516)
!9519 = !DILocation(line: 584, column: 40, scope: !9516)
!9520 = !DILocation(line: 584, column: 16, scope: !9516)
!9521 = !DILocation(line: 584, column: 9, scope: !9516)
!9522 = distinct !DISubprogram(name: "_M_construct_node<const cGate::Name &>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRKS1_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_", scope: !131, file: !43, line: 613, type: !9523, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9499, declaration: !9525, retainedNodes: !324)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{null, !533, !548, !223}
!9525 = !DISubprogram(name: "_M_construct_node<const cGate::Name &>", linkageName: "_ZNSt8_Rb_treeIN5cGate4NameES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRKS1_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_", scope: !131, file: !43, line: 613, type: !9523, scopeLine: 613, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0, templateParams: !9499)
!9526 = !DILocalVariable(name: "this", arg: 1, scope: !9522, type: !8329, flags: DIFlagArtificial | DIFlagObjectPointer)
!9527 = !DILocation(line: 0, scope: !9522)
!9528 = !DILocalVariable(name: "__node", arg: 2, scope: !9522, file: !43, line: 613, type: !548)
!9529 = !DILocation(line: 613, column: 31, scope: !9522)
!9530 = !DILocalVariable(name: "__args", arg: 3, scope: !9522, file: !43, line: 613, type: !223)
!9531 = !DILocation(line: 613, column: 50, scope: !9522)
!9532 = !DILocation(line: 617, column: 14, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9522, file: !43, line: 616, column: 6)
!9534 = !DILocation(line: 617, column: 8, scope: !9533)
!9535 = !DILocation(line: 618, column: 33, scope: !9533)
!9536 = !DILocation(line: 619, column: 12, scope: !9533)
!9537 = !DILocation(line: 619, column: 20, scope: !9533)
!9538 = !DILocation(line: 620, column: 32, scope: !9533)
!9539 = !DILocation(line: 620, column: 12, scope: !9533)
!9540 = !DILocation(line: 618, column: 8, scope: !9533)
!9541 = !DILocation(line: 621, column: 6, scope: !9533)
!9542 = !DILocation(line: 628, column: 2, scope: !9533)
!9543 = !DILocation(line: 624, column: 8, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9522, file: !43, line: 623, column: 6)
!9545 = !DILocation(line: 625, column: 20, scope: !9544)
!9546 = !DILocation(line: 625, column: 8, scope: !9544)
!9547 = !DILocation(line: 626, column: 8, scope: !9544)
!9548 = !DILocation(line: 628, column: 2, scope: !9544)
!9549 = !DILocation(line: 627, column: 6, scope: !9544)
!9550 = !DILocation(line: 628, column: 2, scope: !9522)
!9551 = distinct !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE8allocateERS4_m", scope: !8479, file: !146, line: 459, type: !8482, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !8481, retainedNodes: !324)
!9552 = !DILocalVariable(name: "__a", arg: 1, scope: !9551, file: !146, line: 459, type: !8485)
!9553 = !DILocation(line: 459, column: 32, scope: !9551)
!9554 = !DILocalVariable(name: "__n", arg: 2, scope: !9551, file: !146, line: 459, type: !290)
!9555 = !DILocation(line: 459, column: 47, scope: !9551)
!9556 = !DILocation(line: 460, column: 16, scope: !9551)
!9557 = !DILocation(line: 460, column: 29, scope: !9551)
!9558 = !DILocation(line: 460, column: 20, scope: !9551)
!9559 = !DILocation(line: 460, column: 9, scope: !9551)
!9560 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE8allocateEmPKv", scope: !398, file: !233, line: 103, type: !426, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !425, retainedNodes: !324)
!9561 = !DILocalVariable(name: "this", arg: 1, scope: !9560, type: !8367, flags: DIFlagArtificial | DIFlagObjectPointer)
!9562 = !DILocation(line: 0, scope: !9560)
!9563 = !DILocalVariable(name: "__n", arg: 2, scope: !9560, file: !233, line: 103, type: !261)
!9564 = !DILocation(line: 103, column: 26, scope: !9560)
!9565 = !DILocalVariable(arg: 3, scope: !9560, file: !233, line: 103, type: !265)
!9566 = !DILocation(line: 103, column: 43, scope: !9560)
!9567 = !DILocation(line: 105, column: 6, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9560, file: !233, line: 105, column: 6)
!9569 = !DILocation(line: 105, column: 18, scope: !9568)
!9570 = !DILocation(line: 105, column: 10, scope: !9568)
!9571 = !DILocation(line: 105, column: 6, scope: !9560)
!9572 = !DILocation(line: 106, column: 4, scope: !9568)
!9573 = !DILocation(line: 115, column: 42, scope: !9560)
!9574 = !DILocation(line: 115, column: 46, scope: !9560)
!9575 = !DILocation(line: 115, column: 27, scope: !9560)
!9576 = !DILocation(line: 115, column: 9, scope: !9560)
!9577 = !DILocation(line: 115, column: 2, scope: !9560)
!9578 = distinct !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE11_M_max_sizeEv", scope: !398, file: !233, line: 185, type: !432, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !434, retainedNodes: !324)
!9579 = !DILocalVariable(name: "this", arg: 1, scope: !9578, type: !9580, flags: DIFlagArtificial | DIFlagObjectPointer)
!9580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!9581 = !DILocation(line: 0, scope: !9578)
!9582 = !DILocation(line: 188, column: 2, scope: !9578)
!9583 = distinct !DISubprogram(name: "construct<cGate::Name, const cGate::Name &>", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_", scope: !8479, file: !146, line: 507, type: !9584, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9587, declaration: !9586, retainedNodes: !324)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{null, !8485, !152, !223}
!9586 = !DISubprogram(name: "construct<cGate::Name, const cGate::Name &>", linkageName: "_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIN5cGate4NameEEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_", scope: !8479, file: !146, line: 507, type: !9584, scopeLine: 507, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0, templateParams: !9587)
!9587 = !{!8508, !9500}
!9588 = !DILocalVariable(name: "__a", arg: 1, scope: !9583, file: !146, line: 507, type: !8485)
!9589 = !DILocation(line: 507, column: 28, scope: !9583)
!9590 = !DILocalVariable(name: "__p", arg: 2, scope: !9583, file: !146, line: 507, type: !152)
!9591 = !DILocation(line: 507, column: 66, scope: !9583)
!9592 = !DILocalVariable(name: "__args", arg: 3, scope: !9583, file: !146, line: 508, type: !223)
!9593 = !DILocation(line: 508, column: 16, scope: !9583)
!9594 = !DILocation(line: 512, column: 4, scope: !9583)
!9595 = !DILocation(line: 512, column: 18, scope: !9583)
!9596 = !DILocation(line: 512, column: 43, scope: !9583)
!9597 = !DILocation(line: 512, column: 23, scope: !9583)
!9598 = !DILocation(line: 512, column: 8, scope: !9583)
!9599 = !DILocation(line: 516, column: 2, scope: !9583)
!9600 = distinct !DISubprogram(name: "construct<cGate::Name, const cGate::Name &>", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE9constructIS3_JRKS3_EEEvPT_DpOT0_", scope: !398, file: !233, line: 148, type: !9601, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9587, declaration: !9603, retainedNodes: !324)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !403, !152, !223}
!9603 = !DISubprogram(name: "construct<cGate::Name, const cGate::Name &>", linkageName: "_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5cGate4NameEEE9constructIS3_JRKS3_EEEvPT_DpOT0_", scope: !398, file: !233, line: 148, type: !9601, scopeLine: 148, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !9587)
!9604 = !DILocalVariable(name: "this", arg: 1, scope: !9600, type: !8367, flags: DIFlagArtificial | DIFlagObjectPointer)
!9605 = !DILocation(line: 0, scope: !9600)
!9606 = !DILocalVariable(name: "__p", arg: 2, scope: !9600, file: !233, line: 148, type: !152)
!9607 = !DILocation(line: 148, column: 17, scope: !9600)
!9608 = !DILocalVariable(name: "__args", arg: 3, scope: !9600, file: !233, line: 148, type: !223)
!9609 = !DILocation(line: 148, column: 33, scope: !9600)
!9610 = !DILocation(line: 150, column: 18, scope: !9600)
!9611 = !DILocation(line: 150, column: 4, scope: !9600)
!9612 = !DILocation(line: 150, column: 47, scope: !9600)
!9613 = !DILocation(line: 150, column: 27, scope: !9600)
!9614 = !DILocation(line: 150, column: 23, scope: !9600)
!9615 = !DILocation(line: 150, column: 60, scope: !9600)
!9616 = distinct !DISubprogram(name: "Name", linkageName: "_ZN5cGate4NameC2ERKS0_", scope: !153, file: !34, line: 83, type: !9617, scopeLine: 83, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !9619, retainedNodes: !324)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{null, !217, !223}
!9619 = !DISubprogram(name: "Name", scope: !153, type: !9617, flags: DIFlagArtificial | DIFlagPrototyped, spFlags: 0)
!9620 = !DILocalVariable(name: "this", arg: 1, scope: !9616, type: !152, flags: DIFlagArtificial | DIFlagObjectPointer)
!9621 = !DILocation(line: 0, scope: !9616)
!9622 = !DILocalVariable(arg: 2, scope: !9616, type: !223)
!9623 = !DILocation(line: 83, column: 20, scope: !9616)
!9624 = !DILocation(line: 83, column: 20, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9616, file: !34, line: 83, column: 20)
!9626 = distinct !DISubprogram(name: "opp_string", linkageName: "_ZN10opp_stringC2ERKS_", scope: !156, file: !157, line: 65, type: !175, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !174, retainedNodes: !324)
!9627 = !DILocalVariable(name: "this", arg: 1, scope: !9626, type: !7164, flags: DIFlagArtificial | DIFlagObjectPointer)
!9628 = !DILocation(line: 0, scope: !9626)
!9629 = !DILocalVariable(name: "s", arg: 2, scope: !9626, file: !157, line: 65, type: !177)
!9630 = !DILocation(line: 65, column: 34, scope: !9626)
!9631 = !DILocation(line: 65, column: 56, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9626, file: !157, line: 65, column: 38)
!9633 = !DILocation(line: 65, column: 58, scope: !9632)
!9634 = !DILocation(line: 65, column: 45, scope: !9632)
!9635 = !DILocation(line: 65, column: 39, scope: !9632)
!9636 = !DILocation(line: 65, column: 43, scope: !9632)
!9637 = !DILocation(line: 65, column: 63, scope: !9626)
!9638 = distinct !DISubprogram(name: "forward<std::_Rb_tree_iterator<cGate::Name> >", linkageName: "_ZSt7forwardISt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS4_E4typeE", scope: !2, file: !8314, line: 76, type: !9639, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9644, retainedNodes: !324)
!9639 = !DISubroutineType(types: !9640)
!9640 = !{!9375, !9641}
!9641 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9642, size: 64)
!9642 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9643, file: !643, line: 1594, baseType: !692)
!9643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<std::_Rb_tree_iterator<cGate::Name> >", scope: !2, file: !643, line: 1593, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9644, identifier: "_ZTSSt16remove_referenceISt17_Rb_tree_iteratorIN5cGate4NameEEE")
!9644 = !{!9645}
!9645 = !DITemplateTypeParameter(name: "_Tp", type: !692)
!9646 = !DILocalVariable(name: "__t", arg: 1, scope: !9638, file: !8314, line: 76, type: !9641)
!9647 = !DILocation(line: 76, column: 56, scope: !9638)
!9648 = !DILocation(line: 77, column: 33, scope: !9638)
!9649 = !DILocation(line: 77, column: 7, scope: !9638)
!9650 = distinct !DISubprogram(name: "forward<bool>", linkageName: "_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE", scope: !2, file: !8314, line: 76, type: !9651, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9656, retainedNodes: !324)
!9651 = !DISubroutineType(types: !9652)
!9652 = !{!9376, !9653}
!9653 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9654, size: 64)
!9654 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9655, file: !643, line: 1594, baseType: !13)
!9655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<bool>", scope: !2, file: !643, line: 1593, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9656, identifier: "_ZTSSt16remove_referenceIbE")
!9656 = !{!810}
!9657 = !DILocalVariable(name: "__t", arg: 1, scope: !9650, file: !8314, line: 76, type: !9653)
!9658 = !DILocation(line: 76, column: 56, scope: !9650)
!9659 = !DILocation(line: 77, column: 33, scope: !9650)
!9660 = !DILocation(line: 77, column: 7, scope: !9650)
!9661 = distinct !DISubprogram(name: "forward<std::_Rb_tree_iterator<cGate::Name> &>", linkageName: "_ZSt7forwardIRSt17_Rb_tree_iteratorIN5cGate4NameEEEOT_RNSt16remove_referenceIS5_E4typeE", scope: !2, file: !8314, line: 76, type: !9662, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9667, retainedNodes: !324)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{!9218, !9664}
!9664 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9665, size: 64)
!9665 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9666, file: !643, line: 1598, baseType: !692)
!9666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<std::_Rb_tree_iterator<cGate::Name> &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9667, identifier: "_ZTSSt16remove_referenceIRSt17_Rb_tree_iteratorIN5cGate4NameEEE")
!9667 = !{!9668}
!9668 = !DITemplateTypeParameter(name: "_Tp", type: !9218)
!9669 = !DILocalVariable(name: "__t", arg: 1, scope: !9661, file: !8314, line: 76, type: !9664)
!9670 = !DILocation(line: 76, column: 56, scope: !9661)
!9671 = !DILocation(line: 77, column: 33, scope: !9661)
!9672 = !DILocation(line: 77, column: 7, scope: !9661)
!9673 = distinct !DISubprogram(name: "forward<bool &>", linkageName: "_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE", scope: !2, file: !8314, line: 76, type: !9674, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9679, retainedNodes: !324)
!9674 = !DISubroutineType(types: !9675)
!9675 = !{!9219, !9676}
!9676 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9677, size: 64)
!9677 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9678, file: !643, line: 1598, baseType: !13)
!9678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<bool &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9679, identifier: "_ZTSSt16remove_referenceIRbE")
!9679 = !{!9680}
!9680 = !DITemplateTypeParameter(name: "_Tp", type: !9219)
!9681 = !DILocalVariable(name: "__t", arg: 1, scope: !9673, file: !8314, line: 76, type: !9676)
!9682 = !DILocation(line: 76, column: 56, scope: !9673)
!9683 = !DILocation(line: 77, column: 33, scope: !9673)
!9684 = !DILocation(line: 77, column: 7, scope: !9673)
!9685 = distinct !DISubprogram(name: "emplace_back<const char *>", linkageName: "_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEEvDpOT_", scope: !1496, file: !9686, line: 110, type: !9687, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9691, declaration: !9690, retainedNodes: !324)
!9686 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/vector.tcc", directory: "")
!9687 = !DISubroutineType(types: !9688)
!9688 = !{null, !1725, !9689}
!9689 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !167, size: 64)
!9690 = !DISubprogram(name: "emplace_back<const char *>", linkageName: "_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEEvDpOT_", scope: !1496, file: !1497, line: 1212, type: !9687, scopeLine: 1212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !9691)
!9691 = !{!9692}
!9692 = !DITemplateValueParameter(tag: DW_TAG_GNU_template_parameter_pack, name: "_Args", value: !9693)
!9693 = !{!1606}
!9694 = !DILocalVariable(name: "this", arg: 1, scope: !9685, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!9695 = !DILocation(line: 0, scope: !9685)
!9696 = !DILocalVariable(name: "__args", arg: 2, scope: !9685, file: !1497, line: 1212, type: !9689)
!9697 = !DILocation(line: 1212, column: 26, scope: !9685)
!9698 = !DILocation(line: 112, column: 12, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9685, file: !9686, line: 112, column: 6)
!9700 = !DILocation(line: 112, column: 6, scope: !9699)
!9701 = !DILocation(line: 112, column: 20, scope: !9699)
!9702 = !DILocation(line: 112, column: 39, scope: !9699)
!9703 = !DILocation(line: 112, column: 33, scope: !9699)
!9704 = !DILocation(line: 112, column: 47, scope: !9699)
!9705 = !DILocation(line: 112, column: 30, scope: !9699)
!9706 = !DILocation(line: 112, column: 6, scope: !9685)
!9707 = !DILocation(line: 115, column: 37, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9699, file: !9686, line: 113, column: 4)
!9709 = !DILocation(line: 115, column: 31, scope: !9708)
!9710 = !DILocation(line: 115, column: 52, scope: !9708)
!9711 = !DILocation(line: 115, column: 46, scope: !9708)
!9712 = !DILocation(line: 115, column: 60, scope: !9708)
!9713 = !DILocation(line: 116, column: 30, scope: !9708)
!9714 = !DILocation(line: 116, column: 10, scope: !9708)
!9715 = !DILocation(line: 115, column: 6, scope: !9708)
!9716 = !DILocation(line: 117, column: 14, scope: !9708)
!9717 = !DILocation(line: 117, column: 8, scope: !9708)
!9718 = !DILocation(line: 117, column: 22, scope: !9708)
!9719 = !DILocation(line: 117, column: 6, scope: !9708)
!9720 = !DILocation(line: 119, column: 4, scope: !9708)
!9721 = !DILocation(line: 121, column: 22, scope: !9699)
!9722 = !DILocation(line: 121, column: 49, scope: !9699)
!9723 = !DILocation(line: 121, column: 29, scope: !9699)
!9724 = !DILocation(line: 121, column: 4, scope: !9699)
!9725 = !DILocation(line: 125, column: 7, scope: !9685)
!9726 = distinct !DISubprogram(name: "move<const char *&>", linkageName: "_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_", scope: !2, file: !8314, line: 101, type: !9727, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9732, retainedNodes: !324)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!9729, !1353}
!9729 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !9730, size: 64)
!9730 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9731, file: !643, line: 1598, baseType: !167)
!9731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<const char *&>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !9732, identifier: "_ZTSSt16remove_referenceIRPKcE")
!9732 = !{!9733}
!9733 = !DITemplateTypeParameter(name: "_Tp", type: !1353)
!9734 = !DILocalVariable(name: "__t", arg: 1, scope: !9726, file: !8314, line: 101, type: !1353)
!9735 = !DILocation(line: 101, column: 16, scope: !9726)
!9736 = !DILocation(line: 102, column: 71, scope: !9726)
!9737 = !DILocation(line: 102, column: 7, scope: !9726)
!9738 = distinct !DISubprogram(name: "construct<const char *, const char *>", linkageName: "_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_", scope: !1512, file: !146, line: 507, type: !9739, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9742, declaration: !9741, retainedNodes: !324)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{null, !1519, !1518, !9689}
!9741 = !DISubprogram(name: "construct<const char *, const char *>", linkageName: "_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_", scope: !1512, file: !146, line: 507, type: !9739, scopeLine: 507, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0, templateParams: !9742)
!9742 = !{!9743, !9692}
!9743 = !DITemplateTypeParameter(name: "_Up", type: !167)
!9744 = !DILocalVariable(name: "__a", arg: 1, scope: !9738, file: !146, line: 507, type: !1519)
!9745 = !DILocation(line: 507, column: 28, scope: !9738)
!9746 = !DILocalVariable(name: "__p", arg: 2, scope: !9738, file: !146, line: 507, type: !1518)
!9747 = !DILocation(line: 507, column: 66, scope: !9738)
!9748 = !DILocalVariable(name: "__args", arg: 3, scope: !9738, file: !146, line: 508, type: !9689)
!9749 = !DILocation(line: 508, column: 16, scope: !9738)
!9750 = !DILocation(line: 512, column: 4, scope: !9738)
!9751 = !DILocation(line: 512, column: 18, scope: !9738)
!9752 = !DILocation(line: 512, column: 43, scope: !9738)
!9753 = !DILocation(line: 512, column: 23, scope: !9738)
!9754 = !DILocation(line: 512, column: 8, scope: !9738)
!9755 = !DILocation(line: 516, column: 2, scope: !9738)
!9756 = distinct !DISubprogram(name: "forward<const char *>", linkageName: "_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE", scope: !2, file: !8314, line: 76, type: !9757, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !1561, retainedNodes: !324)
!9757 = !DISubroutineType(types: !9758)
!9758 = !{!9689, !9759}
!9759 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9760, size: 64)
!9760 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !9761, file: !643, line: 1594, baseType: !167)
!9761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<const char *>", scope: !2, file: !643, line: 1593, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !1561, identifier: "_ZTSSt16remove_referenceIPKcE")
!9762 = !DILocalVariable(name: "__t", arg: 1, scope: !9756, file: !8314, line: 76, type: !9759)
!9763 = !DILocation(line: 76, column: 56, scope: !9756)
!9764 = !DILocation(line: 77, column: 33, scope: !9756)
!9765 = !DILocation(line: 77, column: 7, scope: !9756)
!9766 = distinct !DISubprogram(name: "_M_realloc_insert<const char *>", linkageName: "_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_", scope: !1496, file: !9686, line: 427, type: !9767, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9691, declaration: !9769, retainedNodes: !324)
!9767 = !DISubroutineType(types: !9768)
!9768 = !{null, !1725, !1787, !9689}
!9769 = !DISubprogram(name: "_M_realloc_insert<const char *>", linkageName: "_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_", scope: !1496, file: !1497, line: 1737, type: !9767, scopeLine: 1737, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0, templateParams: !9691)
!9770 = !DILocalVariable(name: "this", arg: 1, scope: !9766, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!9771 = !DILocation(line: 0, scope: !9766)
!9772 = !DILocalVariable(name: "__position", arg: 2, scope: !9766, file: !1497, line: 1737, type: !1787)
!9773 = !DILocation(line: 1737, column: 29, scope: !9766)
!9774 = !DILocalVariable(name: "__args", arg: 3, scope: !9766, file: !1497, line: 1737, type: !9689)
!9775 = !DILocation(line: 1737, column: 52, scope: !9766)
!9776 = !DILocalVariable(name: "__len", scope: !9766, file: !9686, line: 435, type: !9777)
!9777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1735)
!9778 = !DILocation(line: 435, column: 23, scope: !9766)
!9779 = !DILocation(line: 436, column: 2, scope: !9766)
!9780 = !DILocalVariable(name: "__old_start", scope: !9766, file: !9686, line: 437, type: !1713)
!9781 = !DILocation(line: 437, column: 15, scope: !9766)
!9782 = !DILocation(line: 437, column: 35, scope: !9766)
!9783 = !DILocation(line: 437, column: 29, scope: !9766)
!9784 = !DILocation(line: 437, column: 43, scope: !9766)
!9785 = !DILocalVariable(name: "__old_finish", scope: !9766, file: !9686, line: 438, type: !1713)
!9786 = !DILocation(line: 438, column: 15, scope: !9766)
!9787 = !DILocation(line: 438, column: 36, scope: !9766)
!9788 = !DILocation(line: 438, column: 30, scope: !9766)
!9789 = !DILocation(line: 438, column: 44, scope: !9766)
!9790 = !DILocalVariable(name: "__elems_before", scope: !9766, file: !9686, line: 439, type: !9777)
!9791 = !DILocation(line: 439, column: 23, scope: !9766)
!9792 = !DILocation(line: 439, column: 53, scope: !9766)
!9793 = !DILocation(line: 439, column: 51, scope: !9766)
!9794 = !DILocalVariable(name: "__new_start", scope: !9766, file: !9686, line: 440, type: !1713)
!9795 = !DILocation(line: 440, column: 15, scope: !9766)
!9796 = !DILocation(line: 440, column: 33, scope: !9766)
!9797 = !DILocation(line: 440, column: 45, scope: !9766)
!9798 = !DILocalVariable(name: "__new_finish", scope: !9766, file: !9686, line: 441, type: !1713)
!9799 = !DILocation(line: 441, column: 15, scope: !9766)
!9800 = !DILocation(line: 441, column: 28, scope: !9766)
!9801 = !DILocation(line: 449, column: 35, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9766, file: !9686, line: 443, column: 2)
!9803 = !DILocation(line: 449, column: 29, scope: !9802)
!9804 = !DILocation(line: 450, column: 8, scope: !9802)
!9805 = !DILocation(line: 450, column: 22, scope: !9802)
!9806 = !DILocation(line: 450, column: 20, scope: !9802)
!9807 = !DILocation(line: 452, column: 28, scope: !9802)
!9808 = !DILocation(line: 452, column: 8, scope: !9802)
!9809 = !DILocation(line: 449, column: 4, scope: !9802)
!9810 = !DILocation(line: 456, column: 17, scope: !9802)
!9811 = !DILocation(line: 461, column: 35, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9813, file: !9686, line: 460, column: 6)
!9813 = distinct !DILexicalBlock(scope: !9802, file: !9686, line: 459, column: 29)
!9814 = !DILocation(line: 461, column: 59, scope: !9812)
!9815 = !DILocation(line: 462, column: 7, scope: !9812)
!9816 = !DILocation(line: 462, column: 20, scope: !9812)
!9817 = !DILocation(line: 461, column: 23, scope: !9812)
!9818 = !DILocation(line: 461, column: 21, scope: !9812)
!9819 = !DILocation(line: 464, column: 8, scope: !9812)
!9820 = !DILocation(line: 466, column: 46, scope: !9812)
!9821 = !DILocation(line: 466, column: 54, scope: !9812)
!9822 = !DILocation(line: 467, column: 7, scope: !9812)
!9823 = !DILocation(line: 467, column: 21, scope: !9812)
!9824 = !DILocation(line: 466, column: 23, scope: !9812)
!9825 = !DILocation(line: 466, column: 21, scope: !9812)
!9826 = !DILocation(line: 500, column: 7, scope: !9766)
!9827 = !DILocation(line: 500, column: 21, scope: !9766)
!9828 = !DILocation(line: 501, column: 13, scope: !9766)
!9829 = !DILocation(line: 501, column: 7, scope: !9766)
!9830 = !DILocation(line: 501, column: 21, scope: !9766)
!9831 = !DILocation(line: 501, column: 41, scope: !9766)
!9832 = !DILocation(line: 501, column: 39, scope: !9766)
!9833 = !DILocation(line: 502, column: 32, scope: !9766)
!9834 = !DILocation(line: 502, column: 13, scope: !9766)
!9835 = !DILocation(line: 502, column: 7, scope: !9766)
!9836 = !DILocation(line: 502, column: 21, scope: !9766)
!9837 = !DILocation(line: 502, column: 30, scope: !9766)
!9838 = !DILocation(line: 503, column: 33, scope: !9766)
!9839 = !DILocation(line: 503, column: 13, scope: !9766)
!9840 = !DILocation(line: 503, column: 7, scope: !9766)
!9841 = !DILocation(line: 503, column: 21, scope: !9766)
!9842 = !DILocation(line: 503, column: 31, scope: !9766)
!9843 = !DILocation(line: 504, column: 41, scope: !9766)
!9844 = !DILocation(line: 504, column: 55, scope: !9766)
!9845 = !DILocation(line: 504, column: 53, scope: !9766)
!9846 = !DILocation(line: 504, column: 13, scope: !9766)
!9847 = !DILocation(line: 504, column: 7, scope: !9766)
!9848 = !DILocation(line: 504, column: 21, scope: !9766)
!9849 = !DILocation(line: 504, column: 39, scope: !9766)
!9850 = !DILocation(line: 505, column: 5, scope: !9766)
!9851 = distinct !DISubprogram(name: "end", linkageName: "_ZNSt6vectorIPKcSaIS1_EE3endEv", scope: !1496, file: !1497, line: 829, type: !1785, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1850, retainedNodes: !324)
!9852 = !DILocalVariable(name: "this", arg: 1, scope: !9851, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!9853 = !DILocation(line: 0, scope: !9851)
!9854 = !DILocation(line: 830, column: 31, scope: !9851)
!9855 = !DILocation(line: 830, column: 25, scope: !9851)
!9856 = !DILocation(line: 830, column: 39, scope: !9851)
!9857 = !DILocation(line: 830, column: 16, scope: !9851)
!9858 = !DILocation(line: 830, column: 9, scope: !9851)
!9859 = distinct !DISubprogram(name: "construct<const char *, const char *>", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcE9constructIS2_JS2_EEEvPT_DpOT0_", scope: !1525, file: !233, line: 148, type: !9860, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9742, declaration: !9862, retainedNodes: !324)
!9860 = !DISubroutineType(types: !9861)
!9861 = !{null, !1530, !1518, !9689}
!9862 = !DISubprogram(name: "construct<const char *, const char *>", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcE9constructIS2_JS2_EEEvPT_DpOT0_", scope: !1525, file: !233, line: 148, type: !9860, scopeLine: 148, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !9742)
!9863 = !DILocalVariable(name: "this", arg: 1, scope: !9859, type: !8616, flags: DIFlagArtificial | DIFlagObjectPointer)
!9864 = !DILocation(line: 0, scope: !9859)
!9865 = !DILocalVariable(name: "__p", arg: 2, scope: !9859, file: !233, line: 148, type: !1518)
!9866 = !DILocation(line: 148, column: 17, scope: !9859)
!9867 = !DILocalVariable(name: "__args", arg: 3, scope: !9859, file: !233, line: 148, type: !9689)
!9868 = !DILocation(line: 148, column: 33, scope: !9859)
!9869 = !DILocation(line: 150, column: 18, scope: !9859)
!9870 = !DILocation(line: 150, column: 4, scope: !9859)
!9871 = !DILocation(line: 150, column: 47, scope: !9859)
!9872 = !DILocation(line: 150, column: 27, scope: !9859)
!9873 = !DILocation(line: 150, column: 60, scope: !9859)
!9874 = distinct !DISubprogram(name: "_M_check_len", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_", scope: !1496, file: !1497, line: 1756, type: !1959, scopeLine: 1757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1958, retainedNodes: !324)
!9875 = !DILocalVariable(name: "this", arg: 1, scope: !9874, type: !9876, flags: DIFlagArtificial | DIFlagObjectPointer)
!9876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!9877 = !DILocation(line: 0, scope: !9874)
!9878 = !DILocalVariable(name: "__n", arg: 2, scope: !9874, file: !1497, line: 1756, type: !1735)
!9879 = !DILocation(line: 1756, column: 30, scope: !9874)
!9880 = !DILocalVariable(name: "__s", arg: 3, scope: !9874, file: !1497, line: 1756, type: !167)
!9881 = !DILocation(line: 1756, column: 47, scope: !9874)
!9882 = !DILocation(line: 1758, column: 6, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9874, file: !1497, line: 1758, column: 6)
!9884 = !DILocation(line: 1758, column: 19, scope: !9883)
!9885 = !DILocation(line: 1758, column: 17, scope: !9883)
!9886 = !DILocation(line: 1758, column: 28, scope: !9883)
!9887 = !DILocation(line: 1758, column: 26, scope: !9883)
!9888 = !DILocation(line: 1758, column: 6, scope: !9874)
!9889 = !DILocation(line: 1759, column: 25, scope: !9883)
!9890 = !DILocation(line: 1759, column: 4, scope: !9883)
!9891 = !DILocalVariable(name: "__len", scope: !9874, file: !1497, line: 1761, type: !9777)
!9892 = !DILocation(line: 1761, column: 18, scope: !9874)
!9893 = !DILocation(line: 1761, column: 26, scope: !9874)
!9894 = !DILocation(line: 1761, column: 46, scope: !9874)
!9895 = !DILocation(line: 1761, column: 35, scope: !9874)
!9896 = !DILocation(line: 1761, column: 33, scope: !9874)
!9897 = !DILocation(line: 1762, column: 10, scope: !9874)
!9898 = !DILocation(line: 1762, column: 18, scope: !9874)
!9899 = !DILocation(line: 1762, column: 16, scope: !9874)
!9900 = !DILocation(line: 1762, column: 25, scope: !9874)
!9901 = !DILocation(line: 1762, column: 28, scope: !9874)
!9902 = !DILocation(line: 1762, column: 36, scope: !9874)
!9903 = !DILocation(line: 1762, column: 34, scope: !9874)
!9904 = !DILocation(line: 1762, column: 9, scope: !9874)
!9905 = !DILocation(line: 1762, column: 50, scope: !9874)
!9906 = !DILocation(line: 1762, column: 63, scope: !9874)
!9907 = !DILocation(line: 1762, column: 2, scope: !9874)
!9908 = distinct !DISubprogram(name: "operator-<const char **, std::vector<const char *, std::allocator<const char *> > >", linkageName: "_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_", scope: !142, file: !852, line: 1177, type: !9909, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !1842, retainedNodes: !324)
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!1828, !9911, !9911}
!9911 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1810, size: 64)
!9912 = !DILocalVariable(name: "__lhs", arg: 1, scope: !9908, file: !852, line: 1177, type: !9911)
!9913 = !DILocation(line: 1177, column: 63, scope: !9908)
!9914 = !DILocalVariable(name: "__rhs", arg: 2, scope: !9908, file: !852, line: 1178, type: !9911)
!9915 = !DILocation(line: 1178, column: 56, scope: !9908)
!9916 = !DILocation(line: 1180, column: 14, scope: !9908)
!9917 = !DILocation(line: 1180, column: 20, scope: !9908)
!9918 = !DILocation(line: 1180, column: 29, scope: !9908)
!9919 = !DILocation(line: 1180, column: 35, scope: !9908)
!9920 = !DILocation(line: 1180, column: 27, scope: !9908)
!9921 = !DILocation(line: 1180, column: 7, scope: !9908)
!9922 = distinct !DISubprogram(name: "begin", linkageName: "_ZNSt6vectorIPKcSaIS1_EE5beginEv", scope: !1496, file: !1497, line: 811, type: !1785, scopeLine: 812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1784, retainedNodes: !324)
!9923 = !DILocalVariable(name: "this", arg: 1, scope: !9922, type: !6320, flags: DIFlagArtificial | DIFlagObjectPointer)
!9924 = !DILocation(line: 0, scope: !9922)
!9925 = !DILocation(line: 812, column: 31, scope: !9922)
!9926 = !DILocation(line: 812, column: 25, scope: !9922)
!9927 = !DILocation(line: 812, column: 39, scope: !9922)
!9928 = !DILocation(line: 812, column: 16, scope: !9922)
!9929 = !DILocation(line: 812, column: 9, scope: !9922)
!9930 = distinct !DISubprogram(name: "_M_allocate", linkageName: "_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm", scope: !1500, file: !1497, line: 343, type: !1696, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1695, retainedNodes: !324)
!9931 = !DILocalVariable(name: "this", arg: 1, scope: !9930, type: !8587, flags: DIFlagArtificial | DIFlagObjectPointer)
!9932 = !DILocation(line: 0, scope: !9930)
!9933 = !DILocalVariable(name: "__n", arg: 2, scope: !9930, file: !1497, line: 343, type: !262)
!9934 = !DILocation(line: 343, column: 26, scope: !9930)
!9935 = !DILocation(line: 346, column: 9, scope: !9930)
!9936 = !DILocation(line: 346, column: 13, scope: !9930)
!9937 = !DILocation(line: 346, column: 34, scope: !9930)
!9938 = !DILocation(line: 346, column: 43, scope: !9930)
!9939 = !DILocation(line: 346, column: 20, scope: !9930)
!9940 = !DILocation(line: 346, column: 2, scope: !9930)
!9941 = !DILocalVariable(name: "__first", arg: 1, scope: !2058, file: !1497, line: 465, type: !1713)
!9942 = !DILocation(line: 465, column: 27, scope: !2058)
!9943 = !DILocalVariable(name: "__last", arg: 2, scope: !2058, file: !1497, line: 465, type: !1713)
!9944 = !DILocation(line: 465, column: 44, scope: !2058)
!9945 = !DILocalVariable(name: "__result", arg: 3, scope: !2058, file: !1497, line: 465, type: !1713)
!9946 = !DILocation(line: 465, column: 60, scope: !2058)
!9947 = !DILocalVariable(name: "__alloc", arg: 4, scope: !2058, file: !1497, line: 466, type: !1714)
!9948 = !DILocation(line: 466, column: 21, scope: !2058)
!9949 = !DILocation(line: 469, column: 24, scope: !2058)
!9950 = !DILocation(line: 469, column: 33, scope: !2058)
!9951 = !DILocation(line: 469, column: 41, scope: !2058)
!9952 = !DILocation(line: 469, column: 51, scope: !2058)
!9953 = !DILocation(line: 469, column: 9, scope: !2058)
!9954 = !DILocation(line: 469, column: 2, scope: !2058)
!9955 = distinct !DISubprogram(name: "base", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv", scope: !1788, file: !852, line: 1031, type: !1840, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1839, retainedNodes: !324)
!9956 = !DILocalVariable(name: "this", arg: 1, scope: !9955, type: !9957, flags: DIFlagArtificial | DIFlagObjectPointer)
!9957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!9958 = !DILocation(line: 0, scope: !9955)
!9959 = !DILocation(line: 1032, column: 16, scope: !9955)
!9960 = !DILocation(line: 1032, column: 9, scope: !9955)
!9961 = distinct !DISubprogram(name: "max_size", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv", scope: !1496, file: !1497, line: 923, type: !1869, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1871, retainedNodes: !324)
!9962 = !DILocalVariable(name: "this", arg: 1, scope: !9961, type: !9876, flags: DIFlagArtificial | DIFlagObjectPointer)
!9963 = !DILocation(line: 0, scope: !9961)
!9964 = !DILocation(line: 924, column: 28, scope: !9961)
!9965 = !DILocation(line: 924, column: 16, scope: !9961)
!9966 = !DILocation(line: 924, column: 9, scope: !9961)
!9967 = distinct !DISubprogram(name: "size", linkageName: "_ZNKSt6vectorIPKcSaIS1_EE4sizeEv", scope: !1496, file: !1497, line: 918, type: !1869, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1868, retainedNodes: !324)
!9968 = !DILocalVariable(name: "this", arg: 1, scope: !9967, type: !9876, flags: DIFlagArtificial | DIFlagObjectPointer)
!9969 = !DILocation(line: 0, scope: !9967)
!9970 = !DILocation(line: 919, column: 32, scope: !9967)
!9971 = !DILocation(line: 919, column: 26, scope: !9967)
!9972 = !DILocation(line: 919, column: 40, scope: !9967)
!9973 = !DILocation(line: 919, column: 58, scope: !9967)
!9974 = !DILocation(line: 919, column: 52, scope: !9967)
!9975 = !DILocation(line: 919, column: 66, scope: !9967)
!9976 = !DILocation(line: 919, column: 50, scope: !9967)
!9977 = !DILocation(line: 919, column: 9, scope: !9967)
!9978 = distinct !DISubprogram(name: "max<unsigned long>", linkageName: "_ZSt3maxImERKT_S2_S2_", scope: !2, file: !9979, line: 254, type: !9980, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9984, retainedNodes: !324)
!9979 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_algobase.h", directory: "")
!9980 = !DISubroutineType(types: !9981)
!9981 = !{!9982, !9982, !9982}
!9982 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !9983, size: 64)
!9983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!9984 = !{!9985}
!9985 = !DITemplateTypeParameter(name: "_Tp", type: !264)
!9986 = !DILocalVariable(name: "__a", arg: 1, scope: !9978, file: !9987, line: 407, type: !9982)
!9987 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/algorithmfwd.h", directory: "")
!9988 = !DILocation(line: 407, column: 19, scope: !9978)
!9989 = !DILocalVariable(name: "__b", arg: 2, scope: !9978, file: !9987, line: 407, type: !9982)
!9990 = !DILocation(line: 407, column: 31, scope: !9978)
!9991 = !DILocation(line: 259, column: 11, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9978, file: !9979, line: 259, column: 11)
!9993 = !DILocation(line: 259, column: 17, scope: !9992)
!9994 = !DILocation(line: 259, column: 15, scope: !9992)
!9995 = !DILocation(line: 259, column: 11, scope: !9978)
!9996 = !DILocation(line: 260, column: 9, scope: !9992)
!9997 = !DILocation(line: 260, column: 2, scope: !9992)
!9998 = !DILocation(line: 261, column: 14, scope: !9978)
!9999 = !DILocation(line: 261, column: 7, scope: !9978)
!10000 = !DILocation(line: 262, column: 5, scope: !9978)
!10001 = distinct !DISubprogram(name: "_S_max_size", linkageName: "_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_", scope: !1496, file: !1497, line: 1776, type: !1966, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1965, retainedNodes: !324)
!10002 = !DILocalVariable(name: "__a", arg: 1, scope: !10001, file: !1497, line: 1776, type: !1968)
!10003 = !DILocation(line: 1776, column: 41, scope: !10001)
!10004 = !DILocalVariable(name: "__diffmax", scope: !10001, file: !1497, line: 1781, type: !10005)
!10005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!10006 = !DILocation(line: 1781, column: 15, scope: !10001)
!10007 = !DILocalVariable(name: "__allocmax", scope: !10001, file: !1497, line: 1783, type: !10005)
!10008 = !DILocation(line: 1783, column: 15, scope: !10001)
!10009 = !DILocation(line: 1783, column: 52, scope: !10001)
!10010 = !DILocation(line: 1783, column: 28, scope: !10001)
!10011 = !DILocation(line: 1784, column: 9, scope: !10001)
!10012 = !DILocation(line: 1784, column: 2, scope: !10001)
!10013 = distinct !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv", scope: !1500, file: !1497, line: 280, type: !1659, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1658, retainedNodes: !324)
!10014 = !DILocalVariable(name: "this", arg: 1, scope: !10013, type: !10015, flags: DIFlagArtificial | DIFlagObjectPointer)
!10015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!10016 = !DILocation(line: 0, scope: !10013)
!10017 = !DILocation(line: 281, column: 22, scope: !10013)
!10018 = !DILocation(line: 281, column: 16, scope: !10013)
!10019 = !DILocation(line: 281, column: 9, scope: !10013)
!10020 = distinct !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_", scope: !1512, file: !146, line: 543, type: !1584, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1583, retainedNodes: !324)
!10021 = !DILocalVariable(name: "__a", arg: 1, scope: !10020, file: !146, line: 543, type: !1587)
!10022 = !DILocation(line: 543, column: 38, scope: !10020)
!10023 = !DILocation(line: 546, column: 9, scope: !10020)
!10024 = !DILocation(line: 546, column: 13, scope: !10020)
!10025 = !DILocation(line: 546, column: 2, scope: !10020)
!10026 = distinct !DISubprogram(name: "min<unsigned long>", linkageName: "_ZSt3minImERKT_S2_S2_", scope: !2, file: !9979, line: 230, type: !9980, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !9984, retainedNodes: !324)
!10027 = !DILocalVariable(name: "__a", arg: 1, scope: !10026, file: !9979, line: 230, type: !9982)
!10028 = !DILocation(line: 230, column: 20, scope: !10026)
!10029 = !DILocalVariable(name: "__b", arg: 2, scope: !10026, file: !9979, line: 230, type: !9982)
!10030 = !DILocation(line: 230, column: 36, scope: !10026)
!10031 = !DILocation(line: 235, column: 11, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10026, file: !9979, line: 235, column: 11)
!10033 = !DILocation(line: 235, column: 17, scope: !10032)
!10034 = !DILocation(line: 235, column: 15, scope: !10032)
!10035 = !DILocation(line: 235, column: 11, scope: !10026)
!10036 = !DILocation(line: 236, column: 9, scope: !10032)
!10037 = !DILocation(line: 236, column: 2, scope: !10032)
!10038 = !DILocation(line: 237, column: 14, scope: !10026)
!10039 = !DILocation(line: 237, column: 7, scope: !10026)
!10040 = !DILocation(line: 238, column: 5, scope: !10026)
!10041 = distinct !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIPKcE8max_sizeEv", scope: !1525, file: !233, line: 142, type: !1558, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1557, retainedNodes: !324)
!10042 = !DILocalVariable(name: "this", arg: 1, scope: !10041, type: !10043, flags: DIFlagArtificial | DIFlagObjectPointer)
!10043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!10044 = !DILocation(line: 0, scope: !10041)
!10045 = !DILocation(line: 143, column: 16, scope: !10041)
!10046 = !DILocation(line: 143, column: 9, scope: !10041)
!10047 = distinct !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIPKcE11_M_max_sizeEv", scope: !1525, file: !233, line: 185, type: !1558, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1560, retainedNodes: !324)
!10048 = !DILocalVariable(name: "this", arg: 1, scope: !10047, type: !10043, flags: DIFlagArtificial | DIFlagObjectPointer)
!10049 = !DILocation(line: 0, scope: !10047)
!10050 = !DILocation(line: 188, column: 2, scope: !10047)
!10051 = distinct !DISubprogram(name: "__normal_iterator", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC2ERKS3_", scope: !1788, file: !852, line: 953, type: !1796, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1795, retainedNodes: !324)
!10052 = !DILocalVariable(name: "this", arg: 1, scope: !10051, type: !10053, flags: DIFlagArtificial | DIFlagObjectPointer)
!10053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!10054 = !DILocation(line: 0, scope: !10051)
!10055 = !DILocalVariable(name: "__i", arg: 2, scope: !10051, file: !852, line: 953, type: !1798)
!10056 = !DILocation(line: 953, column: 42, scope: !10051)
!10057 = !DILocation(line: 954, column: 9, scope: !10051)
!10058 = !DILocation(line: 954, column: 20, scope: !10051)
!10059 = !DILocation(line: 954, column: 27, scope: !10051)
!10060 = distinct !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m", scope: !1512, file: !146, line: 459, type: !1515, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1514, retainedNodes: !324)
!10061 = !DILocalVariable(name: "__a", arg: 1, scope: !10060, file: !146, line: 459, type: !1519)
!10062 = !DILocation(line: 459, column: 32, scope: !10060)
!10063 = !DILocalVariable(name: "__n", arg: 2, scope: !10060, file: !146, line: 459, type: !290)
!10064 = !DILocation(line: 459, column: 47, scope: !10060)
!10065 = !DILocation(line: 460, column: 16, scope: !10060)
!10066 = !DILocation(line: 460, column: 29, scope: !10060)
!10067 = !DILocation(line: 460, column: 20, scope: !10060)
!10068 = !DILocation(line: 460, column: 9, scope: !10060)
!10069 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIPKcE8allocateEmPKv", scope: !1525, file: !233, line: 103, type: !1552, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1551, retainedNodes: !324)
!10070 = !DILocalVariable(name: "this", arg: 1, scope: !10069, type: !8616, flags: DIFlagArtificial | DIFlagObjectPointer)
!10071 = !DILocation(line: 0, scope: !10069)
!10072 = !DILocalVariable(name: "__n", arg: 2, scope: !10069, file: !233, line: 103, type: !261)
!10073 = !DILocation(line: 103, column: 26, scope: !10069)
!10074 = !DILocalVariable(arg: 3, scope: !10069, file: !233, line: 103, type: !265)
!10075 = !DILocation(line: 103, column: 43, scope: !10069)
!10076 = !DILocation(line: 105, column: 6, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10069, file: !233, line: 105, column: 6)
!10078 = !DILocation(line: 105, column: 18, scope: !10077)
!10079 = !DILocation(line: 105, column: 10, scope: !10077)
!10080 = !DILocation(line: 105, column: 6, scope: !10069)
!10081 = !DILocation(line: 106, column: 4, scope: !10077)
!10082 = !DILocation(line: 115, column: 42, scope: !10069)
!10083 = !DILocation(line: 115, column: 46, scope: !10069)
!10084 = !DILocation(line: 115, column: 27, scope: !10069)
!10085 = !DILocation(line: 115, column: 9, scope: !10069)
!10086 = !DILocation(line: 115, column: 2, scope: !10069)
!10087 = distinct !DISubprogram(name: "_S_do_relocate", linkageName: "_ZNSt6vectorIPKcSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE", scope: !1496, file: !1497, line: 453, type: !1711, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !1710, retainedNodes: !324)
!10088 = !DILocalVariable(name: "__first", arg: 1, scope: !10087, file: !1497, line: 453, type: !1713)
!10089 = !DILocation(line: 453, column: 30, scope: !10087)
!10090 = !DILocalVariable(name: "__last", arg: 2, scope: !10087, file: !1497, line: 453, type: !1713)
!10091 = !DILocation(line: 453, column: 47, scope: !10087)
!10092 = !DILocalVariable(name: "__result", arg: 3, scope: !10087, file: !1497, line: 453, type: !1713)
!10093 = !DILocation(line: 453, column: 63, scope: !10087)
!10094 = !DILocalVariable(name: "__alloc", arg: 4, scope: !10087, file: !1497, line: 454, type: !1714)
!10095 = !DILocation(line: 454, column: 24, scope: !10087)
!10096 = !DILocalVariable(arg: 5, scope: !10087, file: !1497, line: 454, type: !797)
!10097 = !DILocation(line: 454, column: 42, scope: !10087)
!10098 = !DILocation(line: 456, column: 27, scope: !10087)
!10099 = !DILocation(line: 456, column: 36, scope: !10087)
!10100 = !DILocation(line: 456, column: 44, scope: !10087)
!10101 = !DILocation(line: 456, column: 54, scope: !10087)
!10102 = !DILocation(line: 456, column: 9, scope: !10087)
!10103 = !DILocation(line: 456, column: 2, scope: !10087)
!10104 = distinct !DISubprogram(name: "__relocate_a<const char **, const char **, std::allocator<const char *> >", linkageName: "_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_", scope: !2, file: !10105, line: 1022, type: !10106, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10108, retainedNodes: !324)
!10105 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_uninitialized.h", directory: "")
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!1518, !1518, !1518, !1518, !1575}
!10108 = !{!10109, !8886, !10110}
!10109 = !DITemplateTypeParameter(name: "_InputIterator", type: !1518)
!10110 = !DITemplateTypeParameter(name: "_Allocator", type: !1521)
!10111 = !DILocalVariable(name: "__first", arg: 1, scope: !10104, file: !10105, line: 1022, type: !1518)
!10112 = !DILocation(line: 1022, column: 33, scope: !10104)
!10113 = !DILocalVariable(name: "__last", arg: 2, scope: !10104, file: !10105, line: 1022, type: !1518)
!10114 = !DILocation(line: 1022, column: 57, scope: !10104)
!10115 = !DILocalVariable(name: "__result", arg: 3, scope: !10104, file: !10105, line: 1023, type: !1518)
!10116 = !DILocation(line: 1023, column: 21, scope: !10104)
!10117 = !DILocalVariable(name: "__alloc", arg: 4, scope: !10104, file: !10105, line: 1023, type: !1575)
!10118 = !DILocation(line: 1023, column: 43, scope: !10104)
!10119 = !DILocation(line: 1028, column: 47, scope: !10104)
!10120 = !DILocation(line: 1028, column: 29, scope: !10104)
!10121 = !DILocation(line: 1029, column: 26, scope: !10104)
!10122 = !DILocation(line: 1029, column: 8, scope: !10104)
!10123 = !DILocation(line: 1030, column: 26, scope: !10104)
!10124 = !DILocation(line: 1030, column: 8, scope: !10104)
!10125 = !DILocation(line: 1030, column: 37, scope: !10104)
!10126 = !DILocation(line: 1028, column: 14, scope: !10104)
!10127 = !DILocation(line: 1028, column: 7, scope: !10104)
!10128 = distinct !DISubprogram(name: "__relocate_a_1<const char *, const char *>", linkageName: "_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E", scope: !2, file: !10105, line: 988, type: !10129, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10136, retainedNodes: !324)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!10131, !1518, !1518, !1518, !1575}
!10131 = !DIDerivedType(tag: DW_TAG_typedef, name: "__enable_if_t<std::__is_bitwise_relocatable<const char *>::value, const char **>", scope: !2, file: !643, line: 2192, baseType: !10132)
!10132 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10133, file: !643, line: 2188, baseType: !1518)
!10133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "enable_if<true, const char **>", scope: !2, file: !643, line: 2187, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10134, identifier: "_ZTSSt9enable_ifILb1EPPKcE")
!10134 = !{!528, !10135}
!10135 = !DITemplateTypeParameter(name: "_Tp", type: !1518)
!10136 = !{!1562, !9743}
!10137 = !DILocalVariable(name: "__first", arg: 1, scope: !10128, file: !10105, line: 988, type: !1518)
!10138 = !DILocation(line: 988, column: 25, scope: !10128)
!10139 = !DILocalVariable(name: "__last", arg: 2, scope: !10128, file: !10105, line: 988, type: !1518)
!10140 = !DILocation(line: 988, column: 39, scope: !10128)
!10141 = !DILocalVariable(name: "__result", arg: 3, scope: !10128, file: !10105, line: 989, type: !1518)
!10142 = !DILocation(line: 989, column: 11, scope: !10128)
!10143 = !DILocalVariable(arg: 4, scope: !10128, file: !10105, line: 989, type: !1575)
!10144 = !DILocation(line: 989, column: 36, scope: !10128)
!10145 = !DILocalVariable(name: "__count", scope: !10128, file: !10105, line: 991, type: !1830)
!10146 = !DILocation(line: 991, column: 17, scope: !10128)
!10147 = !DILocation(line: 991, column: 27, scope: !10128)
!10148 = !DILocation(line: 991, column: 36, scope: !10128)
!10149 = !DILocation(line: 991, column: 34, scope: !10128)
!10150 = !DILocation(line: 992, column: 11, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10128, file: !10105, line: 992, column: 11)
!10152 = !DILocation(line: 992, column: 19, scope: !10151)
!10153 = !DILocation(line: 992, column: 11, scope: !10128)
!10154 = !DILocation(line: 993, column: 20, scope: !10151)
!10155 = !DILocation(line: 993, column: 2, scope: !10151)
!10156 = !DILocation(line: 993, column: 30, scope: !10151)
!10157 = !DILocation(line: 993, column: 39, scope: !10151)
!10158 = !DILocation(line: 993, column: 47, scope: !10151)
!10159 = !DILocation(line: 994, column: 14, scope: !10128)
!10160 = !DILocation(line: 994, column: 25, scope: !10128)
!10161 = !DILocation(line: 994, column: 23, scope: !10128)
!10162 = !DILocation(line: 994, column: 7, scope: !10128)
!10163 = distinct !DISubprogram(name: "__niter_base<const char **>", linkageName: "_ZSt12__niter_baseIPPKcET_S3_", scope: !2, file: !9979, line: 313, type: !10164, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !1807, retainedNodes: !324)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!1518, !1518}
!10166 = !DILocalVariable(name: "__it", arg: 1, scope: !10163, file: !9979, line: 313, type: !1518)
!10167 = !DILocation(line: 313, column: 28, scope: !10163)
!10168 = !DILocation(line: 315, column: 14, scope: !10163)
!10169 = !DILocation(line: 315, column: 7, scope: !10163)
!10170 = distinct !DISubprogram(name: "__lower_bound<cGate **, cGate *, __gnu_cxx::__ops::_Iter_comp_val<less_gateConnectedInside> >", linkageName: "_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEEET_S8_S8_RKT0_T1_", scope: !2, file: !9979, line: 1311, type: !10171, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10173, retainedNodes: !324)
!10171 = !DISubroutineType(types: !10172)
!10172 = !{!1149, !1149, !1149, !6548, !2060}
!10173 = !{!6551, !6552, !10174}
!10174 = !DITemplateTypeParameter(name: "_Compare", type: !2060)
!10175 = !DILocalVariable(name: "__first", arg: 1, scope: !10170, file: !9979, line: 1311, type: !1149)
!10176 = !DILocation(line: 1311, column: 36, scope: !10170)
!10177 = !DILocalVariable(name: "__last", arg: 2, scope: !10170, file: !9979, line: 1311, type: !1149)
!10178 = !DILocation(line: 1311, column: 62, scope: !10170)
!10179 = !DILocalVariable(name: "__val", arg: 3, scope: !10170, file: !9979, line: 1312, type: !6548)
!10180 = !DILocation(line: 1312, column: 16, scope: !10170)
!10181 = !DILocalVariable(name: "__comp", arg: 4, scope: !10170, file: !9979, line: 1312, type: !2060)
!10182 = !DILocation(line: 1312, column: 32, scope: !10170)
!10183 = !DILocalVariable(name: "__len", scope: !10170, file: !9979, line: 1317, type: !10184)
!10184 = !DIDerivedType(tag: DW_TAG_typedef, name: "_DistanceType", scope: !10170, file: !9979, line: 1315, baseType: !10185)
!10185 = !DIDerivedType(tag: DW_TAG_typedef, name: "difference_type", scope: !10186, file: !1805, line: 214, baseType: !1830)
!10186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iterator_traits<cGate **>", scope: !2, file: !1805, line: 210, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10187, identifier: "_ZTSSt15iterator_traitsIPP5cGateE")
!10187 = !{!10188}
!10188 = !DITemplateTypeParameter(name: "_Iterator", type: !1149)
!10189 = !DILocation(line: 1317, column: 21, scope: !10170)
!10190 = !DILocation(line: 1317, column: 43, scope: !10170)
!10191 = !DILocation(line: 1317, column: 52, scope: !10170)
!10192 = !DILocation(line: 1317, column: 29, scope: !10170)
!10193 = !DILocation(line: 1319, column: 7, scope: !10170)
!10194 = !DILocation(line: 1319, column: 14, scope: !10170)
!10195 = !DILocation(line: 1319, column: 20, scope: !10170)
!10196 = !DILocalVariable(name: "__half", scope: !10197, file: !9979, line: 1321, type: !10184)
!10197 = distinct !DILexicalBlock(scope: !10170, file: !9979, line: 1320, column: 2)
!10198 = !DILocation(line: 1321, column: 18, scope: !10197)
!10199 = !DILocation(line: 1321, column: 27, scope: !10197)
!10200 = !DILocation(line: 1321, column: 33, scope: !10197)
!10201 = !DILocalVariable(name: "__middle", scope: !10197, file: !9979, line: 1322, type: !1149)
!10202 = !DILocation(line: 1322, column: 21, scope: !10197)
!10203 = !DILocation(line: 1322, column: 32, scope: !10197)
!10204 = !DILocation(line: 1323, column: 27, scope: !10197)
!10205 = !DILocation(line: 1323, column: 4, scope: !10197)
!10206 = !DILocation(line: 1324, column: 15, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10197, file: !9979, line: 1324, column: 8)
!10208 = !DILocation(line: 1324, column: 25, scope: !10207)
!10209 = !DILocation(line: 1324, column: 8, scope: !10207)
!10210 = !DILocation(line: 1324, column: 8, scope: !10197)
!10211 = !DILocation(line: 1326, column: 18, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10207, file: !9979, line: 1325, column: 6)
!10213 = !DILocation(line: 1326, column: 16, scope: !10212)
!10214 = !DILocation(line: 1327, column: 8, scope: !10212)
!10215 = !DILocation(line: 1328, column: 16, scope: !10212)
!10216 = !DILocation(line: 1328, column: 24, scope: !10212)
!10217 = !DILocation(line: 1328, column: 22, scope: !10212)
!10218 = !DILocation(line: 1328, column: 31, scope: !10212)
!10219 = !DILocation(line: 1328, column: 14, scope: !10212)
!10220 = !DILocation(line: 1329, column: 6, scope: !10212)
!10221 = !DILocation(line: 1331, column: 14, scope: !10207)
!10222 = !DILocation(line: 1331, column: 12, scope: !10207)
!10223 = distinct !{!10223, !10193, !10224}
!10224 = !DILocation(line: 1332, column: 2, scope: !10170)
!10225 = !DILocation(line: 1333, column: 14, scope: !10170)
!10226 = !DILocation(line: 1333, column: 7, scope: !10170)
!10227 = distinct !DISubprogram(name: "__iter_comp_val<less_gateConnectedInside>", linkageName: "_ZN9__gnu_cxx5__ops15__iter_comp_valI24less_gateConnectedInsideEENS0_14_Iter_comp_valIT_EES4_", scope: !2062, file: !2061, line: 200, type: !10228, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2085, retainedNodes: !324)
!10228 = !DISubroutineType(types: !10229)
!10229 = !{!2060, !2065}
!10230 = !DILocalVariable(name: "__comp", arg: 1, scope: !10227, file: !2061, line: 200, type: !2065)
!10231 = !DILocation(line: 200, column: 30, scope: !10227)
!10232 = !DILocation(line: 201, column: 39, scope: !10227)
!10233 = !DILocation(line: 201, column: 14, scope: !10227)
!10234 = !DILocation(line: 201, column: 7, scope: !10227)
!10235 = distinct !DISubprogram(name: "distance<cGate **>", linkageName: "_ZSt8distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_", scope: !2, file: !10236, line: 138, type: !10237, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10239, retainedNodes: !324)
!10236 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_iterator_base_funcs.h", directory: "")
!10237 = !DISubroutineType(types: !10238)
!10238 = !{!10185, !1149, !1149}
!10239 = !{!10240}
!10240 = !DITemplateTypeParameter(name: "_InputIterator", type: !1149)
!10241 = !DILocalVariable(name: "__first", arg: 1, scope: !10235, file: !10236, line: 138, type: !1149)
!10242 = !DILocation(line: 138, column: 29, scope: !10235)
!10243 = !DILocalVariable(name: "__last", arg: 2, scope: !10235, file: !10236, line: 138, type: !1149)
!10244 = !DILocation(line: 138, column: 53, scope: !10235)
!10245 = !DILocation(line: 141, column: 30, scope: !10235)
!10246 = !DILocation(line: 141, column: 39, scope: !10235)
!10247 = !DILocation(line: 142, column: 9, scope: !10235)
!10248 = !DILocation(line: 141, column: 14, scope: !10235)
!10249 = !DILocation(line: 141, column: 7, scope: !10235)
!10250 = distinct !DISubprogram(name: "advance<cGate **, long>", linkageName: "_ZSt7advanceIPP5cGatelEvRT_T0_", scope: !2, file: !10236, line: 202, type: !10251, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10253, retainedNodes: !324)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{null, !5860, !1229}
!10253 = !{!10240, !10254}
!10254 = !DITemplateTypeParameter(name: "_Distance", type: !1229)
!10255 = !DILocalVariable(name: "__i", arg: 1, scope: !10250, file: !10236, line: 202, type: !5860)
!10256 = !DILocation(line: 202, column: 29, scope: !10250)
!10257 = !DILocalVariable(name: "__n", arg: 2, scope: !10250, file: !10236, line: 202, type: !1229)
!10258 = !DILocation(line: 202, column: 44, scope: !10250)
!10259 = !DILocalVariable(name: "__d", scope: !10250, file: !10236, line: 205, type: !10185)
!10260 = !DILocation(line: 205, column: 65, scope: !10250)
!10261 = !DILocation(line: 205, column: 71, scope: !10250)
!10262 = !DILocation(line: 206, column: 22, scope: !10250)
!10263 = !DILocation(line: 206, column: 27, scope: !10250)
!10264 = !DILocation(line: 206, column: 57, scope: !10250)
!10265 = !DILocation(line: 206, column: 32, scope: !10250)
!10266 = !DILocation(line: 206, column: 7, scope: !10250)
!10267 = !DILocation(line: 207, column: 5, scope: !10250)
!10268 = distinct !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2060, file: !2061, line: 193, type: !10269, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10272, declaration: !10271, retainedNodes: !324)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{!13, !2074, !1149, !6548}
!10271 = !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2060, file: !2061, line: 193, type: !10269, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0, templateParams: !10272)
!10272 = !{!10188, !10273}
!10273 = !DITemplateTypeParameter(name: "_Value", type: !6549)
!10274 = !DILocalVariable(name: "this", arg: 1, scope: !10268, type: !10275, flags: DIFlagArtificial | DIFlagObjectPointer)
!10275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!10276 = !DILocation(line: 0, scope: !10268)
!10277 = !DILocalVariable(name: "__it", arg: 2, scope: !10268, file: !2061, line: 193, type: !1149)
!10278 = !DILocation(line: 193, column: 23, scope: !10268)
!10279 = !DILocalVariable(name: "__val", arg: 3, scope: !10268, file: !2061, line: 193, type: !6548)
!10280 = !DILocation(line: 193, column: 37, scope: !10268)
!10281 = !DILocation(line: 194, column: 16, scope: !10268)
!10282 = !DILocation(line: 194, column: 25, scope: !10268)
!10283 = !DILocation(line: 194, column: 24, scope: !10268)
!10284 = !DILocation(line: 194, column: 31, scope: !10268)
!10285 = !DILocation(line: 194, column: 4, scope: !10268)
!10286 = distinct !DISubprogram(name: "__distance<cGate **>", linkageName: "_ZSt10__distanceIPP5cGateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag", scope: !2, file: !10236, line: 98, type: !10287, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10299, retainedNodes: !324)
!10287 = !DISubroutineType(types: !10288)
!10288 = !{!10185, !1149, !1149, !10289}
!10289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "random_access_iterator_tag", scope: !2, file: !1805, line: 107, size: 8, flags: DIFlagTypePassByValue, elements: !10290, identifier: "_ZTSSt26random_access_iterator_tag")
!10290 = !{!10291}
!10291 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !10289, baseType: !10292, extraData: i32 0)
!10292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bidirectional_iterator_tag", scope: !2, file: !1805, line: 103, size: 8, flags: DIFlagTypePassByValue, elements: !10293, identifier: "_ZTSSt26bidirectional_iterator_tag")
!10293 = !{!10294}
!10294 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !10292, baseType: !10295, extraData: i32 0)
!10295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "forward_iterator_tag", scope: !2, file: !1805, line: 99, size: 8, flags: DIFlagTypePassByValue, elements: !10296, identifier: "_ZTSSt20forward_iterator_tag")
!10296 = !{!10297}
!10297 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !10295, baseType: !10298, extraData: i32 0)
!10298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_iterator_tag", scope: !2, file: !1805, line: 93, size: 8, flags: DIFlagTypePassByValue, elements: !324, identifier: "_ZTSSt18input_iterator_tag")
!10299 = !{!10300}
!10300 = !DITemplateTypeParameter(name: "_RandomAccessIterator", type: !1149)
!10301 = !DILocalVariable(name: "__first", arg: 1, scope: !10286, file: !10236, line: 98, type: !1149)
!10302 = !DILocation(line: 98, column: 38, scope: !10286)
!10303 = !DILocalVariable(name: "__last", arg: 2, scope: !10286, file: !10236, line: 98, type: !1149)
!10304 = !DILocation(line: 98, column: 69, scope: !10286)
!10305 = !DILocalVariable(arg: 3, scope: !10286, file: !10236, line: 99, type: !10289)
!10306 = !DILocation(line: 99, column: 42, scope: !10286)
!10307 = !DILocation(line: 104, column: 14, scope: !10286)
!10308 = !DILocation(line: 104, column: 23, scope: !10286)
!10309 = !DILocation(line: 104, column: 21, scope: !10286)
!10310 = !DILocation(line: 104, column: 7, scope: !10286)
!10311 = distinct !DISubprogram(name: "__iterator_category<cGate **>", linkageName: "_ZSt19__iterator_categoryIPP5cGateENSt15iterator_traitsIT_E17iterator_categoryERKS4_", scope: !2, file: !1805, line: 238, type: !10312, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10317, retainedNodes: !324)
!10312 = !DISubroutineType(types: !10313)
!10313 = !{!10314, !10315}
!10314 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator_category", scope: !10186, file: !1805, line: 212, baseType: !10289)
!10315 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !10316, size: 64)
!10316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!10317 = !{!10318}
!10318 = !DITemplateTypeParameter(name: "_Iter", type: !1149)
!10319 = !DILocalVariable(arg: 1, scope: !10311, file: !1805, line: 238, type: !10315)
!10320 = !DILocation(line: 238, column: 37, scope: !10311)
!10321 = !DILocation(line: 239, column: 7, scope: !10311)
!10322 = distinct !DISubprogram(name: "__advance<cGate **, long>", linkageName: "_ZSt9__advanceIPP5cGatelEvRT_T0_St26random_access_iterator_tag", scope: !2, file: !10236, line: 174, type: !10323, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10325, retainedNodes: !324)
!10323 = !DISubroutineType(types: !10324)
!10324 = !{null, !5860, !1229, !10289}
!10325 = !{!10300, !10254}
!10326 = !DILocalVariable(name: "__i", arg: 1, scope: !10322, file: !10236, line: 174, type: !5860)
!10327 = !DILocation(line: 174, column: 38, scope: !10322)
!10328 = !DILocalVariable(name: "__n", arg: 2, scope: !10322, file: !10236, line: 174, type: !1229)
!10329 = !DILocation(line: 174, column: 53, scope: !10322)
!10330 = !DILocalVariable(arg: 3, scope: !10322, file: !10236, line: 175, type: !10289)
!10331 = !DILocation(line: 175, column: 41, scope: !10322)
!10332 = !DILocation(line: 180, column: 32, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10322, file: !10236, line: 180, column: 11)
!10334 = !DILocation(line: 180, column: 11, scope: !10333)
!10335 = !DILocation(line: 180, column: 37, scope: !10333)
!10336 = !DILocation(line: 180, column: 40, scope: !10333)
!10337 = !DILocation(line: 180, column: 44, scope: !10333)
!10338 = !DILocation(line: 180, column: 11, scope: !10322)
!10339 = !DILocation(line: 181, column: 4, scope: !10333)
!10340 = !DILocation(line: 181, column: 2, scope: !10333)
!10341 = !DILocation(line: 182, column: 37, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10333, file: !10236, line: 182, column: 16)
!10343 = !DILocation(line: 182, column: 16, scope: !10342)
!10344 = !DILocation(line: 182, column: 42, scope: !10342)
!10345 = !DILocation(line: 182, column: 45, scope: !10342)
!10346 = !DILocation(line: 182, column: 49, scope: !10342)
!10347 = !DILocation(line: 182, column: 16, scope: !10333)
!10348 = !DILocation(line: 183, column: 4, scope: !10342)
!10349 = !DILocation(line: 183, column: 2, scope: !10342)
!10350 = !DILocation(line: 185, column: 9, scope: !10342)
!10351 = !DILocation(line: 185, column: 2, scope: !10342)
!10352 = !DILocation(line: 185, column: 6, scope: !10342)
!10353 = !DILocation(line: 186, column: 5, scope: !10322)
!10354 = distinct !DISubprogram(name: "operator()", linkageName: "_ZN24less_gateConnectedInsideclEP5cGateS1_", scope: !2065, file: !31, line: 726, type: !2068, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2067, retainedNodes: !324)
!10355 = !DILocalVariable(name: "this", arg: 1, scope: !10354, type: !10356, flags: DIFlagArtificial | DIFlagObjectPointer)
!10356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!10357 = !DILocation(line: 0, scope: !10354)
!10358 = !DILocalVariable(name: "a", arg: 2, scope: !10354, file: !31, line: 726, type: !1147)
!10359 = !DILocation(line: 726, column: 28, scope: !10354)
!10360 = !DILocalVariable(name: "b", arg: 3, scope: !10354, file: !31, line: 726, type: !1147)
!10361 = !DILocation(line: 726, column: 38, scope: !10354)
!10362 = !DILocation(line: 726, column: 50, scope: !10354)
!10363 = !DILocation(line: 726, column: 52, scope: !10354)
!10364 = !DILocation(line: 726, column: 55, scope: !10354)
!10365 = !DILocation(line: 726, column: 58, scope: !10354)
!10366 = !DILocation(line: 726, column: 49, scope: !10354)
!10367 = !DILocation(line: 726, column: 82, scope: !10354)
!10368 = !DILocation(line: 726, column: 84, scope: !10354)
!10369 = !DILocation(line: 726, column: 87, scope: !10354)
!10370 = !DILocation(line: 726, column: 90, scope: !10354)
!10371 = !DILocation(line: 726, column: 81, scope: !10354)
!10372 = !DILocation(line: 726, column: 79, scope: !10354)
!10373 = !DILocation(line: 726, column: 42, scope: !10354)
!10374 = distinct !DISubprogram(name: "move<less_gateConnectedInside &>", linkageName: "_ZSt4moveIR24less_gateConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_", scope: !2, file: !8314, line: 101, type: !10375, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10380, retainedNodes: !324)
!10375 = !DISubroutineType(types: !10376)
!10376 = !{!10377, !10382}
!10377 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !10378, size: 64)
!10378 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10379, file: !643, line: 1598, baseType: !2065)
!10379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<less_gateConnectedInside &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10380, identifier: "_ZTSSt16remove_referenceIR24less_gateConnectedInsideE")
!10380 = !{!10381}
!10381 = !DITemplateTypeParameter(name: "_Tp", type: !10382)
!10382 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2065, size: 64)
!10383 = !DILocalVariable(name: "__t", arg: 1, scope: !10374, file: !8314, line: 101, type: !10382)
!10384 = !DILocation(line: 101, column: 16, scope: !10374)
!10385 = !DILocation(line: 102, column: 71, scope: !10374)
!10386 = !DILocation(line: 102, column: 7, scope: !10374)
!10387 = distinct !DISubprogram(name: "_Iter_comp_val", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI24less_gateConnectedInsideEC2ES2_", scope: !2060, file: !2061, line: 172, type: !2072, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2071, retainedNodes: !324)
!10388 = !DILocalVariable(name: "this", arg: 1, scope: !10387, type: !10275, flags: DIFlagArtificial | DIFlagObjectPointer)
!10389 = !DILocation(line: 0, scope: !10387)
!10390 = !DILocalVariable(name: "__comp", arg: 2, scope: !10387, file: !2061, line: 172, type: !2065)
!10391 = !DILocation(line: 172, column: 31, scope: !10387)
!10392 = !DILocation(line: 173, column: 4, scope: !10387)
!10393 = !DILocation(line: 173, column: 12, scope: !10387)
!10394 = !DILocation(line: 174, column: 9, scope: !10387)
!10395 = distinct !DISubprogram(name: "__lower_bound<cGate **, cGate *, __gnu_cxx::__ops::_Iter_comp_val<less_gateConnectedOutside> >", linkageName: "_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEEET_S8_S8_RKT0_T1_", scope: !2, file: !9979, line: 1311, type: !10396, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10398, retainedNodes: !324)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!1149, !1149, !1149, !6548, !2087}
!10398 = !{!6551, !6552, !10399}
!10399 = !DITemplateTypeParameter(name: "_Compare", type: !2087)
!10400 = !DILocalVariable(name: "__first", arg: 1, scope: !10395, file: !9979, line: 1311, type: !1149)
!10401 = !DILocation(line: 1311, column: 36, scope: !10395)
!10402 = !DILocalVariable(name: "__last", arg: 2, scope: !10395, file: !9979, line: 1311, type: !1149)
!10403 = !DILocation(line: 1311, column: 62, scope: !10395)
!10404 = !DILocalVariable(name: "__val", arg: 3, scope: !10395, file: !9979, line: 1312, type: !6548)
!10405 = !DILocation(line: 1312, column: 16, scope: !10395)
!10406 = !DILocalVariable(name: "__comp", arg: 4, scope: !10395, file: !9979, line: 1312, type: !2087)
!10407 = !DILocation(line: 1312, column: 32, scope: !10395)
!10408 = !DILocalVariable(name: "__len", scope: !10395, file: !9979, line: 1317, type: !10409)
!10409 = !DIDerivedType(tag: DW_TAG_typedef, name: "_DistanceType", scope: !10395, file: !9979, line: 1315, baseType: !10185)
!10410 = !DILocation(line: 1317, column: 21, scope: !10395)
!10411 = !DILocation(line: 1317, column: 43, scope: !10395)
!10412 = !DILocation(line: 1317, column: 52, scope: !10395)
!10413 = !DILocation(line: 1317, column: 29, scope: !10395)
!10414 = !DILocation(line: 1319, column: 7, scope: !10395)
!10415 = !DILocation(line: 1319, column: 14, scope: !10395)
!10416 = !DILocation(line: 1319, column: 20, scope: !10395)
!10417 = !DILocalVariable(name: "__half", scope: !10418, file: !9979, line: 1321, type: !10409)
!10418 = distinct !DILexicalBlock(scope: !10395, file: !9979, line: 1320, column: 2)
!10419 = !DILocation(line: 1321, column: 18, scope: !10418)
!10420 = !DILocation(line: 1321, column: 27, scope: !10418)
!10421 = !DILocation(line: 1321, column: 33, scope: !10418)
!10422 = !DILocalVariable(name: "__middle", scope: !10418, file: !9979, line: 1322, type: !1149)
!10423 = !DILocation(line: 1322, column: 21, scope: !10418)
!10424 = !DILocation(line: 1322, column: 32, scope: !10418)
!10425 = !DILocation(line: 1323, column: 27, scope: !10418)
!10426 = !DILocation(line: 1323, column: 4, scope: !10418)
!10427 = !DILocation(line: 1324, column: 15, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10418, file: !9979, line: 1324, column: 8)
!10429 = !DILocation(line: 1324, column: 25, scope: !10428)
!10430 = !DILocation(line: 1324, column: 8, scope: !10428)
!10431 = !DILocation(line: 1324, column: 8, scope: !10418)
!10432 = !DILocation(line: 1326, column: 18, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10428, file: !9979, line: 1325, column: 6)
!10434 = !DILocation(line: 1326, column: 16, scope: !10433)
!10435 = !DILocation(line: 1327, column: 8, scope: !10433)
!10436 = !DILocation(line: 1328, column: 16, scope: !10433)
!10437 = !DILocation(line: 1328, column: 24, scope: !10433)
!10438 = !DILocation(line: 1328, column: 22, scope: !10433)
!10439 = !DILocation(line: 1328, column: 31, scope: !10433)
!10440 = !DILocation(line: 1328, column: 14, scope: !10433)
!10441 = !DILocation(line: 1329, column: 6, scope: !10433)
!10442 = !DILocation(line: 1331, column: 14, scope: !10428)
!10443 = !DILocation(line: 1331, column: 12, scope: !10428)
!10444 = distinct !{!10444, !10414, !10445}
!10445 = !DILocation(line: 1332, column: 2, scope: !10395)
!10446 = !DILocation(line: 1333, column: 14, scope: !10395)
!10447 = !DILocation(line: 1333, column: 7, scope: !10395)
!10448 = distinct !DISubprogram(name: "__iter_comp_val<less_gateConnectedOutside>", linkageName: "_ZN9__gnu_cxx5__ops15__iter_comp_valI25less_gateConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_", scope: !2062, file: !2061, line: 200, type: !10449, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2110, retainedNodes: !324)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{!2087, !2090}
!10451 = !DILocalVariable(name: "__comp", arg: 1, scope: !10448, file: !2061, line: 200, type: !2090)
!10452 = !DILocation(line: 200, column: 30, scope: !10448)
!10453 = !DILocation(line: 201, column: 39, scope: !10448)
!10454 = !DILocation(line: 201, column: 14, scope: !10448)
!10455 = !DILocation(line: 201, column: 7, scope: !10448)
!10456 = distinct !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2087, file: !2061, line: 193, type: !10457, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10272, declaration: !10459, retainedNodes: !324)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{!13, !2099, !1149, !6548}
!10459 = !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2087, file: !2061, line: 193, type: !10457, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0, templateParams: !10272)
!10460 = !DILocalVariable(name: "this", arg: 1, scope: !10456, type: !10461, flags: DIFlagArtificial | DIFlagObjectPointer)
!10461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!10462 = !DILocation(line: 0, scope: !10456)
!10463 = !DILocalVariable(name: "__it", arg: 2, scope: !10456, file: !2061, line: 193, type: !1149)
!10464 = !DILocation(line: 193, column: 23, scope: !10456)
!10465 = !DILocalVariable(name: "__val", arg: 3, scope: !10456, file: !2061, line: 193, type: !6548)
!10466 = !DILocation(line: 193, column: 37, scope: !10456)
!10467 = !DILocation(line: 194, column: 16, scope: !10456)
!10468 = !DILocation(line: 194, column: 25, scope: !10456)
!10469 = !DILocation(line: 194, column: 24, scope: !10456)
!10470 = !DILocation(line: 194, column: 31, scope: !10456)
!10471 = !DILocation(line: 194, column: 4, scope: !10456)
!10472 = distinct !DISubprogram(name: "operator()", linkageName: "_ZN25less_gateConnectedOutsideclEP5cGateS1_", scope: !2090, file: !31, line: 730, type: !2093, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2092, retainedNodes: !324)
!10473 = !DILocalVariable(name: "this", arg: 1, scope: !10472, type: !10474, flags: DIFlagArtificial | DIFlagObjectPointer)
!10474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!10475 = !DILocation(line: 0, scope: !10472)
!10476 = !DILocalVariable(name: "a", arg: 2, scope: !10472, file: !31, line: 730, type: !1147)
!10477 = !DILocation(line: 730, column: 28, scope: !10472)
!10478 = !DILocalVariable(name: "b", arg: 3, scope: !10472, file: !31, line: 730, type: !1147)
!10479 = !DILocation(line: 730, column: 38, scope: !10472)
!10480 = !DILocation(line: 730, column: 50, scope: !10472)
!10481 = !DILocation(line: 730, column: 52, scope: !10472)
!10482 = !DILocation(line: 730, column: 55, scope: !10472)
!10483 = !DILocation(line: 730, column: 58, scope: !10472)
!10484 = !DILocation(line: 730, column: 49, scope: !10472)
!10485 = !DILocation(line: 730, column: 83, scope: !10472)
!10486 = !DILocation(line: 730, column: 85, scope: !10472)
!10487 = !DILocation(line: 730, column: 88, scope: !10472)
!10488 = !DILocation(line: 730, column: 91, scope: !10472)
!10489 = !DILocation(line: 730, column: 82, scope: !10472)
!10490 = !DILocation(line: 730, column: 80, scope: !10472)
!10491 = !DILocation(line: 730, column: 42, scope: !10472)
!10492 = distinct !DISubprogram(name: "move<less_gateConnectedOutside &>", linkageName: "_ZSt4moveIR25less_gateConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_", scope: !2, file: !8314, line: 101, type: !10493, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10498, retainedNodes: !324)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{!10495, !10500}
!10495 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !10496, size: 64)
!10496 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10497, file: !643, line: 1598, baseType: !2090)
!10497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<less_gateConnectedOutside &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10498, identifier: "_ZTSSt16remove_referenceIR25less_gateConnectedOutsideE")
!10498 = !{!10499}
!10499 = !DITemplateTypeParameter(name: "_Tp", type: !10500)
!10500 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2090, size: 64)
!10501 = !DILocalVariable(name: "__t", arg: 1, scope: !10492, file: !8314, line: 101, type: !10500)
!10502 = !DILocation(line: 101, column: 16, scope: !10492)
!10503 = !DILocation(line: 102, column: 71, scope: !10492)
!10504 = !DILocation(line: 102, column: 7, scope: !10492)
!10505 = distinct !DISubprogram(name: "_Iter_comp_val", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI25less_gateConnectedOutsideEC2ES2_", scope: !2087, file: !2061, line: 172, type: !2097, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2096, retainedNodes: !324)
!10506 = !DILocalVariable(name: "this", arg: 1, scope: !10505, type: !10461, flags: DIFlagArtificial | DIFlagObjectPointer)
!10507 = !DILocation(line: 0, scope: !10505)
!10508 = !DILocalVariable(name: "__comp", arg: 2, scope: !10505, file: !2061, line: 172, type: !2090)
!10509 = !DILocation(line: 172, column: 31, scope: !10505)
!10510 = !DILocation(line: 173, column: 4, scope: !10505)
!10511 = !DILocation(line: 173, column: 12, scope: !10505)
!10512 = !DILocation(line: 174, column: 9, scope: !10505)
!10513 = distinct !DISubprogram(name: "__lower_bound<cGate **, cGate *, __gnu_cxx::__ops::_Iter_comp_val<less_gatePairConnectedInside> >", linkageName: "_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEEET_S8_S8_RKT0_T1_", scope: !2, file: !9979, line: 1311, type: !10514, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10516, retainedNodes: !324)
!10514 = !DISubroutineType(types: !10515)
!10515 = !{!1149, !1149, !1149, !6548, !2112}
!10516 = !{!6551, !6552, !10517}
!10517 = !DITemplateTypeParameter(name: "_Compare", type: !2112)
!10518 = !DILocalVariable(name: "__first", arg: 1, scope: !10513, file: !9979, line: 1311, type: !1149)
!10519 = !DILocation(line: 1311, column: 36, scope: !10513)
!10520 = !DILocalVariable(name: "__last", arg: 2, scope: !10513, file: !9979, line: 1311, type: !1149)
!10521 = !DILocation(line: 1311, column: 62, scope: !10513)
!10522 = !DILocalVariable(name: "__val", arg: 3, scope: !10513, file: !9979, line: 1312, type: !6548)
!10523 = !DILocation(line: 1312, column: 16, scope: !10513)
!10524 = !DILocalVariable(name: "__comp", arg: 4, scope: !10513, file: !9979, line: 1312, type: !2112)
!10525 = !DILocation(line: 1312, column: 32, scope: !10513)
!10526 = !DILocalVariable(name: "__len", scope: !10513, file: !9979, line: 1317, type: !10527)
!10527 = !DIDerivedType(tag: DW_TAG_typedef, name: "_DistanceType", scope: !10513, file: !9979, line: 1315, baseType: !10185)
!10528 = !DILocation(line: 1317, column: 21, scope: !10513)
!10529 = !DILocation(line: 1317, column: 43, scope: !10513)
!10530 = !DILocation(line: 1317, column: 52, scope: !10513)
!10531 = !DILocation(line: 1317, column: 29, scope: !10513)
!10532 = !DILocation(line: 1319, column: 7, scope: !10513)
!10533 = !DILocation(line: 1319, column: 14, scope: !10513)
!10534 = !DILocation(line: 1319, column: 20, scope: !10513)
!10535 = !DILocalVariable(name: "__half", scope: !10536, file: !9979, line: 1321, type: !10527)
!10536 = distinct !DILexicalBlock(scope: !10513, file: !9979, line: 1320, column: 2)
!10537 = !DILocation(line: 1321, column: 18, scope: !10536)
!10538 = !DILocation(line: 1321, column: 27, scope: !10536)
!10539 = !DILocation(line: 1321, column: 33, scope: !10536)
!10540 = !DILocalVariable(name: "__middle", scope: !10536, file: !9979, line: 1322, type: !1149)
!10541 = !DILocation(line: 1322, column: 21, scope: !10536)
!10542 = !DILocation(line: 1322, column: 32, scope: !10536)
!10543 = !DILocation(line: 1323, column: 27, scope: !10536)
!10544 = !DILocation(line: 1323, column: 4, scope: !10536)
!10545 = !DILocation(line: 1324, column: 15, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10536, file: !9979, line: 1324, column: 8)
!10547 = !DILocation(line: 1324, column: 25, scope: !10546)
!10548 = !DILocation(line: 1324, column: 8, scope: !10546)
!10549 = !DILocation(line: 1324, column: 8, scope: !10536)
!10550 = !DILocation(line: 1326, column: 18, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10546, file: !9979, line: 1325, column: 6)
!10552 = !DILocation(line: 1326, column: 16, scope: !10551)
!10553 = !DILocation(line: 1327, column: 8, scope: !10551)
!10554 = !DILocation(line: 1328, column: 16, scope: !10551)
!10555 = !DILocation(line: 1328, column: 24, scope: !10551)
!10556 = !DILocation(line: 1328, column: 22, scope: !10551)
!10557 = !DILocation(line: 1328, column: 31, scope: !10551)
!10558 = !DILocation(line: 1328, column: 14, scope: !10551)
!10559 = !DILocation(line: 1329, column: 6, scope: !10551)
!10560 = !DILocation(line: 1331, column: 14, scope: !10546)
!10561 = !DILocation(line: 1331, column: 12, scope: !10546)
!10562 = distinct !{!10562, !10532, !10563}
!10563 = !DILocation(line: 1332, column: 2, scope: !10513)
!10564 = !DILocation(line: 1333, column: 14, scope: !10513)
!10565 = !DILocation(line: 1333, column: 7, scope: !10513)
!10566 = distinct !DISubprogram(name: "__iter_comp_val<less_gatePairConnectedInside>", linkageName: "_ZN9__gnu_cxx5__ops15__iter_comp_valI28less_gatePairConnectedInsideEENS0_14_Iter_comp_valIT_EES4_", scope: !2062, file: !2061, line: 200, type: !10567, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2129, retainedNodes: !324)
!10567 = !DISubroutineType(types: !10568)
!10568 = !{!2112, !2036}
!10569 = !DILocalVariable(name: "__comp", arg: 1, scope: !10566, file: !2061, line: 200, type: !2036)
!10570 = !DILocation(line: 200, column: 30, scope: !10566)
!10571 = !DILocation(line: 201, column: 39, scope: !10566)
!10572 = !DILocation(line: 201, column: 14, scope: !10566)
!10573 = !DILocation(line: 201, column: 7, scope: !10566)
!10574 = distinct !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2112, file: !2061, line: 193, type: !10575, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10272, declaration: !10577, retainedNodes: !324)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!13, !2118, !1149, !6548}
!10577 = !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2112, file: !2061, line: 193, type: !10575, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0, templateParams: !10272)
!10578 = !DILocalVariable(name: "this", arg: 1, scope: !10574, type: !10579, flags: DIFlagArtificial | DIFlagObjectPointer)
!10579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!10580 = !DILocation(line: 0, scope: !10574)
!10581 = !DILocalVariable(name: "__it", arg: 2, scope: !10574, file: !2061, line: 193, type: !1149)
!10582 = !DILocation(line: 193, column: 23, scope: !10574)
!10583 = !DILocalVariable(name: "__val", arg: 3, scope: !10574, file: !2061, line: 193, type: !6548)
!10584 = !DILocation(line: 193, column: 37, scope: !10574)
!10585 = !DILocation(line: 194, column: 16, scope: !10574)
!10586 = !DILocation(line: 194, column: 25, scope: !10574)
!10587 = !DILocation(line: 194, column: 24, scope: !10574)
!10588 = !DILocation(line: 194, column: 31, scope: !10574)
!10589 = !DILocation(line: 194, column: 4, scope: !10574)
!10590 = distinct !DISubprogram(name: "operator()", linkageName: "_ZN28less_gatePairConnectedInsideclEP5cGateS1_", scope: !2036, file: !31, line: 736, type: !2044, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2043, retainedNodes: !324)
!10591 = !DILocalVariable(name: "this", arg: 1, scope: !10590, type: !6761, flags: DIFlagArtificial | DIFlagObjectPointer)
!10592 = !DILocation(line: 0, scope: !10590)
!10593 = !DILocalVariable(name: "a", arg: 2, scope: !10590, file: !31, line: 736, type: !1147)
!10594 = !DILocation(line: 736, column: 28, scope: !10590)
!10595 = !DILocalVariable(name: "b", arg: 3, scope: !10590, file: !31, line: 736, type: !1147)
!10596 = !DILocation(line: 736, column: 38, scope: !10590)
!10597 = !DILocation(line: 737, column: 17, scope: !10590)
!10598 = !DILocation(line: 737, column: 19, scope: !10590)
!10599 = !DILocation(line: 737, column: 22, scope: !10590)
!10600 = !DILocation(line: 737, column: 25, scope: !10590)
!10601 = !DILocation(line: 737, column: 16, scope: !10590)
!10602 = !DILocation(line: 737, column: 49, scope: !10590)
!10603 = !DILocation(line: 737, column: 51, scope: !10590)
!10604 = !DILocation(line: 737, column: 54, scope: !10590)
!10605 = !DILocation(line: 737, column: 57, scope: !10590)
!10606 = !DILocation(line: 737, column: 48, scope: !10590)
!10607 = !DILocation(line: 737, column: 46, scope: !10590)
!10608 = !DILocation(line: 737, column: 78, scope: !10590)
!10609 = !DILocation(line: 738, column: 17, scope: !10590)
!10610 = !DILocation(line: 738, column: 19, scope: !10590)
!10611 = !DILocation(line: 738, column: 22, scope: !10590)
!10612 = !DILocation(line: 738, column: 29, scope: !10590)
!10613 = !DILocation(line: 738, column: 32, scope: !10590)
!10614 = !DILocation(line: 738, column: 45, scope: !10590)
!10615 = !DILocation(line: 738, column: 16, scope: !10590)
!10616 = !DILocation(line: 738, column: 69, scope: !10590)
!10617 = !DILocation(line: 738, column: 71, scope: !10590)
!10618 = !DILocation(line: 738, column: 74, scope: !10590)
!10619 = !DILocation(line: 738, column: 81, scope: !10590)
!10620 = !DILocation(line: 738, column: 84, scope: !10590)
!10621 = !DILocation(line: 738, column: 97, scope: !10590)
!10622 = !DILocation(line: 738, column: 68, scope: !10590)
!10623 = !DILocation(line: 738, column: 66, scope: !10590)
!10624 = !DILocation(line: 737, column: 9, scope: !10590)
!10625 = distinct !DISubprogram(name: "move<less_gatePairConnectedInside &>", linkageName: "_ZSt4moveIR28less_gatePairConnectedInsideEONSt16remove_referenceIT_E4typeEOS3_", scope: !2, file: !8314, line: 101, type: !10626, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10631, retainedNodes: !324)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!10628, !10633}
!10628 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !10629, size: 64)
!10629 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10630, file: !643, line: 1598, baseType: !2036)
!10630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<less_gatePairConnectedInside &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10631, identifier: "_ZTSSt16remove_referenceIR28less_gatePairConnectedInsideE")
!10631 = !{!10632}
!10632 = !DITemplateTypeParameter(name: "_Tp", type: !10633)
!10633 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2036, size: 64)
!10634 = !DILocalVariable(name: "__t", arg: 1, scope: !10625, file: !8314, line: 101, type: !10633)
!10635 = !DILocation(line: 101, column: 16, scope: !10625)
!10636 = !DILocation(line: 102, column: 71, scope: !10625)
!10637 = !DILocation(line: 102, column: 7, scope: !10625)
!10638 = distinct !DISubprogram(name: "_Iter_comp_val", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI28less_gatePairConnectedInsideEC2ES2_", scope: !2112, file: !2061, line: 172, type: !2116, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2115, retainedNodes: !324)
!10639 = !DILocalVariable(name: "this", arg: 1, scope: !10638, type: !10579, flags: DIFlagArtificial | DIFlagObjectPointer)
!10640 = !DILocation(line: 0, scope: !10638)
!10641 = !DILocalVariable(name: "__comp", arg: 2, scope: !10638, file: !2061, line: 172, type: !2036)
!10642 = !DILocation(line: 172, column: 31, scope: !10638)
!10643 = !DILocation(line: 173, column: 4, scope: !10638)
!10644 = !DILocation(line: 173, column: 12, scope: !10638)
!10645 = !DILocation(line: 174, column: 9, scope: !10638)
!10646 = distinct !DISubprogram(name: "__lower_bound<cGate **, cGate *, __gnu_cxx::__ops::_Iter_comp_val<less_gatePairConnectedOutside> >", linkageName: "_ZSt13__lower_boundIPP5cGateS1_N9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEEET_S8_S8_RKT0_T1_", scope: !2, file: !9979, line: 1311, type: !10647, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10649, retainedNodes: !324)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{!1149, !1149, !1149, !6548, !2131}
!10649 = !{!6551, !6552, !10650}
!10650 = !DITemplateTypeParameter(name: "_Compare", type: !2131)
!10651 = !DILocalVariable(name: "__first", arg: 1, scope: !10646, file: !9979, line: 1311, type: !1149)
!10652 = !DILocation(line: 1311, column: 36, scope: !10646)
!10653 = !DILocalVariable(name: "__last", arg: 2, scope: !10646, file: !9979, line: 1311, type: !1149)
!10654 = !DILocation(line: 1311, column: 62, scope: !10646)
!10655 = !DILocalVariable(name: "__val", arg: 3, scope: !10646, file: !9979, line: 1312, type: !6548)
!10656 = !DILocation(line: 1312, column: 16, scope: !10646)
!10657 = !DILocalVariable(name: "__comp", arg: 4, scope: !10646, file: !9979, line: 1312, type: !2131)
!10658 = !DILocation(line: 1312, column: 32, scope: !10646)
!10659 = !DILocalVariable(name: "__len", scope: !10646, file: !9979, line: 1317, type: !10660)
!10660 = !DIDerivedType(tag: DW_TAG_typedef, name: "_DistanceType", scope: !10646, file: !9979, line: 1315, baseType: !10185)
!10661 = !DILocation(line: 1317, column: 21, scope: !10646)
!10662 = !DILocation(line: 1317, column: 43, scope: !10646)
!10663 = !DILocation(line: 1317, column: 52, scope: !10646)
!10664 = !DILocation(line: 1317, column: 29, scope: !10646)
!10665 = !DILocation(line: 1319, column: 7, scope: !10646)
!10666 = !DILocation(line: 1319, column: 14, scope: !10646)
!10667 = !DILocation(line: 1319, column: 20, scope: !10646)
!10668 = !DILocalVariable(name: "__half", scope: !10669, file: !9979, line: 1321, type: !10660)
!10669 = distinct !DILexicalBlock(scope: !10646, file: !9979, line: 1320, column: 2)
!10670 = !DILocation(line: 1321, column: 18, scope: !10669)
!10671 = !DILocation(line: 1321, column: 27, scope: !10669)
!10672 = !DILocation(line: 1321, column: 33, scope: !10669)
!10673 = !DILocalVariable(name: "__middle", scope: !10669, file: !9979, line: 1322, type: !1149)
!10674 = !DILocation(line: 1322, column: 21, scope: !10669)
!10675 = !DILocation(line: 1322, column: 32, scope: !10669)
!10676 = !DILocation(line: 1323, column: 27, scope: !10669)
!10677 = !DILocation(line: 1323, column: 4, scope: !10669)
!10678 = !DILocation(line: 1324, column: 15, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10669, file: !9979, line: 1324, column: 8)
!10680 = !DILocation(line: 1324, column: 25, scope: !10679)
!10681 = !DILocation(line: 1324, column: 8, scope: !10679)
!10682 = !DILocation(line: 1324, column: 8, scope: !10669)
!10683 = !DILocation(line: 1326, column: 18, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10679, file: !9979, line: 1325, column: 6)
!10685 = !DILocation(line: 1326, column: 16, scope: !10684)
!10686 = !DILocation(line: 1327, column: 8, scope: !10684)
!10687 = !DILocation(line: 1328, column: 16, scope: !10684)
!10688 = !DILocation(line: 1328, column: 24, scope: !10684)
!10689 = !DILocation(line: 1328, column: 22, scope: !10684)
!10690 = !DILocation(line: 1328, column: 31, scope: !10684)
!10691 = !DILocation(line: 1328, column: 14, scope: !10684)
!10692 = !DILocation(line: 1329, column: 6, scope: !10684)
!10693 = !DILocation(line: 1331, column: 14, scope: !10679)
!10694 = !DILocation(line: 1331, column: 12, scope: !10679)
!10695 = distinct !{!10695, !10665, !10696}
!10696 = !DILocation(line: 1332, column: 2, scope: !10646)
!10697 = !DILocation(line: 1333, column: 14, scope: !10646)
!10698 = !DILocation(line: 1333, column: 7, scope: !10646)
!10699 = distinct !DISubprogram(name: "__iter_comp_val<less_gatePairConnectedOutside>", linkageName: "_ZN9__gnu_cxx5__ops15__iter_comp_valI29less_gatePairConnectedOutsideEENS0_14_Iter_comp_valIT_EES4_", scope: !2062, file: !2061, line: 200, type: !10700, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2148, retainedNodes: !324)
!10700 = !DISubroutineType(types: !10701)
!10701 = !{!2131, !2046}
!10702 = !DILocalVariable(name: "__comp", arg: 1, scope: !10699, file: !2061, line: 200, type: !2046)
!10703 = !DILocation(line: 200, column: 30, scope: !10699)
!10704 = !DILocation(line: 201, column: 39, scope: !10699)
!10705 = !DILocation(line: 201, column: 14, scope: !10699)
!10706 = !DILocation(line: 201, column: 7, scope: !10699)
!10707 = distinct !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2131, file: !2061, line: 193, type: !10708, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10272, declaration: !10710, retainedNodes: !324)
!10708 = !DISubroutineType(types: !10709)
!10709 = !{!13, !2137, !1149, !6548}
!10710 = !DISubprogram(name: "operator()<cGate **, cGate *const>", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEclIPP5cGateKS6_EEbT_RT0_", scope: !2131, file: !2061, line: 193, type: !10708, scopeLine: 193, flags: DIFlagPrototyped, spFlags: 0, templateParams: !10272)
!10711 = !DILocalVariable(name: "this", arg: 1, scope: !10707, type: !10712, flags: DIFlagArtificial | DIFlagObjectPointer)
!10712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!10713 = !DILocation(line: 0, scope: !10707)
!10714 = !DILocalVariable(name: "__it", arg: 2, scope: !10707, file: !2061, line: 193, type: !1149)
!10715 = !DILocation(line: 193, column: 23, scope: !10707)
!10716 = !DILocalVariable(name: "__val", arg: 3, scope: !10707, file: !2061, line: 193, type: !6548)
!10717 = !DILocation(line: 193, column: 37, scope: !10707)
!10718 = !DILocation(line: 194, column: 16, scope: !10707)
!10719 = !DILocation(line: 194, column: 25, scope: !10707)
!10720 = !DILocation(line: 194, column: 24, scope: !10707)
!10721 = !DILocation(line: 194, column: 31, scope: !10707)
!10722 = !DILocation(line: 194, column: 4, scope: !10707)
!10723 = distinct !DISubprogram(name: "operator()", linkageName: "_ZN29less_gatePairConnectedOutsideclEP5cGateS1_", scope: !2046, file: !31, line: 745, type: !2054, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2053, retainedNodes: !324)
!10724 = !DILocalVariable(name: "this", arg: 1, scope: !10723, type: !6791, flags: DIFlagArtificial | DIFlagObjectPointer)
!10725 = !DILocation(line: 0, scope: !10723)
!10726 = !DILocalVariable(name: "a", arg: 2, scope: !10723, file: !31, line: 745, type: !1147)
!10727 = !DILocation(line: 745, column: 28, scope: !10723)
!10728 = !DILocalVariable(name: "b", arg: 3, scope: !10723, file: !31, line: 745, type: !1147)
!10729 = !DILocation(line: 745, column: 38, scope: !10723)
!10730 = !DILocation(line: 746, column: 17, scope: !10723)
!10731 = !DILocation(line: 746, column: 19, scope: !10723)
!10732 = !DILocation(line: 746, column: 22, scope: !10723)
!10733 = !DILocation(line: 746, column: 25, scope: !10723)
!10734 = !DILocation(line: 746, column: 16, scope: !10723)
!10735 = !DILocation(line: 746, column: 50, scope: !10723)
!10736 = !DILocation(line: 746, column: 52, scope: !10723)
!10737 = !DILocation(line: 746, column: 55, scope: !10723)
!10738 = !DILocation(line: 746, column: 58, scope: !10723)
!10739 = !DILocation(line: 746, column: 49, scope: !10723)
!10740 = !DILocation(line: 746, column: 47, scope: !10723)
!10741 = !DILocation(line: 746, column: 80, scope: !10723)
!10742 = !DILocation(line: 747, column: 17, scope: !10723)
!10743 = !DILocation(line: 747, column: 19, scope: !10723)
!10744 = !DILocation(line: 747, column: 22, scope: !10723)
!10745 = !DILocation(line: 747, column: 29, scope: !10723)
!10746 = !DILocation(line: 747, column: 32, scope: !10723)
!10747 = !DILocation(line: 747, column: 45, scope: !10723)
!10748 = !DILocation(line: 747, column: 16, scope: !10723)
!10749 = !DILocation(line: 747, column: 70, scope: !10723)
!10750 = !DILocation(line: 747, column: 72, scope: !10723)
!10751 = !DILocation(line: 747, column: 75, scope: !10723)
!10752 = !DILocation(line: 747, column: 82, scope: !10723)
!10753 = !DILocation(line: 747, column: 85, scope: !10723)
!10754 = !DILocation(line: 747, column: 98, scope: !10723)
!10755 = !DILocation(line: 747, column: 69, scope: !10723)
!10756 = !DILocation(line: 747, column: 67, scope: !10723)
!10757 = !DILocation(line: 746, column: 9, scope: !10723)
!10758 = distinct !DISubprogram(name: "move<less_gatePairConnectedOutside &>", linkageName: "_ZSt4moveIR29less_gatePairConnectedOutsideEONSt16remove_referenceIT_E4typeEOS3_", scope: !2, file: !8314, line: 101, type: !10759, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10764, retainedNodes: !324)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!10761, !10766}
!10761 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !10762, size: 64)
!10762 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10763, file: !643, line: 1598, baseType: !2046)
!10763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<less_gatePairConnectedOutside &>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10764, identifier: "_ZTSSt16remove_referenceIR29less_gatePairConnectedOutsideE")
!10764 = !{!10765}
!10765 = !DITemplateTypeParameter(name: "_Tp", type: !10766)
!10766 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2046, size: 64)
!10767 = !DILocalVariable(name: "__t", arg: 1, scope: !10758, file: !8314, line: 101, type: !10766)
!10768 = !DILocation(line: 101, column: 16, scope: !10758)
!10769 = !DILocation(line: 102, column: 71, scope: !10758)
!10770 = !DILocation(line: 102, column: 7, scope: !10758)
!10771 = distinct !DISubprogram(name: "_Iter_comp_val", linkageName: "_ZN9__gnu_cxx5__ops14_Iter_comp_valI29less_gatePairConnectedOutsideEC2ES2_", scope: !2131, file: !2061, line: 172, type: !2135, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2134, retainedNodes: !324)
!10772 = !DILocalVariable(name: "this", arg: 1, scope: !10771, type: !10712, flags: DIFlagArtificial | DIFlagObjectPointer)
!10773 = !DILocation(line: 0, scope: !10771)
!10774 = !DILocalVariable(name: "__comp", arg: 2, scope: !10771, file: !2061, line: 172, type: !2046)
!10775 = !DILocation(line: 172, column: 31, scope: !10771)
!10776 = !DILocation(line: 173, column: 4, scope: !10771)
!10777 = !DILocation(line: 173, column: 12, scope: !10771)
!10778 = !DILocation(line: 174, column: 9, scope: !10771)
!10779 = distinct !DISubprogram(name: "_M_erase_at_end", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE15_M_erase_at_endEPS1_", scope: !2151, file: !1497, line: 1792, type: !2567, scopeLine: 1793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2566, retainedNodes: !324)
!10780 = !DILocalVariable(name: "this", arg: 1, scope: !10779, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!10781 = !DILocation(line: 0, scope: !10779)
!10782 = !DILocalVariable(name: "__pos", arg: 2, scope: !10779, file: !1497, line: 1792, type: !2367)
!10783 = !DILocation(line: 1792, column: 31, scope: !10779)
!10784 = !DILocalVariable(name: "__n", scope: !10785, file: !1497, line: 1794, type: !1735)
!10785 = distinct !DILexicalBlock(scope: !10779, file: !1497, line: 1794, column: 16)
!10786 = !DILocation(line: 1794, column: 16, scope: !10785)
!10787 = !DILocation(line: 1794, column: 28, scope: !10785)
!10788 = !DILocation(line: 1794, column: 22, scope: !10785)
!10789 = !DILocation(line: 1794, column: 36, scope: !10785)
!10790 = !DILocation(line: 1794, column: 48, scope: !10785)
!10791 = !DILocation(line: 1794, column: 46, scope: !10785)
!10792 = !DILocation(line: 1794, column: 16, scope: !10779)
!10793 = !DILocation(line: 1796, column: 20, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10785, file: !1497, line: 1795, column: 4)
!10795 = !DILocation(line: 1796, column: 33, scope: !10794)
!10796 = !DILocation(line: 1796, column: 27, scope: !10794)
!10797 = !DILocation(line: 1796, column: 41, scope: !10794)
!10798 = !DILocation(line: 1797, column: 6, scope: !10794)
!10799 = !DILocation(line: 1796, column: 6, scope: !10794)
!10800 = !DILocation(line: 1798, column: 32, scope: !10794)
!10801 = !DILocation(line: 1798, column: 12, scope: !10794)
!10802 = !DILocation(line: 1798, column: 6, scope: !10794)
!10803 = !DILocation(line: 1798, column: 20, scope: !10794)
!10804 = !DILocation(line: 1798, column: 30, scope: !10794)
!10805 = !DILocation(line: 1800, column: 4, scope: !10794)
!10806 = !DILocation(line: 1801, column: 7, scope: !10779)
!10807 = distinct !DISubprogram(name: "emplace_back<cChannel *>", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE12emplace_backIJS1_EEEvDpOT_", scope: !2151, file: !9686, line: 110, type: !10808, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10812, declaration: !10811, retainedNodes: !324)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{null, !2379, !10810}
!10810 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2173, size: 64)
!10811 = !DISubprogram(name: "emplace_back<cChannel *>", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE12emplace_backIJS1_EEEvDpOT_", scope: !2151, file: !1497, line: 1212, type: !10808, scopeLine: 1212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !10812)
!10812 = !{!10813}
!10813 = !DITemplateValueParameter(tag: DW_TAG_GNU_template_parameter_pack, name: "_Args", value: !10814)
!10814 = !{!2264}
!10815 = !DILocalVariable(name: "this", arg: 1, scope: !10807, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!10816 = !DILocation(line: 0, scope: !10807)
!10817 = !DILocalVariable(name: "__args", arg: 2, scope: !10807, file: !1497, line: 1212, type: !10810)
!10818 = !DILocation(line: 1212, column: 26, scope: !10807)
!10819 = !DILocation(line: 112, column: 12, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10807, file: !9686, line: 112, column: 6)
!10821 = !DILocation(line: 112, column: 6, scope: !10820)
!10822 = !DILocation(line: 112, column: 20, scope: !10820)
!10823 = !DILocation(line: 112, column: 39, scope: !10820)
!10824 = !DILocation(line: 112, column: 33, scope: !10820)
!10825 = !DILocation(line: 112, column: 47, scope: !10820)
!10826 = !DILocation(line: 112, column: 30, scope: !10820)
!10827 = !DILocation(line: 112, column: 6, scope: !10807)
!10828 = !DILocation(line: 115, column: 37, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10820, file: !9686, line: 113, column: 4)
!10830 = !DILocation(line: 115, column: 31, scope: !10829)
!10831 = !DILocation(line: 115, column: 52, scope: !10829)
!10832 = !DILocation(line: 115, column: 46, scope: !10829)
!10833 = !DILocation(line: 115, column: 60, scope: !10829)
!10834 = !DILocation(line: 116, column: 30, scope: !10829)
!10835 = !DILocation(line: 116, column: 10, scope: !10829)
!10836 = !DILocation(line: 115, column: 6, scope: !10829)
!10837 = !DILocation(line: 117, column: 14, scope: !10829)
!10838 = !DILocation(line: 117, column: 8, scope: !10829)
!10839 = !DILocation(line: 117, column: 22, scope: !10829)
!10840 = !DILocation(line: 117, column: 6, scope: !10829)
!10841 = !DILocation(line: 119, column: 4, scope: !10829)
!10842 = !DILocation(line: 121, column: 22, scope: !10820)
!10843 = !DILocation(line: 121, column: 49, scope: !10820)
!10844 = !DILocation(line: 121, column: 29, scope: !10820)
!10845 = !DILocation(line: 121, column: 4, scope: !10820)
!10846 = !DILocation(line: 125, column: 7, scope: !10807)
!10847 = distinct !DISubprogram(name: "move<cChannel *&>", linkageName: "_ZSt4moveIRP8cChannelEONSt16remove_referenceIT_E4typeEOS4_", scope: !2, file: !8314, line: 101, type: !10848, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10853, retainedNodes: !324)
!10848 = !DISubroutineType(types: !10849)
!10849 = !{!10850, !2200}
!10850 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !10851, size: 64)
!10851 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10852, file: !643, line: 1598, baseType: !2173)
!10852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<cChannel *&>", scope: !2, file: !643, line: 1597, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !10853, identifier: "_ZTSSt16remove_referenceIRP8cChannelE")
!10853 = !{!10854}
!10854 = !DITemplateTypeParameter(name: "_Tp", type: !2200)
!10855 = !DILocalVariable(name: "__t", arg: 1, scope: !10847, file: !8314, line: 101, type: !2200)
!10856 = !DILocation(line: 101, column: 16, scope: !10847)
!10857 = !DILocation(line: 102, column: 71, scope: !10847)
!10858 = !DILocation(line: 102, column: 7, scope: !10847)
!10859 = distinct !DISubprogram(name: "construct<cChannel *, cChannel *>", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_", scope: !2166, file: !146, line: 507, type: !10860, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10863, declaration: !10862, retainedNodes: !324)
!10860 = !DISubroutineType(types: !10861)
!10861 = !{null, !2176, !2172, !10810}
!10862 = !DISubprogram(name: "construct<cChannel *, cChannel *>", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_", scope: !2166, file: !146, line: 507, type: !10860, scopeLine: 507, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: 0, templateParams: !10863)
!10863 = !{!10864, !10813}
!10864 = !DITemplateTypeParameter(name: "_Up", type: !2173)
!10865 = !DILocalVariable(name: "__a", arg: 1, scope: !10859, file: !146, line: 507, type: !2176)
!10866 = !DILocation(line: 507, column: 28, scope: !10859)
!10867 = !DILocalVariable(name: "__p", arg: 2, scope: !10859, file: !146, line: 507, type: !2172)
!10868 = !DILocation(line: 507, column: 66, scope: !10859)
!10869 = !DILocalVariable(name: "__args", arg: 3, scope: !10859, file: !146, line: 508, type: !10810)
!10870 = !DILocation(line: 508, column: 16, scope: !10859)
!10871 = !DILocation(line: 512, column: 4, scope: !10859)
!10872 = !DILocation(line: 512, column: 18, scope: !10859)
!10873 = !DILocation(line: 512, column: 43, scope: !10859)
!10874 = !DILocation(line: 512, column: 23, scope: !10859)
!10875 = !DILocation(line: 512, column: 8, scope: !10859)
!10876 = !DILocation(line: 516, column: 2, scope: !10859)
!10877 = distinct !DISubprogram(name: "forward<cChannel *>", linkageName: "_ZSt7forwardIP8cChannelEOT_RNSt16remove_referenceIS2_E4typeE", scope: !2, file: !8314, line: 76, type: !10878, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2219, retainedNodes: !324)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{!10810, !10880}
!10880 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !10881, size: 64)
!10881 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !10882, file: !643, line: 1594, baseType: !2173)
!10882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<cChannel *>", scope: !2, file: !643, line: 1593, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !2219, identifier: "_ZTSSt16remove_referenceIP8cChannelE")
!10883 = !DILocalVariable(name: "__t", arg: 1, scope: !10877, file: !8314, line: 76, type: !10880)
!10884 = !DILocation(line: 76, column: 56, scope: !10877)
!10885 = !DILocation(line: 77, column: 33, scope: !10877)
!10886 = !DILocation(line: 77, column: 7, scope: !10877)
!10887 = distinct !DISubprogram(name: "_M_realloc_insert<cChannel *>", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_", scope: !2151, file: !9686, line: 427, type: !10888, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10812, declaration: !10890, retainedNodes: !324)
!10888 = !DISubroutineType(types: !10889)
!10889 = !{null, !2379, !2150, !10810}
!10890 = !DISubprogram(name: "_M_realloc_insert<cChannel *>", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_", scope: !2151, file: !1497, line: 1737, type: !10888, scopeLine: 1737, flags: DIFlagProtected | DIFlagPrototyped, spFlags: 0, templateParams: !10812)
!10891 = !DILocalVariable(name: "this", arg: 1, scope: !10887, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!10892 = !DILocation(line: 0, scope: !10887)
!10893 = !DILocalVariable(name: "__position", arg: 2, scope: !10887, file: !1497, line: 1737, type: !2150)
!10894 = !DILocation(line: 1737, column: 29, scope: !10887)
!10895 = !DILocalVariable(name: "__args", arg: 3, scope: !10887, file: !1497, line: 1737, type: !10810)
!10896 = !DILocation(line: 1737, column: 52, scope: !10887)
!10897 = !DILocalVariable(name: "__len", scope: !10887, file: !9686, line: 435, type: !9777)
!10898 = !DILocation(line: 435, column: 23, scope: !10887)
!10899 = !DILocation(line: 436, column: 2, scope: !10887)
!10900 = !DILocalVariable(name: "__old_start", scope: !10887, file: !9686, line: 437, type: !2367)
!10901 = !DILocation(line: 437, column: 15, scope: !10887)
!10902 = !DILocation(line: 437, column: 35, scope: !10887)
!10903 = !DILocation(line: 437, column: 29, scope: !10887)
!10904 = !DILocation(line: 437, column: 43, scope: !10887)
!10905 = !DILocalVariable(name: "__old_finish", scope: !10887, file: !9686, line: 438, type: !2367)
!10906 = !DILocation(line: 438, column: 15, scope: !10887)
!10907 = !DILocation(line: 438, column: 36, scope: !10887)
!10908 = !DILocation(line: 438, column: 30, scope: !10887)
!10909 = !DILocation(line: 438, column: 44, scope: !10887)
!10910 = !DILocalVariable(name: "__elems_before", scope: !10887, file: !9686, line: 439, type: !9777)
!10911 = !DILocation(line: 439, column: 23, scope: !10887)
!10912 = !DILocation(line: 439, column: 53, scope: !10887)
!10913 = !DILocation(line: 439, column: 51, scope: !10887)
!10914 = !DILocalVariable(name: "__new_start", scope: !10887, file: !9686, line: 440, type: !2367)
!10915 = !DILocation(line: 440, column: 15, scope: !10887)
!10916 = !DILocation(line: 440, column: 33, scope: !10887)
!10917 = !DILocation(line: 440, column: 45, scope: !10887)
!10918 = !DILocalVariable(name: "__new_finish", scope: !10887, file: !9686, line: 441, type: !2367)
!10919 = !DILocation(line: 441, column: 15, scope: !10887)
!10920 = !DILocation(line: 441, column: 28, scope: !10887)
!10921 = !DILocation(line: 449, column: 35, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10887, file: !9686, line: 443, column: 2)
!10923 = !DILocation(line: 449, column: 29, scope: !10922)
!10924 = !DILocation(line: 450, column: 8, scope: !10922)
!10925 = !DILocation(line: 450, column: 22, scope: !10922)
!10926 = !DILocation(line: 450, column: 20, scope: !10922)
!10927 = !DILocation(line: 452, column: 28, scope: !10922)
!10928 = !DILocation(line: 452, column: 8, scope: !10922)
!10929 = !DILocation(line: 449, column: 4, scope: !10922)
!10930 = !DILocation(line: 456, column: 17, scope: !10922)
!10931 = !DILocation(line: 461, column: 35, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !9686, line: 460, column: 6)
!10933 = distinct !DILexicalBlock(scope: !10922, file: !9686, line: 459, column: 29)
!10934 = !DILocation(line: 461, column: 59, scope: !10932)
!10935 = !DILocation(line: 462, column: 7, scope: !10932)
!10936 = !DILocation(line: 462, column: 20, scope: !10932)
!10937 = !DILocation(line: 461, column: 23, scope: !10932)
!10938 = !DILocation(line: 461, column: 21, scope: !10932)
!10939 = !DILocation(line: 464, column: 8, scope: !10932)
!10940 = !DILocation(line: 466, column: 46, scope: !10932)
!10941 = !DILocation(line: 466, column: 54, scope: !10932)
!10942 = !DILocation(line: 467, column: 7, scope: !10932)
!10943 = !DILocation(line: 467, column: 21, scope: !10932)
!10944 = !DILocation(line: 466, column: 23, scope: !10932)
!10945 = !DILocation(line: 466, column: 21, scope: !10932)
!10946 = !DILocation(line: 500, column: 7, scope: !10887)
!10947 = !DILocation(line: 500, column: 21, scope: !10887)
!10948 = !DILocation(line: 501, column: 13, scope: !10887)
!10949 = !DILocation(line: 501, column: 7, scope: !10887)
!10950 = !DILocation(line: 501, column: 21, scope: !10887)
!10951 = !DILocation(line: 501, column: 41, scope: !10887)
!10952 = !DILocation(line: 501, column: 39, scope: !10887)
!10953 = !DILocation(line: 502, column: 32, scope: !10887)
!10954 = !DILocation(line: 502, column: 13, scope: !10887)
!10955 = !DILocation(line: 502, column: 7, scope: !10887)
!10956 = !DILocation(line: 502, column: 21, scope: !10887)
!10957 = !DILocation(line: 502, column: 30, scope: !10887)
!10958 = !DILocation(line: 503, column: 33, scope: !10887)
!10959 = !DILocation(line: 503, column: 13, scope: !10887)
!10960 = !DILocation(line: 503, column: 7, scope: !10887)
!10961 = !DILocation(line: 503, column: 21, scope: !10887)
!10962 = !DILocation(line: 503, column: 31, scope: !10887)
!10963 = !DILocation(line: 504, column: 41, scope: !10887)
!10964 = !DILocation(line: 504, column: 55, scope: !10887)
!10965 = !DILocation(line: 504, column: 53, scope: !10887)
!10966 = !DILocation(line: 504, column: 13, scope: !10887)
!10967 = !DILocation(line: 504, column: 7, scope: !10887)
!10968 = !DILocation(line: 504, column: 21, scope: !10887)
!10969 = !DILocation(line: 504, column: 39, scope: !10887)
!10970 = !DILocation(line: 505, column: 5, scope: !10887)
!10971 = distinct !DISubprogram(name: "end", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE3endEv", scope: !2151, file: !1497, line: 829, type: !2438, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2446, retainedNodes: !324)
!10972 = !DILocalVariable(name: "this", arg: 1, scope: !10971, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!10973 = !DILocation(line: 0, scope: !10971)
!10974 = !DILocation(line: 830, column: 31, scope: !10971)
!10975 = !DILocation(line: 830, column: 25, scope: !10971)
!10976 = !DILocation(line: 830, column: 39, scope: !10971)
!10977 = !DILocation(line: 830, column: 16, scope: !10971)
!10978 = !DILocation(line: 830, column: 9, scope: !10971)
!10979 = distinct !DISubprogram(name: "construct<cChannel *, cChannel *>", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelE9constructIS2_JS2_EEEvPT_DpOT0_", scope: !2182, file: !233, line: 148, type: !10980, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !10863, declaration: !10982, retainedNodes: !324)
!10980 = !DISubroutineType(types: !10981)
!10981 = !{null, !2187, !2172, !10810}
!10982 = !DISubprogram(name: "construct<cChannel *, cChannel *>", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelE9constructIS2_JS2_EEEvPT_DpOT0_", scope: !2182, file: !233, line: 148, type: !10980, scopeLine: 148, flags: DIFlagPublic | DIFlagPrototyped, spFlags: 0, templateParams: !10863)
!10983 = !DILocalVariable(name: "this", arg: 1, scope: !10979, type: !8734, flags: DIFlagArtificial | DIFlagObjectPointer)
!10984 = !DILocation(line: 0, scope: !10979)
!10985 = !DILocalVariable(name: "__p", arg: 2, scope: !10979, file: !233, line: 148, type: !2172)
!10986 = !DILocation(line: 148, column: 17, scope: !10979)
!10987 = !DILocalVariable(name: "__args", arg: 3, scope: !10979, file: !233, line: 148, type: !10810)
!10988 = !DILocation(line: 148, column: 33, scope: !10979)
!10989 = !DILocation(line: 150, column: 18, scope: !10979)
!10990 = !DILocation(line: 150, column: 4, scope: !10979)
!10991 = !DILocation(line: 150, column: 47, scope: !10979)
!10992 = !DILocation(line: 150, column: 27, scope: !10979)
!10993 = !DILocation(line: 150, column: 60, scope: !10979)
!10994 = distinct !DISubprogram(name: "_M_check_len", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE12_M_check_lenEmPKc", scope: !2151, file: !1497, line: 1756, type: !2555, scopeLine: 1757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2554, retainedNodes: !324)
!10995 = !DILocalVariable(name: "this", arg: 1, scope: !10994, type: !8850, flags: DIFlagArtificial | DIFlagObjectPointer)
!10996 = !DILocation(line: 0, scope: !10994)
!10997 = !DILocalVariable(name: "__n", arg: 2, scope: !10994, file: !1497, line: 1756, type: !1735)
!10998 = !DILocation(line: 1756, column: 30, scope: !10994)
!10999 = !DILocalVariable(name: "__s", arg: 3, scope: !10994, file: !1497, line: 1756, type: !167)
!11000 = !DILocation(line: 1756, column: 47, scope: !10994)
!11001 = !DILocation(line: 1758, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10994, file: !1497, line: 1758, column: 6)
!11003 = !DILocation(line: 1758, column: 19, scope: !11002)
!11004 = !DILocation(line: 1758, column: 17, scope: !11002)
!11005 = !DILocation(line: 1758, column: 28, scope: !11002)
!11006 = !DILocation(line: 1758, column: 26, scope: !11002)
!11007 = !DILocation(line: 1758, column: 6, scope: !10994)
!11008 = !DILocation(line: 1759, column: 25, scope: !11002)
!11009 = !DILocation(line: 1759, column: 4, scope: !11002)
!11010 = !DILocalVariable(name: "__len", scope: !10994, file: !1497, line: 1761, type: !9777)
!11011 = !DILocation(line: 1761, column: 18, scope: !10994)
!11012 = !DILocation(line: 1761, column: 26, scope: !10994)
!11013 = !DILocation(line: 1761, column: 46, scope: !10994)
!11014 = !DILocation(line: 1761, column: 35, scope: !10994)
!11015 = !DILocation(line: 1761, column: 33, scope: !10994)
!11016 = !DILocation(line: 1762, column: 10, scope: !10994)
!11017 = !DILocation(line: 1762, column: 18, scope: !10994)
!11018 = !DILocation(line: 1762, column: 16, scope: !10994)
!11019 = !DILocation(line: 1762, column: 25, scope: !10994)
!11020 = !DILocation(line: 1762, column: 28, scope: !10994)
!11021 = !DILocation(line: 1762, column: 36, scope: !10994)
!11022 = !DILocation(line: 1762, column: 34, scope: !10994)
!11023 = !DILocation(line: 1762, column: 9, scope: !10994)
!11024 = !DILocation(line: 1762, column: 50, scope: !10994)
!11025 = !DILocation(line: 1762, column: 63, scope: !10994)
!11026 = !DILocation(line: 1762, column: 2, scope: !10994)
!11027 = distinct !DISubprogram(name: "operator-<cChannel **, std::vector<cChannel *, std::allocator<cChannel *> > >", linkageName: "_ZN9__gnu_cxxmiIPP8cChannelSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_", scope: !142, file: !852, line: 1177, type: !11028, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2633, retainedNodes: !324)
!11028 = !DISubroutineType(types: !11029)
!11029 = !{!2620, !11030, !11030}
!11030 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2602, size: 64)
!11031 = !DILocalVariable(name: "__lhs", arg: 1, scope: !11027, file: !852, line: 1177, type: !11030)
!11032 = !DILocation(line: 1177, column: 63, scope: !11027)
!11033 = !DILocalVariable(name: "__rhs", arg: 2, scope: !11027, file: !852, line: 1178, type: !11030)
!11034 = !DILocation(line: 1178, column: 56, scope: !11027)
!11035 = !DILocation(line: 1180, column: 14, scope: !11027)
!11036 = !DILocation(line: 1180, column: 20, scope: !11027)
!11037 = !DILocation(line: 1180, column: 29, scope: !11027)
!11038 = !DILocation(line: 1180, column: 35, scope: !11027)
!11039 = !DILocation(line: 1180, column: 27, scope: !11027)
!11040 = !DILocation(line: 1180, column: 7, scope: !11027)
!11041 = distinct !DISubprogram(name: "begin", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE5beginEv", scope: !2151, file: !1497, line: 811, type: !2438, scopeLine: 812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2437, retainedNodes: !324)
!11042 = !DILocalVariable(name: "this", arg: 1, scope: !11041, type: !8075, flags: DIFlagArtificial | DIFlagObjectPointer)
!11043 = !DILocation(line: 0, scope: !11041)
!11044 = !DILocation(line: 812, column: 31, scope: !11041)
!11045 = !DILocation(line: 812, column: 25, scope: !11041)
!11046 = !DILocation(line: 812, column: 39, scope: !11041)
!11047 = !DILocation(line: 812, column: 16, scope: !11041)
!11048 = !DILocation(line: 812, column: 9, scope: !11041)
!11049 = distinct !DISubprogram(name: "_M_allocate", linkageName: "_ZNSt12_Vector_baseIP8cChannelSaIS1_EE11_M_allocateEm", scope: !2154, file: !1497, line: 343, type: !2354, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2353, retainedNodes: !324)
!11050 = !DILocalVariable(name: "this", arg: 1, scope: !11049, type: !8705, flags: DIFlagArtificial | DIFlagObjectPointer)
!11051 = !DILocation(line: 0, scope: !11049)
!11052 = !DILocalVariable(name: "__n", arg: 2, scope: !11049, file: !1497, line: 343, type: !262)
!11053 = !DILocation(line: 343, column: 26, scope: !11049)
!11054 = !DILocation(line: 346, column: 9, scope: !11049)
!11055 = !DILocation(line: 346, column: 13, scope: !11049)
!11056 = !DILocation(line: 346, column: 34, scope: !11049)
!11057 = !DILocation(line: 346, column: 43, scope: !11049)
!11058 = !DILocation(line: 346, column: 20, scope: !11049)
!11059 = !DILocation(line: 346, column: 2, scope: !11049)
!11060 = !DILocalVariable(name: "__first", arg: 1, scope: !2636, file: !1497, line: 465, type: !2367)
!11061 = !DILocation(line: 465, column: 27, scope: !2636)
!11062 = !DILocalVariable(name: "__last", arg: 2, scope: !2636, file: !1497, line: 465, type: !2367)
!11063 = !DILocation(line: 465, column: 44, scope: !2636)
!11064 = !DILocalVariable(name: "__result", arg: 3, scope: !2636, file: !1497, line: 465, type: !2367)
!11065 = !DILocation(line: 465, column: 60, scope: !2636)
!11066 = !DILocalVariable(name: "__alloc", arg: 4, scope: !2636, file: !1497, line: 466, type: !2368)
!11067 = !DILocation(line: 466, column: 21, scope: !2636)
!11068 = !DILocation(line: 469, column: 24, scope: !2636)
!11069 = !DILocation(line: 469, column: 33, scope: !2636)
!11070 = !DILocation(line: 469, column: 41, scope: !2636)
!11071 = !DILocation(line: 469, column: 51, scope: !2636)
!11072 = !DILocation(line: 469, column: 9, scope: !2636)
!11073 = !DILocation(line: 469, column: 2, scope: !2636)
!11074 = distinct !DISubprogram(name: "base", linkageName: "_ZNK9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEE4baseEv", scope: !2581, file: !852, line: 1031, type: !2631, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2630, retainedNodes: !324)
!11075 = !DILocalVariable(name: "this", arg: 1, scope: !11074, type: !11076, flags: DIFlagArtificial | DIFlagObjectPointer)
!11076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!11077 = !DILocation(line: 0, scope: !11074)
!11078 = !DILocation(line: 1032, column: 16, scope: !11074)
!11079 = !DILocation(line: 1032, column: 9, scope: !11074)
!11080 = distinct !DISubprogram(name: "max_size", linkageName: "_ZNKSt6vectorIP8cChannelSaIS1_EE8max_sizeEv", scope: !2151, file: !1497, line: 923, type: !2465, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2467, retainedNodes: !324)
!11081 = !DILocalVariable(name: "this", arg: 1, scope: !11080, type: !8850, flags: DIFlagArtificial | DIFlagObjectPointer)
!11082 = !DILocation(line: 0, scope: !11080)
!11083 = !DILocation(line: 924, column: 28, scope: !11080)
!11084 = !DILocation(line: 924, column: 16, scope: !11080)
!11085 = !DILocation(line: 924, column: 9, scope: !11080)
!11086 = distinct !DISubprogram(name: "_S_max_size", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE11_S_max_sizeERKS2_", scope: !2151, file: !1497, line: 1776, type: !2562, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2561, retainedNodes: !324)
!11087 = !DILocalVariable(name: "__a", arg: 1, scope: !11086, file: !1497, line: 1776, type: !2564)
!11088 = !DILocation(line: 1776, column: 41, scope: !11086)
!11089 = !DILocalVariable(name: "__diffmax", scope: !11086, file: !1497, line: 1781, type: !10005)
!11090 = !DILocation(line: 1781, column: 15, scope: !11086)
!11091 = !DILocalVariable(name: "__allocmax", scope: !11086, file: !1497, line: 1783, type: !10005)
!11092 = !DILocation(line: 1783, column: 15, scope: !11086)
!11093 = !DILocation(line: 1783, column: 52, scope: !11086)
!11094 = !DILocation(line: 1783, column: 28, scope: !11086)
!11095 = !DILocation(line: 1784, column: 9, scope: !11086)
!11096 = !DILocation(line: 1784, column: 2, scope: !11086)
!11097 = distinct !DISubprogram(name: "_M_get_Tp_allocator", linkageName: "_ZNKSt12_Vector_baseIP8cChannelSaIS1_EE19_M_get_Tp_allocatorEv", scope: !2154, file: !1497, line: 280, type: !2317, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2316, retainedNodes: !324)
!11098 = !DILocalVariable(name: "this", arg: 1, scope: !11097, type: !11099, flags: DIFlagArtificial | DIFlagObjectPointer)
!11099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!11100 = !DILocation(line: 0, scope: !11097)
!11101 = !DILocation(line: 281, column: 22, scope: !11097)
!11102 = !DILocation(line: 281, column: 16, scope: !11097)
!11103 = !DILocation(line: 281, column: 9, scope: !11097)
!11104 = distinct !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE8max_sizeERKS2_", scope: !2166, file: !146, line: 543, type: !2242, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2241, retainedNodes: !324)
!11105 = !DILocalVariable(name: "__a", arg: 1, scope: !11104, file: !146, line: 543, type: !2245)
!11106 = !DILocation(line: 543, column: 38, scope: !11104)
!11107 = !DILocation(line: 546, column: 9, scope: !11104)
!11108 = !DILocation(line: 546, column: 13, scope: !11104)
!11109 = !DILocation(line: 546, column: 2, scope: !11104)
!11110 = distinct !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIP8cChannelE8max_sizeEv", scope: !2182, file: !233, line: 142, type: !2216, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2215, retainedNodes: !324)
!11111 = !DILocalVariable(name: "this", arg: 1, scope: !11110, type: !11112, flags: DIFlagArtificial | DIFlagObjectPointer)
!11112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!11113 = !DILocation(line: 0, scope: !11110)
!11114 = !DILocation(line: 143, column: 16, scope: !11110)
!11115 = !DILocation(line: 143, column: 9, scope: !11110)
!11116 = distinct !DISubprogram(name: "_M_max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIP8cChannelE11_M_max_sizeEv", scope: !2182, file: !233, line: 185, type: !2216, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2218, retainedNodes: !324)
!11117 = !DILocalVariable(name: "this", arg: 1, scope: !11116, type: !11112, flags: DIFlagArtificial | DIFlagObjectPointer)
!11118 = !DILocation(line: 0, scope: !11116)
!11119 = !DILocation(line: 188, column: 2, scope: !11116)
!11120 = distinct !DISubprogram(name: "__normal_iterator", linkageName: "_ZN9__gnu_cxx17__normal_iteratorIPP8cChannelSt6vectorIS2_SaIS2_EEEC2ERKS3_", scope: !2581, file: !852, line: 953, type: !2589, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2588, retainedNodes: !324)
!11121 = !DILocalVariable(name: "this", arg: 1, scope: !11120, type: !11122, flags: DIFlagArtificial | DIFlagObjectPointer)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!11123 = !DILocation(line: 0, scope: !11120)
!11124 = !DILocalVariable(name: "__i", arg: 2, scope: !11120, file: !852, line: 953, type: !2591)
!11125 = !DILocation(line: 953, column: 42, scope: !11120)
!11126 = !DILocation(line: 954, column: 9, scope: !11120)
!11127 = !DILocation(line: 954, column: 20, scope: !11120)
!11128 = !DILocation(line: 954, column: 27, scope: !11120)
!11129 = distinct !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIP8cChannelEE8allocateERS2_m", scope: !2166, file: !146, line: 459, type: !2169, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2168, retainedNodes: !324)
!11130 = !DILocalVariable(name: "__a", arg: 1, scope: !11129, file: !146, line: 459, type: !2176)
!11131 = !DILocation(line: 459, column: 32, scope: !11129)
!11132 = !DILocalVariable(name: "__n", arg: 2, scope: !11129, file: !146, line: 459, type: !290)
!11133 = !DILocation(line: 459, column: 47, scope: !11129)
!11134 = !DILocation(line: 460, column: 16, scope: !11129)
!11135 = !DILocation(line: 460, column: 29, scope: !11129)
!11136 = !DILocation(line: 460, column: 20, scope: !11129)
!11137 = !DILocation(line: 460, column: 9, scope: !11129)
!11138 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIP8cChannelE8allocateEmPKv", scope: !2182, file: !233, line: 103, type: !2210, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2209, retainedNodes: !324)
!11139 = !DILocalVariable(name: "this", arg: 1, scope: !11138, type: !8734, flags: DIFlagArtificial | DIFlagObjectPointer)
!11140 = !DILocation(line: 0, scope: !11138)
!11141 = !DILocalVariable(name: "__n", arg: 2, scope: !11138, file: !233, line: 103, type: !261)
!11142 = !DILocation(line: 103, column: 26, scope: !11138)
!11143 = !DILocalVariable(arg: 3, scope: !11138, file: !233, line: 103, type: !265)
!11144 = !DILocation(line: 103, column: 43, scope: !11138)
!11145 = !DILocation(line: 105, column: 6, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11138, file: !233, line: 105, column: 6)
!11147 = !DILocation(line: 105, column: 18, scope: !11146)
!11148 = !DILocation(line: 105, column: 10, scope: !11146)
!11149 = !DILocation(line: 105, column: 6, scope: !11138)
!11150 = !DILocation(line: 106, column: 4, scope: !11146)
!11151 = !DILocation(line: 115, column: 42, scope: !11138)
!11152 = !DILocation(line: 115, column: 46, scope: !11138)
!11153 = !DILocation(line: 115, column: 27, scope: !11138)
!11154 = !DILocation(line: 115, column: 9, scope: !11138)
!11155 = !DILocation(line: 115, column: 2, scope: !11138)
!11156 = distinct !DISubprogram(name: "_S_do_relocate", linkageName: "_ZNSt6vectorIP8cChannelSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE", scope: !2151, file: !1497, line: 453, type: !2365, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, declaration: !2364, retainedNodes: !324)
!11157 = !DILocalVariable(name: "__first", arg: 1, scope: !11156, file: !1497, line: 453, type: !2367)
!11158 = !DILocation(line: 453, column: 30, scope: !11156)
!11159 = !DILocalVariable(name: "__last", arg: 2, scope: !11156, file: !1497, line: 453, type: !2367)
!11160 = !DILocation(line: 453, column: 47, scope: !11156)
!11161 = !DILocalVariable(name: "__result", arg: 3, scope: !11156, file: !1497, line: 453, type: !2367)
!11162 = !DILocation(line: 453, column: 63, scope: !11156)
!11163 = !DILocalVariable(name: "__alloc", arg: 4, scope: !11156, file: !1497, line: 454, type: !2368)
!11164 = !DILocation(line: 454, column: 24, scope: !11156)
!11165 = !DILocalVariable(arg: 5, scope: !11156, file: !1497, line: 454, type: !797)
!11166 = !DILocation(line: 454, column: 42, scope: !11156)
!11167 = !DILocation(line: 456, column: 27, scope: !11156)
!11168 = !DILocation(line: 456, column: 36, scope: !11156)
!11169 = !DILocation(line: 456, column: 44, scope: !11156)
!11170 = !DILocation(line: 456, column: 54, scope: !11156)
!11171 = !DILocation(line: 456, column: 9, scope: !11156)
!11172 = !DILocation(line: 456, column: 2, scope: !11156)
!11173 = distinct !DISubprogram(name: "__relocate_a<cChannel **, cChannel **, std::allocator<cChannel *> >", linkageName: "_ZSt12__relocate_aIPP8cChannelS2_SaIS1_EET0_T_S5_S4_RT1_", scope: !2, file: !10105, line: 1022, type: !11174, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !11176, retainedNodes: !324)
!11174 = !DISubroutineType(types: !11175)
!11175 = !{!2172, !2172, !2172, !2172, !2233}
!11176 = !{!11177, !8741, !11178}
!11177 = !DITemplateTypeParameter(name: "_InputIterator", type: !2172)
!11178 = !DITemplateTypeParameter(name: "_Allocator", type: !2178)
!11179 = !DILocalVariable(name: "__first", arg: 1, scope: !11173, file: !10105, line: 1022, type: !2172)
!11180 = !DILocation(line: 1022, column: 33, scope: !11173)
!11181 = !DILocalVariable(name: "__last", arg: 2, scope: !11173, file: !10105, line: 1022, type: !2172)
!11182 = !DILocation(line: 1022, column: 57, scope: !11173)
!11183 = !DILocalVariable(name: "__result", arg: 3, scope: !11173, file: !10105, line: 1023, type: !2172)
!11184 = !DILocation(line: 1023, column: 21, scope: !11173)
!11185 = !DILocalVariable(name: "__alloc", arg: 4, scope: !11173, file: !10105, line: 1023, type: !2233)
!11186 = !DILocation(line: 1023, column: 43, scope: !11173)
!11187 = !DILocation(line: 1028, column: 47, scope: !11173)
!11188 = !DILocation(line: 1028, column: 29, scope: !11173)
!11189 = !DILocation(line: 1029, column: 26, scope: !11173)
!11190 = !DILocation(line: 1029, column: 8, scope: !11173)
!11191 = !DILocation(line: 1030, column: 26, scope: !11173)
!11192 = !DILocation(line: 1030, column: 8, scope: !11173)
!11193 = !DILocation(line: 1030, column: 37, scope: !11173)
!11194 = !DILocation(line: 1028, column: 14, scope: !11173)
!11195 = !DILocation(line: 1028, column: 7, scope: !11173)
!11196 = distinct !DISubprogram(name: "__relocate_a_1<cChannel *, cChannel *>", linkageName: "_ZSt14__relocate_a_1IP8cChannelS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E", scope: !2, file: !10105, line: 988, type: !11197, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !11204, retainedNodes: !324)
!11197 = !DISubroutineType(types: !11198)
!11198 = !{!11199, !2172, !2172, !2172, !2233}
!11199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__enable_if_t<std::__is_bitwise_relocatable<cChannel *>::value, cChannel **>", scope: !2, file: !643, line: 2192, baseType: !11200)
!11200 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !11201, file: !643, line: 2188, baseType: !2172)
!11201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "enable_if<true, cChannel **>", scope: !2, file: !643, line: 2187, size: 8, flags: DIFlagTypePassByValue, elements: !324, templateParams: !11202, identifier: "_ZTSSt9enable_ifILb1EPP8cChannelE")
!11202 = !{!528, !11203}
!11203 = !DITemplateTypeParameter(name: "_Tp", type: !2172)
!11204 = !{!2220, !10864}
!11205 = !DILocalVariable(name: "__first", arg: 1, scope: !11196, file: !10105, line: 988, type: !2172)
!11206 = !DILocation(line: 988, column: 25, scope: !11196)
!11207 = !DILocalVariable(name: "__last", arg: 2, scope: !11196, file: !10105, line: 988, type: !2172)
!11208 = !DILocation(line: 988, column: 39, scope: !11196)
!11209 = !DILocalVariable(name: "__result", arg: 3, scope: !11196, file: !10105, line: 989, type: !2172)
!11210 = !DILocation(line: 989, column: 11, scope: !11196)
!11211 = !DILocalVariable(arg: 4, scope: !11196, file: !10105, line: 989, type: !2233)
!11212 = !DILocation(line: 989, column: 36, scope: !11196)
!11213 = !DILocalVariable(name: "__count", scope: !11196, file: !10105, line: 991, type: !1830)
!11214 = !DILocation(line: 991, column: 17, scope: !11196)
!11215 = !DILocation(line: 991, column: 27, scope: !11196)
!11216 = !DILocation(line: 991, column: 36, scope: !11196)
!11217 = !DILocation(line: 991, column: 34, scope: !11196)
!11218 = !DILocation(line: 992, column: 11, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11196, file: !10105, line: 992, column: 11)
!11220 = !DILocation(line: 992, column: 19, scope: !11219)
!11221 = !DILocation(line: 992, column: 11, scope: !11196)
!11222 = !DILocation(line: 993, column: 20, scope: !11219)
!11223 = !DILocation(line: 993, column: 2, scope: !11219)
!11224 = !DILocation(line: 993, column: 30, scope: !11219)
!11225 = !DILocation(line: 993, column: 39, scope: !11219)
!11226 = !DILocation(line: 993, column: 47, scope: !11219)
!11227 = !DILocation(line: 994, column: 14, scope: !11196)
!11228 = !DILocation(line: 994, column: 25, scope: !11196)
!11229 = !DILocation(line: 994, column: 23, scope: !11196)
!11230 = !DILocation(line: 994, column: 7, scope: !11196)
!11231 = distinct !DISubprogram(name: "__niter_base<cChannel **>", linkageName: "_ZSt12__niter_baseIPP8cChannelET_S3_", scope: !2, file: !9979, line: 313, type: !11232, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !30, templateParams: !2599, retainedNodes: !324)
!11232 = !DISubroutineType(types: !11233)
!11233 = !{!2172, !2172}
!11234 = !DILocalVariable(name: "__it", arg: 1, scope: !11231, file: !9979, line: 313, type: !2172)
!11235 = !DILocation(line: 313, column: 28, scope: !11231)
!11236 = !DILocation(line: 315, column: 14, scope: !11231)
!11237 = !DILocation(line: 315, column: 7, scope: !11231)
!11238 = distinct !DISubprogram(linkageName: "_GLOBAL__sub_I_cmodule.cc", scope: !31, file: !31, type: !11239, flags: DIFlagArtificial, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !30, retainedNodes: !324)
!11239 = !DISubroutineType(types: !324)
!11240 = !DILocation(line: 0, scope: !11238)
