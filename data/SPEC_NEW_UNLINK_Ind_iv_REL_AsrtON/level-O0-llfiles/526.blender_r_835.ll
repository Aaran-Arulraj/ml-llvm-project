; ModuleID = 'blender/source/blender/editors/space_text/text_ops.c'
source_filename = "blender/source/blender/editors/space_text/text_ops.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.bContext = type opaque
%struct.SpaceText = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.Text*, i32, i32, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, float, %struct.rcti, %struct.rcti, i32, i32, [256 x i8], [256 x i8], i16, i16, [4 x i8], i8*, [2 x float] }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.Text = type { %struct.ID, i8*, i32, i32, %struct.ListBase, %struct.TextLine*, %struct.TextLine*, i32, i32, i8*, i32, i32, i8*, double }
%struct.TextLine = type { %struct.TextLine*, %struct.TextLine*, i8*, i8*, i32, i32 }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.StructRNA = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.PropertyPointerRNA = type { %struct.PointerRNA, %struct.PropertyRNA* }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.FlattenString = type { [256 x i8], [256 x i32], i8*, i32*, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.TextScroll = type { [2 x i32], [2 x i32], i32, i32, i32 }
%struct.wmEventHandler = type opaque
%struct.SetSelection = type { i32, i32, i32, [2 x i16] }
%struct.uiPopupMenu = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str = private unnamed_addr constant [18 x i8] c"Create Text Block\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"TEXT_OT_new\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"Create a new text data block\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"Open Text Block\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"TEXT_OT_open\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Open a new text data block\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"Make internal\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Make text file internal after loading\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"Reload\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"TEXT_OT_reload\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"Reload active text data block from its file\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"Unlink\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"TEXT_OT_unlink\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"Unlink active text data block\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"Make Internal\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"TEXT_OT_make_internal\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"Make active text file internal\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"Save\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"TEXT_OT_save\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Save active text data block\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"Save As\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"TEXT_OT_save_as\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"Save active text file with options\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"Run Script\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"TEXT_OT_run_script\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"Run active script\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Refresh PyConstraints\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"TEXT_OT_refresh_pyconstraints\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"Refresh all pyconstraints\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"Paste\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"TEXT_OT_paste\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"Paste text from clipboard\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"selection\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"Selection\00", align 1
@.str.35 = private unnamed_addr constant [60 x i8] c"Paste text selected elsewhere rather than copied (X11 only)\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"Duplicate Line\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"TEXT_OT_duplicate_line\00", align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"Duplicate the current line\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"Copy\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"TEXT_OT_copy\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"Copy selected text to clipboard\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"Cut\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"TEXT_OT_cut\00", align 1
@.str.44 = private unnamed_addr constant [31 x i8] c"Cut selected text to clipboard\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"Indent\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"TEXT_OT_indent\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"Indent selected text\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"Unindent\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"TEXT_OT_unindent\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"Unindent selected text\00", align 1
@.str.51 = private unnamed_addr constant [11 x i8] c"Line Break\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"TEXT_OT_line_break\00", align 1
@.str.53 = private unnamed_addr constant [37 x i8] c"Insert line break at cursor position\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"Comment\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"TEXT_OT_comment\00", align 1
@.str.56 = private unnamed_addr constant [33 x i8] c"Convert selected text to comment\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"Uncomment\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"TEXT_OT_uncomment\00", align 1
@.str.59 = private unnamed_addr constant [33 x i8] c"Convert selected comment to text\00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"Convert Whitespace\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"TEXT_OT_convert_whitespace\00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"Convert whitespaces by type\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@whitespace_type_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i32 0, i32 0), i8* null }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.175, i32 0, i32 0), i8* null }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.64 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"Type of whitespace to convert to\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"Select All\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"TEXT_OT_select_all\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"Select all text\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"Select Line\00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"TEXT_OT_select_line\00", align 1
@.str.71 = private unnamed_addr constant [20 x i8] c"Select text by line\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"Select Word\00", align 1
@.str.73 = private unnamed_addr constant [20 x i8] c"TEXT_OT_select_word\00", align 1
@.str.74 = private unnamed_addr constant [25 x i8] c"Select word under cursor\00", align 1
@TEXT_OT_move_lines.direction_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !1202
@.str.75 = private unnamed_addr constant [3 x i8] c"UP\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c"Up\00", align 1
@.str.77 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"Down\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"Move Lines\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c"TEXT_OT_move_lines\00", align 1
@.str.82 = private unnamed_addr constant [44 x i8] c"Move the currently selected line(s) up/down\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"Move Cursor\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"TEXT_OT_move\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"Move cursor to position type\00", align 1
@move_type_items = internal global [13 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.182, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.184, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.186, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.190, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.194, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.196, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.198, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2770
@.str.88 = private unnamed_addr constant [24 x i8] c"Where to move cursor to\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"Move Select\00", align 1
@.str.90 = private unnamed_addr constant [20 x i8] c"TEXT_OT_move_select\00", align 1
@.str.91 = private unnamed_addr constant [32 x i8] c"Move the cursor while selecting\00", align 1
@.str.92 = private unnamed_addr constant [45 x i8] c"Where to move cursor to, to make a selection\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"Jump\00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"TEXT_OT_jump\00", align 1
@.str.95 = private unnamed_addr constant [20 x i8] c"Jump cursor to line\00", align 1
@.str.96 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"Line\00", align 1
@.str.98 = private unnamed_addr constant [23 x i8] c"Line number to jump to\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"Text\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"TEXT_OT_delete\00", align 1
@.str.102 = private unnamed_addr constant [31 x i8] c"Delete text by cursor position\00", align 1
@delete_type_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.186, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.184, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.190, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2775
@.str.103 = private unnamed_addr constant [33 x i8] c"Which part of the text to delete\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"Toggle Overwrite\00", align 1
@.str.105 = private unnamed_addr constant [25 x i8] c"TEXT_OT_overwrite_toggle\00", align 1
@.str.106 = private unnamed_addr constant [30 x i8] c"Toggle overwrite while typing\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"Scroll\00", align 1
@.str.108 = private unnamed_addr constant [15 x i8] c"TEXT_OT_scroll\00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"Lines\00", align 1
@.str.111 = private unnamed_addr constant [26 x i8] c"Number of lines to scroll\00", align 1
@.str.112 = private unnamed_addr constant [10 x i8] c"Scrollbar\00", align 1
@.str.113 = private unnamed_addr constant [19 x i8] c"TEXT_OT_scroll_bar\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c"Set Selection\00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"TEXT_OT_selection_set\00", align 1
@.str.116 = private unnamed_addr constant [21 x i8] c"Set cursor selection\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"Select\00", align 1
@.str.119 = private unnamed_addr constant [37 x i8] c"Set selection end rather than cursor\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"Set Cursor\00", align 1
@.str.121 = private unnamed_addr constant [19 x i8] c"TEXT_OT_cursor_set\00", align 1
@.str.122 = private unnamed_addr constant [20 x i8] c"Set cursor position\00", align 1
@.str.123 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.124 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.126 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.127 = private unnamed_addr constant [12 x i8] c"Line Number\00", align 1
@.str.128 = private unnamed_addr constant [20 x i8] c"TEXT_OT_line_number\00", align 1
@.str.129 = private unnamed_addr constant [24 x i8] c"The current line number\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"Insert\00", align 1
@.str.131 = private unnamed_addr constant [15 x i8] c"TEXT_OT_insert\00", align 1
@.str.132 = private unnamed_addr constant [31 x i8] c"Insert text at cursor position\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"Text to insert at the cursor position\00", align 1
@.str.135 = private unnamed_addr constant [10 x i8] c"Find Next\00", align 1
@.str.136 = private unnamed_addr constant [13 x i8] c"TEXT_OT_find\00", align 1
@.str.137 = private unnamed_addr constant [20 x i8] c"Find specified text\00", align 1
@.str.138 = private unnamed_addr constant [8 x i8] c"Replace\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"TEXT_OT_replace\00", align 1
@.str.140 = private unnamed_addr constant [37 x i8] c"Replace text with the specified text\00", align 1
@.str.141 = private unnamed_addr constant [18 x i8] c"Find Set Selected\00", align 1
@.str.142 = private unnamed_addr constant [26 x i8] c"TEXT_OT_find_set_selected\00", align 1
@.str.143 = private unnamed_addr constant [40 x i8] c"Find specified text and set as selected\00", align 1
@.str.144 = private unnamed_addr constant [21 x i8] c"Replace Set Selected\00", align 1
@.str.145 = private unnamed_addr constant [29 x i8] c"TEXT_OT_replace_set_selected\00", align 1
@.str.146 = private unnamed_addr constant [53 x i8] c"Replace text with specified text and set as selected\00", align 1
@.str.147 = private unnamed_addr constant [17 x i8] c"Resolve Conflict\00", align 1
@.str.148 = private unnamed_addr constant [25 x i8] c"TEXT_OT_resolve_conflict\00", align 1
@.str.149 = private unnamed_addr constant [56 x i8] c"When external text is out of sync, resolve the conflict\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c"resolution\00", align 1
@resolution_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.213, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.215, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.216, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2792
@.str.151 = private unnamed_addr constant [11 x i8] c"Resolution\00", align 1
@.str.152 = private unnamed_addr constant [71 x i8] c"How to solve conflict due to differences in internal and external text\00", align 1
@.str.153 = private unnamed_addr constant [13 x i8] c"To 3D Object\00", align 1
@.str.154 = private unnamed_addr constant [21 x i8] c"TEXT_OT_to_3d_object\00", align 1
@.str.155 = private unnamed_addr constant [50 x i8] c"Create 3D text object from active text data block\00", align 1
@.str.156 = private unnamed_addr constant [12 x i8] c"split_lines\00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c"Split Lines\00", align 1
@.str.158 = private unnamed_addr constant [39 x i8] c"Create one object per line in the text\00", align 1
@.str.159 = private unnamed_addr constant [9 x i8] c"filepath\00", align 1
@G = external dso_local global %struct.Global, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.160 = private unnamed_addr constant [23 x i8] c"OpenPropertyPointerRNA\00", align 1
@.str.161 = private unnamed_addr constant [22 x i8] c"Could not reopen file\00", align 1
@.str.162 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.163 = private unnamed_addr constant [24 x i8] c"Unable to save '%s': %s\00", align 1
@.str.164 = private unnamed_addr constant [27 x i8] c"unknown error writing file\00", align 1
@.str.165 = private unnamed_addr constant [16 x i8] c"Saved Text '%s'\00", align 1
@.str.166 = private unnamed_addr constant [24 x i8] c"Unable to stat '%s': %s\00", align 1
@.str.167 = private unnamed_addr constant [27 x i8] c"unknown error stating file\00", align 1
@.str.168 = private unnamed_addr constant [30 x i8] c"Python disabled in this build\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c"cut buffera\00", align 1
@.str.170 = private unnamed_addr constant [12 x i8] c"cut bufferb\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"Converted_Line\00", align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"SPACES\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c"To Spaces\00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"TABS\00", align 1
@.str.175 = private unnamed_addr constant [8 x i8] c"To Tabs\00", align 1
@.str.176 = private unnamed_addr constant [11 x i8] c"LINE_BEGIN\00", align 1
@.str.177 = private unnamed_addr constant [11 x i8] c"Line Begin\00", align 1
@.str.178 = private unnamed_addr constant [9 x i8] c"LINE_END\00", align 1
@.str.179 = private unnamed_addr constant [9 x i8] c"Line End\00", align 1
@.str.180 = private unnamed_addr constant [9 x i8] c"FILE_TOP\00", align 1
@.str.181 = private unnamed_addr constant [9 x i8] c"File Top\00", align 1
@.str.182 = private unnamed_addr constant [12 x i8] c"FILE_BOTTOM\00", align 1
@.str.183 = private unnamed_addr constant [12 x i8] c"File Bottom\00", align 1
@.str.184 = private unnamed_addr constant [19 x i8] c"PREVIOUS_CHARACTER\00", align 1
@.str.185 = private unnamed_addr constant [19 x i8] c"Previous Character\00", align 1
@.str.186 = private unnamed_addr constant [15 x i8] c"NEXT_CHARACTER\00", align 1
@.str.187 = private unnamed_addr constant [15 x i8] c"Next Character\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"PREVIOUS_WORD\00", align 1
@.str.189 = private unnamed_addr constant [14 x i8] c"Previous Word\00", align 1
@.str.190 = private unnamed_addr constant [10 x i8] c"NEXT_WORD\00", align 1
@.str.191 = private unnamed_addr constant [10 x i8] c"Next Word\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"PREVIOUS_LINE\00", align 1
@.str.193 = private unnamed_addr constant [14 x i8] c"Previous Line\00", align 1
@.str.194 = private unnamed_addr constant [10 x i8] c"NEXT_LINE\00", align 1
@.str.195 = private unnamed_addr constant [10 x i8] c"Next Line\00", align 1
@.str.196 = private unnamed_addr constant [14 x i8] c"PREVIOUS_PAGE\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"Previous Page\00", align 1
@.str.198 = private unnamed_addr constant [10 x i8] c"NEXT_PAGE\00", align 1
@.str.199 = private unnamed_addr constant [10 x i8] c"Next Page\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.200 = private unnamed_addr constant [11 x i8] c"TextScroll\00", align 1
@.str.201 = private unnamed_addr constant [10 x i8] c"SetCursor\00", align 1
@text_line_number_invoke.jump_to = internal global i32 0, align 4, !dbg !2778
@text_line_number_invoke.last_jump = internal global double 0.000000e+00, align 8, !dbg !2790
@.str.202 = private unnamed_addr constant [19 x i8] c"Text not found: %s\00", align 1
@.str.203 = private unnamed_addr constant [41 x i8] c"File Modified Outside and Inside Blender\00", align 1
@.str.204 = private unnamed_addr constant [40 x i8] c"Reload from disk (ignore local changes)\00", align 1
@.str.205 = private unnamed_addr constant [38 x i8] c"Save to disk (ignore outside changes)\00", align 1
@.str.206 = private unnamed_addr constant [35 x i8] c"Make text internal (separate copy)\00", align 1
@.str.207 = private unnamed_addr constant [30 x i8] c"File Modified Outside Blender\00", align 1
@.str.208 = private unnamed_addr constant [17 x i8] c"Reload from disk\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"Ignore\00", align 1
@.str.210 = private unnamed_addr constant [29 x i8] c"File Deleted Outside Blender\00", align 1
@.str.211 = private unnamed_addr constant [19 x i8] c"Make text internal\00", align 1
@.str.212 = private unnamed_addr constant [14 x i8] c"Recreate file\00", align 1
@.str.213 = private unnamed_addr constant [7 x i8] c"IGNORE\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"RELOAD\00", align 1
@.str.215 = private unnamed_addr constant [5 x i8] c"SAVE\00", align 1
@.str.216 = private unnamed_addr constant [14 x i8] c"MAKE_INTERNAL\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @text_space_edit_poll(%struct.bContext* %C) #0 !dbg !2798 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2801, metadata !DIExpression()), !dbg !2802
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !2803, metadata !DIExpression()), !dbg !2854
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2855
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !2856
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !2854
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !2857, metadata !DIExpression()), !dbg !2860
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2861
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !2862
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !2860
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !2863
  %tobool = icmp ne %struct.SpaceText* %2, null, !dbg !2863
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2865

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2866
  %tobool2 = icmp ne %struct.Text* %3, null, !dbg !2866
  br i1 %tobool2, label %if.end, label %if.then, !dbg !2867

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !2868
  br label %return, !dbg !2868

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !2869
  %id = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 0, !dbg !2871
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !2872
  %5 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !2872
  %tobool3 = icmp ne %struct.Library* %5, null, !dbg !2869
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !2873

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2874
  br label %return, !dbg !2874

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !2876
  br label %return, !dbg !2876

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !2877
  ret i32 %6, !dbg !2877
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.SpaceText* @CTX_wm_space_text(%struct.bContext*) #2

declare dso_local %struct.Text* @CTX_data_edit_text(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_update_line_edited(%struct.TextLine* %line) #0 !dbg !2878 {
entry:
  %line.addr = alloca %struct.TextLine*, align 8
  store %struct.TextLine* %line, %struct.TextLine** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line.addr, metadata !2881, metadata !DIExpression()), !dbg !2882
  %0 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !2883
  %tobool = icmp ne %struct.TextLine* %0, null, !dbg !2883
  br i1 %tobool, label %if.end, label %if.then, !dbg !2885

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !2886

if.end:                                           ; preds = %entry
  %1 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !2887
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %1, i32 0, i32 3, !dbg !2889
  %2 = load i8*, i8** %format, align 8, !dbg !2889
  %tobool1 = icmp ne i8* %2, null, !dbg !2887
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !2890

if.then2:                                         ; preds = %if.end
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2891
  %4 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !2893
  %format3 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %4, i32 0, i32 3, !dbg !2894
  %5 = load i8*, i8** %format3, align 8, !dbg !2894
  call void %3(i8* %5), !dbg !2891
  %6 = load %struct.TextLine*, %struct.TextLine** %line.addr, align 8, !dbg !2895
  %format4 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %6, i32 0, i32 3, !dbg !2896
  store i8* null, i8** %format4, align 8, !dbg !2897
  br label %if.end5, !dbg !2898

if.end5:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !2899
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @text_update_edited(%struct.Text* %text) #0 !dbg !2900 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %line = alloca %struct.TextLine*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !2903, metadata !DIExpression()), !dbg !2904
  call void @llvm.dbg.declare(metadata %struct.TextLine** %line, metadata !2905, metadata !DIExpression()), !dbg !2906
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !2907
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 4, !dbg !2909
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !2910
  %1 = load i8*, i8** %first, align 8, !dbg !2910
  %2 = bitcast i8* %1 to %struct.TextLine*, !dbg !2907
  store %struct.TextLine* %2, %struct.TextLine** %line, align 8, !dbg !2911
  br label %for.cond, !dbg !2912

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !2913
  %tobool = icmp ne %struct.TextLine* %3, null, !dbg !2915
  br i1 %tobool, label %for.body, label %for.end, !dbg !2915

for.body:                                         ; preds = %for.cond
  %4 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !2916
  call void @text_update_line_edited(%struct.TextLine* %4), !dbg !2917
  br label %for.inc, !dbg !2917

for.inc:                                          ; preds = %for.body
  %5 = load %struct.TextLine*, %struct.TextLine** %line, align 8, !dbg !2918
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %5, i32 0, i32 0, !dbg !2919
  %6 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !2919
  store %struct.TextLine* %6, %struct.TextLine** %line, align 8, !dbg !2920
  br label %for.cond, !dbg !2921, !llvm.loop !2922

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2924
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_new(%struct.wmOperatorType* %ot) #0 !dbg !2925 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !2926, metadata !DIExpression()), !dbg !2927
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2928
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !2929
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %name, align 8, !dbg !2930
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2931
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !2932
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8** %idname, align 8, !dbg !2933
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2934
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !2935
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8** %description, align 8, !dbg !2936
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2937
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !2938
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_new_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !2939
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2940
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !2941
  store i32 (%struct.bContext*)* @text_new_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !2942
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2943
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !2944
  store i16 2, i16* %flag, align 8, !dbg !2945
  ret void, !dbg !2946
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_new_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !2947 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %bmain = alloca %struct.Main*, align 8
  %text = alloca %struct.Text*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %idptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2950, metadata !DIExpression()), !dbg !2951
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !2952, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !2954, metadata !DIExpression()), !dbg !2955
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2956
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !2957
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !2955
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !2958, metadata !DIExpression()), !dbg !3020
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3021
  %call1 = call %struct.Main* @CTX_data_main(%struct.bContext* %1), !dbg !3022
  store %struct.Main* %call1, %struct.Main** %bmain, align 8, !dbg !3020
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3023, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3025, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %idptr, metadata !3028, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3030, metadata !DIExpression()), !dbg !3031
  %2 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3032
  %call2 = call %struct.Text* @BKE_text_add(%struct.Main* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i64 0, i64 0)), !dbg !3033
  store %struct.Text* %call2, %struct.Text** %text, align 8, !dbg !3034
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3035
  call void @uiIDContextProperty(%struct.bContext* %3, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop), !dbg !3036
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3037
  %tobool = icmp ne %struct.PropertyRNA* %4, null, !dbg !3037
  br i1 %tobool, label %if.then, label %if.else, !dbg !3039

if.then:                                          ; preds = %entry
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3040
  %id = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 0, !dbg !3042
  call void @RNA_id_pointer_create(%struct.ID* %id, %struct.PointerRNA* %idptr), !dbg !3043
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3044
  call void @RNA_property_pointer_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %6, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %idptr), !dbg !3045
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3046
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3047
  call void @RNA_property_update(%struct.bContext* %7, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %8), !dbg !3048
  br label %if.end8, !dbg !3049

if.else:                                          ; preds = %entry
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3050
  %tobool3 = icmp ne %struct.SpaceText* %9, null, !dbg !3050
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !3052

if.then4:                                         ; preds = %if.else
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3053
  %11 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3055
  %text5 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %11, i32 0, i32 6, !dbg !3056
  store %struct.Text* %10, %struct.Text** %text5, align 8, !dbg !3057
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3058
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 14, !dbg !3059
  store i32 0, i32* %left, align 8, !dbg !3060
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3061
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 7, !dbg !3062
  store i32 0, i32* %top, align 8, !dbg !3063
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3064
  %scroll_accum = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %14, i32 0, i32 32, !dbg !3065
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum, i64 0, i64 0, !dbg !3064
  store float 0.000000e+00, float* %arrayidx, align 8, !dbg !3066
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3067
  %scroll_accum6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 32, !dbg !3068
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum6, i64 0, i64 1, !dbg !3067
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !3069
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3070
  call void @text_drawcache_tag_update(%struct.SpaceText* %16, i32 1), !dbg !3071
  br label %if.end, !dbg !3072

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3073
  %18 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3074
  %19 = bitcast %struct.Text* %18 to i8*, !dbg !3074
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 201326595, i8* %19), !dbg !3075
  ret i32 4, !dbg !3076
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_new_poll(%struct.bContext* %UNUSED_C) #0 !dbg !3077 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3078, metadata !DIExpression()), !dbg !3079
  ret i32 1, !dbg !3080
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_open(%struct.wmOperatorType* %ot) #0 !dbg !3081 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3082, metadata !DIExpression()), !dbg !3083
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3084
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3085
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8** %name, align 8, !dbg !3086
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3087
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3088
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8** %idname, align 8, !dbg !3089
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3090
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3091
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8** %description, align 8, !dbg !3092
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3093
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3094
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_open_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3095
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3096
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !3097
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_open_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3098
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3099
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !3100
  store void (%struct.bContext*, %struct.wmOperator*)* @text_open_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !3101
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3102
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !3103
  store i32 (%struct.bContext*)* @text_new_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3104
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3105
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !3106
  store i16 2, i16* %flag, align 8, !dbg !3107
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3108
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %8, i32 2624, i16 signext 9, i16 signext 0, i16 signext 8, i16 signext 0), !dbg !3109
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3110
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !3111
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3111
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !3110
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)), !dbg !3112
  ret void, !dbg !3113
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_open_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3114 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %bmain = alloca %struct.Main*, align 8
  %text = alloca %struct.Text*, align 8
  %pprop = alloca %struct.PropertyPointerRNA*, align 8
  %idptr = alloca %struct.PointerRNA, align 8
  %str = alloca [1024 x i8], align 16
  %internal = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3115, metadata !DIExpression()), !dbg !3116
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3117, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !3119, metadata !DIExpression()), !dbg !3120
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3121
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !3122
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !3120
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3123, metadata !DIExpression()), !dbg !3124
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3125
  %call1 = call %struct.Main* @CTX_data_main(%struct.bContext* %1), !dbg !3126
  store %struct.Main* %call1, %struct.Main** %bmain, align 8, !dbg !3124
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3127, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.declare(metadata %struct.PropertyPointerRNA** %pprop, metadata !3129, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %idptr, metadata !3138, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !3140, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.declare(metadata i8* %internal, metadata !3142, metadata !DIExpression()), !dbg !3144
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3145
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !3146
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3146
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)), !dbg !3147
  %conv = trunc i32 %call2 to i8, !dbg !3147
  store i8 %conv, i8* %internal, align 1, !dbg !3144
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3148
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !3149
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !3149
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !3150
  call void @RNA_string_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0), i8* %arraydecay), !dbg !3151
  %6 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3152
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !3153
  %7 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3154
  %name = getelementptr inbounds %struct.Main, %struct.Main* %7, i32 0, i32 2, !dbg !3155
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !3156
  %8 = load i8, i8* %internal, align 1, !dbg !3157
  %call6 = call %struct.Text* @BKE_text_load_ex(%struct.Main* %6, i8* %arraydecay4, i8* %arraydecay5, i8 zeroext %8), !dbg !3158
  store %struct.Text* %call6, %struct.Text** %text, align 8, !dbg !3159
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3160
  %tobool = icmp ne %struct.Text* %9, null, !dbg !3160
  br i1 %tobool, label %if.end10, label %if.then, !dbg !3162

if.then:                                          ; preds = %entry
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3163
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 5, !dbg !3166
  %11 = load i8*, i8** %customdata, align 8, !dbg !3166
  %tobool7 = icmp ne i8* %11, null, !dbg !3163
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3167

if.then8:                                         ; preds = %if.then
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3168
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3169
  %customdata9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 5, !dbg !3170
  %14 = load i8*, i8** %customdata9, align 8, !dbg !3170
  call void %12(i8* %14), !dbg !3168
  br label %if.end, !dbg !3168

if.end:                                           ; preds = %if.then8, %if.then
  store i32 2, i32* %retval, align 4, !dbg !3171
  br label %return, !dbg !3171

if.end10:                                         ; preds = %entry
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3172
  %customdata11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 5, !dbg !3174
  %16 = load i8*, i8** %customdata11, align 8, !dbg !3174
  %tobool12 = icmp ne i8* %16, null, !dbg !3172
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !3175

if.then13:                                        ; preds = %if.end10
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3176
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3177
  call void @text_open_init(%struct.bContext* %17, %struct.wmOperator* %18), !dbg !3178
  br label %if.end14, !dbg !3178

if.end14:                                         ; preds = %if.then13, %if.end10
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3179
  %customdata15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 5, !dbg !3180
  %20 = load i8*, i8** %customdata15, align 8, !dbg !3180
  %21 = bitcast i8* %20 to %struct.PropertyPointerRNA*, !dbg !3179
  store %struct.PropertyPointerRNA* %21, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !3181
  %22 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !3182
  %prop = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %22, i32 0, i32 1, !dbg !3184
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3184
  %tobool16 = icmp ne %struct.PropertyRNA* %23, null, !dbg !3182
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !3185

if.then17:                                        ; preds = %if.end14
  %24 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3186
  %id = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 0, !dbg !3188
  call void @RNA_id_pointer_create(%struct.ID* %id, %struct.PointerRNA* %idptr), !dbg !3189
  %25 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !3190
  %ptr18 = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %25, i32 0, i32 0, !dbg !3191
  %26 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !3192
  %prop19 = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %26, i32 0, i32 1, !dbg !3193
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop19, align 8, !dbg !3193
  call void @RNA_property_pointer_set(%struct.PointerRNA* %ptr18, %struct.PropertyRNA* %27, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %idptr), !dbg !3194
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3195
  %29 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !3196
  %ptr20 = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %29, i32 0, i32 0, !dbg !3197
  %30 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !3198
  %prop21 = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %30, i32 0, i32 1, !dbg !3199
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop21, align 8, !dbg !3199
  call void @RNA_property_update(%struct.bContext* %28, %struct.PointerRNA* %ptr20, %struct.PropertyRNA* %31), !dbg !3200
  br label %if.end28, !dbg !3201

if.else:                                          ; preds = %if.end14
  %32 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3202
  %tobool22 = icmp ne %struct.SpaceText* %32, null, !dbg !3202
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !3204

if.then23:                                        ; preds = %if.else
  %33 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3205
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3207
  %text24 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 6, !dbg !3208
  store %struct.Text* %33, %struct.Text** %text24, align 8, !dbg !3209
  %35 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3210
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %35, i32 0, i32 14, !dbg !3211
  store i32 0, i32* %left, align 8, !dbg !3212
  %36 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3213
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %36, i32 0, i32 7, !dbg !3214
  store i32 0, i32* %top, align 8, !dbg !3215
  %37 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3216
  %scroll_accum = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %37, i32 0, i32 32, !dbg !3217
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum, i64 0, i64 0, !dbg !3216
  store float 0.000000e+00, float* %arrayidx, align 8, !dbg !3218
  %38 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3219
  %scroll_accum25 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %38, i32 0, i32 32, !dbg !3220
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum25, i64 0, i64 1, !dbg !3219
  store float 0.000000e+00, float* %arrayidx26, align 4, !dbg !3221
  br label %if.end27, !dbg !3222

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %39 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3223
  call void @text_drawcache_tag_update(%struct.SpaceText* %39, i32 1), !dbg !3224
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3225
  %41 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3226
  %42 = bitcast %struct.Text* %41 to i8*, !dbg !3226
  call void @WM_event_add_notifier(%struct.bContext* %40, i32 201326595, i8* %42), !dbg !3227
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3228
  %44 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3229
  %customdata29 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %44, i32 0, i32 5, !dbg !3230
  %45 = load i8*, i8** %customdata29, align 8, !dbg !3230
  call void %43(i8* %45), !dbg !3228
  store i32 4, i32* %retval, align 4, !dbg !3231
  br label %return, !dbg !3231

return:                                           ; preds = %if.end28, %if.end
  %46 = load i32, i32* %retval, align 4, !dbg !3232
  ret i32 %46, !dbg !3232
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_open_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !3233 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %text = alloca %struct.Text*, align 8
  %path = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3234, metadata !DIExpression()), !dbg !3235
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3236, metadata !DIExpression()), !dbg !3237
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !3238, metadata !DIExpression()), !dbg !3239
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3240, metadata !DIExpression()), !dbg !3241
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3242
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3243
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3241
  call void @llvm.dbg.declare(metadata i8** %path, metadata !3244, metadata !DIExpression()), !dbg !3245
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3246
  %tobool = icmp ne %struct.Text* %1, null, !dbg !3246
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !3247

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3248
  %name = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 1, !dbg !3249
  %3 = load i8*, i8** %name, align 8, !dbg !3249
  %tobool1 = icmp ne i8* %3, null, !dbg !3248
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !3250

cond.true:                                        ; preds = %land.lhs.true
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3251
  %name2 = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 1, !dbg !3252
  %5 = load i8*, i8** %name2, align 8, !dbg !3252
  br label %cond.end, !dbg !3250

cond.false:                                       ; preds = %land.lhs.true, %entry
  %6 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3253
  %name3 = getelementptr inbounds %struct.Main, %struct.Main* %6, i32 0, i32 2, !dbg !3254
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name3, i64 0, i64 0, !dbg !3255
  br label %cond.end, !dbg !3250

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ %arraydecay, %cond.false ], !dbg !3250
  store i8* %cond, i8** %path, align 8, !dbg !3245
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3256
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !3258
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3258
  %call4 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0)), !dbg !3259
  %tobool5 = icmp ne i8 %call4, 0, !dbg !3259
  br i1 %tobool5, label %if.then, label %if.end, !dbg !3260

if.then:                                          ; preds = %cond.end
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3261
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3262
  %call6 = call i32 @text_open_exec(%struct.bContext* %9, %struct.wmOperator* %10), !dbg !3263
  store i32 %call6, i32* %retval, align 4, !dbg !3264
  br label %return, !dbg !3264

if.end:                                           ; preds = %cond.end
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3265
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3266
  call void @text_open_init(%struct.bContext* %11, %struct.wmOperator* %12), !dbg !3267
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3268
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !3269
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !3269
  %15 = load i8*, i8** %path, align 8, !dbg !3270
  call void @RNA_string_set(%struct.PointerRNA* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0), i8* %15), !dbg !3271
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3272
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3273
  call void @WM_event_add_fileselect(%struct.bContext* %16, %struct.wmOperator* %17), !dbg !3274
  store i32 1, i32* %retval, align 4, !dbg !3275
  br label %return, !dbg !3275

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !3276
  ret i32 %18, !dbg !3276
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_open_cancel(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !3277 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3280, metadata !DIExpression()), !dbg !3281
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3284
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3285
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !3286
  %2 = load i8*, i8** %customdata, align 8, !dbg !3286
  call void %0(i8* %2), !dbg !3284
  ret void, !dbg !3287
}

declare dso_local void @WM_operator_properties_filesel(%struct.wmOperatorType*, i32, i16 signext, i16 signext, i16 signext, i16 signext) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_reload(%struct.wmOperatorType* %ot) #0 !dbg !3288 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3289, metadata !DIExpression()), !dbg !3290
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3291
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3292
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8** %name, align 8, !dbg !3293
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3294
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3295
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8** %idname, align 8, !dbg !3296
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3297
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3298
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8** %description, align 8, !dbg !3299
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3300
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3301
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_reload_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3302
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3303
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !3304
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3305
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3306
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3307
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3308
  ret void, !dbg !3309
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_reload_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3310 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %orig_top = alloca i32, align 4
  %orig_curl = alloca i32, align 4
  %orig_curc = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3311, metadata !DIExpression()), !dbg !3312
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3313, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !3315, metadata !DIExpression()), !dbg !3316
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3317
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !3318
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !3316
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3319, metadata !DIExpression()), !dbg !3320
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3321
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !3322
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !3320
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3323, metadata !DIExpression()), !dbg !3395
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3396
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !3397
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !3395
  call void @llvm.dbg.declare(metadata i32* %orig_top, metadata !3398, metadata !DIExpression()), !dbg !3400
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3401
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 7, !dbg !3402
  %4 = load i32, i32* %top, align 8, !dbg !3402
  store i32 %4, i32* %orig_top, align 4, !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %orig_curl, metadata !3403, metadata !DIExpression()), !dbg !3404
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3405
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 4, !dbg !3406
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3407
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !3408
  %7 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !3408
  %8 = bitcast %struct.TextLine* %7 to i8*, !dbg !3407
  %call3 = call i32 @BLI_findindex(%struct.ListBase* %lines, i8* %8), !dbg !3409
  store i32 %call3, i32* %orig_curl, align 4, !dbg !3404
  call void @llvm.dbg.declare(metadata i32* %orig_curc, metadata !3410, metadata !DIExpression()), !dbg !3411
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3412
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 7, !dbg !3413
  %10 = load i32, i32* %curc, align 8, !dbg !3413
  store i32 %10, i32* %orig_curc, align 4, !dbg !3411
  %11 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3414
  %call4 = call i32 @BKE_text_reload(%struct.Text* %11), !dbg !3416
  %tobool = icmp ne i32 %call4, 0, !dbg !3416
  br i1 %tobool, label %if.end, label %if.then, !dbg !3417

if.then:                                          ; preds = %entry
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3418
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 8, !dbg !3420
  %13 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !3420
  call void @BKE_report(%struct.ReportList* %13, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.161, i64 0, i64 0)), !dbg !3421
  store i32 2, i32* %retval, align 4, !dbg !3422
  br label %return, !dbg !3422

if.end:                                           ; preds = %entry
  %14 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3423
  call void @text_update_edited(%struct.Text* %14), !dbg !3424
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3425
  call void @text_update_cursor_moved(%struct.bContext* %15), !dbg !3426
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3427
  %call5 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %16), !dbg !3428
  call void @text_drawcache_tag_update(%struct.SpaceText* %call5, i32 1), !dbg !3429
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3430
  %18 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3431
  %19 = bitcast %struct.Text* %18 to i8*, !dbg !3431
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 201326593, i8* %19), !dbg !3432
  %20 = load i32, i32* %orig_top, align 4, !dbg !3433
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3434
  %top6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %21, i32 0, i32 7, !dbg !3435
  store i32 %20, i32* %top6, align 8, !dbg !3436
  %22 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3437
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3438
  call void @txt_screen_clamp(%struct.SpaceText* %22, %struct.ARegion* %23), !dbg !3439
  %24 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3440
  %25 = load i32, i32* %orig_curl, align 4, !dbg !3441
  %26 = load i32, i32* %orig_curc, align 4, !dbg !3442
  call void @txt_move_to(%struct.Text* %24, i32 %25, i32 %26, i8 zeroext 0), !dbg !3443
  store i32 4, i32* %retval, align 4, !dbg !3444
  br label %return, !dbg !3444

return:                                           ; preds = %if.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !3445
  ret i32 %27, !dbg !3445
}

declare dso_local i32 @WM_operator_confirm(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_edit_poll(%struct.bContext* %C) #0 !dbg !3446 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3447, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3449, metadata !DIExpression()), !dbg !3450
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3451
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3452
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3450
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3453
  %tobool = icmp ne %struct.Text* %1, null, !dbg !3453
  br i1 %tobool, label %if.end, label %if.then, !dbg !3455

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3456
  br label %return, !dbg !3456

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3457
  %id = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 0, !dbg !3459
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !3460
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3460
  %tobool1 = icmp ne %struct.Library* %3, null, !dbg !3457
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !3461

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3462
  br label %return, !dbg !3462

if.end3:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !3464
  br label %return, !dbg !3464

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !3465
  ret i32 %4, !dbg !3465
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_unlink(%struct.wmOperatorType* %ot) #0 !dbg !3466 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3467, metadata !DIExpression()), !dbg !3468
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3469
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3470
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i8** %name, align 8, !dbg !3471
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3472
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3473
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8** %idname, align 8, !dbg !3474
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3475
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3476
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i8** %description, align 8, !dbg !3477
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3478
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3479
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_unlink_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3480
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3481
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !3482
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3483
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3484
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3485
  store i32 (%struct.bContext*)* @text_unlink_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3486
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3487
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !3488
  store i16 2, i16* %flag, align 8, !dbg !3489
  ret void, !dbg !3490
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_unlink_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !3491 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3492, metadata !DIExpression()), !dbg !3493
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3496, metadata !DIExpression()), !dbg !3497
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3498
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !3499
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !3497
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !3500, metadata !DIExpression()), !dbg !3501
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3502
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %1), !dbg !3503
  store %struct.SpaceText* %call1, %struct.SpaceText** %st, align 8, !dbg !3501
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3504, metadata !DIExpression()), !dbg !3505
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3506
  %call2 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %2), !dbg !3507
  store %struct.Text* %call2, %struct.Text** %text, align 8, !dbg !3505
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3508
  %tobool = icmp ne %struct.SpaceText* %3, null, !dbg !3508
  br i1 %tobool, label %if.then, label %if.end17, !dbg !3510

if.then:                                          ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3511
  %id = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 0, !dbg !3514
  %prev = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 1, !dbg !3515
  %5 = load i8*, i8** %prev, align 8, !dbg !3515
  %tobool3 = icmp ne i8* %5, null, !dbg !3511
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3516

if.then4:                                         ; preds = %if.then
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3517
  %id5 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 0, !dbg !3519
  %prev6 = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 1, !dbg !3520
  %7 = load i8*, i8** %prev6, align 8, !dbg !3520
  %8 = bitcast i8* %7 to %struct.Text*, !dbg !3517
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3521
  %text7 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 6, !dbg !3522
  store %struct.Text* %8, %struct.Text** %text7, align 8, !dbg !3523
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3524
  call void @text_update_cursor_moved(%struct.bContext* %10), !dbg !3525
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3526
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3527
  %text8 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 6, !dbg !3528
  %13 = load %struct.Text*, %struct.Text** %text8, align 8, !dbg !3528
  %14 = bitcast %struct.Text* %13 to i8*, !dbg !3527
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 204603392, i8* %14), !dbg !3529
  br label %if.end16, !dbg !3530

if.else:                                          ; preds = %if.then
  %15 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3531
  %id9 = getelementptr inbounds %struct.Text, %struct.Text* %15, i32 0, i32 0, !dbg !3533
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id9, i32 0, i32 0, !dbg !3534
  %16 = load i8*, i8** %next, align 8, !dbg !3534
  %tobool10 = icmp ne i8* %16, null, !dbg !3531
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3535

if.then11:                                        ; preds = %if.else
  %17 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3536
  %id12 = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 0, !dbg !3538
  %next13 = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 0, !dbg !3539
  %18 = load i8*, i8** %next13, align 8, !dbg !3539
  %19 = bitcast i8* %18 to %struct.Text*, !dbg !3536
  %20 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3540
  %text14 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %20, i32 0, i32 6, !dbg !3541
  store %struct.Text* %19, %struct.Text** %text14, align 8, !dbg !3542
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3543
  call void @text_update_cursor_moved(%struct.bContext* %21), !dbg !3544
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3545
  %23 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3546
  %text15 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %23, i32 0, i32 6, !dbg !3547
  %24 = load %struct.Text*, %struct.Text** %text15, align 8, !dbg !3547
  %25 = bitcast %struct.Text* %24 to i8*, !dbg !3546
  call void @WM_event_add_notifier(%struct.bContext* %22, i32 204603392, i8* %25), !dbg !3548
  br label %if.end, !dbg !3549

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then4
  br label %if.end17, !dbg !3550

if.end17:                                         ; preds = %if.end16, %entry
  %26 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3551
  %27 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3552
  call void @BKE_text_unlink(%struct.Main* %26, %struct.Text* %27), !dbg !3553
  %28 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3554
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3555
  %30 = bitcast %struct.Text* %29 to i8*, !dbg !3555
  call void @BKE_libblock_free(%struct.Main* %28, i8* %30), !dbg !3556
  %31 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !3557
  call void @text_drawcache_tag_update(%struct.SpaceText* %31, i32 1), !dbg !3558
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3559
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 201326596, i8* null), !dbg !3560
  ret i32 4, !dbg !3561
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_unlink_poll(%struct.bContext* %C) #0 !dbg !3562 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3563, metadata !DIExpression()), !dbg !3564
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3565
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3566
  %cmp = icmp ne %struct.Text* %call, null, !dbg !3567
  %conv = zext i1 %cmp to i32, !dbg !3567
  ret i32 %conv, !dbg !3568
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_make_internal(%struct.wmOperatorType* %ot) #0 !dbg !3569 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3570, metadata !DIExpression()), !dbg !3571
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3572
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3573
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i8** %name, align 8, !dbg !3574
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3575
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3576
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !3577
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3578
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3579
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0), i8** %description, align 8, !dbg !3580
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3581
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3582
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_make_internal_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3583
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3584
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3585
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3586
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3587
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3588
  store i16 2, i16* %flag, align 8, !dbg !3589
  ret void, !dbg !3590
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_make_internal_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !3591 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3592, metadata !DIExpression()), !dbg !3593
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !3594, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3596, metadata !DIExpression()), !dbg !3597
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3598
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3599
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3597
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3600
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %1, i32 0, i32 2, !dbg !3601
  %2 = load i32, i32* %flags, align 8, !dbg !3602
  %or = or i32 %2, 5, !dbg !3602
  store i32 %or, i32* %flags, align 8, !dbg !3602
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3603
  %name = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 1, !dbg !3605
  %4 = load i8*, i8** %name, align 8, !dbg !3605
  %tobool = icmp ne i8* %4, null, !dbg !3603
  br i1 %tobool, label %if.then, label %if.end, !dbg !3606

if.then:                                          ; preds = %entry
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3607
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3609
  %name1 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 1, !dbg !3610
  %7 = load i8*, i8** %name1, align 8, !dbg !3610
  call void %5(i8* %7), !dbg !3607
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3611
  %name2 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 1, !dbg !3612
  store i8* null, i8** %name2, align 8, !dbg !3613
  br label %if.end, !dbg !3614

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3615
  call void @text_update_cursor_moved(%struct.bContext* %9), !dbg !3616
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3617
  %11 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3618
  %12 = bitcast %struct.Text* %11 to i8*, !dbg !3618
  call void @WM_event_add_notifier(%struct.bContext* %10, i32 201326593, i8* %12), !dbg !3619
  ret i32 4, !dbg !3620
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_save(%struct.wmOperatorType* %ot) #0 !dbg !3621 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3622, metadata !DIExpression()), !dbg !3623
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3624
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3625
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i8** %name, align 8, !dbg !3626
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3627
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3628
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8** %idname, align 8, !dbg !3629
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3630
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3631
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0), i8** %description, align 8, !dbg !3632
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3633
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3634
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_save_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3635
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3636
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3637
  store i32 (%struct.bContext*)* @text_save_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3638
  ret void, !dbg !3639
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_save_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3640 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3641, metadata !DIExpression()), !dbg !3642
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3643, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3645, metadata !DIExpression()), !dbg !3646
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3647
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3648
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3646
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3649
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3650
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 8, !dbg !3651
  %3 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !3651
  call void @txt_write_file(%struct.Text* %1, %struct.ReportList* %3), !dbg !3652
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3653
  call void @text_update_cursor_moved(%struct.bContext* %4), !dbg !3654
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3655
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3656
  %7 = bitcast %struct.Text* %6 to i8*, !dbg !3656
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 201326593, i8* %7), !dbg !3657
  ret i32 4, !dbg !3658
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_save_poll(%struct.bContext* %C) #0 !dbg !3659 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3662, metadata !DIExpression()), !dbg !3663
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3664
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3665
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3663
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3666
  %call1 = call i32 @text_edit_poll(%struct.bContext* %1), !dbg !3668
  %tobool = icmp ne i32 %call1, 0, !dbg !3668
  br i1 %tobool, label %if.end, label %if.then, !dbg !3669

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3670
  br label %return, !dbg !3670

if.end:                                           ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3671
  %name = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 1, !dbg !3672
  %3 = load i8*, i8** %name, align 8, !dbg !3672
  %cmp = icmp ne i8* %3, null, !dbg !3673
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3674

land.rhs:                                         ; preds = %if.end
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3675
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 2, !dbg !3676
  %5 = load i32, i32* %flags, align 8, !dbg !3676
  %and = and i32 %5, 4, !dbg !3677
  %tobool2 = icmp ne i32 %and, 0, !dbg !3678
  %lnot = xor i1 %tobool2, true, !dbg !3678
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %6 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !3679
  %land.ext = zext i1 %6 to i32, !dbg !3674
  store i32 %land.ext, i32* %retval, align 4, !dbg !3680
  br label %return, !dbg !3680

return:                                           ; preds = %land.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !3681
  ret i32 %7, !dbg !3681
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_save_as(%struct.wmOperatorType* %ot) #0 !dbg !3682 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3683, metadata !DIExpression()), !dbg !3684
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3685
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3686
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8** %name, align 8, !dbg !3687
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3688
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3689
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i8** %idname, align 8, !dbg !3690
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3691
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3692
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i64 0, i64 0), i8** %description, align 8, !dbg !3693
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3694
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3695
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_save_as_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3696
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3697
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !3698
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_save_as_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3699
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3700
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !3701
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3702
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3703
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %6, i32 2624, i16 signext 9, i16 signext 1, i16 signext 8, i16 signext 0), !dbg !3704
  ret void, !dbg !3705
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_save_as_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3706 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  %str = alloca [1024 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3707, metadata !DIExpression()), !dbg !3708
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3709, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3711, metadata !DIExpression()), !dbg !3712
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3713
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3714
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3712
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !3715, metadata !DIExpression()), !dbg !3716
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3717
  %tobool = icmp ne %struct.Text* %1, null, !dbg !3717
  br i1 %tobool, label %if.end, label %if.then, !dbg !3719

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !3720
  br label %return, !dbg !3720

if.end:                                           ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3721
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !3722
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3722
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !3723
  call void @RNA_string_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0), i8* %arraydecay), !dbg !3724
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3725
  %name = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 1, !dbg !3727
  %5 = load i8*, i8** %name, align 8, !dbg !3727
  %tobool1 = icmp ne i8* %5, null, !dbg !3725
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !3728

if.then2:                                         ; preds = %if.end
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3729
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3730
  %name3 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 1, !dbg !3731
  %8 = load i8*, i8** %name3, align 8, !dbg !3731
  call void %6(i8* %8), !dbg !3729
  br label %if.end4, !dbg !3729

if.end4:                                          ; preds = %if.then2, %if.end
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !3732
  %call6 = call i8* @BLI_strdup(i8* %arraydecay5), !dbg !3733
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3734
  %name7 = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 1, !dbg !3735
  store i8* %call6, i8** %name7, align 8, !dbg !3736
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3737
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 2, !dbg !3738
  %11 = load i32, i32* %flags, align 8, !dbg !3739
  %and = and i32 %11, -5, !dbg !3739
  store i32 %and, i32* %flags, align 8, !dbg !3739
  %12 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3740
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3741
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !3742
  %14 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !3742
  call void @txt_write_file(%struct.Text* %12, %struct.ReportList* %14), !dbg !3743
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3744
  call void @text_update_cursor_moved(%struct.bContext* %15), !dbg !3745
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3746
  %17 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3747
  %18 = bitcast %struct.Text* %17 to i8*, !dbg !3747
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 201326593, i8* %18), !dbg !3748
  store i32 4, i32* %retval, align 4, !dbg !3749
  br label %return, !dbg !3749

return:                                           ; preds = %if.end4, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !3750
  ret i32 %19, !dbg !3750
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_save_as_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !3751 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %text = alloca %struct.Text*, align 8
  %str = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3752, metadata !DIExpression()), !dbg !3753
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3754, metadata !DIExpression()), !dbg !3755
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !3756, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3758, metadata !DIExpression()), !dbg !3759
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3760
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3761
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3759
  call void @llvm.dbg.declare(metadata i8** %str, metadata !3762, metadata !DIExpression()), !dbg !3763
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3764
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !3766
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3766
  %call1 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0)), !dbg !3767
  %tobool = icmp ne i8 %call1, 0, !dbg !3767
  br i1 %tobool, label %if.then, label %if.end, !dbg !3768

if.then:                                          ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3769
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3770
  %call2 = call i32 @text_save_as_exec(%struct.bContext* %3, %struct.wmOperator* %4), !dbg !3771
  store i32 %call2, i32* %retval, align 4, !dbg !3772
  br label %return, !dbg !3772

if.end:                                           ; preds = %entry
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3773
  %name = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 1, !dbg !3775
  %6 = load i8*, i8** %name, align 8, !dbg !3775
  %tobool3 = icmp ne i8* %6, null, !dbg !3773
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3776

if.then4:                                         ; preds = %if.end
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3777
  %name5 = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 1, !dbg !3778
  %8 = load i8*, i8** %name5, align 8, !dbg !3778
  store i8* %8, i8** %str, align 8, !dbg !3779
  br label %if.end13, !dbg !3780

if.else:                                          ; preds = %if.end
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3781
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %9, i32 0, i32 2, !dbg !3783
  %10 = load i32, i32* %flags, align 8, !dbg !3783
  %and = and i32 %10, 4, !dbg !3784
  %tobool6 = icmp ne i32 %and, 0, !dbg !3784
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !3785

if.then7:                                         ; preds = %if.else
  %11 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3786
  %id = getelementptr inbounds %struct.Text, %struct.Text* %11, i32 0, i32 0, !dbg !3787
  %name8 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !3788
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name8, i64 0, i64 0, !dbg !3786
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !3789
  store i8* %add.ptr, i8** %str, align 8, !dbg !3790
  br label %if.end12, !dbg !3791

if.else9:                                         ; preds = %if.else
  %12 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3792
  %name10 = getelementptr inbounds %struct.Main, %struct.Main* %12, i32 0, i32 2, !dbg !3793
  %arraydecay11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name10, i64 0, i64 0, !dbg !3794
  store i8* %arraydecay11, i8** %str, align 8, !dbg !3795
  br label %if.end12

if.end12:                                         ; preds = %if.else9, %if.then7
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then4
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3796
  %ptr14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !3797
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr14, align 8, !dbg !3797
  %15 = load i8*, i8** %str, align 8, !dbg !3798
  call void @RNA_string_set(%struct.PointerRNA* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0), i8* %15), !dbg !3799
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3800
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3801
  call void @WM_event_add_fileselect(%struct.bContext* %16, %struct.wmOperator* %17), !dbg !3802
  store i32 1, i32* %retval, align 4, !dbg !3803
  br label %return, !dbg !3803

return:                                           ; preds = %if.end13, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !3804
  ret i32 %18, !dbg !3804
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_run_script(%struct.wmOperatorType* %ot) #0 !dbg !3805 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3808
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3809
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i8** %name, align 8, !dbg !3810
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3811
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3812
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0), i8** %idname, align 8, !dbg !3813
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3814
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3815
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8** %description, align 8, !dbg !3816
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3817
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !3818
  store i32 (%struct.bContext*)* @text_run_script_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3819
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3820
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !3821
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_run_script_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3822
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3823
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !3824
  store i16 3, i16* %flag, align 8, !dbg !3825
  ret void, !dbg !3826
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_run_script_poll(%struct.bContext* %C) #0 !dbg !3827 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3828, metadata !DIExpression()), !dbg !3829
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3830
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3831
  %cmp = icmp ne %struct.Text* %call, null, !dbg !3832
  %conv = zext i1 %cmp to i32, !dbg !3832
  ret i32 %conv, !dbg !3833
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_run_script_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3834 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3835, metadata !DIExpression()), !dbg !3836
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3837, metadata !DIExpression()), !dbg !3838
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3839
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3840
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 8, !dbg !3841
  %2 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !3841
  call void @BKE_report(%struct.ReportList* %2, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.168, i64 0, i64 0)), !dbg !3842
  ret i32 2, !dbg !3843
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_refresh_pyconstraints(%struct.wmOperatorType* %ot) #0 !dbg !3844 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3845, metadata !DIExpression()), !dbg !3846
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3847
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3848
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i64 0, i64 0), i8** %name, align 8, !dbg !3849
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3850
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3851
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i8** %idname, align 8, !dbg !3852
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3853
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3854
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i64 0, i64 0), i8** %description, align 8, !dbg !3855
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3856
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3857
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_refresh_pyconstraints_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3858
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3859
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3860
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3861
  ret void, !dbg !3862
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_refresh_pyconstraints_exec(%struct.bContext* %UNUSED_C, %struct.wmOperator* %UNUSED_op) #0 !dbg !3863 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !3864, metadata !DIExpression()), !dbg !3865
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !3866, metadata !DIExpression()), !dbg !3867
  ret i32 4, !dbg !3868
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_paste(%struct.wmOperatorType* %ot) #0 !dbg !3869 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3870, metadata !DIExpression()), !dbg !3871
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3872
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3873
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i8** %name, align 8, !dbg !3874
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3875
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3876
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), i8** %idname, align 8, !dbg !3877
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3878
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3879
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i64 0, i64 0), i8** %description, align 8, !dbg !3880
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3881
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3882
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_paste_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3883
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3884
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3885
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3886
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3887
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !3888
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3888
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !3887
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.35, i64 0, i64 0)), !dbg !3889
  ret void, !dbg !3890
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_paste_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3891 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %selection = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %buf = alloca i8*, align 8
  %buf_len = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3892, metadata !DIExpression()), !dbg !3893
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3894, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata i8* %selection, metadata !3896, metadata !DIExpression()), !dbg !3897
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3898
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !3899
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3899
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0)), !dbg !3900
  %conv = trunc i32 %call to i8, !dbg !3900
  store i8 %conv, i8* %selection, align 1, !dbg !3897
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3901, metadata !DIExpression()), !dbg !3902
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3903
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %2), !dbg !3904
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !3902
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.declare(metadata i32* %buf_len, metadata !3907, metadata !DIExpression()), !dbg !3908
  %3 = load i8, i8* %selection, align 1, !dbg !3909
  %call2 = call i8* @WM_clipboard_text_get(i8 zeroext %3, i32* %buf_len), !dbg !3910
  store i8* %call2, i8** %buf, align 8, !dbg !3911
  %4 = load i8*, i8** %buf, align 8, !dbg !3912
  %tobool = icmp ne i8* %4, null, !dbg !3912
  br i1 %tobool, label %if.end, label %if.then, !dbg !3914

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !3915
  br label %return, !dbg !3915

if.end:                                           ; preds = %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3916
  %call3 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %5), !dbg !3917
  call void @text_drawcache_tag_update(%struct.SpaceText* %call3, i32 0), !dbg !3918
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3919
  %7 = load i8*, i8** %buf, align 8, !dbg !3920
  call void @txt_insert_buf(%struct.Text* %6, i8* %7), !dbg !3921
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3922
  call void @text_update_edited(%struct.Text* %8), !dbg !3923
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3924
  %10 = load i8*, i8** %buf, align 8, !dbg !3925
  call void %9(i8* %10), !dbg !3924
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3926
  call void @text_update_cursor_moved(%struct.bContext* %11), !dbg !3927
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3928
  %13 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3929
  %14 = bitcast %struct.Text* %13 to i8*, !dbg !3929
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 201326593, i8* %14), !dbg !3930
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3931
  %call4 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %15), !dbg !3933
  %live_edit = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %call4, i32 0, i32 20, !dbg !3934
  %16 = load i16, i16* %live_edit, align 2, !dbg !3934
  %tobool5 = icmp ne i16 %16, 0, !dbg !3933
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !3935

if.then6:                                         ; preds = %if.end
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3936
  %call7 = call i32 @text_run_script(%struct.bContext* %17, %struct.ReportList* null), !dbg !3937
  br label %if.end8, !dbg !3937

if.end8:                                          ; preds = %if.then6, %if.end
  store i32 4, i32* %retval, align 4, !dbg !3938
  br label %return, !dbg !3938

return:                                           ; preds = %if.end8, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !3939
  ret i32 %18, !dbg !3939
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_duplicate_line(%struct.wmOperatorType* %ot) #0 !dbg !3940 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3941, metadata !DIExpression()), !dbg !3942
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3943
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3944
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8** %name, align 8, !dbg !3945
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3946
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3947
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0), i8** %idname, align 8, !dbg !3948
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3949
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3950
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0), i8** %description, align 8, !dbg !3951
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3952
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3953
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_duplicate_line_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3954
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3955
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3956
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !3957
  ret void, !dbg !3958
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_duplicate_line_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !3959 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3960, metadata !DIExpression()), !dbg !3961
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !3962, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !3964, metadata !DIExpression()), !dbg !3965
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3966
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !3967
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !3965
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3968
  call void @txt_duplicate_line(%struct.Text* %1), !dbg !3969
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3970
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !3971
  %4 = bitcast %struct.Text* %3 to i8*, !dbg !3971
  call void @WM_event_add_notifier(%struct.bContext* %2, i32 201326593, i8* %4), !dbg !3972
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3973
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %5), !dbg !3975
  %live_edit = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %call1, i32 0, i32 20, !dbg !3976
  %6 = load i16, i16* %live_edit, align 2, !dbg !3976
  %tobool = icmp ne i16 %6, 0, !dbg !3975
  br i1 %tobool, label %if.then, label %if.end, !dbg !3977

if.then:                                          ; preds = %entry
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3978
  %call2 = call i32 @text_run_script(%struct.bContext* %7, %struct.ReportList* null), !dbg !3980
  br label %if.end, !dbg !3981

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !3982
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_copy(%struct.wmOperatorType* %ot) #0 !dbg !3983 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3984, metadata !DIExpression()), !dbg !3985
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3986
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3987
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i8** %name, align 8, !dbg !3988
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3989
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3990
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i8** %idname, align 8, !dbg !3991
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3992
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3993
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0), i8** %description, align 8, !dbg !3994
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3995
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !3996
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_copy_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3997
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3998
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !3999
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4000
  ret void, !dbg !4001
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_copy_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4002 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4003, metadata !DIExpression()), !dbg !4004
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4005, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4007, metadata !DIExpression()), !dbg !4008
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4009
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4010
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4008
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4011
  call void @txt_copy_clipboard(%struct.Text* %1), !dbg !4012
  ret i32 4, !dbg !4013
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_cut(%struct.wmOperatorType* %ot) #0 !dbg !4014 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4015, metadata !DIExpression()), !dbg !4016
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4017
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4018
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i8** %name, align 8, !dbg !4019
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4020
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4021
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i8** %idname, align 8, !dbg !4022
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4023
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4024
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.44, i64 0, i64 0), i8** %description, align 8, !dbg !4025
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4026
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4027
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_cut_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4028
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4029
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4030
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4031
  ret void, !dbg !4032
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_cut_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4033 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4034, metadata !DIExpression()), !dbg !4035
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4038, metadata !DIExpression()), !dbg !4039
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4040
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4041
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4039
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4042
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %1), !dbg !4043
  call void @text_drawcache_tag_update(%struct.SpaceText* %call1, i32 0), !dbg !4044
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4045
  call void @txt_copy_clipboard(%struct.Text* %2), !dbg !4046
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4047
  call void @txt_delete_selected(%struct.Text* %3), !dbg !4048
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4049
  call void @text_update_cursor_moved(%struct.bContext* %4), !dbg !4050
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4051
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4052
  %7 = bitcast %struct.Text* %6 to i8*, !dbg !4052
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 201326593, i8* %7), !dbg !4053
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4054
  %call2 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %8), !dbg !4056
  %live_edit = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %call2, i32 0, i32 20, !dbg !4057
  %9 = load i16, i16* %live_edit, align 2, !dbg !4057
  %tobool = icmp ne i16 %9, 0, !dbg !4056
  br i1 %tobool, label %if.then, label %if.end, !dbg !4058

if.then:                                          ; preds = %entry
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4059
  %call3 = call i32 @text_run_script(%struct.bContext* %10, %struct.ReportList* null), !dbg !4060
  br label %if.end, !dbg !4060

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !4061
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_indent(%struct.wmOperatorType* %ot) #0 !dbg !4062 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4063, metadata !DIExpression()), !dbg !4064
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4065
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4066
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8** %name, align 8, !dbg !4067
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4068
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4069
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i8** %idname, align 8, !dbg !4070
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4071
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4072
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8** %description, align 8, !dbg !4073
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4074
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4075
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_indent_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4076
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4077
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4078
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4079
  ret void, !dbg !4080
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_indent_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4081 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4082, metadata !DIExpression()), !dbg !4083
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4084, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4086, metadata !DIExpression()), !dbg !4087
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4088
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4089
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4087
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4090
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %1), !dbg !4091
  call void @text_drawcache_tag_update(%struct.SpaceText* %call1, i32 0), !dbg !4092
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4093
  %call2 = call zeroext i8 @txt_has_sel(%struct.Text* %2), !dbg !4095
  %tobool = icmp ne i8 %call2, 0, !dbg !4095
  br i1 %tobool, label %if.then, label %if.else, !dbg !4096

if.then:                                          ; preds = %entry
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4097
  call void @txt_order_cursors(%struct.Text* %3, i8 zeroext 0), !dbg !4099
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4100
  call void @txt_indent(%struct.Text* %4), !dbg !4101
  br label %if.end, !dbg !4102

if.else:                                          ; preds = %entry
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4103
  %call3 = call zeroext i8 @txt_add_char(%struct.Text* %5, i32 9), !dbg !4104
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4105
  call void @text_update_edited(%struct.Text* %6), !dbg !4106
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4107
  call void @text_update_cursor_moved(%struct.bContext* %7), !dbg !4108
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4109
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4110
  %10 = bitcast %struct.Text* %9 to i8*, !dbg !4110
  call void @WM_event_add_notifier(%struct.bContext* %8, i32 201326593, i8* %10), !dbg !4111
  ret i32 4, !dbg !4112
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_unindent(%struct.wmOperatorType* %ot) #0 !dbg !4113 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4114, metadata !DIExpression()), !dbg !4115
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4116
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4117
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i8** %name, align 8, !dbg !4118
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4119
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4120
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0), i8** %idname, align 8, !dbg !4121
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4122
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4123
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i64 0, i64 0), i8** %description, align 8, !dbg !4124
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4125
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4126
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_unindent_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4127
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4128
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4129
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4130
  ret void, !dbg !4131
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_unindent_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4132 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4133, metadata !DIExpression()), !dbg !4134
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4137, metadata !DIExpression()), !dbg !4138
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4139
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4140
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4138
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4141
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %1), !dbg !4142
  call void @text_drawcache_tag_update(%struct.SpaceText* %call1, i32 0), !dbg !4143
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4144
  call void @txt_order_cursors(%struct.Text* %2, i8 zeroext 0), !dbg !4145
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4146
  call void @txt_unindent(%struct.Text* %3), !dbg !4147
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4148
  call void @text_update_edited(%struct.Text* %4), !dbg !4149
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4150
  call void @text_update_cursor_moved(%struct.bContext* %5), !dbg !4151
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4152
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4153
  %8 = bitcast %struct.Text* %7 to i8*, !dbg !4153
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 201326593, i8* %8), !dbg !4154
  ret i32 4, !dbg !4155
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_line_break(%struct.wmOperatorType* %ot) #0 !dbg !4156 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4157, metadata !DIExpression()), !dbg !4158
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4159
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4160
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51, i64 0, i64 0), i8** %name, align 8, !dbg !4161
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4162
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4163
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i8** %idname, align 8, !dbg !4164
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4165
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4166
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.53, i64 0, i64 0), i8** %description, align 8, !dbg !4167
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4168
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4169
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_line_break_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4170
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4171
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4172
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4173
  ret void, !dbg !4174
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_line_break_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4175 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %a = alloca i32, align 4
  %curts = alloca i32, align 4
  %space = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4176, metadata !DIExpression()), !dbg !4177
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4178, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !4180, metadata !DIExpression()), !dbg !4181
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4182
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !4183
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !4181
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4184, metadata !DIExpression()), !dbg !4185
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4186
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !4187
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !4185
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4188, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.declare(metadata i32* %curts, metadata !4190, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.declare(metadata i32* %space, metadata !4192, metadata !DIExpression()), !dbg !4193
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4194
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 2, !dbg !4195
  %3 = load i32, i32* %flags, align 8, !dbg !4195
  %and = and i32 %3, 1024, !dbg !4196
  %tobool = icmp ne i32 %and, 0, !dbg !4196
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4197

cond.true:                                        ; preds = %entry
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4198
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 16, !dbg !4199
  %5 = load i32, i32* %tabnumber, align 8, !dbg !4199
  br label %cond.end, !dbg !4197

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 1, %cond.false ], !dbg !4197
  store i32 %cond, i32* %space, align 4, !dbg !4193
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4200
  call void @text_drawcache_tag_update(%struct.SpaceText* %6, i32 0), !dbg !4201
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4202
  %8 = load i32, i32* %space, align 4, !dbg !4203
  %call2 = call i32 @txt_setcurr_tab_spaces(%struct.Text* %7, i32 %8), !dbg !4204
  store i32 %call2, i32* %curts, align 4, !dbg !4205
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4206
  call void @txt_split_curline(%struct.Text* %9), !dbg !4207
  store i32 0, i32* %a, align 4, !dbg !4208
  br label %for.cond, !dbg !4210

for.cond:                                         ; preds = %for.inc, %cond.end
  %10 = load i32, i32* %a, align 4, !dbg !4211
  %11 = load i32, i32* %curts, align 4, !dbg !4213
  %cmp = icmp slt i32 %10, %11, !dbg !4214
  br i1 %cmp, label %for.body, label %for.end, !dbg !4215

for.body:                                         ; preds = %for.cond
  %12 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4216
  %flags3 = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 2, !dbg !4219
  %13 = load i32, i32* %flags3, align 8, !dbg !4219
  %and4 = and i32 %13, 1024, !dbg !4220
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4220
  br i1 %tobool5, label %if.then, label %if.else, !dbg !4221

if.then:                                          ; preds = %for.body
  %14 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4222
  %call6 = call zeroext i8 @txt_add_char(%struct.Text* %14, i32 32), !dbg !4224
  br label %if.end, !dbg !4225

if.else:                                          ; preds = %for.body
  %15 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4226
  %call7 = call zeroext i8 @txt_add_char(%struct.Text* %15, i32 9), !dbg !4228
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !4229

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %a, align 4, !dbg !4230
  %inc = add nsw i32 %16, 1, !dbg !4230
  store i32 %inc, i32* %a, align 4, !dbg !4230
  br label %for.cond, !dbg !4231, !llvm.loop !4232

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4234
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %17, i32 0, i32 5, !dbg !4236
  %18 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !4236
  %tobool8 = icmp ne %struct.TextLine* %18, null, !dbg !4234
  br i1 %tobool8, label %if.then9, label %if.end17, !dbg !4237

if.then9:                                         ; preds = %for.end
  %19 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4238
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %19, i32 0, i32 5, !dbg !4241
  %20 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !4241
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 1, !dbg !4242
  %21 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !4242
  %tobool11 = icmp ne %struct.TextLine* %21, null, !dbg !4238
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !4243

if.then12:                                        ; preds = %if.then9
  %22 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4244
  %curl13 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 5, !dbg !4245
  %23 = load %struct.TextLine*, %struct.TextLine** %curl13, align 8, !dbg !4245
  %prev14 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %23, i32 0, i32 1, !dbg !4246
  %24 = load %struct.TextLine*, %struct.TextLine** %prev14, align 8, !dbg !4246
  call void @text_update_line_edited(%struct.TextLine* %24), !dbg !4247
  br label %if.end15, !dbg !4247

if.end15:                                         ; preds = %if.then12, %if.then9
  %25 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4248
  %curl16 = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 5, !dbg !4249
  %26 = load %struct.TextLine*, %struct.TextLine** %curl16, align 8, !dbg !4249
  call void @text_update_line_edited(%struct.TextLine* %26), !dbg !4250
  br label %if.end17, !dbg !4251

if.end17:                                         ; preds = %if.end15, %for.end
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4252
  call void @text_update_cursor_moved(%struct.bContext* %27), !dbg !4253
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4254
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4255
  %30 = bitcast %struct.Text* %29 to i8*, !dbg !4255
  call void @WM_event_add_notifier(%struct.bContext* %28, i32 201326593, i8* %30), !dbg !4256
  ret i32 2, !dbg !4257
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_comment(%struct.wmOperatorType* %ot) #0 !dbg !4258 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4259, metadata !DIExpression()), !dbg !4260
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4261
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4262
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0), i8** %name, align 8, !dbg !4263
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4264
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4265
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0), i8** %idname, align 8, !dbg !4266
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4267
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4268
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.56, i64 0, i64 0), i8** %description, align 8, !dbg !4269
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4270
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4271
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_comment_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4272
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4273
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4274
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4275
  ret void, !dbg !4276
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_comment_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4277 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4278, metadata !DIExpression()), !dbg !4279
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4282, metadata !DIExpression()), !dbg !4283
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4284
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4285
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4283
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4286
  %call1 = call zeroext i8 @txt_has_sel(%struct.Text* %1), !dbg !4288
  %tobool = icmp ne i8 %call1, 0, !dbg !4288
  br i1 %tobool, label %if.then, label %if.end, !dbg !4289

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4290
  %call2 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %2), !dbg !4292
  call void @text_drawcache_tag_update(%struct.SpaceText* %call2, i32 0), !dbg !4293
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4294
  call void @txt_order_cursors(%struct.Text* %3, i8 zeroext 0), !dbg !4295
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4296
  call void @txt_comment(%struct.Text* %4), !dbg !4297
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4298
  call void @text_update_edited(%struct.Text* %5), !dbg !4299
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4300
  call void @text_update_cursor_moved(%struct.bContext* %6), !dbg !4301
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4302
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4303
  %9 = bitcast %struct.Text* %8 to i8*, !dbg !4303
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 201326593, i8* %9), !dbg !4304
  store i32 4, i32* %retval, align 4, !dbg !4305
  br label %return, !dbg !4305

if.end:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4306
  br label %return, !dbg !4306

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4307
  ret i32 %10, !dbg !4307
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_uncomment(%struct.wmOperatorType* %ot) #0 !dbg !4308 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4309, metadata !DIExpression()), !dbg !4310
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4311
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4312
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0), i8** %name, align 8, !dbg !4313
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4314
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4315
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i64 0, i64 0), i8** %idname, align 8, !dbg !4316
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4317
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4318
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.59, i64 0, i64 0), i8** %description, align 8, !dbg !4319
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4320
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4321
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_uncomment_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4322
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4323
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4324
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4325
  ret void, !dbg !4326
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_uncomment_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4327 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4328, metadata !DIExpression()), !dbg !4329
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4332, metadata !DIExpression()), !dbg !4333
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4334
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4335
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4333
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4336
  %call1 = call zeroext i8 @txt_has_sel(%struct.Text* %1), !dbg !4338
  %tobool = icmp ne i8 %call1, 0, !dbg !4338
  br i1 %tobool, label %if.then, label %if.end, !dbg !4339

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4340
  %call2 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %2), !dbg !4342
  call void @text_drawcache_tag_update(%struct.SpaceText* %call2, i32 0), !dbg !4343
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4344
  call void @txt_order_cursors(%struct.Text* %3, i8 zeroext 0), !dbg !4345
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4346
  call void @txt_uncomment(%struct.Text* %4), !dbg !4347
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4348
  call void @text_update_edited(%struct.Text* %5), !dbg !4349
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4350
  call void @text_update_cursor_moved(%struct.bContext* %6), !dbg !4351
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4352
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4353
  %9 = bitcast %struct.Text* %8 to i8*, !dbg !4353
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 201326593, i8* %9), !dbg !4354
  store i32 4, i32* %retval, align 4, !dbg !4355
  br label %return, !dbg !4355

if.end:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4356
  br label %return, !dbg !4356

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4357
  ret i32 %10, !dbg !4357
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_convert_whitespace(%struct.wmOperatorType* %ot) #0 !dbg !4358 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4359, metadata !DIExpression()), !dbg !4360
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4361
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4362
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i64 0, i64 0), i8** %name, align 8, !dbg !4363
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4364
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4365
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i8** %idname, align 8, !dbg !4366
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4367
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4368
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0), i8** %description, align 8, !dbg !4369
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4370
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4371
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_convert_whitespace_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4372
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4373
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4374
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4375
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4376
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !4377
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4377
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !4376
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @whitespace_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0)), !dbg !4378
  ret void, !dbg !4379
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_convert_whitespace_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4380 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  %fs = alloca %struct.FlattenString, align 8
  %a = alloca i64, align 8
  %j = alloca i64, align 8
  %new_line = alloca i8*, align 8
  %extra = alloca i32, align 4
  %number = alloca i32, align 4
  %type = alloca i32, align 4
  %text_check_line = alloca i8*, align 8
  %text_check_line_len = alloca i32, align 4
  %text_check_line55 = alloca i8*, align 8
  %text_check_line_len57 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4383, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !4385, metadata !DIExpression()), !dbg !4386
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4387
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !4388
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !4386
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4389, metadata !DIExpression()), !dbg !4390
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4391
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !4392
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !4390
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !4393, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.declare(metadata %struct.FlattenString* %fs, metadata !4395, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.declare(metadata i64* %a, metadata !4409, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4411, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.declare(metadata i8** %new_line, metadata !4413, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.declare(metadata i32* %extra, metadata !4415, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.declare(metadata i32* %number, metadata !4417, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4419, metadata !DIExpression()), !dbg !4420
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4421
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !4422
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4422
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)), !dbg !4423
  store i32 %call2, i32* %type, align 4, !dbg !4420
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4424
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 4, !dbg !4426
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !4427
  %5 = load i8*, i8** %first, align 8, !dbg !4427
  %6 = bitcast i8* %5 to %struct.TextLine*, !dbg !4424
  store %struct.TextLine* %6, %struct.TextLine** %tmp, align 8, !dbg !4428
  br label %for.cond, !dbg !4429

for.cond:                                         ; preds = %for.inc45, %entry
  %7 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4430
  %tobool = icmp ne %struct.TextLine* %7, null, !dbg !4432
  br i1 %tobool, label %for.body, label %for.end46, !dbg !4432

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %text_check_line, metadata !4433, metadata !DIExpression()), !dbg !4435
  %8 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4436
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 2, !dbg !4437
  %9 = load i8*, i8** %line, align 8, !dbg !4437
  store i8* %9, i8** %text_check_line, align 8, !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %text_check_line_len, metadata !4438, metadata !DIExpression()), !dbg !4439
  %10 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4440
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %10, i32 0, i32 4, !dbg !4441
  %11 = load i32, i32* %len, align 8, !dbg !4441
  store i32 %11, i32* %text_check_line_len, align 4, !dbg !4439
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4442
  %13 = load i8*, i8** %text_check_line, align 8, !dbg !4443
  %call3 = call i32 @flatten_string(%struct.SpaceText* %12, %struct.FlattenString* %fs, i8* %13), !dbg !4444
  %add = add nsw i32 %call3, 1, !dbg !4445
  store i32 %add, i32* %number, align 4, !dbg !4446
  call void @flatten_string_free(%struct.FlattenString* %fs), !dbg !4447
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4448
  %15 = load i32, i32* %number, align 4, !dbg !4449
  %conv = sext i32 %15 to i64, !dbg !4449
  %call4 = call i8* %14(i64 %conv, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0)), !dbg !4448
  store i8* %call4, i8** %new_line, align 8, !dbg !4450
  store i64 0, i64* %j, align 8, !dbg !4451
  store i64 0, i64* %a, align 8, !dbg !4452
  br label %for.cond5, !dbg !4454

for.cond5:                                        ; preds = %for.inc27, %for.body
  %16 = load i64, i64* %a, align 8, !dbg !4455
  %17 = load i32, i32* %text_check_line_len, align 4, !dbg !4457
  %conv6 = sext i32 %17 to i64, !dbg !4457
  %cmp = icmp ult i64 %16, %conv6, !dbg !4458
  br i1 %cmp, label %for.body8, label %for.end29, !dbg !4459

for.body8:                                        ; preds = %for.cond5
  %18 = load i8*, i8** %text_check_line, align 8, !dbg !4460
  %19 = load i64, i64* %a, align 8, !dbg !4463
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !4460
  %20 = load i8, i8* %arrayidx, align 1, !dbg !4460
  %conv9 = zext i8 %20 to i32, !dbg !4460
  %cmp10 = icmp eq i32 %conv9, 9, !dbg !4464
  br i1 %cmp10, label %if.then, label %if.else, !dbg !4465

if.then:                                          ; preds = %for.body8
  %21 = load i8*, i8** %new_line, align 8, !dbg !4466
  %22 = load i64, i64* %j, align 8, !dbg !4468
  %arrayidx12 = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !4466
  store i8 0, i8* %arrayidx12, align 1, !dbg !4469
  %23 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4470
  %24 = load i8*, i8** %new_line, align 8, !dbg !4471
  %call13 = call i32 @flatten_string(%struct.SpaceText* %23, %struct.FlattenString* %fs, i8* %24), !dbg !4472
  store i32 %call13, i32* %number, align 4, !dbg !4473
  call void @flatten_string_free(%struct.FlattenString* %fs), !dbg !4474
  %25 = load i8*, i8** %new_line, align 8, !dbg !4475
  %26 = load i64, i64* %j, align 8, !dbg !4476
  %arrayidx14 = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !4475
  store i8 9, i8* %arrayidx14, align 1, !dbg !4477
  %27 = load i8*, i8** %new_line, align 8, !dbg !4478
  %28 = load i64, i64* %j, align 8, !dbg !4479
  %add15 = add i64 %28, 1, !dbg !4480
  %arrayidx16 = getelementptr inbounds i8, i8* %27, i64 %add15, !dbg !4478
  store i8 0, i8* %arrayidx16, align 1, !dbg !4481
  %29 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4482
  %30 = load i8*, i8** %new_line, align 8, !dbg !4483
  %call17 = call i32 @flatten_string(%struct.SpaceText* %29, %struct.FlattenString* %fs, i8* %30), !dbg !4484
  %31 = load i32, i32* %number, align 4, !dbg !4485
  %sub = sub nsw i32 %call17, %31, !dbg !4486
  store i32 %sub, i32* %number, align 4, !dbg !4487
  call void @flatten_string_free(%struct.FlattenString* %fs), !dbg !4488
  store i32 0, i32* %extra, align 4, !dbg !4489
  br label %for.cond18, !dbg !4491

for.cond18:                                       ; preds = %for.inc, %if.then
  %32 = load i32, i32* %extra, align 4, !dbg !4492
  %33 = load i32, i32* %number, align 4, !dbg !4494
  %cmp19 = icmp slt i32 %32, %33, !dbg !4495
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !4496

for.body21:                                       ; preds = %for.cond18
  %34 = load i8*, i8** %new_line, align 8, !dbg !4497
  %35 = load i64, i64* %j, align 8, !dbg !4499
  %arrayidx22 = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !4497
  store i8 32, i8* %arrayidx22, align 1, !dbg !4500
  %36 = load i64, i64* %j, align 8, !dbg !4501
  %inc = add i64 %36, 1, !dbg !4501
  store i64 %inc, i64* %j, align 8, !dbg !4501
  br label %for.inc, !dbg !4502

for.inc:                                          ; preds = %for.body21
  %37 = load i32, i32* %extra, align 4, !dbg !4503
  %inc23 = add nsw i32 %37, 1, !dbg !4503
  store i32 %inc23, i32* %extra, align 4, !dbg !4503
  br label %for.cond18, !dbg !4504, !llvm.loop !4505

for.end:                                          ; preds = %for.cond18
  br label %if.end, !dbg !4507

if.else:                                          ; preds = %for.body8
  %38 = load i8*, i8** %text_check_line, align 8, !dbg !4508
  %39 = load i64, i64* %a, align 8, !dbg !4510
  %arrayidx24 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !4508
  %40 = load i8, i8* %arrayidx24, align 1, !dbg !4508
  %41 = load i8*, i8** %new_line, align 8, !dbg !4511
  %42 = load i64, i64* %j, align 8, !dbg !4512
  %arrayidx25 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !4511
  store i8 %40, i8* %arrayidx25, align 1, !dbg !4513
  %43 = load i64, i64* %j, align 8, !dbg !4514
  %inc26 = add i64 %43, 1, !dbg !4514
  store i64 %inc26, i64* %j, align 8, !dbg !4514
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %for.inc27, !dbg !4515

for.inc27:                                        ; preds = %if.end
  %44 = load i64, i64* %a, align 8, !dbg !4516
  %inc28 = add i64 %44, 1, !dbg !4516
  store i64 %inc28, i64* %a, align 8, !dbg !4516
  br label %for.cond5, !dbg !4517, !llvm.loop !4518

for.end29:                                        ; preds = %for.cond5
  %45 = load i8*, i8** %new_line, align 8, !dbg !4520
  %46 = load i64, i64* %j, align 8, !dbg !4521
  %arrayidx30 = getelementptr inbounds i8, i8* %45, i64 %46, !dbg !4520
  store i8 0, i8* %arrayidx30, align 1, !dbg !4522
  %47 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4523
  %line31 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %47, i32 0, i32 2, !dbg !4525
  %48 = load i8*, i8** %line31, align 8, !dbg !4525
  %tobool32 = icmp ne i8* %48, null, !dbg !4523
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !4526

if.then33:                                        ; preds = %for.end29
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4527
  %50 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4528
  %line34 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %50, i32 0, i32 2, !dbg !4529
  %51 = load i8*, i8** %line34, align 8, !dbg !4529
  call void %49(i8* %51), !dbg !4527
  br label %if.end35, !dbg !4527

if.end35:                                         ; preds = %if.then33, %for.end29
  %52 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4530
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %52, i32 0, i32 3, !dbg !4532
  %53 = load i8*, i8** %format, align 8, !dbg !4532
  %tobool36 = icmp ne i8* %53, null, !dbg !4530
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !4533

if.then37:                                        ; preds = %if.end35
  %54 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4534
  %55 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4535
  %format38 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %55, i32 0, i32 3, !dbg !4536
  %56 = load i8*, i8** %format38, align 8, !dbg !4536
  call void %54(i8* %56), !dbg !4534
  br label %if.end39, !dbg !4534

if.end39:                                         ; preds = %if.then37, %if.end35
  %57 = load i8*, i8** %new_line, align 8, !dbg !4537
  %58 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4538
  %line40 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %58, i32 0, i32 2, !dbg !4539
  store i8* %57, i8** %line40, align 8, !dbg !4540
  %59 = load i8*, i8** %new_line, align 8, !dbg !4541
  %call41 = call i64 @strlen(i8* %59) #7, !dbg !4542
  %conv42 = trunc i64 %call41 to i32, !dbg !4542
  %60 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4543
  %len43 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %60, i32 0, i32 4, !dbg !4544
  store i32 %conv42, i32* %len43, align 8, !dbg !4545
  %61 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4546
  %format44 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %61, i32 0, i32 3, !dbg !4547
  store i8* null, i8** %format44, align 8, !dbg !4548
  br label %for.inc45, !dbg !4549

for.inc45:                                        ; preds = %if.end39
  %62 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4550
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %62, i32 0, i32 0, !dbg !4551
  %63 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !4551
  store %struct.TextLine* %63, %struct.TextLine** %tmp, align 8, !dbg !4552
  br label %for.cond, !dbg !4553, !llvm.loop !4554

for.end46:                                        ; preds = %for.cond
  %64 = load i32, i32* %type, align 4, !dbg !4556
  %cmp47 = icmp eq i32 %64, 1, !dbg !4558
  br i1 %cmp47, label %if.then49, label %if.end170, !dbg !4559

if.then49:                                        ; preds = %for.end46
  %65 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4560
  %lines50 = getelementptr inbounds %struct.Text, %struct.Text* %65, i32 0, i32 4, !dbg !4563
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines50, i32 0, i32 0, !dbg !4564
  %66 = load i8*, i8** %first51, align 8, !dbg !4564
  %67 = bitcast i8* %66 to %struct.TextLine*, !dbg !4560
  store %struct.TextLine* %67, %struct.TextLine** %tmp, align 8, !dbg !4565
  br label %for.cond52, !dbg !4566

for.cond52:                                       ; preds = %for.inc167, %if.then49
  %68 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4567
  %tobool53 = icmp ne %struct.TextLine* %68, null, !dbg !4569
  br i1 %tobool53, label %for.body54, label %for.end169, !dbg !4569

for.body54:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i8** %text_check_line55, metadata !4570, metadata !DIExpression()), !dbg !4572
  %69 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4573
  %line56 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %69, i32 0, i32 2, !dbg !4574
  %70 = load i8*, i8** %line56, align 8, !dbg !4574
  store i8* %70, i8** %text_check_line55, align 8, !dbg !4572
  call void @llvm.dbg.declare(metadata i32* %text_check_line_len57, metadata !4575, metadata !DIExpression()), !dbg !4576
  %71 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4577
  %len58 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %71, i32 0, i32 4, !dbg !4578
  %72 = load i32, i32* %len58, align 8, !dbg !4578
  store i32 %72, i32* %text_check_line_len57, align 4, !dbg !4576
  store i32 0, i32* %extra, align 4, !dbg !4579
  store i64 0, i64* %a, align 8, !dbg !4580
  br label %for.cond59, !dbg !4582

for.cond59:                                       ; preds = %for.inc93, %for.body54
  %73 = load i64, i64* %a, align 8, !dbg !4583
  %74 = load i32, i32* %text_check_line_len57, align 4, !dbg !4585
  %conv60 = sext i32 %74 to i64, !dbg !4585
  %cmp61 = icmp ult i64 %73, %conv60, !dbg !4586
  br i1 %cmp61, label %for.body63, label %for.end95, !dbg !4587

for.body63:                                       ; preds = %for.cond59
  store i32 0, i32* %number, align 4, !dbg !4588
  store i64 0, i64* %j, align 8, !dbg !4590
  br label %for.cond64, !dbg !4592

for.cond64:                                       ; preds = %for.inc82, %for.body63
  %75 = load i64, i64* %j, align 8, !dbg !4593
  %76 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4595
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %76, i32 0, i32 16, !dbg !4596
  %77 = load i32, i32* %tabnumber, align 8, !dbg !4596
  %conv65 = sext i32 %77 to i64, !dbg !4597
  %cmp66 = icmp ult i64 %75, %conv65, !dbg !4598
  br i1 %cmp66, label %for.body68, label %for.end84, !dbg !4599

for.body68:                                       ; preds = %for.cond64
  %78 = load i64, i64* %a, align 8, !dbg !4600
  %79 = load i64, i64* %j, align 8, !dbg !4603
  %add69 = add i64 %78, %79, !dbg !4604
  %80 = load i32, i32* %text_check_line_len57, align 4, !dbg !4605
  %conv70 = sext i32 %80 to i64, !dbg !4605
  %cmp71 = icmp ule i64 %add69, %conv70, !dbg !4606
  br i1 %cmp71, label %if.then73, label %if.end81, !dbg !4607

if.then73:                                        ; preds = %for.body68
  %81 = load i8*, i8** %text_check_line55, align 8, !dbg !4608
  %82 = load i64, i64* %a, align 8, !dbg !4611
  %83 = load i64, i64* %j, align 8, !dbg !4612
  %add74 = add i64 %82, %83, !dbg !4613
  %arrayidx75 = getelementptr inbounds i8, i8* %81, i64 %add74, !dbg !4608
  %84 = load i8, i8* %arrayidx75, align 1, !dbg !4608
  %conv76 = zext i8 %84 to i32, !dbg !4608
  %cmp77 = icmp ne i32 %conv76, 32, !dbg !4614
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !4615

if.then79:                                        ; preds = %if.then73
  store i32 1, i32* %number, align 4, !dbg !4616
  br label %if.end80, !dbg !4618

if.end80:                                         ; preds = %if.then79, %if.then73
  br label %if.end81, !dbg !4619

if.end81:                                         ; preds = %if.end80, %for.body68
  br label %for.inc82, !dbg !4620

for.inc82:                                        ; preds = %if.end81
  %85 = load i64, i64* %j, align 8, !dbg !4621
  %inc83 = add i64 %85, 1, !dbg !4621
  store i64 %inc83, i64* %j, align 8, !dbg !4621
  br label %for.cond64, !dbg !4622, !llvm.loop !4623

for.end84:                                        ; preds = %for.cond64
  %86 = load i32, i32* %number, align 4, !dbg !4625
  %tobool85 = icmp ne i32 %86, 0, !dbg !4625
  br i1 %tobool85, label %if.end92, label %if.then86, !dbg !4627

if.then86:                                        ; preds = %for.end84
  %87 = load i64, i64* %a, align 8, !dbg !4628
  %88 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4630
  %tabnumber87 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %88, i32 0, i32 16, !dbg !4631
  %89 = load i32, i32* %tabnumber87, align 8, !dbg !4631
  %sub88 = sub nsw i32 %89, 1, !dbg !4632
  %conv89 = sext i32 %sub88 to i64, !dbg !4633
  %add90 = add i64 %87, %conv89, !dbg !4634
  store i64 %add90, i64* %a, align 8, !dbg !4635
  %90 = load i32, i32* %extra, align 4, !dbg !4636
  %add91 = add nsw i32 %90, 1, !dbg !4637
  store i32 %add91, i32* %extra, align 4, !dbg !4638
  br label %if.end92, !dbg !4639

if.end92:                                         ; preds = %if.then86, %for.end84
  br label %for.inc93, !dbg !4640

for.inc93:                                        ; preds = %if.end92
  %91 = load i64, i64* %a, align 8, !dbg !4641
  %inc94 = add i64 %91, 1, !dbg !4641
  store i64 %inc94, i64* %a, align 8, !dbg !4641
  br label %for.cond59, !dbg !4642, !llvm.loop !4643

for.end95:                                        ; preds = %for.cond59
  %92 = load i32, i32* %extra, align 4, !dbg !4645
  %cmp96 = icmp sgt i32 %92, 0, !dbg !4647
  br i1 %cmp96, label %if.then98, label %if.end166, !dbg !4648

if.then98:                                        ; preds = %for.end95
  %93 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4649
  %94 = load i32, i32* %text_check_line_len57, align 4, !dbg !4651
  %95 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4652
  %tabnumber99 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %95, i32 0, i32 16, !dbg !4653
  %96 = load i32, i32* %tabnumber99, align 8, !dbg !4653
  %97 = load i32, i32* %extra, align 4, !dbg !4654
  %mul = mul nsw i32 %96, %97, !dbg !4655
  %98 = load i32, i32* %extra, align 4, !dbg !4656
  %sub100 = sub nsw i32 %mul, %98, !dbg !4657
  %sub101 = sub nsw i32 %sub100, 1, !dbg !4658
  %sub102 = sub nsw i32 %94, %sub101, !dbg !4659
  %conv103 = sext i32 %sub102 to i64, !dbg !4651
  %call104 = call i8* %93(i64 %conv103, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0)), !dbg !4649
  store i8* %call104, i8** %new_line, align 8, !dbg !4660
  store i32 0, i32* %extra, align 4, !dbg !4661
  store i64 0, i64* %a, align 8, !dbg !4662
  br label %for.cond105, !dbg !4664

for.cond105:                                      ; preds = %for.inc146, %if.then98
  %99 = load i64, i64* %a, align 8, !dbg !4665
  %100 = load i32, i32* %text_check_line_len57, align 4, !dbg !4667
  %conv106 = sext i32 %100 to i64, !dbg !4667
  %cmp107 = icmp ult i64 %99, %conv106, !dbg !4668
  br i1 %cmp107, label %for.body109, label %for.end148, !dbg !4669

for.body109:                                      ; preds = %for.cond105
  store i32 0, i32* %number, align 4, !dbg !4670
  store i64 0, i64* %j, align 8, !dbg !4672
  br label %for.cond110, !dbg !4674

for.cond110:                                      ; preds = %for.inc129, %for.body109
  %101 = load i64, i64* %j, align 8, !dbg !4675
  %102 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4677
  %tabnumber111 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %102, i32 0, i32 16, !dbg !4678
  %103 = load i32, i32* %tabnumber111, align 8, !dbg !4678
  %conv112 = sext i32 %103 to i64, !dbg !4679
  %cmp113 = icmp ult i64 %101, %conv112, !dbg !4680
  br i1 %cmp113, label %for.body115, label %for.end131, !dbg !4681

for.body115:                                      ; preds = %for.cond110
  %104 = load i64, i64* %a, align 8, !dbg !4682
  %105 = load i64, i64* %j, align 8, !dbg !4685
  %add116 = add i64 %104, %105, !dbg !4686
  %106 = load i32, i32* %text_check_line_len57, align 4, !dbg !4687
  %conv117 = sext i32 %106 to i64, !dbg !4687
  %cmp118 = icmp ule i64 %add116, %conv117, !dbg !4688
  br i1 %cmp118, label %if.then120, label %if.end128, !dbg !4689

if.then120:                                       ; preds = %for.body115
  %107 = load i8*, i8** %text_check_line55, align 8, !dbg !4690
  %108 = load i64, i64* %a, align 8, !dbg !4693
  %109 = load i64, i64* %j, align 8, !dbg !4694
  %add121 = add i64 %108, %109, !dbg !4695
  %arrayidx122 = getelementptr inbounds i8, i8* %107, i64 %add121, !dbg !4690
  %110 = load i8, i8* %arrayidx122, align 1, !dbg !4690
  %conv123 = zext i8 %110 to i32, !dbg !4690
  %cmp124 = icmp ne i32 %conv123, 32, !dbg !4696
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !4697

if.then126:                                       ; preds = %if.then120
  store i32 1, i32* %number, align 4, !dbg !4698
  br label %if.end127, !dbg !4700

if.end127:                                        ; preds = %if.then126, %if.then120
  br label %if.end128, !dbg !4701

if.end128:                                        ; preds = %if.end127, %for.body115
  br label %for.inc129, !dbg !4702

for.inc129:                                       ; preds = %if.end128
  %111 = load i64, i64* %j, align 8, !dbg !4703
  %inc130 = add i64 %111, 1, !dbg !4703
  store i64 %inc130, i64* %j, align 8, !dbg !4703
  br label %for.cond110, !dbg !4704, !llvm.loop !4705

for.end131:                                       ; preds = %for.cond110
  %112 = load i32, i32* %number, align 4, !dbg !4707
  %tobool132 = icmp ne i32 %112, 0, !dbg !4707
  br i1 %tobool132, label %if.else140, label %if.then133, !dbg !4709

if.then133:                                       ; preds = %for.end131
  %113 = load i8*, i8** %new_line, align 8, !dbg !4710
  %114 = load i32, i32* %extra, align 4, !dbg !4712
  %idxprom = sext i32 %114 to i64, !dbg !4710
  %arrayidx134 = getelementptr inbounds i8, i8* %113, i64 %idxprom, !dbg !4710
  store i8 9, i8* %arrayidx134, align 1, !dbg !4713
  %115 = load i64, i64* %a, align 8, !dbg !4714
  %116 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4715
  %tabnumber135 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %116, i32 0, i32 16, !dbg !4716
  %117 = load i32, i32* %tabnumber135, align 8, !dbg !4716
  %sub136 = sub nsw i32 %117, 1, !dbg !4717
  %conv137 = sext i32 %sub136 to i64, !dbg !4718
  %add138 = add i64 %115, %conv137, !dbg !4719
  store i64 %add138, i64* %a, align 8, !dbg !4720
  %118 = load i32, i32* %extra, align 4, !dbg !4721
  %inc139 = add nsw i32 %118, 1, !dbg !4721
  store i32 %inc139, i32* %extra, align 4, !dbg !4721
  br label %if.end145, !dbg !4722

if.else140:                                       ; preds = %for.end131
  %119 = load i8*, i8** %text_check_line55, align 8, !dbg !4723
  %120 = load i64, i64* %a, align 8, !dbg !4725
  %arrayidx141 = getelementptr inbounds i8, i8* %119, i64 %120, !dbg !4723
  %121 = load i8, i8* %arrayidx141, align 1, !dbg !4723
  %122 = load i8*, i8** %new_line, align 8, !dbg !4726
  %123 = load i32, i32* %extra, align 4, !dbg !4727
  %idxprom142 = sext i32 %123 to i64, !dbg !4726
  %arrayidx143 = getelementptr inbounds i8, i8* %122, i64 %idxprom142, !dbg !4726
  store i8 %121, i8* %arrayidx143, align 1, !dbg !4728
  %124 = load i32, i32* %extra, align 4, !dbg !4729
  %inc144 = add nsw i32 %124, 1, !dbg !4729
  store i32 %inc144, i32* %extra, align 4, !dbg !4729
  br label %if.end145

if.end145:                                        ; preds = %if.else140, %if.then133
  br label %for.inc146, !dbg !4730

for.inc146:                                       ; preds = %if.end145
  %125 = load i64, i64* %a, align 8, !dbg !4731
  %inc147 = add i64 %125, 1, !dbg !4731
  store i64 %inc147, i64* %a, align 8, !dbg !4731
  br label %for.cond105, !dbg !4732, !llvm.loop !4733

for.end148:                                       ; preds = %for.cond105
  %126 = load i8*, i8** %new_line, align 8, !dbg !4735
  %127 = load i32, i32* %extra, align 4, !dbg !4736
  %idxprom149 = sext i32 %127 to i64, !dbg !4735
  %arrayidx150 = getelementptr inbounds i8, i8* %126, i64 %idxprom149, !dbg !4735
  store i8 0, i8* %arrayidx150, align 1, !dbg !4737
  %128 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4738
  %line151 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %128, i32 0, i32 2, !dbg !4740
  %129 = load i8*, i8** %line151, align 8, !dbg !4740
  %tobool152 = icmp ne i8* %129, null, !dbg !4738
  br i1 %tobool152, label %if.then153, label %if.end155, !dbg !4741

if.then153:                                       ; preds = %for.end148
  %130 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4742
  %131 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4743
  %line154 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %131, i32 0, i32 2, !dbg !4744
  %132 = load i8*, i8** %line154, align 8, !dbg !4744
  call void %130(i8* %132), !dbg !4742
  br label %if.end155, !dbg !4742

if.end155:                                        ; preds = %if.then153, %for.end148
  %133 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4745
  %format156 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %133, i32 0, i32 3, !dbg !4747
  %134 = load i8*, i8** %format156, align 8, !dbg !4747
  %tobool157 = icmp ne i8* %134, null, !dbg !4745
  br i1 %tobool157, label %if.then158, label %if.end160, !dbg !4748

if.then158:                                       ; preds = %if.end155
  %135 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4749
  %136 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4750
  %format159 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %136, i32 0, i32 3, !dbg !4751
  %137 = load i8*, i8** %format159, align 8, !dbg !4751
  call void %135(i8* %137), !dbg !4749
  br label %if.end160, !dbg !4749

if.end160:                                        ; preds = %if.then158, %if.end155
  %138 = load i8*, i8** %new_line, align 8, !dbg !4752
  %139 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4753
  %line161 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %139, i32 0, i32 2, !dbg !4754
  store i8* %138, i8** %line161, align 8, !dbg !4755
  %140 = load i8*, i8** %new_line, align 8, !dbg !4756
  %call162 = call i64 @strlen(i8* %140) #7, !dbg !4757
  %conv163 = trunc i64 %call162 to i32, !dbg !4757
  %141 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4758
  %len164 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %141, i32 0, i32 4, !dbg !4759
  store i32 %conv163, i32* %len164, align 8, !dbg !4760
  %142 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4761
  %format165 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %142, i32 0, i32 3, !dbg !4762
  store i8* null, i8** %format165, align 8, !dbg !4763
  br label %if.end166, !dbg !4764

if.end166:                                        ; preds = %if.end160, %for.end95
  br label %for.inc167, !dbg !4765

for.inc167:                                       ; preds = %if.end166
  %143 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !4766
  %next168 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %143, i32 0, i32 0, !dbg !4767
  %144 = load %struct.TextLine*, %struct.TextLine** %next168, align 8, !dbg !4767
  store %struct.TextLine* %144, %struct.TextLine** %tmp, align 8, !dbg !4768
  br label %for.cond52, !dbg !4769, !llvm.loop !4770

for.end169:                                       ; preds = %for.cond52
  br label %if.end170, !dbg !4772

if.end170:                                        ; preds = %for.end169, %for.end46
  %145 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4773
  call void @text_update_edited(%struct.Text* %145), !dbg !4774
  %146 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4775
  call void @text_update_cursor_moved(%struct.bContext* %146), !dbg !4776
  %147 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !4777
  call void @text_drawcache_tag_update(%struct.SpaceText* %147, i32 1), !dbg !4778
  %148 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4779
  %149 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4780
  %150 = bitcast %struct.Text* %149 to i8*, !dbg !4780
  call void @WM_event_add_notifier(%struct.bContext* %148, i32 201326593, i8* %150), !dbg !4781
  ret i32 4, !dbg !4782
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_select_all(%struct.wmOperatorType* %ot) #0 !dbg !4783 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4784, metadata !DIExpression()), !dbg !4785
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4786
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4787
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0), i8** %name, align 8, !dbg !4788
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4789
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4790
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0), i8** %idname, align 8, !dbg !4791
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4792
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4793
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i64 0, i64 0), i8** %description, align 8, !dbg !4794
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4795
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4796
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_select_all_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4797
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4798
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4799
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4800
  ret void, !dbg !4801
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_select_all_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4802 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4803, metadata !DIExpression()), !dbg !4804
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4807, metadata !DIExpression()), !dbg !4808
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4809
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4810
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4808
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4811
  call void @txt_sel_all(%struct.Text* %1), !dbg !4812
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4813
  call void @text_update_cursor_moved(%struct.bContext* %2), !dbg !4814
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4815
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4816
  %5 = bitcast %struct.Text* %4 to i8*, !dbg !4816
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 201326593, i8* %5), !dbg !4817
  ret i32 4, !dbg !4818
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_select_line(%struct.wmOperatorType* %ot) #0 !dbg !4819 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4822
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4823
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8** %name, align 8, !dbg !4824
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4825
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4826
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i64 0, i64 0), i8** %idname, align 8, !dbg !4827
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4828
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4829
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.71, i64 0, i64 0), i8** %description, align 8, !dbg !4830
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4831
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4832
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_select_line_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4833
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4834
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4835
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4836
  ret void, !dbg !4837
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_select_line_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4838 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4839, metadata !DIExpression()), !dbg !4840
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4841, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4843, metadata !DIExpression()), !dbg !4844
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4845
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4846
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4844
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4847
  call void @txt_sel_line(%struct.Text* %1), !dbg !4848
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4849
  call void @text_update_cursor_moved(%struct.bContext* %2), !dbg !4850
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4851
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4852
  %5 = bitcast %struct.Text* %4 to i8*, !dbg !4852
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 201326593, i8* %5), !dbg !4853
  ret i32 4, !dbg !4854
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_select_word(%struct.wmOperatorType* %ot) #0 !dbg !4855 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4856, metadata !DIExpression()), !dbg !4857
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4858
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4859
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i64 0, i64 0), i8** %name, align 8, !dbg !4860
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4861
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4862
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.73, i64 0, i64 0), i8** %idname, align 8, !dbg !4863
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4864
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4865
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i64 0, i64 0), i8** %description, align 8, !dbg !4866
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4867
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4868
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_select_word_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4869
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4870
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4871
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4872
  ret void, !dbg !4873
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_select_word_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !4874 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  %use_init_step = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4875, metadata !DIExpression()), !dbg !4876
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !4877, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4879, metadata !DIExpression()), !dbg !4880
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4881
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4882
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4880
  call void @llvm.dbg.declare(metadata i8* %use_init_step, metadata !4883, metadata !DIExpression()), !dbg !4884
  store i8 0, i8* %use_init_step, align 1, !dbg !4884
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4885
  call void @txt_jump_left(%struct.Text* %1, i8 zeroext 0, i8 zeroext 0), !dbg !4886
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4887
  call void @txt_jump_right(%struct.Text* %2, i8 zeroext 1, i8 zeroext 0), !dbg !4888
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4889
  call void @text_update_cursor_moved(%struct.bContext* %3), !dbg !4890
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4891
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4892
  %6 = bitcast %struct.Text* %5 to i8*, !dbg !4892
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 201326593, i8* %6), !dbg !4893
  ret i32 4, !dbg !4894
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_move_lines(%struct.wmOperatorType* %ot) #0 !dbg !1204 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4897
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4898
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0), i8** %name, align 8, !dbg !4899
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4900
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4901
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i64 0, i64 0), i8** %idname, align 8, !dbg !4902
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4903
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4904
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.82, i64 0, i64 0), i8** %description, align 8, !dbg !4905
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4906
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4907
  store i32 (%struct.bContext*, %struct.wmOperator*)* @move_lines_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4908
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4909
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4910
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4911
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4912
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !4913
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4913
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !4912
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @TEXT_OT_move_lines.direction_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0)), !dbg !4914
  ret void, !dbg !4915
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @move_lines_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4916 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  %direction = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4917, metadata !DIExpression()), !dbg !4918
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4919, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !4921, metadata !DIExpression()), !dbg !4922
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4923
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !4924
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !4922
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !4925, metadata !DIExpression()), !dbg !4926
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4927
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !4928
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4928
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i64 0, i64 0)), !dbg !4929
  store i32 %call1, i32* %direction, align 4, !dbg !4926
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4930
  %4 = load i32, i32* %direction, align 4, !dbg !4931
  call void @txt_move_lines(%struct.Text* %3, i32 %4), !dbg !4932
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4933
  call void @text_update_cursor_moved(%struct.bContext* %5), !dbg !4934
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4935
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !4936
  %8 = bitcast %struct.Text* %7 to i8*, !dbg !4936
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 201326593, i8* %8), !dbg !4937
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4938
  %call2 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %9), !dbg !4940
  %live_edit = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %call2, i32 0, i32 20, !dbg !4941
  %10 = load i16, i16* %live_edit, align 2, !dbg !4941
  %tobool = icmp ne i16 %10, 0, !dbg !4940
  br i1 %tobool, label %if.then, label %if.end, !dbg !4942

if.then:                                          ; preds = %entry
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4943
  %call3 = call i32 @text_run_script(%struct.bContext* %11, %struct.ReportList* null), !dbg !4944
  br label %if.end, !dbg !4944

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !4945
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_move(%struct.wmOperatorType* %ot) #0 !dbg !4946 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4947, metadata !DIExpression()), !dbg !4948
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4949
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4950
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i64 0, i64 0), i8** %name, align 8, !dbg !4951
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4952
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4953
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i64 0, i64 0), i8** %idname, align 8, !dbg !4954
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4955
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4956
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.87, i64 0, i64 0), i8** %description, align 8, !dbg !4957
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4958
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4959
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_move_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4960
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4961
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4962
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4963
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4964
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !4965
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4965
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !4964
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([13 x %struct.EnumPropertyItem], [13 x %struct.EnumPropertyItem]* @move_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.88, i64 0, i64 0)), !dbg !4966
  ret void, !dbg !4967
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_move_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4968 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4973, metadata !DIExpression()), !dbg !4974
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4975
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !4976
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4976
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)), !dbg !4977
  store i32 %call, i32* %type, align 4, !dbg !4974
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4978
  %3 = load i32, i32* %type, align 4, !dbg !4979
  %call1 = call i32 @text_move_cursor(%struct.bContext* %2, i32 %3, i8 zeroext 0), !dbg !4980
  ret i32 %call1, !dbg !4981
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_move_select(%struct.wmOperatorType* %ot) #0 !dbg !4982 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4983, metadata !DIExpression()), !dbg !4984
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4985
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4986
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i8** %name, align 8, !dbg !4987
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4988
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !4989
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.90, i64 0, i64 0), i8** %idname, align 8, !dbg !4990
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4991
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !4992
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.91, i64 0, i64 0), i8** %description, align 8, !dbg !4993
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4994
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4995
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_move_select_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4996
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4997
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4998
  store i32 (%struct.bContext*)* @text_space_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !4999
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5000
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !5001
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5001
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !5000
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([13 x %struct.EnumPropertyItem], [13 x %struct.EnumPropertyItem]* @move_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.92, i64 0, i64 0)), !dbg !5002
  ret void, !dbg !5003
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_move_select_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5004 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5005, metadata !DIExpression()), !dbg !5006
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5009, metadata !DIExpression()), !dbg !5010
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5011
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5012
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5012
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)), !dbg !5013
  store i32 %call, i32* %type, align 4, !dbg !5010
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5014
  %3 = load i32, i32* %type, align 4, !dbg !5015
  %call1 = call i32 @text_move_cursor(%struct.bContext* %2, i32 %3, i8 zeroext 1), !dbg !5016
  ret i32 %call1, !dbg !5017
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_jump(%struct.wmOperatorType* %ot) #0 !dbg !5018 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5019, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5021, metadata !DIExpression()), !dbg !5022
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5023
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5024
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i8** %name, align 8, !dbg !5025
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5026
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5027
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i64 0, i64 0), i8** %idname, align 8, !dbg !5028
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5029
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5030
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.95, i64 0, i64 0), i8** %description, align 8, !dbg !5031
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5032
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5033
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_jump_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5034
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5035
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5036
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_jump_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5037
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5038
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5039
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5040
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5041
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5042
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5042
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5041
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i64 0, i64 0), i32 1, i32 1, i32 2147483647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.98, i64 0, i64 0), i32 1, i32 10000), !dbg !5043
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5044
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5045
  call void @RNA_def_property_translation_context(%struct.PropertyRNA* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i64 0, i64 0)), !dbg !5046
  ret void, !dbg !5047
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_jump_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5048 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5055
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5056
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5057
  %conv = sext i16 %2 to i32, !dbg !5057
  %mul = mul nsw i32 10, %conv, !dbg !5058
  %3 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5059
  %conv1 = sext i16 %3 to i32, !dbg !5059
  %mul2 = mul nsw i32 5, %conv1, !dbg !5060
  %call = call i32 @WM_operator_props_dialog_popup(%struct.bContext* %0, %struct.wmOperator* %1, i32 %mul, i32 %mul2), !dbg !5061
  ret i32 %call, !dbg !5062
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_jump_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5063 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  %line = alloca i32, align 4
  %nlines = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !5068, metadata !DIExpression()), !dbg !5069
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5070
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !5071
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !5069
  call void @llvm.dbg.declare(metadata i32* %line, metadata !5072, metadata !DIExpression()), !dbg !5073
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5074
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5075
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5075
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.96, i64 0, i64 0)), !dbg !5076
  store i32 %call1, i32* %line, align 4, !dbg !5073
  call void @llvm.dbg.declare(metadata i16* %nlines, metadata !5077, metadata !DIExpression()), !dbg !5078
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5079
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 4, !dbg !5080
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !5081
  %4 = load i8*, i8** %first, align 8, !dbg !5081
  %5 = bitcast i8* %4 to %struct.TextLine*, !dbg !5079
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5082
  %lines2 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 4, !dbg !5083
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines2, i32 0, i32 1, !dbg !5084
  %7 = load i8*, i8** %last, align 8, !dbg !5084
  %8 = bitcast i8* %7 to %struct.TextLine*, !dbg !5082
  %call3 = call i32 @txt_get_span(%struct.TextLine* %5, %struct.TextLine* %8), !dbg !5085
  %add = add nsw i32 %call3, 1, !dbg !5086
  %conv = trunc i32 %add to i16, !dbg !5085
  store i16 %conv, i16* %nlines, align 2, !dbg !5078
  %9 = load i32, i32* %line, align 4, !dbg !5087
  %cmp = icmp slt i32 %9, 1, !dbg !5089
  br i1 %cmp, label %if.then, label %if.else, !dbg !5090

if.then:                                          ; preds = %entry
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5091
  call void @txt_move_toline(%struct.Text* %10, i32 1, i8 zeroext 0), !dbg !5092
  br label %if.end12, !dbg !5092

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %line, align 4, !dbg !5093
  %12 = load i16, i16* %nlines, align 2, !dbg !5095
  %conv5 = sext i16 %12 to i32, !dbg !5095
  %cmp6 = icmp sgt i32 %11, %conv5, !dbg !5096
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !5097

if.then8:                                         ; preds = %if.else
  %13 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5098
  %14 = load i16, i16* %nlines, align 2, !dbg !5099
  %conv9 = sext i16 %14 to i32, !dbg !5099
  %sub = sub nsw i32 %conv9, 1, !dbg !5100
  call void @txt_move_toline(%struct.Text* %13, i32 %sub, i8 zeroext 0), !dbg !5101
  br label %if.end, !dbg !5101

if.else10:                                        ; preds = %if.else
  %15 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5102
  %16 = load i32, i32* %line, align 4, !dbg !5103
  %sub11 = sub nsw i32 %16, 1, !dbg !5104
  call void @txt_move_toline(%struct.Text* %15, i32 %sub11, i8 zeroext 0), !dbg !5105
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then8
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5106
  call void @text_update_cursor_moved(%struct.bContext* %17), !dbg !5107
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5108
  %19 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5109
  %20 = bitcast %struct.Text* %19 to i8*, !dbg !5109
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 204603392, i8* %20), !dbg !5110
  ret i32 4, !dbg !5111
}

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local void @RNA_def_property_translation_context(%struct.PropertyRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !5112 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5115
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5116
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i8** %name, align 8, !dbg !5117
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5118
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5119
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i8** %idname, align 8, !dbg !5120
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5121
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5122
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8** %description, align 8, !dbg !5123
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5124
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5125
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5126
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5127
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5128
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5129
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5130
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !5131
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5131
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !5130
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @delete_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.103, i64 0, i64 0)), !dbg !5132
  ret void, !dbg !5133
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_delete_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5134 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5139, metadata !DIExpression()), !dbg !5140
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5141
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5142
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5140
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !5143, metadata !DIExpression()), !dbg !5144
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5145
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !5146
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !5144
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5147, metadata !DIExpression()), !dbg !5148
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5149
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5150
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5150
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)), !dbg !5151
  store i32 %call2, i32* %type, align 4, !dbg !5148
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5152
  call void @text_drawcache_tag_update(%struct.SpaceText* %4, i32 0), !dbg !5153
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5154
  %call3 = call zeroext i8 @txt_has_sel(%struct.Text* %5), !dbg !5156
  %tobool = icmp ne i8 %call3, 0, !dbg !5156
  br i1 %tobool, label %if.then, label %if.end8, !dbg !5157

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %type, align 4, !dbg !5158
  %cmp = icmp eq i32 %6, 3, !dbg !5161
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5162

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %type, align 4, !dbg !5163
  br label %if.end7, !dbg !5164

if.else:                                          ; preds = %if.then
  %7 = load i32, i32* %type, align 4, !dbg !5165
  %cmp5 = icmp eq i32 %7, 2, !dbg !5167
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5168

if.then6:                                         ; preds = %if.else
  store i32 0, i32* %type, align 4, !dbg !5169
  br label %if.end, !dbg !5170

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then4
  br label %if.end8, !dbg !5171

if.end8:                                          ; preds = %if.end7, %entry
  %8 = load i32, i32* %type, align 4, !dbg !5172
  %cmp9 = icmp eq i32 %8, 3, !dbg !5174
  br i1 %cmp9, label %if.then10, label %if.else15, !dbg !5175

if.then10:                                        ; preds = %if.end8
  %9 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5176
  %call11 = call zeroext i8 @txt_cursor_is_line_start(%struct.Text* %9), !dbg !5179
  %tobool12 = icmp ne i8 %call11, 0, !dbg !5179
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5180

if.then13:                                        ; preds = %if.then10
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5181
  call void @txt_backspace_char(%struct.Text* %10), !dbg !5183
  br label %if.end14, !dbg !5184

if.end14:                                         ; preds = %if.then13, %if.then10
  %11 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5185
  call void @txt_backspace_word(%struct.Text* %11), !dbg !5186
  br label %if.end31, !dbg !5187

if.else15:                                        ; preds = %if.end8
  %12 = load i32, i32* %type, align 4, !dbg !5188
  %cmp16 = icmp eq i32 %12, 1, !dbg !5190
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !5191

if.then17:                                        ; preds = %if.else15
  %13 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5192
  call void @txt_backspace_char(%struct.Text* %13), !dbg !5194
  br label %if.end30, !dbg !5195

if.else18:                                        ; preds = %if.else15
  %14 = load i32, i32* %type, align 4, !dbg !5196
  %cmp19 = icmp eq i32 %14, 2, !dbg !5198
  br i1 %cmp19, label %if.then20, label %if.else25, !dbg !5199

if.then20:                                        ; preds = %if.else18
  %15 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5200
  %call21 = call zeroext i8 @txt_cursor_is_line_end(%struct.Text* %15), !dbg !5203
  %tobool22 = icmp ne i8 %call21, 0, !dbg !5203
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5204

if.then23:                                        ; preds = %if.then20
  %16 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5205
  call void @txt_delete_char(%struct.Text* %16), !dbg !5207
  br label %if.end24, !dbg !5208

if.end24:                                         ; preds = %if.then23, %if.then20
  %17 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5209
  call void @txt_delete_word(%struct.Text* %17), !dbg !5210
  br label %if.end29, !dbg !5211

if.else25:                                        ; preds = %if.else18
  %18 = load i32, i32* %type, align 4, !dbg !5212
  %cmp26 = icmp eq i32 %18, 0, !dbg !5214
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !5215

if.then27:                                        ; preds = %if.else25
  %19 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5216
  call void @txt_delete_char(%struct.Text* %19), !dbg !5218
  br label %if.end28, !dbg !5219

if.end28:                                         ; preds = %if.then27, %if.else25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then17
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end14
  %20 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5220
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 5, !dbg !5221
  %21 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !5221
  call void @text_update_line_edited(%struct.TextLine* %21), !dbg !5222
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5223
  call void @text_update_cursor_moved(%struct.bContext* %22), !dbg !5224
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5225
  %24 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5226
  %25 = bitcast %struct.Text* %24 to i8*, !dbg !5226
  call void @WM_event_add_notifier(%struct.bContext* %23, i32 201326593, i8* %25), !dbg !5227
  %26 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5228
  %live_edit = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %26, i32 0, i32 20, !dbg !5230
  %27 = load i16, i16* %live_edit, align 2, !dbg !5230
  %tobool32 = icmp ne i16 %27, 0, !dbg !5228
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !5231

if.then33:                                        ; preds = %if.end31
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5232
  %call34 = call i32 @text_run_script(%struct.bContext* %28, %struct.ReportList* null), !dbg !5233
  br label %if.end35, !dbg !5233

if.end35:                                         ; preds = %if.then33, %if.end31
  ret i32 4, !dbg !5234
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_overwrite_toggle(%struct.wmOperatorType* %ot) #0 !dbg !5235 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5236, metadata !DIExpression()), !dbg !5237
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5238
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5239
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0), i8** %name, align 8, !dbg !5240
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5241
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5242
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.105, i64 0, i64 0), i8** %idname, align 8, !dbg !5243
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5244
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5245
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.106, i64 0, i64 0), i8** %description, align 8, !dbg !5246
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5247
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5248
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_toggle_overwrite_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5249
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5250
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5251
  store i32 (%struct.bContext*)* @text_space_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5252
  ret void, !dbg !5253
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_toggle_overwrite_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5254 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5255, metadata !DIExpression()), !dbg !5256
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5257, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5259, metadata !DIExpression()), !dbg !5260
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5261
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5262
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5260
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5263
  %overwrite = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 19, !dbg !5264
  %2 = load i16, i16* %overwrite, align 8, !dbg !5264
  %tobool = icmp ne i16 %2, 0, !dbg !5265
  %lnot = xor i1 %tobool, true, !dbg !5265
  %lnot.ext = zext i1 %lnot to i32, !dbg !5265
  %conv = trunc i32 %lnot.ext to i16, !dbg !5265
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5266
  %overwrite1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 19, !dbg !5267
  store i16 %conv, i16* %overwrite1, align 8, !dbg !5268
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5269
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5270
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %5, i32 0, i32 6, !dbg !5271
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5271
  %7 = bitcast %struct.Text* %6 to i8*, !dbg !5270
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 204603392, i8* %7), !dbg !5272
  ret i32 4, !dbg !5273
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_scroll(%struct.wmOperatorType* %ot) #0 !dbg !5274 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5277
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5278
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), i8** %name, align 8, !dbg !5279
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5280
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5281
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.108, i64 0, i64 0), i8** %idname, align 8, !dbg !5282
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5283
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5284
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8** %description, align 8, !dbg !5285
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5286
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5287
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_scroll_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5288
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5289
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !5290
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_scroll_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5291
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5292
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !5293
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_scroll_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5294
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5295
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !5296
  store void (%struct.bContext*, %struct.wmOperator*)* @text_scroll_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5297
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5298
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 9, !dbg !5299
  store i32 (%struct.bContext*)* @text_scroll_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5300
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5301
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !5302
  store i16 84, i16* %flag, align 8, !dbg !5303
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5304
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5305
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5305
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5304
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i32 1, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.111, i64 0, i64 0), i32 -100, i32 100), !dbg !5306
  ret void, !dbg !5307
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_scroll_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5308 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %lines = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5309, metadata !DIExpression()), !dbg !5310
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5311, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5313, metadata !DIExpression()), !dbg !5314
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5315
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5316
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5314
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5317, metadata !DIExpression()), !dbg !5318
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5319
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !5320
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5318
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !5321, metadata !DIExpression()), !dbg !5322
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5323
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5324
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5324
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0)), !dbg !5325
  store i32 %call2, i32* %lines, align 4, !dbg !5322
  %4 = load i32, i32* %lines, align 4, !dbg !5326
  %cmp = icmp eq i32 %4, 0, !dbg !5328
  br i1 %cmp, label %if.then, label %if.end, !dbg !5329

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5330
  br label %return, !dbg !5330

if.end:                                           ; preds = %entry
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5331
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5332
  %7 = load i32, i32* %lines, align 4, !dbg !5333
  %8 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 21), align 2, !dbg !5334
  %conv = sext i16 %8 to i32, !dbg !5335
  %mul = mul nsw i32 %7, %conv, !dbg !5336
  call void @txt_screen_skip(%struct.SpaceText* %5, %struct.ARegion* %6, i32 %mul), !dbg !5337
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5338
  %call3 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %9), !dbg !5339
  call void @ED_area_tag_redraw(%struct.ScrArea* %call3), !dbg !5340
  store i32 4, i32* %retval, align 4, !dbg !5341
  br label %return, !dbg !5341

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5342
  ret i32 %10, !dbg !5342
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_scroll_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5343 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %tsc = alloca %struct.TextScroll*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5344, metadata !DIExpression()), !dbg !5345
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5350, metadata !DIExpression()), !dbg !5351
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5352
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5353
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5351
  call void @llvm.dbg.declare(metadata %struct.TextScroll** %tsc, metadata !5354, metadata !DIExpression()), !dbg !5364
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5365
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !5367
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5367
  %call1 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0)), !dbg !5368
  %tobool = icmp ne i8 %call1, 0, !dbg !5368
  br i1 %tobool, label %if.then, label %if.end, !dbg !5369

if.then:                                          ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5370
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5371
  %call2 = call i32 @text_scroll_exec(%struct.bContext* %3, %struct.wmOperator* %4), !dbg !5372
  store i32 %call2, i32* %retval, align 4, !dbg !5373
  br label %return, !dbg !5373

if.end:                                           ; preds = %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5374
  %call3 = call i8* %5(i64 28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.200, i64 0, i64 0)), !dbg !5374
  %6 = bitcast i8* %call3 to %struct.TextScroll*, !dbg !5374
  store %struct.TextScroll* %6, %struct.TextScroll** %tsc, align 8, !dbg !5375
  %7 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5376
  %first = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %7, i32 0, i32 2, !dbg !5377
  store i32 1, i32* %first, align 4, !dbg !5378
  %8 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5379
  %zone = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %8, i32 0, i32 4, !dbg !5380
  store i32 0, i32* %zone, align 4, !dbg !5381
  %9 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5382
  %10 = bitcast %struct.TextScroll* %9 to i8*, !dbg !5382
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5383
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 5, !dbg !5384
  store i8* %10, i8** %customdata, align 8, !dbg !5385
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5386
  %flags = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 9, !dbg !5387
  %13 = load i16, i16* %flags, align 8, !dbg !5388
  %conv = sext i16 %13 to i32, !dbg !5388
  %or = or i32 %conv, 1, !dbg !5388
  %conv4 = trunc i32 %or to i16, !dbg !5388
  store i16 %conv4, i16* %flags, align 8, !dbg !5388
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5389
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 2, !dbg !5391
  %15 = load i16, i16* %type, align 8, !dbg !5391
  %conv5 = sext i16 %15 to i32, !dbg !5389
  %cmp = icmp eq i32 %conv5, 14, !dbg !5392
  br i1 %cmp, label %if.then7, label %if.end21, !dbg !5393

if.then7:                                         ; preds = %if.end
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5394
  call void @text_update_character_width(%struct.SpaceText* %16), !dbg !5396
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5397
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 4, !dbg !5398
  %18 = load i32, i32* %x, align 4, !dbg !5398
  %19 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5399
  %old = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %19, i32 0, i32 0, !dbg !5400
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %old, i64 0, i64 0, !dbg !5399
  store i32 %18, i32* %arrayidx, align 4, !dbg !5401
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5402
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 5, !dbg !5403
  %21 = load i32, i32* %y, align 8, !dbg !5403
  %22 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5404
  %old8 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %22, i32 0, i32 0, !dbg !5405
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %old8, i64 0, i64 1, !dbg !5404
  store i32 %21, i32* %arrayidx9, align 4, !dbg !5406
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5407
  %x10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 4, !dbg !5408
  %24 = load i32, i32* %x10, align 4, !dbg !5408
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5409
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 12, !dbg !5410
  %26 = load i32, i32* %prevx, align 8, !dbg !5410
  %sub = sub nsw i32 %24, %26, !dbg !5411
  %27 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5412
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %27, i32 0, i32 12, !dbg !5413
  %28 = load i8, i8* %cwidth, align 2, !dbg !5413
  %conv11 = zext i8 %28 to i32, !dbg !5412
  %mul = mul nsw i32 %sub, %conv11, !dbg !5414
  %div = sdiv i32 %mul, 4, !dbg !5415
  %29 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5416
  %delta = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %29, i32 0, i32 1, !dbg !5417
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %delta, i64 0, i64 0, !dbg !5416
  store i32 %div, i32* %arrayidx12, align 4, !dbg !5418
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5419
  %y13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %30, i32 0, i32 5, !dbg !5420
  %31 = load i32, i32* %y13, align 8, !dbg !5420
  %32 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5421
  %prevy = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %32, i32 0, i32 13, !dbg !5422
  %33 = load i32, i32* %prevy, align 4, !dbg !5422
  %sub14 = sub nsw i32 %31, %33, !dbg !5423
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5424
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 29, !dbg !5425
  %35 = load i16, i16* %lheight_dpi, align 2, !dbg !5425
  %conv15 = sext i16 %35 to i32, !dbg !5424
  %mul16 = mul nsw i32 %sub14, %conv15, !dbg !5426
  %div17 = sdiv i32 %mul16, 4, !dbg !5427
  %36 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5428
  %delta18 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %36, i32 0, i32 1, !dbg !5429
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %delta18, i64 0, i64 1, !dbg !5428
  store i32 %div17, i32* %arrayidx19, align 4, !dbg !5430
  %37 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5431
  %first20 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %37, i32 0, i32 2, !dbg !5432
  store i32 0, i32* %first20, align 4, !dbg !5433
  %38 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5434
  %scrollbar = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %38, i32 0, i32 3, !dbg !5435
  store i32 0, i32* %scrollbar, align 4, !dbg !5436
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5437
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5438
  %41 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5439
  call void @text_scroll_apply(%struct.bContext* %39, %struct.wmOperator* %40, %struct.wmEvent* %41), !dbg !5440
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5441
  %43 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5442
  call void @scroll_exit(%struct.bContext* %42, %struct.wmOperator* %43), !dbg !5443
  store i32 4, i32* %retval, align 4, !dbg !5444
  br label %return, !dbg !5444

if.end21:                                         ; preds = %if.end
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5445
  %45 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5446
  %call22 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %44, %struct.wmOperator* %45), !dbg !5447
  store i32 1, i32* %retval, align 4, !dbg !5448
  br label %return, !dbg !5448

return:                                           ; preds = %if.end21, %if.then7, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !5449
  ret i32 %46, !dbg !5449
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_scroll_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5450 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %tsc = alloca %struct.TextScroll*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.declare(metadata %struct.TextScroll** %tsc, metadata !5457, metadata !DIExpression()), !dbg !5458
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5459
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !5460
  %1 = load i8*, i8** %customdata, align 8, !dbg !5460
  %2 = bitcast i8* %1 to %struct.TextScroll*, !dbg !5459
  store %struct.TextScroll* %2, %struct.TextScroll** %tsc, align 8, !dbg !5458
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5461, metadata !DIExpression()), !dbg !5462
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5463
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %3), !dbg !5464
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5462
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5465, metadata !DIExpression()), !dbg !5466
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5467
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !5468
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5466
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5469
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !5470
  %6 = load i16, i16* %type, align 8, !dbg !5470
  %conv = sext i16 %6 to i32, !dbg !5469
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb3
    i32 3, label %sw.bb3
    i32 2, label %sw.bb3
  ], !dbg !5471

sw.bb:                                            ; preds = %entry
  %7 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5472
  %zone = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %7, i32 0, i32 4, !dbg !5475
  %8 = load i32, i32* %zone, align 4, !dbg !5475
  %cmp = icmp eq i32 %8, 0, !dbg !5476
  br i1 %cmp, label %if.then, label %if.end, !dbg !5477

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5478
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5479
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5480
  call void @text_scroll_apply(%struct.bContext* %9, %struct.wmOperator* %10, %struct.wmEvent* %11), !dbg !5481
  br label %if.end, !dbg !5481

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !5482

sw.bb3:                                           ; preds = %entry, %entry, %entry
  %12 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5483
  %zone4 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %12, i32 0, i32 4, !dbg !5483
  %13 = load i32, i32* %zone4, align 4, !dbg !5483
  %cmp5 = icmp eq i32 %13, 1, !dbg !5483
  br i1 %cmp5, label %if.then10, label %lor.lhs.false, !dbg !5483

lor.lhs.false:                                    ; preds = %sw.bb3
  %14 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5483
  %zone7 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %14, i32 0, i32 4, !dbg !5483
  %15 = load i32, i32* %zone7, align 4, !dbg !5483
  %cmp8 = icmp eq i32 %15, 2, !dbg !5483
  br i1 %cmp8, label %if.then10, label %if.end15, !dbg !5485

if.then10:                                        ; preds = %lor.lhs.false, %sw.bb3
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5486
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5488
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5489
  %viewlines = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %18, i32 0, i32 8, !dbg !5490
  %19 = load i32, i32* %viewlines, align 4, !dbg !5490
  %20 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5491
  %zone11 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %20, i32 0, i32 4, !dbg !5492
  %21 = load i32, i32* %zone11, align 4, !dbg !5492
  %cmp12 = icmp eq i32 %21, 1, !dbg !5493
  %22 = zext i1 %cmp12 to i64, !dbg !5491
  %cond = select i1 %cmp12, i32 1, i32 -1, !dbg !5491
  %mul = mul nsw i32 %19, %cond, !dbg !5494
  call void @txt_screen_skip(%struct.SpaceText* %16, %struct.ARegion* %17, i32 %mul), !dbg !5495
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5496
  %call14 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %23), !dbg !5497
  call void @ED_area_tag_redraw(%struct.ScrArea* %call14), !dbg !5498
  br label %if.end15, !dbg !5499

if.end15:                                         ; preds = %if.then10, %lor.lhs.false
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5500
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5501
  call void @scroll_exit(%struct.bContext* %24, %struct.wmOperator* %25), !dbg !5502
  store i32 4, i32* %retval, align 4, !dbg !5503
  br label %return, !dbg !5503

sw.epilog:                                        ; preds = %entry, %if.end
  store i32 1, i32* %retval, align 4, !dbg !5504
  br label %return, !dbg !5504

return:                                           ; preds = %sw.epilog, %if.end15
  %26 = load i32, i32* %retval, align 4, !dbg !5505
  ret i32 %26, !dbg !5505
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_scroll_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5506 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5511
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5512
  call void @scroll_exit(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5513
  ret void, !dbg !5514
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_scroll_poll(%struct.bContext* %C) #0 !dbg !5515 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5518
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !5519
  %cmp = icmp ne %struct.Text* %call, null, !dbg !5520
  %conv = zext i1 %cmp to i32, !dbg !5520
  ret i32 %conv, !dbg !5521
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_scroll_bar(%struct.wmOperatorType* %ot) #0 !dbg !5522 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5523, metadata !DIExpression()), !dbg !5524
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5525
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5526
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.112, i64 0, i64 0), i8** %name, align 8, !dbg !5527
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5528
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5529
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.113, i64 0, i64 0), i8** %idname, align 8, !dbg !5530
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5531
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5532
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8** %description, align 8, !dbg !5533
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5534
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5535
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_scroll_bar_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5536
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5537
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5538
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_scroll_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5539
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5540
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !5541
  store void (%struct.bContext*, %struct.wmOperator*)* @text_scroll_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5542
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5543
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5544
  store i32 (%struct.bContext*)* @text_region_scroll_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5545
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5546
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !5547
  store i16 68, i16* %flag, align 8, !dbg !5548
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5549
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !5550
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5550
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !5549
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i32 1, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.111, i64 0, i64 0), i32 -100, i32 100), !dbg !5551
  ret void, !dbg !5552
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_scroll_bar_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5553 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %tsc = alloca %struct.TextScroll*, align 8
  %mval = alloca i32*, align 8
  %zone = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5556, metadata !DIExpression()), !dbg !5557
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5558, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5560, metadata !DIExpression()), !dbg !5561
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5562
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5563
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5561
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5564, metadata !DIExpression()), !dbg !5565
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5566
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !5567
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5565
  call void @llvm.dbg.declare(metadata %struct.TextScroll** %tsc, metadata !5568, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.declare(metadata i32** %mval, metadata !5570, metadata !DIExpression()), !dbg !5572
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5573
  %mval2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 6, !dbg !5574
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval2, i64 0, i64 0, !dbg !5573
  store i32* %arraydecay, i32** %mval, align 8, !dbg !5572
  call void @llvm.dbg.declare(metadata i32* %zone, metadata !5575, metadata !DIExpression()), !dbg !5576
  store i32 -1, i32* %zone, align 4, !dbg !5576
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5577
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !5579
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5579
  %call3 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0)), !dbg !5580
  %tobool = icmp ne i8 %call3, 0, !dbg !5580
  br i1 %tobool, label %if.then, label %if.end, !dbg !5581

if.then:                                          ; preds = %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5582
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5583
  %call4 = call i32 @text_scroll_exec(%struct.bContext* %5, %struct.wmOperator* %6), !dbg !5584
  store i32 %call4, i32* %retval, align 4, !dbg !5585
  br label %return, !dbg !5585

if.end:                                           ; preds = %entry
  %7 = load i32*, i32** %mval, align 8, !dbg !5586
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !5586
  %8 = load i32, i32* %arrayidx, align 4, !dbg !5586
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5588
  %txtbar = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 23, !dbg !5589
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar, i32 0, i32 0, !dbg !5590
  %10 = load i32, i32* %xmin, align 8, !dbg !5590
  %cmp = icmp sgt i32 %8, %10, !dbg !5591
  br i1 %cmp, label %land.lhs.true, label %if.end42, !dbg !5592

land.lhs.true:                                    ; preds = %if.end
  %11 = load i32*, i32** %mval, align 8, !dbg !5593
  %arrayidx5 = getelementptr inbounds i32, i32* %11, i64 0, !dbg !5593
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !5593
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5594
  %txtbar6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 23, !dbg !5595
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar6, i32 0, i32 1, !dbg !5596
  %14 = load i32, i32* %xmax, align 4, !dbg !5596
  %cmp7 = icmp slt i32 %12, %14, !dbg !5597
  br i1 %cmp7, label %if.then8, label %if.end42, !dbg !5598

if.then8:                                         ; preds = %land.lhs.true
  %15 = load i32*, i32** %mval, align 8, !dbg !5599
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 1, !dbg !5599
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !5599
  %17 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5602
  %txtbar10 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %17, i32 0, i32 23, !dbg !5603
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar10, i32 0, i32 2, !dbg !5604
  %18 = load i32, i32* %ymin, align 8, !dbg !5604
  %cmp11 = icmp sge i32 %16, %18, !dbg !5605
  br i1 %cmp11, label %land.lhs.true12, label %if.else, !dbg !5606

land.lhs.true12:                                  ; preds = %if.then8
  %19 = load i32*, i32** %mval, align 8, !dbg !5607
  %arrayidx13 = getelementptr inbounds i32, i32* %19, i64 1, !dbg !5607
  %20 = load i32, i32* %arrayidx13, align 4, !dbg !5607
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5608
  %txtbar14 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %21, i32 0, i32 23, !dbg !5609
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar14, i32 0, i32 3, !dbg !5610
  %22 = load i32, i32* %ymax, align 4, !dbg !5610
  %cmp15 = icmp sle i32 %20, %22, !dbg !5611
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !5612

if.then16:                                        ; preds = %land.lhs.true12
  store i32 0, i32* %zone, align 4, !dbg !5613
  br label %if.end41, !dbg !5615

if.else:                                          ; preds = %land.lhs.true12, %if.then8
  %23 = load i32*, i32** %mval, align 8, !dbg !5616
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 1, !dbg !5616
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !5616
  %25 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5618
  %conv = sext i16 %25 to i32, !dbg !5618
  %conv18 = sitofp i32 %conv to float, !dbg !5618
  %mul = fmul float 0x3FB99999A0000000, %conv18, !dbg !5618
  %conv19 = fptosi float %mul to i32, !dbg !5618
  %cmp20 = icmp sgt i32 %24, %conv19, !dbg !5619
  br i1 %cmp20, label %land.lhs.true22, label %if.end40, !dbg !5620

land.lhs.true22:                                  ; preds = %if.else
  %26 = load i32*, i32** %mval, align 8, !dbg !5621
  %arrayidx23 = getelementptr inbounds i32, i32* %26, i64 1, !dbg !5621
  %27 = load i32, i32* %arrayidx23, align 4, !dbg !5621
  %28 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5622
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 6, !dbg !5623
  %29 = load i16, i16* %winy, align 2, !dbg !5623
  %conv24 = sext i16 %29 to i32, !dbg !5622
  %30 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5624
  %conv25 = sext i16 %30 to i32, !dbg !5624
  %conv26 = sitofp i32 %conv25 to float, !dbg !5624
  %mul27 = fmul float 0x3FB99999A0000000, %conv26, !dbg !5624
  %conv28 = fptosi float %mul27 to i32, !dbg !5624
  %sub = sub nsw i32 %conv24, %conv28, !dbg !5625
  %cmp29 = icmp slt i32 %27, %sub, !dbg !5626
  br i1 %cmp29, label %if.then31, label %if.end40, !dbg !5627

if.then31:                                        ; preds = %land.lhs.true22
  %31 = load i32*, i32** %mval, align 8, !dbg !5628
  %arrayidx32 = getelementptr inbounds i32, i32* %31, i64 1, !dbg !5628
  %32 = load i32, i32* %arrayidx32, align 4, !dbg !5628
  %33 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5631
  %txtbar33 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %33, i32 0, i32 23, !dbg !5632
  %ymin34 = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar33, i32 0, i32 2, !dbg !5633
  %34 = load i32, i32* %ymin34, align 8, !dbg !5633
  %cmp35 = icmp slt i32 %32, %34, !dbg !5634
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !5635

if.then37:                                        ; preds = %if.then31
  store i32 1, i32* %zone, align 4, !dbg !5636
  br label %if.end39, !dbg !5637

if.else38:                                        ; preds = %if.then31
  store i32 2, i32* %zone, align 4, !dbg !5638
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then37
  br label %if.end40, !dbg !5639

if.end40:                                         ; preds = %if.end39, %land.lhs.true22, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then16
  br label %if.end42, !dbg !5640

if.end42:                                         ; preds = %if.end41, %land.lhs.true, %if.end
  %35 = load i32, i32* %zone, align 4, !dbg !5641
  %cmp43 = icmp eq i32 %35, -1, !dbg !5643
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5644

if.then45:                                        ; preds = %if.end42
  store i32 8, i32* %retval, align 4, !dbg !5645
  br label %return, !dbg !5645

if.end46:                                         ; preds = %if.end42
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5647
  %call47 = call i8* %36(i64 28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.200, i64 0, i64 0)), !dbg !5647
  %37 = bitcast i8* %call47 to %struct.TextScroll*, !dbg !5647
  store %struct.TextScroll* %37, %struct.TextScroll** %tsc, align 8, !dbg !5648
  %38 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5649
  %first = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %38, i32 0, i32 2, !dbg !5650
  store i32 1, i32* %first, align 4, !dbg !5651
  %39 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5652
  %scrollbar = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %39, i32 0, i32 3, !dbg !5653
  store i32 1, i32* %scrollbar, align 4, !dbg !5654
  %40 = load i32, i32* %zone, align 4, !dbg !5655
  %41 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5656
  %zone48 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %41, i32 0, i32 4, !dbg !5657
  store i32 %40, i32* %zone48, align 4, !dbg !5658
  %42 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5659
  %43 = bitcast %struct.TextScroll* %42 to i8*, !dbg !5659
  %44 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5660
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %44, i32 0, i32 5, !dbg !5661
  store i8* %43, i8** %customdata, align 8, !dbg !5662
  %45 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5663
  %flags = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %45, i32 0, i32 9, !dbg !5664
  %46 = load i16, i16* %flags, align 8, !dbg !5665
  %conv49 = sext i16 %46 to i32, !dbg !5665
  %or = or i32 %conv49, 1, !dbg !5665
  %conv50 = trunc i32 %or to i16, !dbg !5665
  store i16 %conv50, i16* %flags, align 8, !dbg !5665
  %47 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5666
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %47, i32 0, i32 2, !dbg !5668
  %48 = load i16, i16* %type, align 8, !dbg !5668
  %conv51 = sext i16 %48 to i32, !dbg !5666
  %cmp52 = icmp eq i32 %conv51, 2, !dbg !5669
  br i1 %cmp52, label %if.then54, label %if.end68, !dbg !5670

if.then54:                                        ; preds = %if.end46
  %49 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5671
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %49, i32 0, i32 3, !dbg !5673
  %xmin55 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !5674
  %50 = load i32, i32* %xmin55, align 8, !dbg !5674
  %51 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5675
  %txtbar56 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %51, i32 0, i32 23, !dbg !5676
  %call57 = call i32 @BLI_rcti_cent_x(%struct.rcti* %txtbar56), !dbg !5677
  %add = add nsw i32 %50, %call57, !dbg !5678
  %52 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5679
  %old = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %52, i32 0, i32 0, !dbg !5680
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %old, i64 0, i64 0, !dbg !5679
  store i32 %add, i32* %arrayidx58, align 4, !dbg !5681
  %53 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5682
  %winrct59 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %53, i32 0, i32 3, !dbg !5683
  %ymin60 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct59, i32 0, i32 2, !dbg !5684
  %54 = load i32, i32* %ymin60, align 8, !dbg !5684
  %55 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5685
  %txtbar61 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %55, i32 0, i32 23, !dbg !5686
  %call62 = call i32 @BLI_rcti_cent_y(%struct.rcti* %txtbar61), !dbg !5687
  %add63 = add nsw i32 %54, %call62, !dbg !5688
  %56 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5689
  %old64 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %56, i32 0, i32 0, !dbg !5690
  %arrayidx65 = getelementptr inbounds [2 x i32], [2 x i32]* %old64, i64 0, i64 1, !dbg !5689
  store i32 %add63, i32* %arrayidx65, align 4, !dbg !5691
  %57 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5692
  %first66 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %57, i32 0, i32 2, !dbg !5693
  store i32 0, i32* %first66, align 4, !dbg !5694
  %58 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !5695
  %zone67 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %58, i32 0, i32 4, !dbg !5696
  store i32 0, i32* %zone67, align 4, !dbg !5697
  %59 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5698
  %60 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5699
  %61 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5700
  call void @text_scroll_apply(%struct.bContext* %59, %struct.wmOperator* %60, %struct.wmEvent* %61), !dbg !5701
  br label %if.end68, !dbg !5702

if.end68:                                         ; preds = %if.then54, %if.end46
  %62 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5703
  %63 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5704
  %call69 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %62, %struct.wmOperator* %63), !dbg !5705
  store i32 1, i32* %retval, align 4, !dbg !5706
  br label %return, !dbg !5706

return:                                           ; preds = %if.end68, %if.then45, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !5707
  ret i32 %64, !dbg !5707
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_region_scroll_poll(%struct.bContext* %C) #0 !dbg !5708 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5711, metadata !DIExpression()), !dbg !5712
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5713
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5714
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5712
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !5715, metadata !DIExpression()), !dbg !5716
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5717
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !5718
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !5716
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5719, metadata !DIExpression()), !dbg !5720
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5721
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !5722
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !5720
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5723
  %tobool = icmp ne %struct.SpaceText* %3, null, !dbg !5723
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5725

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5726
  %tobool3 = icmp ne %struct.Text* %4, null, !dbg !5726
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5727

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5728
  br label %return, !dbg !5728

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5729
  %tobool4 = icmp ne %struct.ARegion* %5, null, !dbg !5729
  br i1 %tobool4, label %lor.lhs.false5, label %if.then7, !dbg !5731

lor.lhs.false5:                                   ; preds = %if.end
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5732
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 8, !dbg !5733
  %7 = load i16, i16* %regiontype, align 2, !dbg !5733
  %conv = sext i16 %7 to i32, !dbg !5732
  %cmp = icmp ne i32 %conv, 0, !dbg !5734
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !5735

if.then7:                                         ; preds = %lor.lhs.false5, %if.end
  store i32 0, i32* %retval, align 4, !dbg !5736
  br label %return, !dbg !5736

if.end8:                                          ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !5737
  br label %return, !dbg !5737

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5738
  ret i32 %8, !dbg !5738
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_selection_set(%struct.wmOperatorType* %ot) #0 !dbg !5739 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5740, metadata !DIExpression()), !dbg !5741
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5742
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5743
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i64 0, i64 0), i8** %name, align 8, !dbg !5744
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5745
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5746
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i64 0, i64 0), i8** %idname, align 8, !dbg !5747
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5748
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5749
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0), i8** %description, align 8, !dbg !5750
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5751
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5752
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_set_selection_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5753
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5754
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5755
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_set_selection_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5756
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5757
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !5758
  store void (%struct.bContext*, %struct.wmOperator*)* @text_set_selection_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5759
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5760
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !5761
  store i32 (%struct.bContext*)* @text_region_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5762
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5763
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !5764
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5764
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !5763
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.119, i64 0, i64 0)), !dbg !5765
  ret void, !dbg !5766
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_set_selection_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5767 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ssel = alloca %struct.SetSelection*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5774, metadata !DIExpression()), !dbg !5775
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5776
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5777
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5775
  call void @llvm.dbg.declare(metadata %struct.SetSelection** %ssel, metadata !5778, metadata !DIExpression()), !dbg !5787
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5788
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 6, !dbg !5790
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5788
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5788
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5791
  %txtbar = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 23, !dbg !5792
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar, i32 0, i32 0, !dbg !5793
  %4 = load i32, i32* %xmin, align 8, !dbg !5793
  %cmp = icmp sge i32 %2, %4, !dbg !5794
  br i1 %cmp, label %if.then, label %if.end, !dbg !5795

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !5796
  br label %return, !dbg !5796

if.end:                                           ; preds = %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5797
  %call1 = call i8* %5(i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.201, i64 0, i64 0)), !dbg !5797
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5798
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 5, !dbg !5799
  store i8* %call1, i8** %customdata, align 8, !dbg !5800
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5801
  %customdata2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 5, !dbg !5802
  %8 = load i8*, i8** %customdata2, align 8, !dbg !5802
  %9 = bitcast i8* %8 to %struct.SetSelection*, !dbg !5801
  store %struct.SetSelection* %9, %struct.SetSelection** %ssel, align 8, !dbg !5803
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5804
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !5805
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5805
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i64 0, i64 0)), !dbg !5806
  %12 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !5807
  %selecting = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %12, i32 0, i32 0, !dbg !5808
  store i32 %call3, i32* %selecting, align 4, !dbg !5809
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5810
  %mval4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 6, !dbg !5811
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %mval4, i64 0, i64 0, !dbg !5810
  %14 = load i32, i32* %arrayidx5, align 4, !dbg !5810
  %conv = trunc i32 %14 to i16, !dbg !5810
  %15 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !5812
  %old = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %15, i32 0, i32 3, !dbg !5813
  %arrayidx6 = getelementptr inbounds [2 x i16], [2 x i16]* %old, i64 0, i64 0, !dbg !5812
  store i16 %conv, i16* %arrayidx6, align 4, !dbg !5814
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5815
  %mval7 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 6, !dbg !5816
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %mval7, i64 0, i64 1, !dbg !5815
  %17 = load i32, i32* %arrayidx8, align 4, !dbg !5815
  %conv9 = trunc i32 %17 to i16, !dbg !5815
  %18 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !5817
  %old10 = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %18, i32 0, i32 3, !dbg !5818
  %arrayidx11 = getelementptr inbounds [2 x i16], [2 x i16]* %old10, i64 0, i64 1, !dbg !5817
  store i16 %conv9, i16* %arrayidx11, align 2, !dbg !5819
  %19 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5820
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %19, i32 0, i32 6, !dbg !5821
  %20 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5821
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 4, !dbg !5822
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !5823
  %21 = load i8*, i8** %first, align 8, !dbg !5823
  %22 = bitcast i8* %21 to %struct.TextLine*, !dbg !5820
  %23 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5824
  %text12 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %23, i32 0, i32 6, !dbg !5825
  %24 = load %struct.Text*, %struct.Text** %text12, align 8, !dbg !5825
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 6, !dbg !5826
  %25 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !5826
  %call13 = call i32 @txt_get_span(%struct.TextLine* %22, %struct.TextLine* %25), !dbg !5827
  %26 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !5828
  %sell14 = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %26, i32 0, i32 2, !dbg !5829
  store i32 %call13, i32* %sell14, align 4, !dbg !5830
  %27 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5831
  %text15 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %27, i32 0, i32 6, !dbg !5832
  %28 = load %struct.Text*, %struct.Text** %text15, align 8, !dbg !5832
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 8, !dbg !5833
  %29 = load i32, i32* %selc, align 4, !dbg !5833
  %30 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !5834
  %selc16 = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %30, i32 0, i32 1, !dbg !5835
  store i32 %29, i32* %selc16, align 4, !dbg !5836
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5837
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5838
  %call17 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %31, %struct.wmOperator* %32), !dbg !5839
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5840
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5841
  %35 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5842
  call void @text_cursor_set_apply(%struct.bContext* %33, %struct.wmOperator* %34, %struct.wmEvent* %35), !dbg !5843
  store i32 1, i32* %retval, align 4, !dbg !5844
  br label %return, !dbg !5844

return:                                           ; preds = %if.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !5845
  ret i32 %36, !dbg !5845
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_set_selection_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5846 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5851, metadata !DIExpression()), !dbg !5852
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5853
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !5854
  %1 = load i16, i16* %type, align 8, !dbg !5854
  %conv = sext i16 %1 to i32, !dbg !5853
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb1
  ], !dbg !5855

sw.bb:                                            ; preds = %entry, %entry, %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5856
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5858
  call void @text_cursor_set_exit(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !5859
  store i32 4, i32* %retval, align 4, !dbg !5860
  br label %return, !dbg !5860

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5861
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5862
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5863
  call void @text_cursor_set_apply(%struct.bContext* %4, %struct.wmOperator* %5, %struct.wmEvent* %6), !dbg !5864
  br label %sw.epilog, !dbg !5865

sw.epilog:                                        ; preds = %entry, %sw.bb1
  store i32 1, i32* %retval, align 4, !dbg !5866
  br label %return, !dbg !5866

return:                                           ; preds = %sw.epilog, %sw.bb
  %7 = load i32, i32* %retval, align 4, !dbg !5867
  ret i32 %7, !dbg !5867
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_set_selection_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5868 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5869, metadata !DIExpression()), !dbg !5870
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5873
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5874
  call void @text_cursor_set_exit(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5875
  ret void, !dbg !5876
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_region_edit_poll(%struct.bContext* %C) #0 !dbg !5877 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5878, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5880, metadata !DIExpression()), !dbg !5881
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5882
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5883
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5881
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !5884, metadata !DIExpression()), !dbg !5885
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5886
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !5887
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !5885
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5888, metadata !DIExpression()), !dbg !5889
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5890
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !5891
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !5889
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5892
  %tobool = icmp ne %struct.SpaceText* %3, null, !dbg !5892
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5894

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5895
  %tobool3 = icmp ne %struct.Text* %4, null, !dbg !5895
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5896

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5897
  br label %return, !dbg !5897

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5898
  %tobool4 = icmp ne %struct.ARegion* %5, null, !dbg !5898
  br i1 %tobool4, label %lor.lhs.false5, label %if.then7, !dbg !5900

lor.lhs.false5:                                   ; preds = %if.end
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5901
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 8, !dbg !5902
  %7 = load i16, i16* %regiontype, align 2, !dbg !5902
  %conv = sext i16 %7 to i32, !dbg !5901
  %cmp = icmp ne i32 %conv, 0, !dbg !5903
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !5904

if.then7:                                         ; preds = %lor.lhs.false5, %if.end
  store i32 0, i32* %retval, align 4, !dbg !5905
  br label %return, !dbg !5905

if.end8:                                          ; preds = %lor.lhs.false5
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !5906
  %id = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 0, !dbg !5908
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !5909
  %9 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !5909
  %tobool9 = icmp ne %struct.Library* %9, null, !dbg !5906
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5910

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !5911
  br label %return, !dbg !5911

if.end11:                                         ; preds = %if.end8
  store i32 1, i32* %retval, align 4, !dbg !5913
  br label %return, !dbg !5913

return:                                           ; preds = %if.end11, %if.then10, %if.then7, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5914
  ret i32 %10, !dbg !5914
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_cursor_set(%struct.wmOperatorType* %ot) #0 !dbg !5915 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5916, metadata !DIExpression()), !dbg !5917
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5918
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5919
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i64 0, i64 0), i8** %name, align 8, !dbg !5920
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5921
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5922
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.121, i64 0, i64 0), i8** %idname, align 8, !dbg !5923
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5924
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5925
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.122, i64 0, i64 0), i8** %description, align 8, !dbg !5926
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5927
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5928
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_cursor_set_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5929
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5930
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5931
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_cursor_set_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5932
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5933
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5934
  store i32 (%struct.bContext*)* @text_region_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5935
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5936
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5937
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5937
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5936
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.123, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !5938
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5939
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5940
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5940
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5939
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !5941
  ret void, !dbg !5942
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_cursor_set_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !5943 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5950, metadata !DIExpression()), !dbg !5951
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5952
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5953
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5951
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5954
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 6, !dbg !5956
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5954
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5954
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !5957
  %txtbar = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 23, !dbg !5958
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %txtbar, i32 0, i32 0, !dbg !5959
  %4 = load i32, i32* %xmin, align 8, !dbg !5959
  %cmp = icmp sge i32 %2, %4, !dbg !5960
  br i1 %cmp, label %if.then, label %if.end, !dbg !5961

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !5962
  br label %return, !dbg !5962

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5963
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !5964
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5964
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5965
  %mval1 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 6, !dbg !5966
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 0, !dbg !5965
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !5965
  call void @RNA_int_set(%struct.PointerRNA* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.123, i64 0, i64 0), i32 %8), !dbg !5967
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5968
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !5969
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !5969
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5970
  %mval4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 6, !dbg !5971
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %mval4, i64 0, i64 1, !dbg !5970
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !5970
  call void @RNA_int_set(%struct.PointerRNA* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0), i32 %12), !dbg !5972
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5973
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5974
  %call6 = call i32 @text_cursor_set_exec(%struct.bContext* %13, %struct.wmOperator* %14), !dbg !5975
  store i32 %call6, i32* %retval, align 4, !dbg !5976
  br label %return, !dbg !5976

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !5977
  ret i32 %15, !dbg !5977
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_cursor_set_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5978 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5979, metadata !DIExpression()), !dbg !5980
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !5983, metadata !DIExpression()), !dbg !5984
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5985
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !5986
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !5984
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5987, metadata !DIExpression()), !dbg !5988
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5989
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !5990
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5988
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5991, metadata !DIExpression()), !dbg !5992
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5993
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5994
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5994
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.123, i64 0, i64 0)), !dbg !5995
  store i32 %call2, i32* %x, align 4, !dbg !5992
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5996, metadata !DIExpression()), !dbg !5997
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5998
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !5999
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !5999
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0)), !dbg !6000
  store i32 %call4, i32* %y, align 4, !dbg !5997
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6001
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6002
  %8 = load i32, i32* %x, align 4, !dbg !6003
  %9 = load i32, i32* %y, align 4, !dbg !6004
  call void @text_cursor_set_to_pos(%struct.SpaceText* %6, %struct.ARegion* %7, i32 %8, i32 %9, i8 zeroext 0), !dbg !6005
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6006
  call void @text_update_cursor_moved(%struct.bContext* %10), !dbg !6007
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6008
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6009
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 6, !dbg !6010
  %13 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6010
  %14 = bitcast %struct.Text* %13 to i8*, !dbg !6009
  call void @WM_event_add_notifier(%struct.bContext* %11, i32 204603392, i8* %14), !dbg !6011
  ret i32 8, !dbg !6012
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_line_number(%struct.wmOperatorType* %ot) #0 !dbg !6013 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6016
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6017
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.127, i64 0, i64 0), i8** %name, align 8, !dbg !6018
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6019
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6020
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i64 0, i64 0), i8** %idname, align 8, !dbg !6021
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6022
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6023
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.129, i64 0, i64 0), i8** %description, align 8, !dbg !6024
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6025
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6026
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_line_number_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6027
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6028
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6029
  store i32 (%struct.bContext*)* @text_region_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6030
  ret void, !dbg !6031
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_line_number_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %event) #0 !dbg !2780 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %mval = alloca i32*, align 8
  %time = alloca double, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6034, metadata !DIExpression()), !dbg !6035
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !6038, metadata !DIExpression()), !dbg !6039
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6040
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !6041
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !6039
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6042, metadata !DIExpression()), !dbg !6043
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6044
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !6045
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !6043
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6046, metadata !DIExpression()), !dbg !6047
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6048
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !6049
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !6047
  call void @llvm.dbg.declare(metadata i32** %mval, metadata !6050, metadata !DIExpression()), !dbg !6051
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6052
  %mval3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 6, !dbg !6053
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval3, i64 0, i64 0, !dbg !6052
  store i32* %arraydecay, i32** %mval, align 8, !dbg !6051
  call void @llvm.dbg.declare(metadata double* %time, metadata !6054, metadata !DIExpression()), !dbg !6055
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6056
  call void @text_update_character_width(%struct.SpaceText* %4), !dbg !6057
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6058
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %5, i32 0, i32 15, !dbg !6060
  %6 = load i32, i32* %showlinenrs, align 4, !dbg !6060
  %tobool = icmp ne i32 %6, 0, !dbg !6058
  br i1 %tobool, label %if.end, label %if.then, !dbg !6061

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !6062
  br label %return, !dbg !6062

if.end:                                           ; preds = %entry
  %7 = load i32*, i32** %mval, align 8, !dbg !6063
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !6063
  %8 = load i32, i32* %arrayidx, align 4, !dbg !6063
  %cmp = icmp sgt i32 %8, 2, !dbg !6065
  br i1 %cmp, label %land.lhs.true, label %if.then21, !dbg !6066

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32*, i32** %mval, align 8, !dbg !6067
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 0, !dbg !6067
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !6067
  %11 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6068
  %conv = sext i16 %11 to i32, !dbg !6068
  %conv5 = sitofp i32 %conv to float, !dbg !6068
  %mul = fmul float 5.000000e-01, %conv5, !dbg !6068
  %conv6 = fptosi float %mul to i32, !dbg !6068
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6069
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 12, !dbg !6069
  %13 = load i8, i8* %cwidth, align 2, !dbg !6069
  %conv7 = zext i8 %13 to i32, !dbg !6069
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6069
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %14, i32 0, i32 13, !dbg !6069
  %15 = load i8, i8* %linenrs_tot, align 1, !dbg !6069
  %conv8 = zext i8 %15 to i32, !dbg !6069
  %mul9 = mul nsw i32 %conv7, %conv8, !dbg !6069
  %add = add nsw i32 %conv6, %mul9, !dbg !6070
  %cmp10 = icmp slt i32 %10, %add, !dbg !6071
  br i1 %cmp10, label %land.lhs.true12, label %if.then21, !dbg !6072

land.lhs.true12:                                  ; preds = %land.lhs.true
  %16 = load i32*, i32** %mval, align 8, !dbg !6073
  %arrayidx13 = getelementptr inbounds i32, i32* %16, i64 1, !dbg !6073
  %17 = load i32, i32* %arrayidx13, align 4, !dbg !6073
  %cmp14 = icmp sgt i32 %17, 2, !dbg !6074
  br i1 %cmp14, label %land.lhs.true16, label %if.then21, !dbg !6075

land.lhs.true16:                                  ; preds = %land.lhs.true12
  %18 = load i32*, i32** %mval, align 8, !dbg !6076
  %arrayidx17 = getelementptr inbounds i32, i32* %18, i64 1, !dbg !6076
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !6076
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6077
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 6, !dbg !6078
  %21 = load i16, i16* %winy, align 2, !dbg !6078
  %conv18 = sext i16 %21 to i32, !dbg !6077
  %sub = sub nsw i32 %conv18, 2, !dbg !6079
  %cmp19 = icmp slt i32 %19, %sub, !dbg !6080
  br i1 %cmp19, label %if.end22, label %if.then21, !dbg !6081

if.then21:                                        ; preds = %land.lhs.true16, %land.lhs.true12, %land.lhs.true, %if.end
  store i32 8, i32* %retval, align 4, !dbg !6082
  br label %return, !dbg !6082

if.end22:                                         ; preds = %land.lhs.true16
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6083
  %ascii = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %22, i32 0, i32 8, !dbg !6085
  %23 = load i8, i8* %ascii, align 2, !dbg !6085
  %conv23 = zext i8 %23 to i32, !dbg !6083
  %cmp24 = icmp sge i32 %conv23, 48, !dbg !6086
  br i1 %cmp24, label %land.lhs.true26, label %if.then31, !dbg !6087

land.lhs.true26:                                  ; preds = %if.end22
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6088
  %ascii27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 8, !dbg !6089
  %25 = load i8, i8* %ascii27, align 2, !dbg !6089
  %conv28 = zext i8 %25 to i32, !dbg !6088
  %cmp29 = icmp sle i32 %conv28, 57, !dbg !6090
  br i1 %cmp29, label %if.end32, label %if.then31, !dbg !6091

if.then31:                                        ; preds = %land.lhs.true26, %if.end22
  store i32 8, i32* %retval, align 4, !dbg !6092
  br label %return, !dbg !6092

if.end32:                                         ; preds = %land.lhs.true26
  %call33 = call double @PIL_check_seconds_timer(), !dbg !6093
  store double %call33, double* %time, align 8, !dbg !6094
  %26 = load double, double* @text_line_number_invoke.last_jump, align 8, !dbg !6095
  %27 = load double, double* %time, align 8, !dbg !6097
  %sub34 = fsub double %27, 1.000000e+00, !dbg !6098
  %cmp35 = fcmp olt double %26, %sub34, !dbg !6099
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6100

if.then37:                                        ; preds = %if.end32
  store i32 0, i32* @text_line_number_invoke.jump_to, align 4, !dbg !6101
  br label %if.end38, !dbg !6102

if.end38:                                         ; preds = %if.then37, %if.end32
  %28 = load i32, i32* @text_line_number_invoke.jump_to, align 4, !dbg !6103
  %mul39 = mul nsw i32 %28, 10, !dbg !6103
  store i32 %mul39, i32* @text_line_number_invoke.jump_to, align 4, !dbg !6103
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6104
  %ascii40 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 8, !dbg !6105
  %30 = load i8, i8* %ascii40, align 2, !dbg !6105
  %conv41 = zext i8 %30 to i32, !dbg !6104
  %sub42 = sub nsw i32 %conv41, 48, !dbg !6106
  %31 = load i32, i32* @text_line_number_invoke.jump_to, align 4, !dbg !6107
  %add43 = add nsw i32 %31, %sub42, !dbg !6107
  store i32 %add43, i32* @text_line_number_invoke.jump_to, align 4, !dbg !6107
  %32 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6108
  %33 = load i32, i32* @text_line_number_invoke.jump_to, align 4, !dbg !6109
  %sub44 = sub nsw i32 %33, 1, !dbg !6110
  call void @txt_move_toline(%struct.Text* %32, i32 %sub44, i8 zeroext 0), !dbg !6111
  %34 = load double, double* %time, align 8, !dbg !6112
  store double %34, double* @text_line_number_invoke.last_jump, align 8, !dbg !6113
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6114
  call void @text_update_cursor_moved(%struct.bContext* %35), !dbg !6115
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6116
  %37 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6117
  %38 = bitcast %struct.Text* %37 to i8*, !dbg !6117
  call void @WM_event_add_notifier(%struct.bContext* %36, i32 204603392, i8* %38), !dbg !6118
  store i32 4, i32* %retval, align 4, !dbg !6119
  br label %return, !dbg !6119

return:                                           ; preds = %if.end38, %if.then31, %if.then21, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6120
  ret i32 %39, !dbg !6120
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_insert(%struct.wmOperatorType* %ot) #0 !dbg !6121 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6124, metadata !DIExpression()), !dbg !6125
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6126
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6127
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i64 0, i64 0), i8** %name, align 8, !dbg !6128
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6129
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6130
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.131, i64 0, i64 0), i8** %idname, align 8, !dbg !6131
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6132
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6133
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.132, i64 0, i64 0), i8** %description, align 8, !dbg !6134
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6135
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6136
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_insert_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6137
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6138
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6139
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_insert_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6140
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6141
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6142
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6143
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6144
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6145
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6145
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6144
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.134, i64 0, i64 0)), !dbg !6146
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6147
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6148
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !6149
  ret void, !dbg !6150
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_insert_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6151 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %str = alloca i8*, align 8
  %done = alloca i8, align 1
  %i = alloca i64, align 8
  %code = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6152, metadata !DIExpression()), !dbg !6153
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !6156, metadata !DIExpression()), !dbg !6157
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6158
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !6159
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !6157
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6160, metadata !DIExpression()), !dbg !6161
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6162
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !6163
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !6161
  call void @llvm.dbg.declare(metadata i8** %str, metadata !6164, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.declare(metadata i8* %done, metadata !6166, metadata !DIExpression()), !dbg !6167
  store i8 0, i8* %done, align 1, !dbg !6167
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6168, metadata !DIExpression()), !dbg !6169
  store i64 0, i64* %i, align 8, !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6170, metadata !DIExpression()), !dbg !6171
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6172
  call void @text_drawcache_tag_update(%struct.SpaceText* %2, i32 0), !dbg !6173
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6174
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !6175
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6175
  %call2 = call i8* @RNA_string_get_alloc(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0), i8* null, i32 0), !dbg !6176
  store i8* %call2, i8** %str, align 8, !dbg !6177
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6178
  %tobool = icmp ne %struct.SpaceText* %5, null, !dbg !6178
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6180

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6181
  %overwrite = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 19, !dbg !6182
  %7 = load i16, i16* %overwrite, align 8, !dbg !6182
  %conv = sext i16 %7 to i32, !dbg !6181
  %tobool3 = icmp ne i32 %conv, 0, !dbg !6181
  br i1 %tobool3, label %if.then, label %if.else, !dbg !6183

if.then:                                          ; preds = %land.lhs.true
  br label %while.cond, !dbg !6184

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load i8*, i8** %str, align 8, !dbg !6186
  %9 = load i64, i64* %i, align 8, !dbg !6187
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !6186
  %10 = load i8, i8* %arrayidx, align 1, !dbg !6186
  %tobool4 = icmp ne i8 %10, 0, !dbg !6184
  br i1 %tobool4, label %while.body, label %while.end, !dbg !6184

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %str, align 8, !dbg !6188
  %call5 = call i32 @BLI_str_utf8_as_unicode_step(i8* %11, i64* %i), !dbg !6190
  store i32 %call5, i32* %code, align 4, !dbg !6191
  %12 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6192
  %13 = load i32, i32* %code, align 4, !dbg !6193
  %call6 = call zeroext i8 @txt_replace_char(%struct.Text* %12, i32 %13), !dbg !6194
  %conv7 = zext i8 %call6 to i32, !dbg !6194
  %14 = load i8, i8* %done, align 1, !dbg !6195
  %conv8 = zext i8 %14 to i32, !dbg !6195
  %or = or i32 %conv8, %conv7, !dbg !6195
  %conv9 = trunc i32 %or to i8, !dbg !6195
  store i8 %conv9, i8* %done, align 1, !dbg !6195
  br label %while.cond, !dbg !6184, !llvm.loop !6196

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !6198

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %while.cond10, !dbg !6199

while.cond10:                                     ; preds = %while.body13, %if.else
  %15 = load i8*, i8** %str, align 8, !dbg !6201
  %16 = load i64, i64* %i, align 8, !dbg !6202
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 %16, !dbg !6201
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !6201
  %tobool12 = icmp ne i8 %17, 0, !dbg !6199
  br i1 %tobool12, label %while.body13, label %while.end20, !dbg !6199

while.body13:                                     ; preds = %while.cond10
  %18 = load i8*, i8** %str, align 8, !dbg !6203
  %call14 = call i32 @BLI_str_utf8_as_unicode_step(i8* %18, i64* %i), !dbg !6205
  store i32 %call14, i32* %code, align 4, !dbg !6206
  %19 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6207
  %20 = load i32, i32* %code, align 4, !dbg !6208
  %call15 = call zeroext i8 @txt_add_char(%struct.Text* %19, i32 %20), !dbg !6209
  %conv16 = zext i8 %call15 to i32, !dbg !6209
  %21 = load i8, i8* %done, align 1, !dbg !6210
  %conv17 = zext i8 %21 to i32, !dbg !6210
  %or18 = or i32 %conv17, %conv16, !dbg !6210
  %conv19 = trunc i32 %or18 to i8, !dbg !6210
  store i8 %conv19, i8* %done, align 1, !dbg !6210
  br label %while.cond10, !dbg !6199, !llvm.loop !6211

while.end20:                                      ; preds = %while.cond10
  br label %if.end

if.end:                                           ; preds = %while.end20, %while.end
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6213
  %23 = load i8*, i8** %str, align 8, !dbg !6214
  call void %22(i8* %23), !dbg !6213
  %24 = load i8, i8* %done, align 1, !dbg !6215
  %tobool21 = icmp ne i8 %24, 0, !dbg !6215
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !6217

if.then22:                                        ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !6218
  br label %return, !dbg !6218

if.end23:                                         ; preds = %if.end
  %25 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6219
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %25, i32 0, i32 5, !dbg !6220
  %26 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !6220
  call void @text_update_line_edited(%struct.TextLine* %26), !dbg !6221
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6222
  call void @text_update_cursor_moved(%struct.bContext* %27), !dbg !6223
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6224
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6225
  %30 = bitcast %struct.Text* %29 to i8*, !dbg !6225
  call void @WM_event_add_notifier(%struct.bContext* %28, i32 201326593, i8* %30), !dbg !6226
  store i32 4, i32* %retval, align 4, !dbg !6227
  br label %return, !dbg !6227

return:                                           ; preds = %if.end23, %if.then22
  %31 = load i32, i32* %retval, align 4, !dbg !6228
  ret i32 %31, !dbg !6228
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_insert_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6229 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ret = alloca i32, align 4
  %str = alloca [7 x i8], align 1
  %len = alloca i64, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6232, metadata !DIExpression()), !dbg !6233
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6234, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6236, metadata !DIExpression()), !dbg !6237
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6238
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !6240
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6240
  %call = call i32 @RNA_string_length(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0)), !dbg !6241
  %tobool = icmp ne i32 %call, 0, !dbg !6241
  br i1 %tobool, label %if.end24, label %if.then, !dbg !6242

if.then:                                          ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6243
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 18, !dbg !6246
  %3 = load i16, i16* %ctrl, align 2, !dbg !6246
  %conv = sext i16 %3 to i32, !dbg !6243
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6243
  br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !6247

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6248
  %oskey = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 20, !dbg !6249
  %5 = load i16, i16* %oskey, align 2, !dbg !6249
  %conv2 = sext i16 %5 to i32, !dbg !6248
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !6248
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !6250

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6251
  %utf8_buf = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 7, !dbg !6252
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf, i64 0, i64 0, !dbg !6251
  %7 = load i8, i8* %arrayidx, align 4, !dbg !6251
  %tobool4 = icmp ne i8 %7, 0, !dbg !6251
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !6253

if.then5:                                         ; preds = %land.lhs.true
  store i32 8, i32* %retval, align 4, !dbg !6254
  br label %return, !dbg !6254

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  call void @llvm.dbg.declare(metadata [7 x i8]* %str, metadata !6256, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6259, metadata !DIExpression()), !dbg !6260
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6261
  %utf8_buf6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 7, !dbg !6263
  %arrayidx7 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf6, i64 0, i64 0, !dbg !6261
  %9 = load i8, i8* %arrayidx7, align 4, !dbg !6261
  %tobool8 = icmp ne i8 %9, 0, !dbg !6261
  br i1 %tobool8, label %if.then9, label %if.else16, !dbg !6264

if.then9:                                         ; preds = %if.else
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6265
  %utf8_buf10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 7, !dbg !6267
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf10, i64 0, i64 0, !dbg !6265
  %call11 = call i32 @BLI_str_utf8_size_safe(i8* %arraydecay), !dbg !6268
  %conv12 = sext i32 %call11 to i64, !dbg !6268
  store i64 %conv12, i64* %len, align 8, !dbg !6269
  %arraydecay13 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !6270
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6271
  %utf8_buf14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 7, !dbg !6272
  %arraydecay15 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf14, i64 0, i64 0, !dbg !6270
  %12 = load i64, i64* %len, align 8, !dbg !6273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay13, i8* align 4 %arraydecay15, i64 %12, i1 false), !dbg !6270
  br label %if.end, !dbg !6274

if.else16:                                        ; preds = %if.else
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6275
  %ascii = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 8, !dbg !6277
  %14 = load i8, i8* %ascii, align 2, !dbg !6277
  %conv17 = zext i8 %14 to i32, !dbg !6275
  %arraydecay18 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !6278
  %call19 = call i64 @BLI_str_utf8_from_unicode(i32 %conv17, i8* %arraydecay18), !dbg !6279
  store i64 %call19, i64* %len, align 8, !dbg !6280
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then9
  %15 = load i64, i64* %len, align 8, !dbg !6281
  %arrayidx20 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 %15, !dbg !6282
  store i8 0, i8* %arrayidx20, align 1, !dbg !6283
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6284
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !6285
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !6285
  %arraydecay22 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !6286
  call void @RNA_string_set(%struct.PointerRNA* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i64 0, i64 0), i8* %arraydecay22), !dbg !6287
  br label %if.end23

if.end23:                                         ; preds = %if.end
  br label %if.end24, !dbg !6288

if.end24:                                         ; preds = %if.end23, %entry
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6289
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6290
  %call25 = call i32 @text_insert_exec(%struct.bContext* %18, %struct.wmOperator* %19), !dbg !6291
  store i32 %call25, i32* %ret, align 4, !dbg !6292
  %20 = load i32, i32* %ret, align 4, !dbg !6293
  %cmp = icmp eq i32 %20, 4, !dbg !6295
  br i1 %cmp, label %land.lhs.true27, label %if.end33, !dbg !6296

land.lhs.true27:                                  ; preds = %if.end24
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6297
  %call28 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %21), !dbg !6298
  %live_edit = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %call28, i32 0, i32 20, !dbg !6299
  %22 = load i16, i16* %live_edit, align 2, !dbg !6299
  %conv29 = sext i16 %22 to i32, !dbg !6298
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !6298
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !6300

if.then31:                                        ; preds = %land.lhs.true27
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6301
  %call32 = call i32 @text_run_script(%struct.bContext* %23, %struct.ReportList* null), !dbg !6302
  br label %if.end33, !dbg !6302

if.end33:                                         ; preds = %if.then31, %land.lhs.true27, %if.end24
  %24 = load i32, i32* %ret, align 4, !dbg !6303
  store i32 %24, i32* %retval, align 4, !dbg !6304
  br label %return, !dbg !6304

return:                                           ; preds = %if.end33, %if.then5
  %25 = load i32, i32* %retval, align 4, !dbg !6305
  ret i32 %25, !dbg !6305
}

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_find(%struct.wmOperatorType* %ot) #0 !dbg !6306 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6307, metadata !DIExpression()), !dbg !6308
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6309
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6310
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i64 0, i64 0), i8** %name, align 8, !dbg !6311
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6312
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6313
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.136, i64 0, i64 0), i8** %idname, align 8, !dbg !6314
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6315
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6316
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.137, i64 0, i64 0), i8** %description, align 8, !dbg !6317
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6318
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6319
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_find_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6320
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6321
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6322
  store i32 (%struct.bContext*)* @text_space_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6323
  ret void, !dbg !6324
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_find_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6325 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6330
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6331
  %call = call i32 @text_find_and_replace(%struct.bContext* %0, %struct.wmOperator* %1, i16 signext 0), !dbg !6332
  ret i32 %call, !dbg !6333
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_replace(%struct.wmOperatorType* %ot) #0 !dbg !6334 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6337
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6338
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.138, i64 0, i64 0), i8** %name, align 8, !dbg !6339
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6340
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6341
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0), i8** %idname, align 8, !dbg !6342
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6343
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6344
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.140, i64 0, i64 0), i8** %description, align 8, !dbg !6345
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6346
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6347
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_replace_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6348
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6349
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6350
  store i32 (%struct.bContext*)* @text_space_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_replace_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6353 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6354, metadata !DIExpression()), !dbg !6355
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6356, metadata !DIExpression()), !dbg !6357
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6358
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6359
  %call = call i32 @text_find_and_replace(%struct.bContext* %0, %struct.wmOperator* %1, i16 signext 1), !dbg !6360
  ret i32 %call, !dbg !6361
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_find_set_selected(%struct.wmOperatorType* %ot) #0 !dbg !6362 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6363, metadata !DIExpression()), !dbg !6364
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6365
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6366
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.141, i64 0, i64 0), i8** %name, align 8, !dbg !6367
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6368
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6369
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.142, i64 0, i64 0), i8** %idname, align 8, !dbg !6370
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6371
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6372
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8** %description, align 8, !dbg !6373
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6374
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6375
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_find_set_selected_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6376
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6377
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6378
  store i32 (%struct.bContext*)* @text_space_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6379
  ret void, !dbg !6380
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_find_set_selected_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6381 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %tmp = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6382, metadata !DIExpression()), !dbg !6383
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6384, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !6386, metadata !DIExpression()), !dbg !6387
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6388
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !6389
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !6387
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6390, metadata !DIExpression()), !dbg !6391
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6392
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !6393
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !6391
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !6394, metadata !DIExpression()), !dbg !6395
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6396
  %call2 = call i8* @txt_sel_to_buf(%struct.Text* %2), !dbg !6397
  store i8* %call2, i8** %tmp, align 8, !dbg !6398
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6399
  %findstr = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 26, !dbg !6400
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %findstr, i64 0, i64 0, !dbg !6399
  %4 = load i8*, i8** %tmp, align 8, !dbg !6401
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %4, i64 256), !dbg !6402
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6403
  %6 = load i8*, i8** %tmp, align 8, !dbg !6404
  call void %5(i8* %6), !dbg !6403
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6405
  %findstr4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %7, i32 0, i32 26, !dbg !6407
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %findstr4, i64 0, i64 0, !dbg !6405
  %8 = load i8, i8* %arrayidx, align 8, !dbg !6405
  %tobool = icmp ne i8 %8, 0, !dbg !6405
  br i1 %tobool, label %if.end, label %if.then, !dbg !6408

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !6409
  br label %return, !dbg !6409

if.end:                                           ; preds = %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6410
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6411
  %call5 = call i32 @text_find_and_replace(%struct.bContext* %9, %struct.wmOperator* %10, i16 signext 0), !dbg !6412
  store i32 %call5, i32* %retval, align 4, !dbg !6413
  br label %return, !dbg !6413

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !6414
  ret i32 %11, !dbg !6414
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_replace_set_selected(%struct.wmOperatorType* %ot) #0 !dbg !6415 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6416, metadata !DIExpression()), !dbg !6417
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6418
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6419
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.144, i64 0, i64 0), i8** %name, align 8, !dbg !6420
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6421
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6422
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.145, i64 0, i64 0), i8** %idname, align 8, !dbg !6423
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6424
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6425
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.146, i64 0, i64 0), i8** %description, align 8, !dbg !6426
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6427
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6428
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_replace_set_selected_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6429
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6430
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6431
  store i32 (%struct.bContext*)* @text_space_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6432
  ret void, !dbg !6433
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_replace_set_selected_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6434 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %tmp = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6437, metadata !DIExpression()), !dbg !6438
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !6439, metadata !DIExpression()), !dbg !6440
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6441
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !6442
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !6440
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6443, metadata !DIExpression()), !dbg !6444
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6445
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !6446
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !6444
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !6447, metadata !DIExpression()), !dbg !6448
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6449
  %call2 = call i8* @txt_sel_to_buf(%struct.Text* %2), !dbg !6450
  store i8* %call2, i8** %tmp, align 8, !dbg !6451
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !6452
  %replacestr = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 27, !dbg !6453
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %replacestr, i64 0, i64 0, !dbg !6452
  %4 = load i8*, i8** %tmp, align 8, !dbg !6454
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %4, i64 256), !dbg !6455
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6456
  %6 = load i8*, i8** %tmp, align 8, !dbg !6457
  call void %5(i8* %6), !dbg !6456
  ret i32 4, !dbg !6458
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_resolve_conflict(%struct.wmOperatorType* %ot) #0 !dbg !6459 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6460, metadata !DIExpression()), !dbg !6461
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6462
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6463
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.147, i64 0, i64 0), i8** %name, align 8, !dbg !6464
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6465
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6466
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.148, i64 0, i64 0), i8** %idname, align 8, !dbg !6467
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6468
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6469
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.149, i64 0, i64 0), i8** %description, align 8, !dbg !6470
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6471
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6472
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_resolve_conflict_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6473
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6474
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6475
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @text_resolve_conflict_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6476
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6477
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6478
  store i32 (%struct.bContext*)* @text_save_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6479
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6480
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6481
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6481
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6480
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @resolution_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.152, i64 0, i64 0)), !dbg !6482
  ret void, !dbg !6483
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_resolve_conflict_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6484 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  %resolution = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6489, metadata !DIExpression()), !dbg !6490
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6491
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !6492
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !6490
  call void @llvm.dbg.declare(metadata i32* %resolution, metadata !6493, metadata !DIExpression()), !dbg !6494
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6495
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !6496
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6496
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0)), !dbg !6497
  store i32 %call1, i32* %resolution, align 4, !dbg !6494
  %3 = load i32, i32* %resolution, align 4, !dbg !6498
  switch i32 %3, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb5
    i32 0, label %sw.bb7
  ], !dbg !6499

sw.bb:                                            ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6500
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6502
  %call2 = call i32 @text_reload_exec(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !6503
  store i32 %call2, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

sw.bb3:                                           ; preds = %entry
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6505
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6506
  %call4 = call i32 @text_save_exec(%struct.bContext* %6, %struct.wmOperator* %7), !dbg !6507
  store i32 %call4, i32* %retval, align 4, !dbg !6508
  br label %return, !dbg !6508

sw.bb5:                                           ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6509
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6510
  %call6 = call i32 @text_make_internal_exec(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !6511
  store i32 %call6, i32* %retval, align 4, !dbg !6512
  br label %return, !dbg !6512

sw.bb7:                                           ; preds = %entry
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6513
  call void @BKE_text_file_modified_ignore(%struct.Text* %10), !dbg !6514
  store i32 4, i32* %retval, align 4, !dbg !6515
  br label %return, !dbg !6515

sw.epilog:                                        ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6516
  br label %return, !dbg !6516

return:                                           ; preds = %sw.epilog, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  %11 = load i32, i32* %retval, align 4, !dbg !6517
  ret i32 %11, !dbg !6517
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_resolve_conflict_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !6518 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %text = alloca %struct.Text*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6525, metadata !DIExpression()), !dbg !6526
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6527
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !6528
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !6526
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !6529, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !6535, metadata !DIExpression()), !dbg !6538
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6539
  %call1 = call i32 @BKE_text_file_modified_check(%struct.Text* %1), !dbg !6540
  switch i32 %call1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb11
  ], !dbg !6541

sw.bb:                                            ; preds = %entry
  %2 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6542
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 2, !dbg !6545
  %3 = load i32, i32* %flags, align 8, !dbg !6545
  %and = and i32 %3, 1, !dbg !6546
  %tobool = icmp ne i32 %and, 0, !dbg !6546
  br i1 %tobool, label %if.then, label %if.else, !dbg !6547

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6548
  %call2 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.203, i64 0, i64 0), i32 0), !dbg !6550
  store %struct.uiPopupMenu* %call2, %struct.uiPopupMenu** %pup, align 8, !dbg !6551
  %5 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6552
  %call3 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %5), !dbg !6553
  store %struct.uiLayout* %call3, %struct.uiLayout** %layout, align 8, !dbg !6554
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6555
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6556
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !6557
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6557
  call void @uiItemEnumO_ptr(%struct.uiLayout* %6, %struct.wmOperatorType* %8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.204, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 1), !dbg !6558
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6559
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6560
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 4, !dbg !6561
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !6561
  call void @uiItemEnumO_ptr(%struct.uiLayout* %9, %struct.wmOperatorType* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.205, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 2), !dbg !6562
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6563
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6564
  %type5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 4, !dbg !6565
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type5, align 8, !dbg !6565
  call void @uiItemEnumO_ptr(%struct.uiLayout* %12, %struct.wmOperatorType* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 3), !dbg !6566
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6567
  %16 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6568
  call void @uiPupMenuEnd(%struct.bContext* %15, %struct.uiPopupMenu* %16), !dbg !6569
  br label %if.end, !dbg !6570

if.else:                                          ; preds = %sw.bb
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6571
  %call6 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %17, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.207, i64 0, i64 0), i32 0), !dbg !6573
  store %struct.uiPopupMenu* %call6, %struct.uiPopupMenu** %pup, align 8, !dbg !6574
  %18 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6575
  %call7 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %18), !dbg !6576
  store %struct.uiLayout* %call7, %struct.uiLayout** %layout, align 8, !dbg !6577
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6578
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6579
  %type8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 4, !dbg !6580
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type8, align 8, !dbg !6580
  call void @uiItemEnumO_ptr(%struct.uiLayout* %19, %struct.wmOperatorType* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.208, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 1), !dbg !6581
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6582
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6583
  %type9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 4, !dbg !6584
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type9, align 8, !dbg !6584
  call void @uiItemEnumO_ptr(%struct.uiLayout* %22, %struct.wmOperatorType* %24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.206, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 3), !dbg !6585
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6586
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6587
  %type10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 4, !dbg !6588
  %27 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type10, align 8, !dbg !6588
  call void @uiItemEnumO_ptr(%struct.uiLayout* %25, %struct.wmOperatorType* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 0), !dbg !6589
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6590
  %29 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6591
  call void @uiPupMenuEnd(%struct.bContext* %28, %struct.uiPopupMenu* %29), !dbg !6592
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !6593

sw.bb11:                                          ; preds = %entry
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6594
  %call12 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %30, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i64 0, i64 0), i32 0), !dbg !6595
  store %struct.uiPopupMenu* %call12, %struct.uiPopupMenu** %pup, align 8, !dbg !6596
  %31 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6597
  %call13 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %31), !dbg !6598
  store %struct.uiLayout* %call13, %struct.uiLayout** %layout, align 8, !dbg !6599
  %32 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6600
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6601
  %type14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 4, !dbg !6602
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type14, align 8, !dbg !6602
  call void @uiItemEnumO_ptr(%struct.uiLayout* %32, %struct.wmOperatorType* %34, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.211, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 3), !dbg !6603
  %35 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6604
  %36 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6605
  %type15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %36, i32 0, i32 4, !dbg !6606
  %37 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type15, align 8, !dbg !6606
  call void @uiItemEnumO_ptr(%struct.uiLayout* %35, %struct.wmOperatorType* %37, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.212, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), i32 2), !dbg !6607
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6608
  %39 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !6609
  call void @uiPupMenuEnd(%struct.bContext* %38, %struct.uiPopupMenu* %39), !dbg !6610
  br label %sw.epilog, !dbg !6611

sw.epilog:                                        ; preds = %entry, %sw.bb11, %if.end
  ret i32 32, !dbg !6612
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TEXT_OT_to_3d_object(%struct.wmOperatorType* %ot) #0 !dbg !6613 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6614, metadata !DIExpression()), !dbg !6615
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6616
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6617
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.153, i64 0, i64 0), i8** %name, align 8, !dbg !6618
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6619
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6620
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.154, i64 0, i64 0), i8** %idname, align 8, !dbg !6621
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6622
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6623
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.155, i64 0, i64 0), i8** %description, align 8, !dbg !6624
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6625
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6626
  store i32 (%struct.bContext*, %struct.wmOperator*)* @text_to_3d_object_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6627
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6628
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6629
  store i32 (%struct.bContext*)* @text_edit_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !6630
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6631
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6632
  store i16 3, i16* %flag, align 8, !dbg !6633
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6634
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6635
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6635
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6634
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.156, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.158, i64 0, i64 0)), !dbg !6636
  ret void, !dbg !6637
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_to_3d_object_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6638 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %text = alloca %struct.Text*, align 8
  %split_lines = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6643, metadata !DIExpression()), !dbg !6644
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6645
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !6646
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !6644
  call void @llvm.dbg.declare(metadata i8* %split_lines, metadata !6647, metadata !DIExpression()), !dbg !6648
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6649
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !6650
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6650
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.156, i64 0, i64 0)), !dbg !6651
  %conv = trunc i32 %call1 to i8, !dbg !6651
  store i8 %conv, i8* %split_lines, align 1, !dbg !6648
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6652
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6653
  %5 = load i8, i8* %split_lines, align 1, !dbg !6654
  call void @ED_text_to_object(%struct.bContext* %3, %struct.Text* %4, i8 zeroext %5), !dbg !6655
  ret i32 4, !dbg !6656
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_text_undo_step(%struct.bContext* %C, i32 %step) #0 !dbg !6657 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %step.addr = alloca i32, align 4
  %text = alloca %struct.Text*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6660, metadata !DIExpression()), !dbg !6661
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !6664, metadata !DIExpression()), !dbg !6665
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6666
  %call = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %0), !dbg !6667
  store %struct.Text* %call, %struct.Text** %text, align 8, !dbg !6665
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6668
  %tobool = icmp ne %struct.Text* %1, null, !dbg !6668
  br i1 %tobool, label %if.end, label %if.then, !dbg !6670

if.then:                                          ; preds = %entry
  br label %return, !dbg !6671

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %step.addr, align 4, !dbg !6672
  %cmp = icmp eq i32 %2, 1, !dbg !6674
  br i1 %cmp, label %if.then1, label %if.else, !dbg !6675

if.then1:                                         ; preds = %if.end
  %3 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6676
  call void @txt_do_undo(%struct.Text* %3), !dbg !6677
  br label %if.end5, !dbg !6677

if.else:                                          ; preds = %if.end
  %4 = load i32, i32* %step.addr, align 4, !dbg !6678
  %cmp2 = icmp eq i32 %4, -1, !dbg !6680
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6681

if.then3:                                         ; preds = %if.else
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6682
  call void @txt_do_redo(%struct.Text* %5), !dbg !6683
  br label %if.end4, !dbg !6683

if.end4:                                          ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end4, %if.then1
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6684
  call void @text_update_edited(%struct.Text* %6), !dbg !6685
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6686
  call void @text_update_cursor_moved(%struct.bContext* %7), !dbg !6687
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6688
  %call6 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %8), !dbg !6689
  call void @text_drawcache_tag_update(%struct.SpaceText* %call6, i32 1), !dbg !6690
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6691
  %10 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !6692
  %11 = bitcast %struct.Text* %10 to i8*, !dbg !6692
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 201326593, i8* %11), !dbg !6693
  br label %return, !dbg !6694

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !6694
}

declare dso_local void @txt_do_undo(%struct.Text*) #2

declare dso_local void @txt_do_redo(%struct.Text*) #2

declare dso_local void @text_update_cursor_moved(%struct.bContext*) #2

declare dso_local void @text_drawcache_tag_update(%struct.SpaceText*, i32) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Text* @BKE_text_add(%struct.Main*, i8*) #2

declare dso_local void @uiIDContextProperty(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA**) #2

declare dso_local void @RNA_id_pointer_create(%struct.ID*, %struct.PointerRNA*) #2

declare dso_local void @RNA_property_pointer_set(%struct.PointerRNA*, %struct.PropertyRNA*, %struct.PointerRNA* byval(%struct.PointerRNA) align 8) #2

declare dso_local void @RNA_property_update(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local %struct.Text* @BKE_text_load_ex(%struct.Main*, i8*, i8*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @text_open_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6695 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %pprop = alloca %struct.PropertyPointerRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6696, metadata !DIExpression()), !dbg !6697
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6698, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.declare(metadata %struct.PropertyPointerRNA** %pprop, metadata !6700, metadata !DIExpression()), !dbg !6701
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6702
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.160, i64 0, i64 0)), !dbg !6702
  %1 = bitcast i8* %call to %struct.PropertyPointerRNA*, !dbg !6702
  store %struct.PropertyPointerRNA* %1, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !6703
  %2 = bitcast %struct.PropertyPointerRNA* %1 to i8*, !dbg !6704
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6705
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !6706
  store i8* %2, i8** %customdata, align 8, !dbg !6707
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6708
  %5 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !6709
  %ptr = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %5, i32 0, i32 0, !dbg !6710
  %6 = load %struct.PropertyPointerRNA*, %struct.PropertyPointerRNA** %pprop, align 8, !dbg !6711
  %prop = getelementptr inbounds %struct.PropertyPointerRNA, %struct.PropertyPointerRNA* %6, i32 0, i32 1, !dbg !6712
  call void @uiIDContextProperty(%struct.bContext* %4, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop), !dbg !6713
  ret void, !dbg !6714
}

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local void @WM_event_add_fileselect(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

declare dso_local i32 @BKE_text_reload(%struct.Text*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_screen_clamp(%struct.SpaceText* %st, %struct.ARegion* %ar) #0 !dbg !6715 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %last = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6722
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 7, !dbg !6724
  %1 = load i32, i32* %top, align 8, !dbg !6724
  %cmp = icmp sle i32 %1, 0, !dbg !6725
  br i1 %cmp, label %if.then, label %if.else, !dbg !6726

if.then:                                          ; preds = %entry
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6727
  %top1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 7, !dbg !6729
  store i32 0, i32* %top1, align 8, !dbg !6730
  br label %if.end7, !dbg !6731

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %last, metadata !6732, metadata !DIExpression()), !dbg !6734
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6735
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6736
  %call = call i32 @text_get_total_lines(%struct.SpaceText* %3, %struct.ARegion* %4), !dbg !6737
  store i32 %call, i32* %last, align 4, !dbg !6738
  %5 = load i32, i32* %last, align 4, !dbg !6739
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6740
  %viewlines = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 8, !dbg !6741
  %7 = load i32, i32* %viewlines, align 4, !dbg !6741
  %div = sdiv i32 %7, 2, !dbg !6742
  %sub = sub nsw i32 %5, %div, !dbg !6743
  store i32 %sub, i32* %last, align 4, !dbg !6744
  %8 = load i32, i32* %last, align 4, !dbg !6745
  %cmp2 = icmp sgt i32 %8, 0, !dbg !6747
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !6748

land.lhs.true:                                    ; preds = %if.else
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6749
  %top3 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 7, !dbg !6750
  %10 = load i32, i32* %top3, align 8, !dbg !6750
  %11 = load i32, i32* %last, align 4, !dbg !6751
  %cmp4 = icmp sgt i32 %10, %11, !dbg !6752
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !6753

if.then5:                                         ; preds = %land.lhs.true
  %12 = load i32, i32* %last, align 4, !dbg !6754
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !6756
  %top6 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 7, !dbg !6757
  store i32 %12, i32* %top6, align 8, !dbg !6758
  br label %if.end, !dbg !6759

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !6760
}

declare dso_local void @txt_move_to(%struct.Text*, i32, i32, i8 zeroext) #2

declare dso_local i32 @text_get_total_lines(%struct.SpaceText*, %struct.ARegion*) #2

declare dso_local void @BKE_text_unlink(%struct.Main*, %struct.Text*) #2

declare dso_local void @BKE_libblock_free(%struct.Main*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_write_file(%struct.Text* %text, %struct.ReportList* %reports) #0 !dbg !6761 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  %st = alloca %struct.stat, align 8
  %filepath = alloca [1024 x i8], align 16
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6766, metadata !DIExpression()), !dbg !6767
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !6768, metadata !DIExpression()), !dbg !6769
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !6770, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !6826, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !6864, metadata !DIExpression()), !dbg !6865
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6866
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6867
  %name = getelementptr inbounds %struct.Text, %struct.Text* %0, i32 0, i32 1, !dbg !6868
  %1 = load i8*, i8** %name, align 8, !dbg !6868
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %1, i64 1024), !dbg !6869
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6870
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6871
  %name2 = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 2, !dbg !6872
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name2, i64 0, i64 0, !dbg !6873
  %call4 = call zeroext i8 @BLI_path_abs(i8* %arraydecay1, i8* %arraydecay3), !dbg !6874
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6875
  %call6 = call %struct._IO_FILE* @BLI_fopen(i8* %arraydecay5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.162, i64 0, i64 0)), !dbg !6876
  store %struct._IO_FILE* %call6, %struct._IO_FILE** %fp, align 8, !dbg !6877
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6878
  %cmp = icmp eq %struct._IO_FILE* %3, null, !dbg !6880
  br i1 %cmp, label %if.then, label %if.end, !dbg !6881

if.then:                                          ; preds = %entry
  %4 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6882
  %arraydecay7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6884
  %call8 = call i32* @__errno_location() #8, !dbg !6885
  %5 = load i32, i32* %call8, align 4, !dbg !6885
  %tobool = icmp ne i32 %5, 0, !dbg !6885
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6885

cond.true:                                        ; preds = %if.then
  %call9 = call i32* @__errno_location() #8, !dbg !6886
  %6 = load i32, i32* %call9, align 4, !dbg !6886
  %call10 = call i8* @strerror(i32 %6) #9, !dbg !6887
  br label %cond.end, !dbg !6885

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !6885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call10, %cond.true ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.164, i64 0, i64 0), %cond.false ], !dbg !6885
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %4, i32 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.163, i64 0, i64 0), i8* %arraydecay7, i8* %cond), !dbg !6888
  br label %return, !dbg !6889

if.end:                                           ; preds = %entry
  %7 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6890
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 4, !dbg !6892
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !6893
  %8 = load i8*, i8** %first, align 8, !dbg !6893
  %9 = bitcast i8* %8 to %struct.TextLine*, !dbg !6890
  store %struct.TextLine* %9, %struct.TextLine** %tmp, align 8, !dbg !6894
  br label %for.cond, !dbg !6895

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6896
  %tobool11 = icmp ne %struct.TextLine* %10, null, !dbg !6898
  br i1 %tobool11, label %for.body, label %for.end, !dbg !6898

for.body:                                         ; preds = %for.cond
  %11 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6899
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !6901
  %12 = load i8*, i8** %line, align 8, !dbg !6901
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6902
  %call12 = call i32 @fputs(i8* %12, %struct._IO_FILE* %13), !dbg !6903
  %14 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6904
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 0, !dbg !6906
  %15 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !6906
  %tobool13 = icmp ne %struct.TextLine* %15, null, !dbg !6904
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6907

if.then14:                                        ; preds = %for.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6908
  %call15 = call i32 @fputc(i32 10, %struct._IO_FILE* %16), !dbg !6910
  br label %if.end16, !dbg !6911

if.end16:                                         ; preds = %if.then14, %for.body
  br label %for.inc, !dbg !6912

for.inc:                                          ; preds = %if.end16
  %17 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !6913
  %next17 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %17, i32 0, i32 0, !dbg !6914
  %18 = load %struct.TextLine*, %struct.TextLine** %next17, align 8, !dbg !6914
  store %struct.TextLine* %18, %struct.TextLine** %tmp, align 8, !dbg !6915
  br label %for.cond, !dbg !6916, !llvm.loop !6917

for.end:                                          ; preds = %for.cond
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !6919
  %call18 = call i32 @fclose(%struct._IO_FILE* %19), !dbg !6920
  %arraydecay19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6921
  %call20 = call i32 @BLI_stat(i8* %arraydecay19, %struct.stat* %st), !dbg !6923
  %cmp21 = icmp eq i32 %call20, 0, !dbg !6924
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !6925

if.then22:                                        ; preds = %for.end
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !6926
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !6926
  %20 = load i64, i64* %tv_sec, align 8, !dbg !6926
  %conv = sitofp i64 %20 to double, !dbg !6928
  %21 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6929
  %mtime = getelementptr inbounds %struct.Text, %struct.Text* %21, i32 0, i32 13, !dbg !6930
  store double %conv, double* %mtime, align 8, !dbg !6931
  %22 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6932
  %arraydecay23 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6933
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %22, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.165, i64 0, i64 0), i8* %arraydecay23), !dbg !6934
  br label %if.end34, !dbg !6935

if.else:                                          ; preds = %for.end
  %23 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6936
  %mtime24 = getelementptr inbounds %struct.Text, %struct.Text* %23, i32 0, i32 13, !dbg !6938
  store double 0.000000e+00, double* %mtime24, align 8, !dbg !6939
  %24 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6940
  %arraydecay25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6941
  %call26 = call i32* @__errno_location() #8, !dbg !6942
  %25 = load i32, i32* %call26, align 4, !dbg !6942
  %tobool27 = icmp ne i32 %25, 0, !dbg !6942
  br i1 %tobool27, label %cond.true28, label %cond.false31, !dbg !6942

cond.true28:                                      ; preds = %if.else
  %call29 = call i32* @__errno_location() #8, !dbg !6943
  %26 = load i32, i32* %call29, align 4, !dbg !6943
  %call30 = call i8* @strerror(i32 %26) #9, !dbg !6944
  br label %cond.end32, !dbg !6942

cond.false31:                                     ; preds = %if.else
  br label %cond.end32, !dbg !6942

cond.end32:                                       ; preds = %cond.false31, %cond.true28
  %cond33 = phi i8* [ %call30, %cond.true28 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.167, i64 0, i64 0), %cond.false31 ], !dbg !6942
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %24, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.166, i64 0, i64 0), i8* %arraydecay25, i8* %cond33), !dbg !6945
  br label %if.end34

if.end34:                                         ; preds = %cond.end32, %if.then22
  %27 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6946
  %flags = getelementptr inbounds %struct.Text, %struct.Text* %27, i32 0, i32 2, !dbg !6947
  %28 = load i32, i32* %flags, align 8, !dbg !6948
  %and = and i32 %28, -2, !dbg !6948
  store i32 %and, i32* %flags, align 8, !dbg !6948
  br label %return, !dbg !6949

return:                                           ; preds = %if.end34, %cond.end
  ret void, !dbg !6949
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local zeroext i8 @BLI_path_abs(i8*, i8*) #2

declare dso_local %struct._IO_FILE* @BLI_fopen(i8*, i8*) #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #3

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #4

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

declare dso_local i32 @BLI_stat(i8*, %struct.stat*) #2

declare dso_local i8* @BLI_strdup(i8*) #2

declare dso_local i8* @WM_clipboard_text_get(i8 zeroext, i32*) #2

declare dso_local void @txt_insert_buf(%struct.Text*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_run_script(%struct.bContext* %C, %struct.ReportList* %reports) #0 !dbg !6950 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !6955, metadata !DIExpression()), !dbg !6956
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6957
  %1 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6958
  ret i32 2, !dbg !6959
}

declare dso_local void @txt_duplicate_line(%struct.Text*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_copy_clipboard(%struct.Text* %text) #0 !dbg !6960 {
entry:
  %text.addr = alloca %struct.Text*, align 8
  %buf = alloca i8*, align 8
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6963, metadata !DIExpression()), !dbg !6964
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6965
  %call = call i8* @txt_copy_selected(%struct.Text* %0), !dbg !6966
  store i8* %call, i8** %buf, align 8, !dbg !6967
  %1 = load i8*, i8** %buf, align 8, !dbg !6968
  %tobool = icmp ne i8* %1, null, !dbg !6968
  br i1 %tobool, label %if.then, label %if.end, !dbg !6970

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %buf, align 8, !dbg !6971
  call void @WM_clipboard_text_set(i8* %2, i8 zeroext 0), !dbg !6973
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6974
  %4 = load i8*, i8** %buf, align 8, !dbg !6975
  call void %3(i8* %4), !dbg !6974
  br label %if.end, !dbg !6976

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6977
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @txt_copy_selected(%struct.Text* %text) #0 !dbg !6978 {
entry:
  %retval = alloca i8*, align 8
  %text.addr = alloca %struct.Text*, align 8
  %tmp = alloca %struct.TextLine*, align 8
  %linef = alloca %struct.TextLine*, align 8
  %linel = alloca %struct.TextLine*, align 8
  %buf = alloca i8*, align 8
  %charf = alloca i32, align 4
  %charl = alloca i32, align 4
  %length = alloca i32, align 4
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !6981, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.declare(metadata %struct.TextLine** %tmp, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linef, metadata !6985, metadata !DIExpression()), !dbg !6986
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linel, metadata !6987, metadata !DIExpression()), !dbg !6988
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6989, metadata !DIExpression()), !dbg !6990
  store i8* null, i8** %buf, align 8, !dbg !6990
  call void @llvm.dbg.declare(metadata i32* %charf, metadata !6991, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %charl, metadata !6993, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.declare(metadata i32* %length, metadata !6995, metadata !DIExpression()), !dbg !6996
  store i32 0, i32* %length, align 4, !dbg !6996
  %0 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !6997
  %tobool = icmp ne %struct.Text* %0, null, !dbg !6997
  br i1 %tobool, label %if.end, label %if.then, !dbg !6999

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7000
  br label %return, !dbg !7000

if.end:                                           ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7001
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %1, i32 0, i32 5, !dbg !7003
  %2 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !7003
  %tobool1 = icmp ne %struct.TextLine* %2, null, !dbg !7001
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7004

if.then2:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !7005
  br label %return, !dbg !7005

if.end3:                                          ; preds = %if.end
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7006
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 6, !dbg !7008
  %4 = load %struct.TextLine*, %struct.TextLine** %sell, align 8, !dbg !7008
  %tobool4 = icmp ne %struct.TextLine* %4, null, !dbg !7006
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7009

if.then5:                                         ; preds = %if.end3
  store i8* null, i8** %retval, align 8, !dbg !7010
  br label %return, !dbg !7010

if.end6:                                          ; preds = %if.end3
  %5 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7011
  %call = call zeroext i8 @txt_has_sel(%struct.Text* %5), !dbg !7013
  %tobool7 = icmp ne i8 %call, 0, !dbg !7013
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !7014

if.then8:                                         ; preds = %if.end6
  store i8* null, i8** %retval, align 8, !dbg !7015
  br label %return, !dbg !7015

if.end9:                                          ; preds = %if.end6
  %6 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7016
  %curl10 = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !7018
  %7 = load %struct.TextLine*, %struct.TextLine** %curl10, align 8, !dbg !7018
  %8 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7019
  %sell11 = getelementptr inbounds %struct.Text, %struct.Text* %8, i32 0, i32 6, !dbg !7020
  %9 = load %struct.TextLine*, %struct.TextLine** %sell11, align 8, !dbg !7020
  %cmp = icmp eq %struct.TextLine* %7, %9, !dbg !7021
  br i1 %cmp, label %if.then12, label %if.else21, !dbg !7022

if.then12:                                        ; preds = %if.end9
  %10 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7023
  %curl13 = getelementptr inbounds %struct.Text, %struct.Text* %10, i32 0, i32 5, !dbg !7025
  %11 = load %struct.TextLine*, %struct.TextLine** %curl13, align 8, !dbg !7025
  store %struct.TextLine* %11, %struct.TextLine** %linel, align 8, !dbg !7026
  store %struct.TextLine* %11, %struct.TextLine** %linef, align 8, !dbg !7027
  %12 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7028
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %12, i32 0, i32 7, !dbg !7030
  %13 = load i32, i32* %curc, align 8, !dbg !7030
  %14 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7031
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %14, i32 0, i32 8, !dbg !7032
  %15 = load i32, i32* %selc, align 4, !dbg !7032
  %cmp14 = icmp slt i32 %13, %15, !dbg !7033
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !7034

if.then15:                                        ; preds = %if.then12
  %16 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7035
  %curc16 = getelementptr inbounds %struct.Text, %struct.Text* %16, i32 0, i32 7, !dbg !7037
  %17 = load i32, i32* %curc16, align 8, !dbg !7037
  store i32 %17, i32* %charf, align 4, !dbg !7038
  %18 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7039
  %selc17 = getelementptr inbounds %struct.Text, %struct.Text* %18, i32 0, i32 8, !dbg !7040
  %19 = load i32, i32* %selc17, align 4, !dbg !7040
  store i32 %19, i32* %charl, align 4, !dbg !7041
  br label %if.end20, !dbg !7042

if.else:                                          ; preds = %if.then12
  %20 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7043
  %selc18 = getelementptr inbounds %struct.Text, %struct.Text* %20, i32 0, i32 8, !dbg !7045
  %21 = load i32, i32* %selc18, align 4, !dbg !7045
  store i32 %21, i32* %charf, align 4, !dbg !7046
  %22 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7047
  %curc19 = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 7, !dbg !7048
  %23 = load i32, i32* %curc19, align 8, !dbg !7048
  store i32 %23, i32* %charl, align 4, !dbg !7049
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then15
  br label %if.end37, !dbg !7050

if.else21:                                        ; preds = %if.end9
  %24 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7051
  %curl22 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 5, !dbg !7053
  %25 = load %struct.TextLine*, %struct.TextLine** %curl22, align 8, !dbg !7053
  %26 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7054
  %sell23 = getelementptr inbounds %struct.Text, %struct.Text* %26, i32 0, i32 6, !dbg !7055
  %27 = load %struct.TextLine*, %struct.TextLine** %sell23, align 8, !dbg !7055
  %call24 = call i32 @txt_get_span(%struct.TextLine* %25, %struct.TextLine* %27), !dbg !7056
  %cmp25 = icmp slt i32 %call24, 0, !dbg !7057
  br i1 %cmp25, label %if.then26, label %if.else31, !dbg !7058

if.then26:                                        ; preds = %if.else21
  %28 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7059
  %sell27 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 6, !dbg !7061
  %29 = load %struct.TextLine*, %struct.TextLine** %sell27, align 8, !dbg !7061
  store %struct.TextLine* %29, %struct.TextLine** %linef, align 8, !dbg !7062
  %30 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7063
  %curl28 = getelementptr inbounds %struct.Text, %struct.Text* %30, i32 0, i32 5, !dbg !7064
  %31 = load %struct.TextLine*, %struct.TextLine** %curl28, align 8, !dbg !7064
  store %struct.TextLine* %31, %struct.TextLine** %linel, align 8, !dbg !7065
  %32 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7066
  %selc29 = getelementptr inbounds %struct.Text, %struct.Text* %32, i32 0, i32 8, !dbg !7067
  %33 = load i32, i32* %selc29, align 4, !dbg !7067
  store i32 %33, i32* %charf, align 4, !dbg !7068
  %34 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7069
  %curc30 = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 7, !dbg !7070
  %35 = load i32, i32* %curc30, align 8, !dbg !7070
  store i32 %35, i32* %charl, align 4, !dbg !7071
  br label %if.end36, !dbg !7072

if.else31:                                        ; preds = %if.else21
  %36 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7073
  %curl32 = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 5, !dbg !7075
  %37 = load %struct.TextLine*, %struct.TextLine** %curl32, align 8, !dbg !7075
  store %struct.TextLine* %37, %struct.TextLine** %linef, align 8, !dbg !7076
  %38 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7077
  %sell33 = getelementptr inbounds %struct.Text, %struct.Text* %38, i32 0, i32 6, !dbg !7078
  %39 = load %struct.TextLine*, %struct.TextLine** %sell33, align 8, !dbg !7078
  store %struct.TextLine* %39, %struct.TextLine** %linel, align 8, !dbg !7079
  %40 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7080
  %curc34 = getelementptr inbounds %struct.Text, %struct.Text* %40, i32 0, i32 7, !dbg !7081
  %41 = load i32, i32* %curc34, align 8, !dbg !7081
  store i32 %41, i32* %charf, align 4, !dbg !7082
  %42 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !7083
  %selc35 = getelementptr inbounds %struct.Text, %struct.Text* %42, i32 0, i32 8, !dbg !7084
  %43 = load i32, i32* %selc35, align 4, !dbg !7084
  store i32 %43, i32* %charl, align 4, !dbg !7085
  br label %if.end36

if.end36:                                         ; preds = %if.else31, %if.then26
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end20
  %44 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7086
  %45 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !7088
  %cmp38 = icmp eq %struct.TextLine* %44, %45, !dbg !7089
  br i1 %cmp38, label %if.then39, label %if.else44, !dbg !7090

if.then39:                                        ; preds = %if.end37
  %46 = load i32, i32* %charl, align 4, !dbg !7091
  %47 = load i32, i32* %charf, align 4, !dbg !7093
  %sub = sub nsw i32 %46, %47, !dbg !7094
  store i32 %sub, i32* %length, align 4, !dbg !7095
  %48 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7096
  %49 = load i32, i32* %length, align 4, !dbg !7097
  %add = add nsw i32 %49, 1, !dbg !7098
  %conv = sext i32 %add to i64, !dbg !7097
  %call40 = call i8* %48(i64 %conv, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i64 0, i64 0)), !dbg !7096
  store i8* %call40, i8** %buf, align 8, !dbg !7099
  %50 = load i8*, i8** %buf, align 8, !dbg !7100
  %51 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7101
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 2, !dbg !7102
  %52 = load i8*, i8** %line, align 8, !dbg !7102
  %53 = load i32, i32* %charf, align 4, !dbg !7103
  %idx.ext = sext i32 %53 to i64, !dbg !7104
  %add.ptr = getelementptr inbounds i8, i8* %52, i64 %idx.ext, !dbg !7104
  %54 = load i32, i32* %length, align 4, !dbg !7105
  %add41 = add nsw i32 %54, 1, !dbg !7106
  %conv42 = sext i32 %add41 to i64, !dbg !7105
  %call43 = call i8* @BLI_strncpy(i8* %50, i8* %add.ptr, i64 %conv42), !dbg !7107
  br label %if.end97, !dbg !7108

if.else44:                                        ; preds = %if.end37
  %55 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7109
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %55, i32 0, i32 4, !dbg !7111
  %56 = load i32, i32* %len, align 8, !dbg !7111
  %57 = load i32, i32* %charf, align 4, !dbg !7112
  %sub45 = sub nsw i32 %56, %57, !dbg !7113
  %58 = load i32, i32* %length, align 4, !dbg !7114
  %add46 = add nsw i32 %58, %sub45, !dbg !7114
  store i32 %add46, i32* %length, align 4, !dbg !7114
  %59 = load i32, i32* %charl, align 4, !dbg !7115
  %60 = load i32, i32* %length, align 4, !dbg !7116
  %add47 = add nsw i32 %60, %59, !dbg !7116
  store i32 %add47, i32* %length, align 4, !dbg !7116
  %61 = load i32, i32* %length, align 4, !dbg !7117
  %inc = add nsw i32 %61, 1, !dbg !7117
  store i32 %inc, i32* %length, align 4, !dbg !7117
  %62 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7118
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %62, i32 0, i32 0, !dbg !7119
  %63 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !7119
  store %struct.TextLine* %63, %struct.TextLine** %tmp, align 8, !dbg !7120
  br label %while.cond, !dbg !7121

while.cond:                                       ; preds = %while.body, %if.else44
  %64 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7122
  %tobool48 = icmp ne %struct.TextLine* %64, null, !dbg !7122
  br i1 %tobool48, label %land.rhs, label %land.end, !dbg !7123

land.rhs:                                         ; preds = %while.cond
  %65 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7124
  %66 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !7125
  %cmp49 = icmp ne %struct.TextLine* %65, %66, !dbg !7126
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %67 = phi i1 [ false, %while.cond ], [ %cmp49, %land.rhs ], !dbg !7127
  br i1 %67, label %while.body, label %while.end, !dbg !7121

while.body:                                       ; preds = %land.end
  %68 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7128
  %len51 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %68, i32 0, i32 4, !dbg !7130
  %69 = load i32, i32* %len51, align 8, !dbg !7130
  %add52 = add nsw i32 %69, 1, !dbg !7131
  %70 = load i32, i32* %length, align 4, !dbg !7132
  %add53 = add nsw i32 %70, %add52, !dbg !7132
  store i32 %add53, i32* %length, align 4, !dbg !7132
  %71 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7133
  %next54 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %71, i32 0, i32 0, !dbg !7134
  %72 = load %struct.TextLine*, %struct.TextLine** %next54, align 8, !dbg !7134
  store %struct.TextLine* %72, %struct.TextLine** %tmp, align 8, !dbg !7135
  br label %while.cond, !dbg !7121, !llvm.loop !7136

while.end:                                        ; preds = %land.end
  %73 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7138
  %74 = load i32, i32* %length, align 4, !dbg !7139
  %add55 = add nsw i32 %74, 1, !dbg !7140
  %conv56 = sext i32 %add55 to i64, !dbg !7139
  %call57 = call i8* %73(i64 %conv56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.170, i64 0, i64 0)), !dbg !7138
  store i8* %call57, i8** %buf, align 8, !dbg !7141
  %75 = load i8*, i8** %buf, align 8, !dbg !7142
  %76 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7143
  %line58 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %76, i32 0, i32 2, !dbg !7144
  %77 = load i8*, i8** %line58, align 8, !dbg !7144
  %78 = load i32, i32* %charf, align 4, !dbg !7145
  %idx.ext59 = sext i32 %78 to i64, !dbg !7146
  %add.ptr60 = getelementptr inbounds i8, i8* %77, i64 %idx.ext59, !dbg !7146
  %79 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7147
  %len61 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %79, i32 0, i32 4, !dbg !7148
  %80 = load i32, i32* %len61, align 8, !dbg !7148
  %81 = load i32, i32* %charf, align 4, !dbg !7149
  %sub62 = sub nsw i32 %80, %81, !dbg !7150
  %conv63 = sext i32 %sub62 to i64, !dbg !7147
  %call64 = call i8* @strncpy(i8* %75, i8* %add.ptr60, i64 %conv63) #9, !dbg !7151
  %82 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7152
  %len65 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %82, i32 0, i32 4, !dbg !7153
  %83 = load i32, i32* %len65, align 8, !dbg !7153
  %84 = load i32, i32* %charf, align 4, !dbg !7154
  %sub66 = sub nsw i32 %83, %84, !dbg !7155
  store i32 %sub66, i32* %length, align 4, !dbg !7156
  %85 = load i8*, i8** %buf, align 8, !dbg !7157
  %86 = load i32, i32* %length, align 4, !dbg !7158
  %inc67 = add nsw i32 %86, 1, !dbg !7158
  store i32 %inc67, i32* %length, align 4, !dbg !7158
  %idxprom = sext i32 %86 to i64, !dbg !7157
  %arrayidx = getelementptr inbounds i8, i8* %85, i64 %idxprom, !dbg !7157
  store i8 10, i8* %arrayidx, align 1, !dbg !7159
  %87 = load %struct.TextLine*, %struct.TextLine** %linef, align 8, !dbg !7160
  %next68 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %87, i32 0, i32 0, !dbg !7161
  %88 = load %struct.TextLine*, %struct.TextLine** %next68, align 8, !dbg !7161
  store %struct.TextLine* %88, %struct.TextLine** %tmp, align 8, !dbg !7162
  br label %while.cond69, !dbg !7163

while.cond69:                                     ; preds = %while.body75, %while.end
  %89 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7164
  %tobool70 = icmp ne %struct.TextLine* %89, null, !dbg !7164
  br i1 %tobool70, label %land.rhs71, label %land.end74, !dbg !7165

land.rhs71:                                       ; preds = %while.cond69
  %90 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7166
  %91 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !7167
  %cmp72 = icmp ne %struct.TextLine* %90, %91, !dbg !7168
  br label %land.end74

land.end74:                                       ; preds = %land.rhs71, %while.cond69
  %92 = phi i1 [ false, %while.cond69 ], [ %cmp72, %land.rhs71 ], !dbg !7127
  br i1 %92, label %while.body75, label %while.end88, !dbg !7163

while.body75:                                     ; preds = %land.end74
  %93 = load i8*, i8** %buf, align 8, !dbg !7169
  %94 = load i32, i32* %length, align 4, !dbg !7171
  %idx.ext76 = sext i32 %94 to i64, !dbg !7172
  %add.ptr77 = getelementptr inbounds i8, i8* %93, i64 %idx.ext76, !dbg !7172
  %95 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7173
  %line78 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %95, i32 0, i32 2, !dbg !7174
  %96 = load i8*, i8** %line78, align 8, !dbg !7174
  %97 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7175
  %len79 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %97, i32 0, i32 4, !dbg !7176
  %98 = load i32, i32* %len79, align 8, !dbg !7176
  %conv80 = sext i32 %98 to i64, !dbg !7175
  %call81 = call i8* @strncpy(i8* %add.ptr77, i8* %96, i64 %conv80) #9, !dbg !7177
  %99 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7178
  %len82 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %99, i32 0, i32 4, !dbg !7179
  %100 = load i32, i32* %len82, align 8, !dbg !7179
  %101 = load i32, i32* %length, align 4, !dbg !7180
  %add83 = add nsw i32 %101, %100, !dbg !7180
  store i32 %add83, i32* %length, align 4, !dbg !7180
  %102 = load i8*, i8** %buf, align 8, !dbg !7181
  %103 = load i32, i32* %length, align 4, !dbg !7182
  %inc84 = add nsw i32 %103, 1, !dbg !7182
  store i32 %inc84, i32* %length, align 4, !dbg !7182
  %idxprom85 = sext i32 %103 to i64, !dbg !7181
  %arrayidx86 = getelementptr inbounds i8, i8* %102, i64 %idxprom85, !dbg !7181
  store i8 10, i8* %arrayidx86, align 1, !dbg !7183
  %104 = load %struct.TextLine*, %struct.TextLine** %tmp, align 8, !dbg !7184
  %next87 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %104, i32 0, i32 0, !dbg !7185
  %105 = load %struct.TextLine*, %struct.TextLine** %next87, align 8, !dbg !7185
  store %struct.TextLine* %105, %struct.TextLine** %tmp, align 8, !dbg !7186
  br label %while.cond69, !dbg !7163, !llvm.loop !7187

while.end88:                                      ; preds = %land.end74
  %106 = load i8*, i8** %buf, align 8, !dbg !7189
  %107 = load i32, i32* %length, align 4, !dbg !7190
  %idx.ext89 = sext i32 %107 to i64, !dbg !7191
  %add.ptr90 = getelementptr inbounds i8, i8* %106, i64 %idx.ext89, !dbg !7191
  %108 = load %struct.TextLine*, %struct.TextLine** %linel, align 8, !dbg !7192
  %line91 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %108, i32 0, i32 2, !dbg !7193
  %109 = load i8*, i8** %line91, align 8, !dbg !7193
  %110 = load i32, i32* %charl, align 4, !dbg !7194
  %conv92 = sext i32 %110 to i64, !dbg !7194
  %call93 = call i8* @strncpy(i8* %add.ptr90, i8* %109, i64 %conv92) #9, !dbg !7195
  %111 = load i32, i32* %charl, align 4, !dbg !7196
  %112 = load i32, i32* %length, align 4, !dbg !7197
  %add94 = add nsw i32 %112, %111, !dbg !7197
  store i32 %add94, i32* %length, align 4, !dbg !7197
  %113 = load i8*, i8** %buf, align 8, !dbg !7198
  %114 = load i32, i32* %length, align 4, !dbg !7199
  %idxprom95 = sext i32 %114 to i64, !dbg !7198
  %arrayidx96 = getelementptr inbounds i8, i8* %113, i64 %idxprom95, !dbg !7198
  store i8 0, i8* %arrayidx96, align 1, !dbg !7200
  br label %if.end97

if.end97:                                         ; preds = %while.end88, %if.then39
  %115 = load i8*, i8** %buf, align 8, !dbg !7201
  store i8* %115, i8** %retval, align 8, !dbg !7202
  br label %return, !dbg !7202

return:                                           ; preds = %if.end97, %if.then8, %if.then5, %if.then2, %if.then
  %116 = load i8*, i8** %retval, align 8, !dbg !7203
  ret i8* %116, !dbg !7203
}

declare dso_local void @WM_clipboard_text_set(i8*, i8 zeroext) #2

declare dso_local zeroext i8 @txt_has_sel(%struct.Text*) #2

declare dso_local i32 @txt_get_span(%struct.TextLine*, %struct.TextLine*) #2

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #4

declare dso_local void @txt_delete_selected(%struct.Text*) #2

declare dso_local void @txt_order_cursors(%struct.Text*, i8 zeroext) #2

declare dso_local void @txt_indent(%struct.Text*) #2

declare dso_local zeroext i8 @txt_add_char(%struct.Text*, i32) #2

declare dso_local void @txt_unindent(%struct.Text*) #2

declare dso_local i32 @txt_setcurr_tab_spaces(%struct.Text*, i32) #2

declare dso_local void @txt_split_curline(%struct.Text*) #2

declare dso_local void @txt_comment(%struct.Text*) #2

declare dso_local void @txt_uncomment(%struct.Text*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @flatten_string(%struct.SpaceText*, %struct.FlattenString*, i8*) #2

declare dso_local void @flatten_string_free(%struct.FlattenString*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

declare dso_local void @txt_sel_all(%struct.Text*) #2

declare dso_local void @txt_sel_line(%struct.Text*) #2

declare dso_local void @txt_jump_left(%struct.Text*, i8 zeroext, i8 zeroext) #2

declare dso_local void @txt_jump_right(%struct.Text*, i8 zeroext, i8 zeroext) #2

declare dso_local void @txt_move_lines(%struct.Text*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_move_cursor(%struct.bContext* %C, i32 %type, i8 zeroext %select) #0 !dbg !7204 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %type.addr = alloca i32, align 4
  %select.addr = alloca i8, align 1
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7207, metadata !DIExpression()), !dbg !7208
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7209, metadata !DIExpression()), !dbg !7210
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !7213, metadata !DIExpression()), !dbg !7214
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7215
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !7216
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !7214
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !7217, metadata !DIExpression()), !dbg !7218
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7219
  %call1 = call %struct.Text* @CTX_data_edit_text(%struct.bContext* %1), !dbg !7220
  store %struct.Text* %call1, %struct.Text** %text, align 8, !dbg !7218
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7221, metadata !DIExpression()), !dbg !7222
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7223
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !7224
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !7222
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7225
  %tobool = icmp ne %struct.ARegion* %3, null, !dbg !7225
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7227

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7228
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 8, !dbg !7229
  %5 = load i16, i16* %regiontype, align 2, !dbg !7229
  %conv = sext i16 %5 to i32, !dbg !7228
  %cmp = icmp ne i32 %conv, 0, !dbg !7230
  br i1 %cmp, label %if.then, label %if.end, !dbg !7231

if.then:                                          ; preds = %land.lhs.true
  store %struct.ARegion* null, %struct.ARegion** %ar, align 8, !dbg !7232
  br label %if.end, !dbg !7233

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i32, i32* %type.addr, align 4, !dbg !7234
  switch i32 %6, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb27
    i32 3, label %sw.bb28
    i32 6, label %sw.bb29
    i32 7, label %sw.bb34
    i32 4, label %sw.bb39
    i32 5, label %sw.bb48
    i32 8, label %sw.bb57
    i32 9, label %sw.bb67
    i32 10, label %sw.bb77
    i32 11, label %sw.bb83
  ], !dbg !7235

sw.bb:                                            ; preds = %if.end
  %7 = load i8, i8* %select.addr, align 1, !dbg !7236
  %tobool4 = icmp ne i8 %7, 0, !dbg !7236
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7239

if.then5:                                         ; preds = %sw.bb
  %8 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7240
  call void @txt_sel_clear(%struct.Text* %8), !dbg !7242
  br label %if.end6, !dbg !7243

if.end6:                                          ; preds = %if.then5, %sw.bb
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7244
  %tobool7 = icmp ne %struct.SpaceText* %9, null, !dbg !7244
  br i1 %tobool7, label %land.lhs.true8, label %if.else, !dbg !7246

land.lhs.true8:                                   ; preds = %if.end6
  %10 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7247
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %10, i32 0, i32 24, !dbg !7248
  %11 = load i32, i32* %wordwrap, align 8, !dbg !7248
  %tobool9 = icmp ne i32 %11, 0, !dbg !7247
  br i1 %tobool9, label %land.lhs.true10, label %if.else, !dbg !7249

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %12 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7250
  %tobool11 = icmp ne %struct.ARegion* %12, null, !dbg !7250
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !7251

if.then12:                                        ; preds = %land.lhs.true10
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7252
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7253
  %15 = load i8, i8* %select.addr, align 1, !dbg !7254
  call void @txt_wrap_move_bol(%struct.SpaceText* %13, %struct.ARegion* %14, i8 zeroext %15), !dbg !7255
  br label %if.end13, !dbg !7255

if.else:                                          ; preds = %land.lhs.true10, %land.lhs.true8, %if.end6
  %16 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7256
  %17 = load i8, i8* %select.addr, align 1, !dbg !7257
  call void @txt_move_bol(%struct.Text* %16, i8 zeroext %17), !dbg !7258
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  br label %sw.epilog, !dbg !7259

sw.bb14:                                          ; preds = %if.end
  %18 = load i8, i8* %select.addr, align 1, !dbg !7260
  %tobool15 = icmp ne i8 %18, 0, !dbg !7260
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !7262

if.then16:                                        ; preds = %sw.bb14
  %19 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7263
  call void @txt_sel_clear(%struct.Text* %19), !dbg !7265
  br label %if.end17, !dbg !7266

if.end17:                                         ; preds = %if.then16, %sw.bb14
  %20 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7267
  %tobool18 = icmp ne %struct.SpaceText* %20, null, !dbg !7267
  br i1 %tobool18, label %land.lhs.true19, label %if.else25, !dbg !7269

land.lhs.true19:                                  ; preds = %if.end17
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7270
  %wordwrap20 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %21, i32 0, i32 24, !dbg !7271
  %22 = load i32, i32* %wordwrap20, align 8, !dbg !7271
  %tobool21 = icmp ne i32 %22, 0, !dbg !7270
  br i1 %tobool21, label %land.lhs.true22, label %if.else25, !dbg !7272

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7273
  %tobool23 = icmp ne %struct.ARegion* %23, null, !dbg !7273
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !7274

if.then24:                                        ; preds = %land.lhs.true22
  %24 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7275
  %25 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7276
  %26 = load i8, i8* %select.addr, align 1, !dbg !7277
  call void @txt_wrap_move_eol(%struct.SpaceText* %24, %struct.ARegion* %25, i8 zeroext %26), !dbg !7278
  br label %if.end26, !dbg !7278

if.else25:                                        ; preds = %land.lhs.true22, %land.lhs.true19, %if.end17
  %27 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7279
  %28 = load i8, i8* %select.addr, align 1, !dbg !7280
  call void @txt_move_eol(%struct.Text* %27, i8 zeroext %28), !dbg !7281
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  br label %sw.epilog, !dbg !7282

sw.bb27:                                          ; preds = %if.end
  %29 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7283
  %30 = load i8, i8* %select.addr, align 1, !dbg !7284
  call void @txt_move_bof(%struct.Text* %29, i8 zeroext %30), !dbg !7285
  br label %sw.epilog, !dbg !7286

sw.bb28:                                          ; preds = %if.end
  %31 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7287
  %32 = load i8, i8* %select.addr, align 1, !dbg !7288
  call void @txt_move_eof(%struct.Text* %31, i8 zeroext %32), !dbg !7289
  br label %sw.epilog, !dbg !7290

sw.bb29:                                          ; preds = %if.end
  %33 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7291
  %call30 = call zeroext i8 @txt_cursor_is_line_start(%struct.Text* %33), !dbg !7293
  %tobool31 = icmp ne i8 %call30, 0, !dbg !7293
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !7294

if.then32:                                        ; preds = %sw.bb29
  %34 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7295
  %35 = load i8, i8* %select.addr, align 1, !dbg !7297
  call void @txt_move_left(%struct.Text* %34, i8 zeroext %35), !dbg !7298
  br label %if.end33, !dbg !7299

if.end33:                                         ; preds = %if.then32, %sw.bb29
  %36 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7300
  %37 = load i8, i8* %select.addr, align 1, !dbg !7301
  call void @txt_jump_left(%struct.Text* %36, i8 zeroext %37, i8 zeroext 1), !dbg !7302
  br label %sw.epilog, !dbg !7303

sw.bb34:                                          ; preds = %if.end
  %38 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7304
  %call35 = call zeroext i8 @txt_cursor_is_line_end(%struct.Text* %38), !dbg !7306
  %tobool36 = icmp ne i8 %call35, 0, !dbg !7306
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !7307

if.then37:                                        ; preds = %sw.bb34
  %39 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7308
  %40 = load i8, i8* %select.addr, align 1, !dbg !7310
  call void @txt_move_right(%struct.Text* %39, i8 zeroext %40), !dbg !7311
  br label %if.end38, !dbg !7312

if.end38:                                         ; preds = %if.then37, %sw.bb34
  %41 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7313
  %42 = load i8, i8* %select.addr, align 1, !dbg !7314
  call void @txt_jump_right(%struct.Text* %41, i8 zeroext %42, i8 zeroext 1), !dbg !7315
  br label %sw.epilog, !dbg !7316

sw.bb39:                                          ; preds = %if.end
  %43 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7317
  %call40 = call zeroext i8 @txt_has_sel(%struct.Text* %43), !dbg !7319
  %conv41 = zext i8 %call40 to i32, !dbg !7319
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !7319
  br i1 %tobool42, label %land.lhs.true43, label %if.else46, !dbg !7320

land.lhs.true43:                                  ; preds = %sw.bb39
  %44 = load i8, i8* %select.addr, align 1, !dbg !7321
  %tobool44 = icmp ne i8 %44, 0, !dbg !7321
  br i1 %tobool44, label %if.else46, label %if.then45, !dbg !7322

if.then45:                                        ; preds = %land.lhs.true43
  %45 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7323
  call void @txt_order_cursors(%struct.Text* %45, i8 zeroext 0), !dbg !7325
  %46 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7326
  call void @txt_pop_sel(%struct.Text* %46), !dbg !7327
  br label %if.end47, !dbg !7328

if.else46:                                        ; preds = %land.lhs.true43, %sw.bb39
  %47 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7329
  %48 = load i8, i8* %select.addr, align 1, !dbg !7331
  call void @txt_move_left(%struct.Text* %47, i8 zeroext %48), !dbg !7332
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.then45
  br label %sw.epilog, !dbg !7333

sw.bb48:                                          ; preds = %if.end
  %49 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7334
  %call49 = call zeroext i8 @txt_has_sel(%struct.Text* %49), !dbg !7336
  %conv50 = zext i8 %call49 to i32, !dbg !7336
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !7336
  br i1 %tobool51, label %land.lhs.true52, label %if.else55, !dbg !7337

land.lhs.true52:                                  ; preds = %sw.bb48
  %50 = load i8, i8* %select.addr, align 1, !dbg !7338
  %tobool53 = icmp ne i8 %50, 0, !dbg !7338
  br i1 %tobool53, label %if.else55, label %if.then54, !dbg !7339

if.then54:                                        ; preds = %land.lhs.true52
  %51 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7340
  call void @txt_order_cursors(%struct.Text* %51, i8 zeroext 1), !dbg !7342
  %52 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7343
  call void @txt_pop_sel(%struct.Text* %52), !dbg !7344
  br label %if.end56, !dbg !7345

if.else55:                                        ; preds = %land.lhs.true52, %sw.bb48
  %53 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7346
  %54 = load i8, i8* %select.addr, align 1, !dbg !7348
  call void @txt_move_right(%struct.Text* %53, i8 zeroext %54), !dbg !7349
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %sw.epilog, !dbg !7350

sw.bb57:                                          ; preds = %if.end
  %55 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7351
  %tobool58 = icmp ne %struct.SpaceText* %55, null, !dbg !7351
  br i1 %tobool58, label %land.lhs.true59, label %if.else65, !dbg !7353

land.lhs.true59:                                  ; preds = %sw.bb57
  %56 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7354
  %wordwrap60 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %56, i32 0, i32 24, !dbg !7355
  %57 = load i32, i32* %wordwrap60, align 8, !dbg !7355
  %tobool61 = icmp ne i32 %57, 0, !dbg !7354
  br i1 %tobool61, label %land.lhs.true62, label %if.else65, !dbg !7356

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %58 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7357
  %tobool63 = icmp ne %struct.ARegion* %58, null, !dbg !7357
  br i1 %tobool63, label %if.then64, label %if.else65, !dbg !7358

if.then64:                                        ; preds = %land.lhs.true62
  %59 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7359
  %60 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7360
  %61 = load i8, i8* %select.addr, align 1, !dbg !7361
  call void @txt_wrap_move_up(%struct.SpaceText* %59, %struct.ARegion* %60, i8 zeroext %61), !dbg !7362
  br label %if.end66, !dbg !7362

if.else65:                                        ; preds = %land.lhs.true62, %land.lhs.true59, %sw.bb57
  %62 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7363
  %63 = load i8, i8* %select.addr, align 1, !dbg !7364
  call void @txt_move_up(%struct.Text* %62, i8 zeroext %63), !dbg !7365
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %sw.epilog, !dbg !7366

sw.bb67:                                          ; preds = %if.end
  %64 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7367
  %tobool68 = icmp ne %struct.SpaceText* %64, null, !dbg !7367
  br i1 %tobool68, label %land.lhs.true69, label %if.else75, !dbg !7369

land.lhs.true69:                                  ; preds = %sw.bb67
  %65 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7370
  %wordwrap70 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %65, i32 0, i32 24, !dbg !7371
  %66 = load i32, i32* %wordwrap70, align 8, !dbg !7371
  %tobool71 = icmp ne i32 %66, 0, !dbg !7370
  br i1 %tobool71, label %land.lhs.true72, label %if.else75, !dbg !7372

land.lhs.true72:                                  ; preds = %land.lhs.true69
  %67 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7373
  %tobool73 = icmp ne %struct.ARegion* %67, null, !dbg !7373
  br i1 %tobool73, label %if.then74, label %if.else75, !dbg !7374

if.then74:                                        ; preds = %land.lhs.true72
  %68 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7375
  %69 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7376
  %70 = load i8, i8* %select.addr, align 1, !dbg !7377
  call void @txt_wrap_move_down(%struct.SpaceText* %68, %struct.ARegion* %69, i8 zeroext %70), !dbg !7378
  br label %if.end76, !dbg !7378

if.else75:                                        ; preds = %land.lhs.true72, %land.lhs.true69, %sw.bb67
  %71 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7379
  %72 = load i8, i8* %select.addr, align 1, !dbg !7380
  call void @txt_move_down(%struct.Text* %71, i8 zeroext %72), !dbg !7381
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %sw.epilog, !dbg !7382

sw.bb77:                                          ; preds = %if.end
  %73 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7383
  %tobool78 = icmp ne %struct.SpaceText* %73, null, !dbg !7383
  br i1 %tobool78, label %if.then79, label %if.else81, !dbg !7385

if.then79:                                        ; preds = %sw.bb77
  %74 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7386
  %75 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7387
  %76 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7388
  %text80 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %76, i32 0, i32 6, !dbg !7389
  %77 = load %struct.Text*, %struct.Text** %text80, align 8, !dbg !7389
  %78 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7390
  %viewlines = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %78, i32 0, i32 8, !dbg !7391
  %79 = load i32, i32* %viewlines, align 4, !dbg !7391
  %sub = sub nsw i32 0, %79, !dbg !7392
  %80 = load i8, i8* %select.addr, align 1, !dbg !7393
  call void @cursor_skip(%struct.SpaceText* %74, %struct.ARegion* %75, %struct.Text* %77, i32 %sub, i8 zeroext %80), !dbg !7394
  br label %if.end82, !dbg !7394

if.else81:                                        ; preds = %sw.bb77
  %81 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7395
  %82 = load i8, i8* %select.addr, align 1, !dbg !7396
  call void @cursor_skip(%struct.SpaceText* null, %struct.ARegion* null, %struct.Text* %81, i32 -10, i8 zeroext %82), !dbg !7397
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then79
  br label %sw.epilog, !dbg !7398

sw.bb83:                                          ; preds = %if.end
  %83 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7399
  %tobool84 = icmp ne %struct.SpaceText* %83, null, !dbg !7399
  br i1 %tobool84, label %if.then85, label %if.else88, !dbg !7401

if.then85:                                        ; preds = %sw.bb83
  %84 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7402
  %85 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7403
  %86 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7404
  %text86 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %86, i32 0, i32 6, !dbg !7405
  %87 = load %struct.Text*, %struct.Text** %text86, align 8, !dbg !7405
  %88 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !7406
  %viewlines87 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %88, i32 0, i32 8, !dbg !7407
  %89 = load i32, i32* %viewlines87, align 4, !dbg !7407
  %90 = load i8, i8* %select.addr, align 1, !dbg !7408
  call void @cursor_skip(%struct.SpaceText* %84, %struct.ARegion* %85, %struct.Text* %87, i32 %89, i8 zeroext %90), !dbg !7409
  br label %if.end89, !dbg !7409

if.else88:                                        ; preds = %sw.bb83
  %91 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7410
  %92 = load i8, i8* %select.addr, align 1, !dbg !7411
  call void @cursor_skip(%struct.SpaceText* null, %struct.ARegion* null, %struct.Text* %91, i32 10, i8 zeroext %92), !dbg !7412
  br label %if.end89

if.end89:                                         ; preds = %if.else88, %if.then85
  br label %sw.epilog, !dbg !7413

sw.epilog:                                        ; preds = %if.end, %if.end89, %if.end82, %if.end76, %if.end66, %if.end56, %if.end47, %if.end38, %if.end33, %sw.bb28, %sw.bb27, %if.end26, %if.end13
  %93 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7414
  call void @text_update_cursor_moved(%struct.bContext* %93), !dbg !7415
  %94 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7416
  %95 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7417
  %96 = bitcast %struct.Text* %95 to i8*, !dbg !7417
  call void @WM_event_add_notifier(%struct.bContext* %94, i32 204603392, i8* %96), !dbg !7418
  ret i32 4, !dbg !7419
}

declare dso_local void @txt_sel_clear(%struct.Text*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_wrap_move_bol(%struct.SpaceText* %st, %struct.ARegion* %ar, i8 zeroext %sel) #0 !dbg !7420 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %sel.addr = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %oldc = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %endj = alloca i32, align 4
  %chop = alloca i32, align 4
  %loop = alloca i32, align 4
  %ch = alloca i8, align 1
  %chars = alloca i32, align 4
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !7423, metadata !DIExpression()), !dbg !7424
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !7429, metadata !DIExpression()), !dbg !7430
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7431
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !7432
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !7432
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !7430
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !7433, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.declare(metadata i32* %oldc, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7440, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7442, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7444, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7448, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.declare(metadata i32* %endj, metadata !7450, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !7456, metadata !DIExpression()), !dbg !7457
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7458
  call void @text_update_character_width(%struct.SpaceText* %2), !dbg !7459
  %3 = load i8, i8* %sel.addr, align 1, !dbg !7460
  %tobool = icmp ne i8 %3, 0, !dbg !7460
  br i1 %tobool, label %if.then, label %if.else, !dbg !7462

if.then:                                          ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7463
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 6, !dbg !7465
  store %struct.TextLine** %sell, %struct.TextLine*** %linep, align 8, !dbg !7466
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7467
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 8, !dbg !7468
  store i32* %selc, i32** %charp, align 8, !dbg !7469
  br label %if.end, !dbg !7470

if.else:                                          ; preds = %entry
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7471
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !7473
  store %struct.TextLine** %curl, %struct.TextLine*** %linep, align 8, !dbg !7474
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7475
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !7476
  store i32* %curc, i32** %charp, align 8, !dbg !7477
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32*, i32** %charp, align 8, !dbg !7478
  %9 = load i32, i32* %8, align 4, !dbg !7479
  store i32 %9, i32* %oldc, align 4, !dbg !7480
  %10 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7481
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7482
  %call = call i32 @wrap_width(%struct.SpaceText* %10, %struct.ARegion* %11), !dbg !7483
  store i32 %call, i32* %max, align 4, !dbg !7484
  store i32 0, i32* %endj, align 4, !dbg !7485
  store i32 0, i32* %start, align 4, !dbg !7486
  %12 = load i32, i32* %max, align 4, !dbg !7487
  store i32 %12, i32* %end, align 4, !dbg !7488
  store i32 1, i32* %loop, align 4, !dbg !7489
  store i32 1, i32* %chop, align 4, !dbg !7490
  %13 = load i32*, i32** %charp, align 8, !dbg !7491
  store i32 0, i32* %13, align 4, !dbg !7492
  store i32 0, i32* %i, align 4, !dbg !7493
  store i32 0, i32* %j, align 4, !dbg !7495
  br label %for.cond, !dbg !7496

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %loop, align 4, !dbg !7497
  %tobool2 = icmp ne i32 %14, 0, !dbg !7499
  br i1 %tobool2, label %for.body, label %for.end, !dbg !7499

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !7500, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !7503, metadata !DIExpression()), !dbg !7504
  %15 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7505
  %16 = load %struct.TextLine*, %struct.TextLine** %15, align 8, !dbg !7506
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 2, !dbg !7507
  %17 = load i8*, i8** %line, align 8, !dbg !7507
  %18 = load i32, i32* %j, align 4, !dbg !7508
  %idx.ext = sext i32 %18 to i64, !dbg !7509
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !7509
  %call3 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !7510
  store i32 %call3, i32* %columns, align 4, !dbg !7504
  %19 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7511
  %20 = load %struct.TextLine*, %struct.TextLine** %19, align 8, !dbg !7512
  %line4 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 2, !dbg !7513
  %21 = load i8*, i8** %line4, align 8, !dbg !7513
  %22 = load i32, i32* %j, align 4, !dbg !7514
  %idxprom = sext i32 %22 to i64, !dbg !7515
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %idxprom, !dbg !7515
  %23 = load i8, i8* %arrayidx, align 1, !dbg !7515
  store i8 %23, i8* %ch, align 1, !dbg !7516
  %24 = load i8, i8* %ch, align 1, !dbg !7517
  %conv = zext i8 %24 to i32, !dbg !7517
  %cmp = icmp eq i32 %conv, 9, !dbg !7519
  br i1 %cmp, label %if.then6, label %if.else8, !dbg !7520

if.then6:                                         ; preds = %for.body
  %25 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7521
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %25, i32 0, i32 16, !dbg !7523
  %26 = load i32, i32* %tabnumber, align 8, !dbg !7523
  %27 = load i32, i32* %i, align 4, !dbg !7524
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7525
  %tabnumber7 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %28, i32 0, i32 16, !dbg !7526
  %29 = load i32, i32* %tabnumber7, align 8, !dbg !7526
  %rem = srem i32 %27, %29, !dbg !7527
  %sub = sub nsw i32 %26, %rem, !dbg !7528
  store i32 %sub, i32* %chars, align 4, !dbg !7529
  store i8 32, i8* %ch, align 1, !dbg !7530
  br label %if.end9, !dbg !7531

if.else8:                                         ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !7532
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then6
  br label %while.cond, !dbg !7534

while.cond:                                       ; preds = %if.end53, %if.end9
  %30 = load i32, i32* %chars, align 4, !dbg !7535
  %dec = add nsw i32 %30, -1, !dbg !7535
  store i32 %dec, i32* %chars, align 4, !dbg !7535
  %tobool10 = icmp ne i32 %30, 0, !dbg !7534
  br i1 %tobool10, label %while.body, label %while.end, !dbg !7534

while.body:                                       ; preds = %while.cond
  %31 = load i32, i32* %i, align 4, !dbg !7536
  %32 = load i32, i32* %columns, align 4, !dbg !7539
  %add = add nsw i32 %31, %32, !dbg !7540
  %33 = load i32, i32* %start, align 4, !dbg !7541
  %sub11 = sub nsw i32 %add, %33, !dbg !7542
  %34 = load i32, i32* %max, align 4, !dbg !7543
  %cmp12 = icmp sgt i32 %sub11, %34, !dbg !7544
  br i1 %cmp12, label %if.then14, label %if.else32, !dbg !7545

if.then14:                                        ; preds = %while.body
  %35 = load i32, i32* %end, align 4, !dbg !7546
  %36 = load i32, i32* %i, align 4, !dbg !7546
  %cmp15 = icmp slt i32 %35, %36, !dbg !7546
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7546

cond.true:                                        ; preds = %if.then14
  %37 = load i32, i32* %end, align 4, !dbg !7546
  br label %cond.end, !dbg !7546

cond.false:                                       ; preds = %if.then14
  %38 = load i32, i32* %i, align 4, !dbg !7546
  br label %cond.end, !dbg !7546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %37, %cond.true ], [ %38, %cond.false ], !dbg !7546
  store i32 %cond, i32* %end, align 4, !dbg !7548
  %39 = load i32, i32* %endj, align 4, !dbg !7549
  %40 = load i32*, i32** %charp, align 8, !dbg !7550
  store i32 %39, i32* %40, align 4, !dbg !7551
  %41 = load i32, i32* %j, align 4, !dbg !7552
  %42 = load i32, i32* %oldc, align 4, !dbg !7554
  %cmp17 = icmp sge i32 %41, %42, !dbg !7555
  br i1 %cmp17, label %if.then19, label %if.end27, !dbg !7556

if.then19:                                        ; preds = %cond.end
  %43 = load i8, i8* %ch, align 1, !dbg !7557
  %conv20 = zext i8 %43 to i32, !dbg !7557
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !7560
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !7561

if.then23:                                        ; preds = %if.then19
  %44 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7562
  %45 = load %struct.TextLine*, %struct.TextLine** %44, align 8, !dbg !7563
  %line24 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 2, !dbg !7564
  %46 = load i8*, i8** %line24, align 8, !dbg !7564
  %47 = load i32, i32* %start, align 4, !dbg !7565
  %call25 = call i32 @txt_utf8_column_to_offset(i8* %46, i32 %47), !dbg !7566
  %48 = load i32*, i32** %charp, align 8, !dbg !7567
  store i32 %call25, i32* %48, align 4, !dbg !7568
  br label %if.end26, !dbg !7569

if.end26:                                         ; preds = %if.then23, %if.then19
  store i32 0, i32* %loop, align 4, !dbg !7570
  br label %while.end, !dbg !7571

if.end27:                                         ; preds = %cond.end
  %49 = load i32, i32* %chop, align 4, !dbg !7572
  %tobool28 = icmp ne i32 %49, 0, !dbg !7572
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !7574

if.then29:                                        ; preds = %if.end27
  %50 = load i32, i32* %j, align 4, !dbg !7575
  store i32 %50, i32* %endj, align 4, !dbg !7576
  br label %if.end30, !dbg !7577

if.end30:                                         ; preds = %if.then29, %if.end27
  %51 = load i32, i32* %end, align 4, !dbg !7578
  store i32 %51, i32* %start, align 4, !dbg !7579
  %52 = load i32, i32* %max, align 4, !dbg !7580
  %53 = load i32, i32* %end, align 4, !dbg !7581
  %add31 = add nsw i32 %53, %52, !dbg !7581
  store i32 %add31, i32* %end, align 4, !dbg !7581
  store i32 1, i32* %chop, align 4, !dbg !7582
  br label %if.end53, !dbg !7583

if.else32:                                        ; preds = %while.body
  %54 = load i8, i8* %ch, align 1, !dbg !7584
  %conv33 = zext i8 %54 to i32, !dbg !7584
  %cmp34 = icmp eq i32 %conv33, 32, !dbg !7586
  br i1 %cmp34, label %if.then43, label %lor.lhs.false, !dbg !7587

lor.lhs.false:                                    ; preds = %if.else32
  %55 = load i8, i8* %ch, align 1, !dbg !7588
  %conv36 = zext i8 %55 to i32, !dbg !7588
  %cmp37 = icmp eq i32 %conv36, 45, !dbg !7589
  br i1 %cmp37, label %if.then43, label %lor.lhs.false39, !dbg !7590

lor.lhs.false39:                                  ; preds = %lor.lhs.false
  %56 = load i8, i8* %ch, align 1, !dbg !7591
  %conv40 = zext i8 %56 to i32, !dbg !7591
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !7592
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !7593

if.then43:                                        ; preds = %lor.lhs.false39, %lor.lhs.false, %if.else32
  %57 = load i32, i32* %j, align 4, !dbg !7594
  %58 = load i32, i32* %oldc, align 4, !dbg !7597
  %cmp44 = icmp sge i32 %57, %58, !dbg !7598
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !7599

if.then46:                                        ; preds = %if.then43
  %59 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7600
  %60 = load %struct.TextLine*, %struct.TextLine** %59, align 8, !dbg !7602
  %line47 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %60, i32 0, i32 2, !dbg !7603
  %61 = load i8*, i8** %line47, align 8, !dbg !7603
  %62 = load i32, i32* %start, align 4, !dbg !7604
  %call48 = call i32 @txt_utf8_column_to_offset(i8* %61, i32 %62), !dbg !7605
  %63 = load i32*, i32** %charp, align 8, !dbg !7606
  store i32 %call48, i32* %63, align 4, !dbg !7607
  store i32 0, i32* %loop, align 4, !dbg !7608
  br label %while.end, !dbg !7609

if.end49:                                         ; preds = %if.then43
  %64 = load i32, i32* %i, align 4, !dbg !7610
  %add50 = add nsw i32 %64, 1, !dbg !7611
  store i32 %add50, i32* %end, align 4, !dbg !7612
  %65 = load i32, i32* %j, align 4, !dbg !7613
  %add51 = add nsw i32 %65, 1, !dbg !7614
  store i32 %add51, i32* %endj, align 4, !dbg !7615
  store i32 0, i32* %chop, align 4, !dbg !7616
  br label %if.end52, !dbg !7617

if.end52:                                         ; preds = %if.end49, %lor.lhs.false39
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end30
  %66 = load i32, i32* %columns, align 4, !dbg !7618
  %67 = load i32, i32* %i, align 4, !dbg !7619
  %add54 = add nsw i32 %67, %66, !dbg !7619
  store i32 %add54, i32* %i, align 4, !dbg !7619
  br label %while.cond, !dbg !7534, !llvm.loop !7620

while.end:                                        ; preds = %if.then46, %if.end26, %while.cond
  br label %for.inc, !dbg !7622

for.inc:                                          ; preds = %while.end
  %68 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7623
  %69 = load %struct.TextLine*, %struct.TextLine** %68, align 8, !dbg !7624
  %line55 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %69, i32 0, i32 2, !dbg !7625
  %70 = load i8*, i8** %line55, align 8, !dbg !7625
  %71 = load i32, i32* %j, align 4, !dbg !7626
  %idx.ext56 = sext i32 %71 to i64, !dbg !7627
  %add.ptr57 = getelementptr inbounds i8, i8* %70, i64 %idx.ext56, !dbg !7627
  %call58 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr57), !dbg !7628
  %72 = load i32, i32* %j, align 4, !dbg !7629
  %add59 = add nsw i32 %72, %call58, !dbg !7629
  store i32 %add59, i32* %j, align 4, !dbg !7629
  br label %for.cond, !dbg !7630, !llvm.loop !7631

for.end:                                          ; preds = %for.cond
  %73 = load i8, i8* %sel.addr, align 1, !dbg !7633
  %tobool60 = icmp ne i8 %73, 0, !dbg !7633
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !7635

if.then61:                                        ; preds = %for.end
  %74 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7636
  call void @txt_pop_sel(%struct.Text* %74), !dbg !7637
  br label %if.end62, !dbg !7637

if.end62:                                         ; preds = %if.then61, %for.end
  ret void, !dbg !7638
}

declare dso_local void @txt_move_bol(%struct.Text*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_wrap_move_eol(%struct.SpaceText* %st, %struct.ARegion* %ar, i8 zeroext %sel) #0 !dbg !7639 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %sel.addr = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %oldc = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %endj = alloca i32, align 4
  %chop = alloca i32, align 4
  %loop = alloca i32, align 4
  %ch = alloca i8, align 1
  %chars = alloca i32, align 4
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !7646, metadata !DIExpression()), !dbg !7647
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7648
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !7649
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !7649
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !7647
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !7650, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !7652, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.declare(metadata i32* %oldc, metadata !7654, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.declare(metadata i32* %endj, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !7668, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !7670, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !7672, metadata !DIExpression()), !dbg !7673
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7674
  call void @text_update_character_width(%struct.SpaceText* %2), !dbg !7675
  %3 = load i8, i8* %sel.addr, align 1, !dbg !7676
  %tobool = icmp ne i8 %3, 0, !dbg !7676
  br i1 %tobool, label %if.then, label %if.else, !dbg !7678

if.then:                                          ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7679
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 6, !dbg !7681
  store %struct.TextLine** %sell, %struct.TextLine*** %linep, align 8, !dbg !7682
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7683
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 8, !dbg !7684
  store i32* %selc, i32** %charp, align 8, !dbg !7685
  br label %if.end, !dbg !7686

if.else:                                          ; preds = %entry
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7687
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !7689
  store %struct.TextLine** %curl, %struct.TextLine*** %linep, align 8, !dbg !7690
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7691
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !7692
  store i32* %curc, i32** %charp, align 8, !dbg !7693
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32*, i32** %charp, align 8, !dbg !7694
  %9 = load i32, i32* %8, align 4, !dbg !7695
  store i32 %9, i32* %oldc, align 4, !dbg !7696
  %10 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7697
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7698
  %call = call i32 @wrap_width(%struct.SpaceText* %10, %struct.ARegion* %11), !dbg !7699
  store i32 %call, i32* %max, align 4, !dbg !7700
  store i32 0, i32* %endj, align 4, !dbg !7701
  store i32 0, i32* %start, align 4, !dbg !7702
  %12 = load i32, i32* %max, align 4, !dbg !7703
  store i32 %12, i32* %end, align 4, !dbg !7704
  store i32 1, i32* %loop, align 4, !dbg !7705
  store i32 1, i32* %chop, align 4, !dbg !7706
  %13 = load i32*, i32** %charp, align 8, !dbg !7707
  store i32 0, i32* %13, align 4, !dbg !7708
  store i32 0, i32* %i, align 4, !dbg !7709
  store i32 0, i32* %j, align 4, !dbg !7711
  br label %for.cond, !dbg !7712

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %loop, align 4, !dbg !7713
  %tobool2 = icmp ne i32 %14, 0, !dbg !7715
  br i1 %tobool2, label %for.body, label %for.end, !dbg !7715

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !7716, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !7719, metadata !DIExpression()), !dbg !7720
  %15 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7721
  %16 = load %struct.TextLine*, %struct.TextLine** %15, align 8, !dbg !7722
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 2, !dbg !7723
  %17 = load i8*, i8** %line, align 8, !dbg !7723
  %18 = load i32, i32* %j, align 4, !dbg !7724
  %idx.ext = sext i32 %18 to i64, !dbg !7725
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !7725
  %call3 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !7726
  store i32 %call3, i32* %columns, align 4, !dbg !7720
  %19 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7727
  %20 = load %struct.TextLine*, %struct.TextLine** %19, align 8, !dbg !7728
  %line4 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 2, !dbg !7729
  %21 = load i8*, i8** %line4, align 8, !dbg !7729
  %22 = load i32, i32* %j, align 4, !dbg !7730
  %idxprom = sext i32 %22 to i64, !dbg !7731
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %idxprom, !dbg !7731
  %23 = load i8, i8* %arrayidx, align 1, !dbg !7731
  store i8 %23, i8* %ch, align 1, !dbg !7732
  %24 = load i8, i8* %ch, align 1, !dbg !7733
  %conv = zext i8 %24 to i32, !dbg !7733
  %cmp = icmp eq i32 %conv, 9, !dbg !7735
  br i1 %cmp, label %if.then6, label %if.else8, !dbg !7736

if.then6:                                         ; preds = %for.body
  %25 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7737
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %25, i32 0, i32 16, !dbg !7739
  %26 = load i32, i32* %tabnumber, align 8, !dbg !7739
  %27 = load i32, i32* %i, align 4, !dbg !7740
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7741
  %tabnumber7 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %28, i32 0, i32 16, !dbg !7742
  %29 = load i32, i32* %tabnumber7, align 8, !dbg !7742
  %rem = srem i32 %27, %29, !dbg !7743
  %sub = sub nsw i32 %26, %rem, !dbg !7744
  store i32 %sub, i32* %chars, align 4, !dbg !7745
  store i8 32, i8* %ch, align 1, !dbg !7746
  br label %if.end9, !dbg !7747

if.else8:                                         ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !7748
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then6
  br label %while.cond, !dbg !7750

while.cond:                                       ; preds = %if.end54, %if.end9
  %30 = load i32, i32* %chars, align 4, !dbg !7751
  %dec = add nsw i32 %30, -1, !dbg !7751
  store i32 %dec, i32* %chars, align 4, !dbg !7751
  %tobool10 = icmp ne i32 %30, 0, !dbg !7750
  br i1 %tobool10, label %while.body, label %while.end, !dbg !7750

while.body:                                       ; preds = %while.cond
  %31 = load i32, i32* %i, align 4, !dbg !7752
  %32 = load i32, i32* %columns, align 4, !dbg !7755
  %add = add nsw i32 %31, %32, !dbg !7756
  %33 = load i32, i32* %start, align 4, !dbg !7757
  %sub11 = sub nsw i32 %add, %33, !dbg !7758
  %34 = load i32, i32* %max, align 4, !dbg !7759
  %cmp12 = icmp sgt i32 %sub11, %34, !dbg !7760
  br i1 %cmp12, label %if.then14, label %if.else37, !dbg !7761

if.then14:                                        ; preds = %while.body
  %35 = load i32, i32* %end, align 4, !dbg !7762
  %36 = load i32, i32* %i, align 4, !dbg !7762
  %cmp15 = icmp slt i32 %35, %36, !dbg !7762
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7762

cond.true:                                        ; preds = %if.then14
  %37 = load i32, i32* %end, align 4, !dbg !7762
  br label %cond.end, !dbg !7762

cond.false:                                       ; preds = %if.then14
  %38 = load i32, i32* %i, align 4, !dbg !7762
  br label %cond.end, !dbg !7762

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %37, %cond.true ], [ %38, %cond.false ], !dbg !7762
  store i32 %cond, i32* %end, align 4, !dbg !7764
  %39 = load i32, i32* %chop, align 4, !dbg !7765
  %tobool17 = icmp ne i32 %39, 0, !dbg !7765
  br i1 %tobool17, label %if.then18, label %if.end25, !dbg !7767

if.then18:                                        ; preds = %cond.end
  %40 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7768
  %41 = load %struct.TextLine*, %struct.TextLine** %40, align 8, !dbg !7769
  %line19 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %41, i32 0, i32 2, !dbg !7770
  %42 = load i8*, i8** %line19, align 8, !dbg !7770
  %43 = load i32, i32* %j, align 4, !dbg !7771
  %idx.ext20 = sext i32 %43 to i64, !dbg !7772
  %add.ptr21 = getelementptr inbounds i8, i8* %42, i64 %idx.ext20, !dbg !7772
  %call22 = call i8* @BLI_str_prev_char_utf8(i8* %add.ptr21), !dbg !7773
  %44 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7774
  %45 = load %struct.TextLine*, %struct.TextLine** %44, align 8, !dbg !7775
  %line23 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %45, i32 0, i32 2, !dbg !7776
  %46 = load i8*, i8** %line23, align 8, !dbg !7776
  %sub.ptr.lhs.cast = ptrtoint i8* %call22 to i64, !dbg !7777
  %sub.ptr.rhs.cast = ptrtoint i8* %46 to i64, !dbg !7777
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7777
  %conv24 = trunc i64 %sub.ptr.sub to i32, !dbg !7773
  store i32 %conv24, i32* %endj, align 4, !dbg !7778
  br label %if.end25, !dbg !7779

if.end25:                                         ; preds = %if.then18, %cond.end
  %47 = load i32, i32* %endj, align 4, !dbg !7780
  %48 = load i32, i32* %oldc, align 4, !dbg !7782
  %cmp26 = icmp sge i32 %47, %48, !dbg !7783
  br i1 %cmp26, label %if.then28, label %if.end35, !dbg !7784

if.then28:                                        ; preds = %if.end25
  %49 = load i8, i8* %ch, align 1, !dbg !7785
  %conv29 = zext i8 %49 to i32, !dbg !7785
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !7788
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !7789

if.then32:                                        ; preds = %if.then28
  %50 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7790
  %51 = load %struct.TextLine*, %struct.TextLine** %50, align 8, !dbg !7791
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 4, !dbg !7792
  %52 = load i32, i32* %len, align 8, !dbg !7792
  %53 = load i32*, i32** %charp, align 8, !dbg !7793
  store i32 %52, i32* %53, align 4, !dbg !7794
  br label %if.end34, !dbg !7795

if.else33:                                        ; preds = %if.then28
  %54 = load i32, i32* %endj, align 4, !dbg !7796
  %55 = load i32*, i32** %charp, align 8, !dbg !7797
  store i32 %54, i32* %55, align 4, !dbg !7798
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  store i32 0, i32* %loop, align 4, !dbg !7799
  br label %while.end, !dbg !7800

if.end35:                                         ; preds = %if.end25
  %56 = load i32, i32* %end, align 4, !dbg !7801
  store i32 %56, i32* %start, align 4, !dbg !7802
  %57 = load i32, i32* %max, align 4, !dbg !7803
  %58 = load i32, i32* %end, align 4, !dbg !7804
  %add36 = add nsw i32 %58, %57, !dbg !7804
  store i32 %add36, i32* %end, align 4, !dbg !7804
  store i32 1, i32* %chop, align 4, !dbg !7805
  br label %if.end54, !dbg !7806

if.else37:                                        ; preds = %while.body
  %59 = load i8, i8* %ch, align 1, !dbg !7807
  %conv38 = zext i8 %59 to i32, !dbg !7807
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !7809
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !7810

if.then41:                                        ; preds = %if.else37
  %60 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7811
  %61 = load %struct.TextLine*, %struct.TextLine** %60, align 8, !dbg !7813
  %len42 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %61, i32 0, i32 4, !dbg !7814
  %62 = load i32, i32* %len42, align 8, !dbg !7814
  %63 = load i32*, i32** %charp, align 8, !dbg !7815
  store i32 %62, i32* %63, align 4, !dbg !7816
  store i32 0, i32* %loop, align 4, !dbg !7817
  br label %while.end, !dbg !7818

if.else43:                                        ; preds = %if.else37
  %64 = load i8, i8* %ch, align 1, !dbg !7819
  %conv44 = zext i8 %64 to i32, !dbg !7819
  %cmp45 = icmp eq i32 %conv44, 32, !dbg !7821
  br i1 %cmp45, label %if.then50, label %lor.lhs.false, !dbg !7822

lor.lhs.false:                                    ; preds = %if.else43
  %65 = load i8, i8* %ch, align 1, !dbg !7823
  %conv47 = zext i8 %65 to i32, !dbg !7823
  %cmp48 = icmp eq i32 %conv47, 45, !dbg !7824
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !7825

if.then50:                                        ; preds = %lor.lhs.false, %if.else43
  %66 = load i32, i32* %i, align 4, !dbg !7826
  %add51 = add nsw i32 %66, 1, !dbg !7828
  store i32 %add51, i32* %end, align 4, !dbg !7829
  %67 = load i32, i32* %j, align 4, !dbg !7830
  store i32 %67, i32* %endj, align 4, !dbg !7831
  store i32 0, i32* %chop, align 4, !dbg !7832
  br label %if.end52, !dbg !7833

if.end52:                                         ; preds = %if.then50, %lor.lhs.false
  br label %if.end53

if.end53:                                         ; preds = %if.end52
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end35
  %68 = load i32, i32* %columns, align 4, !dbg !7834
  %69 = load i32, i32* %i, align 4, !dbg !7835
  %add55 = add nsw i32 %69, %68, !dbg !7835
  store i32 %add55, i32* %i, align 4, !dbg !7835
  br label %while.cond, !dbg !7750, !llvm.loop !7836

while.end:                                        ; preds = %if.then41, %if.end34, %while.cond
  br label %for.inc, !dbg !7838

for.inc:                                          ; preds = %while.end
  %70 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7839
  %71 = load %struct.TextLine*, %struct.TextLine** %70, align 8, !dbg !7840
  %line56 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %71, i32 0, i32 2, !dbg !7841
  %72 = load i8*, i8** %line56, align 8, !dbg !7841
  %73 = load i32, i32* %j, align 4, !dbg !7842
  %idx.ext57 = sext i32 %73 to i64, !dbg !7843
  %add.ptr58 = getelementptr inbounds i8, i8* %72, i64 %idx.ext57, !dbg !7843
  %call59 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr58), !dbg !7844
  %74 = load i32, i32* %j, align 4, !dbg !7845
  %add60 = add nsw i32 %74, %call59, !dbg !7845
  store i32 %add60, i32* %j, align 4, !dbg !7845
  br label %for.cond, !dbg !7846, !llvm.loop !7847

for.end:                                          ; preds = %for.cond
  %75 = load i8, i8* %sel.addr, align 1, !dbg !7849
  %tobool61 = icmp ne i8 %75, 0, !dbg !7849
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !7851

if.then62:                                        ; preds = %for.end
  %76 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7852
  call void @txt_pop_sel(%struct.Text* %76), !dbg !7853
  br label %if.end63, !dbg !7853

if.end63:                                         ; preds = %if.then62, %for.end
  ret void, !dbg !7854
}

declare dso_local void @txt_move_eol(%struct.Text*, i8 zeroext) #2

declare dso_local void @txt_move_bof(%struct.Text*, i8 zeroext) #2

declare dso_local void @txt_move_eof(%struct.Text*, i8 zeroext) #2

declare dso_local zeroext i8 @txt_cursor_is_line_start(%struct.Text*) #2

declare dso_local void @txt_move_left(%struct.Text*, i8 zeroext) #2

declare dso_local zeroext i8 @txt_cursor_is_line_end(%struct.Text*) #2

declare dso_local void @txt_move_right(%struct.Text*, i8 zeroext) #2

declare dso_local void @txt_pop_sel(%struct.Text*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_wrap_move_up(%struct.SpaceText* %st, %struct.ARegion* %ar, i8 zeroext %sel) #0 !dbg !7855 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %sel.addr = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  %col = alloca i32, align 4
  %visible_lines = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !7856, metadata !DIExpression()), !dbg !7857
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !7858, metadata !DIExpression()), !dbg !7859
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !7862, metadata !DIExpression()), !dbg !7863
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7864
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !7865
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !7865
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !7863
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata i32* %col, metadata !7874, metadata !DIExpression()), !dbg !7875
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7876
  call void @text_update_character_width(%struct.SpaceText* %2), !dbg !7877
  %3 = load i8, i8* %sel.addr, align 1, !dbg !7878
  %tobool = icmp ne i8 %3, 0, !dbg !7878
  br i1 %tobool, label %if.then, label %if.else, !dbg !7880

if.then:                                          ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7881
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 6, !dbg !7883
  store %struct.TextLine** %sell, %struct.TextLine*** %linep, align 8, !dbg !7884
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7885
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 8, !dbg !7886
  store i32* %selc, i32** %charp, align 8, !dbg !7887
  br label %if.end, !dbg !7888

if.else:                                          ; preds = %entry
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7889
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !7891
  store %struct.TextLine** %curl, %struct.TextLine*** %linep, align 8, !dbg !7892
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7893
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !7894
  store i32* %curc, i32** %charp, align 8, !dbg !7895
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7896
  %9 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7897
  %10 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7898
  %11 = load %struct.TextLine*, %struct.TextLine** %10, align 8, !dbg !7899
  %12 = load i32*, i32** %charp, align 8, !dbg !7900
  %13 = load i32, i32* %12, align 4, !dbg !7901
  call void @wrap_offset_in_line(%struct.SpaceText* %8, %struct.ARegion* %9, %struct.TextLine* %11, i32 %13, i32* %offl, i32* %offc), !dbg !7902
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7903
  %15 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7904
  %16 = load %struct.TextLine*, %struct.TextLine** %15, align 8, !dbg !7905
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 2, !dbg !7906
  %17 = load i8*, i8** %line, align 8, !dbg !7906
  %18 = load i32*, i32** %charp, align 8, !dbg !7907
  %19 = load i32, i32* %18, align 4, !dbg !7908
  %call = call i32 @text_get_char_pos(%struct.SpaceText* %14, i8* %17, i32 %19), !dbg !7909
  %20 = load i32, i32* %offc, align 4, !dbg !7910
  %add = add nsw i32 %call, %20, !dbg !7911
  store i32 %add, i32* %col, align 4, !dbg !7912
  %21 = load i32, i32* %offl, align 4, !dbg !7913
  %tobool2 = icmp ne i32 %21, 0, !dbg !7913
  br i1 %tobool2, label %if.then3, label %if.else5, !dbg !7915

if.then3:                                         ; preds = %if.end
  %22 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7916
  %23 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7918
  %24 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7919
  %25 = load %struct.TextLine*, %struct.TextLine** %24, align 8, !dbg !7920
  %26 = load i32, i32* %offl, align 4, !dbg !7921
  %sub = sub nsw i32 %26, 1, !dbg !7922
  %27 = load i32, i32* %col, align 4, !dbg !7923
  %call4 = call i32 @text_get_cursor_rel(%struct.SpaceText* %22, %struct.ARegion* %23, %struct.TextLine* %25, i32 %sub, i32 %27), !dbg !7924
  %28 = load i32*, i32** %charp, align 8, !dbg !7925
  store i32 %call4, i32* %28, align 4, !dbg !7926
  br label %if.end15, !dbg !7927

if.else5:                                         ; preds = %if.end
  %29 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7928
  %30 = load %struct.TextLine*, %struct.TextLine** %29, align 8, !dbg !7931
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %30, i32 0, i32 1, !dbg !7932
  %31 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !7932
  %tobool6 = icmp ne %struct.TextLine* %31, null, !dbg !7933
  br i1 %tobool6, label %if.then7, label %if.else13, !dbg !7934

if.then7:                                         ; preds = %if.else5
  call void @llvm.dbg.declare(metadata i32* %visible_lines, metadata !7935, metadata !DIExpression()), !dbg !7937
  %32 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7938
  %33 = load %struct.TextLine*, %struct.TextLine** %32, align 8, !dbg !7939
  %prev8 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %33, i32 0, i32 1, !dbg !7940
  %34 = load %struct.TextLine*, %struct.TextLine** %prev8, align 8, !dbg !7940
  %35 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7941
  store %struct.TextLine* %34, %struct.TextLine** %35, align 8, !dbg !7942
  %36 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7943
  %37 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7944
  %38 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7945
  %39 = load %struct.TextLine*, %struct.TextLine** %38, align 8, !dbg !7946
  %line9 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %39, i32 0, i32 2, !dbg !7947
  %40 = load i8*, i8** %line9, align 8, !dbg !7947
  %call10 = call i32 @text_get_visible_lines(%struct.SpaceText* %36, %struct.ARegion* %37, i8* %40), !dbg !7948
  store i32 %call10, i32* %visible_lines, align 4, !dbg !7949
  %41 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7950
  %42 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7951
  %43 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !7952
  %44 = load %struct.TextLine*, %struct.TextLine** %43, align 8, !dbg !7953
  %45 = load i32, i32* %visible_lines, align 4, !dbg !7954
  %sub11 = sub nsw i32 %45, 1, !dbg !7955
  %46 = load i32, i32* %col, align 4, !dbg !7956
  %call12 = call i32 @text_get_cursor_rel(%struct.SpaceText* %41, %struct.ARegion* %42, %struct.TextLine* %44, i32 %sub11, i32 %46), !dbg !7957
  %47 = load i32*, i32** %charp, align 8, !dbg !7958
  store i32 %call12, i32* %47, align 4, !dbg !7959
  br label %if.end14, !dbg !7960

if.else13:                                        ; preds = %if.else5
  %48 = load i32*, i32** %charp, align 8, !dbg !7961
  store i32 0, i32* %48, align 4, !dbg !7963
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then7
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then3
  %49 = load i8, i8* %sel.addr, align 1, !dbg !7964
  %tobool16 = icmp ne i8 %49, 0, !dbg !7964
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !7966

if.then17:                                        ; preds = %if.end15
  %50 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7967
  call void @txt_pop_sel(%struct.Text* %50), !dbg !7968
  br label %if.end18, !dbg !7968

if.end18:                                         ; preds = %if.then17, %if.end15
  ret void, !dbg !7969
}

declare dso_local void @txt_move_up(%struct.Text*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_wrap_move_down(%struct.SpaceText* %st, %struct.ARegion* %ar, i8 zeroext %sel) #0 !dbg !7970 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %sel.addr = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  %col = alloca i32, align 4
  %visible_lines = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !7973, metadata !DIExpression()), !dbg !7974
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !7977, metadata !DIExpression()), !dbg !7978
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7979
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !7980
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !7980
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !7978
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !7983, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.declare(metadata i32* %col, metadata !7989, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.declare(metadata i32* %visible_lines, metadata !7991, metadata !DIExpression()), !dbg !7992
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !7993
  call void @text_update_character_width(%struct.SpaceText* %2), !dbg !7994
  %3 = load i8, i8* %sel.addr, align 1, !dbg !7995
  %tobool = icmp ne i8 %3, 0, !dbg !7995
  br i1 %tobool, label %if.then, label %if.else, !dbg !7997

if.then:                                          ; preds = %entry
  %4 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !7998
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 6, !dbg !8000
  store %struct.TextLine** %sell, %struct.TextLine*** %linep, align 8, !dbg !8001
  %5 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8002
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %5, i32 0, i32 8, !dbg !8003
  store i32* %selc, i32** %charp, align 8, !dbg !8004
  br label %if.end, !dbg !8005

if.else:                                          ; preds = %entry
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8006
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %6, i32 0, i32 5, !dbg !8008
  store %struct.TextLine** %curl, %struct.TextLine*** %linep, align 8, !dbg !8009
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8010
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %7, i32 0, i32 7, !dbg !8011
  store i32* %curc, i32** %charp, align 8, !dbg !8012
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8013
  %9 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8014
  %10 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8015
  %11 = load %struct.TextLine*, %struct.TextLine** %10, align 8, !dbg !8016
  %12 = load i32*, i32** %charp, align 8, !dbg !8017
  %13 = load i32, i32* %12, align 4, !dbg !8018
  call void @wrap_offset_in_line(%struct.SpaceText* %8, %struct.ARegion* %9, %struct.TextLine* %11, i32 %13, i32* %offl, i32* %offc), !dbg !8019
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8020
  %15 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8021
  %16 = load %struct.TextLine*, %struct.TextLine** %15, align 8, !dbg !8022
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %16, i32 0, i32 2, !dbg !8023
  %17 = load i8*, i8** %line, align 8, !dbg !8023
  %18 = load i32*, i32** %charp, align 8, !dbg !8024
  %19 = load i32, i32* %18, align 4, !dbg !8025
  %call = call i32 @text_get_char_pos(%struct.SpaceText* %14, i8* %17, i32 %19), !dbg !8026
  %20 = load i32, i32* %offc, align 4, !dbg !8027
  %add = add nsw i32 %call, %20, !dbg !8028
  store i32 %add, i32* %col, align 4, !dbg !8029
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8030
  %22 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8031
  %23 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8032
  %24 = load %struct.TextLine*, %struct.TextLine** %23, align 8, !dbg !8033
  %line2 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %24, i32 0, i32 2, !dbg !8034
  %25 = load i8*, i8** %line2, align 8, !dbg !8034
  %call3 = call i32 @text_get_visible_lines(%struct.SpaceText* %21, %struct.ARegion* %22, i8* %25), !dbg !8035
  store i32 %call3, i32* %visible_lines, align 4, !dbg !8036
  %26 = load i32, i32* %offl, align 4, !dbg !8037
  %27 = load i32, i32* %visible_lines, align 4, !dbg !8039
  %sub = sub nsw i32 %27, 1, !dbg !8040
  %cmp = icmp slt i32 %26, %sub, !dbg !8041
  br i1 %cmp, label %if.then4, label %if.else7, !dbg !8042

if.then4:                                         ; preds = %if.end
  %28 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8043
  %29 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8045
  %30 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8046
  %31 = load %struct.TextLine*, %struct.TextLine** %30, align 8, !dbg !8047
  %32 = load i32, i32* %offl, align 4, !dbg !8048
  %add5 = add nsw i32 %32, 1, !dbg !8049
  %33 = load i32, i32* %col, align 4, !dbg !8050
  %call6 = call i32 @text_get_cursor_rel(%struct.SpaceText* %28, %struct.ARegion* %29, %struct.TextLine* %31, i32 %add5, i32 %33), !dbg !8051
  %34 = load i32*, i32** %charp, align 8, !dbg !8052
  store i32 %call6, i32* %34, align 4, !dbg !8053
  br label %if.end14, !dbg !8054

if.else7:                                         ; preds = %if.end
  %35 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8055
  %36 = load %struct.TextLine*, %struct.TextLine** %35, align 8, !dbg !8058
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %36, i32 0, i32 0, !dbg !8059
  %37 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8059
  %tobool8 = icmp ne %struct.TextLine* %37, null, !dbg !8060
  br i1 %tobool8, label %if.then9, label %if.else12, !dbg !8061

if.then9:                                         ; preds = %if.else7
  %38 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8062
  %39 = load %struct.TextLine*, %struct.TextLine** %38, align 8, !dbg !8064
  %next10 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %39, i32 0, i32 0, !dbg !8065
  %40 = load %struct.TextLine*, %struct.TextLine** %next10, align 8, !dbg !8065
  %41 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8066
  store %struct.TextLine* %40, %struct.TextLine** %41, align 8, !dbg !8067
  %42 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8068
  %43 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8069
  %44 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8070
  %45 = load %struct.TextLine*, %struct.TextLine** %44, align 8, !dbg !8071
  %46 = load i32, i32* %col, align 4, !dbg !8072
  %call11 = call i32 @text_get_cursor_rel(%struct.SpaceText* %42, %struct.ARegion* %43, %struct.TextLine* %45, i32 0, i32 %46), !dbg !8073
  %47 = load i32*, i32** %charp, align 8, !dbg !8074
  store i32 %call11, i32* %47, align 4, !dbg !8075
  br label %if.end13, !dbg !8076

if.else12:                                        ; preds = %if.else7
  %48 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8077
  %49 = load %struct.TextLine*, %struct.TextLine** %48, align 8, !dbg !8079
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %49, i32 0, i32 4, !dbg !8080
  %50 = load i32, i32* %len, align 8, !dbg !8080
  %51 = load i32*, i32** %charp, align 8, !dbg !8081
  store i32 %50, i32* %51, align 4, !dbg !8082
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then4
  %52 = load i8, i8* %sel.addr, align 1, !dbg !8083
  %tobool15 = icmp ne i8 %52, 0, !dbg !8083
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !8085

if.then16:                                        ; preds = %if.end14
  %53 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8086
  call void @txt_pop_sel(%struct.Text* %53), !dbg !8087
  br label %if.end17, !dbg !8087

if.end17:                                         ; preds = %if.then16, %if.end14
  ret void, !dbg !8088
}

declare dso_local void @txt_move_down(%struct.Text*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cursor_skip(%struct.SpaceText* %st, %struct.ARegion* %ar, %struct.Text* %text, i32 %lines, i8 zeroext %sel) #0 !dbg !8089 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %text.addr = alloca %struct.Text*, align 8
  %lines.addr = alloca i32, align 4
  %sel.addr = alloca i8, align 1
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %rell = alloca i32, align 4
  %relc = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  store %struct.Text* %text, %struct.Text** %text.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Text** %text.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !8104, metadata !DIExpression()), !dbg !8105
  %0 = load i8, i8* %sel.addr, align 1, !dbg !8106
  %tobool = icmp ne i8 %0, 0, !dbg !8106
  br i1 %tobool, label %if.then, label %if.else, !dbg !8108

if.then:                                          ; preds = %entry
  %1 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8109
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %1, i32 0, i32 6, !dbg !8111
  store %struct.TextLine** %sell, %struct.TextLine*** %linep, align 8, !dbg !8112
  %2 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8113
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %2, i32 0, i32 8, !dbg !8114
  store i32* %selc, i32** %charp, align 8, !dbg !8115
  br label %if.end, !dbg !8116

if.else:                                          ; preds = %entry
  %3 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8117
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %3, i32 0, i32 5, !dbg !8119
  store %struct.TextLine** %curl, %struct.TextLine*** %linep, align 8, !dbg !8120
  %4 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8121
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %4, i32 0, i32 7, !dbg !8122
  store i32* %curc, i32** %charp, align 8, !dbg !8123
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8124
  %tobool1 = icmp ne %struct.SpaceText* %5, null, !dbg !8124
  br i1 %tobool1, label %land.lhs.true, label %if.else10, !dbg !8126

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8127
  %tobool2 = icmp ne %struct.ARegion* %6, null, !dbg !8127
  br i1 %tobool2, label %land.lhs.true3, label %if.else10, !dbg !8128

land.lhs.true3:                                   ; preds = %land.lhs.true
  %7 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8129
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %7, i32 0, i32 24, !dbg !8130
  %8 = load i32, i32* %wordwrap, align 8, !dbg !8130
  %tobool4 = icmp ne i32 %8, 0, !dbg !8129
  br i1 %tobool4, label %if.then5, label %if.else10, !dbg !8131

if.then5:                                         ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata i32* %rell, metadata !8132, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.declare(metadata i32* %relc, metadata !8135, metadata !DIExpression()), !dbg !8136
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8137
  %10 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8139
  %11 = load i32, i32* %lines.addr, align 4, !dbg !8140
  %12 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8141
  %13 = load i32*, i32** %charp, align 8, !dbg !8142
  %call = call i32 @cursor_skip_find_line(%struct.SpaceText* %9, %struct.ARegion* %10, i32 %11, %struct.TextLine** %12, i32* %13, i32* %rell, i32* %relc), !dbg !8143
  %tobool6 = icmp ne i32 %call, 0, !dbg !8143
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8144

if.then7:                                         ; preds = %if.then5
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8145
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8146
  %16 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8147
  %17 = load %struct.TextLine*, %struct.TextLine** %16, align 8, !dbg !8148
  %18 = load i32, i32* %rell, align 4, !dbg !8149
  %19 = load i32, i32* %relc, align 4, !dbg !8150
  %call8 = call i32 @text_get_cursor_rel(%struct.SpaceText* %14, %struct.ARegion* %15, %struct.TextLine* %17, i32 %18, i32 %19), !dbg !8151
  %20 = load i32*, i32** %charp, align 8, !dbg !8152
  store i32 %call8, i32* %20, align 4, !dbg !8153
  br label %if.end9, !dbg !8154

if.end9:                                          ; preds = %if.then7, %if.then5
  br label %if.end21, !dbg !8155

if.else10:                                        ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %while.cond, !dbg !8156

while.cond:                                       ; preds = %while.body, %if.else10
  %21 = load i32, i32* %lines.addr, align 4, !dbg !8158
  %cmp = icmp sgt i32 %21, 0, !dbg !8159
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8160

land.rhs:                                         ; preds = %while.cond
  %22 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8161
  %23 = load %struct.TextLine*, %struct.TextLine** %22, align 8, !dbg !8162
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %23, i32 0, i32 0, !dbg !8163
  %24 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8163
  %tobool11 = icmp ne %struct.TextLine* %24, null, !dbg !8160
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %25 = phi i1 [ false, %while.cond ], [ %tobool11, %land.rhs ], !dbg !8164
  br i1 %25, label %while.body, label %while.end, !dbg !8156

while.body:                                       ; preds = %land.end
  %26 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8165
  %27 = load %struct.TextLine*, %struct.TextLine** %26, align 8, !dbg !8167
  %next12 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 0, !dbg !8168
  %28 = load %struct.TextLine*, %struct.TextLine** %next12, align 8, !dbg !8168
  %29 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8169
  store %struct.TextLine* %28, %struct.TextLine** %29, align 8, !dbg !8170
  %30 = load i32, i32* %lines.addr, align 4, !dbg !8171
  %dec = add nsw i32 %30, -1, !dbg !8171
  store i32 %dec, i32* %lines.addr, align 4, !dbg !8171
  br label %while.cond, !dbg !8156, !llvm.loop !8172

while.end:                                        ; preds = %land.end
  br label %while.cond13, !dbg !8174

while.cond13:                                     ; preds = %while.body18, %while.end
  %31 = load i32, i32* %lines.addr, align 4, !dbg !8175
  %cmp14 = icmp slt i32 %31, 0, !dbg !8176
  br i1 %cmp14, label %land.rhs15, label %land.end17, !dbg !8177

land.rhs15:                                       ; preds = %while.cond13
  %32 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8178
  %33 = load %struct.TextLine*, %struct.TextLine** %32, align 8, !dbg !8179
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %33, i32 0, i32 1, !dbg !8180
  %34 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8180
  %tobool16 = icmp ne %struct.TextLine* %34, null, !dbg !8177
  br label %land.end17

land.end17:                                       ; preds = %land.rhs15, %while.cond13
  %35 = phi i1 [ false, %while.cond13 ], [ %tobool16, %land.rhs15 ], !dbg !8164
  br i1 %35, label %while.body18, label %while.end20, !dbg !8174

while.body18:                                     ; preds = %land.end17
  %36 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8181
  %37 = load %struct.TextLine*, %struct.TextLine** %36, align 8, !dbg !8183
  %prev19 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %37, i32 0, i32 1, !dbg !8184
  %38 = load %struct.TextLine*, %struct.TextLine** %prev19, align 8, !dbg !8184
  %39 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8185
  store %struct.TextLine* %38, %struct.TextLine** %39, align 8, !dbg !8186
  %40 = load i32, i32* %lines.addr, align 4, !dbg !8187
  %inc = add nsw i32 %40, 1, !dbg !8187
  store i32 %inc, i32* %lines.addr, align 4, !dbg !8187
  br label %while.cond13, !dbg !8174, !llvm.loop !8188

while.end20:                                      ; preds = %land.end17
  br label %if.end21

if.end21:                                         ; preds = %while.end20, %if.end9
  %41 = load i32*, i32** %charp, align 8, !dbg !8190
  %42 = load i32, i32* %41, align 4, !dbg !8192
  %43 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8193
  %44 = load %struct.TextLine*, %struct.TextLine** %43, align 8, !dbg !8194
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %44, i32 0, i32 4, !dbg !8195
  %45 = load i32, i32* %len, align 8, !dbg !8195
  %cmp22 = icmp sgt i32 %42, %45, !dbg !8196
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !8197

if.then23:                                        ; preds = %if.end21
  %46 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !8198
  %47 = load %struct.TextLine*, %struct.TextLine** %46, align 8, !dbg !8199
  %len24 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %47, i32 0, i32 4, !dbg !8200
  %48 = load i32, i32* %len24, align 8, !dbg !8200
  %49 = load i32*, i32** %charp, align 8, !dbg !8201
  store i32 %48, i32* %49, align 4, !dbg !8202
  br label %if.end25, !dbg !8203

if.end25:                                         ; preds = %if.then23, %if.end21
  %50 = load i8, i8* %sel.addr, align 1, !dbg !8204
  %tobool26 = icmp ne i8 %50, 0, !dbg !8204
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !8206

if.then27:                                        ; preds = %if.end25
  %51 = load %struct.Text*, %struct.Text** %text.addr, align 8, !dbg !8207
  call void @txt_pop_sel(%struct.Text* %51), !dbg !8208
  br label %if.end28, !dbg !8208

if.end28:                                         ; preds = %if.then27, %if.end25
  ret void, !dbg !8209
}

declare dso_local void @text_update_character_width(%struct.SpaceText*) #2

declare dso_local i32 @wrap_width(%struct.SpaceText*, %struct.ARegion*) #2

declare dso_local i32 @BLI_str_utf8_char_width_safe(i8*) #2

declare dso_local i32 @txt_utf8_column_to_offset(i8*, i32) #2

declare dso_local i32 @BLI_str_utf8_size_safe(i8*) #2

declare dso_local i8* @BLI_str_prev_char_utf8(i8*) #2

declare dso_local void @wrap_offset_in_line(%struct.SpaceText*, %struct.ARegion*, %struct.TextLine*, i32, i32*, i32*) #2

declare dso_local i32 @text_get_char_pos(%struct.SpaceText*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_get_cursor_rel(%struct.SpaceText* %st, %struct.ARegion* %ar, %struct.TextLine* %linein, i32 %rell, i32 %relc) #0 !dbg !8210 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %linein.addr = alloca %struct.TextLine*, align 8
  %rell.addr = alloca i32, align 4
  %relc.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %max = alloca i32, align 4
  %chop = alloca i32, align 4
  %curs = alloca i32, align 4
  %loop = alloca i32, align 4
  %endj = alloca i32, align 4
  %found = alloca i32, align 4
  %selc = alloca i32, align 4
  %ch = alloca i8, align 1
  %chars = alloca i32, align 4
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !8213, metadata !DIExpression()), !dbg !8214
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8215, metadata !DIExpression()), !dbg !8216
  store %struct.TextLine* %linein, %struct.TextLine** %linein.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linein.addr, metadata !8217, metadata !DIExpression()), !dbg !8218
  store i32 %rell, i32* %rell.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rell.addr, metadata !8219, metadata !DIExpression()), !dbg !8220
  store i32 %relc, i32* %relc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %relc.addr, metadata !8221, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8223, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8225, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8227, metadata !DIExpression()), !dbg !8228
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8229, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.declare(metadata i32* %max, metadata !8231, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !8233, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.declare(metadata i32* %curs, metadata !8235, metadata !DIExpression()), !dbg !8236
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !8237, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.declare(metadata i32* %endj, metadata !8239, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.declare(metadata i32* %found, metadata !8241, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.declare(metadata i32* %selc, metadata !8243, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !8245, metadata !DIExpression()), !dbg !8246
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8247
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8248
  %call = call i32 @wrap_width(%struct.SpaceText* %0, %struct.ARegion* %1), !dbg !8249
  store i32 %call, i32* %max, align 4, !dbg !8250
  store i32 0, i32* %found, align 4, !dbg !8251
  store i32 0, i32* %curs, align 4, !dbg !8252
  store i32 0, i32* %endj, align 4, !dbg !8253
  store i32 0, i32* %start, align 4, !dbg !8254
  store i32 0, i32* %selc, align 4, !dbg !8255
  %2 = load i32, i32* %max, align 4, !dbg !8256
  store i32 %2, i32* %end, align 4, !dbg !8257
  store i32 1, i32* %loop, align 4, !dbg !8258
  store i32 1, i32* %chop, align 4, !dbg !8259
  store i32 0, i32* %i, align 4, !dbg !8260
  store i32 0, i32* %j, align 4, !dbg !8262
  br label %for.cond, !dbg !8263

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %loop, align 4, !dbg !8264
  %tobool = icmp ne i32 %3, 0, !dbg !8266
  br i1 %tobool, label %for.body, label %for.end, !dbg !8266

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !8270, metadata !DIExpression()), !dbg !8271
  %4 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !8272
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %4, i32 0, i32 2, !dbg !8273
  %5 = load i8*, i8** %line, align 8, !dbg !8273
  %6 = load i32, i32* %j, align 4, !dbg !8274
  %idx.ext = sext i32 %6 to i64, !dbg !8275
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !8275
  %call1 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !8276
  store i32 %call1, i32* %columns, align 4, !dbg !8271
  %7 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !8277
  %line2 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %7, i32 0, i32 2, !dbg !8278
  %8 = load i8*, i8** %line2, align 8, !dbg !8278
  %9 = load i32, i32* %j, align 4, !dbg !8279
  %idxprom = sext i32 %9 to i64, !dbg !8277
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !8277
  %10 = load i8, i8* %arrayidx, align 1, !dbg !8277
  store i8 %10, i8* %ch, align 1, !dbg !8280
  %11 = load i8, i8* %ch, align 1, !dbg !8281
  %conv = zext i8 %11 to i32, !dbg !8281
  %cmp = icmp eq i32 %conv, 9, !dbg !8283
  br i1 %cmp, label %if.then, label %if.else, !dbg !8284

if.then:                                          ; preds = %for.body
  %12 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8285
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %12, i32 0, i32 16, !dbg !8287
  %13 = load i32, i32* %tabnumber, align 8, !dbg !8287
  %14 = load i32, i32* %i, align 4, !dbg !8288
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8289
  %tabnumber4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 16, !dbg !8290
  %16 = load i32, i32* %tabnumber4, align 8, !dbg !8290
  %rem = srem i32 %14, %16, !dbg !8291
  %sub = sub nsw i32 %13, %rem, !dbg !8292
  store i32 %sub, i32* %chars, align 4, !dbg !8293
  store i8 32, i8* %ch, align 1, !dbg !8294
  br label %if.end, !dbg !8295

if.else:                                          ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !8296
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !8298

while.cond:                                       ; preds = %if.end89, %if.end
  %17 = load i32, i32* %chars, align 4, !dbg !8299
  %dec = add nsw i32 %17, -1, !dbg !8299
  store i32 %dec, i32* %chars, align 4, !dbg !8299
  %tobool5 = icmp ne i32 %17, 0, !dbg !8298
  br i1 %tobool5, label %while.body, label %while.end, !dbg !8298

while.body:                                       ; preds = %while.cond
  %18 = load i32, i32* %rell.addr, align 4, !dbg !8300
  %cmp6 = icmp eq i32 %18, 0, !dbg !8303
  br i1 %cmp6, label %land.lhs.true, label %if.else16, !dbg !8304

land.lhs.true:                                    ; preds = %while.body
  %19 = load i32, i32* %i, align 4, !dbg !8305
  %20 = load i32, i32* %start, align 4, !dbg !8306
  %sub8 = sub nsw i32 %19, %20, !dbg !8307
  %21 = load i32, i32* %relc.addr, align 4, !dbg !8308
  %cmp9 = icmp sle i32 %sub8, %21, !dbg !8309
  br i1 %cmp9, label %land.lhs.true11, label %if.else16, !dbg !8310

land.lhs.true11:                                  ; preds = %land.lhs.true
  %22 = load i32, i32* %i, align 4, !dbg !8311
  %23 = load i32, i32* %columns, align 4, !dbg !8312
  %add = add nsw i32 %22, %23, !dbg !8313
  %24 = load i32, i32* %start, align 4, !dbg !8314
  %sub12 = sub nsw i32 %add, %24, !dbg !8315
  %25 = load i32, i32* %relc.addr, align 4, !dbg !8316
  %cmp13 = icmp sgt i32 %sub12, %25, !dbg !8317
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !8318

if.then15:                                        ; preds = %land.lhs.true11
  %26 = load i32, i32* %j, align 4, !dbg !8319
  store i32 %26, i32* %selc, align 4, !dbg !8321
  store i32 1, i32* %found, align 4, !dbg !8322
  br label %if.end27, !dbg !8323

if.else16:                                        ; preds = %land.lhs.true11, %land.lhs.true, %while.body
  %27 = load i32, i32* %i, align 4, !dbg !8324
  %28 = load i32, i32* %end, align 4, !dbg !8326
  %sub17 = sub nsw i32 %27, %28, !dbg !8327
  %29 = load i32, i32* %relc.addr, align 4, !dbg !8328
  %cmp18 = icmp sle i32 %sub17, %29, !dbg !8329
  br i1 %cmp18, label %land.lhs.true20, label %if.end26, !dbg !8330

land.lhs.true20:                                  ; preds = %if.else16
  %30 = load i32, i32* %i, align 4, !dbg !8331
  %31 = load i32, i32* %columns, align 4, !dbg !8332
  %add21 = add nsw i32 %30, %31, !dbg !8333
  %32 = load i32, i32* %end, align 4, !dbg !8334
  %sub22 = sub nsw i32 %add21, %32, !dbg !8335
  %33 = load i32, i32* %relc.addr, align 4, !dbg !8336
  %cmp23 = icmp sgt i32 %sub22, %33, !dbg !8337
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8338

if.then25:                                        ; preds = %land.lhs.true20
  %34 = load i32, i32* %j, align 4, !dbg !8339
  store i32 %34, i32* %curs, align 4, !dbg !8341
  br label %if.end26, !dbg !8342

if.end26:                                         ; preds = %if.then25, %land.lhs.true20, %if.else16
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then15
  %35 = load i32, i32* %i, align 4, !dbg !8343
  %36 = load i32, i32* %columns, align 4, !dbg !8345
  %add28 = add nsw i32 %35, %36, !dbg !8346
  %37 = load i32, i32* %start, align 4, !dbg !8347
  %sub29 = sub nsw i32 %add28, %37, !dbg !8348
  %38 = load i32, i32* %max, align 4, !dbg !8349
  %cmp30 = icmp sgt i32 %sub29, %38, !dbg !8350
  br i1 %cmp30, label %if.then32, label %if.else58, !dbg !8351

if.then32:                                        ; preds = %if.end27
  %39 = load i32, i32* %end, align 4, !dbg !8352
  %40 = load i32, i32* %i, align 4, !dbg !8352
  %cmp33 = icmp slt i32 %39, %40, !dbg !8352
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !8352

cond.true:                                        ; preds = %if.then32
  %41 = load i32, i32* %end, align 4, !dbg !8352
  br label %cond.end, !dbg !8352

cond.false:                                       ; preds = %if.then32
  %42 = load i32, i32* %i, align 4, !dbg !8352
  br label %cond.end, !dbg !8352

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %41, %cond.true ], [ %42, %cond.false ], !dbg !8352
  store i32 %cond, i32* %end, align 4, !dbg !8354
  %43 = load i32, i32* %found, align 4, !dbg !8355
  %tobool35 = icmp ne i32 %43, 0, !dbg !8355
  br i1 %tobool35, label %if.then36, label %if.end43, !dbg !8357

if.then36:                                        ; preds = %cond.end
  %44 = load i32, i32* %selc, align 4, !dbg !8358
  %45 = load i32, i32* %endj, align 4, !dbg !8361
  %cmp37 = icmp sgt i32 %44, %45, !dbg !8362
  br i1 %cmp37, label %land.lhs.true39, label %if.end42, !dbg !8363

land.lhs.true39:                                  ; preds = %if.then36
  %46 = load i32, i32* %chop, align 4, !dbg !8364
  %tobool40 = icmp ne i32 %46, 0, !dbg !8364
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !8365

if.then41:                                        ; preds = %land.lhs.true39
  %47 = load i32, i32* %endj, align 4, !dbg !8366
  store i32 %47, i32* %selc, align 4, !dbg !8367
  br label %if.end42, !dbg !8368

if.end42:                                         ; preds = %if.then41, %land.lhs.true39, %if.then36
  store i32 0, i32* %loop, align 4, !dbg !8369
  br label %while.end, !dbg !8370

if.end43:                                         ; preds = %cond.end
  %48 = load i32, i32* %chop, align 4, !dbg !8371
  %tobool44 = icmp ne i32 %48, 0, !dbg !8371
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !8373

if.then45:                                        ; preds = %if.end43
  %49 = load i32, i32* %j, align 4, !dbg !8374
  store i32 %49, i32* %endj, align 4, !dbg !8375
  br label %if.end46, !dbg !8376

if.end46:                                         ; preds = %if.then45, %if.end43
  %50 = load i32, i32* %end, align 4, !dbg !8377
  store i32 %50, i32* %start, align 4, !dbg !8378
  %51 = load i32, i32* %max, align 4, !dbg !8379
  %52 = load i32, i32* %end, align 4, !dbg !8380
  %add47 = add nsw i32 %52, %51, !dbg !8380
  store i32 %add47, i32* %end, align 4, !dbg !8380
  store i32 1, i32* %chop, align 4, !dbg !8381
  %53 = load i32, i32* %rell.addr, align 4, !dbg !8382
  %dec48 = add nsw i32 %53, -1, !dbg !8382
  store i32 %dec48, i32* %rell.addr, align 4, !dbg !8382
  %54 = load i32, i32* %rell.addr, align 4, !dbg !8383
  %cmp49 = icmp eq i32 %54, 0, !dbg !8385
  br i1 %cmp49, label %land.lhs.true51, label %if.end57, !dbg !8386

land.lhs.true51:                                  ; preds = %if.end46
  %55 = load i32, i32* %i, align 4, !dbg !8387
  %56 = load i32, i32* %columns, align 4, !dbg !8388
  %add52 = add nsw i32 %55, %56, !dbg !8389
  %57 = load i32, i32* %start, align 4, !dbg !8390
  %sub53 = sub nsw i32 %add52, %57, !dbg !8391
  %58 = load i32, i32* %relc.addr, align 4, !dbg !8392
  %cmp54 = icmp sgt i32 %sub53, %58, !dbg !8393
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8394

if.then56:                                        ; preds = %land.lhs.true51
  %59 = load i32, i32* %curs, align 4, !dbg !8395
  store i32 %59, i32* %selc, align 4, !dbg !8397
  store i32 0, i32* %loop, align 4, !dbg !8398
  br label %while.end, !dbg !8399

if.end57:                                         ; preds = %land.lhs.true51, %if.end46
  br label %if.end89, !dbg !8400

if.else58:                                        ; preds = %if.end27
  %60 = load i8, i8* %ch, align 1, !dbg !8401
  %conv59 = zext i8 %60 to i32, !dbg !8401
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !8403
  br i1 %cmp60, label %if.then62, label %if.else66, !dbg !8404

if.then62:                                        ; preds = %if.else58
  %61 = load i32, i32* %found, align 4, !dbg !8405
  %tobool63 = icmp ne i32 %61, 0, !dbg !8405
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !8408

if.then64:                                        ; preds = %if.then62
  %62 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !8409
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %62, i32 0, i32 4, !dbg !8410
  %63 = load i32, i32* %len, align 8, !dbg !8410
  store i32 %63, i32* %selc, align 4, !dbg !8411
  br label %if.end65, !dbg !8412

if.end65:                                         ; preds = %if.then64, %if.then62
  store i32 0, i32* %loop, align 4, !dbg !8413
  br label %while.end, !dbg !8414

if.else66:                                        ; preds = %if.else58
  %64 = load i8, i8* %ch, align 1, !dbg !8415
  %conv67 = zext i8 %64 to i32, !dbg !8415
  %cmp68 = icmp eq i32 %conv67, 32, !dbg !8417
  br i1 %cmp68, label %if.then73, label %lor.lhs.false, !dbg !8418

lor.lhs.false:                                    ; preds = %if.else66
  %65 = load i8, i8* %ch, align 1, !dbg !8419
  %conv70 = zext i8 %65 to i32, !dbg !8419
  %cmp71 = icmp eq i32 %conv70, 45, !dbg !8420
  br i1 %cmp71, label %if.then73, label %if.end87, !dbg !8421

if.then73:                                        ; preds = %lor.lhs.false, %if.else66
  %66 = load i32, i32* %found, align 4, !dbg !8422
  %tobool74 = icmp ne i32 %66, 0, !dbg !8422
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8425

if.then75:                                        ; preds = %if.then73
  store i32 0, i32* %loop, align 4, !dbg !8426
  br label %while.end, !dbg !8428

if.end76:                                         ; preds = %if.then73
  %67 = load i32, i32* %rell.addr, align 4, !dbg !8429
  %cmp77 = icmp eq i32 %67, 0, !dbg !8431
  br i1 %cmp77, label %land.lhs.true79, label %if.end85, !dbg !8432

land.lhs.true79:                                  ; preds = %if.end76
  %68 = load i32, i32* %i, align 4, !dbg !8433
  %69 = load i32, i32* %columns, align 4, !dbg !8434
  %add80 = add nsw i32 %68, %69, !dbg !8435
  %70 = load i32, i32* %start, align 4, !dbg !8436
  %sub81 = sub nsw i32 %add80, %70, !dbg !8437
  %71 = load i32, i32* %relc.addr, align 4, !dbg !8438
  %cmp82 = icmp sgt i32 %sub81, %71, !dbg !8439
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !8440

if.then84:                                        ; preds = %land.lhs.true79
  %72 = load i32, i32* %curs, align 4, !dbg !8441
  store i32 %72, i32* %selc, align 4, !dbg !8443
  store i32 0, i32* %loop, align 4, !dbg !8444
  br label %while.end, !dbg !8445

if.end85:                                         ; preds = %land.lhs.true79, %if.end76
  %73 = load i32, i32* %i, align 4, !dbg !8446
  %add86 = add nsw i32 %73, 1, !dbg !8447
  store i32 %add86, i32* %end, align 4, !dbg !8448
  %74 = load i32, i32* %j, align 4, !dbg !8449
  store i32 %74, i32* %endj, align 4, !dbg !8450
  store i32 0, i32* %chop, align 4, !dbg !8451
  br label %if.end87, !dbg !8452

if.end87:                                         ; preds = %if.end85, %lor.lhs.false
  br label %if.end88

if.end88:                                         ; preds = %if.end87
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %75 = load i32, i32* %columns, align 4, !dbg !8453
  %76 = load i32, i32* %i, align 4, !dbg !8454
  %add90 = add nsw i32 %76, %75, !dbg !8454
  store i32 %add90, i32* %i, align 4, !dbg !8454
  br label %while.cond, !dbg !8298, !llvm.loop !8455

while.end:                                        ; preds = %if.then84, %if.then75, %if.end65, %if.then56, %if.end42, %while.cond
  br label %for.inc, !dbg !8457

for.inc:                                          ; preds = %while.end
  %77 = load %struct.TextLine*, %struct.TextLine** %linein.addr, align 8, !dbg !8458
  %line91 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %77, i32 0, i32 2, !dbg !8459
  %78 = load i8*, i8** %line91, align 8, !dbg !8459
  %79 = load i32, i32* %j, align 4, !dbg !8460
  %idx.ext92 = sext i32 %79 to i64, !dbg !8461
  %add.ptr93 = getelementptr inbounds i8, i8* %78, i64 %idx.ext92, !dbg !8461
  %call94 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr93), !dbg !8462
  %80 = load i32, i32* %j, align 4, !dbg !8463
  %add95 = add nsw i32 %80, %call94, !dbg !8463
  store i32 %add95, i32* %j, align 4, !dbg !8463
  br label %for.cond, !dbg !8464, !llvm.loop !8465

for.end:                                          ; preds = %for.cond
  %81 = load i32, i32* %selc, align 4, !dbg !8467
  ret i32 %81, !dbg !8468
}

declare dso_local i32 @text_get_visible_lines(%struct.SpaceText*, %struct.ARegion*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @cursor_skip_find_line(%struct.SpaceText* %st, %struct.ARegion* %ar, i32 %lines, %struct.TextLine** %linep, i32* %charp, i32* %rell, i32* %relc) #0 !dbg !8469 {
entry:
  %retval = alloca i32, align 4
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %lines.addr = alloca i32, align 4
  %linep.addr = alloca %struct.TextLine**, align 8
  %charp.addr = alloca i32*, align 8
  %rell.addr = alloca i32*, align 8
  %relc.addr = alloca i32*, align 8
  %offl = alloca i32, align 4
  %offc = alloca i32, align 4
  %visible_lines = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !8472, metadata !DIExpression()), !dbg !8473
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8474, metadata !DIExpression()), !dbg !8475
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  store %struct.TextLine** %linep, %struct.TextLine*** %linep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store i32* %charp, i32** %charp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %charp.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  store i32* %rell, i32** %rell.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rell.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  store i32* %relc, i32** %relc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %relc.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.declare(metadata i32* %offl, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.declare(metadata i32* %offc, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.declare(metadata i32* %visible_lines, metadata !8490, metadata !DIExpression()), !dbg !8491
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8492
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8493
  %2 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8494
  %3 = load %struct.TextLine*, %struct.TextLine** %2, align 8, !dbg !8495
  %4 = load i32*, i32** %charp.addr, align 8, !dbg !8496
  %5 = load i32, i32* %4, align 4, !dbg !8497
  call void @wrap_offset_in_line(%struct.SpaceText* %0, %struct.ARegion* %1, %struct.TextLine* %3, i32 %5, i32* %offl, i32* %offc), !dbg !8498
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8499
  %7 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8500
  %8 = load %struct.TextLine*, %struct.TextLine** %7, align 8, !dbg !8501
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %8, i32 0, i32 2, !dbg !8502
  %9 = load i8*, i8** %line, align 8, !dbg !8502
  %10 = load i32*, i32** %charp.addr, align 8, !dbg !8503
  %11 = load i32, i32* %10, align 4, !dbg !8504
  %call = call i32 @text_get_char_pos(%struct.SpaceText* %6, i8* %9, i32 %11), !dbg !8505
  %12 = load i32, i32* %offc, align 4, !dbg !8506
  %add = add nsw i32 %call, %12, !dbg !8507
  %13 = load i32*, i32** %relc.addr, align 8, !dbg !8508
  store i32 %add, i32* %13, align 4, !dbg !8509
  %14 = load i32, i32* %lines.addr, align 4, !dbg !8510
  %15 = load i32*, i32** %rell.addr, align 8, !dbg !8511
  store i32 %14, i32* %15, align 4, !dbg !8512
  %16 = load i32, i32* %lines.addr, align 4, !dbg !8513
  %cmp = icmp sgt i32 %16, 0, !dbg !8515
  br i1 %cmp, label %if.then, label %if.else17, !dbg !8516

if.then:                                          ; preds = %entry
  %17 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8517
  %18 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8519
  %19 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8520
  %20 = load %struct.TextLine*, %struct.TextLine** %19, align 8, !dbg !8521
  %line1 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %20, i32 0, i32 2, !dbg !8522
  %21 = load i8*, i8** %line1, align 8, !dbg !8522
  %call2 = call i32 @text_get_visible_lines(%struct.SpaceText* %17, %struct.ARegion* %18, i8* %21), !dbg !8523
  store i32 %call2, i32* %visible_lines, align 4, !dbg !8524
  %22 = load i32*, i32** %rell.addr, align 8, !dbg !8525
  %23 = load i32, i32* %22, align 4, !dbg !8527
  %24 = load i32, i32* %visible_lines, align 4, !dbg !8528
  %sub = sub nsw i32 %23, %24, !dbg !8529
  %25 = load i32, i32* %offl, align 4, !dbg !8530
  %add3 = add nsw i32 %sub, %25, !dbg !8531
  %cmp4 = icmp sge i32 %add3, 0, !dbg !8532
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !8533

if.then5:                                         ; preds = %if.then
  %26 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8534
  %27 = load %struct.TextLine*, %struct.TextLine** %26, align 8, !dbg !8537
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %27, i32 0, i32 0, !dbg !8538
  %28 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !8538
  %tobool = icmp ne %struct.TextLine* %28, null, !dbg !8539
  br i1 %tobool, label %if.end11, label %if.then6, !dbg !8540

if.then6:                                         ; preds = %if.then5
  %29 = load i32, i32* %offl, align 4, !dbg !8541
  %30 = load i32, i32* %visible_lines, align 4, !dbg !8544
  %sub7 = sub nsw i32 %30, 1, !dbg !8545
  %cmp8 = icmp slt i32 %29, %sub7, !dbg !8546
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !8547

if.then9:                                         ; preds = %if.then6
  %31 = load i32, i32* %visible_lines, align 4, !dbg !8548
  %sub10 = sub nsw i32 %31, 1, !dbg !8550
  %32 = load i32*, i32** %rell.addr, align 8, !dbg !8551
  store i32 %sub10, i32* %32, align 4, !dbg !8552
  store i32 1, i32* %retval, align 4, !dbg !8553
  br label %return, !dbg !8553

if.end:                                           ; preds = %if.then6
  %33 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8554
  %34 = load %struct.TextLine*, %struct.TextLine** %33, align 8, !dbg !8555
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %34, i32 0, i32 4, !dbg !8556
  %35 = load i32, i32* %len, align 8, !dbg !8556
  %36 = load i32*, i32** %charp.addr, align 8, !dbg !8557
  store i32 %35, i32* %36, align 4, !dbg !8558
  store i32 0, i32* %retval, align 4, !dbg !8559
  br label %return, !dbg !8559

if.end11:                                         ; preds = %if.then5
  %37 = load i32, i32* %visible_lines, align 4, !dbg !8560
  %38 = load i32, i32* %offl, align 4, !dbg !8561
  %sub12 = sub nsw i32 %37, %38, !dbg !8562
  %39 = load i32*, i32** %rell.addr, align 8, !dbg !8563
  %40 = load i32, i32* %39, align 4, !dbg !8564
  %sub13 = sub nsw i32 %40, %sub12, !dbg !8564
  store i32 %sub13, i32* %39, align 4, !dbg !8564
  %41 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8565
  %42 = load %struct.TextLine*, %struct.TextLine** %41, align 8, !dbg !8566
  %next14 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %42, i32 0, i32 0, !dbg !8567
  %43 = load %struct.TextLine*, %struct.TextLine** %next14, align 8, !dbg !8567
  %44 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8568
  store %struct.TextLine* %43, %struct.TextLine** %44, align 8, !dbg !8569
  br label %if.end16, !dbg !8570

if.else:                                          ; preds = %if.then
  %45 = load i32, i32* %offl, align 4, !dbg !8571
  %46 = load i32*, i32** %rell.addr, align 8, !dbg !8573
  %47 = load i32, i32* %46, align 4, !dbg !8574
  %add15 = add nsw i32 %47, %45, !dbg !8574
  store i32 %add15, i32* %46, align 4, !dbg !8574
  store i32 1, i32* %retval, align 4, !dbg !8575
  br label %return, !dbg !8575

if.end16:                                         ; preds = %if.end11
  br label %if.end32, !dbg !8576

if.else17:                                        ; preds = %entry
  %48 = load i32*, i32** %rell.addr, align 8, !dbg !8577
  %49 = load i32, i32* %48, align 4, !dbg !8580
  %50 = load i32, i32* %offl, align 4, !dbg !8581
  %add18 = add nsw i32 %49, %50, !dbg !8582
  %cmp19 = icmp sle i32 %add18, 0, !dbg !8583
  br i1 %cmp19, label %if.then20, label %if.else29, !dbg !8584

if.then20:                                        ; preds = %if.else17
  %51 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8585
  %52 = load %struct.TextLine*, %struct.TextLine** %51, align 8, !dbg !8588
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %52, i32 0, i32 1, !dbg !8589
  %53 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !8589
  %tobool21 = icmp ne %struct.TextLine* %53, null, !dbg !8590
  br i1 %tobool21, label %if.end26, label %if.then22, !dbg !8591

if.then22:                                        ; preds = %if.then20
  %54 = load i32, i32* %offl, align 4, !dbg !8592
  %tobool23 = icmp ne i32 %54, 0, !dbg !8592
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !8595

if.then24:                                        ; preds = %if.then22
  %55 = load i32*, i32** %rell.addr, align 8, !dbg !8596
  store i32 0, i32* %55, align 4, !dbg !8598
  store i32 1, i32* %retval, align 4, !dbg !8599
  br label %return, !dbg !8599

if.end25:                                         ; preds = %if.then22
  %56 = load i32*, i32** %charp.addr, align 8, !dbg !8600
  store i32 0, i32* %56, align 4, !dbg !8601
  store i32 0, i32* %retval, align 4, !dbg !8602
  br label %return, !dbg !8602

if.end26:                                         ; preds = %if.then20
  %57 = load i32, i32* %offl, align 4, !dbg !8603
  %58 = load i32*, i32** %rell.addr, align 8, !dbg !8604
  %59 = load i32, i32* %58, align 4, !dbg !8605
  %add27 = add nsw i32 %59, %57, !dbg !8605
  store i32 %add27, i32* %58, align 4, !dbg !8605
  %60 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8606
  %61 = load %struct.TextLine*, %struct.TextLine** %60, align 8, !dbg !8607
  %prev28 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %61, i32 0, i32 1, !dbg !8608
  %62 = load %struct.TextLine*, %struct.TextLine** %prev28, align 8, !dbg !8608
  %63 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8609
  store %struct.TextLine* %62, %struct.TextLine** %63, align 8, !dbg !8610
  br label %if.end31, !dbg !8611

if.else29:                                        ; preds = %if.else17
  %64 = load i32, i32* %offl, align 4, !dbg !8612
  %65 = load i32*, i32** %rell.addr, align 8, !dbg !8614
  %66 = load i32, i32* %65, align 4, !dbg !8615
  %add30 = add nsw i32 %66, %64, !dbg !8615
  store i32 %add30, i32* %65, align 4, !dbg !8615
  store i32 1, i32* %retval, align 4, !dbg !8616
  br label %return, !dbg !8616

if.end31:                                         ; preds = %if.end26
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end16
  br label %while.cond, !dbg !8617

while.cond:                                       ; preds = %if.end61, %if.end32
  %67 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8618
  %68 = load %struct.TextLine*, %struct.TextLine** %67, align 8, !dbg !8619
  %tobool33 = icmp ne %struct.TextLine* %68, null, !dbg !8617
  br i1 %tobool33, label %while.body, label %while.end, !dbg !8617

while.body:                                       ; preds = %while.cond
  %69 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8620
  %70 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8622
  %71 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8623
  %72 = load %struct.TextLine*, %struct.TextLine** %71, align 8, !dbg !8624
  %line34 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %72, i32 0, i32 2, !dbg !8625
  %73 = load i8*, i8** %line34, align 8, !dbg !8625
  %call35 = call i32 @text_get_visible_lines(%struct.SpaceText* %69, %struct.ARegion* %70, i8* %73), !dbg !8626
  store i32 %call35, i32* %visible_lines, align 4, !dbg !8627
  %74 = load i32, i32* %lines.addr, align 4, !dbg !8628
  %cmp36 = icmp slt i32 %74, 0, !dbg !8630
  br i1 %cmp36, label %if.then37, label %if.else49, !dbg !8631

if.then37:                                        ; preds = %while.body
  %75 = load i32*, i32** %rell.addr, align 8, !dbg !8632
  %76 = load i32, i32* %75, align 4, !dbg !8635
  %77 = load i32, i32* %visible_lines, align 4, !dbg !8636
  %add38 = add nsw i32 %76, %77, !dbg !8637
  %cmp39 = icmp sge i32 %add38, 0, !dbg !8638
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !8639

if.then40:                                        ; preds = %if.then37
  %78 = load i32, i32* %visible_lines, align 4, !dbg !8640
  %79 = load i32*, i32** %rell.addr, align 8, !dbg !8642
  %80 = load i32, i32* %79, align 4, !dbg !8643
  %add41 = add nsw i32 %80, %78, !dbg !8643
  store i32 %add41, i32* %79, align 4, !dbg !8643
  br label %while.end, !dbg !8644

if.end42:                                         ; preds = %if.then37
  %81 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8645
  %82 = load %struct.TextLine*, %struct.TextLine** %81, align 8, !dbg !8647
  %prev43 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %82, i32 0, i32 1, !dbg !8648
  %83 = load %struct.TextLine*, %struct.TextLine** %prev43, align 8, !dbg !8648
  %tobool44 = icmp ne %struct.TextLine* %83, null, !dbg !8649
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !8650

if.then45:                                        ; preds = %if.end42
  %84 = load i32*, i32** %rell.addr, align 8, !dbg !8651
  store i32 0, i32* %84, align 4, !dbg !8653
  br label %while.end, !dbg !8654

if.end46:                                         ; preds = %if.end42
  %85 = load i32, i32* %visible_lines, align 4, !dbg !8655
  %86 = load i32*, i32** %rell.addr, align 8, !dbg !8656
  %87 = load i32, i32* %86, align 4, !dbg !8657
  %add47 = add nsw i32 %87, %85, !dbg !8657
  store i32 %add47, i32* %86, align 4, !dbg !8657
  %88 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8658
  %89 = load %struct.TextLine*, %struct.TextLine** %88, align 8, !dbg !8659
  %prev48 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %89, i32 0, i32 1, !dbg !8660
  %90 = load %struct.TextLine*, %struct.TextLine** %prev48, align 8, !dbg !8660
  %91 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8661
  store %struct.TextLine* %90, %struct.TextLine** %91, align 8, !dbg !8662
  br label %if.end61, !dbg !8663

if.else49:                                        ; preds = %while.body
  %92 = load i32*, i32** %rell.addr, align 8, !dbg !8664
  %93 = load i32, i32* %92, align 4, !dbg !8667
  %94 = load i32, i32* %visible_lines, align 4, !dbg !8668
  %sub50 = sub nsw i32 %93, %94, !dbg !8669
  %cmp51 = icmp slt i32 %sub50, 0, !dbg !8670
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !8671

if.then52:                                        ; preds = %if.else49
  br label %while.end, !dbg !8672

if.end53:                                         ; preds = %if.else49
  %95 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8673
  %96 = load %struct.TextLine*, %struct.TextLine** %95, align 8, !dbg !8675
  %next54 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %96, i32 0, i32 0, !dbg !8676
  %97 = load %struct.TextLine*, %struct.TextLine** %next54, align 8, !dbg !8676
  %tobool55 = icmp ne %struct.TextLine* %97, null, !dbg !8677
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !8678

if.then56:                                        ; preds = %if.end53
  %98 = load i32, i32* %visible_lines, align 4, !dbg !8679
  %sub57 = sub nsw i32 %98, 1, !dbg !8681
  %99 = load i32*, i32** %rell.addr, align 8, !dbg !8682
  store i32 %sub57, i32* %99, align 4, !dbg !8683
  br label %while.end, !dbg !8684

if.end58:                                         ; preds = %if.end53
  %100 = load i32, i32* %visible_lines, align 4, !dbg !8685
  %101 = load i32*, i32** %rell.addr, align 8, !dbg !8686
  %102 = load i32, i32* %101, align 4, !dbg !8687
  %sub59 = sub nsw i32 %102, %100, !dbg !8687
  store i32 %sub59, i32* %101, align 4, !dbg !8687
  %103 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8688
  %104 = load %struct.TextLine*, %struct.TextLine** %103, align 8, !dbg !8689
  %next60 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %104, i32 0, i32 0, !dbg !8690
  %105 = load %struct.TextLine*, %struct.TextLine** %next60, align 8, !dbg !8690
  %106 = load %struct.TextLine**, %struct.TextLine*** %linep.addr, align 8, !dbg !8691
  store %struct.TextLine* %105, %struct.TextLine** %106, align 8, !dbg !8692
  br label %if.end61

if.end61:                                         ; preds = %if.end58, %if.end46
  br label %while.cond, !dbg !8617, !llvm.loop !8693

while.end:                                        ; preds = %if.then56, %if.then52, %if.then45, %if.then40, %while.cond
  store i32 1, i32* %retval, align 4, !dbg !8695
  br label %return, !dbg !8695

return:                                           ; preds = %while.end, %if.else29, %if.end25, %if.then24, %if.else, %if.end, %if.then9
  %107 = load i32, i32* %retval, align 4, !dbg !8696
  ret i32 %107, !dbg !8696
}

declare dso_local i32 @WM_operator_props_dialog_popup(%struct.bContext*, %struct.wmOperator*, i32, i32) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @txt_move_toline(%struct.Text*, i32, i8 zeroext) #2

declare dso_local void @txt_backspace_char(%struct.Text*) #2

declare dso_local void @txt_backspace_word(%struct.Text*) #2

declare dso_local void @txt_delete_char(%struct.Text*) #2

declare dso_local void @txt_delete_word(%struct.Text*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @txt_screen_skip(%struct.SpaceText* %st, %struct.ARegion* %ar, i32 %lines) #0 !dbg !8697 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %lines.addr = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !8704, metadata !DIExpression()), !dbg !8705
  %0 = load i32, i32* %lines.addr, align 4, !dbg !8706
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8707
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 7, !dbg !8708
  %2 = load i32, i32* %top, align 8, !dbg !8709
  %add = add nsw i32 %2, %0, !dbg !8709
  store i32 %add, i32* %top, align 8, !dbg !8709
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !8710
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8711
  call void @txt_screen_clamp(%struct.SpaceText* %3, %struct.ARegion* %4), !dbg !8712
  ret void, !dbg !8713
}

declare dso_local void @ED_area_tag_redraw(%struct.ScrArea*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @text_scroll_apply(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8714 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %tsc = alloca %struct.TextScroll*, align 8
  %mval = alloca [2 x i32], align 4
  %scroll_steps = alloca [2 x i32], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !8723, metadata !DIExpression()), !dbg !8724
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8725
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !8726
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !8724
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8727, metadata !DIExpression()), !dbg !8728
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8729
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !8730
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !8728
  call void @llvm.dbg.declare(metadata %struct.TextScroll** %tsc, metadata !8731, metadata !DIExpression()), !dbg !8732
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8733
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 5, !dbg !8734
  %3 = load i8*, i8** %customdata, align 8, !dbg !8734
  %4 = bitcast i8* %3 to %struct.TextScroll*, !dbg !8733
  store %struct.TextScroll* %4, %struct.TextScroll** %tsc, align 8, !dbg !8732
  call void @llvm.dbg.declare(metadata [2 x i32]* %mval, metadata !8735, metadata !DIExpression()), !dbg !8736
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8737
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8738
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 4, !dbg !8739
  %6 = load i32, i32* %x, align 4, !dbg !8739
  store i32 %6, i32* %arrayinit.begin, align 4, !dbg !8737
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !8737
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8740
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 5, !dbg !8741
  %8 = load i32, i32* %y, align 8, !dbg !8741
  store i32 %8, i32* %arrayinit.element, align 4, !dbg !8737
  call void @llvm.dbg.declare(metadata [2 x i32]* %scroll_steps, metadata !8742, metadata !DIExpression()), !dbg !8743
  %9 = bitcast [2 x i32]* %scroll_steps to i8*, !dbg !8743
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 8, i1 false), !dbg !8743
  %10 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8744
  call void @text_update_character_width(%struct.SpaceText* %10), !dbg !8745
  %11 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8746
  %first = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %11, i32 0, i32 2, !dbg !8748
  %12 = load i32, i32* %first, align 4, !dbg !8748
  %tobool = icmp ne i32 %12, 0, !dbg !8746
  br i1 %tobool, label %if.then, label %if.end, !dbg !8749

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8750
  %13 = load i32, i32* %arrayidx, align 4, !dbg !8750
  %14 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8752
  %old = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %14, i32 0, i32 0, !dbg !8753
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %old, i64 0, i64 0, !dbg !8752
  store i32 %13, i32* %arrayidx2, align 4, !dbg !8754
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !8755
  %15 = load i32, i32* %arrayidx3, align 4, !dbg !8755
  %16 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8756
  %old4 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %16, i32 0, i32 0, !dbg !8757
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %old4, i64 0, i64 1, !dbg !8756
  store i32 %15, i32* %arrayidx5, align 4, !dbg !8758
  %17 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8759
  %first6 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %17, i32 0, i32 2, !dbg !8760
  store i32 0, i32* %first6, align 4, !dbg !8761
  br label %if.end, !dbg !8762

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8763
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 2, !dbg !8765
  %19 = load i16, i16* %type, align 8, !dbg !8765
  %conv = sext i16 %19 to i32, !dbg !8763
  %cmp = icmp ne i32 %conv, 14, !dbg !8766
  br i1 %cmp, label %if.then8, label %if.end19, !dbg !8767

if.then8:                                         ; preds = %if.end
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8768
  %20 = load i32, i32* %arrayidx9, align 4, !dbg !8768
  %21 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8770
  %old10 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %21, i32 0, i32 0, !dbg !8771
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %old10, i64 0, i64 0, !dbg !8770
  %22 = load i32, i32* %arrayidx11, align 4, !dbg !8770
  %sub = sub nsw i32 %20, %22, !dbg !8772
  %23 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8773
  %delta = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %23, i32 0, i32 1, !dbg !8774
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %delta, i64 0, i64 0, !dbg !8773
  store i32 %sub, i32* %arrayidx12, align 4, !dbg !8775
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !8776
  %24 = load i32, i32* %arrayidx13, align 4, !dbg !8776
  %25 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8777
  %old14 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %25, i32 0, i32 0, !dbg !8778
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %old14, i64 0, i64 1, !dbg !8777
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !8777
  %sub16 = sub nsw i32 %24, %26, !dbg !8779
  %27 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8780
  %delta17 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %27, i32 0, i32 1, !dbg !8781
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %delta17, i64 0, i64 1, !dbg !8780
  store i32 %sub16, i32* %arrayidx18, align 4, !dbg !8782
  br label %if.end19, !dbg !8783

if.end19:                                         ; preds = %if.then8, %if.end
  %28 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8784
  %scrollbar = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %28, i32 0, i32 3, !dbg !8786
  %29 = load i32, i32* %scrollbar, align 4, !dbg !8786
  %tobool20 = icmp ne i32 %29, 0, !dbg !8784
  br i1 %tobool20, label %if.else, label %if.then21, !dbg !8787

if.then21:                                        ; preds = %if.end19
  %30 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8788
  %delta22 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %30, i32 0, i32 1, !dbg !8790
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %delta22, i64 0, i64 0, !dbg !8788
  %31 = load i32, i32* %arrayidx23, align 4, !dbg !8788
  %sub24 = sub nsw i32 0, %31, !dbg !8791
  %conv25 = sitofp i32 %sub24 to float, !dbg !8791
  %32 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8792
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %32, i32 0, i32 12, !dbg !8793
  %33 = load i8, i8* %cwidth, align 2, !dbg !8793
  %conv26 = uitofp i8 %33 to float, !dbg !8794
  %div = fdiv float %conv25, %conv26, !dbg !8795
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8796
  %scroll_accum = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 32, !dbg !8797
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum, i64 0, i64 0, !dbg !8796
  %35 = load float, float* %arrayidx27, align 8, !dbg !8798
  %add = fadd float %35, %div, !dbg !8798
  store float %add, float* %arrayidx27, align 8, !dbg !8798
  %36 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8799
  %delta28 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %36, i32 0, i32 1, !dbg !8800
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %delta28, i64 0, i64 1, !dbg !8799
  %37 = load i32, i32* %arrayidx29, align 4, !dbg !8799
  %conv30 = sitofp i32 %37 to float, !dbg !8799
  %38 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8801
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %38, i32 0, i32 29, !dbg !8802
  %39 = load i16, i16* %lheight_dpi, align 2, !dbg !8802
  %conv31 = sext i16 %39 to i32, !dbg !8801
  %40 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8803
  %lheight_dpi32 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %40, i32 0, i32 29, !dbg !8803
  %41 = load i16, i16* %lheight_dpi32, align 2, !dbg !8803
  %conv33 = sext i16 %41 to i32, !dbg !8803
  %conv34 = sitofp i32 %conv33 to float, !dbg !8803
  %mul = fmul float 0x3FD3333340000000, %conv34, !dbg !8803
  %conv35 = fptosi float %mul to i32, !dbg !8803
  %add36 = add nsw i32 %conv31, %conv35, !dbg !8804
  %conv37 = sitofp i32 %add36 to float, !dbg !8805
  %div38 = fdiv float %conv30, %conv37, !dbg !8806
  %42 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8807
  %scroll_accum39 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %42, i32 0, i32 32, !dbg !8808
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum39, i64 0, i64 1, !dbg !8807
  %43 = load float, float* %arrayidx40, align 4, !dbg !8809
  %add41 = fadd float %43, %div38, !dbg !8809
  store float %add41, float* %arrayidx40, align 4, !dbg !8809
  br label %if.end50, !dbg !8810

if.else:                                          ; preds = %if.end19
  %44 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8811
  %delta42 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %44, i32 0, i32 1, !dbg !8813
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %delta42, i64 0, i64 1, !dbg !8811
  %45 = load i32, i32* %arrayidx43, align 4, !dbg !8811
  %sub44 = sub nsw i32 0, %45, !dbg !8814
  %conv45 = sitofp i32 %sub44 to float, !dbg !8814
  %46 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8815
  %pix_per_line = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %46, i32 0, i32 21, !dbg !8816
  %47 = load float, float* %pix_per_line, align 4, !dbg !8816
  %mul46 = fmul float %conv45, %47, !dbg !8817
  %48 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8818
  %scroll_accum47 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %48, i32 0, i32 32, !dbg !8819
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum47, i64 0, i64 1, !dbg !8818
  %49 = load float, float* %arrayidx48, align 4, !dbg !8820
  %add49 = fadd float %49, %mul46, !dbg !8820
  store float %add49, float* %arrayidx48, align 4, !dbg !8820
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then21
  %50 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8821
  %scroll_accum51 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %50, i32 0, i32 32, !dbg !8822
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum51, i64 0, i64 0, !dbg !8821
  %51 = load float, float* %arrayidx52, align 8, !dbg !8821
  %conv53 = fptosi float %51 to i32, !dbg !8823
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 0, !dbg !8824
  store i32 %conv53, i32* %arrayidx54, align 4, !dbg !8825
  %52 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8826
  %scroll_accum55 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %52, i32 0, i32 32, !dbg !8827
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum55, i64 0, i64 1, !dbg !8826
  %53 = load float, float* %arrayidx56, align 4, !dbg !8826
  %conv57 = fptosi float %53 to i32, !dbg !8828
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 1, !dbg !8829
  store i32 %conv57, i32* %arrayidx58, align 4, !dbg !8830
  %arrayidx59 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 0, !dbg !8831
  %54 = load i32, i32* %arrayidx59, align 4, !dbg !8831
  %conv60 = sitofp i32 %54 to float, !dbg !8831
  %55 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8832
  %scroll_accum61 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %55, i32 0, i32 32, !dbg !8833
  %arrayidx62 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum61, i64 0, i64 0, !dbg !8832
  %56 = load float, float* %arrayidx62, align 8, !dbg !8834
  %sub63 = fsub float %56, %conv60, !dbg !8834
  store float %sub63, float* %arrayidx62, align 8, !dbg !8834
  %arrayidx64 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 1, !dbg !8835
  %57 = load i32, i32* %arrayidx64, align 4, !dbg !8835
  %conv65 = sitofp i32 %57 to float, !dbg !8835
  %58 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8836
  %scroll_accum66 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %58, i32 0, i32 32, !dbg !8837
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %scroll_accum66, i64 0, i64 1, !dbg !8836
  %59 = load float, float* %arrayidx67, align 4, !dbg !8838
  %sub68 = fsub float %59, %conv65, !dbg !8838
  store float %sub68, float* %arrayidx67, align 4, !dbg !8838
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 0, !dbg !8839
  %60 = load i32, i32* %arrayidx69, align 4, !dbg !8839
  %tobool70 = icmp ne i32 %60, 0, !dbg !8839
  br i1 %tobool70, label %if.then73, label %lor.lhs.false, !dbg !8841

lor.lhs.false:                                    ; preds = %if.end50
  %arrayidx71 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 1, !dbg !8842
  %61 = load i32, i32* %arrayidx71, align 4, !dbg !8842
  %tobool72 = icmp ne i32 %61, 0, !dbg !8842
  br i1 %tobool72, label %if.then73, label %if.end89, !dbg !8843

if.then73:                                        ; preds = %lor.lhs.false, %if.end50
  %62 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8844
  %63 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8846
  %arrayidx74 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 1, !dbg !8847
  %64 = load i32, i32* %arrayidx74, align 4, !dbg !8847
  call void @txt_screen_skip(%struct.SpaceText* %62, %struct.ARegion* %63, i32 %64), !dbg !8848
  %65 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8849
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %65, i32 0, i32 24, !dbg !8851
  %66 = load i32, i32* %wordwrap, align 8, !dbg !8851
  %tobool75 = icmp ne i32 %66, 0, !dbg !8849
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8852

if.then76:                                        ; preds = %if.then73
  %67 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8853
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %67, i32 0, i32 14, !dbg !8855
  store i32 0, i32* %left, align 8, !dbg !8856
  br label %if.end87, !dbg !8857

if.else77:                                        ; preds = %if.then73
  %arrayidx78 = getelementptr inbounds [2 x i32], [2 x i32]* %scroll_steps, i64 0, i64 0, !dbg !8858
  %68 = load i32, i32* %arrayidx78, align 4, !dbg !8858
  %69 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8860
  %left79 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %69, i32 0, i32 14, !dbg !8861
  %70 = load i32, i32* %left79, align 8, !dbg !8862
  %add80 = add nsw i32 %70, %68, !dbg !8862
  store i32 %add80, i32* %left79, align 8, !dbg !8862
  %71 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8863
  %left81 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %71, i32 0, i32 14, !dbg !8865
  %72 = load i32, i32* %left81, align 8, !dbg !8865
  %cmp82 = icmp slt i32 %72, 0, !dbg !8866
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !8867

if.then84:                                        ; preds = %if.else77
  %73 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8868
  %left85 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %73, i32 0, i32 14, !dbg !8869
  store i32 0, i32* %left85, align 8, !dbg !8870
  br label %if.end86, !dbg !8868

if.end86:                                         ; preds = %if.then84, %if.else77
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then76
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8871
  %call88 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %74), !dbg !8872
  call void @ED_area_tag_redraw(%struct.ScrArea* %call88), !dbg !8873
  br label %if.end89, !dbg !8874

if.end89:                                         ; preds = %if.end87, %lor.lhs.false
  %arrayidx90 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !8875
  %75 = load i32, i32* %arrayidx90, align 4, !dbg !8875
  %76 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8876
  %old91 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %76, i32 0, i32 0, !dbg !8877
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %old91, i64 0, i64 0, !dbg !8876
  store i32 %75, i32* %arrayidx92, align 4, !dbg !8878
  %arrayidx93 = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !8879
  %77 = load i32, i32* %arrayidx93, align 4, !dbg !8879
  %78 = load %struct.TextScroll*, %struct.TextScroll** %tsc, align 8, !dbg !8880
  %old94 = getelementptr inbounds %struct.TextScroll, %struct.TextScroll* %78, i32 0, i32 0, !dbg !8881
  %arrayidx95 = getelementptr inbounds [2 x i32], [2 x i32]* %old94, i64 0, i64 1, !dbg !8880
  store i32 %77, i32* %arrayidx95, align 4, !dbg !8882
  ret void, !dbg !8883
}

; Function Attrs: noinline nounwind uwtable
define internal void @scroll_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8884 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !8889, metadata !DIExpression()), !dbg !8890
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8891
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !8892
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !8890
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8893
  %flags = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 9, !dbg !8894
  %2 = load i16, i16* %flags, align 8, !dbg !8895
  %conv = sext i16 %2 to i32, !dbg !8895
  %and = and i32 %conv, -2, !dbg !8895
  %conv1 = trunc i32 %and to i16, !dbg !8895
  store i16 %conv1, i16* %flags, align 8, !dbg !8895
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8896
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8897
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !8898
  %5 = load i8*, i8** %customdata, align 8, !dbg !8898
  call void %3(i8* %5), !dbg !8896
  ret void, !dbg !8899
}

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_cent_x(%struct.rcti* %rct) #0 !dbg !8900 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !8908
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !8909
  %1 = load i32, i32* %xmin, align 4, !dbg !8909
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !8910
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 1, !dbg !8911
  %3 = load i32, i32* %xmax, align 4, !dbg !8911
  %add = add nsw i32 %1, %3, !dbg !8912
  %div = sdiv i32 %add, 2, !dbg !8913
  ret i32 %div, !dbg !8914
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_cent_y(%struct.rcti* %rct) #0 !dbg !8915 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !8916, metadata !DIExpression()), !dbg !8917
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !8918
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 2, !dbg !8919
  %1 = load i32, i32* %ymin, align 4, !dbg !8919
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !8920
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 3, !dbg !8921
  %3 = load i32, i32* %ymax, align 4, !dbg !8921
  %add = add nsw i32 %1, %3, !dbg !8922
  %div = sdiv i32 %add, 2, !dbg !8923
  ret i32 %div, !dbg !8924
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_cursor_set_apply(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8925 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %ssel = alloca %struct.SetSelection*, align 8
  %d = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8926, metadata !DIExpression()), !dbg !8927
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8928, metadata !DIExpression()), !dbg !8929
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !8932, metadata !DIExpression()), !dbg !8933
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8934
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !8935
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !8933
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8936, metadata !DIExpression()), !dbg !8937
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8938
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !8939
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !8937
  call void @llvm.dbg.declare(metadata %struct.SetSelection** %ssel, metadata !8940, metadata !DIExpression()), !dbg !8941
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8942
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 5, !dbg !8943
  %3 = load i8*, i8** %customdata, align 8, !dbg !8943
  %4 = bitcast i8* %3 to %struct.SetSelection*, !dbg !8942
  store %struct.SetSelection* %4, %struct.SetSelection** %ssel, align 8, !dbg !8941
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8944
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 6, !dbg !8946
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 1, !dbg !8944
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8944
  %cmp = icmp slt i32 %6, 0, !dbg !8947
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8948

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8949
  %mval2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 6, !dbg !8950
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %mval2, i64 0, i64 1, !dbg !8949
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !8949
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8951
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %9, i32 0, i32 6, !dbg !8952
  %10 = load i16, i16* %winy, align 2, !dbg !8952
  %conv = sext i16 %10 to i32, !dbg !8951
  %cmp4 = icmp sgt i32 %8, %conv, !dbg !8953
  br i1 %cmp4, label %if.then, label %if.else, !dbg !8954

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %d, metadata !8955, metadata !DIExpression()), !dbg !8957
  %11 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !8958
  %old = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %11, i32 0, i32 3, !dbg !8959
  %arrayidx6 = getelementptr inbounds [2 x i16], [2 x i16]* %old, i64 0, i64 1, !dbg !8958
  %12 = load i16, i16* %arrayidx6, align 2, !dbg !8958
  %conv7 = sext i16 %12 to i32, !dbg !8958
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8960
  %mval8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 6, !dbg !8961
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %mval8, i64 0, i64 1, !dbg !8960
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !8960
  %sub = sub nsw i32 %conv7, %14, !dbg !8962
  %conv10 = sitofp i32 %sub to float, !dbg !8963
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8964
  %pix_per_line = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 21, !dbg !8965
  %16 = load float, float* %pix_per_line, align 4, !dbg !8965
  %mul = fmul float %conv10, %16, !dbg !8966
  %conv11 = fptosi float %mul to i32, !dbg !8963
  store i32 %conv11, i32* %d, align 4, !dbg !8957
  %17 = load i32, i32* %d, align 4, !dbg !8967
  %tobool = icmp ne i32 %17, 0, !dbg !8967
  br i1 %tobool, label %if.then12, label %if.end, !dbg !8969

if.then12:                                        ; preds = %if.then
  %18 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8970
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8971
  %20 = load i32, i32* %d, align 4, !dbg !8972
  call void @txt_screen_skip(%struct.SpaceText* %18, %struct.ARegion* %19, i32 %20), !dbg !8973
  br label %if.end, !dbg !8973

if.end:                                           ; preds = %if.then12, %if.then
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8974
  %22 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8975
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8976
  %mval13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 6, !dbg !8977
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %mval13, i64 0, i64 0, !dbg !8976
  %24 = load i32, i32* %arrayidx14, align 4, !dbg !8976
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8978
  %mval15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 6, !dbg !8979
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %mval15, i64 0, i64 1, !dbg !8978
  %26 = load i32, i32* %arrayidx16, align 4, !dbg !8978
  %cmp17 = icmp slt i32 %26, 0, !dbg !8980
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !8978

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !8978

cond.false:                                       ; preds = %if.end
  %27 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8981
  %winy19 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %27, i32 0, i32 6, !dbg !8982
  %28 = load i16, i16* %winy19, align 2, !dbg !8982
  %conv20 = sext i16 %28 to i32, !dbg !8981
  br label %cond.end, !dbg !8978

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv20, %cond.false ], !dbg !8978
  call void @text_cursor_set_to_pos(%struct.SpaceText* %21, %struct.ARegion* %22, i32 %24, i32 %cond, i8 zeroext 1), !dbg !8983
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8984
  call void @text_update_cursor_moved(%struct.bContext* %29), !dbg !8985
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8986
  %31 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8987
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %31, i32 0, i32 6, !dbg !8988
  %32 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !8988
  %33 = bitcast %struct.Text* %32 to i8*, !dbg !8987
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 204603392, i8* %33), !dbg !8989
  br label %if.end75, !dbg !8990

if.else:                                          ; preds = %lor.lhs.false
  %34 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !8991
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %34, i32 0, i32 24, !dbg !8993
  %35 = load i32, i32* %wordwrap, align 8, !dbg !8993
  %tobool21 = icmp ne i32 %35, 0, !dbg !8991
  br i1 %tobool21, label %if.else58, label %land.lhs.true, !dbg !8994

land.lhs.true:                                    ; preds = %if.else
  %36 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8995
  %mval22 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %36, i32 0, i32 6, !dbg !8996
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %mval22, i64 0, i64 0, !dbg !8995
  %37 = load i32, i32* %arrayidx23, align 4, !dbg !8995
  %cmp24 = icmp slt i32 %37, 0, !dbg !8997
  br i1 %cmp24, label %if.then32, label %lor.lhs.false26, !dbg !8998

lor.lhs.false26:                                  ; preds = %land.lhs.true
  %38 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8999
  %mval27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %38, i32 0, i32 6, !dbg !9000
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %mval27, i64 0, i64 0, !dbg !8999
  %39 = load i32, i32* %arrayidx28, align 4, !dbg !8999
  %40 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9001
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %40, i32 0, i32 5, !dbg !9002
  %41 = load i16, i16* %winx, align 8, !dbg !9002
  %conv29 = sext i16 %41 to i32, !dbg !9001
  %cmp30 = icmp sgt i32 %39, %conv29, !dbg !9003
  br i1 %cmp30, label %if.then32, label %if.else58, !dbg !9004

if.then32:                                        ; preds = %lor.lhs.false26, %land.lhs.true
  %42 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9005
  %mval33 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %42, i32 0, i32 6, !dbg !9008
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %mval33, i64 0, i64 0, !dbg !9005
  %43 = load i32, i32* %arrayidx34, align 4, !dbg !9005
  %44 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9009
  %winx35 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %44, i32 0, i32 5, !dbg !9010
  %45 = load i16, i16* %winx35, align 8, !dbg !9010
  %conv36 = sext i16 %45 to i32, !dbg !9009
  %cmp37 = icmp sgt i32 %43, %conv36, !dbg !9011
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !9012

if.then39:                                        ; preds = %if.then32
  %46 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9013
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %46, i32 0, i32 14, !dbg !9014
  %47 = load i32, i32* %left, align 8, !dbg !9015
  %inc = add nsw i32 %47, 1, !dbg !9015
  store i32 %inc, i32* %left, align 8, !dbg !9015
  br label %if.end52, !dbg !9013

if.else40:                                        ; preds = %if.then32
  %48 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9016
  %mval41 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %48, i32 0, i32 6, !dbg !9018
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %mval41, i64 0, i64 0, !dbg !9016
  %49 = load i32, i32* %arrayidx42, align 4, !dbg !9016
  %cmp43 = icmp slt i32 %49, 0, !dbg !9019
  br i1 %cmp43, label %land.lhs.true45, label %if.end51, !dbg !9020

land.lhs.true45:                                  ; preds = %if.else40
  %50 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9021
  %left46 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %50, i32 0, i32 14, !dbg !9022
  %51 = load i32, i32* %left46, align 8, !dbg !9022
  %cmp47 = icmp sgt i32 %51, 0, !dbg !9023
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !9024

if.then49:                                        ; preds = %land.lhs.true45
  %52 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9025
  %left50 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %52, i32 0, i32 14, !dbg !9026
  %53 = load i32, i32* %left50, align 8, !dbg !9027
  %dec = add nsw i32 %53, -1, !dbg !9027
  store i32 %dec, i32* %left50, align 8, !dbg !9027
  br label %if.end51, !dbg !9025

if.end51:                                         ; preds = %if.then49, %land.lhs.true45, %if.else40
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then39
  %54 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9028
  %55 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9029
  %56 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9030
  %mval53 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %56, i32 0, i32 6, !dbg !9031
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %mval53, i64 0, i64 0, !dbg !9030
  %57 = load i32, i32* %arrayidx54, align 4, !dbg !9030
  %58 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9032
  %mval55 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %58, i32 0, i32 6, !dbg !9033
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %mval55, i64 0, i64 1, !dbg !9032
  %59 = load i32, i32* %arrayidx56, align 4, !dbg !9032
  call void @text_cursor_set_to_pos(%struct.SpaceText* %54, %struct.ARegion* %55, i32 %57, i32 %59, i8 zeroext 1), !dbg !9034
  %60 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9035
  call void @text_update_cursor_moved(%struct.bContext* %60), !dbg !9036
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9037
  %62 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9038
  %text57 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %62, i32 0, i32 6, !dbg !9039
  %63 = load %struct.Text*, %struct.Text** %text57, align 8, !dbg !9039
  %64 = bitcast %struct.Text* %63 to i8*, !dbg !9038
  call void @WM_event_add_notifier(%struct.bContext* %61, i32 204603392, i8* %64), !dbg !9040
  br label %if.end74, !dbg !9041

if.else58:                                        ; preds = %lor.lhs.false26, %if.else
  %65 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9042
  %66 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9044
  %67 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9045
  %mval59 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %67, i32 0, i32 6, !dbg !9046
  %arrayidx60 = getelementptr inbounds [2 x i32], [2 x i32]* %mval59, i64 0, i64 0, !dbg !9045
  %68 = load i32, i32* %arrayidx60, align 4, !dbg !9045
  %69 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9047
  %mval61 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %69, i32 0, i32 6, !dbg !9048
  %arrayidx62 = getelementptr inbounds [2 x i32], [2 x i32]* %mval61, i64 0, i64 1, !dbg !9047
  %70 = load i32, i32* %arrayidx62, align 4, !dbg !9047
  call void @text_cursor_set_to_pos(%struct.SpaceText* %65, %struct.ARegion* %66, i32 %68, i32 %70, i8 zeroext 1), !dbg !9049
  %71 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9050
  call void @text_update_cursor_moved(%struct.bContext* %71), !dbg !9051
  %72 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9052
  %73 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9053
  %text63 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %73, i32 0, i32 6, !dbg !9054
  %74 = load %struct.Text*, %struct.Text** %text63, align 8, !dbg !9054
  %75 = bitcast %struct.Text* %74 to i8*, !dbg !9053
  call void @WM_event_add_notifier(%struct.bContext* %72, i32 204603392, i8* %75), !dbg !9055
  %76 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9056
  %mval64 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %76, i32 0, i32 6, !dbg !9057
  %arrayidx65 = getelementptr inbounds [2 x i32], [2 x i32]* %mval64, i64 0, i64 0, !dbg !9056
  %77 = load i32, i32* %arrayidx65, align 4, !dbg !9056
  %conv66 = trunc i32 %77 to i16, !dbg !9056
  %78 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !9058
  %old67 = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %78, i32 0, i32 3, !dbg !9059
  %arrayidx68 = getelementptr inbounds [2 x i16], [2 x i16]* %old67, i64 0, i64 0, !dbg !9058
  store i16 %conv66, i16* %arrayidx68, align 4, !dbg !9060
  %79 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9061
  %mval69 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %79, i32 0, i32 6, !dbg !9062
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* %mval69, i64 0, i64 1, !dbg !9061
  %80 = load i32, i32* %arrayidx70, align 4, !dbg !9061
  %conv71 = trunc i32 %80 to i16, !dbg !9061
  %81 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !9063
  %old72 = getelementptr inbounds %struct.SetSelection, %struct.SetSelection* %81, i32 0, i32 3, !dbg !9064
  %arrayidx73 = getelementptr inbounds [2 x i16], [2 x i16]* %old72, i64 0, i64 1, !dbg !9063
  store i16 %conv71, i16* %arrayidx73, align 2, !dbg !9065
  br label %if.end74

if.end74:                                         ; preds = %if.else58, %if.end52
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %cond.end
  ret void, !dbg !9066
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_cursor_set_to_pos(%struct.SpaceText* %st, %struct.ARegion* %ar, i32 %x, i32 %y, i8 zeroext %sel) #0 !dbg !9067 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %sel.addr = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %linep = alloca %struct.TextLine**, align 8
  %charp = alloca i32*, align 8
  %w = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !9070, metadata !DIExpression()), !dbg !9071
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !9072, metadata !DIExpression()), !dbg !9073
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9074, metadata !DIExpression()), !dbg !9075
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9076, metadata !DIExpression()), !dbg !9077
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !9080, metadata !DIExpression()), !dbg !9081
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9082
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !9083
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !9083
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !9081
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9084
  call void @text_update_character_width(%struct.SpaceText* %2), !dbg !9085
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9086
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 6, !dbg !9087
  %4 = load i16, i16* %winy, align 2, !dbg !9087
  %conv = sext i16 %4 to i32, !dbg !9086
  %sub = sub nsw i32 %conv, 2, !dbg !9088
  %5 = load i32, i32* %y.addr, align 4, !dbg !9089
  %sub2 = sub nsw i32 %sub, %5, !dbg !9090
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9091
  %lheight_dpi = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 29, !dbg !9092
  %7 = load i16, i16* %lheight_dpi, align 2, !dbg !9092
  %conv3 = sext i16 %7 to i32, !dbg !9091
  %8 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9093
  %lheight_dpi4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %8, i32 0, i32 29, !dbg !9093
  %9 = load i16, i16* %lheight_dpi4, align 2, !dbg !9093
  %conv5 = sext i16 %9 to i32, !dbg !9093
  %conv6 = sitofp i32 %conv5 to float, !dbg !9093
  %mul = fmul float 0x3FD3333340000000, %conv6, !dbg !9093
  %conv7 = fptosi float %mul to i32, !dbg !9093
  %add = add nsw i32 %conv3, %conv7, !dbg !9094
  %div = sdiv i32 %sub2, %add, !dbg !9095
  store i32 %div, i32* %y.addr, align 4, !dbg !9096
  %10 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9097
  %showlinenrs = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %10, i32 0, i32 15, !dbg !9099
  %11 = load i32, i32* %showlinenrs, align 4, !dbg !9099
  %tobool = icmp ne i32 %11, 0, !dbg !9097
  br i1 %tobool, label %if.then, label %if.else, !dbg !9100

if.then:                                          ; preds = %entry
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9101
  %conv8 = sext i16 %12 to i32, !dbg !9101
  %conv9 = sitofp i32 %conv8 to float, !dbg !9101
  %mul10 = fmul float 5.000000e-01, %conv9, !dbg !9101
  %conv11 = fptosi float %mul10 to i32, !dbg !9101
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9102
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 12, !dbg !9102
  %14 = load i8, i8* %cwidth, align 2, !dbg !9102
  %conv12 = zext i8 %14 to i32, !dbg !9102
  %15 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9102
  %linenrs_tot = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %15, i32 0, i32 13, !dbg !9102
  %16 = load i8, i8* %linenrs_tot, align 1, !dbg !9102
  %conv13 = zext i8 %16 to i32, !dbg !9102
  %mul14 = mul nsw i32 %conv12, %conv13, !dbg !9102
  %add15 = add nsw i32 %conv11, %mul14, !dbg !9103
  %17 = load i32, i32* %x.addr, align 4, !dbg !9104
  %sub16 = sub nsw i32 %17, %add15, !dbg !9104
  store i32 %sub16, i32* %x.addr, align 4, !dbg !9104
  br label %if.end, !dbg !9105

if.else:                                          ; preds = %entry
  %18 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !9106
  %conv17 = sext i16 %18 to i32, !dbg !9106
  %conv18 = sitofp i32 %conv17 to float, !dbg !9106
  %mul19 = fmul float 5.000000e-01, %conv18, !dbg !9106
  %conv20 = fptosi float %mul19 to i32, !dbg !9106
  %19 = load i32, i32* %x.addr, align 4, !dbg !9107
  %sub21 = sub nsw i32 %19, %conv20, !dbg !9107
  store i32 %sub21, i32* %x.addr, align 4, !dbg !9107
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %x.addr, align 4, !dbg !9108
  %cmp = icmp slt i32 %20, 0, !dbg !9110
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !9111

if.then23:                                        ; preds = %if.end
  store i32 0, i32* %x.addr, align 4, !dbg !9112
  br label %if.end24, !dbg !9113

if.end24:                                         ; preds = %if.then23, %if.end
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9114
  %22 = load i32, i32* %x.addr, align 4, !dbg !9115
  %call = call i32 @text_pixel_x_to_column(%struct.SpaceText* %21, i32 %22), !dbg !9116
  %23 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9117
  %left = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %23, i32 0, i32 14, !dbg !9118
  %24 = load i32, i32* %left, align 8, !dbg !9118
  %add25 = add nsw i32 %call, %24, !dbg !9119
  store i32 %add25, i32* %x.addr, align 4, !dbg !9120
  %25 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9121
  %wordwrap = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %25, i32 0, i32 24, !dbg !9123
  %26 = load i32, i32* %wordwrap, align 8, !dbg !9123
  %tobool26 = icmp ne i32 %26, 0, !dbg !9121
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !9124

if.then27:                                        ; preds = %if.end24
  %27 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9125
  %28 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9127
  %29 = load i32, i32* %x.addr, align 4, !dbg !9128
  %30 = load i32, i32* %y.addr, align 4, !dbg !9129
  %31 = load i8, i8* %sel.addr, align 1, !dbg !9130
  call void @text_cursor_set_to_pos_wrapped(%struct.SpaceText* %27, %struct.ARegion* %28, i32 %29, i32 %30, i8 zeroext %31), !dbg !9131
  br label %if.end68, !dbg !9132

if.else28:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata %struct.TextLine*** %linep, metadata !9133, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.declare(metadata i32** %charp, metadata !9136, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.declare(metadata i32* %w, metadata !9138, metadata !DIExpression()), !dbg !9139
  %32 = load i8, i8* %sel.addr, align 1, !dbg !9140
  %tobool29 = icmp ne i8 %32, 0, !dbg !9140
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !9142

if.then30:                                        ; preds = %if.else28
  %33 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9143
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %33, i32 0, i32 6, !dbg !9145
  store %struct.TextLine** %sell, %struct.TextLine*** %linep, align 8, !dbg !9146
  %34 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9147
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %34, i32 0, i32 8, !dbg !9148
  store i32* %selc, i32** %charp, align 8, !dbg !9149
  br label %if.end32, !dbg !9150

if.else31:                                        ; preds = %if.else28
  %35 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9151
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %35, i32 0, i32 5, !dbg !9153
  store %struct.TextLine** %curl, %struct.TextLine*** %linep, align 8, !dbg !9154
  %36 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9155
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %36, i32 0, i32 7, !dbg !9156
  store i32* %curc, i32** %charp, align 8, !dbg !9157
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  %37 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9158
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %37, i32 0, i32 4, !dbg !9159
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !9160
  %38 = load i8*, i8** %first, align 8, !dbg !9160
  %39 = bitcast i8* %38 to %struct.TextLine*, !dbg !9158
  %40 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9161
  %41 = load %struct.TextLine*, %struct.TextLine** %40, align 8, !dbg !9162
  %call33 = call i32 @txt_get_span(%struct.TextLine* %39, %struct.TextLine* %41), !dbg !9163
  %42 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9164
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %42, i32 0, i32 7, !dbg !9165
  %43 = load i32, i32* %top, align 8, !dbg !9165
  %sub34 = sub nsw i32 %call33, %43, !dbg !9166
  %44 = load i32, i32* %y.addr, align 4, !dbg !9167
  %sub35 = sub nsw i32 %44, %sub34, !dbg !9167
  store i32 %sub35, i32* %y.addr, align 4, !dbg !9167
  %45 = load i32, i32* %y.addr, align 4, !dbg !9168
  %cmp36 = icmp sgt i32 %45, 0, !dbg !9170
  br i1 %cmp36, label %if.then38, label %if.else45, !dbg !9171

if.then38:                                        ; preds = %if.end32
  br label %while.cond, !dbg !9172

while.cond:                                       ; preds = %if.end44, %if.then38
  %46 = load i32, i32* %y.addr, align 4, !dbg !9174
  %dec = add nsw i32 %46, -1, !dbg !9174
  store i32 %dec, i32* %y.addr, align 4, !dbg !9174
  %cmp39 = icmp ne i32 %46, 0, !dbg !9175
  br i1 %cmp39, label %while.body, label %while.end, !dbg !9172

while.body:                                       ; preds = %while.cond
  %47 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9176
  %48 = load %struct.TextLine*, %struct.TextLine** %47, align 8, !dbg !9178
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %48, i32 0, i32 0, !dbg !9179
  %49 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !9179
  %tobool41 = icmp ne %struct.TextLine* %49, null, !dbg !9180
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !9181

if.then42:                                        ; preds = %while.body
  %50 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9182
  %51 = load %struct.TextLine*, %struct.TextLine** %50, align 8, !dbg !9183
  %next43 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %51, i32 0, i32 0, !dbg !9184
  %52 = load %struct.TextLine*, %struct.TextLine** %next43, align 8, !dbg !9184
  %53 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9185
  store %struct.TextLine* %52, %struct.TextLine** %53, align 8, !dbg !9186
  br label %if.end44, !dbg !9187

if.end44:                                         ; preds = %if.then42, %while.body
  br label %while.cond, !dbg !9172, !llvm.loop !9188

while.end:                                        ; preds = %while.cond
  br label %if.end59, !dbg !9190

if.else45:                                        ; preds = %if.end32
  %54 = load i32, i32* %y.addr, align 4, !dbg !9191
  %cmp46 = icmp slt i32 %54, 0, !dbg !9193
  br i1 %cmp46, label %if.then48, label %if.end58, !dbg !9194

if.then48:                                        ; preds = %if.else45
  br label %while.cond49, !dbg !9195

while.cond49:                                     ; preds = %if.end56, %if.then48
  %55 = load i32, i32* %y.addr, align 4, !dbg !9197
  %inc = add nsw i32 %55, 1, !dbg !9197
  store i32 %inc, i32* %y.addr, align 4, !dbg !9197
  %cmp50 = icmp ne i32 %55, 0, !dbg !9198
  br i1 %cmp50, label %while.body52, label %while.end57, !dbg !9195

while.body52:                                     ; preds = %while.cond49
  %56 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9199
  %57 = load %struct.TextLine*, %struct.TextLine** %56, align 8, !dbg !9201
  %prev = getelementptr inbounds %struct.TextLine, %struct.TextLine* %57, i32 0, i32 1, !dbg !9202
  %58 = load %struct.TextLine*, %struct.TextLine** %prev, align 8, !dbg !9202
  %tobool53 = icmp ne %struct.TextLine* %58, null, !dbg !9203
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !9204

if.then54:                                        ; preds = %while.body52
  %59 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9205
  %60 = load %struct.TextLine*, %struct.TextLine** %59, align 8, !dbg !9206
  %prev55 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %60, i32 0, i32 1, !dbg !9207
  %61 = load %struct.TextLine*, %struct.TextLine** %prev55, align 8, !dbg !9207
  %62 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9208
  store %struct.TextLine* %61, %struct.TextLine** %62, align 8, !dbg !9209
  br label %if.end56, !dbg !9210

if.end56:                                         ; preds = %if.then54, %while.body52
  br label %while.cond49, !dbg !9195, !llvm.loop !9211

while.end57:                                      ; preds = %while.cond49
  br label %if.end58, !dbg !9213

if.end58:                                         ; preds = %while.end57, %if.else45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %while.end
  %63 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9214
  %64 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9215
  %65 = load %struct.TextLine*, %struct.TextLine** %64, align 8, !dbg !9216
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %65, i32 0, i32 2, !dbg !9217
  %66 = load i8*, i8** %line, align 8, !dbg !9217
  %call60 = call i32 @flatten_width(%struct.SpaceText* %63, i8* %66), !dbg !9218
  store i32 %call60, i32* %w, align 4, !dbg !9219
  %67 = load i32, i32* %x.addr, align 4, !dbg !9220
  %68 = load i32, i32* %w, align 4, !dbg !9222
  %cmp61 = icmp slt i32 %67, %68, !dbg !9223
  br i1 %cmp61, label %if.then63, label %if.else66, !dbg !9224

if.then63:                                        ; preds = %if.end59
  %69 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9225
  %70 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9226
  %71 = load %struct.TextLine*, %struct.TextLine** %70, align 8, !dbg !9227
  %line64 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %71, i32 0, i32 2, !dbg !9228
  %72 = load i8*, i8** %line64, align 8, !dbg !9228
  %73 = load i32, i32* %x.addr, align 4, !dbg !9229
  %call65 = call i32 @flatten_column_to_offset(%struct.SpaceText* %69, i8* %72, i32 %73), !dbg !9230
  %74 = load i32*, i32** %charp, align 8, !dbg !9231
  store i32 %call65, i32* %74, align 4, !dbg !9232
  br label %if.end67, !dbg !9233

if.else66:                                        ; preds = %if.end59
  %75 = load %struct.TextLine**, %struct.TextLine*** %linep, align 8, !dbg !9234
  %76 = load %struct.TextLine*, %struct.TextLine** %75, align 8, !dbg !9235
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %76, i32 0, i32 4, !dbg !9236
  %77 = load i32, i32* %len, align 8, !dbg !9236
  %78 = load i32*, i32** %charp, align 8, !dbg !9237
  store i32 %77, i32* %78, align 4, !dbg !9238
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then63
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then27
  %79 = load i8, i8* %sel.addr, align 1, !dbg !9239
  %tobool69 = icmp ne i8 %79, 0, !dbg !9239
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !9241

if.then70:                                        ; preds = %if.end68
  %80 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9242
  call void @txt_pop_sel(%struct.Text* %80), !dbg !9243
  br label %if.end71, !dbg !9243

if.end71:                                         ; preds = %if.then70, %if.end68
  ret void, !dbg !9244
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_pixel_x_to_column(%struct.SpaceText* %st, i32 %x) #0 !dbg !9245 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %x.addr = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  %0 = load i32, i32* %x.addr, align 4, !dbg !9252
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9253
  %cwidth = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 12, !dbg !9254
  %2 = load i8, i8* %cwidth, align 2, !dbg !9254
  %conv = zext i8 %2 to i32, !dbg !9253
  %div = sdiv i32 %conv, 2, !dbg !9255
  %add = add nsw i32 %0, %div, !dbg !9256
  %3 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9257
  %cwidth1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %3, i32 0, i32 12, !dbg !9258
  %4 = load i8, i8* %cwidth1, align 2, !dbg !9258
  %conv2 = zext i8 %4 to i32, !dbg !9257
  %div3 = sdiv i32 %add, %conv2, !dbg !9259
  ret i32 %div3, !dbg !9260
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_cursor_set_to_pos_wrapped(%struct.SpaceText* %st, %struct.ARegion* %ar, i32 %x, i32 %y, i8 zeroext %sel) #0 !dbg !9261 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %sel.addr = alloca i8, align 1
  %text = alloca %struct.Text*, align 8
  %max = alloca i32, align 4
  %charp = alloca i32, align 4
  %loop = alloca i32, align 4
  %found = alloca i32, align 4
  %ch = alloca i8, align 1
  %linep = alloca %struct.TextLine*, align 8
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %j = alloca i32, align 4
  %curs = alloca i32, align 4
  %endj = alloca i32, align 4
  %chop = alloca i32, align 4
  %chars = alloca i32, align 4
  %columns = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !9262, metadata !DIExpression()), !dbg !9263
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !9264, metadata !DIExpression()), !dbg !9265
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9266, metadata !DIExpression()), !dbg !9267
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9268, metadata !DIExpression()), !dbg !9269
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !9272, metadata !DIExpression()), !dbg !9273
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9274
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !9275
  %1 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !9275
  store %struct.Text* %1, %struct.Text** %text, align 8, !dbg !9273
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9276, metadata !DIExpression()), !dbg !9277
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9278
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9279
  %call = call i32 @wrap_width(%struct.SpaceText* %2, %struct.ARegion* %3), !dbg !9280
  store i32 %call, i32* %max, align 4, !dbg !9277
  call void @llvm.dbg.declare(metadata i32* %charp, metadata !9281, metadata !DIExpression()), !dbg !9282
  store i32 -1, i32* %charp, align 4, !dbg !9282
  call void @llvm.dbg.declare(metadata i32* %loop, metadata !9283, metadata !DIExpression()), !dbg !9284
  store i32 1, i32* %loop, align 4, !dbg !9284
  call void @llvm.dbg.declare(metadata i32* %found, metadata !9285, metadata !DIExpression()), !dbg !9286
  store i32 0, i32* %found, align 4, !dbg !9286
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linep, metadata !9289, metadata !DIExpression()), !dbg !9290
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9291
  %5 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9292
  %call2 = call %struct.TextLine* @get_first_visible_line(%struct.SpaceText* %4, %struct.ARegion* %5, i32* %y.addr), !dbg !9293
  store %struct.TextLine* %call2, %struct.TextLine** %linep, align 8, !dbg !9290
  br label %while.cond, !dbg !9294

while.cond:                                       ; preds = %if.end128, %entry
  %6 = load i32, i32* %loop, align 4, !dbg !9295
  %tobool = icmp ne i32 %6, 0, !dbg !9295
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9296

land.rhs:                                         ; preds = %while.cond
  %7 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9297
  %tobool3 = icmp ne %struct.TextLine* %7, null, !dbg !9296
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !9298
  br i1 %8, label %while.body, label %while.end131, !dbg !9294

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9299, metadata !DIExpression()), !dbg !9301
  store i32 0, i32* %i, align 4, !dbg !9301
  call void @llvm.dbg.declare(metadata i32* %start, metadata !9302, metadata !DIExpression()), !dbg !9303
  store i32 0, i32* %start, align 4, !dbg !9303
  call void @llvm.dbg.declare(metadata i32* %end, metadata !9304, metadata !DIExpression()), !dbg !9305
  %9 = load i32, i32* %max, align 4, !dbg !9306
  store i32 %9, i32* %end, align 4, !dbg !9305
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9307, metadata !DIExpression()), !dbg !9308
  store i32 0, i32* %j, align 4, !dbg !9308
  call void @llvm.dbg.declare(metadata i32* %curs, metadata !9309, metadata !DIExpression()), !dbg !9310
  store i32 0, i32* %curs, align 4, !dbg !9310
  call void @llvm.dbg.declare(metadata i32* %endj, metadata !9311, metadata !DIExpression()), !dbg !9312
  store i32 0, i32* %endj, align 4, !dbg !9312
  call void @llvm.dbg.declare(metadata i32* %chop, metadata !9313, metadata !DIExpression()), !dbg !9314
  store i32 1, i32* %chop, align 4, !dbg !9314
  br label %for.cond, !dbg !9315

for.cond:                                         ; preds = %for.inc, %while.body
  %10 = load i32, i32* %loop, align 4, !dbg !9316
  %tobool4 = icmp ne i32 %10, 0, !dbg !9319
  br i1 %tobool4, label %for.body, label %for.end, !dbg !9319

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !9320, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !9323, metadata !DIExpression()), !dbg !9324
  %11 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9325
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !9326
  %12 = load i8*, i8** %line, align 8, !dbg !9326
  %13 = load i32, i32* %j, align 4, !dbg !9327
  %idx.ext = sext i32 %13 to i64, !dbg !9328
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !9328
  %call5 = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !9329
  store i32 %call5, i32* %columns, align 4, !dbg !9324
  %14 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9330
  %line6 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %14, i32 0, i32 2, !dbg !9331
  %15 = load i8*, i8** %line6, align 8, !dbg !9331
  %16 = load i32, i32* %j, align 4, !dbg !9332
  %idxprom = sext i32 %16 to i64, !dbg !9330
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !9330
  %17 = load i8, i8* %arrayidx, align 1, !dbg !9330
  store i8 %17, i8* %ch, align 1, !dbg !9333
  %18 = load i8, i8* %ch, align 1, !dbg !9334
  %conv = zext i8 %18 to i32, !dbg !9334
  %cmp = icmp eq i32 %conv, 9, !dbg !9336
  br i1 %cmp, label %if.then, label %if.else, !dbg !9337

if.then:                                          ; preds = %for.body
  %19 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9338
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %19, i32 0, i32 16, !dbg !9340
  %20 = load i32, i32* %tabnumber, align 8, !dbg !9340
  %21 = load i32, i32* %i, align 4, !dbg !9341
  %22 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9342
  %tabnumber8 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %22, i32 0, i32 16, !dbg !9343
  %23 = load i32, i32* %tabnumber8, align 8, !dbg !9343
  %rem = srem i32 %21, %23, !dbg !9344
  %sub = sub nsw i32 %20, %rem, !dbg !9345
  store i32 %sub, i32* %chars, align 4, !dbg !9346
  store i8 32, i8* %ch, align 1, !dbg !9347
  br label %if.end, !dbg !9348

if.else:                                          ; preds = %for.body
  store i32 1, i32* %chars, align 4, !dbg !9349
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond9, !dbg !9351

while.cond9:                                      ; preds = %if.end103, %if.end
  %24 = load i32, i32* %chars, align 4, !dbg !9352
  %dec = add nsw i32 %24, -1, !dbg !9352
  store i32 %dec, i32* %chars, align 4, !dbg !9352
  %tobool10 = icmp ne i32 %24, 0, !dbg !9351
  br i1 %tobool10, label %while.body11, label %while.end, !dbg !9351

while.body11:                                     ; preds = %while.cond9
  %25 = load i32, i32* %y.addr, align 4, !dbg !9353
  %cmp12 = icmp slt i32 %25, 0, !dbg !9356
  br i1 %cmp12, label %if.then14, label %if.else15, !dbg !9357

if.then14:                                        ; preds = %while.body11
  %26 = load i32, i32* %endj, align 4, !dbg !9358
  store i32 %26, i32* %charp, align 4, !dbg !9360
  store i32 0, i32* %loop, align 4, !dbg !9361
  br label %while.end, !dbg !9362

if.else15:                                        ; preds = %while.body11
  %27 = load i32, i32* %y.addr, align 4, !dbg !9363
  %cmp16 = icmp eq i32 %27, 0, !dbg !9365
  br i1 %cmp16, label %land.lhs.true, label %if.else26, !dbg !9366

land.lhs.true:                                    ; preds = %if.else15
  %28 = load i32, i32* %i, align 4, !dbg !9367
  %29 = load i32, i32* %start, align 4, !dbg !9368
  %sub18 = sub nsw i32 %28, %29, !dbg !9369
  %30 = load i32, i32* %x.addr, align 4, !dbg !9370
  %cmp19 = icmp sle i32 %sub18, %30, !dbg !9371
  br i1 %cmp19, label %land.lhs.true21, label %if.else26, !dbg !9372

land.lhs.true21:                                  ; preds = %land.lhs.true
  %31 = load i32, i32* %i, align 4, !dbg !9373
  %32 = load i32, i32* %columns, align 4, !dbg !9374
  %add = add nsw i32 %31, %32, !dbg !9375
  %33 = load i32, i32* %start, align 4, !dbg !9376
  %sub22 = sub nsw i32 %add, %33, !dbg !9377
  %34 = load i32, i32* %x.addr, align 4, !dbg !9378
  %cmp23 = icmp sgt i32 %sub22, %34, !dbg !9379
  br i1 %cmp23, label %if.then25, label %if.else26, !dbg !9380

if.then25:                                        ; preds = %land.lhs.true21
  %35 = load i32, i32* %j, align 4, !dbg !9381
  store i32 %35, i32* %curs, align 4, !dbg !9383
  store i32 %35, i32* %charp, align 4, !dbg !9384
  store i32 1, i32* %found, align 4, !dbg !9385
  br label %if.end37, !dbg !9386

if.else26:                                        ; preds = %land.lhs.true21, %land.lhs.true, %if.else15
  %36 = load i32, i32* %i, align 4, !dbg !9387
  %37 = load i32, i32* %end, align 4, !dbg !9389
  %sub27 = sub nsw i32 %36, %37, !dbg !9390
  %38 = load i32, i32* %x.addr, align 4, !dbg !9391
  %cmp28 = icmp sle i32 %sub27, %38, !dbg !9392
  br i1 %cmp28, label %land.lhs.true30, label %if.end36, !dbg !9393

land.lhs.true30:                                  ; preds = %if.else26
  %39 = load i32, i32* %i, align 4, !dbg !9394
  %40 = load i32, i32* %columns, align 4, !dbg !9395
  %add31 = add nsw i32 %39, %40, !dbg !9396
  %41 = load i32, i32* %end, align 4, !dbg !9397
  %sub32 = sub nsw i32 %add31, %41, !dbg !9398
  %42 = load i32, i32* %x.addr, align 4, !dbg !9399
  %cmp33 = icmp sgt i32 %sub32, %42, !dbg !9400
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !9401

if.then35:                                        ; preds = %land.lhs.true30
  %43 = load i32, i32* %j, align 4, !dbg !9402
  store i32 %43, i32* %curs, align 4, !dbg !9404
  br label %if.end36, !dbg !9405

if.end36:                                         ; preds = %if.then35, %land.lhs.true30, %if.else26
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then25
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %44 = load i32, i32* %i, align 4, !dbg !9406
  %45 = load i32, i32* %columns, align 4, !dbg !9408
  %add39 = add nsw i32 %44, %45, !dbg !9409
  %46 = load i32, i32* %start, align 4, !dbg !9410
  %sub40 = sub nsw i32 %add39, %46, !dbg !9411
  %47 = load i32, i32* %max, align 4, !dbg !9412
  %cmp41 = icmp sgt i32 %sub40, %47, !dbg !9413
  br i1 %cmp41, label %if.then43, label %if.else77, !dbg !9414

if.then43:                                        ; preds = %if.end38
  %48 = load i32, i32* %end, align 4, !dbg !9415
  %49 = load i32, i32* %i, align 4, !dbg !9415
  %cmp44 = icmp slt i32 %48, %49, !dbg !9415
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !9415

cond.true:                                        ; preds = %if.then43
  %50 = load i32, i32* %end, align 4, !dbg !9415
  br label %cond.end, !dbg !9415

cond.false:                                       ; preds = %if.then43
  %51 = load i32, i32* %i, align 4, !dbg !9415
  br label %cond.end, !dbg !9415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %50, %cond.true ], [ %51, %cond.false ], !dbg !9415
  store i32 %cond, i32* %end, align 4, !dbg !9417
  %52 = load i32, i32* %found, align 4, !dbg !9418
  %tobool46 = icmp ne i32 %52, 0, !dbg !9418
  br i1 %tobool46, label %if.then47, label %if.end58, !dbg !9420

if.then47:                                        ; preds = %cond.end
  %53 = load i32, i32* %charp, align 4, !dbg !9421
  %54 = load i32, i32* %endj, align 4, !dbg !9424
  %cmp48 = icmp sgt i32 %53, %54, !dbg !9425
  br i1 %cmp48, label %land.lhs.true50, label %if.end57, !dbg !9426

land.lhs.true50:                                  ; preds = %if.then47
  %55 = load i32, i32* %chop, align 4, !dbg !9427
  %tobool51 = icmp ne i32 %55, 0, !dbg !9427
  br i1 %tobool51, label %if.end57, label %land.lhs.true52, !dbg !9428

land.lhs.true52:                                  ; preds = %land.lhs.true50
  %56 = load i8, i8* %ch, align 1, !dbg !9429
  %conv53 = zext i8 %56 to i32, !dbg !9429
  %cmp54 = icmp ne i32 %conv53, 0, !dbg !9430
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !9431

if.then56:                                        ; preds = %land.lhs.true52
  %57 = load i32, i32* %endj, align 4, !dbg !9432
  store i32 %57, i32* %charp, align 4, !dbg !9433
  br label %if.end57, !dbg !9434

if.end57:                                         ; preds = %if.then56, %land.lhs.true52, %land.lhs.true50, %if.then47
  store i32 0, i32* %loop, align 4, !dbg !9435
  br label %while.end, !dbg !9436

if.end58:                                         ; preds = %cond.end
  %58 = load i32, i32* %chop, align 4, !dbg !9437
  %tobool59 = icmp ne i32 %58, 0, !dbg !9437
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !9439

if.then60:                                        ; preds = %if.end58
  %59 = load i32, i32* %j, align 4, !dbg !9440
  store i32 %59, i32* %endj, align 4, !dbg !9441
  br label %if.end61, !dbg !9442

if.end61:                                         ; preds = %if.then60, %if.end58
  %60 = load i32, i32* %end, align 4, !dbg !9443
  store i32 %60, i32* %start, align 4, !dbg !9444
  %61 = load i32, i32* %max, align 4, !dbg !9445
  %62 = load i32, i32* %end, align 4, !dbg !9446
  %add62 = add nsw i32 %62, %61, !dbg !9446
  store i32 %add62, i32* %end, align 4, !dbg !9446
  %63 = load i32, i32* %j, align 4, !dbg !9447
  %64 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9449
  %len = getelementptr inbounds %struct.TextLine, %struct.TextLine* %64, i32 0, i32 4, !dbg !9450
  %65 = load i32, i32* %len, align 8, !dbg !9450
  %cmp63 = icmp slt i32 %63, %65, !dbg !9451
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !9452

if.then65:                                        ; preds = %if.end61
  %66 = load i32, i32* %y.addr, align 4, !dbg !9453
  %dec66 = add nsw i32 %66, -1, !dbg !9453
  store i32 %dec66, i32* %y.addr, align 4, !dbg !9453
  br label %if.end67, !dbg !9454

if.end67:                                         ; preds = %if.then65, %if.end61
  store i32 1, i32* %chop, align 4, !dbg !9455
  %67 = load i32, i32* %y.addr, align 4, !dbg !9456
  %cmp68 = icmp eq i32 %67, 0, !dbg !9458
  br i1 %cmp68, label %land.lhs.true70, label %if.end76, !dbg !9459

land.lhs.true70:                                  ; preds = %if.end67
  %68 = load i32, i32* %i, align 4, !dbg !9460
  %69 = load i32, i32* %columns, align 4, !dbg !9461
  %add71 = add nsw i32 %68, %69, !dbg !9462
  %70 = load i32, i32* %start, align 4, !dbg !9463
  %sub72 = sub nsw i32 %add71, %70, !dbg !9464
  %71 = load i32, i32* %x.addr, align 4, !dbg !9465
  %cmp73 = icmp sgt i32 %sub72, %71, !dbg !9466
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !9467

if.then75:                                        ; preds = %land.lhs.true70
  %72 = load i32, i32* %curs, align 4, !dbg !9468
  store i32 %72, i32* %charp, align 4, !dbg !9470
  store i32 0, i32* %loop, align 4, !dbg !9471
  br label %while.end, !dbg !9472

if.end76:                                         ; preds = %land.lhs.true70, %if.end67
  br label %if.end103, !dbg !9473

if.else77:                                        ; preds = %if.end38
  %73 = load i8, i8* %ch, align 1, !dbg !9474
  %conv78 = zext i8 %73 to i32, !dbg !9474
  %cmp79 = icmp eq i32 %conv78, 32, !dbg !9476
  br i1 %cmp79, label %if.then88, label %lor.lhs.false, !dbg !9477

lor.lhs.false:                                    ; preds = %if.else77
  %74 = load i8, i8* %ch, align 1, !dbg !9478
  %conv81 = zext i8 %74 to i32, !dbg !9478
  %cmp82 = icmp eq i32 %conv81, 45, !dbg !9479
  br i1 %cmp82, label %if.then88, label %lor.lhs.false84, !dbg !9480

lor.lhs.false84:                                  ; preds = %lor.lhs.false
  %75 = load i8, i8* %ch, align 1, !dbg !9481
  %conv85 = zext i8 %75 to i32, !dbg !9481
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !9482
  br i1 %cmp86, label %if.then88, label %if.end102, !dbg !9483

if.then88:                                        ; preds = %lor.lhs.false84, %lor.lhs.false, %if.else77
  %76 = load i32, i32* %found, align 4, !dbg !9484
  %tobool89 = icmp ne i32 %76, 0, !dbg !9484
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !9487

if.then90:                                        ; preds = %if.then88
  store i32 0, i32* %loop, align 4, !dbg !9488
  br label %while.end, !dbg !9490

if.end91:                                         ; preds = %if.then88
  %77 = load i32, i32* %y.addr, align 4, !dbg !9491
  %cmp92 = icmp eq i32 %77, 0, !dbg !9493
  br i1 %cmp92, label %land.lhs.true94, label %if.end100, !dbg !9494

land.lhs.true94:                                  ; preds = %if.end91
  %78 = load i32, i32* %i, align 4, !dbg !9495
  %79 = load i32, i32* %columns, align 4, !dbg !9496
  %add95 = add nsw i32 %78, %79, !dbg !9497
  %80 = load i32, i32* %start, align 4, !dbg !9498
  %sub96 = sub nsw i32 %add95, %80, !dbg !9499
  %81 = load i32, i32* %x.addr, align 4, !dbg !9500
  %cmp97 = icmp sgt i32 %sub96, %81, !dbg !9501
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !9502

if.then99:                                        ; preds = %land.lhs.true94
  %82 = load i32, i32* %curs, align 4, !dbg !9503
  store i32 %82, i32* %charp, align 4, !dbg !9505
  store i32 0, i32* %loop, align 4, !dbg !9506
  br label %while.end, !dbg !9507

if.end100:                                        ; preds = %land.lhs.true94, %if.end91
  %83 = load i32, i32* %i, align 4, !dbg !9508
  %add101 = add nsw i32 %83, 1, !dbg !9509
  store i32 %add101, i32* %end, align 4, !dbg !9510
  %84 = load i32, i32* %j, align 4, !dbg !9511
  store i32 %84, i32* %endj, align 4, !dbg !9512
  store i32 0, i32* %chop, align 4, !dbg !9513
  br label %if.end102, !dbg !9514

if.end102:                                        ; preds = %if.end100, %lor.lhs.false84
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end76
  %85 = load i32, i32* %columns, align 4, !dbg !9515
  %86 = load i32, i32* %i, align 4, !dbg !9516
  %add104 = add nsw i32 %86, %85, !dbg !9516
  store i32 %add104, i32* %i, align 4, !dbg !9516
  br label %while.cond9, !dbg !9351, !llvm.loop !9517

while.end:                                        ; preds = %if.then99, %if.then90, %if.then75, %if.end57, %if.then14, %while.cond9
  %87 = load i8, i8* %ch, align 1, !dbg !9519
  %conv105 = zext i8 %87 to i32, !dbg !9519
  %cmp106 = icmp eq i32 %conv105, 0, !dbg !9521
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !9522

if.then108:                                       ; preds = %while.end
  br label %for.end, !dbg !9523

if.end109:                                        ; preds = %while.end
  br label %for.inc, !dbg !9524

for.inc:                                          ; preds = %if.end109
  %88 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9525
  %line110 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %88, i32 0, i32 2, !dbg !9526
  %89 = load i8*, i8** %line110, align 8, !dbg !9526
  %90 = load i32, i32* %j, align 4, !dbg !9527
  %idx.ext111 = sext i32 %90 to i64, !dbg !9528
  %add.ptr112 = getelementptr inbounds i8, i8* %89, i64 %idx.ext111, !dbg !9528
  %call113 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr112), !dbg !9529
  %91 = load i32, i32* %j, align 4, !dbg !9530
  %add114 = add nsw i32 %91, %call113, !dbg !9530
  store i32 %add114, i32* %j, align 4, !dbg !9530
  br label %for.cond, !dbg !9531, !llvm.loop !9532

for.end:                                          ; preds = %if.then108, %for.cond
  %92 = load i32, i32* %loop, align 4, !dbg !9534
  %tobool115 = icmp ne i32 %92, 0, !dbg !9534
  br i1 %tobool115, label %lor.lhs.false116, label %if.then118, !dbg !9536

lor.lhs.false116:                                 ; preds = %for.end
  %93 = load i32, i32* %found, align 4, !dbg !9537
  %tobool117 = icmp ne i32 %93, 0, !dbg !9537
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !9538

if.then118:                                       ; preds = %lor.lhs.false116, %for.end
  br label %while.end131, !dbg !9539

if.end119:                                        ; preds = %lor.lhs.false116
  %94 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9540
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %94, i32 0, i32 0, !dbg !9542
  %95 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !9542
  %tobool120 = icmp ne %struct.TextLine* %95, null, !dbg !9540
  br i1 %tobool120, label %if.end123, label %if.then121, !dbg !9543

if.then121:                                       ; preds = %if.end119
  %96 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9544
  %len122 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %96, i32 0, i32 4, !dbg !9546
  %97 = load i32, i32* %len122, align 8, !dbg !9546
  store i32 %97, i32* %charp, align 4, !dbg !9547
  br label %while.end131, !dbg !9548

if.end123:                                        ; preds = %if.end119
  %98 = load i32, i32* %y.addr, align 4, !dbg !9549
  %cmp124 = icmp eq i32 %98, 0, !dbg !9551
  br i1 %cmp124, label %if.then126, label %if.end128, !dbg !9552

if.then126:                                       ; preds = %if.end123
  %99 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9553
  %len127 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %99, i32 0, i32 4, !dbg !9555
  %100 = load i32, i32* %len127, align 8, !dbg !9555
  store i32 %100, i32* %charp, align 4, !dbg !9556
  br label %while.end131, !dbg !9557

if.end128:                                        ; preds = %if.end123
  %101 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9558
  %next129 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %101, i32 0, i32 0, !dbg !9559
  %102 = load %struct.TextLine*, %struct.TextLine** %next129, align 8, !dbg !9559
  store %struct.TextLine* %102, %struct.TextLine** %linep, align 8, !dbg !9560
  %103 = load i32, i32* %y.addr, align 4, !dbg !9561
  %dec130 = add nsw i32 %103, -1, !dbg !9561
  store i32 %dec130, i32* %y.addr, align 4, !dbg !9561
  br label %while.cond, !dbg !9294, !llvm.loop !9562

while.end131:                                     ; preds = %if.then126, %if.then121, %if.then118, %land.end
  %104 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9564
  %tobool132 = icmp ne %struct.TextLine* %104, null, !dbg !9564
  br i1 %tobool132, label %land.lhs.true133, label %if.end141, !dbg !9566

land.lhs.true133:                                 ; preds = %while.end131
  %105 = load i32, i32* %charp, align 4, !dbg !9567
  %cmp134 = icmp ne i32 %105, -1, !dbg !9568
  br i1 %cmp134, label %if.then136, label %if.end141, !dbg !9569

if.then136:                                       ; preds = %land.lhs.true133
  %106 = load i8, i8* %sel.addr, align 1, !dbg !9570
  %tobool137 = icmp ne i8 %106, 0, !dbg !9570
  br i1 %tobool137, label %if.then138, label %if.else139, !dbg !9573

if.then138:                                       ; preds = %if.then136
  %107 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9574
  %108 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9576
  %sell = getelementptr inbounds %struct.Text, %struct.Text* %108, i32 0, i32 6, !dbg !9577
  store %struct.TextLine* %107, %struct.TextLine** %sell, align 8, !dbg !9578
  %109 = load i32, i32* %charp, align 4, !dbg !9579
  %110 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9580
  %selc = getelementptr inbounds %struct.Text, %struct.Text* %110, i32 0, i32 8, !dbg !9581
  store i32 %109, i32* %selc, align 4, !dbg !9582
  br label %if.end140, !dbg !9583

if.else139:                                       ; preds = %if.then136
  %111 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9584
  %112 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9586
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %112, i32 0, i32 5, !dbg !9587
  store %struct.TextLine* %111, %struct.TextLine** %curl, align 8, !dbg !9588
  %113 = load i32, i32* %charp, align 4, !dbg !9589
  %114 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9590
  %curc = getelementptr inbounds %struct.Text, %struct.Text* %114, i32 0, i32 7, !dbg !9591
  store i32 %113, i32* %curc, align 8, !dbg !9592
  br label %if.end140

if.end140:                                        ; preds = %if.else139, %if.then138
  br label %if.end141, !dbg !9593

if.end141:                                        ; preds = %if.end140, %land.lhs.true133, %while.end131
  ret void, !dbg !9594
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @flatten_width(%struct.SpaceText* %st, i8* %str) #0 !dbg !9595 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9602, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.declare(metadata i32* %total, metadata !9604, metadata !DIExpression()), !dbg !9605
  store i32 0, i32* %total, align 4, !dbg !9605
  store i32 0, i32* %i, align 4, !dbg !9606
  br label %for.cond, !dbg !9608

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !9609
  %1 = load i32, i32* %i, align 4, !dbg !9611
  %idxprom = sext i32 %1 to i64, !dbg !9609
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !9609
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9609
  %tobool = icmp ne i8 %2, 0, !dbg !9612
  br i1 %tobool, label %for.body, label %for.end, !dbg !9612

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %str.addr, align 8, !dbg !9613
  %4 = load i32, i32* %i, align 4, !dbg !9616
  %idxprom1 = sext i32 %4 to i64, !dbg !9613
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 %idxprom1, !dbg !9613
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !9613
  %conv = zext i8 %5 to i32, !dbg !9613
  %cmp = icmp eq i32 %conv, 9, !dbg !9617
  br i1 %cmp, label %if.then, label %if.else, !dbg !9618

if.then:                                          ; preds = %for.body
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9619
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 16, !dbg !9621
  %7 = load i32, i32* %tabnumber, align 8, !dbg !9621
  %8 = load i32, i32* %total, align 4, !dbg !9622
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9623
  %tabnumber4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 16, !dbg !9624
  %10 = load i32, i32* %tabnumber4, align 8, !dbg !9624
  %rem = srem i32 %8, %10, !dbg !9625
  %sub = sub nsw i32 %7, %rem, !dbg !9626
  %11 = load i32, i32* %total, align 4, !dbg !9627
  %add = add nsw i32 %11, %sub, !dbg !9627
  store i32 %add, i32* %total, align 4, !dbg !9627
  br label %if.end, !dbg !9628

if.else:                                          ; preds = %for.body
  %12 = load i8*, i8** %str.addr, align 8, !dbg !9629
  %13 = load i32, i32* %i, align 4, !dbg !9631
  %idx.ext = sext i32 %13 to i64, !dbg !9632
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !9632
  %call = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr), !dbg !9633
  %14 = load i32, i32* %total, align 4, !dbg !9634
  %add5 = add nsw i32 %14, %call, !dbg !9634
  store i32 %add5, i32* %total, align 4, !dbg !9634
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9635

for.inc:                                          ; preds = %if.end
  %15 = load i8*, i8** %str.addr, align 8, !dbg !9636
  %16 = load i32, i32* %i, align 4, !dbg !9637
  %idx.ext6 = sext i32 %16 to i64, !dbg !9638
  %add.ptr7 = getelementptr inbounds i8, i8* %15, i64 %idx.ext6, !dbg !9638
  %call8 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr7), !dbg !9639
  %17 = load i32, i32* %i, align 4, !dbg !9640
  %add9 = add nsw i32 %17, %call8, !dbg !9640
  store i32 %add9, i32* %i, align 4, !dbg !9640
  br label %for.cond, !dbg !9641, !llvm.loop !9642

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %total, align 4, !dbg !9644
  ret i32 %18, !dbg !9645
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @flatten_column_to_offset(%struct.SpaceText* %st, i8* %str, i32 %index) #0 !dbg !9646 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %str.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %col = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !9649, metadata !DIExpression()), !dbg !9650
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9651, metadata !DIExpression()), !dbg !9652
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9655, metadata !DIExpression()), !dbg !9656
  store i32 0, i32* %i, align 4, !dbg !9656
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9657, metadata !DIExpression()), !dbg !9658
  store i32 0, i32* %j, align 4, !dbg !9658
  call void @llvm.dbg.declare(metadata i32* %col, metadata !9659, metadata !DIExpression()), !dbg !9660
  br label %while.cond, !dbg !9661

while.cond:                                       ; preds = %if.end8, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !9662
  %1 = load i32, i32* %j, align 4, !dbg !9663
  %idx.ext = sext i32 %1 to i64, !dbg !9664
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !9664
  %2 = load i8, i8* %add.ptr, align 1, !dbg !9665
  %tobool = icmp ne i8 %2, 0, !dbg !9661
  br i1 %tobool, label %while.body, label %while.end, !dbg !9661

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %str.addr, align 8, !dbg !9666
  %4 = load i32, i32* %j, align 4, !dbg !9669
  %idxprom = sext i32 %4 to i64, !dbg !9666
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !9666
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9666
  %conv = zext i8 %5 to i32, !dbg !9666
  %cmp = icmp eq i32 %conv, 9, !dbg !9670
  br i1 %cmp, label %if.then, label %if.else, !dbg !9671

if.then:                                          ; preds = %while.body
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9672
  %tabnumber = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 16, !dbg !9673
  %7 = load i32, i32* %tabnumber, align 8, !dbg !9673
  %8 = load i32, i32* %i, align 4, !dbg !9674
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9675
  %tabnumber2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %9, i32 0, i32 16, !dbg !9676
  %10 = load i32, i32* %tabnumber2, align 8, !dbg !9676
  %rem = srem i32 %8, %10, !dbg !9677
  %sub = sub nsw i32 %7, %rem, !dbg !9678
  store i32 %sub, i32* %col, align 4, !dbg !9679
  br label %if.end, !dbg !9680

if.else:                                          ; preds = %while.body
  %11 = load i8*, i8** %str.addr, align 8, !dbg !9681
  %12 = load i32, i32* %j, align 4, !dbg !9682
  %idx.ext3 = sext i32 %12 to i64, !dbg !9683
  %add.ptr4 = getelementptr inbounds i8, i8* %11, i64 %idx.ext3, !dbg !9683
  %call = call i32 @BLI_str_utf8_char_width_safe(i8* %add.ptr4), !dbg !9684
  store i32 %call, i32* %col, align 4, !dbg !9685
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !9686
  %14 = load i32, i32* %col, align 4, !dbg !9688
  %add = add nsw i32 %13, %14, !dbg !9689
  %15 = load i32, i32* %index.addr, align 4, !dbg !9690
  %cmp5 = icmp sgt i32 %add, %15, !dbg !9691
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !9692

if.then7:                                         ; preds = %if.end
  br label %while.end, !dbg !9693

if.end8:                                          ; preds = %if.end
  %16 = load i32, i32* %col, align 4, !dbg !9694
  %17 = load i32, i32* %i, align 4, !dbg !9695
  %add9 = add nsw i32 %17, %16, !dbg !9695
  store i32 %add9, i32* %i, align 4, !dbg !9695
  %18 = load i8*, i8** %str.addr, align 8, !dbg !9696
  %19 = load i32, i32* %j, align 4, !dbg !9697
  %idx.ext10 = sext i32 %19 to i64, !dbg !9698
  %add.ptr11 = getelementptr inbounds i8, i8* %18, i64 %idx.ext10, !dbg !9698
  %call12 = call i32 @BLI_str_utf8_size_safe(i8* %add.ptr11), !dbg !9699
  %20 = load i32, i32* %j, align 4, !dbg !9700
  %add13 = add nsw i32 %20, %call12, !dbg !9700
  store i32 %add13, i32* %j, align 4, !dbg !9700
  br label %while.cond, !dbg !9661, !llvm.loop !9701

while.end:                                        ; preds = %if.then7, %while.cond
  %21 = load i32, i32* %j, align 4, !dbg !9703
  ret i32 %21, !dbg !9704
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.TextLine* @get_first_visible_line(%struct.SpaceText* %st, %struct.ARegion* %ar, i32* %y) #0 !dbg !9705 {
entry:
  %st.addr = alloca %struct.SpaceText*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %y.addr = alloca i32*, align 8
  %linep = alloca %struct.TextLine*, align 8
  %i = alloca i32, align 4
  %lines1 = alloca i32, align 4
  store %struct.SpaceText* %st, %struct.SpaceText** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.declare(metadata %struct.TextLine** %linep, metadata !9714, metadata !DIExpression()), !dbg !9715
  %0 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9716
  %text = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %0, i32 0, i32 6, !dbg !9717
  %1 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9717
  %lines = getelementptr inbounds %struct.Text, %struct.Text* %1, i32 0, i32 4, !dbg !9718
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !9719
  %2 = load i8*, i8** %first, align 8, !dbg !9719
  %3 = bitcast i8* %2 to %struct.TextLine*, !dbg !9716
  store %struct.TextLine* %3, %struct.TextLine** %linep, align 8, !dbg !9715
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9720, metadata !DIExpression()), !dbg !9721
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9722
  %top = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 7, !dbg !9724
  %5 = load i32, i32* %top, align 8, !dbg !9724
  store i32 %5, i32* %i, align 4, !dbg !9725
  br label %for.cond, !dbg !9726

for.cond:                                         ; preds = %if.end, %entry
  %6 = load i32, i32* %i, align 4, !dbg !9727
  %cmp = icmp sgt i32 %6, 0, !dbg !9729
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9730

land.rhs:                                         ; preds = %for.cond
  %7 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9731
  %tobool = icmp ne %struct.TextLine* %7, null, !dbg !9730
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !9732
  br i1 %8, label %for.body, label %for.end, !dbg !9733

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %lines1, metadata !9734, metadata !DIExpression()), !dbg !9736
  %9 = load %struct.SpaceText*, %struct.SpaceText** %st.addr, align 8, !dbg !9737
  %10 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9738
  %11 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9739
  %line = getelementptr inbounds %struct.TextLine, %struct.TextLine* %11, i32 0, i32 2, !dbg !9740
  %12 = load i8*, i8** %line, align 8, !dbg !9740
  %call = call i32 @text_get_visible_lines(%struct.SpaceText* %9, %struct.ARegion* %10, i8* %12), !dbg !9741
  store i32 %call, i32* %lines1, align 4, !dbg !9736
  %13 = load i32, i32* %i, align 4, !dbg !9742
  %14 = load i32, i32* %lines1, align 4, !dbg !9744
  %sub = sub nsw i32 %13, %14, !dbg !9745
  %cmp2 = icmp slt i32 %sub, 0, !dbg !9746
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9747

if.then:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !9748
  %16 = load i32*, i32** %y.addr, align 8, !dbg !9750
  %17 = load i32, i32* %16, align 4, !dbg !9751
  %add = add nsw i32 %17, %15, !dbg !9751
  store i32 %add, i32* %16, align 4, !dbg !9751
  br label %for.end, !dbg !9752

if.else:                                          ; preds = %for.body
  %18 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9753
  %next = getelementptr inbounds %struct.TextLine, %struct.TextLine* %18, i32 0, i32 0, !dbg !9755
  %19 = load %struct.TextLine*, %struct.TextLine** %next, align 8, !dbg !9755
  store %struct.TextLine* %19, %struct.TextLine** %linep, align 8, !dbg !9756
  %20 = load i32, i32* %lines1, align 4, !dbg !9757
  %21 = load i32, i32* %i, align 4, !dbg !9758
  %sub3 = sub nsw i32 %21, %20, !dbg !9758
  store i32 %sub3, i32* %i, align 4, !dbg !9758
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %for.cond, !dbg !9759, !llvm.loop !9760

for.end:                                          ; preds = %if.then, %land.end
  %22 = load %struct.TextLine*, %struct.TextLine** %linep, align 8, !dbg !9762
  ret %struct.TextLine* %22, !dbg !9763
}

; Function Attrs: noinline nounwind uwtable
define internal void @text_cursor_set_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9764 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %ssel = alloca %struct.SetSelection*, align 8
  %buffer = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !9769, metadata !DIExpression()), !dbg !9770
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9771
  %call = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %0), !dbg !9772
  store %struct.SpaceText* %call, %struct.SpaceText** %st, align 8, !dbg !9770
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !9773, metadata !DIExpression()), !dbg !9774
  %1 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9775
  %text1 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %1, i32 0, i32 6, !dbg !9776
  %2 = load %struct.Text*, %struct.Text** %text1, align 8, !dbg !9776
  store %struct.Text* %2, %struct.Text** %text, align 8, !dbg !9774
  call void @llvm.dbg.declare(metadata %struct.SetSelection** %ssel, metadata !9777, metadata !DIExpression()), !dbg !9778
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9779
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !9780
  %4 = load i8*, i8** %customdata, align 8, !dbg !9780
  %5 = bitcast i8* %4 to %struct.SetSelection*, !dbg !9779
  store %struct.SetSelection* %5, %struct.SetSelection** %ssel, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9781, metadata !DIExpression()), !dbg !9782
  %6 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9783
  %call2 = call zeroext i8 @txt_has_sel(%struct.Text* %6), !dbg !9785
  %tobool = icmp ne i8 %call2, 0, !dbg !9785
  br i1 %tobool, label %if.then, label %if.end, !dbg !9786

if.then:                                          ; preds = %entry
  %7 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9787
  %call3 = call i8* @txt_sel_to_buf(%struct.Text* %7), !dbg !9789
  store i8* %call3, i8** %buffer, align 8, !dbg !9790
  %8 = load i8*, i8** %buffer, align 8, !dbg !9791
  call void @WM_clipboard_text_set(i8* %8, i8 zeroext 1), !dbg !9792
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9793
  %10 = load i8*, i8** %buffer, align 8, !dbg !9794
  call void %9(i8* %10), !dbg !9793
  br label %if.end, !dbg !9795

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9796
  call void @text_update_cursor_moved(%struct.bContext* %11), !dbg !9797
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9798
  %13 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9799
  %text4 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %13, i32 0, i32 6, !dbg !9800
  %14 = load %struct.Text*, %struct.Text** %text4, align 8, !dbg !9800
  %15 = bitcast %struct.Text* %14 to i8*, !dbg !9799
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 204603392, i8* %15), !dbg !9801
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9802
  %17 = load %struct.SetSelection*, %struct.SetSelection** %ssel, align 8, !dbg !9803
  %18 = bitcast %struct.SetSelection* %17 to i8*, !dbg !9803
  call void %16(i8* %18), !dbg !9802
  ret void, !dbg !9804
}

declare dso_local i8* @txt_sel_to_buf(%struct.Text*) #2

declare dso_local void @RNA_int_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local double @PIL_check_seconds_timer() #2

declare dso_local i8* @RNA_string_get_alloc(%struct.PointerRNA*, i8*, i8*, i32) #2

declare dso_local i32 @BLI_str_utf8_as_unicode_step(i8*, i64*) #2

declare dso_local zeroext i8 @txt_replace_char(%struct.Text*, i32) #2

declare dso_local i32 @RNA_string_length(%struct.PointerRNA*, i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

declare dso_local i64 @BLI_str_utf8_from_unicode(i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @text_find_and_replace(%struct.bContext* %C, %struct.wmOperator* %op, i16 signext %mode) #0 !dbg !9805 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mode.addr = alloca i16, align 2
  %bmain = alloca %struct.Main*, align 8
  %st = alloca %struct.SpaceText*, align 8
  %text = alloca %struct.Text*, align 8
  %flags = alloca i32, align 4
  %found = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !9814, metadata !DIExpression()), !dbg !9815
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9816
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !9817
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !9815
  call void @llvm.dbg.declare(metadata %struct.SpaceText** %st, metadata !9818, metadata !DIExpression()), !dbg !9819
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9820
  %call1 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %1), !dbg !9821
  store %struct.SpaceText* %call1, %struct.SpaceText** %st, align 8, !dbg !9819
  call void @llvm.dbg.declare(metadata %struct.Text** %text, metadata !9822, metadata !DIExpression()), !dbg !9823
  %2 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9824
  %text2 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %2, i32 0, i32 6, !dbg !9825
  %3 = load %struct.Text*, %struct.Text** %text2, align 8, !dbg !9825
  store %struct.Text* %3, %struct.Text** %text, align 8, !dbg !9823
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9826, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.declare(metadata i32* %found, metadata !9828, metadata !DIExpression()), !dbg !9829
  store i32 0, i32* %found, align 4, !dbg !9829
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !9830, metadata !DIExpression()), !dbg !9831
  %4 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9832
  %findstr = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %4, i32 0, i32 26, !dbg !9834
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %findstr, i64 0, i64 0, !dbg !9832
  %5 = load i8, i8* %arrayidx, align 8, !dbg !9832
  %tobool = icmp ne i8 %5, 0, !dbg !9832
  br i1 %tobool, label %if.end, label %if.then, !dbg !9835

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9836
  br label %return, !dbg !9836

if.end:                                           ; preds = %entry
  %6 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9837
  %flags3 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %6, i32 0, i32 9, !dbg !9838
  %7 = load i16, i16* %flags3, align 8, !dbg !9838
  %conv = sext i16 %7 to i32, !dbg !9837
  store i32 %conv, i32* %flags, align 4, !dbg !9839
  %8 = load i32, i32* %flags, align 4, !dbg !9840
  %and = and i32 %8, 64, !dbg !9842
  %tobool4 = icmp ne i32 %and, 0, !dbg !9842
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !9843

if.then5:                                         ; preds = %if.end
  %9 = load i32, i32* %flags, align 4, !dbg !9844
  %and6 = and i32 %9, -33, !dbg !9844
  store i32 %and6, i32* %flags, align 4, !dbg !9844
  br label %if.end7, !dbg !9845

if.end7:                                          ; preds = %if.then5, %if.end
  %10 = load i16, i16* %mode.addr, align 2, !dbg !9846
  %conv8 = sext i16 %10 to i32, !dbg !9846
  %cmp = icmp ne i32 %conv8, 0, !dbg !9848
  br i1 %cmp, label %land.lhs.true, label %if.end48, !dbg !9849

land.lhs.true:                                    ; preds = %if.end7
  %11 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9850
  %call10 = call zeroext i8 @txt_has_sel(%struct.Text* %11), !dbg !9851
  %conv11 = zext i8 %call10 to i32, !dbg !9851
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !9851
  br i1 %tobool12, label %if.then13, label %if.end48, !dbg !9852

if.then13:                                        ; preds = %land.lhs.true
  %12 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9853
  %call14 = call i8* @txt_sel_to_buf(%struct.Text* %12), !dbg !9855
  store i8* %call14, i8** %tmp, align 8, !dbg !9856
  %13 = load i32, i32* %flags, align 4, !dbg !9857
  %and15 = and i32 %13, 256, !dbg !9859
  %tobool16 = icmp ne i32 %and15, 0, !dbg !9859
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !9860

if.then17:                                        ; preds = %if.then13
  %14 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9861
  %findstr18 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %14, i32 0, i32 26, !dbg !9862
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %findstr18, i64 0, i64 0, !dbg !9861
  %15 = load i8*, i8** %tmp, align 8, !dbg !9863
  %call19 = call i32 @strcmp(i8* %arraydecay, i8* %15) #7, !dbg !9864
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9865
  %conv21 = zext i1 %cmp20 to i32, !dbg !9865
  store i32 %conv21, i32* %found, align 4, !dbg !9866
  br label %if.end27, !dbg !9867

if.else:                                          ; preds = %if.then13
  %16 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9868
  %findstr22 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %16, i32 0, i32 26, !dbg !9869
  %arraydecay23 = getelementptr inbounds [256 x i8], [256 x i8]* %findstr22, i64 0, i64 0, !dbg !9868
  %17 = load i8*, i8** %tmp, align 8, !dbg !9870
  %call24 = call i32 @BLI_strcasecmp(i8* %arraydecay23, i8* %17), !dbg !9871
  %cmp25 = icmp eq i32 %call24, 0, !dbg !9872
  %conv26 = zext i1 %cmp25 to i32, !dbg !9872
  store i32 %conv26, i32* %found, align 4, !dbg !9873
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then17
  %18 = load i32, i32* %found, align 4, !dbg !9874
  %tobool28 = icmp ne i32 %18, 0, !dbg !9874
  br i1 %tobool28, label %if.then29, label %if.end47, !dbg !9876

if.then29:                                        ; preds = %if.end27
  %19 = load i16, i16* %mode.addr, align 2, !dbg !9877
  %conv30 = sext i16 %19 to i32, !dbg !9877
  %cmp31 = icmp eq i32 %conv30, 1, !dbg !9880
  br i1 %cmp31, label %if.then33, label %if.end46, !dbg !9881

if.then33:                                        ; preds = %if.then29
  %20 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9882
  %21 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9884
  %replacestr = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %21, i32 0, i32 27, !dbg !9885
  %arraydecay34 = getelementptr inbounds [256 x i8], [256 x i8]* %replacestr, i64 0, i64 0, !dbg !9884
  call void @txt_insert_buf(%struct.Text* %20, i8* %arraydecay34), !dbg !9886
  %22 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9887
  %curl = getelementptr inbounds %struct.Text, %struct.Text* %22, i32 0, i32 5, !dbg !9889
  %23 = load %struct.TextLine*, %struct.TextLine** %curl, align 8, !dbg !9889
  %tobool35 = icmp ne %struct.TextLine* %23, null, !dbg !9887
  br i1 %tobool35, label %land.lhs.true36, label %if.end44, !dbg !9890

land.lhs.true36:                                  ; preds = %if.then33
  %24 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9891
  %curl37 = getelementptr inbounds %struct.Text, %struct.Text* %24, i32 0, i32 5, !dbg !9892
  %25 = load %struct.TextLine*, %struct.TextLine** %curl37, align 8, !dbg !9892
  %format = getelementptr inbounds %struct.TextLine, %struct.TextLine* %25, i32 0, i32 3, !dbg !9893
  %26 = load i8*, i8** %format, align 8, !dbg !9893
  %tobool38 = icmp ne i8* %26, null, !dbg !9891
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !9894

if.then39:                                        ; preds = %land.lhs.true36
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9895
  %28 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9897
  %curl40 = getelementptr inbounds %struct.Text, %struct.Text* %28, i32 0, i32 5, !dbg !9898
  %29 = load %struct.TextLine*, %struct.TextLine** %curl40, align 8, !dbg !9898
  %format41 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %29, i32 0, i32 3, !dbg !9899
  %30 = load i8*, i8** %format41, align 8, !dbg !9899
  call void %27(i8* %30), !dbg !9895
  %31 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9900
  %curl42 = getelementptr inbounds %struct.Text, %struct.Text* %31, i32 0, i32 5, !dbg !9901
  %32 = load %struct.TextLine*, %struct.TextLine** %curl42, align 8, !dbg !9901
  %format43 = getelementptr inbounds %struct.TextLine, %struct.TextLine* %32, i32 0, i32 3, !dbg !9902
  store i8* null, i8** %format43, align 8, !dbg !9903
  br label %if.end44, !dbg !9904

if.end44:                                         ; preds = %if.then39, %land.lhs.true36, %if.then33
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9905
  call void @text_update_cursor_moved(%struct.bContext* %33), !dbg !9906
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9907
  %35 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9908
  %36 = bitcast %struct.Text* %35 to i8*, !dbg !9908
  call void @WM_event_add_notifier(%struct.bContext* %34, i32 201326593, i8* %36), !dbg !9909
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9910
  %call45 = call %struct.SpaceText* @CTX_wm_space_text(%struct.bContext* %37), !dbg !9911
  call void @text_drawcache_tag_update(%struct.SpaceText* %call45, i32 1), !dbg !9912
  br label %if.end46, !dbg !9913

if.end46:                                         ; preds = %if.end44, %if.then29
  br label %if.end47, !dbg !9914

if.end47:                                         ; preds = %if.end46, %if.end27
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9915
  %39 = load i8*, i8** %tmp, align 8, !dbg !9916
  call void %38(i8* %39), !dbg !9915
  store i8* null, i8** %tmp, align 8, !dbg !9917
  br label %if.end48, !dbg !9918

if.end48:                                         ; preds = %if.end47, %land.lhs.true, %if.end7
  %40 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9919
  %41 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9921
  %findstr49 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %41, i32 0, i32 26, !dbg !9922
  %arraydecay50 = getelementptr inbounds [256 x i8], [256 x i8]* %findstr49, i64 0, i64 0, !dbg !9921
  %42 = load i32, i32* %flags, align 4, !dbg !9923
  %and51 = and i32 %42, 32, !dbg !9924
  %43 = load i32, i32* %flags, align 4, !dbg !9925
  %and52 = and i32 %43, 256, !dbg !9926
  %call53 = call i32 @txt_find_string(%struct.Text* %40, i8* %arraydecay50, i32 %and51, i32 %and52), !dbg !9927
  %tobool54 = icmp ne i32 %call53, 0, !dbg !9927
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !9928

if.then55:                                        ; preds = %if.end48
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9929
  call void @text_update_cursor_moved(%struct.bContext* %44), !dbg !9931
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9932
  %46 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9933
  %47 = bitcast %struct.Text* %46 to i8*, !dbg !9933
  call void @WM_event_add_notifier(%struct.bContext* %45, i32 204603392, i8* %47), !dbg !9934
  br label %if.end76, !dbg !9935

if.else56:                                        ; preds = %if.end48
  %48 = load i32, i32* %flags, align 4, !dbg !9936
  %and57 = and i32 %48, 64, !dbg !9938
  %tobool58 = icmp ne i32 %and57, 0, !dbg !9938
  br i1 %tobool58, label %if.then59, label %if.else69, !dbg !9939

if.then59:                                        ; preds = %if.else56
  %49 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9940
  %id = getelementptr inbounds %struct.Text, %struct.Text* %49, i32 0, i32 0, !dbg !9943
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !9944
  %50 = load i8*, i8** %next, align 8, !dbg !9944
  %tobool60 = icmp ne i8* %50, null, !dbg !9940
  br i1 %tobool60, label %if.then61, label %if.else65, !dbg !9945

if.then61:                                        ; preds = %if.then59
  %51 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9946
  %id62 = getelementptr inbounds %struct.Text, %struct.Text* %51, i32 0, i32 0, !dbg !9947
  %next63 = getelementptr inbounds %struct.ID, %struct.ID* %id62, i32 0, i32 0, !dbg !9948
  %52 = load i8*, i8** %next63, align 8, !dbg !9948
  %53 = bitcast i8* %52 to %struct.Text*, !dbg !9946
  %54 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9949
  %text64 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %54, i32 0, i32 6, !dbg !9950
  store %struct.Text* %53, %struct.Text** %text64, align 8, !dbg !9951
  store %struct.Text* %53, %struct.Text** %text, align 8, !dbg !9952
  br label %if.end68, !dbg !9953

if.else65:                                        ; preds = %if.then59
  %55 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9954
  %text66 = getelementptr inbounds %struct.Main, %struct.Main* %55, i32 0, i32 29, !dbg !9955
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %text66, i32 0, i32 0, !dbg !9956
  %56 = load i8*, i8** %first, align 8, !dbg !9956
  %57 = bitcast i8* %56 to %struct.Text*, !dbg !9954
  %58 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9957
  %text67 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %58, i32 0, i32 6, !dbg !9958
  store %struct.Text* %57, %struct.Text** %text67, align 8, !dbg !9959
  store %struct.Text* %57, %struct.Text** %text, align 8, !dbg !9960
  br label %if.end68

if.end68:                                         ; preds = %if.else65, %if.then61
  %59 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9961
  call void @txt_move_toline(%struct.Text* %59, i32 0, i8 zeroext 0), !dbg !9962
  %60 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9963
  call void @text_update_cursor_moved(%struct.bContext* %60), !dbg !9964
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9965
  %62 = load %struct.Text*, %struct.Text** %text, align 8, !dbg !9966
  %63 = bitcast %struct.Text* %62 to i8*, !dbg !9966
  call void @WM_event_add_notifier(%struct.bContext* %61, i32 204603392, i8* %63), !dbg !9967
  br label %if.end75, !dbg !9968

if.else69:                                        ; preds = %if.else56
  %64 = load i32, i32* %found, align 4, !dbg !9969
  %tobool70 = icmp ne i32 %64, 0, !dbg !9969
  br i1 %tobool70, label %if.end74, label %if.then71, !dbg !9972

if.then71:                                        ; preds = %if.else69
  %65 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9973
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %65, i32 0, i32 8, !dbg !9974
  %66 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9974
  %67 = load %struct.SpaceText*, %struct.SpaceText** %st, align 8, !dbg !9975
  %findstr72 = getelementptr inbounds %struct.SpaceText, %struct.SpaceText* %67, i32 0, i32 26, !dbg !9976
  %arraydecay73 = getelementptr inbounds [256 x i8], [256 x i8]* %findstr72, i64 0, i64 0, !dbg !9975
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %66, i32 32, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.202, i64 0, i64 0), i8* %arraydecay73), !dbg !9977
  br label %if.end74, !dbg !9977

if.end74:                                         ; preds = %if.then71, %if.else69
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end68
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then55
  store i32 4, i32* %retval, align 4, !dbg !9978
  br label %return, !dbg !9978

return:                                           ; preds = %if.end76, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !9979
  ret i32 %68, !dbg !9979
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

declare dso_local i32 @BLI_strcasecmp(i8*, i8*) #2

declare dso_local i32 @txt_find_string(%struct.Text*, i8*, i32, i32) #2

declare dso_local void @BKE_text_file_modified_ignore(%struct.Text*) #2

declare dso_local i32 @BKE_text_file_modified_check(%struct.Text*) #2

declare dso_local %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext*, i8*, i32) #2

declare dso_local %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu*) #2

declare dso_local void @uiItemEnumO_ptr(%struct.uiLayout*, %struct.wmOperatorType*, i8*, i32, i8*, i32) #2

declare dso_local void @uiPupMenuEnd(%struct.bContext*, %struct.uiPopupMenu*) #2

declare dso_local void @ED_text_to_object(%struct.bContext*, %struct.Text*, i8 zeroext) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2794, !2795, !2796}
!llvm.ident = !{!2797}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "whitespace_type_items", scope: !2, file: !3, line: 1125, type: !2761, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1194, globals: !1201, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/space_text/text_ops.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !23, !27, !33, !37, !52, !58, !92, !98, !107, !118, !129, !134, !143, !344}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFileSel_File_Types", file: !6, line: 682, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22}
!9 = !DIEnumerator(name: "BLENDERFILE", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "BLENDERFILE_BACKUP", value: 8, isUnsigned: true)
!11 = !DIEnumerator(name: "IMAGEFILE", value: 16, isUnsigned: true)
!12 = !DIEnumerator(name: "MOVIEFILE", value: 32, isUnsigned: true)
!13 = !DIEnumerator(name: "PYSCRIPTFILE", value: 64, isUnsigned: true)
!14 = !DIEnumerator(name: "FTFONTFILE", value: 128, isUnsigned: true)
!15 = !DIEnumerator(name: "SOUNDFILE", value: 256, isUnsigned: true)
!16 = !DIEnumerator(name: "TEXTFILE", value: 512, isUnsigned: true)
!17 = !DIEnumerator(name: "MOVIEFILE_ICON", value: 1024, isUnsigned: true)
!18 = !DIEnumerator(name: "FOLDERFILE", value: 2048, isUnsigned: true)
!19 = !DIEnumerator(name: "BTXFILE", value: 4096, isUnsigned: true)
!20 = !DIEnumerator(name: "COLLADAFILE", value: 8192, isUnsigned: true)
!21 = !DIEnumerator(name: "OPERATORFILE", value: 16384, isUnsigned: true)
!22 = !DIEnumerator(name: "APPLICATIONBUNDLE", value: 32768, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFileSel_Action", file: !6, line: 660, baseType: !7, size: 32, elements: !24)
!24 = !{!25, !26}
!25 = !DIEnumerator(name: "FILE_OPENFILE", value: 0, isUnsigned: true)
!26 = !DIEnumerator(name: "FILE_SAVE", value: 1, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FileDisplayTypeE", file: !6, line: 626, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "FILE_DEFAULTDISPLAY", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "FILE_SHORTDISPLAY", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "FILE_LONGDISPLAY", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "FILE_IMGDISPLAY", value: 3, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1124, baseType: !7, size: 32, elements: !34)
!34 = !{!35, !36}
!35 = !DIEnumerator(name: "TO_SPACES", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "TO_TABS", value: 1, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !38, line: 86, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "blender/source/blender/editors/space_text/text_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!39 = !{!40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51}
!40 = !DIEnumerator(name: "LINE_BEGIN", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "LINE_END", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "FILE_TOP", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "FILE_BOTTOM", value: 3, isUnsigned: true)
!44 = !DIEnumerator(name: "PREV_CHAR", value: 4, isUnsigned: true)
!45 = !DIEnumerator(name: "NEXT_CHAR", value: 5, isUnsigned: true)
!46 = !DIEnumerator(name: "PREV_WORD", value: 6, isUnsigned: true)
!47 = !DIEnumerator(name: "NEXT_WORD", value: 7, isUnsigned: true)
!48 = !DIEnumerator(name: "PREV_LINE", value: 8, isUnsigned: true)
!49 = !DIEnumerator(name: "NEXT_LINE", value: 9, isUnsigned: true)
!50 = !DIEnumerator(name: "PREV_PAGE", value: 10, isUnsigned: true)
!51 = !DIEnumerator(name: "NEXT_PAGE", value: 11, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !38, line: 88, baseType: !7, size: 32, elements: !53)
!53 = !{!54, !55, !56, !57}
!54 = !DIEnumerator(name: "DEL_NEXT_CHAR", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "DEL_PREV_CHAR", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "DEL_NEXT_WORD", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "DEL_PREV_WORD", value: 3, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !59, line: 151, baseType: !7, size: 32, elements: !60)
!59 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = !{!61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91}
!61 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!62 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!63 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!65 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!66 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!67 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!69 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!70 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!71 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!73 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!74 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!75 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!76 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!77 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!78 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!79 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!80 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!81 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!82 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!83 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!84 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!85 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!86 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!87 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!88 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!89 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!90 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!91 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 3108, baseType: !7, size: 32, elements: !93)
!93 = !{!94, !95, !96, !97}
!94 = !DIEnumerator(name: "RESOLVE_IGNORE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "RESOLVE_RELOAD", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "RESOLVE_SAVE", value: 2, isUnsigned: true)
!97 = !DIEnumerator(name: "RESOLVE_MAKE_INTERNAL", value: 3, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !99, line: 351, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!100 = !{!101, !102, !103, !104, !105, !106}
!101 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!103 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!104 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!106 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !99, line: 67, baseType: !7, size: 32, elements: !108)
!108 = !{!109, !110, !111, !112, !113, !114, !115, !116, !117}
!109 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!110 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!111 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!114 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!115 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!116 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!117 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !119, line: 361, baseType: !7, size: 32, elements: !120)
!119 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128}
!121 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 2126, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133}
!131 = !DIEnumerator(name: "SCROLLHANDLE_BAR", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "SCROLLHANDLE_MIN_OUTSIDE", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "SCROLLHANDLE_MAX_OUTSIDE", value: 2, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceText_Flags", file: !6, line: 860, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !141, !142}
!136 = !DIEnumerator(name: "ST_SCROLL_SELECT", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "ST_CLEAR_NAMESPACE", value: 16, isUnsigned: true)
!138 = !DIEnumerator(name: "ST_FIND_WRAP", value: 32, isUnsigned: true)
!139 = !DIEnumerator(name: "ST_FIND_ALL", value: 64, isUnsigned: true)
!140 = !DIEnumerator(name: "ST_SHOW_MARGIN", value: 128, isUnsigned: true)
!141 = !DIEnumerator(name: "ST_MATCH_CASE", value: 256, isUnsigned: true)
!142 = !DIEnumerator(name: "ST_FIND_ACTIVATE", value: 512, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !144, line: 54, baseType: !7, size: 32, elements: !145)
!144 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!145 = !{!146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343}
!146 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!150 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!151 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!152 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!153 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!154 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!158 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!159 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!160 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!161 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!162 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!163 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!164 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!165 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!166 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!167 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!168 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!169 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!170 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!171 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!172 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!173 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!174 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!175 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!176 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!177 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!178 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!179 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!180 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!181 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!182 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!183 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!184 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!185 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!186 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!187 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!188 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!189 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!190 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!191 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!192 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!193 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!194 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!195 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!196 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!197 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!198 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!199 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!200 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!201 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!202 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!203 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!204 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!205 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!206 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!207 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!208 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!209 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!210 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!211 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!212 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!213 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!214 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!215 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!216 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!217 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!218 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!219 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!220 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!221 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!222 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!223 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!224 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!225 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!226 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!227 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!228 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!229 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!230 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!231 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!232 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!233 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!234 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!235 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!236 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!237 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!238 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!239 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!240 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!241 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!242 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!243 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!244 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!245 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!246 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!247 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!248 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!249 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!250 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!251 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!252 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!253 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!254 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!255 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!256 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!257 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!258 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!259 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!260 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!261 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!262 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!263 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!264 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!265 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!266 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!267 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!268 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!269 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!270 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!271 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!272 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!273 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!274 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!275 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!276 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!277 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!278 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!279 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!281 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!282 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!283 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!284 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!285 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!286 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!287 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!288 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!289 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!290 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!291 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!292 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!293 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!294 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!295 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!296 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!297 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!298 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!299 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!300 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!301 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!302 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!303 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!304 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!305 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!306 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!307 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!308 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!309 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!310 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!311 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!312 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!313 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!314 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!315 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!316 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!317 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!318 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!319 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!320 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!321 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!322 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!323 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!324 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!325 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!326 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!327 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!328 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!329 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!330 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!331 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!332 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!333 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!334 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!335 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!336 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!337 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!338 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!339 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!340 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!341 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!342 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!343 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!344 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !345, line: 40, baseType: !7, size: 32, elements: !346)
!345 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193}
!347 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!939 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!940 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!941 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!942 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!943 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!944 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!945 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!946 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!947 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!948 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!949 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!950 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!951 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!952 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!953 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!954 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!955 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!956 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!957 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!958 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!959 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!960 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!961 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!962 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!963 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!964 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!965 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!966 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!967 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!968 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!969 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!970 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!971 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!972 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!973 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!974 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!975 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!976 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!977 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!978 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!979 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!980 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!981 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!982 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!983 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!984 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!985 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!986 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!987 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!988 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!989 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!990 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!991 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!992 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!993 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!994 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!995 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!996 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!997 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!998 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!999 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!1000 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!1001 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!1002 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!1003 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!1004 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!1005 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!1006 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!1007 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!1008 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!1009 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!1010 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!1011 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!1012 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!1013 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!1014 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!1015 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!1016 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!1017 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!1018 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!1019 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!1020 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!1021 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!1022 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!1023 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!1024 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!1025 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!1026 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!1027 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!1028 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!1029 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!1030 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!1031 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!1032 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!1033 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!1034 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!1035 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!1036 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!1037 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!1038 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!1039 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!1040 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!1041 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!1042 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!1043 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!1044 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!1045 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!1046 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!1047 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!1048 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!1049 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!1050 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!1051 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!1052 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!1053 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!1054 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!1055 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!1056 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!1057 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!1058 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!1059 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!1060 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!1061 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!1062 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!1063 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!1064 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!1065 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!1066 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!1067 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!1068 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!1069 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!1070 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!1071 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!1072 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!1073 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!1074 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!1075 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!1076 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!1077 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!1078 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!1079 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!1080 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!1081 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!1082 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!1083 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!1084 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!1085 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!1086 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!1087 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!1088 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!1089 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!1090 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!1091 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!1092 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!1093 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!1094 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!1095 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!1096 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!1097 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!1098 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!1099 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!1100 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!1101 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!1102 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!1103 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!1104 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!1105 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!1106 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!1107 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!1108 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!1109 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!1110 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!1111 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!1112 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!1113 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!1114 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!1115 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!1116 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!1117 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!1118 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!1119 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!1120 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!1121 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!1122 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!1123 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!1124 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!1125 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!1126 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!1127 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!1128 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!1129 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!1130 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!1131 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!1132 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!1133 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!1134 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!1135 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!1136 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!1137 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!1138 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!1139 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!1140 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!1141 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!1142 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!1143 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!1144 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!1145 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!1146 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!1147 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!1148 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!1149 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!1150 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!1151 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!1152 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!1153 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!1154 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!1155 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!1156 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!1157 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!1158 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!1159 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!1160 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!1161 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!1162 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!1163 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!1164 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!1165 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!1166 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!1167 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!1168 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!1169 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!1170 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!1171 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!1172 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!1173 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!1174 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!1175 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!1176 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!1177 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!1178 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!1179 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!1180 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!1181 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!1182 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!1183 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!1184 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!1185 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!1186 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!1187 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!1188 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!1189 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!1190 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!1191 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!1192 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!1193 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!1194 = !{!1195, !1196, !1199, !1200}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1197, line: 46, baseType: !1198)
!1197 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1198 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1199 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1200 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1201 = !{!1202, !0, !2770, !2775, !2778, !2790, !2792}
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "direction_items", scope: !1204, file: !3, line: 1365, type: !2761, isLocal: true, isDefinition: true)
!1204 = distinct !DISubprogram(name: "TEXT_OT_move_lines", scope: !3, file: !3, line: 1363, type: !1205, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{null, !1207}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !1209, line: 568, baseType: !1210)
!1209 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !1209, line: 508, size: 1536, elements: !1211)
!1211 = !{!1212, !1216, !1217, !1218, !1219, !2686, !2690, !2696, !2700, !2701, !2705, !2706, !2707, !2708, !2712, !2713, !2728, !2729, !2733, !2759}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1210, file: !1209, line: 509, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1215)
!1215 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1210, file: !1209, line: 510, baseType: !1213, size: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1210, file: !1209, line: 511, baseType: !1213, size: 64, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1210, file: !1209, line: 512, baseType: !1213, size: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1210, file: !1209, line: 518, baseType: !1220, size: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!1200, !1223, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !59, line: 44, flags: DIFlagFwdDecl)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !99, line: 328, size: 1344, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1234, !1265, !1267, !1268, !1269, !1281, !2679, !2680, !2681, !2684, !2685}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1226, file: !99, line: 329, baseType: !1225, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1226, file: !99, line: 329, baseType: !1225, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1226, file: !99, line: 332, baseType: !1231, size: 512, offset: 128)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 512, elements: !1232)
!1232 = !{!1233}
!1233 = !DISubrange(count: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1226, file: !99, line: 333, baseType: !1235, size: 64, offset: 640)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1237, line: 75, baseType: !1238)
!1237 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1237, line: 62, size: 1024, elements: !1239)
!1239 = !{!1240, !1242, !1243, !1244, !1245, !1247, !1248, !1249, !1263, !1264}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1238, file: !1237, line: 63, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1238, file: !1237, line: 63, baseType: !1241, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1238, file: !1237, line: 64, baseType: !1215, size: 8, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1238, file: !1237, line: 64, baseType: !1215, size: 8, offset: 136)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1238, file: !1237, line: 65, baseType: !1246, size: 16, offset: 144)
!1246 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1238, file: !1237, line: 66, baseType: !1231, size: 512, offset: 160)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1238, file: !1237, line: 67, baseType: !1200, size: 32, offset: 672)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1238, file: !1237, line: 69, baseType: !1250, size: 256, offset: 704)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1237, line: 60, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1237, line: 48, size: 256, elements: !1252)
!1252 = !{!1253, !1254, !1261, !1262}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1251, file: !1237, line: 49, baseType: !1195, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1251, file: !1237, line: 58, baseType: !1255, size: 128, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1256, line: 71, baseType: !1257)
!1256 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1256, line: 69, size: 128, elements: !1258)
!1258 = !{!1259, !1260}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1257, file: !1256, line: 70, baseType: !1195, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1257, file: !1256, line: 70, baseType: !1195, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1251, file: !1237, line: 59, baseType: !1200, size: 32, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1251, file: !1237, line: 59, baseType: !1200, size: 32, offset: 224)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1238, file: !1237, line: 70, baseType: !1200, size: 32, offset: 960)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1238, file: !1237, line: 74, baseType: !1200, size: 32, offset: 992)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1226, file: !99, line: 336, baseType: !1266, size: 64, offset: 704)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1226, file: !99, line: 337, baseType: !1195, size: 64, offset: 768)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !1226, file: !99, line: 338, baseType: !1195, size: 64, offset: 832)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1226, file: !99, line: 340, baseType: !1270, size: 64, offset: 896)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !59, line: 55, size: 192, elements: !1272)
!1272 = !{!1273, !1277, !1280}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1271, file: !59, line: 58, baseType: !1274, size: 64)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !59, line: 56, size: 64, elements: !1275)
!1275 = !{!1276}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1274, file: !59, line: 57, baseType: !1195, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1271, file: !59, line: 60, baseType: !1278, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !59, line: 41, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1271, file: !59, line: 61, baseType: !1195, size: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !1226, file: !99, line: 341, baseType: !1282, size: 64, offset: 960)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !99, line: 106, size: 320, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1283, file: !99, line: 107, baseType: !1255, size: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !1283, file: !99, line: 108, baseType: !1200, size: 32, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !1283, file: !99, line: 109, baseType: !1200, size: 32, offset: 160)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1283, file: !99, line: 110, baseType: !1200, size: 32, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1283, file: !99, line: 110, baseType: !1200, size: 32, offset: 224)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !1283, file: !99, line: 111, baseType: !1291, size: 64, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1209, line: 490, size: 768, elements: !1293)
!1293 = !{!1294, !1295, !1296, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1292, file: !1209, line: 491, baseType: !1291, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1292, file: !1209, line: 491, baseType: !1291, size: 64, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1292, file: !1209, line: 493, baseType: !1297, size: 64, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !99, line: 169, size: 2048, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2645, !2648, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1298, file: !99, line: 170, baseType: !1297, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1298, file: !99, line: 170, baseType: !1297, size: 64, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1298, file: !99, line: 172, baseType: !1195, size: 64, offset: 128)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1298, file: !99, line: 174, baseType: !1304, size: 64, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !119, line: 49, size: 1984, elements: !1306)
!1306 = !{!1307, !1343, !1344, !1345, !1346, !1347, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1305, file: !119, line: 50, baseType: !1308, size: 960)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1237, line: 130, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1237, line: 117, size: 960, elements: !1310)
!1310 = !{!1311, !1312, !1313, !1315, !1334, !1338, !1339, !1340, !1341, !1342}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1309, file: !1237, line: 118, baseType: !1195, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1309, file: !1237, line: 118, baseType: !1195, size: 64, offset: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1309, file: !1237, line: 119, baseType: !1314, size: 64, offset: 128)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1309, file: !1237, line: 120, baseType: !1316, size: 64, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1237, line: 136, size: 17600, elements: !1318)
!1318 = !{!1319, !1320, !1322, !1325, !1329, !1330, !1331}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1317, file: !1237, line: 137, baseType: !1308, size: 960)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1317, file: !1237, line: 138, baseType: !1321, size: 64, offset: 960)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1317, file: !1237, line: 139, baseType: !1323, size: 64, offset: 1024)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1237, line: 43, flags: DIFlagFwdDecl)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1317, file: !1237, line: 140, baseType: !1326, size: 8192, offset: 1088)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 8192, elements: !1327)
!1327 = !{!1328}
!1328 = !DISubrange(count: 1024)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1317, file: !1237, line: 141, baseType: !1326, size: 8192, offset: 9280)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1317, file: !1237, line: 148, baseType: !1316, size: 64, offset: 17472)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1317, file: !1237, line: 150, baseType: !1332, size: 64, offset: 17536)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1237, line: 45, flags: DIFlagFwdDecl)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1309, file: !1237, line: 121, baseType: !1335, size: 528, offset: 256)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 528, elements: !1336)
!1336 = !{!1337}
!1337 = !DISubrange(count: 66)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1309, file: !1237, line: 126, baseType: !1246, size: 16, offset: 784)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1309, file: !1237, line: 127, baseType: !1200, size: 32, offset: 800)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1309, file: !1237, line: 128, baseType: !1200, size: 32, offset: 832)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1309, file: !1237, line: 128, baseType: !1200, size: 32, offset: 864)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1309, file: !1237, line: 129, baseType: !1235, size: 64, offset: 896)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1305, file: !119, line: 52, baseType: !1255, size: 128, offset: 960)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1305, file: !119, line: 53, baseType: !1255, size: 128, offset: 1088)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1305, file: !119, line: 54, baseType: !1255, size: 128, offset: 1216)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1305, file: !119, line: 55, baseType: !1255, size: 128, offset: 1344)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1305, file: !119, line: 57, baseType: !1348, size: 64, offset: 1472)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1350, line: 1216, size: 39680, elements: !1351)
!1350 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1351 = !{!1352, !1353, !1357, !1361, !1364, !1365, !1366, !1378, !1379, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1395, !1473, !1908, !2123, !2126, !2442, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2464, !2465, !2466, !2467, !2468, !2476, !2543, !2550, !2551, !2558, !2559, !2564, !2565, !2566, !2567, !2568}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1349, file: !1350, line: 1217, baseType: !1308, size: 960)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1349, file: !1350, line: 1218, baseType: !1354, size: 64, offset: 960)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1356, line: 43, flags: DIFlagFwdDecl)
!1356 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1349, file: !1350, line: 1220, baseType: !1358, size: 64, offset: 1024)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !1360, line: 44, flags: DIFlagFwdDecl)
!1360 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1349, file: !1350, line: 1221, baseType: !1362, size: 64, offset: 1088)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1350, line: 52, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1349, file: !1350, line: 1223, baseType: !1348, size: 64, offset: 1152)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1349, file: !1350, line: 1225, baseType: !1255, size: 128, offset: 1216)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1349, file: !1350, line: 1226, baseType: !1367, size: 64, offset: 1344)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1350, line: 69, size: 320, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1368, file: !1350, line: 70, baseType: !1367, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1368, file: !1350, line: 70, baseType: !1367, size: 64, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1368, file: !1350, line: 71, baseType: !7, size: 32, offset: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1368, file: !1350, line: 71, baseType: !7, size: 32, offset: 160)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1368, file: !1350, line: 72, baseType: !1200, size: 32, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1368, file: !1350, line: 73, baseType: !1246, size: 16, offset: 224)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1368, file: !1350, line: 73, baseType: !1246, size: 16, offset: 240)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1368, file: !1350, line: 74, baseType: !1358, size: 64, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1349, file: !1350, line: 1227, baseType: !1358, size: 64, offset: 1408)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1349, file: !1350, line: 1229, baseType: !1380, size: 96, offset: 1472)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 96, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 3)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1349, file: !1350, line: 1230, baseType: !1380, size: 96, offset: 1568)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1349, file: !1350, line: 1231, baseType: !1380, size: 96, offset: 1664)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1349, file: !1350, line: 1231, baseType: !1380, size: 96, offset: 1760)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1349, file: !1350, line: 1233, baseType: !7, size: 32, offset: 1856)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1349, file: !1350, line: 1234, baseType: !1200, size: 32, offset: 1888)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1349, file: !1350, line: 1235, baseType: !7, size: 32, offset: 1920)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1349, file: !1350, line: 1237, baseType: !1246, size: 16, offset: 1952)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1349, file: !1350, line: 1239, baseType: !1215, size: 8, offset: 1968)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1349, file: !1350, line: 1240, baseType: !1392, size: 8, offset: 1976)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 8, elements: !1393)
!1393 = !{!1394}
!1394 = !DISubrange(count: 1)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1349, file: !1350, line: 1242, baseType: !1396, size: 64, offset: 1984)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1398, line: 328, size: 3456, elements: !1399)
!1398 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1399 = !{!1400, !1401, !1402, !1405, !1406, !1407, !1411, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1438, !1439, !1440, !1443, !1448, !1449, !1452, !1456, !1461, !1465, !1469, !1470, !1471, !1472}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1397, file: !1398, line: 329, baseType: !1308, size: 960)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1397, file: !1398, line: 330, baseType: !1354, size: 64, offset: 960)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1397, file: !1398, line: 332, baseType: !1403, size: 64, offset: 1024)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1398, line: 332, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1397, file: !1398, line: 333, baseType: !1231, size: 512, offset: 1088)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1397, file: !1398, line: 335, baseType: !1278, size: 64, offset: 1600)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1397, file: !1398, line: 337, baseType: !1408, size: 64, offset: 1664)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1410, line: 45, flags: DIFlagFwdDecl)
!1410 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1397, file: !1398, line: 338, baseType: !1412, size: 64, offset: 1728)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 64, elements: !1413)
!1413 = !{!1414}
!1414 = !DISubrange(count: 2)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1397, file: !1398, line: 340, baseType: !1255, size: 128, offset: 1792)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1397, file: !1398, line: 340, baseType: !1255, size: 128, offset: 1920)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1397, file: !1398, line: 342, baseType: !1200, size: 32, offset: 2048)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1397, file: !1398, line: 342, baseType: !1200, size: 32, offset: 2080)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1397, file: !1398, line: 343, baseType: !1200, size: 32, offset: 2112)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1397, file: !1398, line: 345, baseType: !1200, size: 32, offset: 2144)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1397, file: !1398, line: 346, baseType: !1200, size: 32, offset: 2176)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1397, file: !1398, line: 347, baseType: !1246, size: 16, offset: 2208)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1397, file: !1398, line: 348, baseType: !1246, size: 16, offset: 2224)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1397, file: !1398, line: 349, baseType: !1200, size: 32, offset: 2240)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1397, file: !1398, line: 351, baseType: !1200, size: 32, offset: 2272)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1397, file: !1398, line: 353, baseType: !1246, size: 16, offset: 2304)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1397, file: !1398, line: 354, baseType: !1246, size: 16, offset: 2320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1397, file: !1398, line: 355, baseType: !1200, size: 32, offset: 2336)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1397, file: !1398, line: 357, baseType: !1430, size: 128, offset: 2368)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1431, line: 95, baseType: !1432)
!1431 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1431, line: 92, size: 128, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1432, file: !1431, line: 93, baseType: !1199, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1432, file: !1431, line: 93, baseType: !1199, size: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1432, file: !1431, line: 94, baseType: !1199, size: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1432, file: !1431, line: 94, baseType: !1199, size: 32, offset: 96)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1397, file: !1398, line: 363, baseType: !1255, size: 128, offset: 2496)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1397, file: !1398, line: 363, baseType: !1255, size: 128, offset: 2624)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1397, file: !1398, line: 368, baseType: !1441, size: 64, offset: 2752)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1398, line: 48, flags: DIFlagFwdDecl)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1397, file: !1398, line: 372, baseType: !1444, size: 32, offset: 2816)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1398, line: 274, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1398, line: 271, size: 32, elements: !1446)
!1446 = !{!1447}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1445, file: !1398, line: 273, baseType: !7, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1397, file: !1398, line: 373, baseType: !1200, size: 32, offset: 2848)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1397, file: !1398, line: 382, baseType: !1450, size: 64, offset: 2880)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1398, line: 46, flags: DIFlagFwdDecl)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1397, file: !1398, line: 385, baseType: !1453, size: 64, offset: 2944)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{null, !1195, !1199}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1397, file: !1398, line: 386, baseType: !1457, size: 64, offset: 3008)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{null, !1195, !1460}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1397, file: !1398, line: 387, baseType: !1462, size: 64, offset: 3072)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!1200, !1195}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1397, file: !1398, line: 388, baseType: !1466, size: 64, offset: 3136)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !1195}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1397, file: !1398, line: 389, baseType: !1195, size: 64, offset: 3200)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1397, file: !1398, line: 389, baseType: !1195, size: 64, offset: 3264)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1397, file: !1398, line: 389, baseType: !1195, size: 64, offset: 3328)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1397, file: !1398, line: 389, baseType: !1195, size: 64, offset: 3392)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1349, file: !1350, line: 1244, baseType: !1474, size: 64, offset: 2048)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1476, line: 200, size: 17024, elements: !1477)
!1476 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1477 = !{!1478, !1480, !1481, !1482, !1901, !1902, !1903, !1904, !1905, !1906, !1907}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1475, file: !1476, line: 201, baseType: !1479, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1475, file: !1476, line: 202, baseType: !1255, size: 128, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1475, file: !1476, line: 203, baseType: !1255, size: 128, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1475, file: !1476, line: 206, baseType: !1483, size: 64, offset: 320)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1476, line: 190, baseType: !1485)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1476, line: 126, size: 2816, elements: !1486)
!1486 = !{!1487, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1586, !1589, !1590, !1591, !1873, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1900}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1485, file: !1476, line: 127, baseType: !1488, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1485, file: !1476, line: 127, baseType: !1488, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1485, file: !1476, line: 128, baseType: !1195, size: 64, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1485, file: !1476, line: 129, baseType: !1195, size: 64, offset: 192)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1485, file: !1476, line: 130, baseType: !1231, size: 512, offset: 256)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1485, file: !1476, line: 132, baseType: !1200, size: 32, offset: 768)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1485, file: !1476, line: 132, baseType: !1200, size: 32, offset: 800)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1485, file: !1476, line: 133, baseType: !1200, size: 32, offset: 832)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1485, file: !1476, line: 134, baseType: !1200, size: 32, offset: 864)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1485, file: !1476, line: 134, baseType: !1200, size: 32, offset: 896)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1485, file: !1476, line: 134, baseType: !1200, size: 32, offset: 928)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1485, file: !1476, line: 135, baseType: !1200, size: 32, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1485, file: !1476, line: 135, baseType: !1200, size: 32, offset: 992)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1485, file: !1476, line: 136, baseType: !1200, size: 32, offset: 1024)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1485, file: !1476, line: 136, baseType: !1200, size: 32, offset: 1056)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1485, file: !1476, line: 137, baseType: !1200, size: 32, offset: 1088)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1485, file: !1476, line: 137, baseType: !1200, size: 32, offset: 1120)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1485, file: !1476, line: 138, baseType: !1199, size: 32, offset: 1152)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1485, file: !1476, line: 139, baseType: !1199, size: 32, offset: 1184)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1485, file: !1476, line: 139, baseType: !1199, size: 32, offset: 1216)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1485, file: !1476, line: 141, baseType: !1246, size: 16, offset: 1248)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1485, file: !1476, line: 142, baseType: !1246, size: 16, offset: 1264)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1485, file: !1476, line: 143, baseType: !1200, size: 32, offset: 1280)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1485, file: !1476, line: 144, baseType: !1200, size: 32, offset: 1312)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1485, file: !1476, line: 146, baseType: !1513, size: 64, offset: 1344)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1476, line: 114, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1476, line: 99, size: 7232, elements: !1516)
!1516 = !{!1517, !1519, !1520, !1521, !1522, !1523, !1524, !1535, !1539, !1554, !1563, !1570, !1580}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1515, file: !1476, line: 100, baseType: !1518, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1515, file: !1476, line: 100, baseType: !1518, size: 64, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1515, file: !1476, line: 101, baseType: !1200, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1515, file: !1476, line: 101, baseType: !1200, size: 32, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1515, file: !1476, line: 102, baseType: !1200, size: 32, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1515, file: !1476, line: 102, baseType: !1200, size: 32, offset: 224)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1515, file: !1476, line: 103, baseType: !1525, size: 64, offset: 256)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1476, line: 59, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1476, line: 56, size: 2112, elements: !1528)
!1528 = !{!1529, !1533, !1534}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1527, file: !1476, line: 57, baseType: !1530, size: 2048)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 2048, elements: !1531)
!1531 = !{!1532}
!1532 = !DISubrange(count: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1527, file: !1476, line: 58, baseType: !1200, size: 32, offset: 2048)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1527, file: !1476, line: 58, baseType: !1200, size: 32, offset: 2080)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1515, file: !1476, line: 106, baseType: !1536, size: 6144, offset: 320)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 6144, elements: !1537)
!1537 = !{!1538}
!1538 = !DISubrange(count: 768)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1515, file: !1476, line: 107, baseType: !1540, size: 64, offset: 6464)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1476, line: 97, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1476, line: 83, size: 8320, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1550, !1551, !1552, !1553}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1542, file: !1476, line: 84, baseType: !1536, size: 6144)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1542, file: !1476, line: 87, baseType: !1530, size: 2048, offset: 6144)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1542, file: !1476, line: 88, baseType: !1547, size: 64, offset: 8192)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1549, line: 41, flags: DIFlagFwdDecl)
!1549 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1542, file: !1476, line: 90, baseType: !1246, size: 16, offset: 8256)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1542, file: !1476, line: 92, baseType: !1246, size: 16, offset: 8272)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1542, file: !1476, line: 93, baseType: !1246, size: 16, offset: 8288)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1542, file: !1476, line: 95, baseType: !1246, size: 16, offset: 8304)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1515, file: !1476, line: 108, baseType: !1555, size: 64, offset: 6528)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1476, line: 66, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1476, line: 61, size: 128, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1557, file: !1476, line: 62, baseType: !1200, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1557, file: !1476, line: 63, baseType: !1200, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1557, file: !1476, line: 64, baseType: !1200, size: 32, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1557, file: !1476, line: 65, baseType: !1200, size: 32, offset: 96)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1515, file: !1476, line: 109, baseType: !1564, size: 64, offset: 6592)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1476, line: 71, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1476, line: 68, size: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1566, file: !1476, line: 69, baseType: !1200, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1566, file: !1476, line: 70, baseType: !1200, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1515, file: !1476, line: 110, baseType: !1571, size: 64, offset: 6656)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1476, line: 81, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1476, line: 73, size: 352, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1579}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1573, file: !1476, line: 74, baseType: !1380, size: 96)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1573, file: !1476, line: 75, baseType: !1380, size: 96, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1573, file: !1476, line: 76, baseType: !1380, size: 96, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1573, file: !1476, line: 77, baseType: !1200, size: 32, offset: 288)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1573, file: !1476, line: 78, baseType: !1200, size: 32, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1515, file: !1476, line: 113, baseType: !1581, size: 512, offset: 6720)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1582, line: 182, baseType: !1583)
!1582 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1582, line: 180, size: 512, elements: !1584)
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1583, file: !1582, line: 181, baseType: !1231, size: 512)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1485, file: !1476, line: 148, baseType: !1587, size: 64, offset: 1408)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1476, line: 49, flags: DIFlagFwdDecl)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1485, file: !1476, line: 151, baseType: !1348, size: 64, offset: 1472)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1485, file: !1476, line: 152, baseType: !1358, size: 64, offset: 1536)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1485, file: !1476, line: 153, baseType: !1592, size: 64, offset: 1600)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1356, line: 64, size: 19136, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1602, !1603, !1604, !1605, !1608, !1609, !1859, !1860, !1868, !1869, !1870, !1871, !1872}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1593, file: !1356, line: 65, baseType: !1308, size: 960)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1593, file: !1356, line: 66, baseType: !1354, size: 64, offset: 960)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1593, file: !1356, line: 68, baseType: !1326, size: 8192, offset: 1024)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1593, file: !1356, line: 70, baseType: !1200, size: 32, offset: 9216)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1593, file: !1356, line: 71, baseType: !1200, size: 32, offset: 9248)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1593, file: !1356, line: 72, baseType: !1601, size: 64, offset: 9280)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 64, elements: !1413)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1593, file: !1356, line: 74, baseType: !1199, size: 32, offset: 9344)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1593, file: !1356, line: 74, baseType: !1199, size: 32, offset: 9376)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1593, file: !1356, line: 76, baseType: !1547, size: 64, offset: 9408)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1593, file: !1356, line: 77, baseType: !1606, size: 64, offset: 9472)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1356, line: 77, flags: DIFlagFwdDecl)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1593, file: !1356, line: 78, baseType: !1408, size: 64, offset: 9536)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1593, file: !1356, line: 80, baseType: !1610, size: 2624, offset: 9600)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1410, line: 340, size: 2624, elements: !1611)
!1611 = !{!1612, !1640, !1658, !1659, !1660, !1678, !1736, !1737, !1839, !1840, !1841, !1842, !1848}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1610, file: !1410, line: 341, baseType: !1613, size: 576)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1410, line: 251, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1410, line: 207, size: 576, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1614, file: !1410, line: 208, baseType: !1200, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1614, file: !1410, line: 211, baseType: !1246, size: 16, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1614, file: !1410, line: 212, baseType: !1246, size: 16, offset: 48)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1614, file: !1410, line: 213, baseType: !1199, size: 32, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1614, file: !1410, line: 214, baseType: !1246, size: 16, offset: 96)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1614, file: !1410, line: 215, baseType: !1246, size: 16, offset: 112)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1614, file: !1410, line: 216, baseType: !1246, size: 16, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1614, file: !1410, line: 217, baseType: !1246, size: 16, offset: 144)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1614, file: !1410, line: 218, baseType: !1246, size: 16, offset: 160)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1614, file: !1410, line: 219, baseType: !1246, size: 16, offset: 176)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1614, file: !1410, line: 220, baseType: !1199, size: 32, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1614, file: !1410, line: 222, baseType: !1246, size: 16, offset: 224)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1614, file: !1410, line: 225, baseType: !1246, size: 16, offset: 240)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1614, file: !1410, line: 228, baseType: !1200, size: 32, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1614, file: !1410, line: 229, baseType: !1200, size: 32, offset: 288)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1614, file: !1410, line: 233, baseType: !1200, size: 32, offset: 320)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1614, file: !1410, line: 236, baseType: !1246, size: 16, offset: 352)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1614, file: !1410, line: 236, baseType: !1246, size: 16, offset: 368)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1614, file: !1410, line: 241, baseType: !1199, size: 32, offset: 384)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1614, file: !1410, line: 244, baseType: !1200, size: 32, offset: 416)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1614, file: !1410, line: 244, baseType: !1200, size: 32, offset: 448)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1614, file: !1410, line: 245, baseType: !1199, size: 32, offset: 480)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1614, file: !1410, line: 248, baseType: !1199, size: 32, offset: 512)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1614, file: !1410, line: 250, baseType: !1200, size: 32, offset: 544)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1610, file: !1410, line: 342, baseType: !1641, size: 448, offset: 576)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1410, line: 79, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1410, line: 61, size: 448, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1642, file: !1410, line: 62, baseType: !1195, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1642, file: !1410, line: 64, baseType: !1246, size: 16, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1642, file: !1410, line: 65, baseType: !1246, size: 16, offset: 80)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1642, file: !1410, line: 67, baseType: !1199, size: 32, offset: 96)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1642, file: !1410, line: 68, baseType: !1199, size: 32, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1642, file: !1410, line: 69, baseType: !1199, size: 32, offset: 160)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1642, file: !1410, line: 70, baseType: !1246, size: 16, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1642, file: !1410, line: 71, baseType: !1246, size: 16, offset: 208)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1642, file: !1410, line: 72, baseType: !1412, size: 64, offset: 224)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1642, file: !1410, line: 75, baseType: !1199, size: 32, offset: 288)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1642, file: !1410, line: 75, baseType: !1199, size: 32, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1642, file: !1410, line: 75, baseType: !1199, size: 32, offset: 352)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1642, file: !1410, line: 78, baseType: !1199, size: 32, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1642, file: !1410, line: 78, baseType: !1199, size: 32, offset: 416)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1610, file: !1410, line: 343, baseType: !1255, size: 128, offset: 1024)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1610, file: !1410, line: 344, baseType: !1255, size: 128, offset: 1152)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1610, file: !1410, line: 345, baseType: !1661, size: 192, offset: 1280)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1410, line: 278, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1410, line: 270, size: 192, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1662, file: !1410, line: 271, baseType: !1200, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1662, file: !1410, line: 273, baseType: !1199, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1662, file: !1410, line: 275, baseType: !1200, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1662, file: !1410, line: 276, baseType: !1200, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1662, file: !1410, line: 277, baseType: !1669, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1410, line: 55, size: 576, elements: !1671)
!1671 = !{!1672, !1673, !1674}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1670, file: !1410, line: 56, baseType: !1200, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1670, file: !1410, line: 57, baseType: !1199, size: 32, offset: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1670, file: !1410, line: 58, baseType: !1675, size: 512, offset: 64)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 512, elements: !1676)
!1676 = !{!1677, !1677}
!1677 = !DISubrange(count: 4)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1610, file: !1410, line: 346, baseType: !1679, size: 384, offset: 1472)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1410, line: 268, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1410, line: 253, size: 384, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1730, !1731, !1732, !1733, !1734, !1735}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1680, file: !1410, line: 254, baseType: !1200, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1680, file: !1410, line: 255, baseType: !1200, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1680, file: !1410, line: 255, baseType: !1200, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1680, file: !1410, line: 258, baseType: !1199, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1680, file: !1410, line: 259, baseType: !1687, size: 64, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1410, line: 164, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1410, line: 108, size: 1664, elements: !1690)
!1690 = !{!1691, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1689, file: !1410, line: 109, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1689, file: !1410, line: 109, baseType: !1692, size: 64, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1689, file: !1410, line: 111, baseType: !1231, size: 512, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1689, file: !1410, line: 119, baseType: !1412, size: 64, offset: 640)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1689, file: !1410, line: 119, baseType: !1412, size: 64, offset: 704)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1689, file: !1410, line: 125, baseType: !1412, size: 64, offset: 768)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1689, file: !1410, line: 125, baseType: !1412, size: 64, offset: 832)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1689, file: !1410, line: 127, baseType: !1412, size: 64, offset: 896)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1689, file: !1410, line: 130, baseType: !1200, size: 32, offset: 960)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1689, file: !1410, line: 131, baseType: !1200, size: 32, offset: 992)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1689, file: !1410, line: 132, baseType: !1703, size: 64, offset: 1024)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1410, line: 106, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1410, line: 81, size: 512, elements: !1706)
!1706 = !{!1707, !1708, !1711, !1712, !1713, !1714}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1705, file: !1410, line: 82, baseType: !1412, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1705, file: !1410, line: 97, baseType: !1709, size: 256, offset: 64)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 256, elements: !1710)
!1710 = !{!1677, !1414}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1705, file: !1410, line: 102, baseType: !1412, size: 64, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1705, file: !1410, line: 102, baseType: !1412, size: 64, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1705, file: !1410, line: 104, baseType: !1200, size: 32, offset: 448)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1705, file: !1410, line: 105, baseType: !1200, size: 32, offset: 480)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1689, file: !1410, line: 135, baseType: !1380, size: 96, offset: 1088)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1689, file: !1410, line: 136, baseType: !1199, size: 32, offset: 1184)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1689, file: !1410, line: 139, baseType: !1200, size: 32, offset: 1216)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1689, file: !1410, line: 139, baseType: !1200, size: 32, offset: 1248)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1689, file: !1410, line: 139, baseType: !1200, size: 32, offset: 1280)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1689, file: !1410, line: 140, baseType: !1380, size: 96, offset: 1312)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1689, file: !1410, line: 143, baseType: !1246, size: 16, offset: 1408)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1689, file: !1410, line: 144, baseType: !1246, size: 16, offset: 1424)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1689, file: !1410, line: 145, baseType: !1246, size: 16, offset: 1440)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1689, file: !1410, line: 148, baseType: !1246, size: 16, offset: 1456)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1689, file: !1410, line: 149, baseType: !1200, size: 32, offset: 1472)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1689, file: !1410, line: 150, baseType: !1199, size: 32, offset: 1504)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1689, file: !1410, line: 152, baseType: !1408, size: 64, offset: 1536)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1689, file: !1410, line: 163, baseType: !1199, size: 32, offset: 1600)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1689, file: !1410, line: 163, baseType: !1199, size: 32, offset: 1632)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1680, file: !1410, line: 261, baseType: !1199, size: 32, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1680, file: !1410, line: 261, baseType: !1199, size: 32, offset: 224)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1680, file: !1410, line: 261, baseType: !1199, size: 32, offset: 256)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1680, file: !1410, line: 263, baseType: !1200, size: 32, offset: 288)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1680, file: !1410, line: 266, baseType: !1200, size: 32, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1680, file: !1410, line: 267, baseType: !1199, size: 32, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1610, file: !1410, line: 347, baseType: !1687, size: 64, offset: 1856)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1610, file: !1410, line: 348, baseType: !1738, size: 64, offset: 1920)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1410, line: 205, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1410, line: 186, size: 1024, elements: !1741)
!1741 = !{!1742, !1744, !1745, !1746, !1748, !1749, !1750, !1758, !1759, !1760, !1837, !1838}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1740, file: !1410, line: 187, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1740, file: !1410, line: 187, baseType: !1743, size: 64, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1740, file: !1410, line: 189, baseType: !1231, size: 512, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1740, file: !1410, line: 191, baseType: !1747, size: 64, offset: 640)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1740, file: !1410, line: 193, baseType: !1200, size: 32, offset: 704)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1740, file: !1410, line: 193, baseType: !1200, size: 32, offset: 736)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1740, file: !1410, line: 195, baseType: !1751, size: 64, offset: 768)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1410, line: 184, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1410, line: 166, size: 320, elements: !1754)
!1754 = !{!1755, !1756, !1757}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1753, file: !1410, line: 180, baseType: !1709, size: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1753, file: !1410, line: 182, baseType: !1200, size: 32, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1753, file: !1410, line: 183, baseType: !1200, size: 32, offset: 288)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1740, file: !1410, line: 196, baseType: !1200, size: 32, offset: 832)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1740, file: !1410, line: 198, baseType: !1200, size: 32, offset: 864)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1740, file: !1410, line: 200, baseType: !1761, size: 64, offset: 896)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1549, line: 77, size: 15424, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1769, !1772, !1773, !1776, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1796, !1797, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1823, !1824, !1825, !1826, !1827, !1831}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1762, file: !1549, line: 78, baseType: !1308, size: 960)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1762, file: !1549, line: 80, baseType: !1326, size: 8192, offset: 960)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1762, file: !1549, line: 82, baseType: !1767, size: 64, offset: 9152)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1549, line: 43, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1762, file: !1549, line: 83, baseType: !1770, size: 64, offset: 9216)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1237, line: 46, flags: DIFlagFwdDecl)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1762, file: !1549, line: 86, baseType: !1547, size: 64, offset: 9280)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1762, file: !1549, line: 87, baseType: !1774, size: 64, offset: 9344)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1549, line: 44, flags: DIFlagFwdDecl)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1762, file: !1549, line: 89, baseType: !1777, size: 512, offset: 9408)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1774, size: 512, elements: !1778)
!1778 = !{!1779}
!1779 = !DISubrange(count: 8)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1762, file: !1549, line: 90, baseType: !1246, size: 16, offset: 9920)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1762, file: !1549, line: 90, baseType: !1246, size: 16, offset: 9936)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1762, file: !1549, line: 92, baseType: !1246, size: 16, offset: 9952)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1762, file: !1549, line: 92, baseType: !1246, size: 16, offset: 9968)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1762, file: !1549, line: 93, baseType: !1246, size: 16, offset: 9984)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1762, file: !1549, line: 93, baseType: !1246, size: 16, offset: 10000)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1762, file: !1549, line: 94, baseType: !1200, size: 32, offset: 10016)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1762, file: !1549, line: 97, baseType: !1246, size: 16, offset: 10048)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1762, file: !1549, line: 97, baseType: !1246, size: 16, offset: 10064)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1762, file: !1549, line: 98, baseType: !1246, size: 16, offset: 10080)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1762, file: !1549, line: 98, baseType: !1246, size: 16, offset: 10096)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1762, file: !1549, line: 99, baseType: !1246, size: 16, offset: 10112)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1762, file: !1549, line: 99, baseType: !1246, size: 16, offset: 10128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1762, file: !1549, line: 100, baseType: !7, size: 32, offset: 10144)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1762, file: !1549, line: 101, baseType: !1795, size: 64, offset: 10176)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1762, file: !1549, line: 103, baseType: !1332, size: 64, offset: 10240)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1762, file: !1549, line: 104, baseType: !1798, size: 64, offset: 10304)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1237, line: 159, size: 448, elements: !1800)
!1800 = !{!1801, !1803, !1804, !1806, !1807, !1809}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1799, file: !1237, line: 161, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1413)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1799, file: !1237, line: 162, baseType: !1802, size: 64, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1799, file: !1237, line: 163, baseType: !1805, size: 32, offset: 128)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1246, size: 32, elements: !1413)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1799, file: !1237, line: 164, baseType: !1805, size: 32, offset: 160)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1799, file: !1237, line: 165, baseType: !1808, size: 128, offset: 192)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 128, elements: !1413)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1799, file: !1237, line: 166, baseType: !1810, size: 128, offset: 320)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1770, size: 128, elements: !1413)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1762, file: !1549, line: 107, baseType: !1199, size: 32, offset: 10368)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1762, file: !1549, line: 108, baseType: !1200, size: 32, offset: 10400)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1762, file: !1549, line: 109, baseType: !1246, size: 16, offset: 10432)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1762, file: !1549, line: 110, baseType: !1246, size: 16, offset: 10448)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1762, file: !1549, line: 113, baseType: !1200, size: 32, offset: 10464)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1762, file: !1549, line: 113, baseType: !1200, size: 32, offset: 10496)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1762, file: !1549, line: 114, baseType: !1215, size: 8, offset: 10528)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1762, file: !1549, line: 114, baseType: !1215, size: 8, offset: 10536)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1762, file: !1549, line: 115, baseType: !1246, size: 16, offset: 10544)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1762, file: !1549, line: 116, baseType: !1821, size: 128, offset: 10560)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 128, elements: !1822)
!1822 = !{!1677}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1762, file: !1549, line: 119, baseType: !1199, size: 32, offset: 10688)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1762, file: !1549, line: 119, baseType: !1199, size: 32, offset: 10720)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1762, file: !1549, line: 122, baseType: !1581, size: 512, offset: 10752)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1762, file: !1549, line: 123, baseType: !1215, size: 8, offset: 11264)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1762, file: !1549, line: 125, baseType: !1828, size: 56, offset: 11272)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 56, elements: !1829)
!1829 = !{!1830}
!1830 = !DISubrange(count: 7)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1762, file: !1549, line: 126, baseType: !1832, size: 4096, offset: 11328)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 4096, elements: !1778)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1549, line: 69, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1549, line: 67, size: 512, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1834, file: !1549, line: 68, baseType: !1231, size: 512)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1740, file: !1410, line: 201, baseType: !1199, size: 32, offset: 960)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1740, file: !1410, line: 204, baseType: !1200, size: 32, offset: 992)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1610, file: !1410, line: 350, baseType: !1255, size: 128, offset: 1984)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1610, file: !1410, line: 351, baseType: !1200, size: 32, offset: 2112)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1610, file: !1410, line: 351, baseType: !1200, size: 32, offset: 2144)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1610, file: !1410, line: 353, baseType: !1843, size: 64, offset: 2176)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1410, line: 297, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1410, line: 295, size: 2048, elements: !1846)
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1845, file: !1410, line: 296, baseType: !1530, size: 2048)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1610, file: !1410, line: 355, baseType: !1849, size: 384, offset: 2240)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1410, line: 338, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1410, line: 322, size: 384, elements: !1851)
!1851 = !{!1852, !1853, !1854, !1855, !1856, !1857, !1858}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1850, file: !1410, line: 323, baseType: !1200, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1850, file: !1410, line: 325, baseType: !1246, size: 16, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1850, file: !1410, line: 326, baseType: !1246, size: 16, offset: 48)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1850, file: !1410, line: 331, baseType: !1255, size: 128, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1850, file: !1410, line: 334, baseType: !1255, size: 128, offset: 192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1850, file: !1410, line: 335, baseType: !1200, size: 32, offset: 320)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1850, file: !1410, line: 337, baseType: !1200, size: 32, offset: 352)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1593, file: !1356, line: 81, baseType: !1195, size: 64, offset: 12224)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1593, file: !1356, line: 85, baseType: !1861, size: 6208, offset: 12288)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1356, line: 55, size: 6208, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1861, file: !1356, line: 56, baseType: !1536, size: 6144)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1861, file: !1356, line: 58, baseType: !1246, size: 16, offset: 6144)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1861, file: !1356, line: 59, baseType: !1246, size: 16, offset: 6160)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1861, file: !1356, line: 60, baseType: !1246, size: 16, offset: 6176)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1861, file: !1356, line: 61, baseType: !1246, size: 16, offset: 6192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1593, file: !1356, line: 86, baseType: !1200, size: 32, offset: 18496)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1593, file: !1356, line: 88, baseType: !1200, size: 32, offset: 18528)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1593, file: !1356, line: 90, baseType: !1200, size: 32, offset: 18560)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1593, file: !1356, line: 94, baseType: !1200, size: 32, offset: 18592)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1593, file: !1356, line: 100, baseType: !1581, size: 512, offset: 18624)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1485, file: !1476, line: 154, baseType: !1874, size: 64, offset: 1664)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1360, line: 264, flags: DIFlagFwdDecl)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1485, file: !1476, line: 156, baseType: !1547, size: 64, offset: 1728)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1485, file: !1476, line: 158, baseType: !1199, size: 32, offset: 1792)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1485, file: !1476, line: 159, baseType: !1199, size: 32, offset: 1824)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1485, file: !1476, line: 162, baseType: !1488, size: 64, offset: 1856)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1485, file: !1476, line: 162, baseType: !1488, size: 64, offset: 1920)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1485, file: !1476, line: 162, baseType: !1488, size: 64, offset: 1984)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1485, file: !1476, line: 164, baseType: !1255, size: 128, offset: 2048)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1485, file: !1476, line: 166, baseType: !1884, size: 64, offset: 2176)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1476, line: 51, flags: DIFlagFwdDecl)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1485, file: !1476, line: 167, baseType: !1195, size: 64, offset: 2240)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1485, file: !1476, line: 168, baseType: !1199, size: 32, offset: 2304)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1485, file: !1476, line: 170, baseType: !1199, size: 32, offset: 2336)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1485, file: !1476, line: 170, baseType: !1199, size: 32, offset: 2368)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1485, file: !1476, line: 171, baseType: !1199, size: 32, offset: 2400)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1485, file: !1476, line: 173, baseType: !1195, size: 64, offset: 2432)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1485, file: !1476, line: 175, baseType: !1200, size: 32, offset: 2496)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1485, file: !1476, line: 176, baseType: !1200, size: 32, offset: 2528)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1485, file: !1476, line: 179, baseType: !1200, size: 32, offset: 2560)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1485, file: !1476, line: 180, baseType: !1199, size: 32, offset: 2592)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1485, file: !1476, line: 183, baseType: !1200, size: 32, offset: 2624)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1485, file: !1476, line: 185, baseType: !1215, size: 8, offset: 2656)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1485, file: !1476, line: 186, baseType: !1899, size: 24, offset: 2664)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 24, elements: !1381)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1485, file: !1476, line: 189, baseType: !1255, size: 128, offset: 2688)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1475, file: !1476, line: 207, baseType: !1326, size: 8192, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1475, file: !1476, line: 208, baseType: !1326, size: 8192, offset: 8576)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1475, file: !1476, line: 210, baseType: !1200, size: 32, offset: 16768)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1475, file: !1476, line: 210, baseType: !1200, size: 32, offset: 16800)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1475, file: !1476, line: 211, baseType: !1200, size: 32, offset: 16832)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1475, file: !1476, line: 211, baseType: !1200, size: 32, offset: 16864)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1475, file: !1476, line: 212, baseType: !1430, size: 128, offset: 16896)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1349, file: !1350, line: 1246, baseType: !1909, size: 64, offset: 2112)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1350, line: 1067, size: 5184, elements: !1911)
!1911 = !{!1912, !1942, !1943, !1958, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1980, !1996, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2106}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1910, file: !1350, line: 1068, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1350, line: 934, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1350, line: 925, size: 576, elements: !1916)
!1916 = !{!1917, !1934, !1935, !1936, !1937, !1938, !1941}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1915, file: !1350, line: 926, baseType: !1918, size: 320)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1350, line: 830, baseType: !1919)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1350, line: 813, size: 320, elements: !1920)
!1920 = !{!1921, !1924, !1927, !1928, !1931, !1932, !1933}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1919, file: !1350, line: 814, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1350, line: 51, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1919, file: !1350, line: 815, baseType: !1925, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1350, line: 815, flags: DIFlagFwdDecl)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1919, file: !1350, line: 818, baseType: !1195, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1919, file: !1350, line: 819, baseType: !1929, size: 32, offset: 192)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 32, elements: !1822)
!1930 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1919, file: !1350, line: 822, baseType: !1200, size: 32, offset: 224)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1919, file: !1350, line: 826, baseType: !1200, size: 32, offset: 256)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1919, file: !1350, line: 829, baseType: !1200, size: 32, offset: 288)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1915, file: !1350, line: 928, baseType: !1246, size: 16, offset: 320)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1915, file: !1350, line: 928, baseType: !1246, size: 16, offset: 336)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1915, file: !1350, line: 929, baseType: !1200, size: 32, offset: 352)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1915, file: !1350, line: 930, baseType: !1795, size: 64, offset: 384)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1915, file: !1350, line: 931, baseType: !1939, size: 64, offset: 448)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1350, line: 931, flags: DIFlagFwdDecl)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1915, file: !1350, line: 933, baseType: !1195, size: 64, offset: 512)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1910, file: !1350, line: 1069, baseType: !1913, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1910, file: !1350, line: 1070, baseType: !1944, size: 64, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1350, line: 916, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1350, line: 891, size: 704, elements: !1947)
!1947 = !{!1948, !1949, !1950, !1952, !1953, !1954, !1955, !1956, !1957}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1946, file: !1350, line: 892, baseType: !1918, size: 320)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1946, file: !1350, line: 896, baseType: !1200, size: 32, offset: 320)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1946, file: !1350, line: 900, baseType: !1951, size: 96, offset: 352)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 96, elements: !1381)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1946, file: !1350, line: 903, baseType: !1199, size: 32, offset: 448)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1946, file: !1350, line: 906, baseType: !1200, size: 32, offset: 480)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1946, file: !1350, line: 909, baseType: !1199, size: 32, offset: 512)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1946, file: !1350, line: 912, baseType: !1199, size: 32, offset: 544)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1946, file: !1350, line: 914, baseType: !1358, size: 64, offset: 576)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1946, file: !1350, line: 915, baseType: !1195, size: 64, offset: 640)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1910, file: !1350, line: 1071, baseType: !1959, size: 64, offset: 192)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1350, line: 920, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1350, line: 918, size: 320, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1961, file: !1350, line: 919, baseType: !1918, size: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1910, file: !1350, line: 1075, baseType: !1199, size: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1910, file: !1350, line: 1077, baseType: !1199, size: 32, offset: 288)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1910, file: !1350, line: 1078, baseType: !1199, size: 32, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1910, file: !1350, line: 1079, baseType: !1246, size: 16, offset: 352)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1910, file: !1350, line: 1082, baseType: !1246, size: 16, offset: 368)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1910, file: !1350, line: 1085, baseType: !1215, size: 8, offset: 384)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1910, file: !1350, line: 1086, baseType: !1215, size: 8, offset: 392)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1910, file: !1350, line: 1087, baseType: !1215, size: 8, offset: 400)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1910, file: !1350, line: 1088, baseType: !1215, size: 8, offset: 408)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1910, file: !1350, line: 1090, baseType: !1199, size: 32, offset: 416)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1910, file: !1350, line: 1093, baseType: !1246, size: 16, offset: 448)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1910, file: !1350, line: 1096, baseType: !1215, size: 8, offset: 464)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1910, file: !1350, line: 1098, baseType: !1977, size: 40, offset: 472)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 40, elements: !1978)
!1978 = !{!1979}
!1979 = !DISubrange(count: 5)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1910, file: !1350, line: 1101, baseType: !1981, size: 832, offset: 512)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1350, line: 836, size: 832, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1981, file: !1350, line: 837, baseType: !1918, size: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1981, file: !1350, line: 839, baseType: !1246, size: 16, offset: 320)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1981, file: !1350, line: 839, baseType: !1246, size: 16, offset: 336)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1981, file: !1350, line: 842, baseType: !1246, size: 16, offset: 352)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1981, file: !1350, line: 842, baseType: !1246, size: 16, offset: 368)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1981, file: !1350, line: 843, baseType: !1805, size: 32, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1981, file: !1350, line: 845, baseType: !1200, size: 32, offset: 416)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1981, file: !1350, line: 847, baseType: !1195, size: 64, offset: 448)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1981, file: !1350, line: 848, baseType: !1761, size: 64, offset: 512)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1981, file: !1350, line: 849, baseType: !1761, size: 64, offset: 576)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1981, file: !1350, line: 850, baseType: !1761, size: 64, offset: 640)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1981, file: !1350, line: 851, baseType: !1380, size: 96, offset: 704)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1981, file: !1350, line: 852, baseType: !1199, size: 32, offset: 800)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1910, file: !1350, line: 1104, baseType: !1997, size: 1344, offset: 1344)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1350, line: 867, size: 1344, elements: !1998)
!1998 = !{!1999, !2000, !2001, !2002, !2003, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1997, file: !1350, line: 868, baseType: !1246, size: 16)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1997, file: !1350, line: 869, baseType: !1246, size: 16, offset: 16)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1997, file: !1350, line: 870, baseType: !1246, size: 16, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1997, file: !1350, line: 871, baseType: !1246, size: 16, offset: 48)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1997, file: !1350, line: 873, baseType: !2004, size: 896, offset: 64)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2005, size: 896, elements: !1829)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1350, line: 864, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1350, line: 859, size: 128, elements: !2007)
!2007 = !{!2008, !2009, !2010, !2011, !2012, !2013}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2006, file: !1350, line: 860, baseType: !1246, size: 16)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2006, file: !1350, line: 861, baseType: !1246, size: 16, offset: 16)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2006, file: !1350, line: 861, baseType: !1246, size: 16, offset: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2006, file: !1350, line: 861, baseType: !1246, size: 16, offset: 48)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2006, file: !1350, line: 862, baseType: !1200, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2006, file: !1350, line: 863, baseType: !1199, size: 32, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1997, file: !1350, line: 874, baseType: !1195, size: 64, offset: 960)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1997, file: !1350, line: 876, baseType: !1199, size: 32, offset: 1024)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1997, file: !1350, line: 876, baseType: !1199, size: 32, offset: 1056)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1997, file: !1350, line: 878, baseType: !1200, size: 32, offset: 1088)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1997, file: !1350, line: 879, baseType: !1200, size: 32, offset: 1120)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1997, file: !1350, line: 881, baseType: !1200, size: 32, offset: 1152)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1997, file: !1350, line: 881, baseType: !1200, size: 32, offset: 1184)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1997, file: !1350, line: 883, baseType: !1348, size: 64, offset: 1216)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1997, file: !1350, line: 884, baseType: !1358, size: 64, offset: 1280)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1910, file: !1350, line: 1107, baseType: !1199, size: 32, offset: 2688)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1910, file: !1350, line: 1110, baseType: !1199, size: 32, offset: 2720)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1910, file: !1350, line: 1113, baseType: !1246, size: 16, offset: 2752)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1910, file: !1350, line: 1113, baseType: !1246, size: 16, offset: 2768)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1910, file: !1350, line: 1116, baseType: !1215, size: 8, offset: 2784)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1910, file: !1350, line: 1117, baseType: !1392, size: 8, offset: 2792)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1910, file: !1350, line: 1120, baseType: !1246, size: 16, offset: 2800)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1910, file: !1350, line: 1121, baseType: !1199, size: 32, offset: 2816)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1910, file: !1350, line: 1122, baseType: !1199, size: 32, offset: 2848)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1910, file: !1350, line: 1123, baseType: !1199, size: 32, offset: 2880)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1910, file: !1350, line: 1124, baseType: !1199, size: 32, offset: 2912)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1910, file: !1350, line: 1125, baseType: !1199, size: 32, offset: 2944)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1910, file: !1350, line: 1126, baseType: !1199, size: 32, offset: 2976)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1910, file: !1350, line: 1127, baseType: !1199, size: 32, offset: 3008)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1910, file: !1350, line: 1128, baseType: !1199, size: 32, offset: 3040)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1910, file: !1350, line: 1129, baseType: !1199, size: 32, offset: 3072)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1910, file: !1350, line: 1130, baseType: !1199, size: 32, offset: 3104)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1910, file: !1350, line: 1131, baseType: !1246, size: 16, offset: 3136)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1910, file: !1350, line: 1132, baseType: !1215, size: 8, offset: 3152)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1910, file: !1350, line: 1133, baseType: !1215, size: 8, offset: 3160)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1910, file: !1350, line: 1134, baseType: !1899, size: 24, offset: 3168)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1910, file: !1350, line: 1135, baseType: !1215, size: 8, offset: 3192)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1910, file: !1350, line: 1138, baseType: !1358, size: 64, offset: 3200)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1910, file: !1350, line: 1139, baseType: !1215, size: 8, offset: 3264)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1910, file: !1350, line: 1140, baseType: !1215, size: 8, offset: 3272)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1910, file: !1350, line: 1141, baseType: !1215, size: 8, offset: 3280)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1910, file: !1350, line: 1142, baseType: !1215, size: 8, offset: 3288)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1910, file: !1350, line: 1143, baseType: !1215, size: 8, offset: 3296)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1910, file: !1350, line: 1144, baseType: !2052, size: 64, offset: 3304)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 64, elements: !1778)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1910, file: !1350, line: 1145, baseType: !2052, size: 64, offset: 3368)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1910, file: !1350, line: 1148, baseType: !1215, size: 8, offset: 3432)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1910, file: !1350, line: 1149, baseType: !1215, size: 8, offset: 3440)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1910, file: !1350, line: 1152, baseType: !1215, size: 8, offset: 3448)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1910, file: !1350, line: 1152, baseType: !1215, size: 8, offset: 3456)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1910, file: !1350, line: 1153, baseType: !1215, size: 8, offset: 3464)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1910, file: !1350, line: 1154, baseType: !1246, size: 16, offset: 3472)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1910, file: !1350, line: 1154, baseType: !1246, size: 16, offset: 3488)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1910, file: !1350, line: 1155, baseType: !1246, size: 16, offset: 3504)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1910, file: !1350, line: 1155, baseType: !1246, size: 16, offset: 3520)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1910, file: !1350, line: 1156, baseType: !1215, size: 8, offset: 3536)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1910, file: !1350, line: 1157, baseType: !1215, size: 8, offset: 3544)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1910, file: !1350, line: 1159, baseType: !1215, size: 8, offset: 3552)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1910, file: !1350, line: 1160, baseType: !1215, size: 8, offset: 3560)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1910, file: !1350, line: 1161, baseType: !1215, size: 8, offset: 3568)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1910, file: !1350, line: 1162, baseType: !1215, size: 8, offset: 3576)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1910, file: !1350, line: 1165, baseType: !1200, size: 32, offset: 3584)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1910, file: !1350, line: 1166, baseType: !1200, size: 32, offset: 3616)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1910, file: !1350, line: 1167, baseType: !1200, size: 32, offset: 3648)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1910, file: !1350, line: 1168, baseType: !1200, size: 32, offset: 3680)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1910, file: !1350, line: 1171, baseType: !1246, size: 16, offset: 3712)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1910, file: !1350, line: 1171, baseType: !1246, size: 16, offset: 3728)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1910, file: !1350, line: 1172, baseType: !1200, size: 32, offset: 3744)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1910, file: !1350, line: 1173, baseType: !1199, size: 32, offset: 3776)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1910, file: !1350, line: 1174, baseType: !1199, size: 32, offset: 3808)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1910, file: !1350, line: 1177, baseType: !2079, size: 1024, offset: 3840)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1350, line: 963, size: 1024, elements: !2080)
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2104, !2105}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2079, file: !1350, line: 965, baseType: !1200, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2079, file: !1350, line: 968, baseType: !1199, size: 32, offset: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2079, file: !1350, line: 971, baseType: !1199, size: 32, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2079, file: !1350, line: 974, baseType: !1199, size: 32, offset: 96)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2079, file: !1350, line: 977, baseType: !1380, size: 96, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2079, file: !1350, line: 979, baseType: !1380, size: 96, offset: 224)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2079, file: !1350, line: 982, baseType: !1200, size: 32, offset: 320)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2079, file: !1350, line: 987, baseType: !1412, size: 64, offset: 352)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2079, file: !1350, line: 989, baseType: !1199, size: 32, offset: 416)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2079, file: !1350, line: 994, baseType: !1200, size: 32, offset: 448)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2079, file: !1350, line: 995, baseType: !1200, size: 32, offset: 480)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2079, file: !1350, line: 997, baseType: !1215, size: 8, offset: 512)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2079, file: !1350, line: 998, baseType: !1828, size: 56, offset: 520)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2079, file: !1350, line: 1000, baseType: !1199, size: 32, offset: 576)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2079, file: !1350, line: 1003, baseType: !1412, size: 64, offset: 608)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2079, file: !1350, line: 1006, baseType: !1200, size: 32, offset: 672)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2079, file: !1350, line: 1009, baseType: !1199, size: 32, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2079, file: !1350, line: 1012, baseType: !1412, size: 64, offset: 736)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2079, file: !1350, line: 1015, baseType: !1412, size: 64, offset: 800)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2079, file: !1350, line: 1018, baseType: !1200, size: 32, offset: 864)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2079, file: !1350, line: 1019, baseType: !2102, size: 64, offset: 896)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1350, line: 63, flags: DIFlagFwdDecl)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2079, file: !1350, line: 1023, baseType: !1199, size: 32, offset: 960)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2079, file: !1350, line: 1024, baseType: !1200, size: 32, offset: 992)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1910, file: !1350, line: 1179, baseType: !2107, size: 320, offset: 4864)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1350, line: 1043, size: 320, elements: !2108)
!2108 = !{!2109, !2110, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2107, file: !1350, line: 1044, baseType: !1215, size: 8)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2107, file: !1350, line: 1045, baseType: !2111, size: 16, offset: 8)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 16, elements: !1413)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2107, file: !1350, line: 1048, baseType: !1215, size: 8, offset: 24)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2107, file: !1350, line: 1049, baseType: !1199, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2107, file: !1350, line: 1049, baseType: !1199, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2107, file: !1350, line: 1052, baseType: !1199, size: 32, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2107, file: !1350, line: 1052, baseType: !1199, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2107, file: !1350, line: 1053, baseType: !1215, size: 8, offset: 160)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2107, file: !1350, line: 1054, baseType: !1899, size: 24, offset: 168)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2107, file: !1350, line: 1057, baseType: !1199, size: 32, offset: 192)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2107, file: !1350, line: 1057, baseType: !1199, size: 32, offset: 224)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2107, file: !1350, line: 1060, baseType: !1199, size: 32, offset: 256)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2107, file: !1350, line: 1060, baseType: !1199, size: 32, offset: 288)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1349, file: !1350, line: 1247, baseType: !2124, size: 64, offset: 2176)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1350, line: 60, flags: DIFlagFwdDecl)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1349, file: !1350, line: 1251, baseType: !2127, size: 31872, offset: 2240)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1350, line: 403, size: 31872, elements: !2128)
!2128 = !{!2129, !2204, !2224, !2233, !2253, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2418, !2419, !2420, !2424, !2440, !2441}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2127, file: !1350, line: 404, baseType: !2130, size: 1984)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1350, line: 259, size: 1984, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2149, !2199}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2130, file: !1350, line: 260, baseType: !1215, size: 8)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2130, file: !1350, line: 263, baseType: !1215, size: 8, offset: 8)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2130, file: !1350, line: 266, baseType: !1215, size: 8, offset: 16)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2130, file: !1350, line: 267, baseType: !1215, size: 8, offset: 24)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2130, file: !1350, line: 269, baseType: !1215, size: 8, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2130, file: !1350, line: 270, baseType: !1215, size: 8, offset: 40)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2130, file: !1350, line: 276, baseType: !1215, size: 8, offset: 48)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2130, file: !1350, line: 279, baseType: !1215, size: 8, offset: 56)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2130, file: !1350, line: 280, baseType: !1246, size: 16, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2130, file: !1350, line: 280, baseType: !1246, size: 16, offset: 80)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2130, file: !1350, line: 281, baseType: !1199, size: 32, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2130, file: !1350, line: 284, baseType: !1215, size: 8, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2130, file: !1350, line: 285, baseType: !1215, size: 8, offset: 136)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2130, file: !1350, line: 287, baseType: !2146, size: 48, offset: 144)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 48, elements: !2147)
!2147 = !{!2148}
!2148 = !DISubrange(count: 6)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2130, file: !1350, line: 290, baseType: !2150, size: 1280, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1582, line: 174, baseType: !2151)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1582, line: 166, size: 1280, elements: !2152)
!2152 = !{!2153, !2154, !2155, !2156, !2157, !2158, !2159, !2198}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2151, file: !1582, line: 167, baseType: !1200, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2151, file: !1582, line: 167, baseType: !1200, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2151, file: !1582, line: 168, baseType: !1231, size: 512, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2151, file: !1582, line: 169, baseType: !1231, size: 512, offset: 576)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2151, file: !1582, line: 170, baseType: !1199, size: 32, offset: 1088)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2151, file: !1582, line: 171, baseType: !1199, size: 32, offset: 1120)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2151, file: !1582, line: 172, baseType: !2160, size: 64, offset: 1152)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1582, line: 72, size: 3072, elements: !2162)
!2162 = !{!2163, !2164, !2165, !2166, !2167, !2168, !2169, !2194, !2195, !2196, !2197}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2161, file: !1582, line: 73, baseType: !1200, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2161, file: !1582, line: 73, baseType: !1200, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2161, file: !1582, line: 74, baseType: !1200, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2161, file: !1582, line: 75, baseType: !1200, size: 32, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2161, file: !1582, line: 77, baseType: !1430, size: 128, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2161, file: !1582, line: 77, baseType: !1430, size: 128, offset: 256)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2161, file: !1582, line: 79, baseType: !2170, size: 2304, offset: 384)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 2304, elements: !1822)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1582, line: 67, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1582, line: 55, size: 576, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2190, !2191, !2192, !2193}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2172, file: !1582, line: 56, baseType: !1246, size: 16)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2172, file: !1582, line: 56, baseType: !1246, size: 16, offset: 16)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2172, file: !1582, line: 58, baseType: !1199, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2172, file: !1582, line: 59, baseType: !1199, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2172, file: !1582, line: 59, baseType: !1199, size: 32, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2172, file: !1582, line: 60, baseType: !1412, size: 64, offset: 128)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2172, file: !1582, line: 60, baseType: !1412, size: 64, offset: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2172, file: !1582, line: 61, baseType: !2182, size: 64, offset: 256)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1582, line: 47, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1582, line: 44, size: 96, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2184, file: !1582, line: 45, baseType: !1199, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2184, file: !1582, line: 45, baseType: !1199, size: 32, offset: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2184, file: !1582, line: 46, baseType: !1246, size: 16, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2184, file: !1582, line: 46, baseType: !1246, size: 16, offset: 80)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2172, file: !1582, line: 62, baseType: !2182, size: 64, offset: 320)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2172, file: !1582, line: 64, baseType: !2182, size: 64, offset: 384)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2172, file: !1582, line: 65, baseType: !1412, size: 64, offset: 448)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2172, file: !1582, line: 66, baseType: !1412, size: 64, offset: 512)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2161, file: !1582, line: 80, baseType: !1380, size: 96, offset: 2688)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2161, file: !1582, line: 80, baseType: !1380, size: 96, offset: 2784)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2161, file: !1582, line: 81, baseType: !1380, size: 96, offset: 2880)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2161, file: !1582, line: 83, baseType: !1380, size: 96, offset: 2976)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2151, file: !1582, line: 173, baseType: !1195, size: 64, offset: 1216)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2130, file: !1350, line: 291, baseType: !2200, size: 512, offset: 1472)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1582, line: 178, baseType: !2201)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1582, line: 176, size: 512, elements: !2202)
!2202 = !{!2203}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2201, file: !1582, line: 177, baseType: !1231, size: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2127, file: !1350, line: 406, baseType: !2205, size: 64, offset: 1984)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1350, line: 80, size: 1472, elements: !2207)
!2207 = !{!2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2206, file: !1350, line: 81, baseType: !1195, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2206, file: !1350, line: 82, baseType: !1195, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2206, file: !1350, line: 83, baseType: !7, size: 32, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2206, file: !1350, line: 84, baseType: !7, size: 32, offset: 160)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2206, file: !1350, line: 86, baseType: !7, size: 32, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2206, file: !1350, line: 87, baseType: !7, size: 32, offset: 224)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2206, file: !1350, line: 88, baseType: !7, size: 32, offset: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2206, file: !1350, line: 89, baseType: !7, size: 32, offset: 288)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2206, file: !1350, line: 90, baseType: !7, size: 32, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2206, file: !1350, line: 91, baseType: !7, size: 32, offset: 352)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2206, file: !1350, line: 92, baseType: !7, size: 32, offset: 384)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2206, file: !1350, line: 93, baseType: !7, size: 32, offset: 416)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2206, file: !1350, line: 95, baseType: !2221, size: 1024, offset: 448)
!2221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 1024, elements: !2222)
!2222 = !{!2223}
!2223 = !DISubrange(count: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2127, file: !1350, line: 407, baseType: !2225, size: 64, offset: 2048)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1350, line: 98, size: 1216, elements: !2227)
!2227 = !{!2228, !2229, !2230, !2231, !2232}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2226, file: !1350, line: 100, baseType: !1195, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2226, file: !1350, line: 101, baseType: !1195, size: 64, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2226, file: !1350, line: 103, baseType: !7, size: 32, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2226, file: !1350, line: 104, baseType: !7, size: 32, offset: 160)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2226, file: !1350, line: 106, baseType: !2221, size: 1024, offset: 192)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2127, file: !1350, line: 408, baseType: !2234, size: 512, offset: 2112)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1350, line: 109, size: 512, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2234, file: !1350, line: 111, baseType: !1200, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2234, file: !1350, line: 112, baseType: !1200, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2234, file: !1350, line: 115, baseType: !1200, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2234, file: !1350, line: 116, baseType: !1200, size: 32, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2234, file: !1350, line: 117, baseType: !1200, size: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2234, file: !1350, line: 118, baseType: !1200, size: 32, offset: 160)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2234, file: !1350, line: 119, baseType: !1200, size: 32, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2234, file: !1350, line: 120, baseType: !1200, size: 32, offset: 224)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2234, file: !1350, line: 121, baseType: !1200, size: 32, offset: 256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2234, file: !1350, line: 122, baseType: !1200, size: 32, offset: 288)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2234, file: !1350, line: 125, baseType: !1200, size: 32, offset: 320)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2234, file: !1350, line: 126, baseType: !1200, size: 32, offset: 352)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2234, file: !1350, line: 127, baseType: !1246, size: 16, offset: 384)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2234, file: !1350, line: 128, baseType: !1246, size: 16, offset: 400)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2234, file: !1350, line: 129, baseType: !1200, size: 32, offset: 416)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2234, file: !1350, line: 130, baseType: !1200, size: 32, offset: 448)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2234, file: !1350, line: 131, baseType: !1200, size: 32, offset: 480)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2127, file: !1350, line: 409, baseType: !2254, size: 576, offset: 2624)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1350, line: 134, size: 576, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2254, file: !1350, line: 135, baseType: !1200, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2254, file: !1350, line: 136, baseType: !1200, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2254, file: !1350, line: 137, baseType: !1200, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2254, file: !1350, line: 138, baseType: !1200, size: 32, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2254, file: !1350, line: 139, baseType: !1200, size: 32, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2254, file: !1350, line: 140, baseType: !1200, size: 32, offset: 160)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2254, file: !1350, line: 141, baseType: !1200, size: 32, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2254, file: !1350, line: 142, baseType: !1200, size: 32, offset: 224)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2254, file: !1350, line: 143, baseType: !1199, size: 32, offset: 256)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2254, file: !1350, line: 144, baseType: !1200, size: 32, offset: 288)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2254, file: !1350, line: 145, baseType: !1200, size: 32, offset: 320)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2254, file: !1350, line: 147, baseType: !1200, size: 32, offset: 352)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2254, file: !1350, line: 148, baseType: !1200, size: 32, offset: 384)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2254, file: !1350, line: 149, baseType: !1200, size: 32, offset: 416)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2254, file: !1350, line: 150, baseType: !1200, size: 32, offset: 448)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2254, file: !1350, line: 151, baseType: !1200, size: 32, offset: 480)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2254, file: !1350, line: 152, baseType: !1235, size: 64, offset: 512)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2127, file: !1350, line: 411, baseType: !1200, size: 32, offset: 3200)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2127, file: !1350, line: 411, baseType: !1200, size: 32, offset: 3232)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2127, file: !1350, line: 411, baseType: !1200, size: 32, offset: 3264)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2127, file: !1350, line: 412, baseType: !1199, size: 32, offset: 3296)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2127, file: !1350, line: 413, baseType: !1200, size: 32, offset: 3328)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2127, file: !1350, line: 413, baseType: !1200, size: 32, offset: 3360)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2127, file: !1350, line: 415, baseType: !1200, size: 32, offset: 3392)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2127, file: !1350, line: 415, baseType: !1200, size: 32, offset: 3424)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2127, file: !1350, line: 416, baseType: !1246, size: 16, offset: 3456)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2127, file: !1350, line: 416, baseType: !1246, size: 16, offset: 3472)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2127, file: !1350, line: 418, baseType: !1199, size: 32, offset: 3488)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2127, file: !1350, line: 418, baseType: !1199, size: 32, offset: 3520)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2127, file: !1350, line: 421, baseType: !1199, size: 32, offset: 3552)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2127, file: !1350, line: 421, baseType: !1199, size: 32, offset: 3584)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2127, file: !1350, line: 421, baseType: !1199, size: 32, offset: 3616)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2127, file: !1350, line: 425, baseType: !1246, size: 16, offset: 3648)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2127, file: !1350, line: 425, baseType: !1246, size: 16, offset: 3664)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2127, file: !1350, line: 425, baseType: !1246, size: 16, offset: 3680)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2127, file: !1350, line: 426, baseType: !1246, size: 16, offset: 3696)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2127, file: !1350, line: 428, baseType: !1246, size: 16, offset: 3712)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2127, file: !1350, line: 428, baseType: !1246, size: 16, offset: 3728)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2127, file: !1350, line: 431, baseType: !1200, size: 32, offset: 3744)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2127, file: !1350, line: 433, baseType: !1246, size: 16, offset: 3776)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2127, file: !1350, line: 435, baseType: !1246, size: 16, offset: 3792)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2127, file: !1350, line: 437, baseType: !1246, size: 16, offset: 3808)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2127, file: !1350, line: 439, baseType: !1246, size: 16, offset: 3824)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2127, file: !1350, line: 441, baseType: !1246, size: 16, offset: 3840)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2127, file: !1350, line: 443, baseType: !1246, size: 16, offset: 3856)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2127, file: !1350, line: 449, baseType: !1200, size: 32, offset: 3872)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2127, file: !1350, line: 453, baseType: !1200, size: 32, offset: 3904)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2127, file: !1350, line: 458, baseType: !1246, size: 16, offset: 3936)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2127, file: !1350, line: 462, baseType: !1246, size: 16, offset: 3952)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2127, file: !1350, line: 467, baseType: !1200, size: 32, offset: 3968)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2127, file: !1350, line: 467, baseType: !1200, size: 32, offset: 4000)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2127, file: !1350, line: 469, baseType: !1246, size: 16, offset: 4032)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2127, file: !1350, line: 469, baseType: !1246, size: 16, offset: 4048)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2127, file: !1350, line: 469, baseType: !1246, size: 16, offset: 4064)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2127, file: !1350, line: 469, baseType: !1246, size: 16, offset: 4080)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2127, file: !1350, line: 474, baseType: !1246, size: 16, offset: 4096)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2127, file: !1350, line: 475, baseType: !1215, size: 8, offset: 4112)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2127, file: !1350, line: 476, baseType: !1215, size: 8, offset: 4120)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2127, file: !1350, line: 481, baseType: !1200, size: 32, offset: 4128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2127, file: !1350, line: 486, baseType: !1200, size: 32, offset: 4160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2127, file: !1350, line: 491, baseType: !1200, size: 32, offset: 4192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2127, file: !1350, line: 496, baseType: !1246, size: 16, offset: 4224)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2127, file: !1350, line: 498, baseType: !1246, size: 16, offset: 4240)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2127, file: !1350, line: 501, baseType: !1246, size: 16, offset: 4256)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2127, file: !1350, line: 502, baseType: !1246, size: 16, offset: 4272)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2127, file: !1350, line: 508, baseType: !1246, size: 16, offset: 4288)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2127, file: !1350, line: 513, baseType: !1246, size: 16, offset: 4304)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2127, file: !1350, line: 515, baseType: !1246, size: 16, offset: 4320)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2127, file: !1350, line: 515, baseType: !1246, size: 16, offset: 4336)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2127, file: !1350, line: 519, baseType: !1430, size: 128, offset: 4352)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2127, file: !1350, line: 519, baseType: !1430, size: 128, offset: 4480)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2127, file: !1350, line: 520, baseType: !2328, size: 128, offset: 4608)
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1431, line: 89, baseType: !2329)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1431, line: 86, size: 128, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2329, file: !1431, line: 87, baseType: !1200, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2329, file: !1431, line: 87, baseType: !1200, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2329, file: !1431, line: 88, baseType: !1200, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2329, file: !1431, line: 88, baseType: !1200, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2127, file: !1350, line: 523, baseType: !1255, size: 128, offset: 4736)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2127, file: !1350, line: 524, baseType: !1246, size: 16, offset: 4864)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2127, file: !1350, line: 527, baseType: !1246, size: 16, offset: 4880)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2127, file: !1350, line: 532, baseType: !1199, size: 32, offset: 4896)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2127, file: !1350, line: 532, baseType: !1199, size: 32, offset: 4928)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2127, file: !1350, line: 534, baseType: !1199, size: 32, offset: 4960)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2127, file: !1350, line: 538, baseType: !1199, size: 32, offset: 4992)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2127, file: !1350, line: 542, baseType: !1200, size: 32, offset: 5024)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2127, file: !1350, line: 545, baseType: !1199, size: 32, offset: 5056)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2127, file: !1350, line: 545, baseType: !1199, size: 32, offset: 5088)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2127, file: !1350, line: 545, baseType: !1199, size: 32, offset: 5120)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2127, file: !1350, line: 548, baseType: !1199, size: 32, offset: 5152)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2127, file: !1350, line: 551, baseType: !1246, size: 16, offset: 5184)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2127, file: !1350, line: 551, baseType: !1246, size: 16, offset: 5200)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2127, file: !1350, line: 551, baseType: !1246, size: 16, offset: 5216)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2127, file: !1350, line: 551, baseType: !1246, size: 16, offset: 5232)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2127, file: !1350, line: 552, baseType: !1246, size: 16, offset: 5248)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2127, file: !1350, line: 552, baseType: !1246, size: 16, offset: 5264)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2127, file: !1350, line: 553, baseType: !1199, size: 32, offset: 5280)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2127, file: !1350, line: 553, baseType: !1199, size: 32, offset: 5312)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2127, file: !1350, line: 554, baseType: !1246, size: 16, offset: 5344)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2127, file: !1350, line: 554, baseType: !1246, size: 16, offset: 5360)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2127, file: !1350, line: 555, baseType: !1199, size: 32, offset: 5376)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2127, file: !1350, line: 555, baseType: !1199, size: 32, offset: 5408)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2127, file: !1350, line: 558, baseType: !1326, size: 8192, offset: 5440)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2127, file: !1350, line: 561, baseType: !1200, size: 32, offset: 13632)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2127, file: !1350, line: 562, baseType: !1246, size: 16, offset: 13664)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2127, file: !1350, line: 562, baseType: !1246, size: 16, offset: 13680)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2127, file: !1350, line: 565, baseType: !1536, size: 6144, offset: 13696)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2127, file: !1350, line: 568, baseType: !1821, size: 128, offset: 19840)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2127, file: !1350, line: 569, baseType: !1821, size: 128, offset: 19968)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2127, file: !1350, line: 572, baseType: !1215, size: 8, offset: 20096)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2127, file: !1350, line: 573, baseType: !1215, size: 8, offset: 20104)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2127, file: !1350, line: 574, baseType: !1215, size: 8, offset: 20112)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2127, file: !1350, line: 575, baseType: !1977, size: 40, offset: 20120)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2127, file: !1350, line: 578, baseType: !1200, size: 32, offset: 20160)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2127, file: !1350, line: 579, baseType: !1246, size: 16, offset: 20192)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2127, file: !1350, line: 580, baseType: !1246, size: 16, offset: 20208)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2127, file: !1350, line: 581, baseType: !1199, size: 32, offset: 20224)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2127, file: !1350, line: 582, baseType: !1199, size: 32, offset: 20256)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2127, file: !1350, line: 585, baseType: !1246, size: 16, offset: 20288)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2127, file: !1350, line: 585, baseType: !1246, size: 16, offset: 20304)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2127, file: !1350, line: 586, baseType: !1199, size: 32, offset: 20320)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2127, file: !1350, line: 589, baseType: !1246, size: 16, offset: 20352)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2127, file: !1350, line: 589, baseType: !1246, size: 16, offset: 20368)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2127, file: !1350, line: 590, baseType: !1200, size: 32, offset: 20384)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2127, file: !1350, line: 593, baseType: !1246, size: 16, offset: 20416)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2127, file: !1350, line: 593, baseType: !1246, size: 16, offset: 20432)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2127, file: !1350, line: 594, baseType: !1246, size: 16, offset: 20448)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2127, file: !1350, line: 594, baseType: !1246, size: 16, offset: 20464)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2127, file: !1350, line: 595, baseType: !1199, size: 32, offset: 20480)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2127, file: !1350, line: 596, baseType: !1199, size: 32, offset: 20512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2127, file: !1350, line: 597, baseType: !2388, size: 64, offset: 20544)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2390, line: 50, size: 1664, elements: !2391)
!2390 = !DIFile(filename: "blender/source/blender/makesdna/DNA_text_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2389, file: !2390, line: 51, baseType: !1308, size: 960)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2389, file: !2390, line: 53, baseType: !1460, size: 64, offset: 960)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2389, file: !2390, line: 55, baseType: !1200, size: 32, offset: 1024)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "nlines", scope: !2389, file: !2390, line: 55, baseType: !1200, size: 32, offset: 1056)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2389, file: !2390, line: 57, baseType: !1255, size: 128, offset: 1088)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "curl", scope: !2389, file: !2390, line: 58, baseType: !2398, size: 64, offset: 1216)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextLine", file: !2390, line: 48, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextLine", file: !2390, line: 42, size: 320, elements: !2401)
!2401 = !{!2402, !2404, !2405, !2406, !2407, !2408}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2400, file: !2390, line: 43, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2400, file: !2390, line: 43, baseType: !2403, size: 64, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2400, file: !2390, line: 45, baseType: !1460, size: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2400, file: !2390, line: 46, baseType: !1460, size: 64, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2400, file: !2390, line: 47, baseType: !1200, size: 32, offset: 256)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "blen", scope: !2400, file: !2390, line: 47, baseType: !1200, size: 32, offset: 288)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !2389, file: !2390, line: 58, baseType: !2398, size: 64, offset: 1280)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "curc", scope: !2389, file: !2390, line: 59, baseType: !1200, size: 32, offset: 1344)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !2389, file: !2390, line: 59, baseType: !1200, size: 32, offset: 1376)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "undo_buf", scope: !2389, file: !2390, line: 61, baseType: !1460, size: 64, offset: 1408)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "undo_pos", scope: !2389, file: !2390, line: 62, baseType: !1200, size: 32, offset: 1472)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "undo_len", scope: !2389, file: !2390, line: 62, baseType: !1200, size: 32, offset: 1504)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "compiled", scope: !2389, file: !2390, line: 64, baseType: !1195, size: 64, offset: 1536)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2389, file: !2390, line: 65, baseType: !2417, size: 64, offset: 1600)
!2417 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2127, file: !1350, line: 600, baseType: !1200, size: 32, offset: 20608)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2127, file: !1350, line: 601, baseType: !1199, size: 32, offset: 20640)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2127, file: !1350, line: 604, baseType: !2421, size: 256, offset: 20672)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 256, elements: !2422)
!2422 = !{!2423}
!2423 = !DISubrange(count: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2127, file: !1350, line: 607, baseType: !2425, size: 10880, offset: 20928)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1350, line: 364, size: 10880, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2425, file: !1350, line: 365, baseType: !2130, size: 1984)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2425, file: !1350, line: 367, baseType: !1326, size: 8192, offset: 1984)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2425, file: !1350, line: 369, baseType: !1246, size: 16, offset: 10176)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2425, file: !1350, line: 369, baseType: !1246, size: 16, offset: 10192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2425, file: !1350, line: 370, baseType: !1246, size: 16, offset: 10208)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2425, file: !1350, line: 370, baseType: !1246, size: 16, offset: 10224)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2425, file: !1350, line: 372, baseType: !1199, size: 32, offset: 10240)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2425, file: !1350, line: 373, baseType: !1199, size: 32, offset: 10272)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2425, file: !1350, line: 375, baseType: !1899, size: 24, offset: 10304)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2425, file: !1350, line: 376, baseType: !1215, size: 8, offset: 10328)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2425, file: !1350, line: 378, baseType: !1215, size: 8, offset: 10336)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2425, file: !1350, line: 379, baseType: !1899, size: 24, offset: 10344)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2425, file: !1350, line: 381, baseType: !1231, size: 512, offset: 10368)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2127, file: !1350, line: 609, baseType: !1200, size: 32, offset: 31808)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2127, file: !1350, line: 610, baseType: !1200, size: 32, offset: 31840)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1349, file: !1350, line: 1252, baseType: !2443, size: 256, offset: 34112)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1350, line: 158, size: 256, elements: !2444)
!2444 = !{!2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2443, file: !1350, line: 159, baseType: !1200, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2443, file: !1350, line: 160, baseType: !1199, size: 32, offset: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2443, file: !1350, line: 161, baseType: !1199, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2443, file: !1350, line: 162, baseType: !1199, size: 32, offset: 96)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2443, file: !1350, line: 163, baseType: !1200, size: 32, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2443, file: !1350, line: 164, baseType: !1246, size: 16, offset: 160)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2443, file: !1350, line: 165, baseType: !1246, size: 16, offset: 176)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2443, file: !1350, line: 166, baseType: !1199, size: 32, offset: 192)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2443, file: !1350, line: 167, baseType: !1199, size: 32, offset: 224)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1349, file: !1350, line: 1254, baseType: !1255, size: 128, offset: 34368)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1349, file: !1350, line: 1255, baseType: !1255, size: 128, offset: 34496)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1349, file: !1350, line: 1257, baseType: !1195, size: 64, offset: 34624)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1349, file: !1350, line: 1258, baseType: !1195, size: 64, offset: 34688)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1349, file: !1350, line: 1259, baseType: !1195, size: 64, offset: 34752)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1349, file: !1350, line: 1260, baseType: !1195, size: 64, offset: 34816)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1349, file: !1350, line: 1262, baseType: !1195, size: 64, offset: 34880)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1349, file: !1350, line: 1265, baseType: !2462, size: 64, offset: 34944)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1350, line: 1265, flags: DIFlagFwdDecl)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1349, file: !1350, line: 1266, baseType: !1246, size: 16, offset: 35008)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1349, file: !1350, line: 1267, baseType: !1246, size: 16, offset: 35024)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1349, file: !1350, line: 1270, baseType: !1200, size: 32, offset: 35040)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1349, file: !1350, line: 1271, baseType: !1255, size: 128, offset: 35072)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1349, file: !1350, line: 1274, baseType: !2469, size: 128, offset: 35200)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1350, line: 650, size: 128, elements: !2470)
!2470 = !{!2471, !2472, !2473, !2474, !2475}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2469, file: !1350, line: 651, baseType: !1380, size: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2469, file: !1350, line: 652, baseType: !1215, size: 8, offset: 96)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2469, file: !1350, line: 652, baseType: !1215, size: 8, offset: 104)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2469, file: !1350, line: 652, baseType: !1215, size: 8, offset: 112)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2469, file: !1350, line: 652, baseType: !1215, size: 8, offset: 120)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1349, file: !1350, line: 1275, baseType: !2477, size: 1472, offset: 35328)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1350, line: 676, size: 1472, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2491, !2501, !2502, !2503, !2504, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2477, file: !1350, line: 679, baseType: !2469, size: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2477, file: !1350, line: 680, baseType: !1246, size: 16, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2477, file: !1350, line: 680, baseType: !1246, size: 16, offset: 144)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2477, file: !1350, line: 680, baseType: !1246, size: 16, offset: 160)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2477, file: !1350, line: 680, baseType: !1246, size: 16, offset: 176)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2477, file: !1350, line: 681, baseType: !1246, size: 16, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2477, file: !1350, line: 681, baseType: !1246, size: 16, offset: 208)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2477, file: !1350, line: 681, baseType: !1246, size: 16, offset: 224)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2477, file: !1350, line: 681, baseType: !1246, size: 16, offset: 240)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2477, file: !1350, line: 682, baseType: !1246, size: 16, offset: 256)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2477, file: !1350, line: 682, baseType: !2490, size: 48, offset: 272)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1246, size: 48, elements: !1381)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2477, file: !1350, line: 685, baseType: !2492, size: 192, offset: 320)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1350, line: 633, size: 192, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2492, file: !1350, line: 634, baseType: !1246, size: 16)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2492, file: !1350, line: 634, baseType: !1246, size: 16, offset: 16)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2492, file: !1350, line: 635, baseType: !1246, size: 16, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2492, file: !1350, line: 635, baseType: !1246, size: 16, offset: 48)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2492, file: !1350, line: 636, baseType: !1199, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2492, file: !1350, line: 636, baseType: !1199, size: 32, offset: 96)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2492, file: !1350, line: 637, baseType: !2388, size: 64, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2477, file: !1350, line: 686, baseType: !1246, size: 16, offset: 512)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2477, file: !1350, line: 686, baseType: !1246, size: 16, offset: 528)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2477, file: !1350, line: 687, baseType: !1199, size: 32, offset: 544)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2477, file: !1350, line: 688, baseType: !2505, size: 448, offset: 576)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1350, line: 674, baseType: !2506)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1350, line: 659, size: 448, elements: !2507)
!2507 = !{!2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2506, file: !1350, line: 660, baseType: !1199, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2506, file: !1350, line: 661, baseType: !1199, size: 32, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2506, file: !1350, line: 662, baseType: !1199, size: 32, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2506, file: !1350, line: 663, baseType: !1199, size: 32, offset: 96)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2506, file: !1350, line: 664, baseType: !1199, size: 32, offset: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2506, file: !1350, line: 665, baseType: !1199, size: 32, offset: 160)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2506, file: !1350, line: 666, baseType: !1199, size: 32, offset: 192)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2506, file: !1350, line: 667, baseType: !1199, size: 32, offset: 224)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2506, file: !1350, line: 668, baseType: !1199, size: 32, offset: 256)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2506, file: !1350, line: 669, baseType: !1199, size: 32, offset: 288)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2506, file: !1350, line: 670, baseType: !1200, size: 32, offset: 320)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2506, file: !1350, line: 671, baseType: !1199, size: 32, offset: 352)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2506, file: !1350, line: 672, baseType: !1199, size: 32, offset: 384)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2506, file: !1350, line: 673, baseType: !1246, size: 16, offset: 416)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2506, file: !1350, line: 673, baseType: !1246, size: 16, offset: 432)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2477, file: !1350, line: 692, baseType: !1199, size: 32, offset: 1024)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2477, file: !1350, line: 697, baseType: !1199, size: 32, offset: 1056)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2477, file: !1350, line: 703, baseType: !1200, size: 32, offset: 1088)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2477, file: !1350, line: 704, baseType: !1246, size: 16, offset: 1120)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2477, file: !1350, line: 704, baseType: !1246, size: 16, offset: 1136)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2477, file: !1350, line: 705, baseType: !1246, size: 16, offset: 1152)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2477, file: !1350, line: 706, baseType: !1246, size: 16, offset: 1168)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2477, file: !1350, line: 707, baseType: !1246, size: 16, offset: 1184)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2477, file: !1350, line: 708, baseType: !1246, size: 16, offset: 1200)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2477, file: !1350, line: 709, baseType: !1246, size: 16, offset: 1216)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2477, file: !1350, line: 709, baseType: !1246, size: 16, offset: 1232)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2477, file: !1350, line: 709, baseType: !1246, size: 16, offset: 1248)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2477, file: !1350, line: 709, baseType: !1246, size: 16, offset: 1264)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2477, file: !1350, line: 710, baseType: !1246, size: 16, offset: 1280)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2477, file: !1350, line: 711, baseType: !1246, size: 16, offset: 1296)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2477, file: !1350, line: 712, baseType: !1199, size: 32, offset: 1312)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2477, file: !1350, line: 713, baseType: !1199, size: 32, offset: 1344)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2477, file: !1350, line: 713, baseType: !1199, size: 32, offset: 1376)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2477, file: !1350, line: 713, baseType: !1199, size: 32, offset: 1408)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2477, file: !1350, line: 713, baseType: !1199, size: 32, offset: 1440)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1349, file: !1350, line: 1278, baseType: !2544, size: 64, offset: 36800)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1350, line: 1197, size: 64, elements: !2545)
!2545 = !{!2546, !2547, !2548, !2549}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2544, file: !1350, line: 1199, baseType: !1199, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2544, file: !1350, line: 1200, baseType: !1215, size: 8, offset: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2544, file: !1350, line: 1201, baseType: !1215, size: 8, offset: 40)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2544, file: !1350, line: 1202, baseType: !1246, size: 16, offset: 48)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1349, file: !1350, line: 1281, baseType: !1408, size: 64, offset: 36864)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1349, file: !1350, line: 1284, baseType: !2552, size: 192, offset: 36928)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1350, line: 1208, size: 192, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2552, file: !1350, line: 1209, baseType: !1380, size: 96)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2552, file: !1350, line: 1210, baseType: !1200, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2552, file: !1350, line: 1210, baseType: !1200, size: 32, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2552, file: !1350, line: 1210, baseType: !1200, size: 32, offset: 160)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1349, file: !1350, line: 1287, baseType: !1592, size: 64, offset: 37120)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1349, file: !1350, line: 1289, baseType: !2560, size: 64, offset: 37184)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2561, line: 27, baseType: !2562)
!2561 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2563, line: 45, baseType: !1198)
!2563 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1349, file: !1350, line: 1290, baseType: !2560, size: 64, offset: 37248)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1349, file: !1350, line: 1293, baseType: !2150, size: 1280, offset: 37312)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1349, file: !1350, line: 1294, baseType: !2200, size: 512, offset: 38592)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1349, file: !1350, line: 1295, baseType: !1581, size: 512, offset: 39104)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1349, file: !1350, line: 1298, baseType: !2569, size: 64, offset: 39616)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1350, line: 1298, flags: DIFlagFwdDecl)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1305, file: !119, line: 58, baseType: !1348, size: 64, offset: 1536)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1305, file: !119, line: 60, baseType: !1200, size: 32, offset: 1600)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1305, file: !119, line: 61, baseType: !1200, size: 32, offset: 1632)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1305, file: !119, line: 63, baseType: !1246, size: 16, offset: 1664)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1305, file: !119, line: 64, baseType: !1246, size: 16, offset: 1680)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1305, file: !119, line: 65, baseType: !1246, size: 16, offset: 1696)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1305, file: !119, line: 66, baseType: !1246, size: 16, offset: 1712)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1305, file: !119, line: 67, baseType: !1246, size: 16, offset: 1728)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1305, file: !119, line: 68, baseType: !1246, size: 16, offset: 1744)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1305, file: !119, line: 69, baseType: !1246, size: 16, offset: 1760)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1305, file: !119, line: 70, baseType: !1246, size: 16, offset: 1776)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1305, file: !119, line: 71, baseType: !1246, size: 16, offset: 1792)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1305, file: !119, line: 73, baseType: !1246, size: 16, offset: 1808)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1305, file: !119, line: 74, baseType: !1246, size: 16, offset: 1824)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1305, file: !119, line: 76, baseType: !1246, size: 16, offset: 1840)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1305, file: !119, line: 78, baseType: !1291, size: 64, offset: 1856)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1305, file: !119, line: 79, baseType: !1195, size: 64, offset: 1920)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1298, file: !99, line: 175, baseType: !1304, size: 64, offset: 256)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1298, file: !99, line: 176, baseType: !1231, size: 512, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1298, file: !99, line: 178, baseType: !1246, size: 16, offset: 832)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1298, file: !99, line: 178, baseType: !1246, size: 16, offset: 848)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1298, file: !99, line: 178, baseType: !1246, size: 16, offset: 864)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1298, file: !99, line: 178, baseType: !1246, size: 16, offset: 880)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1298, file: !99, line: 179, baseType: !1246, size: 16, offset: 896)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1298, file: !99, line: 180, baseType: !1246, size: 16, offset: 912)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1298, file: !99, line: 181, baseType: !1246, size: 16, offset: 928)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1298, file: !99, line: 182, baseType: !1246, size: 16, offset: 944)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1298, file: !99, line: 183, baseType: !1246, size: 16, offset: 960)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1298, file: !99, line: 184, baseType: !1246, size: 16, offset: 976)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1298, file: !99, line: 185, baseType: !1246, size: 16, offset: 992)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1298, file: !99, line: 186, baseType: !1246, size: 16, offset: 1008)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1298, file: !99, line: 188, baseType: !1200, size: 32, offset: 1024)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1298, file: !99, line: 190, baseType: !1246, size: 16, offset: 1056)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1298, file: !99, line: 191, baseType: !1246, size: 16, offset: 1072)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1298, file: !99, line: 194, baseType: !2606, size: 64, offset: 1088)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1209, line: 421, size: 960, elements: !2608)
!2608 = !{!2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2641, !2642, !2643, !2644}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2607, file: !1209, line: 422, baseType: !2606, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2607, file: !1209, line: 422, baseType: !2606, size: 64, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2607, file: !1209, line: 424, baseType: !1246, size: 16, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2607, file: !1209, line: 425, baseType: !1246, size: 16, offset: 144)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2607, file: !1209, line: 426, baseType: !1200, size: 32, offset: 160)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2607, file: !1209, line: 426, baseType: !1200, size: 32, offset: 192)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2607, file: !1209, line: 427, baseType: !1601, size: 64, offset: 224)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2607, file: !1209, line: 428, baseType: !2146, size: 48, offset: 288)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2607, file: !1209, line: 431, baseType: !1215, size: 8, offset: 336)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2607, file: !1209, line: 432, baseType: !1215, size: 8, offset: 344)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2607, file: !1209, line: 435, baseType: !1246, size: 16, offset: 352)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2607, file: !1209, line: 436, baseType: !1246, size: 16, offset: 368)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2607, file: !1209, line: 437, baseType: !1200, size: 32, offset: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2607, file: !1209, line: 437, baseType: !1200, size: 32, offset: 416)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2607, file: !1209, line: 438, baseType: !2417, size: 64, offset: 448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2607, file: !1209, line: 439, baseType: !1200, size: 32, offset: 512)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2607, file: !1209, line: 439, baseType: !1200, size: 32, offset: 544)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2607, file: !1209, line: 442, baseType: !1246, size: 16, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2607, file: !1209, line: 442, baseType: !1246, size: 16, offset: 592)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2607, file: !1209, line: 442, baseType: !1246, size: 16, offset: 608)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2607, file: !1209, line: 442, baseType: !1246, size: 16, offset: 624)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2607, file: !1209, line: 443, baseType: !1246, size: 16, offset: 640)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2607, file: !1209, line: 446, baseType: !1246, size: 16, offset: 656)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2607, file: !1209, line: 449, baseType: !1213, size: 64, offset: 704)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2607, file: !1209, line: 452, baseType: !2634, size: 64, offset: 768)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1209, line: 463, size: 128, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2635, file: !1209, line: 464, baseType: !1200, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2635, file: !1209, line: 465, baseType: !1199, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2635, file: !1209, line: 466, baseType: !1199, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2635, file: !1209, line: 467, baseType: !1199, size: 32, offset: 96)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2607, file: !1209, line: 455, baseType: !1246, size: 16, offset: 832)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2607, file: !1209, line: 456, baseType: !1246, size: 16, offset: 848)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2607, file: !1209, line: 457, baseType: !1200, size: 32, offset: 864)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2607, file: !1209, line: 458, baseType: !1195, size: 64, offset: 896)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1298, file: !99, line: 196, baseType: !2646, size: 64, offset: 1152)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !99, line: 55, flags: DIFlagFwdDecl)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1298, file: !99, line: 198, baseType: !2649, size: 64, offset: 1216)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1209, line: 398, size: 448, elements: !2651)
!2651 = !{!2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2650, file: !1209, line: 399, baseType: !2649, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2650, file: !1209, line: 399, baseType: !2649, size: 64, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2650, file: !1209, line: 400, baseType: !1200, size: 32, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2650, file: !1209, line: 401, baseType: !1200, size: 32, offset: 160)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2650, file: !1209, line: 402, baseType: !1200, size: 32, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2650, file: !1209, line: 403, baseType: !1200, size: 32, offset: 224)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2650, file: !1209, line: 404, baseType: !1200, size: 32, offset: 256)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2650, file: !1209, line: 405, baseType: !1200, size: 32, offset: 288)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2650, file: !1209, line: 407, baseType: !1195, size: 64, offset: 320)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2650, file: !1209, line: 414, baseType: !1195, size: 64, offset: 384)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1298, file: !99, line: 200, baseType: !1200, size: 32, offset: 1280)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1298, file: !99, line: 200, baseType: !1200, size: 32, offset: 1312)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1298, file: !99, line: 201, baseType: !1195, size: 64, offset: 1344)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1298, file: !99, line: 203, baseType: !1255, size: 128, offset: 1408)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1298, file: !99, line: 204, baseType: !1255, size: 128, offset: 1536)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1298, file: !99, line: 205, baseType: !1255, size: 128, offset: 1664)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1298, file: !99, line: 207, baseType: !1255, size: 128, offset: 1792)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1298, file: !99, line: 208, baseType: !1255, size: 128, offset: 1920)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1292, file: !1209, line: 495, baseType: !2417, size: 64, offset: 192)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1292, file: !1209, line: 496, baseType: !1200, size: 32, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1292, file: !1209, line: 497, baseType: !1195, size: 64, offset: 320)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1292, file: !1209, line: 499, baseType: !2417, size: 64, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1292, file: !1209, line: 500, baseType: !2417, size: 64, offset: 448)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1292, file: !1209, line: 502, baseType: !2417, size: 64, offset: 512)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1292, file: !1209, line: 503, baseType: !2417, size: 64, offset: 576)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1292, file: !1209, line: 504, baseType: !2417, size: 64, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1292, file: !1209, line: 505, baseType: !1200, size: 32, offset: 704)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !1226, file: !99, line: 343, baseType: !1255, size: 128, offset: 1024)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !1226, file: !99, line: 344, baseType: !1225, size: 64, offset: 1152)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1226, file: !99, line: 345, baseType: !2682, size: 64, offset: 1216)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !99, line: 61, flags: DIFlagFwdDecl)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1226, file: !99, line: 346, baseType: !1246, size: 16, offset: 1280)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1226, file: !99, line: 346, baseType: !2490, size: 48, offset: 1296)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1210, file: !1209, line: 524, baseType: !2687, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!1930, !1223, !1225}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !1210, file: !1209, line: 530, baseType: !2691, size: 64, offset: 384)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!1200, !1223, !1225, !2694}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2607)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !1210, file: !1209, line: 531, baseType: !2697, size: 64, offset: 448)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !1223, !1225}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !1210, file: !1209, line: 532, baseType: !2691, size: 64, offset: 512)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1210, file: !1209, line: 536, baseType: !2702, size: 64, offset: 576)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!1200, !1223}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !1210, file: !1209, line: 539, baseType: !2697, size: 64, offset: 640)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1210, file: !1209, line: 542, baseType: !1278, size: 64, offset: 704)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !1210, file: !1209, line: 545, baseType: !1241, size: 64, offset: 768)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1210, file: !1209, line: 549, baseType: !2709, size: 64, offset: 832)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !59, line: 333, baseType: !2711)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !59, line: 39, flags: DIFlagFwdDecl)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !1210, file: !1209, line: 552, baseType: !1255, size: 128, offset: 896)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !1210, file: !1209, line: 555, baseType: !2714, size: 64, offset: 1024)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !99, line: 281, size: 1088, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2715, file: !99, line: 282, baseType: !2714, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2715, file: !99, line: 282, baseType: !2714, size: 64, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2715, file: !99, line: 284, baseType: !1255, size: 128, offset: 128)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !2715, file: !99, line: 285, baseType: !1255, size: 128, offset: 256)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2715, file: !99, line: 287, baseType: !1231, size: 512, offset: 384)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2715, file: !99, line: 288, baseType: !1246, size: 16, offset: 896)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2715, file: !99, line: 289, baseType: !1246, size: 16, offset: 912)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2715, file: !99, line: 291, baseType: !1246, size: 16, offset: 928)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !2715, file: !99, line: 292, baseType: !1246, size: 16, offset: 944)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2715, file: !99, line: 295, baseType: !2702, size: 64, offset: 960)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !2715, file: !99, line: 296, baseType: !1195, size: 64, offset: 1024)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !1210, file: !1209, line: 559, baseType: !1195, size: 64, offset: 1088)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !1210, file: !1209, line: 560, baseType: !2730, size: 64, offset: 1152)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!1200, !1223, !1266}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1210, file: !1209, line: 563, baseType: !2734, size: 256, offset: 1216)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !59, line: 436, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !59, line: 430, size: 256, elements: !2736)
!2736 = !{!2737, !2738, !2741, !2757}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2735, file: !59, line: 431, baseType: !1195, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !2735, file: !59, line: 432, baseType: !2739, size: 64, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !59, line: 417, baseType: !1279)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2735, file: !59, line: 433, baseType: !2742, size: 64, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !59, line: 408, baseType: !2743)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!1200, !1223, !1270, !2746, !2748}
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !59, line: 38, flags: DIFlagFwdDecl)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !59, line: 348, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !59, line: 337, size: 256, elements: !2751)
!2751 = !{!2752, !2753, !2754, !2755, !2756}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2750, file: !59, line: 339, baseType: !1195, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2750, file: !59, line: 342, baseType: !2746, size: 64, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !2750, file: !59, line: 345, baseType: !1200, size: 32, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !2750, file: !59, line: 347, baseType: !1200, size: 32, offset: 160)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !2750, file: !59, line: 347, baseType: !1200, size: 32, offset: 192)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2735, file: !59, line: 434, baseType: !2758, size: 64, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !59, line: 409, baseType: !1466)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1210, file: !1209, line: 566, baseType: !1246, size: 16, offset: 1472)
!2760 = !{}
!2761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2762, size: 960, elements: !1381)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !59, line: 308, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !59, line: 302, size: 320, elements: !2764)
!2764 = !{!2765, !2766, !2767, !2768, !2769}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2763, file: !59, line: 303, baseType: !1200, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2763, file: !59, line: 304, baseType: !1213, size: 64, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2763, file: !59, line: 305, baseType: !1200, size: 32, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2763, file: !59, line: 306, baseType: !1213, size: 64, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2763, file: !59, line: 307, baseType: !1213, size: 64, offset: 256)
!2770 = !DIGlobalVariableExpression(var: !2771, expr: !DIExpression())
!2771 = distinct !DIGlobalVariable(name: "move_type_items", scope: !2, file: !3, line: 1386, type: !2772, isLocal: true, isDefinition: true)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2762, size: 4160, elements: !2773)
!2773 = !{!2774}
!2774 = !DISubrange(count: 13)
!2775 = !DIGlobalVariableExpression(var: !2776, expr: !DIExpression())
!2776 = distinct !DIGlobalVariable(name: "delete_type_items", scope: !2, file: !3, line: 2008, type: !2777, isLocal: true, isDefinition: true)
!2777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2762, size: 1600, elements: !1978)
!2778 = !DIGlobalVariableExpression(var: !2779, expr: !DIExpression())
!2779 = distinct !DIGlobalVariable(name: "jump_to", scope: !2780, file: !3, line: 2806, type: !1200, isLocal: true, isDefinition: true)
!2780 = distinct !DISubprogram(name: "text_line_number_invoke", scope: !3, file: !3, line: 2799, type: !2781, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!1200, !2783, !2785, !2787}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1360, line: 69, baseType: !1224)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !99, line: 348, baseType: !1226)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2789)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !1209, line: 460, baseType: !2607)
!2790 = !DIGlobalVariableExpression(var: !2791, expr: !DIExpression())
!2791 = distinct !DIGlobalVariable(name: "last_jump", scope: !2780, file: !3, line: 2807, type: !2417, isLocal: true, isDefinition: true)
!2792 = !DIGlobalVariableExpression(var: !2793, expr: !DIExpression())
!2793 = distinct !DIGlobalVariable(name: "resolution_items", scope: !2, file: !3, line: 3109, type: !2777, isLocal: true, isDefinition: true)
!2794 = !{i32 7, !"Dwarf Version", i32 4}
!2795 = !{i32 2, !"Debug Info Version", i32 3}
!2796 = !{i32 1, !"wchar_size", i32 4}
!2797 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2798 = distinct !DISubprogram(name: "text_space_edit_poll", scope: !3, file: !3, line: 103, type: !2799, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!1200, !2783}
!2801 = !DILocalVariable(name: "C", arg: 1, scope: !2798, file: !3, line: 103, type: !2783)
!2802 = !DILocation(line: 103, column: 36, scope: !2798)
!2803 = !DILocalVariable(name: "st", scope: !2798, file: !3, line: 105, type: !2804)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceText", file: !6, line: 856, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceText", file: !6, line: 818, size: 5440, elements: !2807)
!2807 = !{!2808, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2852, !2853}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2806, file: !6, line: 819, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !6, line: 91, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !6, line: 85, size: 448, elements: !2812)
!2812 = !{!2813, !2815, !2816, !2817, !2818, !2819}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2811, file: !6, line: 86, baseType: !2814, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2811, file: !6, line: 86, baseType: !2814, size: 64, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2811, file: !6, line: 87, baseType: !1255, size: 128, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2811, file: !6, line: 88, baseType: !1200, size: 32, offset: 256)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2811, file: !6, line: 89, baseType: !1199, size: 32, offset: 288)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2811, file: !6, line: 90, baseType: !2820, size: 128, offset: 320)
!2820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1246, size: 128, elements: !1778)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2806, file: !6, line: 819, baseType: !2809, size: 64, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2806, file: !6, line: 820, baseType: !1255, size: 128, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2806, file: !6, line: 821, baseType: !1200, size: 32, offset: 256)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2806, file: !6, line: 822, baseType: !1199, size: 32, offset: 288)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2806, file: !6, line: 823, baseType: !2820, size: 128, offset: 320)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2806, file: !6, line: 825, baseType: !2388, size: 64, offset: 448)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2806, file: !6, line: 827, baseType: !1200, size: 32, offset: 512)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "viewlines", scope: !2806, file: !6, line: 827, baseType: !1200, size: 32, offset: 544)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2806, file: !6, line: 828, baseType: !1246, size: 16, offset: 576)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !2806, file: !6, line: 828, baseType: !1246, size: 16, offset: 592)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "lheight", scope: !2806, file: !6, line: 830, baseType: !1246, size: 16, offset: 608)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "cwidth", scope: !2806, file: !6, line: 831, baseType: !1215, size: 8, offset: 624)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "linenrs_tot", scope: !2806, file: !6, line: 831, baseType: !1215, size: 8, offset: 632)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2806, file: !6, line: 832, baseType: !1200, size: 32, offset: 640)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "showlinenrs", scope: !2806, file: !6, line: 833, baseType: !1200, size: 32, offset: 672)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "tabnumber", scope: !2806, file: !6, line: 834, baseType: !1200, size: 32, offset: 704)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "showsyntax", scope: !2806, file: !6, line: 836, baseType: !1246, size: 16, offset: 736)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "line_hlight", scope: !2806, file: !6, line: 837, baseType: !1246, size: 16, offset: 752)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite", scope: !2806, file: !6, line: 838, baseType: !1246, size: 16, offset: 768)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "live_edit", scope: !2806, file: !6, line: 839, baseType: !1246, size: 16, offset: 784)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "pix_per_line", scope: !2806, file: !6, line: 840, baseType: !1199, size: 32, offset: 800)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "txtscroll", scope: !2806, file: !6, line: 842, baseType: !2329, size: 128, offset: 832)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "txtbar", scope: !2806, file: !6, line: 842, baseType: !2329, size: 128, offset: 960)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "wordwrap", scope: !2806, file: !6, line: 844, baseType: !1200, size: 32, offset: 1088)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "doplugins", scope: !2806, file: !6, line: 844, baseType: !1200, size: 32, offset: 1120)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "findstr", scope: !2806, file: !6, line: 846, baseType: !1530, size: 2048, offset: 1152)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "replacestr", scope: !2806, file: !6, line: 847, baseType: !1530, size: 2048, offset: 3200)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "margin_column", scope: !2806, file: !6, line: 849, baseType: !1246, size: 16, offset: 5248)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "lheight_dpi", scope: !2806, file: !6, line: 850, baseType: !1246, size: 16, offset: 5264)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2806, file: !6, line: 851, baseType: !2851, size: 32, offset: 5280)
!2851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 32, elements: !1822)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "drawcache", scope: !2806, file: !6, line: 853, baseType: !1195, size: 64, offset: 5312)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_accum", scope: !2806, file: !6, line: 855, baseType: !1412, size: 64, offset: 5376)
!2854 = !DILocation(line: 105, column: 13, scope: !2798)
!2855 = !DILocation(line: 105, column: 36, scope: !2798)
!2856 = !DILocation(line: 105, column: 18, scope: !2798)
!2857 = !DILocalVariable(name: "text", scope: !2798, file: !3, line: 106, type: !2858)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "Text", file: !2390, line: 66, baseType: !2389)
!2860 = !DILocation(line: 106, column: 8, scope: !2798)
!2861 = !DILocation(line: 106, column: 34, scope: !2798)
!2862 = !DILocation(line: 106, column: 15, scope: !2798)
!2863 = !DILocation(line: 108, column: 7, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 108, column: 6)
!2865 = !DILocation(line: 108, column: 10, scope: !2864)
!2866 = !DILocation(line: 108, column: 14, scope: !2864)
!2867 = !DILocation(line: 108, column: 6, scope: !2798)
!2868 = !DILocation(line: 109, column: 3, scope: !2864)
!2869 = !DILocation(line: 111, column: 6, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 111, column: 6)
!2871 = !DILocation(line: 111, column: 12, scope: !2870)
!2872 = !DILocation(line: 111, column: 15, scope: !2870)
!2873 = !DILocation(line: 111, column: 6, scope: !2798)
!2874 = !DILocation(line: 113, column: 3, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 111, column: 20)
!2876 = !DILocation(line: 116, column: 2, scope: !2798)
!2877 = !DILocation(line: 117, column: 1, scope: !2798)
!2878 = distinct !DISubprogram(name: "text_update_line_edited", scope: !3, file: !3, line: 141, type: !2879, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{null, !2398}
!2881 = !DILocalVariable(name: "line", arg: 1, scope: !2878, file: !3, line: 141, type: !2398)
!2882 = !DILocation(line: 141, column: 40, scope: !2878)
!2883 = !DILocation(line: 143, column: 7, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 143, column: 6)
!2885 = !DILocation(line: 143, column: 6, scope: !2878)
!2886 = !DILocation(line: 144, column: 3, scope: !2884)
!2887 = !DILocation(line: 147, column: 6, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 147, column: 6)
!2889 = !DILocation(line: 147, column: 12, scope: !2888)
!2890 = !DILocation(line: 147, column: 6, scope: !2878)
!2891 = !DILocation(line: 148, column: 3, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 147, column: 20)
!2893 = !DILocation(line: 148, column: 13, scope: !2892)
!2894 = !DILocation(line: 148, column: 19, scope: !2892)
!2895 = !DILocation(line: 149, column: 3, scope: !2892)
!2896 = !DILocation(line: 149, column: 9, scope: !2892)
!2897 = !DILocation(line: 149, column: 16, scope: !2892)
!2898 = !DILocation(line: 150, column: 2, scope: !2892)
!2899 = !DILocation(line: 151, column: 1, scope: !2878)
!2900 = distinct !DISubprogram(name: "text_update_edited", scope: !3, file: !3, line: 153, type: !2901, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{null, !2858}
!2903 = !DILocalVariable(name: "text", arg: 1, scope: !2900, file: !3, line: 153, type: !2858)
!2904 = !DILocation(line: 153, column: 31, scope: !2900)
!2905 = !DILocalVariable(name: "line", scope: !2900, file: !3, line: 155, type: !2398)
!2906 = !DILocation(line: 155, column: 12, scope: !2900)
!2907 = !DILocation(line: 157, column: 14, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2900, file: !3, line: 157, column: 2)
!2909 = !DILocation(line: 157, column: 20, scope: !2908)
!2910 = !DILocation(line: 157, column: 26, scope: !2908)
!2911 = !DILocation(line: 157, column: 12, scope: !2908)
!2912 = !DILocation(line: 157, column: 7, scope: !2908)
!2913 = !DILocation(line: 157, column: 33, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 157, column: 2)
!2915 = !DILocation(line: 157, column: 2, scope: !2908)
!2916 = !DILocation(line: 158, column: 27, scope: !2914)
!2917 = !DILocation(line: 158, column: 3, scope: !2914)
!2918 = !DILocation(line: 157, column: 46, scope: !2914)
!2919 = !DILocation(line: 157, column: 52, scope: !2914)
!2920 = !DILocation(line: 157, column: 44, scope: !2914)
!2921 = !DILocation(line: 157, column: 2, scope: !2914)
!2922 = distinct !{!2922, !2915, !2923}
!2923 = !DILocation(line: 158, column: 31, scope: !2908)
!2924 = !DILocation(line: 159, column: 1, scope: !2900)
!2925 = distinct !DISubprogram(name: "TEXT_OT_new", scope: !3, file: !3, line: 195, type: !1205, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!2926 = !DILocalVariable(name: "ot", arg: 1, scope: !2925, file: !3, line: 195, type: !1207)
!2927 = !DILocation(line: 195, column: 34, scope: !2925)
!2928 = !DILocation(line: 198, column: 2, scope: !2925)
!2929 = !DILocation(line: 198, column: 6, scope: !2925)
!2930 = !DILocation(line: 198, column: 11, scope: !2925)
!2931 = !DILocation(line: 199, column: 2, scope: !2925)
!2932 = !DILocation(line: 199, column: 6, scope: !2925)
!2933 = !DILocation(line: 199, column: 13, scope: !2925)
!2934 = !DILocation(line: 200, column: 2, scope: !2925)
!2935 = !DILocation(line: 200, column: 6, scope: !2925)
!2936 = !DILocation(line: 200, column: 18, scope: !2925)
!2937 = !DILocation(line: 203, column: 2, scope: !2925)
!2938 = !DILocation(line: 203, column: 6, scope: !2925)
!2939 = !DILocation(line: 203, column: 11, scope: !2925)
!2940 = !DILocation(line: 204, column: 2, scope: !2925)
!2941 = !DILocation(line: 204, column: 6, scope: !2925)
!2942 = !DILocation(line: 204, column: 11, scope: !2925)
!2943 = !DILocation(line: 207, column: 2, scope: !2925)
!2944 = !DILocation(line: 207, column: 6, scope: !2925)
!2945 = !DILocation(line: 207, column: 11, scope: !2925)
!2946 = !DILocation(line: 208, column: 1, scope: !2925)
!2947 = distinct !DISubprogram(name: "text_new_exec", scope: !3, file: !3, line: 163, type: !2948, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!1200, !2783, !2785}
!2950 = !DILocalVariable(name: "C", arg: 1, scope: !2947, file: !3, line: 163, type: !2783)
!2951 = !DILocation(line: 163, column: 36, scope: !2947)
!2952 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !2947, file: !3, line: 163, type: !2785)
!2953 = !DILocation(line: 163, column: 51, scope: !2947)
!2954 = !DILocalVariable(name: "st", scope: !2947, file: !3, line: 165, type: !2804)
!2955 = !DILocation(line: 165, column: 13, scope: !2947)
!2956 = !DILocation(line: 165, column: 36, scope: !2947)
!2957 = !DILocation(line: 165, column: 18, scope: !2947)
!2958 = !DILocalVariable(name: "bmain", scope: !2947, file: !3, line: 166, type: !2959)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2961, line: 104, baseType: !2962)
!2961 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2961, line: 53, size: 15232, elements: !2963)
!2963 = !{!2964, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3017}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2962, file: !2961, line: 54, baseType: !2965, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2962, file: !2961, line: 54, baseType: !2965, size: 64, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2962, file: !2961, line: 55, baseType: !1326, size: 8192, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2962, file: !2961, line: 56, baseType: !1246, size: 16, offset: 8320)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2962, file: !2961, line: 56, baseType: !1246, size: 16, offset: 8336)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2962, file: !2961, line: 57, baseType: !1246, size: 16, offset: 8352)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2962, file: !2961, line: 57, baseType: !1246, size: 16, offset: 8368)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2962, file: !2961, line: 58, baseType: !2560, size: 64, offset: 8384)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2962, file: !2961, line: 59, baseType: !2974, size: 128, offset: 8448)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 128, elements: !2975)
!2975 = !{!2976}
!2976 = !DISubrange(count: 16)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2962, file: !2961, line: 60, baseType: !1246, size: 16, offset: 8576)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2962, file: !2961, line: 62, baseType: !1316, size: 64, offset: 8640)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2962, file: !2961, line: 63, baseType: !1255, size: 128, offset: 8704)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2962, file: !2961, line: 64, baseType: !1255, size: 128, offset: 8832)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2962, file: !2961, line: 65, baseType: !1255, size: 128, offset: 8960)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2962, file: !2961, line: 66, baseType: !1255, size: 128, offset: 9088)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2962, file: !2961, line: 67, baseType: !1255, size: 128, offset: 9216)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2962, file: !2961, line: 68, baseType: !1255, size: 128, offset: 9344)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2962, file: !2961, line: 69, baseType: !1255, size: 128, offset: 9472)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2962, file: !2961, line: 70, baseType: !1255, size: 128, offset: 9600)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2962, file: !2961, line: 71, baseType: !1255, size: 128, offset: 9728)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2962, file: !2961, line: 72, baseType: !1255, size: 128, offset: 9856)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2962, file: !2961, line: 73, baseType: !1255, size: 128, offset: 9984)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2962, file: !2961, line: 74, baseType: !1255, size: 128, offset: 10112)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2962, file: !2961, line: 75, baseType: !1255, size: 128, offset: 10240)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2962, file: !2961, line: 76, baseType: !1255, size: 128, offset: 10368)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2962, file: !2961, line: 77, baseType: !1255, size: 128, offset: 10496)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2962, file: !2961, line: 78, baseType: !1255, size: 128, offset: 10624)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2962, file: !2961, line: 79, baseType: !1255, size: 128, offset: 10752)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2962, file: !2961, line: 80, baseType: !1255, size: 128, offset: 10880)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2962, file: !2961, line: 81, baseType: !1255, size: 128, offset: 11008)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2962, file: !2961, line: 82, baseType: !1255, size: 128, offset: 11136)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2962, file: !2961, line: 83, baseType: !1255, size: 128, offset: 11264)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2962, file: !2961, line: 84, baseType: !1255, size: 128, offset: 11392)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2962, file: !2961, line: 85, baseType: !1255, size: 128, offset: 11520)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2962, file: !2961, line: 86, baseType: !1255, size: 128, offset: 11648)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2962, file: !2961, line: 87, baseType: !1255, size: 128, offset: 11776)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2962, file: !2961, line: 88, baseType: !1255, size: 128, offset: 11904)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2962, file: !2961, line: 89, baseType: !1255, size: 128, offset: 12032)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2962, file: !2961, line: 90, baseType: !1255, size: 128, offset: 12160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2962, file: !2961, line: 91, baseType: !1255, size: 128, offset: 12288)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2962, file: !2961, line: 92, baseType: !1255, size: 128, offset: 12416)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2962, file: !2961, line: 93, baseType: !1255, size: 128, offset: 12544)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2962, file: !2961, line: 94, baseType: !1255, size: 128, offset: 12672)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2962, file: !2961, line: 95, baseType: !1255, size: 128, offset: 12800)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2962, file: !2961, line: 96, baseType: !1255, size: 128, offset: 12928)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2962, file: !2961, line: 98, baseType: !1530, size: 2048, offset: 13056)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2962, file: !2961, line: 101, baseType: !3015, size: 64, offset: 15104)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2961, line: 49, flags: DIFlagFwdDecl)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2962, file: !2961, line: 103, baseType: !3018, size: 64, offset: 15168)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2961, line: 51, flags: DIFlagFwdDecl)
!3020 = !DILocation(line: 166, column: 8, scope: !2947)
!3021 = !DILocation(line: 166, column: 30, scope: !2947)
!3022 = !DILocation(line: 166, column: 16, scope: !2947)
!3023 = !DILocalVariable(name: "text", scope: !2947, file: !3, line: 167, type: !2858)
!3024 = !DILocation(line: 167, column: 8, scope: !2947)
!3025 = !DILocalVariable(name: "ptr", scope: !2947, file: !3, line: 168, type: !3026)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !59, line: 62, baseType: !1271)
!3027 = !DILocation(line: 168, column: 13, scope: !2947)
!3028 = !DILocalVariable(name: "idptr", scope: !2947, file: !3, line: 168, type: !3026)
!3029 = !DILocation(line: 168, column: 18, scope: !2947)
!3030 = !DILocalVariable(name: "prop", scope: !2947, file: !3, line: 169, type: !2709)
!3031 = !DILocation(line: 169, column: 15, scope: !2947)
!3032 = !DILocation(line: 171, column: 22, scope: !2947)
!3033 = !DILocation(line: 171, column: 9, scope: !2947)
!3034 = !DILocation(line: 171, column: 7, scope: !2947)
!3035 = !DILocation(line: 174, column: 22, scope: !2947)
!3036 = !DILocation(line: 174, column: 2, scope: !2947)
!3037 = !DILocation(line: 176, column: 6, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 176, column: 6)
!3039 = !DILocation(line: 176, column: 6, scope: !2947)
!3040 = !DILocation(line: 177, column: 26, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 176, column: 12)
!3042 = !DILocation(line: 177, column: 32, scope: !3041)
!3043 = !DILocation(line: 177, column: 3, scope: !3041)
!3044 = !DILocation(line: 178, column: 34, scope: !3041)
!3045 = !DILocation(line: 178, column: 3, scope: !3041)
!3046 = !DILocation(line: 179, column: 23, scope: !3041)
!3047 = !DILocation(line: 179, column: 32, scope: !3041)
!3048 = !DILocation(line: 179, column: 3, scope: !3041)
!3049 = !DILocation(line: 180, column: 2, scope: !3041)
!3050 = !DILocation(line: 181, column: 11, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 181, column: 11)
!3052 = !DILocation(line: 181, column: 11, scope: !3038)
!3053 = !DILocation(line: 182, column: 14, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 181, column: 15)
!3055 = !DILocation(line: 182, column: 3, scope: !3054)
!3056 = !DILocation(line: 182, column: 7, scope: !3054)
!3057 = !DILocation(line: 182, column: 12, scope: !3054)
!3058 = !DILocation(line: 183, column: 3, scope: !3054)
!3059 = !DILocation(line: 183, column: 7, scope: !3054)
!3060 = !DILocation(line: 183, column: 12, scope: !3054)
!3061 = !DILocation(line: 184, column: 3, scope: !3054)
!3062 = !DILocation(line: 184, column: 7, scope: !3054)
!3063 = !DILocation(line: 184, column: 11, scope: !3054)
!3064 = !DILocation(line: 185, column: 3, scope: !3054)
!3065 = !DILocation(line: 185, column: 7, scope: !3054)
!3066 = !DILocation(line: 185, column: 23, scope: !3054)
!3067 = !DILocation(line: 186, column: 3, scope: !3054)
!3068 = !DILocation(line: 186, column: 7, scope: !3054)
!3069 = !DILocation(line: 186, column: 23, scope: !3054)
!3070 = !DILocation(line: 187, column: 29, scope: !3054)
!3071 = !DILocation(line: 187, column: 3, scope: !3054)
!3072 = !DILocation(line: 188, column: 2, scope: !3054)
!3073 = !DILocation(line: 190, column: 24, scope: !2947)
!3074 = !DILocation(line: 190, column: 47, scope: !2947)
!3075 = !DILocation(line: 190, column: 2, scope: !2947)
!3076 = !DILocation(line: 192, column: 2, scope: !2947)
!3077 = distinct !DISubprogram(name: "text_new_poll", scope: !3, file: !3, line: 83, type: !2799, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3078 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3077, file: !3, line: 83, type: !2783)
!3079 = !DILocation(line: 83, column: 36, scope: !3077)
!3080 = !DILocation(line: 85, column: 2, scope: !3077)
!3081 = distinct !DISubprogram(name: "TEXT_OT_open", scope: !3, file: !3, line: 286, type: !1205, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3082 = !DILocalVariable(name: "ot", arg: 1, scope: !3081, file: !3, line: 286, type: !1207)
!3083 = !DILocation(line: 286, column: 35, scope: !3081)
!3084 = !DILocation(line: 289, column: 2, scope: !3081)
!3085 = !DILocation(line: 289, column: 6, scope: !3081)
!3086 = !DILocation(line: 289, column: 11, scope: !3081)
!3087 = !DILocation(line: 290, column: 2, scope: !3081)
!3088 = !DILocation(line: 290, column: 6, scope: !3081)
!3089 = !DILocation(line: 290, column: 13, scope: !3081)
!3090 = !DILocation(line: 291, column: 2, scope: !3081)
!3091 = !DILocation(line: 291, column: 6, scope: !3081)
!3092 = !DILocation(line: 291, column: 18, scope: !3081)
!3093 = !DILocation(line: 294, column: 2, scope: !3081)
!3094 = !DILocation(line: 294, column: 6, scope: !3081)
!3095 = !DILocation(line: 294, column: 11, scope: !3081)
!3096 = !DILocation(line: 295, column: 2, scope: !3081)
!3097 = !DILocation(line: 295, column: 6, scope: !3081)
!3098 = !DILocation(line: 295, column: 13, scope: !3081)
!3099 = !DILocation(line: 296, column: 2, scope: !3081)
!3100 = !DILocation(line: 296, column: 6, scope: !3081)
!3101 = !DILocation(line: 296, column: 13, scope: !3081)
!3102 = !DILocation(line: 297, column: 2, scope: !3081)
!3103 = !DILocation(line: 297, column: 6, scope: !3081)
!3104 = !DILocation(line: 297, column: 11, scope: !3081)
!3105 = !DILocation(line: 300, column: 2, scope: !3081)
!3106 = !DILocation(line: 300, column: 6, scope: !3081)
!3107 = !DILocation(line: 300, column: 11, scope: !3081)
!3108 = !DILocation(line: 303, column: 33, scope: !3081)
!3109 = !DILocation(line: 303, column: 2, scope: !3081)
!3110 = !DILocation(line: 305, column: 18, scope: !3081)
!3111 = !DILocation(line: 305, column: 22, scope: !3081)
!3112 = !DILocation(line: 305, column: 2, scope: !3081)
!3113 = !DILocation(line: 306, column: 1, scope: !3081)
!3114 = distinct !DISubprogram(name: "text_open_exec", scope: !3, file: !3, line: 225, type: !2948, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3115 = !DILocalVariable(name: "C", arg: 1, scope: !3114, file: !3, line: 225, type: !2783)
!3116 = !DILocation(line: 225, column: 37, scope: !3114)
!3117 = !DILocalVariable(name: "op", arg: 2, scope: !3114, file: !3, line: 225, type: !2785)
!3118 = !DILocation(line: 225, column: 52, scope: !3114)
!3119 = !DILocalVariable(name: "st", scope: !3114, file: !3, line: 227, type: !2804)
!3120 = !DILocation(line: 227, column: 13, scope: !3114)
!3121 = !DILocation(line: 227, column: 36, scope: !3114)
!3122 = !DILocation(line: 227, column: 18, scope: !3114)
!3123 = !DILocalVariable(name: "bmain", scope: !3114, file: !3, line: 228, type: !2959)
!3124 = !DILocation(line: 228, column: 8, scope: !3114)
!3125 = !DILocation(line: 228, column: 30, scope: !3114)
!3126 = !DILocation(line: 228, column: 16, scope: !3114)
!3127 = !DILocalVariable(name: "text", scope: !3114, file: !3, line: 229, type: !2858)
!3128 = !DILocation(line: 229, column: 8, scope: !3114)
!3129 = !DILocalVariable(name: "pprop", scope: !3114, file: !3, line: 230, type: !3130)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyPointerRNA", file: !59, line: 67, baseType: !3132)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyPointerRNA", file: !59, line: 64, size: 256, elements: !3133)
!3133 = !{!3134, !3135}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3132, file: !59, line: 65, baseType: !3026, size: 192)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3132, file: !59, line: 66, baseType: !3136, size: 64, offset: 192)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!3137 = !DILocation(line: 230, column: 22, scope: !3114)
!3138 = !DILocalVariable(name: "idptr", scope: !3114, file: !3, line: 231, type: !3026)
!3139 = !DILocation(line: 231, column: 13, scope: !3114)
!3140 = !DILocalVariable(name: "str", scope: !3114, file: !3, line: 232, type: !1326)
!3141 = !DILocation(line: 232, column: 7, scope: !3114)
!3142 = !DILocalVariable(name: "internal", scope: !3114, file: !3, line: 233, type: !3143)
!3143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1930)
!3144 = !DILocation(line: 233, column: 13, scope: !3114)
!3145 = !DILocation(line: 233, column: 40, scope: !3114)
!3146 = !DILocation(line: 233, column: 44, scope: !3114)
!3147 = !DILocation(line: 233, column: 24, scope: !3114)
!3148 = !DILocation(line: 235, column: 17, scope: !3114)
!3149 = !DILocation(line: 235, column: 21, scope: !3114)
!3150 = !DILocation(line: 235, column: 38, scope: !3114)
!3151 = !DILocation(line: 235, column: 2, scope: !3114)
!3152 = !DILocation(line: 237, column: 26, scope: !3114)
!3153 = !DILocation(line: 237, column: 33, scope: !3114)
!3154 = !DILocation(line: 237, column: 40, scope: !3114)
!3155 = !DILocation(line: 237, column: 46, scope: !3114)
!3156 = !DILocation(line: 237, column: 38, scope: !3114)
!3157 = !DILocation(line: 237, column: 52, scope: !3114)
!3158 = !DILocation(line: 237, column: 9, scope: !3114)
!3159 = !DILocation(line: 237, column: 7, scope: !3114)
!3160 = !DILocation(line: 239, column: 7, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 239, column: 6)
!3162 = !DILocation(line: 239, column: 6, scope: !3114)
!3163 = !DILocation(line: 240, column: 7, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 240, column: 7)
!3165 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 239, column: 13)
!3166 = !DILocation(line: 240, column: 11, scope: !3164)
!3167 = !DILocation(line: 240, column: 7, scope: !3165)
!3168 = !DILocation(line: 240, column: 23, scope: !3164)
!3169 = !DILocation(line: 240, column: 33, scope: !3164)
!3170 = !DILocation(line: 240, column: 37, scope: !3164)
!3171 = !DILocation(line: 241, column: 3, scope: !3165)
!3172 = !DILocation(line: 244, column: 7, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 244, column: 6)
!3174 = !DILocation(line: 244, column: 11, scope: !3173)
!3175 = !DILocation(line: 244, column: 6, scope: !3114)
!3176 = !DILocation(line: 245, column: 18, scope: !3173)
!3177 = !DILocation(line: 245, column: 21, scope: !3173)
!3178 = !DILocation(line: 245, column: 3, scope: !3173)
!3179 = !DILocation(line: 248, column: 10, scope: !3114)
!3180 = !DILocation(line: 248, column: 14, scope: !3114)
!3181 = !DILocation(line: 248, column: 8, scope: !3114)
!3182 = !DILocation(line: 250, column: 6, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 250, column: 6)
!3184 = !DILocation(line: 250, column: 13, scope: !3183)
!3185 = !DILocation(line: 250, column: 6, scope: !3114)
!3186 = !DILocation(line: 251, column: 26, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 250, column: 19)
!3188 = !DILocation(line: 251, column: 32, scope: !3187)
!3189 = !DILocation(line: 251, column: 3, scope: !3187)
!3190 = !DILocation(line: 252, column: 29, scope: !3187)
!3191 = !DILocation(line: 252, column: 36, scope: !3187)
!3192 = !DILocation(line: 252, column: 41, scope: !3187)
!3193 = !DILocation(line: 252, column: 48, scope: !3187)
!3194 = !DILocation(line: 252, column: 3, scope: !3187)
!3195 = !DILocation(line: 253, column: 23, scope: !3187)
!3196 = !DILocation(line: 253, column: 27, scope: !3187)
!3197 = !DILocation(line: 253, column: 34, scope: !3187)
!3198 = !DILocation(line: 253, column: 39, scope: !3187)
!3199 = !DILocation(line: 253, column: 46, scope: !3187)
!3200 = !DILocation(line: 253, column: 3, scope: !3187)
!3201 = !DILocation(line: 254, column: 2, scope: !3187)
!3202 = !DILocation(line: 255, column: 11, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 255, column: 11)
!3204 = !DILocation(line: 255, column: 11, scope: !3183)
!3205 = !DILocation(line: 256, column: 14, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 255, column: 15)
!3207 = !DILocation(line: 256, column: 3, scope: !3206)
!3208 = !DILocation(line: 256, column: 7, scope: !3206)
!3209 = !DILocation(line: 256, column: 12, scope: !3206)
!3210 = !DILocation(line: 257, column: 3, scope: !3206)
!3211 = !DILocation(line: 257, column: 7, scope: !3206)
!3212 = !DILocation(line: 257, column: 12, scope: !3206)
!3213 = !DILocation(line: 258, column: 3, scope: !3206)
!3214 = !DILocation(line: 258, column: 7, scope: !3206)
!3215 = !DILocation(line: 258, column: 11, scope: !3206)
!3216 = !DILocation(line: 259, column: 3, scope: !3206)
!3217 = !DILocation(line: 259, column: 7, scope: !3206)
!3218 = !DILocation(line: 259, column: 23, scope: !3206)
!3219 = !DILocation(line: 260, column: 3, scope: !3206)
!3220 = !DILocation(line: 260, column: 7, scope: !3206)
!3221 = !DILocation(line: 260, column: 23, scope: !3206)
!3222 = !DILocation(line: 261, column: 2, scope: !3206)
!3223 = !DILocation(line: 263, column: 28, scope: !3114)
!3224 = !DILocation(line: 263, column: 2, scope: !3114)
!3225 = !DILocation(line: 264, column: 24, scope: !3114)
!3226 = !DILocation(line: 264, column: 47, scope: !3114)
!3227 = !DILocation(line: 264, column: 2, scope: !3114)
!3228 = !DILocation(line: 266, column: 2, scope: !3114)
!3229 = !DILocation(line: 266, column: 12, scope: !3114)
!3230 = !DILocation(line: 266, column: 16, scope: !3114)
!3231 = !DILocation(line: 268, column: 2, scope: !3114)
!3232 = !DILocation(line: 269, column: 1, scope: !3114)
!3233 = distinct !DISubprogram(name: "text_open_invoke", scope: !3, file: !3, line: 271, type: !2781, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3234 = !DILocalVariable(name: "C", arg: 1, scope: !3233, file: !3, line: 271, type: !2783)
!3235 = !DILocation(line: 271, column: 39, scope: !3233)
!3236 = !DILocalVariable(name: "op", arg: 2, scope: !3233, file: !3, line: 271, type: !2785)
!3237 = !DILocation(line: 271, column: 54, scope: !3233)
!3238 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !3233, file: !3, line: 271, type: !2787)
!3239 = !DILocation(line: 271, column: 73, scope: !3233)
!3240 = !DILocalVariable(name: "text", scope: !3233, file: !3, line: 273, type: !2858)
!3241 = !DILocation(line: 273, column: 8, scope: !3233)
!3242 = !DILocation(line: 273, column: 34, scope: !3233)
!3243 = !DILocation(line: 273, column: 15, scope: !3233)
!3244 = !DILocalVariable(name: "path", scope: !3233, file: !3, line: 274, type: !1213)
!3245 = !DILocation(line: 274, column: 14, scope: !3233)
!3246 = !DILocation(line: 274, column: 22, scope: !3233)
!3247 = !DILocation(line: 274, column: 27, scope: !3233)
!3248 = !DILocation(line: 274, column: 30, scope: !3233)
!3249 = !DILocation(line: 274, column: 36, scope: !3233)
!3250 = !DILocation(line: 274, column: 21, scope: !3233)
!3251 = !DILocation(line: 274, column: 44, scope: !3233)
!3252 = !DILocation(line: 274, column: 50, scope: !3233)
!3253 = !DILocation(line: 274, column: 59, scope: !3233)
!3254 = !DILocation(line: 274, column: 65, scope: !3233)
!3255 = !DILocation(line: 274, column: 57, scope: !3233)
!3256 = !DILocation(line: 276, column: 33, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 276, column: 6)
!3258 = !DILocation(line: 276, column: 37, scope: !3257)
!3259 = !DILocation(line: 276, column: 6, scope: !3257)
!3260 = !DILocation(line: 276, column: 6, scope: !3233)
!3261 = !DILocation(line: 277, column: 25, scope: !3257)
!3262 = !DILocation(line: 277, column: 28, scope: !3257)
!3263 = !DILocation(line: 277, column: 10, scope: !3257)
!3264 = !DILocation(line: 277, column: 3, scope: !3257)
!3265 = !DILocation(line: 279, column: 17, scope: !3233)
!3266 = !DILocation(line: 279, column: 20, scope: !3233)
!3267 = !DILocation(line: 279, column: 2, scope: !3233)
!3268 = !DILocation(line: 280, column: 17, scope: !3233)
!3269 = !DILocation(line: 280, column: 21, scope: !3233)
!3270 = !DILocation(line: 280, column: 38, scope: !3233)
!3271 = !DILocation(line: 280, column: 2, scope: !3233)
!3272 = !DILocation(line: 281, column: 26, scope: !3233)
!3273 = !DILocation(line: 281, column: 29, scope: !3233)
!3274 = !DILocation(line: 281, column: 2, scope: !3233)
!3275 = !DILocation(line: 283, column: 2, scope: !3233)
!3276 = !DILocation(line: 284, column: 1, scope: !3233)
!3277 = distinct !DISubprogram(name: "text_open_cancel", scope: !3, file: !3, line: 220, type: !3278, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{null, !2783, !2785}
!3280 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3277, file: !3, line: 220, type: !2783)
!3281 = !DILocation(line: 220, column: 40, scope: !3277)
!3282 = !DILocalVariable(name: "op", arg: 2, scope: !3277, file: !3, line: 220, type: !2785)
!3283 = !DILocation(line: 220, column: 63, scope: !3277)
!3284 = !DILocation(line: 222, column: 2, scope: !3277)
!3285 = !DILocation(line: 222, column: 12, scope: !3277)
!3286 = !DILocation(line: 222, column: 16, scope: !3277)
!3287 = !DILocation(line: 223, column: 1, scope: !3277)
!3288 = distinct !DISubprogram(name: "TEXT_OT_reload", scope: !3, file: !3, line: 345, type: !1205, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3289 = !DILocalVariable(name: "ot", arg: 1, scope: !3288, file: !3, line: 345, type: !1207)
!3290 = !DILocation(line: 345, column: 37, scope: !3288)
!3291 = !DILocation(line: 348, column: 2, scope: !3288)
!3292 = !DILocation(line: 348, column: 6, scope: !3288)
!3293 = !DILocation(line: 348, column: 11, scope: !3288)
!3294 = !DILocation(line: 349, column: 2, scope: !3288)
!3295 = !DILocation(line: 349, column: 6, scope: !3288)
!3296 = !DILocation(line: 349, column: 13, scope: !3288)
!3297 = !DILocation(line: 350, column: 2, scope: !3288)
!3298 = !DILocation(line: 350, column: 6, scope: !3288)
!3299 = !DILocation(line: 350, column: 18, scope: !3288)
!3300 = !DILocation(line: 353, column: 2, scope: !3288)
!3301 = !DILocation(line: 353, column: 6, scope: !3288)
!3302 = !DILocation(line: 353, column: 11, scope: !3288)
!3303 = !DILocation(line: 354, column: 2, scope: !3288)
!3304 = !DILocation(line: 354, column: 6, scope: !3288)
!3305 = !DILocation(line: 354, column: 13, scope: !3288)
!3306 = !DILocation(line: 355, column: 2, scope: !3288)
!3307 = !DILocation(line: 355, column: 6, scope: !3288)
!3308 = !DILocation(line: 355, column: 11, scope: !3288)
!3309 = !DILocation(line: 356, column: 1, scope: !3288)
!3310 = distinct !DISubprogram(name: "text_reload_exec", scope: !3, file: !3, line: 310, type: !2948, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3311 = !DILocalVariable(name: "C", arg: 1, scope: !3310, file: !3, line: 310, type: !2783)
!3312 = !DILocation(line: 310, column: 39, scope: !3310)
!3313 = !DILocalVariable(name: "op", arg: 2, scope: !3310, file: !3, line: 310, type: !2785)
!3314 = !DILocation(line: 310, column: 54, scope: !3310)
!3315 = !DILocalVariable(name: "st", scope: !3310, file: !3, line: 312, type: !2804)
!3316 = !DILocation(line: 312, column: 13, scope: !3310)
!3317 = !DILocation(line: 312, column: 36, scope: !3310)
!3318 = !DILocation(line: 312, column: 18, scope: !3310)
!3319 = !DILocalVariable(name: "text", scope: !3310, file: !3, line: 313, type: !2858)
!3320 = !DILocation(line: 313, column: 8, scope: !3310)
!3321 = !DILocation(line: 313, column: 34, scope: !3310)
!3322 = !DILocation(line: 313, column: 15, scope: !3310)
!3323 = !DILocalVariable(name: "ar", scope: !3310, file: !3, line: 314, type: !3324)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !119, line: 267, baseType: !3326)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !119, line: 230, size: 3072, elements: !3327)
!3327 = !{!3328, !3330, !3331, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3326, file: !119, line: 231, baseType: !3329, size: 64)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3326, file: !119, line: 231, baseType: !3329, size: 64, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3326, file: !119, line: 233, baseType: !3332, size: 1280, offset: 128)
!3332 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !3333, line: 71, baseType: !3334)
!3333 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !3333, line: 40, size: 1280, elements: !3335)
!3335 = !{!3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3359, !3360, !3361, !3364}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3334, file: !3333, line: 41, baseType: !1430, size: 128)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3334, file: !3333, line: 41, baseType: !1430, size: 128, offset: 128)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3334, file: !3333, line: 42, baseType: !2328, size: 128, offset: 256)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !3334, file: !3333, line: 42, baseType: !2328, size: 128, offset: 384)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3334, file: !3333, line: 43, baseType: !2328, size: 128, offset: 512)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3334, file: !3333, line: 45, baseType: !1412, size: 64, offset: 640)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3334, file: !3333, line: 45, baseType: !1412, size: 64, offset: 704)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !3334, file: !3333, line: 46, baseType: !1199, size: 32, offset: 768)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !3334, file: !3333, line: 46, baseType: !1199, size: 32, offset: 800)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !3334, file: !3333, line: 48, baseType: !1246, size: 16, offset: 832)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !3334, file: !3333, line: 49, baseType: !1246, size: 16, offset: 848)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !3334, file: !3333, line: 51, baseType: !1246, size: 16, offset: 864)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !3334, file: !3333, line: 52, baseType: !1246, size: 16, offset: 880)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !3334, file: !3333, line: 53, baseType: !1246, size: 16, offset: 896)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3334, file: !3333, line: 55, baseType: !1246, size: 16, offset: 912)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3334, file: !3333, line: 56, baseType: !1246, size: 16, offset: 928)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3334, file: !3333, line: 58, baseType: !1246, size: 16, offset: 944)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3334, file: !3333, line: 58, baseType: !1246, size: 16, offset: 960)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !3334, file: !3333, line: 59, baseType: !1246, size: 16, offset: 976)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !3334, file: !3333, line: 59, baseType: !1246, size: 16, offset: 992)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3334, file: !3333, line: 61, baseType: !1246, size: 16, offset: 1008)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !3334, file: !3333, line: 63, baseType: !3358, size: 64, offset: 1024)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !3334, file: !3333, line: 64, baseType: !1200, size: 32, offset: 1088)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !3334, file: !3333, line: 65, baseType: !1200, size: 32, offset: 1120)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3334, file: !3333, line: 68, baseType: !3362, size: 64, offset: 1152)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !3333, line: 68, flags: DIFlagFwdDecl)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3334, file: !3333, line: 69, baseType: !1291, size: 64, offset: 1216)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !3326, file: !119, line: 234, baseType: !2328, size: 128, offset: 1408)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !3326, file: !119, line: 235, baseType: !2328, size: 128, offset: 1536)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3326, file: !119, line: 236, baseType: !1246, size: 16, offset: 1664)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3326, file: !119, line: 236, baseType: !1246, size: 16, offset: 1680)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3326, file: !119, line: 238, baseType: !1246, size: 16, offset: 1696)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !3326, file: !119, line: 239, baseType: !1246, size: 16, offset: 1712)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3326, file: !119, line: 240, baseType: !1246, size: 16, offset: 1728)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3326, file: !119, line: 241, baseType: !1246, size: 16, offset: 1744)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3326, file: !119, line: 243, baseType: !1199, size: 32, offset: 1760)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3326, file: !119, line: 244, baseType: !1246, size: 16, offset: 1792)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3326, file: !119, line: 244, baseType: !1246, size: 16, offset: 1808)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3326, file: !119, line: 246, baseType: !1246, size: 16, offset: 1824)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !3326, file: !119, line: 247, baseType: !1246, size: 16, offset: 1840)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3326, file: !119, line: 248, baseType: !1246, size: 16, offset: 1856)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !3326, file: !119, line: 249, baseType: !1246, size: 16, offset: 1872)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !3326, file: !119, line: 250, baseType: !1246, size: 16, offset: 1888)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3326, file: !119, line: 251, baseType: !1246, size: 16, offset: 1904)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3326, file: !119, line: 253, baseType: !3383, size: 64, offset: 1920)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !119, line: 42, flags: DIFlagFwdDecl)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !3326, file: !119, line: 255, baseType: !1255, size: 128, offset: 1984)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !3326, file: !119, line: 256, baseType: !1255, size: 128, offset: 2112)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !3326, file: !119, line: 257, baseType: !1255, size: 128, offset: 2240)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !3326, file: !119, line: 258, baseType: !1255, size: 128, offset: 2368)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !3326, file: !119, line: 259, baseType: !1255, size: 128, offset: 2496)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3326, file: !119, line: 260, baseType: !1255, size: 128, offset: 2624)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !3326, file: !119, line: 261, baseType: !1255, size: 128, offset: 2752)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !3326, file: !119, line: 263, baseType: !1291, size: 64, offset: 2880)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !3326, file: !119, line: 265, baseType: !1460, size: 64, offset: 2944)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !3326, file: !119, line: 266, baseType: !1195, size: 64, offset: 3008)
!3395 = !DILocation(line: 314, column: 11, scope: !3310)
!3396 = !DILocation(line: 314, column: 30, scope: !3310)
!3397 = !DILocation(line: 314, column: 16, scope: !3310)
!3398 = !DILocalVariable(name: "orig_top", scope: !3310, file: !3, line: 317, type: !3399)
!3399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!3400 = !DILocation(line: 317, column: 12, scope: !3310)
!3401 = !DILocation(line: 317, column: 23, scope: !3310)
!3402 = !DILocation(line: 317, column: 27, scope: !3310)
!3403 = !DILocalVariable(name: "orig_curl", scope: !3310, file: !3, line: 318, type: !3399)
!3404 = !DILocation(line: 318, column: 12, scope: !3310)
!3405 = !DILocation(line: 318, column: 39, scope: !3310)
!3406 = !DILocation(line: 318, column: 45, scope: !3310)
!3407 = !DILocation(line: 318, column: 52, scope: !3310)
!3408 = !DILocation(line: 318, column: 58, scope: !3310)
!3409 = !DILocation(line: 318, column: 24, scope: !3310)
!3410 = !DILocalVariable(name: "orig_curc", scope: !3310, file: !3, line: 319, type: !3399)
!3411 = !DILocation(line: 319, column: 12, scope: !3310)
!3412 = !DILocation(line: 319, column: 24, scope: !3310)
!3413 = !DILocation(line: 319, column: 30, scope: !3310)
!3414 = !DILocation(line: 321, column: 23, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 321, column: 6)
!3416 = !DILocation(line: 321, column: 7, scope: !3415)
!3417 = !DILocation(line: 321, column: 6, scope: !3310)
!3418 = !DILocation(line: 322, column: 14, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 321, column: 30)
!3420 = !DILocation(line: 322, column: 18, scope: !3419)
!3421 = !DILocation(line: 322, column: 3, scope: !3419)
!3422 = !DILocation(line: 323, column: 3, scope: !3419)
!3423 = !DILocation(line: 331, column: 21, scope: !3310)
!3424 = !DILocation(line: 331, column: 2, scope: !3310)
!3425 = !DILocation(line: 332, column: 27, scope: !3310)
!3426 = !DILocation(line: 332, column: 2, scope: !3310)
!3427 = !DILocation(line: 333, column: 46, scope: !3310)
!3428 = !DILocation(line: 333, column: 28, scope: !3310)
!3429 = !DILocation(line: 333, column: 2, scope: !3310)
!3430 = !DILocation(line: 334, column: 24, scope: !3310)
!3431 = !DILocation(line: 334, column: 48, scope: !3310)
!3432 = !DILocation(line: 334, column: 2, scope: !3310)
!3433 = !DILocation(line: 337, column: 12, scope: !3310)
!3434 = !DILocation(line: 337, column: 2, scope: !3310)
!3435 = !DILocation(line: 337, column: 6, scope: !3310)
!3436 = !DILocation(line: 337, column: 10, scope: !3310)
!3437 = !DILocation(line: 338, column: 19, scope: !3310)
!3438 = !DILocation(line: 338, column: 23, scope: !3310)
!3439 = !DILocation(line: 338, column: 2, scope: !3310)
!3440 = !DILocation(line: 340, column: 14, scope: !3310)
!3441 = !DILocation(line: 340, column: 20, scope: !3310)
!3442 = !DILocation(line: 340, column: 31, scope: !3310)
!3443 = !DILocation(line: 340, column: 2, scope: !3310)
!3444 = !DILocation(line: 342, column: 2, scope: !3310)
!3445 = !DILocation(line: 343, column: 1, scope: !3310)
!3446 = distinct !DISubprogram(name: "text_edit_poll", scope: !3, file: !3, line: 88, type: !2799, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3447 = !DILocalVariable(name: "C", arg: 1, scope: !3446, file: !3, line: 88, type: !2783)
!3448 = !DILocation(line: 88, column: 37, scope: !3446)
!3449 = !DILocalVariable(name: "text", scope: !3446, file: !3, line: 90, type: !2858)
!3450 = !DILocation(line: 90, column: 8, scope: !3446)
!3451 = !DILocation(line: 90, column: 34, scope: !3446)
!3452 = !DILocation(line: 90, column: 15, scope: !3446)
!3453 = !DILocation(line: 92, column: 7, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 92, column: 6)
!3455 = !DILocation(line: 92, column: 6, scope: !3446)
!3456 = !DILocation(line: 93, column: 3, scope: !3454)
!3457 = !DILocation(line: 95, column: 6, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 95, column: 6)
!3459 = !DILocation(line: 95, column: 12, scope: !3458)
!3460 = !DILocation(line: 95, column: 15, scope: !3458)
!3461 = !DILocation(line: 95, column: 6, scope: !3446)
!3462 = !DILocation(line: 97, column: 3, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 95, column: 20)
!3464 = !DILocation(line: 100, column: 2, scope: !3446)
!3465 = !DILocation(line: 101, column: 1, scope: !3446)
!3466 = distinct !DISubprogram(name: "TEXT_OT_unlink", scope: !3, file: !3, line: 395, type: !1205, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3467 = !DILocalVariable(name: "ot", arg: 1, scope: !3466, file: !3, line: 395, type: !1207)
!3468 = !DILocation(line: 395, column: 37, scope: !3466)
!3469 = !DILocation(line: 398, column: 2, scope: !3466)
!3470 = !DILocation(line: 398, column: 6, scope: !3466)
!3471 = !DILocation(line: 398, column: 11, scope: !3466)
!3472 = !DILocation(line: 399, column: 2, scope: !3466)
!3473 = !DILocation(line: 399, column: 6, scope: !3466)
!3474 = !DILocation(line: 399, column: 13, scope: !3466)
!3475 = !DILocation(line: 400, column: 2, scope: !3466)
!3476 = !DILocation(line: 400, column: 6, scope: !3466)
!3477 = !DILocation(line: 400, column: 18, scope: !3466)
!3478 = !DILocation(line: 403, column: 2, scope: !3466)
!3479 = !DILocation(line: 403, column: 6, scope: !3466)
!3480 = !DILocation(line: 403, column: 11, scope: !3466)
!3481 = !DILocation(line: 404, column: 2, scope: !3466)
!3482 = !DILocation(line: 404, column: 6, scope: !3466)
!3483 = !DILocation(line: 404, column: 13, scope: !3466)
!3484 = !DILocation(line: 405, column: 2, scope: !3466)
!3485 = !DILocation(line: 405, column: 6, scope: !3466)
!3486 = !DILocation(line: 405, column: 11, scope: !3466)
!3487 = !DILocation(line: 408, column: 2, scope: !3466)
!3488 = !DILocation(line: 408, column: 6, scope: !3466)
!3489 = !DILocation(line: 408, column: 11, scope: !3466)
!3490 = !DILocation(line: 409, column: 1, scope: !3466)
!3491 = distinct !DISubprogram(name: "text_unlink_exec", scope: !3, file: !3, line: 366, type: !2948, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3492 = !DILocalVariable(name: "C", arg: 1, scope: !3491, file: !3, line: 366, type: !2783)
!3493 = !DILocation(line: 366, column: 39, scope: !3491)
!3494 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !3491, file: !3, line: 366, type: !2785)
!3495 = !DILocation(line: 366, column: 54, scope: !3491)
!3496 = !DILocalVariable(name: "bmain", scope: !3491, file: !3, line: 368, type: !2959)
!3497 = !DILocation(line: 368, column: 8, scope: !3491)
!3498 = !DILocation(line: 368, column: 30, scope: !3491)
!3499 = !DILocation(line: 368, column: 16, scope: !3491)
!3500 = !DILocalVariable(name: "st", scope: !3491, file: !3, line: 369, type: !2804)
!3501 = !DILocation(line: 369, column: 13, scope: !3491)
!3502 = !DILocation(line: 369, column: 36, scope: !3491)
!3503 = !DILocation(line: 369, column: 18, scope: !3491)
!3504 = !DILocalVariable(name: "text", scope: !3491, file: !3, line: 370, type: !2858)
!3505 = !DILocation(line: 370, column: 8, scope: !3491)
!3506 = !DILocation(line: 370, column: 34, scope: !3491)
!3507 = !DILocation(line: 370, column: 15, scope: !3491)
!3508 = !DILocation(line: 373, column: 6, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 373, column: 6)
!3510 = !DILocation(line: 373, column: 6, scope: !3491)
!3511 = !DILocation(line: 374, column: 7, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 374, column: 7)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 373, column: 10)
!3514 = !DILocation(line: 374, column: 13, scope: !3512)
!3515 = !DILocation(line: 374, column: 16, scope: !3512)
!3516 = !DILocation(line: 374, column: 7, scope: !3513)
!3517 = !DILocation(line: 375, column: 15, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 374, column: 22)
!3519 = !DILocation(line: 375, column: 21, scope: !3518)
!3520 = !DILocation(line: 375, column: 24, scope: !3518)
!3521 = !DILocation(line: 375, column: 4, scope: !3518)
!3522 = !DILocation(line: 375, column: 8, scope: !3518)
!3523 = !DILocation(line: 375, column: 13, scope: !3518)
!3524 = !DILocation(line: 376, column: 29, scope: !3518)
!3525 = !DILocation(line: 376, column: 4, scope: !3518)
!3526 = !DILocation(line: 377, column: 26, scope: !3518)
!3527 = !DILocation(line: 377, column: 50, scope: !3518)
!3528 = !DILocation(line: 377, column: 54, scope: !3518)
!3529 = !DILocation(line: 377, column: 4, scope: !3518)
!3530 = !DILocation(line: 378, column: 3, scope: !3518)
!3531 = !DILocation(line: 379, column: 12, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 379, column: 12)
!3533 = !DILocation(line: 379, column: 18, scope: !3532)
!3534 = !DILocation(line: 379, column: 21, scope: !3532)
!3535 = !DILocation(line: 379, column: 12, scope: !3512)
!3536 = !DILocation(line: 380, column: 15, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3532, file: !3, line: 379, column: 27)
!3538 = !DILocation(line: 380, column: 21, scope: !3537)
!3539 = !DILocation(line: 380, column: 24, scope: !3537)
!3540 = !DILocation(line: 380, column: 4, scope: !3537)
!3541 = !DILocation(line: 380, column: 8, scope: !3537)
!3542 = !DILocation(line: 380, column: 13, scope: !3537)
!3543 = !DILocation(line: 381, column: 29, scope: !3537)
!3544 = !DILocation(line: 381, column: 4, scope: !3537)
!3545 = !DILocation(line: 382, column: 26, scope: !3537)
!3546 = !DILocation(line: 382, column: 50, scope: !3537)
!3547 = !DILocation(line: 382, column: 54, scope: !3537)
!3548 = !DILocation(line: 382, column: 4, scope: !3537)
!3549 = !DILocation(line: 383, column: 3, scope: !3537)
!3550 = !DILocation(line: 384, column: 2, scope: !3513)
!3551 = !DILocation(line: 386, column: 18, scope: !3491)
!3552 = !DILocation(line: 386, column: 25, scope: !3491)
!3553 = !DILocation(line: 386, column: 2, scope: !3491)
!3554 = !DILocation(line: 387, column: 20, scope: !3491)
!3555 = !DILocation(line: 387, column: 27, scope: !3491)
!3556 = !DILocation(line: 387, column: 2, scope: !3491)
!3557 = !DILocation(line: 389, column: 28, scope: !3491)
!3558 = !DILocation(line: 389, column: 2, scope: !3491)
!3559 = !DILocation(line: 390, column: 24, scope: !3491)
!3560 = !DILocation(line: 390, column: 2, scope: !3491)
!3561 = !DILocation(line: 392, column: 2, scope: !3491)
!3562 = distinct !DISubprogram(name: "text_unlink_poll", scope: !3, file: !3, line: 360, type: !2799, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3563 = !DILocalVariable(name: "C", arg: 1, scope: !3562, file: !3, line: 360, type: !2783)
!3564 = !DILocation(line: 360, column: 39, scope: !3562)
!3565 = !DILocation(line: 363, column: 28, scope: !3562)
!3566 = !DILocation(line: 363, column: 9, scope: !3562)
!3567 = !DILocation(line: 363, column: 31, scope: !3562)
!3568 = !DILocation(line: 363, column: 2, scope: !3562)
!3569 = distinct !DISubprogram(name: "TEXT_OT_make_internal", scope: !3, file: !3, line: 430, type: !1205, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3570 = !DILocalVariable(name: "ot", arg: 1, scope: !3569, file: !3, line: 430, type: !1207)
!3571 = !DILocation(line: 430, column: 44, scope: !3569)
!3572 = !DILocation(line: 433, column: 2, scope: !3569)
!3573 = !DILocation(line: 433, column: 6, scope: !3569)
!3574 = !DILocation(line: 433, column: 11, scope: !3569)
!3575 = !DILocation(line: 434, column: 2, scope: !3569)
!3576 = !DILocation(line: 434, column: 6, scope: !3569)
!3577 = !DILocation(line: 434, column: 13, scope: !3569)
!3578 = !DILocation(line: 435, column: 2, scope: !3569)
!3579 = !DILocation(line: 435, column: 6, scope: !3569)
!3580 = !DILocation(line: 435, column: 18, scope: !3569)
!3581 = !DILocation(line: 438, column: 2, scope: !3569)
!3582 = !DILocation(line: 438, column: 6, scope: !3569)
!3583 = !DILocation(line: 438, column: 11, scope: !3569)
!3584 = !DILocation(line: 439, column: 2, scope: !3569)
!3585 = !DILocation(line: 439, column: 6, scope: !3569)
!3586 = !DILocation(line: 439, column: 11, scope: !3569)
!3587 = !DILocation(line: 442, column: 2, scope: !3569)
!3588 = !DILocation(line: 442, column: 6, scope: !3569)
!3589 = !DILocation(line: 442, column: 11, scope: !3569)
!3590 = !DILocation(line: 443, column: 1, scope: !3569)
!3591 = distinct !DISubprogram(name: "text_make_internal_exec", scope: !3, file: !3, line: 413, type: !2948, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3592 = !DILocalVariable(name: "C", arg: 1, scope: !3591, file: !3, line: 413, type: !2783)
!3593 = !DILocation(line: 413, column: 46, scope: !3591)
!3594 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !3591, file: !3, line: 413, type: !2785)
!3595 = !DILocation(line: 413, column: 61, scope: !3591)
!3596 = !DILocalVariable(name: "text", scope: !3591, file: !3, line: 415, type: !2858)
!3597 = !DILocation(line: 415, column: 8, scope: !3591)
!3598 = !DILocation(line: 415, column: 34, scope: !3591)
!3599 = !DILocation(line: 415, column: 15, scope: !3591)
!3600 = !DILocation(line: 417, column: 2, scope: !3591)
!3601 = !DILocation(line: 417, column: 8, scope: !3591)
!3602 = !DILocation(line: 417, column: 14, scope: !3591)
!3603 = !DILocation(line: 419, column: 6, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 419, column: 6)
!3605 = !DILocation(line: 419, column: 12, scope: !3604)
!3606 = !DILocation(line: 419, column: 6, scope: !3591)
!3607 = !DILocation(line: 420, column: 3, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 419, column: 18)
!3609 = !DILocation(line: 420, column: 13, scope: !3608)
!3610 = !DILocation(line: 420, column: 19, scope: !3608)
!3611 = !DILocation(line: 421, column: 3, scope: !3608)
!3612 = !DILocation(line: 421, column: 9, scope: !3608)
!3613 = !DILocation(line: 421, column: 14, scope: !3608)
!3614 = !DILocation(line: 422, column: 2, scope: !3608)
!3615 = !DILocation(line: 424, column: 27, scope: !3591)
!3616 = !DILocation(line: 424, column: 2, scope: !3591)
!3617 = !DILocation(line: 425, column: 24, scope: !3591)
!3618 = !DILocation(line: 425, column: 48, scope: !3591)
!3619 = !DILocation(line: 425, column: 2, scope: !3591)
!3620 = !DILocation(line: 427, column: 2, scope: !3591)
!3621 = distinct !DISubprogram(name: "TEXT_OT_save", scope: !3, file: !3, line: 510, type: !1205, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3622 = !DILocalVariable(name: "ot", arg: 1, scope: !3621, file: !3, line: 510, type: !1207)
!3623 = !DILocation(line: 510, column: 35, scope: !3621)
!3624 = !DILocation(line: 513, column: 2, scope: !3621)
!3625 = !DILocation(line: 513, column: 6, scope: !3621)
!3626 = !DILocation(line: 513, column: 11, scope: !3621)
!3627 = !DILocation(line: 514, column: 2, scope: !3621)
!3628 = !DILocation(line: 514, column: 6, scope: !3621)
!3629 = !DILocation(line: 514, column: 13, scope: !3621)
!3630 = !DILocation(line: 515, column: 2, scope: !3621)
!3631 = !DILocation(line: 515, column: 6, scope: !3621)
!3632 = !DILocation(line: 515, column: 18, scope: !3621)
!3633 = !DILocation(line: 518, column: 2, scope: !3621)
!3634 = !DILocation(line: 518, column: 6, scope: !3621)
!3635 = !DILocation(line: 518, column: 11, scope: !3621)
!3636 = !DILocation(line: 519, column: 2, scope: !3621)
!3637 = !DILocation(line: 519, column: 6, scope: !3621)
!3638 = !DILocation(line: 519, column: 11, scope: !3621)
!3639 = !DILocation(line: 520, column: 1, scope: !3621)
!3640 = distinct !DISubprogram(name: "text_save_exec", scope: !3, file: !3, line: 498, type: !2948, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3641 = !DILocalVariable(name: "C", arg: 1, scope: !3640, file: !3, line: 498, type: !2783)
!3642 = !DILocation(line: 498, column: 37, scope: !3640)
!3643 = !DILocalVariable(name: "op", arg: 2, scope: !3640, file: !3, line: 498, type: !2785)
!3644 = !DILocation(line: 498, column: 52, scope: !3640)
!3645 = !DILocalVariable(name: "text", scope: !3640, file: !3, line: 500, type: !2858)
!3646 = !DILocation(line: 500, column: 8, scope: !3640)
!3647 = !DILocation(line: 500, column: 34, scope: !3640)
!3648 = !DILocation(line: 500, column: 15, scope: !3640)
!3649 = !DILocation(line: 502, column: 17, scope: !3640)
!3650 = !DILocation(line: 502, column: 23, scope: !3640)
!3651 = !DILocation(line: 502, column: 27, scope: !3640)
!3652 = !DILocation(line: 502, column: 2, scope: !3640)
!3653 = !DILocation(line: 504, column: 27, scope: !3640)
!3654 = !DILocation(line: 504, column: 2, scope: !3640)
!3655 = !DILocation(line: 505, column: 24, scope: !3640)
!3656 = !DILocation(line: 505, column: 48, scope: !3640)
!3657 = !DILocation(line: 505, column: 2, scope: !3640)
!3658 = !DILocation(line: 507, column: 2, scope: !3640)
!3659 = distinct !DISubprogram(name: "text_save_poll", scope: !3, file: !3, line: 447, type: !2799, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3660 = !DILocalVariable(name: "C", arg: 1, scope: !3659, file: !3, line: 447, type: !2783)
!3661 = !DILocation(line: 447, column: 37, scope: !3659)
!3662 = !DILocalVariable(name: "text", scope: !3659, file: !3, line: 449, type: !2858)
!3663 = !DILocation(line: 449, column: 8, scope: !3659)
!3664 = !DILocation(line: 449, column: 34, scope: !3659)
!3665 = !DILocation(line: 449, column: 15, scope: !3659)
!3666 = !DILocation(line: 451, column: 22, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 451, column: 6)
!3668 = !DILocation(line: 451, column: 7, scope: !3667)
!3669 = !DILocation(line: 451, column: 6, scope: !3659)
!3670 = !DILocation(line: 452, column: 3, scope: !3667)
!3671 = !DILocation(line: 454, column: 10, scope: !3659)
!3672 = !DILocation(line: 454, column: 16, scope: !3659)
!3673 = !DILocation(line: 454, column: 21, scope: !3659)
!3674 = !DILocation(line: 454, column: 29, scope: !3659)
!3675 = !DILocation(line: 454, column: 34, scope: !3659)
!3676 = !DILocation(line: 454, column: 40, scope: !3659)
!3677 = !DILocation(line: 454, column: 46, scope: !3659)
!3678 = !DILocation(line: 454, column: 32, scope: !3659)
!3679 = !DILocation(line: 0, scope: !3659)
!3680 = !DILocation(line: 454, column: 2, scope: !3659)
!3681 = !DILocation(line: 455, column: 1, scope: !3659)
!3682 = distinct !DISubprogram(name: "TEXT_OT_save_as", scope: !3, file: !3, line: 567, type: !1205, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3683 = !DILocalVariable(name: "ot", arg: 1, scope: !3682, file: !3, line: 567, type: !1207)
!3684 = !DILocation(line: 567, column: 38, scope: !3682)
!3685 = !DILocation(line: 570, column: 2, scope: !3682)
!3686 = !DILocation(line: 570, column: 6, scope: !3682)
!3687 = !DILocation(line: 570, column: 11, scope: !3682)
!3688 = !DILocation(line: 571, column: 2, scope: !3682)
!3689 = !DILocation(line: 571, column: 6, scope: !3682)
!3690 = !DILocation(line: 571, column: 13, scope: !3682)
!3691 = !DILocation(line: 572, column: 2, scope: !3682)
!3692 = !DILocation(line: 572, column: 6, scope: !3682)
!3693 = !DILocation(line: 572, column: 18, scope: !3682)
!3694 = !DILocation(line: 575, column: 2, scope: !3682)
!3695 = !DILocation(line: 575, column: 6, scope: !3682)
!3696 = !DILocation(line: 575, column: 11, scope: !3682)
!3697 = !DILocation(line: 576, column: 2, scope: !3682)
!3698 = !DILocation(line: 576, column: 6, scope: !3682)
!3699 = !DILocation(line: 576, column: 13, scope: !3682)
!3700 = !DILocation(line: 577, column: 2, scope: !3682)
!3701 = !DILocation(line: 577, column: 6, scope: !3682)
!3702 = !DILocation(line: 577, column: 11, scope: !3682)
!3703 = !DILocation(line: 580, column: 33, scope: !3682)
!3704 = !DILocation(line: 580, column: 2, scope: !3682)
!3705 = !DILocation(line: 582, column: 1, scope: !3682)
!3706 = distinct !DISubprogram(name: "text_save_as_exec", scope: !3, file: !3, line: 524, type: !2948, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3707 = !DILocalVariable(name: "C", arg: 1, scope: !3706, file: !3, line: 524, type: !2783)
!3708 = !DILocation(line: 524, column: 40, scope: !3706)
!3709 = !DILocalVariable(name: "op", arg: 2, scope: !3706, file: !3, line: 524, type: !2785)
!3710 = !DILocation(line: 524, column: 55, scope: !3706)
!3711 = !DILocalVariable(name: "text", scope: !3706, file: !3, line: 526, type: !2858)
!3712 = !DILocation(line: 526, column: 8, scope: !3706)
!3713 = !DILocation(line: 526, column: 34, scope: !3706)
!3714 = !DILocation(line: 526, column: 15, scope: !3706)
!3715 = !DILocalVariable(name: "str", scope: !3706, file: !3, line: 527, type: !1326)
!3716 = !DILocation(line: 527, column: 7, scope: !3706)
!3717 = !DILocation(line: 529, column: 7, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 529, column: 6)
!3719 = !DILocation(line: 529, column: 6, scope: !3706)
!3720 = !DILocation(line: 530, column: 3, scope: !3718)
!3721 = !DILocation(line: 532, column: 17, scope: !3706)
!3722 = !DILocation(line: 532, column: 21, scope: !3706)
!3723 = !DILocation(line: 532, column: 38, scope: !3706)
!3724 = !DILocation(line: 532, column: 2, scope: !3706)
!3725 = !DILocation(line: 534, column: 6, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 534, column: 6)
!3727 = !DILocation(line: 534, column: 12, scope: !3726)
!3728 = !DILocation(line: 534, column: 6, scope: !3706)
!3729 = !DILocation(line: 534, column: 18, scope: !3726)
!3730 = !DILocation(line: 534, column: 28, scope: !3726)
!3731 = !DILocation(line: 534, column: 34, scope: !3726)
!3732 = !DILocation(line: 535, column: 26, scope: !3706)
!3733 = !DILocation(line: 535, column: 15, scope: !3706)
!3734 = !DILocation(line: 535, column: 2, scope: !3706)
!3735 = !DILocation(line: 535, column: 8, scope: !3706)
!3736 = !DILocation(line: 535, column: 13, scope: !3706)
!3737 = !DILocation(line: 536, column: 2, scope: !3706)
!3738 = !DILocation(line: 536, column: 8, scope: !3706)
!3739 = !DILocation(line: 536, column: 14, scope: !3706)
!3740 = !DILocation(line: 538, column: 17, scope: !3706)
!3741 = !DILocation(line: 538, column: 23, scope: !3706)
!3742 = !DILocation(line: 538, column: 27, scope: !3706)
!3743 = !DILocation(line: 538, column: 2, scope: !3706)
!3744 = !DILocation(line: 540, column: 27, scope: !3706)
!3745 = !DILocation(line: 540, column: 2, scope: !3706)
!3746 = !DILocation(line: 541, column: 24, scope: !3706)
!3747 = !DILocation(line: 541, column: 48, scope: !3706)
!3748 = !DILocation(line: 541, column: 2, scope: !3706)
!3749 = !DILocation(line: 543, column: 2, scope: !3706)
!3750 = !DILocation(line: 544, column: 1, scope: !3706)
!3751 = distinct !DISubprogram(name: "text_save_as_invoke", scope: !3, file: !3, line: 546, type: !2781, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3752 = !DILocalVariable(name: "C", arg: 1, scope: !3751, file: !3, line: 546, type: !2783)
!3753 = !DILocation(line: 546, column: 42, scope: !3751)
!3754 = !DILocalVariable(name: "op", arg: 2, scope: !3751, file: !3, line: 546, type: !2785)
!3755 = !DILocation(line: 546, column: 57, scope: !3751)
!3756 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !3751, file: !3, line: 546, type: !2787)
!3757 = !DILocation(line: 546, column: 76, scope: !3751)
!3758 = !DILocalVariable(name: "text", scope: !3751, file: !3, line: 548, type: !2858)
!3759 = !DILocation(line: 548, column: 8, scope: !3751)
!3760 = !DILocation(line: 548, column: 34, scope: !3751)
!3761 = !DILocation(line: 548, column: 15, scope: !3751)
!3762 = !DILocalVariable(name: "str", scope: !3751, file: !3, line: 549, type: !1213)
!3763 = !DILocation(line: 549, column: 14, scope: !3751)
!3764 = !DILocation(line: 551, column: 33, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 551, column: 6)
!3766 = !DILocation(line: 551, column: 37, scope: !3765)
!3767 = !DILocation(line: 551, column: 6, scope: !3765)
!3768 = !DILocation(line: 551, column: 6, scope: !3751)
!3769 = !DILocation(line: 552, column: 28, scope: !3765)
!3770 = !DILocation(line: 552, column: 31, scope: !3765)
!3771 = !DILocation(line: 552, column: 10, scope: !3765)
!3772 = !DILocation(line: 552, column: 3, scope: !3765)
!3773 = !DILocation(line: 554, column: 6, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 554, column: 6)
!3775 = !DILocation(line: 554, column: 12, scope: !3774)
!3776 = !DILocation(line: 554, column: 6, scope: !3751)
!3777 = !DILocation(line: 555, column: 9, scope: !3774)
!3778 = !DILocation(line: 555, column: 15, scope: !3774)
!3779 = !DILocation(line: 555, column: 7, scope: !3774)
!3780 = !DILocation(line: 555, column: 3, scope: !3774)
!3781 = !DILocation(line: 556, column: 11, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 556, column: 11)
!3783 = !DILocation(line: 556, column: 17, scope: !3782)
!3784 = !DILocation(line: 556, column: 23, scope: !3782)
!3785 = !DILocation(line: 556, column: 11, scope: !3774)
!3786 = !DILocation(line: 557, column: 9, scope: !3782)
!3787 = !DILocation(line: 557, column: 15, scope: !3782)
!3788 = !DILocation(line: 557, column: 18, scope: !3782)
!3789 = !DILocation(line: 557, column: 23, scope: !3782)
!3790 = !DILocation(line: 557, column: 7, scope: !3782)
!3791 = !DILocation(line: 557, column: 3, scope: !3782)
!3792 = !DILocation(line: 559, column: 11, scope: !3782)
!3793 = !DILocation(line: 559, column: 17, scope: !3782)
!3794 = !DILocation(line: 559, column: 9, scope: !3782)
!3795 = !DILocation(line: 559, column: 7, scope: !3782)
!3796 = !DILocation(line: 561, column: 17, scope: !3751)
!3797 = !DILocation(line: 561, column: 21, scope: !3751)
!3798 = !DILocation(line: 561, column: 38, scope: !3751)
!3799 = !DILocation(line: 561, column: 2, scope: !3751)
!3800 = !DILocation(line: 562, column: 26, scope: !3751)
!3801 = !DILocation(line: 562, column: 29, scope: !3751)
!3802 = !DILocation(line: 562, column: 2, scope: !3751)
!3803 = !DILocation(line: 564, column: 2, scope: !3751)
!3804 = !DILocation(line: 565, column: 1, scope: !3751)
!3805 = distinct !DISubprogram(name: "TEXT_OT_run_script", scope: !3, file: !3, line: 643, type: !1205, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3806 = !DILocalVariable(name: "ot", arg: 1, scope: !3805, file: !3, line: 643, type: !1207)
!3807 = !DILocation(line: 643, column: 41, scope: !3805)
!3808 = !DILocation(line: 646, column: 2, scope: !3805)
!3809 = !DILocation(line: 646, column: 6, scope: !3805)
!3810 = !DILocation(line: 646, column: 11, scope: !3805)
!3811 = !DILocation(line: 647, column: 2, scope: !3805)
!3812 = !DILocation(line: 647, column: 6, scope: !3805)
!3813 = !DILocation(line: 647, column: 13, scope: !3805)
!3814 = !DILocation(line: 648, column: 2, scope: !3805)
!3815 = !DILocation(line: 648, column: 6, scope: !3805)
!3816 = !DILocation(line: 648, column: 18, scope: !3805)
!3817 = !DILocation(line: 651, column: 2, scope: !3805)
!3818 = !DILocation(line: 651, column: 6, scope: !3805)
!3819 = !DILocation(line: 651, column: 11, scope: !3805)
!3820 = !DILocation(line: 652, column: 2, scope: !3805)
!3821 = !DILocation(line: 652, column: 6, scope: !3805)
!3822 = !DILocation(line: 652, column: 11, scope: !3805)
!3823 = !DILocation(line: 655, column: 2, scope: !3805)
!3824 = !DILocation(line: 655, column: 6, scope: !3805)
!3825 = !DILocation(line: 655, column: 11, scope: !3805)
!3826 = !DILocation(line: 656, column: 1, scope: !3805)
!3827 = distinct !DISubprogram(name: "text_run_script_poll", scope: !3, file: !3, line: 586, type: !2799, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3828 = !DILocalVariable(name: "C", arg: 1, scope: !3827, file: !3, line: 586, type: !2783)
!3829 = !DILocation(line: 586, column: 43, scope: !3827)
!3830 = !DILocation(line: 588, column: 29, scope: !3827)
!3831 = !DILocation(line: 588, column: 10, scope: !3827)
!3832 = !DILocation(line: 588, column: 32, scope: !3827)
!3833 = !DILocation(line: 588, column: 2, scope: !3827)
!3834 = distinct !DISubprogram(name: "text_run_script_exec", scope: !3, file: !3, line: 630, type: !2948, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3835 = !DILocalVariable(name: "C", arg: 1, scope: !3834, file: !3, line: 630, type: !2783)
!3836 = !DILocation(line: 630, column: 43, scope: !3834)
!3837 = !DILocalVariable(name: "op", arg: 2, scope: !3834, file: !3, line: 630, type: !2785)
!3838 = !DILocation(line: 630, column: 58, scope: !3834)
!3839 = !DILocation(line: 633, column: 8, scope: !3834)
!3840 = !DILocation(line: 635, column: 13, scope: !3834)
!3841 = !DILocation(line: 635, column: 17, scope: !3834)
!3842 = !DILocation(line: 635, column: 2, scope: !3834)
!3843 = !DILocation(line: 637, column: 2, scope: !3834)
!3844 = distinct !DISubprogram(name: "TEXT_OT_refresh_pyconstraints", scope: !3, file: !3, line: 703, type: !1205, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3845 = !DILocalVariable(name: "ot", arg: 1, scope: !3844, file: !3, line: 703, type: !1207)
!3846 = !DILocation(line: 703, column: 52, scope: !3844)
!3847 = !DILocation(line: 706, column: 2, scope: !3844)
!3848 = !DILocation(line: 706, column: 6, scope: !3844)
!3849 = !DILocation(line: 706, column: 11, scope: !3844)
!3850 = !DILocation(line: 707, column: 2, scope: !3844)
!3851 = !DILocation(line: 707, column: 6, scope: !3844)
!3852 = !DILocation(line: 707, column: 13, scope: !3844)
!3853 = !DILocation(line: 708, column: 2, scope: !3844)
!3854 = !DILocation(line: 708, column: 6, scope: !3844)
!3855 = !DILocation(line: 708, column: 18, scope: !3844)
!3856 = !DILocation(line: 711, column: 2, scope: !3844)
!3857 = !DILocation(line: 711, column: 6, scope: !3844)
!3858 = !DILocation(line: 711, column: 11, scope: !3844)
!3859 = !DILocation(line: 712, column: 2, scope: !3844)
!3860 = !DILocation(line: 712, column: 6, scope: !3844)
!3861 = !DILocation(line: 712, column: 11, scope: !3844)
!3862 = !DILocation(line: 713, column: 1, scope: !3844)
!3863 = distinct !DISubprogram(name: "text_refresh_pyconstraints_exec", scope: !3, file: !3, line: 660, type: !2948, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3864 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !3863, file: !3, line: 660, type: !2783)
!3865 = !DILocation(line: 660, column: 54, scope: !3863)
!3866 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !3863, file: !3, line: 660, type: !2785)
!3867 = !DILocation(line: 660, column: 77, scope: !3863)
!3868 = !DILocation(line: 700, column: 2, scope: !3863)
!3869 = distinct !DISubprogram(name: "TEXT_OT_paste", scope: !3, file: !3, line: 828, type: !1205, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3870 = !DILocalVariable(name: "ot", arg: 1, scope: !3869, file: !3, line: 828, type: !1207)
!3871 = !DILocation(line: 828, column: 36, scope: !3869)
!3872 = !DILocation(line: 831, column: 2, scope: !3869)
!3873 = !DILocation(line: 831, column: 6, scope: !3869)
!3874 = !DILocation(line: 831, column: 11, scope: !3869)
!3875 = !DILocation(line: 832, column: 2, scope: !3869)
!3876 = !DILocation(line: 832, column: 6, scope: !3869)
!3877 = !DILocation(line: 832, column: 13, scope: !3869)
!3878 = !DILocation(line: 833, column: 2, scope: !3869)
!3879 = !DILocation(line: 833, column: 6, scope: !3869)
!3880 = !DILocation(line: 833, column: 18, scope: !3869)
!3881 = !DILocation(line: 836, column: 2, scope: !3869)
!3882 = !DILocation(line: 836, column: 6, scope: !3869)
!3883 = !DILocation(line: 836, column: 11, scope: !3869)
!3884 = !DILocation(line: 837, column: 2, scope: !3869)
!3885 = !DILocation(line: 837, column: 6, scope: !3869)
!3886 = !DILocation(line: 837, column: 11, scope: !3869)
!3887 = !DILocation(line: 840, column: 18, scope: !3869)
!3888 = !DILocation(line: 840, column: 22, scope: !3869)
!3889 = !DILocation(line: 840, column: 2, scope: !3869)
!3890 = !DILocation(line: 841, column: 1, scope: !3869)
!3891 = distinct !DISubprogram(name: "text_paste_exec", scope: !3, file: !3, line: 799, type: !2948, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3892 = !DILocalVariable(name: "C", arg: 1, scope: !3891, file: !3, line: 799, type: !2783)
!3893 = !DILocation(line: 799, column: 38, scope: !3891)
!3894 = !DILocalVariable(name: "op", arg: 2, scope: !3891, file: !3, line: 799, type: !2785)
!3895 = !DILocation(line: 799, column: 53, scope: !3891)
!3896 = !DILocalVariable(name: "selection", scope: !3891, file: !3, line: 801, type: !3143)
!3897 = !DILocation(line: 801, column: 13, scope: !3891)
!3898 = !DILocation(line: 801, column: 41, scope: !3891)
!3899 = !DILocation(line: 801, column: 45, scope: !3891)
!3900 = !DILocation(line: 801, column: 25, scope: !3891)
!3901 = !DILocalVariable(name: "text", scope: !3891, file: !3, line: 802, type: !2858)
!3902 = !DILocation(line: 802, column: 8, scope: !3891)
!3903 = !DILocation(line: 802, column: 34, scope: !3891)
!3904 = !DILocation(line: 802, column: 15, scope: !3891)
!3905 = !DILocalVariable(name: "buf", scope: !3891, file: !3, line: 803, type: !1460)
!3906 = !DILocation(line: 803, column: 8, scope: !3891)
!3907 = !DILocalVariable(name: "buf_len", scope: !3891, file: !3, line: 804, type: !1200)
!3908 = !DILocation(line: 804, column: 6, scope: !3891)
!3909 = !DILocation(line: 806, column: 30, scope: !3891)
!3910 = !DILocation(line: 806, column: 8, scope: !3891)
!3911 = !DILocation(line: 806, column: 6, scope: !3891)
!3912 = !DILocation(line: 808, column: 7, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 808, column: 6)
!3914 = !DILocation(line: 808, column: 6, scope: !3891)
!3915 = !DILocation(line: 809, column: 3, scope: !3913)
!3916 = !DILocation(line: 811, column: 46, scope: !3891)
!3917 = !DILocation(line: 811, column: 28, scope: !3891)
!3918 = !DILocation(line: 811, column: 2, scope: !3891)
!3919 = !DILocation(line: 813, column: 17, scope: !3891)
!3920 = !DILocation(line: 813, column: 23, scope: !3891)
!3921 = !DILocation(line: 813, column: 2, scope: !3891)
!3922 = !DILocation(line: 814, column: 21, scope: !3891)
!3923 = !DILocation(line: 814, column: 2, scope: !3891)
!3924 = !DILocation(line: 816, column: 2, scope: !3891)
!3925 = !DILocation(line: 816, column: 12, scope: !3891)
!3926 = !DILocation(line: 818, column: 27, scope: !3891)
!3927 = !DILocation(line: 818, column: 2, scope: !3891)
!3928 = !DILocation(line: 819, column: 24, scope: !3891)
!3929 = !DILocation(line: 819, column: 48, scope: !3891)
!3930 = !DILocation(line: 819, column: 2, scope: !3891)
!3931 = !DILocation(line: 822, column: 24, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 822, column: 6)
!3933 = !DILocation(line: 822, column: 6, scope: !3932)
!3934 = !DILocation(line: 822, column: 28, scope: !3932)
!3935 = !DILocation(line: 822, column: 6, scope: !3891)
!3936 = !DILocation(line: 823, column: 19, scope: !3932)
!3937 = !DILocation(line: 823, column: 3, scope: !3932)
!3938 = !DILocation(line: 825, column: 2, scope: !3891)
!3939 = !DILocation(line: 826, column: 1, scope: !3891)
!3940 = distinct !DISubprogram(name: "TEXT_OT_duplicate_line", scope: !3, file: !3, line: 861, type: !1205, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3941 = !DILocalVariable(name: "ot", arg: 1, scope: !3940, file: !3, line: 861, type: !1207)
!3942 = !DILocation(line: 861, column: 45, scope: !3940)
!3943 = !DILocation(line: 864, column: 2, scope: !3940)
!3944 = !DILocation(line: 864, column: 6, scope: !3940)
!3945 = !DILocation(line: 864, column: 11, scope: !3940)
!3946 = !DILocation(line: 865, column: 2, scope: !3940)
!3947 = !DILocation(line: 865, column: 6, scope: !3940)
!3948 = !DILocation(line: 865, column: 13, scope: !3940)
!3949 = !DILocation(line: 866, column: 2, scope: !3940)
!3950 = !DILocation(line: 866, column: 6, scope: !3940)
!3951 = !DILocation(line: 866, column: 18, scope: !3940)
!3952 = !DILocation(line: 869, column: 2, scope: !3940)
!3953 = !DILocation(line: 869, column: 6, scope: !3940)
!3954 = !DILocation(line: 869, column: 11, scope: !3940)
!3955 = !DILocation(line: 870, column: 2, scope: !3940)
!3956 = !DILocation(line: 870, column: 6, scope: !3940)
!3957 = !DILocation(line: 870, column: 11, scope: !3940)
!3958 = !DILocation(line: 871, column: 1, scope: !3940)
!3959 = distinct !DISubprogram(name: "text_duplicate_line_exec", scope: !3, file: !3, line: 845, type: !2948, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3960 = !DILocalVariable(name: "C", arg: 1, scope: !3959, file: !3, line: 845, type: !2783)
!3961 = !DILocation(line: 845, column: 47, scope: !3959)
!3962 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !3959, file: !3, line: 845, type: !2785)
!3963 = !DILocation(line: 845, column: 62, scope: !3959)
!3964 = !DILocalVariable(name: "text", scope: !3959, file: !3, line: 847, type: !2858)
!3965 = !DILocation(line: 847, column: 8, scope: !3959)
!3966 = !DILocation(line: 847, column: 34, scope: !3959)
!3967 = !DILocation(line: 847, column: 15, scope: !3959)
!3968 = !DILocation(line: 849, column: 21, scope: !3959)
!3969 = !DILocation(line: 849, column: 2, scope: !3959)
!3970 = !DILocation(line: 851, column: 24, scope: !3959)
!3971 = !DILocation(line: 851, column: 48, scope: !3959)
!3972 = !DILocation(line: 851, column: 2, scope: !3959)
!3973 = !DILocation(line: 854, column: 24, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 854, column: 6)
!3975 = !DILocation(line: 854, column: 6, scope: !3974)
!3976 = !DILocation(line: 854, column: 28, scope: !3974)
!3977 = !DILocation(line: 854, column: 6, scope: !3959)
!3978 = !DILocation(line: 855, column: 19, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 854, column: 39)
!3980 = !DILocation(line: 855, column: 3, scope: !3979)
!3981 = !DILocation(line: 856, column: 2, scope: !3979)
!3982 = !DILocation(line: 858, column: 2, scope: !3959)
!3983 = distinct !DISubprogram(name: "TEXT_OT_copy", scope: !3, file: !3, line: 896, type: !1205, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!3984 = !DILocalVariable(name: "ot", arg: 1, scope: !3983, file: !3, line: 896, type: !1207)
!3985 = !DILocation(line: 896, column: 35, scope: !3983)
!3986 = !DILocation(line: 899, column: 2, scope: !3983)
!3987 = !DILocation(line: 899, column: 6, scope: !3983)
!3988 = !DILocation(line: 899, column: 11, scope: !3983)
!3989 = !DILocation(line: 900, column: 2, scope: !3983)
!3990 = !DILocation(line: 900, column: 6, scope: !3983)
!3991 = !DILocation(line: 900, column: 13, scope: !3983)
!3992 = !DILocation(line: 901, column: 2, scope: !3983)
!3993 = !DILocation(line: 901, column: 6, scope: !3983)
!3994 = !DILocation(line: 901, column: 18, scope: !3983)
!3995 = !DILocation(line: 904, column: 2, scope: !3983)
!3996 = !DILocation(line: 904, column: 6, scope: !3983)
!3997 = !DILocation(line: 904, column: 11, scope: !3983)
!3998 = !DILocation(line: 905, column: 2, scope: !3983)
!3999 = !DILocation(line: 905, column: 6, scope: !3983)
!4000 = !DILocation(line: 905, column: 11, scope: !3983)
!4001 = !DILocation(line: 906, column: 1, scope: !3983)
!4002 = distinct !DISubprogram(name: "text_copy_exec", scope: !3, file: !3, line: 887, type: !2948, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4003 = !DILocalVariable(name: "C", arg: 1, scope: !4002, file: !3, line: 887, type: !2783)
!4004 = !DILocation(line: 887, column: 37, scope: !4002)
!4005 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4002, file: !3, line: 887, type: !2785)
!4006 = !DILocation(line: 887, column: 52, scope: !4002)
!4007 = !DILocalVariable(name: "text", scope: !4002, file: !3, line: 889, type: !2858)
!4008 = !DILocation(line: 889, column: 8, scope: !4002)
!4009 = !DILocation(line: 889, column: 34, scope: !4002)
!4010 = !DILocation(line: 889, column: 15, scope: !4002)
!4011 = !DILocation(line: 891, column: 21, scope: !4002)
!4012 = !DILocation(line: 891, column: 2, scope: !4002)
!4013 = !DILocation(line: 893, column: 2, scope: !4002)
!4014 = distinct !DISubprogram(name: "TEXT_OT_cut", scope: !3, file: !3, line: 929, type: !1205, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4015 = !DILocalVariable(name: "ot", arg: 1, scope: !4014, file: !3, line: 929, type: !1207)
!4016 = !DILocation(line: 929, column: 34, scope: !4014)
!4017 = !DILocation(line: 932, column: 2, scope: !4014)
!4018 = !DILocation(line: 932, column: 6, scope: !4014)
!4019 = !DILocation(line: 932, column: 11, scope: !4014)
!4020 = !DILocation(line: 933, column: 2, scope: !4014)
!4021 = !DILocation(line: 933, column: 6, scope: !4014)
!4022 = !DILocation(line: 933, column: 13, scope: !4014)
!4023 = !DILocation(line: 934, column: 2, scope: !4014)
!4024 = !DILocation(line: 934, column: 6, scope: !4014)
!4025 = !DILocation(line: 934, column: 18, scope: !4014)
!4026 = !DILocation(line: 937, column: 2, scope: !4014)
!4027 = !DILocation(line: 937, column: 6, scope: !4014)
!4028 = !DILocation(line: 937, column: 11, scope: !4014)
!4029 = !DILocation(line: 938, column: 2, scope: !4014)
!4030 = !DILocation(line: 938, column: 6, scope: !4014)
!4031 = !DILocation(line: 938, column: 11, scope: !4014)
!4032 = !DILocation(line: 939, column: 1, scope: !4014)
!4033 = distinct !DISubprogram(name: "text_cut_exec", scope: !3, file: !3, line: 910, type: !2948, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4034 = !DILocalVariable(name: "C", arg: 1, scope: !4033, file: !3, line: 910, type: !2783)
!4035 = !DILocation(line: 910, column: 36, scope: !4033)
!4036 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4033, file: !3, line: 910, type: !2785)
!4037 = !DILocation(line: 910, column: 51, scope: !4033)
!4038 = !DILocalVariable(name: "text", scope: !4033, file: !3, line: 912, type: !2858)
!4039 = !DILocation(line: 912, column: 8, scope: !4033)
!4040 = !DILocation(line: 912, column: 34, scope: !4033)
!4041 = !DILocation(line: 912, column: 15, scope: !4033)
!4042 = !DILocation(line: 914, column: 46, scope: !4033)
!4043 = !DILocation(line: 914, column: 28, scope: !4033)
!4044 = !DILocation(line: 914, column: 2, scope: !4033)
!4045 = !DILocation(line: 916, column: 21, scope: !4033)
!4046 = !DILocation(line: 916, column: 2, scope: !4033)
!4047 = !DILocation(line: 917, column: 22, scope: !4033)
!4048 = !DILocation(line: 917, column: 2, scope: !4033)
!4049 = !DILocation(line: 919, column: 27, scope: !4033)
!4050 = !DILocation(line: 919, column: 2, scope: !4033)
!4051 = !DILocation(line: 920, column: 24, scope: !4033)
!4052 = !DILocation(line: 920, column: 48, scope: !4033)
!4053 = !DILocation(line: 920, column: 2, scope: !4033)
!4054 = !DILocation(line: 923, column: 24, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 923, column: 6)
!4056 = !DILocation(line: 923, column: 6, scope: !4055)
!4057 = !DILocation(line: 923, column: 28, scope: !4055)
!4058 = !DILocation(line: 923, column: 6, scope: !4033)
!4059 = !DILocation(line: 924, column: 19, scope: !4055)
!4060 = !DILocation(line: 924, column: 3, scope: !4055)
!4061 = !DILocation(line: 926, column: 2, scope: !4033)
!4062 = distinct !DISubprogram(name: "TEXT_OT_indent", scope: !3, file: !3, line: 964, type: !1205, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4063 = !DILocalVariable(name: "ot", arg: 1, scope: !4062, file: !3, line: 964, type: !1207)
!4064 = !DILocation(line: 964, column: 37, scope: !4062)
!4065 = !DILocation(line: 967, column: 2, scope: !4062)
!4066 = !DILocation(line: 967, column: 6, scope: !4062)
!4067 = !DILocation(line: 967, column: 11, scope: !4062)
!4068 = !DILocation(line: 968, column: 2, scope: !4062)
!4069 = !DILocation(line: 968, column: 6, scope: !4062)
!4070 = !DILocation(line: 968, column: 13, scope: !4062)
!4071 = !DILocation(line: 969, column: 2, scope: !4062)
!4072 = !DILocation(line: 969, column: 6, scope: !4062)
!4073 = !DILocation(line: 969, column: 18, scope: !4062)
!4074 = !DILocation(line: 972, column: 2, scope: !4062)
!4075 = !DILocation(line: 972, column: 6, scope: !4062)
!4076 = !DILocation(line: 972, column: 11, scope: !4062)
!4077 = !DILocation(line: 973, column: 2, scope: !4062)
!4078 = !DILocation(line: 973, column: 6, scope: !4062)
!4079 = !DILocation(line: 973, column: 11, scope: !4062)
!4080 = !DILocation(line: 974, column: 1, scope: !4062)
!4081 = distinct !DISubprogram(name: "text_indent_exec", scope: !3, file: !3, line: 943, type: !2948, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4082 = !DILocalVariable(name: "C", arg: 1, scope: !4081, file: !3, line: 943, type: !2783)
!4083 = !DILocation(line: 943, column: 39, scope: !4081)
!4084 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4081, file: !3, line: 943, type: !2785)
!4085 = !DILocation(line: 943, column: 54, scope: !4081)
!4086 = !DILocalVariable(name: "text", scope: !4081, file: !3, line: 945, type: !2858)
!4087 = !DILocation(line: 945, column: 8, scope: !4081)
!4088 = !DILocation(line: 945, column: 34, scope: !4081)
!4089 = !DILocation(line: 945, column: 15, scope: !4081)
!4090 = !DILocation(line: 947, column: 46, scope: !4081)
!4091 = !DILocation(line: 947, column: 28, scope: !4081)
!4092 = !DILocation(line: 947, column: 2, scope: !4081)
!4093 = !DILocation(line: 949, column: 18, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 949, column: 6)
!4095 = !DILocation(line: 949, column: 6, scope: !4094)
!4096 = !DILocation(line: 949, column: 6, scope: !4081)
!4097 = !DILocation(line: 950, column: 21, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 949, column: 25)
!4099 = !DILocation(line: 950, column: 3, scope: !4098)
!4100 = !DILocation(line: 951, column: 14, scope: !4098)
!4101 = !DILocation(line: 951, column: 3, scope: !4098)
!4102 = !DILocation(line: 952, column: 2, scope: !4098)
!4103 = !DILocation(line: 954, column: 16, scope: !4094)
!4104 = !DILocation(line: 954, column: 3, scope: !4094)
!4105 = !DILocation(line: 956, column: 21, scope: !4081)
!4106 = !DILocation(line: 956, column: 2, scope: !4081)
!4107 = !DILocation(line: 958, column: 27, scope: !4081)
!4108 = !DILocation(line: 958, column: 2, scope: !4081)
!4109 = !DILocation(line: 959, column: 24, scope: !4081)
!4110 = !DILocation(line: 959, column: 48, scope: !4081)
!4111 = !DILocation(line: 959, column: 2, scope: !4081)
!4112 = !DILocation(line: 961, column: 2, scope: !4081)
!4113 = distinct !DISubprogram(name: "TEXT_OT_unindent", scope: !3, file: !3, line: 995, type: !1205, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4114 = !DILocalVariable(name: "ot", arg: 1, scope: !4113, file: !3, line: 995, type: !1207)
!4115 = !DILocation(line: 995, column: 39, scope: !4113)
!4116 = !DILocation(line: 998, column: 2, scope: !4113)
!4117 = !DILocation(line: 998, column: 6, scope: !4113)
!4118 = !DILocation(line: 998, column: 11, scope: !4113)
!4119 = !DILocation(line: 999, column: 2, scope: !4113)
!4120 = !DILocation(line: 999, column: 6, scope: !4113)
!4121 = !DILocation(line: 999, column: 13, scope: !4113)
!4122 = !DILocation(line: 1000, column: 2, scope: !4113)
!4123 = !DILocation(line: 1000, column: 6, scope: !4113)
!4124 = !DILocation(line: 1000, column: 18, scope: !4113)
!4125 = !DILocation(line: 1003, column: 2, scope: !4113)
!4126 = !DILocation(line: 1003, column: 6, scope: !4113)
!4127 = !DILocation(line: 1003, column: 11, scope: !4113)
!4128 = !DILocation(line: 1004, column: 2, scope: !4113)
!4129 = !DILocation(line: 1004, column: 6, scope: !4113)
!4130 = !DILocation(line: 1004, column: 11, scope: !4113)
!4131 = !DILocation(line: 1005, column: 1, scope: !4113)
!4132 = distinct !DISubprogram(name: "text_unindent_exec", scope: !3, file: !3, line: 978, type: !2948, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4133 = !DILocalVariable(name: "C", arg: 1, scope: !4132, file: !3, line: 978, type: !2783)
!4134 = !DILocation(line: 978, column: 41, scope: !4132)
!4135 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4132, file: !3, line: 978, type: !2785)
!4136 = !DILocation(line: 978, column: 56, scope: !4132)
!4137 = !DILocalVariable(name: "text", scope: !4132, file: !3, line: 980, type: !2858)
!4138 = !DILocation(line: 980, column: 8, scope: !4132)
!4139 = !DILocation(line: 980, column: 34, scope: !4132)
!4140 = !DILocation(line: 980, column: 15, scope: !4132)
!4141 = !DILocation(line: 982, column: 46, scope: !4132)
!4142 = !DILocation(line: 982, column: 28, scope: !4132)
!4143 = !DILocation(line: 982, column: 2, scope: !4132)
!4144 = !DILocation(line: 984, column: 20, scope: !4132)
!4145 = !DILocation(line: 984, column: 2, scope: !4132)
!4146 = !DILocation(line: 985, column: 15, scope: !4132)
!4147 = !DILocation(line: 985, column: 2, scope: !4132)
!4148 = !DILocation(line: 987, column: 21, scope: !4132)
!4149 = !DILocation(line: 987, column: 2, scope: !4132)
!4150 = !DILocation(line: 989, column: 27, scope: !4132)
!4151 = !DILocation(line: 989, column: 2, scope: !4132)
!4152 = !DILocation(line: 990, column: 24, scope: !4132)
!4153 = !DILocation(line: 990, column: 48, scope: !4132)
!4154 = !DILocation(line: 990, column: 2, scope: !4132)
!4155 = !DILocation(line: 992, column: 2, scope: !4132)
!4156 = distinct !DISubprogram(name: "TEXT_OT_line_break", scope: !3, file: !3, line: 1043, type: !1205, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4157 = !DILocalVariable(name: "ot", arg: 1, scope: !4156, file: !3, line: 1043, type: !1207)
!4158 = !DILocation(line: 1043, column: 41, scope: !4156)
!4159 = !DILocation(line: 1046, column: 2, scope: !4156)
!4160 = !DILocation(line: 1046, column: 6, scope: !4156)
!4161 = !DILocation(line: 1046, column: 11, scope: !4156)
!4162 = !DILocation(line: 1047, column: 2, scope: !4156)
!4163 = !DILocation(line: 1047, column: 6, scope: !4156)
!4164 = !DILocation(line: 1047, column: 13, scope: !4156)
!4165 = !DILocation(line: 1048, column: 2, scope: !4156)
!4166 = !DILocation(line: 1048, column: 6, scope: !4156)
!4167 = !DILocation(line: 1048, column: 18, scope: !4156)
!4168 = !DILocation(line: 1051, column: 2, scope: !4156)
!4169 = !DILocation(line: 1051, column: 6, scope: !4156)
!4170 = !DILocation(line: 1051, column: 11, scope: !4156)
!4171 = !DILocation(line: 1052, column: 2, scope: !4156)
!4172 = !DILocation(line: 1052, column: 6, scope: !4156)
!4173 = !DILocation(line: 1052, column: 11, scope: !4156)
!4174 = !DILocation(line: 1053, column: 1, scope: !4156)
!4175 = distinct !DISubprogram(name: "text_line_break_exec", scope: !3, file: !3, line: 1009, type: !2948, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4176 = !DILocalVariable(name: "C", arg: 1, scope: !4175, file: !3, line: 1009, type: !2783)
!4177 = !DILocation(line: 1009, column: 43, scope: !4175)
!4178 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4175, file: !3, line: 1009, type: !2785)
!4179 = !DILocation(line: 1009, column: 58, scope: !4175)
!4180 = !DILocalVariable(name: "st", scope: !4175, file: !3, line: 1011, type: !2804)
!4181 = !DILocation(line: 1011, column: 13, scope: !4175)
!4182 = !DILocation(line: 1011, column: 36, scope: !4175)
!4183 = !DILocation(line: 1011, column: 18, scope: !4175)
!4184 = !DILocalVariable(name: "text", scope: !4175, file: !3, line: 1012, type: !2858)
!4185 = !DILocation(line: 1012, column: 8, scope: !4175)
!4186 = !DILocation(line: 1012, column: 34, scope: !4175)
!4187 = !DILocation(line: 1012, column: 15, scope: !4175)
!4188 = !DILocalVariable(name: "a", scope: !4175, file: !3, line: 1013, type: !1200)
!4189 = !DILocation(line: 1013, column: 6, scope: !4175)
!4190 = !DILocalVariable(name: "curts", scope: !4175, file: !3, line: 1013, type: !1200)
!4191 = !DILocation(line: 1013, column: 9, scope: !4175)
!4192 = !DILocalVariable(name: "space", scope: !4175, file: !3, line: 1014, type: !1200)
!4193 = !DILocation(line: 1014, column: 6, scope: !4175)
!4194 = !DILocation(line: 1014, column: 15, scope: !4175)
!4195 = !DILocation(line: 1014, column: 21, scope: !4175)
!4196 = !DILocation(line: 1014, column: 27, scope: !4175)
!4197 = !DILocation(line: 1014, column: 14, scope: !4175)
!4198 = !DILocation(line: 1014, column: 49, scope: !4175)
!4199 = !DILocation(line: 1014, column: 53, scope: !4175)
!4200 = !DILocation(line: 1016, column: 28, scope: !4175)
!4201 = !DILocation(line: 1016, column: 2, scope: !4175)
!4202 = !DILocation(line: 1019, column: 33, scope: !4175)
!4203 = !DILocation(line: 1019, column: 39, scope: !4175)
!4204 = !DILocation(line: 1019, column: 10, scope: !4175)
!4205 = !DILocation(line: 1019, column: 8, scope: !4175)
!4206 = !DILocation(line: 1020, column: 20, scope: !4175)
!4207 = !DILocation(line: 1020, column: 2, scope: !4175)
!4208 = !DILocation(line: 1022, column: 9, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 1022, column: 2)
!4210 = !DILocation(line: 1022, column: 7, scope: !4209)
!4211 = !DILocation(line: 1022, column: 14, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 1022, column: 2)
!4213 = !DILocation(line: 1022, column: 18, scope: !4212)
!4214 = !DILocation(line: 1022, column: 16, scope: !4212)
!4215 = !DILocation(line: 1022, column: 2, scope: !4209)
!4216 = !DILocation(line: 1023, column: 7, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 1023, column: 7)
!4218 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1022, column: 30)
!4219 = !DILocation(line: 1023, column: 13, scope: !4217)
!4220 = !DILocation(line: 1023, column: 19, scope: !4217)
!4221 = !DILocation(line: 1023, column: 7, scope: !4218)
!4222 = !DILocation(line: 1024, column: 17, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 1023, column: 39)
!4224 = !DILocation(line: 1024, column: 4, scope: !4223)
!4225 = !DILocation(line: 1025, column: 3, scope: !4223)
!4226 = !DILocation(line: 1027, column: 17, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 1026, column: 8)
!4228 = !DILocation(line: 1027, column: 4, scope: !4227)
!4229 = !DILocation(line: 1029, column: 2, scope: !4218)
!4230 = !DILocation(line: 1022, column: 26, scope: !4212)
!4231 = !DILocation(line: 1022, column: 2, scope: !4212)
!4232 = distinct !{!4232, !4215, !4233}
!4233 = !DILocation(line: 1029, column: 2, scope: !4209)
!4234 = !DILocation(line: 1031, column: 6, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 1031, column: 6)
!4236 = !DILocation(line: 1031, column: 12, scope: !4235)
!4237 = !DILocation(line: 1031, column: 6, scope: !4175)
!4238 = !DILocation(line: 1032, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !3, line: 1032, column: 7)
!4240 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1031, column: 18)
!4241 = !DILocation(line: 1032, column: 13, scope: !4239)
!4242 = !DILocation(line: 1032, column: 19, scope: !4239)
!4243 = !DILocation(line: 1032, column: 7, scope: !4240)
!4244 = !DILocation(line: 1033, column: 28, scope: !4239)
!4245 = !DILocation(line: 1033, column: 34, scope: !4239)
!4246 = !DILocation(line: 1033, column: 40, scope: !4239)
!4247 = !DILocation(line: 1033, column: 4, scope: !4239)
!4248 = !DILocation(line: 1034, column: 27, scope: !4240)
!4249 = !DILocation(line: 1034, column: 33, scope: !4240)
!4250 = !DILocation(line: 1034, column: 3, scope: !4240)
!4251 = !DILocation(line: 1035, column: 2, scope: !4240)
!4252 = !DILocation(line: 1037, column: 27, scope: !4175)
!4253 = !DILocation(line: 1037, column: 2, scope: !4175)
!4254 = !DILocation(line: 1038, column: 24, scope: !4175)
!4255 = !DILocation(line: 1038, column: 48, scope: !4175)
!4256 = !DILocation(line: 1038, column: 2, scope: !4175)
!4257 = !DILocation(line: 1040, column: 2, scope: !4175)
!4258 = distinct !DISubprogram(name: "TEXT_OT_comment", scope: !3, file: !3, line: 1076, type: !1205, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4259 = !DILocalVariable(name: "ot", arg: 1, scope: !4258, file: !3, line: 1076, type: !1207)
!4260 = !DILocation(line: 1076, column: 38, scope: !4258)
!4261 = !DILocation(line: 1079, column: 2, scope: !4258)
!4262 = !DILocation(line: 1079, column: 6, scope: !4258)
!4263 = !DILocation(line: 1079, column: 11, scope: !4258)
!4264 = !DILocation(line: 1080, column: 2, scope: !4258)
!4265 = !DILocation(line: 1080, column: 6, scope: !4258)
!4266 = !DILocation(line: 1080, column: 13, scope: !4258)
!4267 = !DILocation(line: 1081, column: 2, scope: !4258)
!4268 = !DILocation(line: 1081, column: 6, scope: !4258)
!4269 = !DILocation(line: 1081, column: 18, scope: !4258)
!4270 = !DILocation(line: 1084, column: 2, scope: !4258)
!4271 = !DILocation(line: 1084, column: 6, scope: !4258)
!4272 = !DILocation(line: 1084, column: 11, scope: !4258)
!4273 = !DILocation(line: 1085, column: 2, scope: !4258)
!4274 = !DILocation(line: 1085, column: 6, scope: !4258)
!4275 = !DILocation(line: 1085, column: 11, scope: !4258)
!4276 = !DILocation(line: 1086, column: 1, scope: !4258)
!4277 = distinct !DISubprogram(name: "text_comment_exec", scope: !3, file: !3, line: 1057, type: !2948, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4278 = !DILocalVariable(name: "C", arg: 1, scope: !4277, file: !3, line: 1057, type: !2783)
!4279 = !DILocation(line: 1057, column: 40, scope: !4277)
!4280 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4277, file: !3, line: 1057, type: !2785)
!4281 = !DILocation(line: 1057, column: 55, scope: !4277)
!4282 = !DILocalVariable(name: "text", scope: !4277, file: !3, line: 1059, type: !2858)
!4283 = !DILocation(line: 1059, column: 8, scope: !4277)
!4284 = !DILocation(line: 1059, column: 34, scope: !4277)
!4285 = !DILocation(line: 1059, column: 15, scope: !4277)
!4286 = !DILocation(line: 1061, column: 18, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 1061, column: 6)
!4288 = !DILocation(line: 1061, column: 6, scope: !4287)
!4289 = !DILocation(line: 1061, column: 6, scope: !4277)
!4290 = !DILocation(line: 1062, column: 47, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 1061, column: 25)
!4292 = !DILocation(line: 1062, column: 29, scope: !4291)
!4293 = !DILocation(line: 1062, column: 3, scope: !4291)
!4294 = !DILocation(line: 1064, column: 21, scope: !4291)
!4295 = !DILocation(line: 1064, column: 3, scope: !4291)
!4296 = !DILocation(line: 1065, column: 15, scope: !4291)
!4297 = !DILocation(line: 1065, column: 3, scope: !4291)
!4298 = !DILocation(line: 1066, column: 22, scope: !4291)
!4299 = !DILocation(line: 1066, column: 3, scope: !4291)
!4300 = !DILocation(line: 1068, column: 28, scope: !4291)
!4301 = !DILocation(line: 1068, column: 3, scope: !4291)
!4302 = !DILocation(line: 1069, column: 25, scope: !4291)
!4303 = !DILocation(line: 1069, column: 49, scope: !4291)
!4304 = !DILocation(line: 1069, column: 3, scope: !4291)
!4305 = !DILocation(line: 1070, column: 3, scope: !4291)
!4306 = !DILocation(line: 1073, column: 2, scope: !4277)
!4307 = !DILocation(line: 1074, column: 1, scope: !4277)
!4308 = distinct !DISubprogram(name: "TEXT_OT_uncomment", scope: !3, file: !3, line: 1110, type: !1205, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4309 = !DILocalVariable(name: "ot", arg: 1, scope: !4308, file: !3, line: 1110, type: !1207)
!4310 = !DILocation(line: 1110, column: 40, scope: !4308)
!4311 = !DILocation(line: 1113, column: 2, scope: !4308)
!4312 = !DILocation(line: 1113, column: 6, scope: !4308)
!4313 = !DILocation(line: 1113, column: 11, scope: !4308)
!4314 = !DILocation(line: 1114, column: 2, scope: !4308)
!4315 = !DILocation(line: 1114, column: 6, scope: !4308)
!4316 = !DILocation(line: 1114, column: 13, scope: !4308)
!4317 = !DILocation(line: 1115, column: 2, scope: !4308)
!4318 = !DILocation(line: 1115, column: 6, scope: !4308)
!4319 = !DILocation(line: 1115, column: 18, scope: !4308)
!4320 = !DILocation(line: 1118, column: 2, scope: !4308)
!4321 = !DILocation(line: 1118, column: 6, scope: !4308)
!4322 = !DILocation(line: 1118, column: 11, scope: !4308)
!4323 = !DILocation(line: 1119, column: 2, scope: !4308)
!4324 = !DILocation(line: 1119, column: 6, scope: !4308)
!4325 = !DILocation(line: 1119, column: 11, scope: !4308)
!4326 = !DILocation(line: 1120, column: 1, scope: !4308)
!4327 = distinct !DISubprogram(name: "text_uncomment_exec", scope: !3, file: !3, line: 1090, type: !2948, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4328 = !DILocalVariable(name: "C", arg: 1, scope: !4327, file: !3, line: 1090, type: !2783)
!4329 = !DILocation(line: 1090, column: 42, scope: !4327)
!4330 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4327, file: !3, line: 1090, type: !2785)
!4331 = !DILocation(line: 1090, column: 57, scope: !4327)
!4332 = !DILocalVariable(name: "text", scope: !4327, file: !3, line: 1092, type: !2858)
!4333 = !DILocation(line: 1092, column: 8, scope: !4327)
!4334 = !DILocation(line: 1092, column: 34, scope: !4327)
!4335 = !DILocation(line: 1092, column: 15, scope: !4327)
!4336 = !DILocation(line: 1094, column: 18, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 1094, column: 6)
!4338 = !DILocation(line: 1094, column: 6, scope: !4337)
!4339 = !DILocation(line: 1094, column: 6, scope: !4327)
!4340 = !DILocation(line: 1095, column: 47, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1094, column: 25)
!4342 = !DILocation(line: 1095, column: 29, scope: !4341)
!4343 = !DILocation(line: 1095, column: 3, scope: !4341)
!4344 = !DILocation(line: 1097, column: 21, scope: !4341)
!4345 = !DILocation(line: 1097, column: 3, scope: !4341)
!4346 = !DILocation(line: 1098, column: 17, scope: !4341)
!4347 = !DILocation(line: 1098, column: 3, scope: !4341)
!4348 = !DILocation(line: 1099, column: 22, scope: !4341)
!4349 = !DILocation(line: 1099, column: 3, scope: !4341)
!4350 = !DILocation(line: 1101, column: 28, scope: !4341)
!4351 = !DILocation(line: 1101, column: 3, scope: !4341)
!4352 = !DILocation(line: 1102, column: 25, scope: !4341)
!4353 = !DILocation(line: 1102, column: 49, scope: !4341)
!4354 = !DILocation(line: 1102, column: 3, scope: !4341)
!4355 = !DILocation(line: 1104, column: 3, scope: !4341)
!4356 = !DILocation(line: 1107, column: 2, scope: !4327)
!4357 = !DILocation(line: 1108, column: 1, scope: !4327)
!4358 = distinct !DISubprogram(name: "TEXT_OT_convert_whitespace", scope: !3, file: !3, line: 1248, type: !1205, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4359 = !DILocalVariable(name: "ot", arg: 1, scope: !4358, file: !3, line: 1248, type: !1207)
!4360 = !DILocation(line: 1248, column: 49, scope: !4358)
!4361 = !DILocation(line: 1251, column: 2, scope: !4358)
!4362 = !DILocation(line: 1251, column: 6, scope: !4358)
!4363 = !DILocation(line: 1251, column: 11, scope: !4358)
!4364 = !DILocation(line: 1252, column: 2, scope: !4358)
!4365 = !DILocation(line: 1252, column: 6, scope: !4358)
!4366 = !DILocation(line: 1252, column: 13, scope: !4358)
!4367 = !DILocation(line: 1253, column: 2, scope: !4358)
!4368 = !DILocation(line: 1253, column: 6, scope: !4358)
!4369 = !DILocation(line: 1253, column: 18, scope: !4358)
!4370 = !DILocation(line: 1256, column: 2, scope: !4358)
!4371 = !DILocation(line: 1256, column: 6, scope: !4358)
!4372 = !DILocation(line: 1256, column: 11, scope: !4358)
!4373 = !DILocation(line: 1257, column: 2, scope: !4358)
!4374 = !DILocation(line: 1257, column: 6, scope: !4358)
!4375 = !DILocation(line: 1257, column: 11, scope: !4358)
!4376 = !DILocation(line: 1260, column: 15, scope: !4358)
!4377 = !DILocation(line: 1260, column: 19, scope: !4358)
!4378 = !DILocation(line: 1260, column: 2, scope: !4358)
!4379 = !DILocation(line: 1261, column: 1, scope: !4358)
!4380 = distinct !DISubprogram(name: "text_convert_whitespace_exec", scope: !3, file: !3, line: 1130, type: !2948, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4381 = !DILocalVariable(name: "C", arg: 1, scope: !4380, file: !3, line: 1130, type: !2783)
!4382 = !DILocation(line: 1130, column: 51, scope: !4380)
!4383 = !DILocalVariable(name: "op", arg: 2, scope: !4380, file: !3, line: 1130, type: !2785)
!4384 = !DILocation(line: 1130, column: 66, scope: !4380)
!4385 = !DILocalVariable(name: "st", scope: !4380, file: !3, line: 1132, type: !2804)
!4386 = !DILocation(line: 1132, column: 13, scope: !4380)
!4387 = !DILocation(line: 1132, column: 36, scope: !4380)
!4388 = !DILocation(line: 1132, column: 18, scope: !4380)
!4389 = !DILocalVariable(name: "text", scope: !4380, file: !3, line: 1133, type: !2858)
!4390 = !DILocation(line: 1133, column: 8, scope: !4380)
!4391 = !DILocation(line: 1133, column: 34, scope: !4380)
!4392 = !DILocation(line: 1133, column: 15, scope: !4380)
!4393 = !DILocalVariable(name: "tmp", scope: !4380, file: !3, line: 1134, type: !2398)
!4394 = !DILocation(line: 1134, column: 12, scope: !4380)
!4395 = !DILocalVariable(name: "fs", scope: !4380, file: !3, line: 1135, type: !4396)
!4396 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlattenString", file: !4397, line: 42, baseType: !4398)
!4397 = !DIFile(filename: "blender/source/blender/editors/space_text/text_format.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FlattenString", file: !4397, line: 35, size: 10432, elements: !4399)
!4399 = !{!4400, !4401, !4403, !4404, !4406, !4407}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "fixedbuf", scope: !4398, file: !4397, line: 36, baseType: !1530, size: 2048)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "fixedaccum", scope: !4398, file: !4397, line: 37, baseType: !4402, size: 8192, offset: 2048)
!4402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 8192, elements: !1531)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4398, file: !4397, line: 39, baseType: !1460, size: 64, offset: 10240)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !4398, file: !4397, line: 40, baseType: !4405, size: 64, offset: 10304)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4398, file: !4397, line: 41, baseType: !1200, size: 32, offset: 10368)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4398, file: !4397, line: 41, baseType: !1200, size: 32, offset: 10400)
!4408 = !DILocation(line: 1135, column: 16, scope: !4380)
!4409 = !DILocalVariable(name: "a", scope: !4380, file: !3, line: 1136, type: !1196)
!4410 = !DILocation(line: 1136, column: 9, scope: !4380)
!4411 = !DILocalVariable(name: "j", scope: !4380, file: !3, line: 1136, type: !1196)
!4412 = !DILocation(line: 1136, column: 12, scope: !4380)
!4413 = !DILocalVariable(name: "new_line", scope: !4380, file: !3, line: 1137, type: !1460)
!4414 = !DILocation(line: 1137, column: 8, scope: !4380)
!4415 = !DILocalVariable(name: "extra", scope: !4380, file: !3, line: 1138, type: !1200)
!4416 = !DILocation(line: 1138, column: 6, scope: !4380)
!4417 = !DILocalVariable(name: "number", scope: !4380, file: !3, line: 1138, type: !1200)
!4418 = !DILocation(line: 1138, column: 13, scope: !4380)
!4419 = !DILocalVariable(name: "type", scope: !4380, file: !3, line: 1139, type: !1200)
!4420 = !DILocation(line: 1139, column: 6, scope: !4380)
!4421 = !DILocation(line: 1139, column: 26, scope: !4380)
!4422 = !DILocation(line: 1139, column: 30, scope: !4380)
!4423 = !DILocation(line: 1139, column: 13, scope: !4380)
!4424 = !DILocation(line: 1143, column: 13, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 1143, column: 2)
!4426 = !DILocation(line: 1143, column: 19, scope: !4425)
!4427 = !DILocation(line: 1143, column: 25, scope: !4425)
!4428 = !DILocation(line: 1143, column: 11, scope: !4425)
!4429 = !DILocation(line: 1143, column: 7, scope: !4425)
!4430 = !DILocation(line: 1143, column: 32, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 1143, column: 2)
!4432 = !DILocation(line: 1143, column: 2, scope: !4425)
!4433 = !DILocalVariable(name: "text_check_line", scope: !4434, file: !3, line: 1144, type: !1213)
!4434 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 1143, column: 54)
!4435 = !DILocation(line: 1144, column: 15, scope: !4434)
!4436 = !DILocation(line: 1144, column: 37, scope: !4434)
!4437 = !DILocation(line: 1144, column: 42, scope: !4434)
!4438 = !DILocalVariable(name: "text_check_line_len", scope: !4434, file: !3, line: 1145, type: !3399)
!4439 = !DILocation(line: 1145, column: 15, scope: !4434)
!4440 = !DILocation(line: 1145, column: 37, scope: !4434)
!4441 = !DILocation(line: 1145, column: 42, scope: !4434)
!4442 = !DILocation(line: 1146, column: 27, scope: !4434)
!4443 = !DILocation(line: 1146, column: 36, scope: !4434)
!4444 = !DILocation(line: 1146, column: 12, scope: !4434)
!4445 = !DILocation(line: 1146, column: 53, scope: !4434)
!4446 = !DILocation(line: 1146, column: 10, scope: !4434)
!4447 = !DILocation(line: 1147, column: 3, scope: !4434)
!4448 = !DILocation(line: 1148, column: 14, scope: !4434)
!4449 = !DILocation(line: 1148, column: 26, scope: !4434)
!4450 = !DILocation(line: 1148, column: 12, scope: !4434)
!4451 = !DILocation(line: 1149, column: 5, scope: !4434)
!4452 = !DILocation(line: 1150, column: 10, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1150, column: 3)
!4454 = !DILocation(line: 1150, column: 8, scope: !4453)
!4455 = !DILocation(line: 1150, column: 15, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 1150, column: 3)
!4457 = !DILocation(line: 1150, column: 19, scope: !4456)
!4458 = !DILocation(line: 1150, column: 17, scope: !4456)
!4459 = !DILocation(line: 1150, column: 3, scope: !4453)
!4460 = !DILocation(line: 1151, column: 8, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 1151, column: 8)
!4462 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 1150, column: 45)
!4463 = !DILocation(line: 1151, column: 24, scope: !4461)
!4464 = !DILocation(line: 1151, column: 27, scope: !4461)
!4465 = !DILocation(line: 1151, column: 8, scope: !4462)
!4466 = !DILocation(line: 1154, column: 5, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1151, column: 36)
!4468 = !DILocation(line: 1154, column: 14, scope: !4467)
!4469 = !DILocation(line: 1154, column: 17, scope: !4467)
!4470 = !DILocation(line: 1155, column: 29, scope: !4467)
!4471 = !DILocation(line: 1155, column: 38, scope: !4467)
!4472 = !DILocation(line: 1155, column: 14, scope: !4467)
!4473 = !DILocation(line: 1155, column: 12, scope: !4467)
!4474 = !DILocation(line: 1156, column: 5, scope: !4467)
!4475 = !DILocation(line: 1157, column: 5, scope: !4467)
!4476 = !DILocation(line: 1157, column: 14, scope: !4467)
!4477 = !DILocation(line: 1157, column: 17, scope: !4467)
!4478 = !DILocation(line: 1158, column: 5, scope: !4467)
!4479 = !DILocation(line: 1158, column: 14, scope: !4467)
!4480 = !DILocation(line: 1158, column: 16, scope: !4467)
!4481 = !DILocation(line: 1158, column: 21, scope: !4467)
!4482 = !DILocation(line: 1159, column: 29, scope: !4467)
!4483 = !DILocation(line: 1159, column: 38, scope: !4467)
!4484 = !DILocation(line: 1159, column: 14, scope: !4467)
!4485 = !DILocation(line: 1159, column: 50, scope: !4467)
!4486 = !DILocation(line: 1159, column: 48, scope: !4467)
!4487 = !DILocation(line: 1159, column: 12, scope: !4467)
!4488 = !DILocation(line: 1160, column: 5, scope: !4467)
!4489 = !DILocation(line: 1162, column: 16, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1162, column: 5)
!4491 = !DILocation(line: 1162, column: 10, scope: !4490)
!4492 = !DILocation(line: 1162, column: 21, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 1162, column: 5)
!4494 = !DILocation(line: 1162, column: 29, scope: !4493)
!4495 = !DILocation(line: 1162, column: 27, scope: !4493)
!4496 = !DILocation(line: 1162, column: 5, scope: !4490)
!4497 = !DILocation(line: 1163, column: 6, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 1162, column: 46)
!4499 = !DILocation(line: 1163, column: 15, scope: !4498)
!4500 = !DILocation(line: 1163, column: 18, scope: !4498)
!4501 = !DILocation(line: 1164, column: 7, scope: !4498)
!4502 = !DILocation(line: 1165, column: 5, scope: !4498)
!4503 = !DILocation(line: 1162, column: 42, scope: !4493)
!4504 = !DILocation(line: 1162, column: 5, scope: !4493)
!4505 = distinct !{!4505, !4496, !4506}
!4506 = !DILocation(line: 1165, column: 5, scope: !4490)
!4507 = !DILocation(line: 1166, column: 4, scope: !4467)
!4508 = !DILocation(line: 1168, column: 19, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1167, column: 9)
!4510 = !DILocation(line: 1168, column: 35, scope: !4509)
!4511 = !DILocation(line: 1168, column: 5, scope: !4509)
!4512 = !DILocation(line: 1168, column: 14, scope: !4509)
!4513 = !DILocation(line: 1168, column: 17, scope: !4509)
!4514 = !DILocation(line: 1169, column: 6, scope: !4509)
!4515 = !DILocation(line: 1171, column: 3, scope: !4462)
!4516 = !DILocation(line: 1150, column: 41, scope: !4456)
!4517 = !DILocation(line: 1150, column: 3, scope: !4456)
!4518 = distinct !{!4518, !4459, !4519}
!4519 = !DILocation(line: 1171, column: 3, scope: !4453)
!4520 = !DILocation(line: 1172, column: 3, scope: !4434)
!4521 = !DILocation(line: 1172, column: 12, scope: !4434)
!4522 = !DILocation(line: 1172, column: 15, scope: !4434)
!4523 = !DILocation(line: 1174, column: 7, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1174, column: 7)
!4525 = !DILocation(line: 1174, column: 12, scope: !4524)
!4526 = !DILocation(line: 1174, column: 7, scope: !4434)
!4527 = !DILocation(line: 1174, column: 18, scope: !4524)
!4528 = !DILocation(line: 1174, column: 28, scope: !4524)
!4529 = !DILocation(line: 1174, column: 33, scope: !4524)
!4530 = !DILocation(line: 1175, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 1175, column: 7)
!4532 = !DILocation(line: 1175, column: 12, scope: !4531)
!4533 = !DILocation(line: 1175, column: 7, scope: !4434)
!4534 = !DILocation(line: 1175, column: 20, scope: !4531)
!4535 = !DILocation(line: 1175, column: 30, scope: !4531)
!4536 = !DILocation(line: 1175, column: 35, scope: !4531)
!4537 = !DILocation(line: 1177, column: 15, scope: !4434)
!4538 = !DILocation(line: 1177, column: 3, scope: !4434)
!4539 = !DILocation(line: 1177, column: 8, scope: !4434)
!4540 = !DILocation(line: 1177, column: 13, scope: !4434)
!4541 = !DILocation(line: 1178, column: 21, scope: !4434)
!4542 = !DILocation(line: 1178, column: 14, scope: !4434)
!4543 = !DILocation(line: 1178, column: 3, scope: !4434)
!4544 = !DILocation(line: 1178, column: 8, scope: !4434)
!4545 = !DILocation(line: 1178, column: 12, scope: !4434)
!4546 = !DILocation(line: 1179, column: 3, scope: !4434)
!4547 = !DILocation(line: 1179, column: 8, scope: !4434)
!4548 = !DILocation(line: 1179, column: 15, scope: !4434)
!4549 = !DILocation(line: 1180, column: 2, scope: !4434)
!4550 = !DILocation(line: 1143, column: 43, scope: !4431)
!4551 = !DILocation(line: 1143, column: 48, scope: !4431)
!4552 = !DILocation(line: 1143, column: 41, scope: !4431)
!4553 = !DILocation(line: 1143, column: 2, scope: !4431)
!4554 = distinct !{!4554, !4432, !4555}
!4555 = !DILocation(line: 1180, column: 2, scope: !4425)
!4556 = !DILocation(line: 1182, column: 6, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 1182, column: 6)
!4558 = !DILocation(line: 1182, column: 11, scope: !4557)
!4559 = !DILocation(line: 1182, column: 6, scope: !4380)
!4560 = !DILocation(line: 1185, column: 14, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 1185, column: 3)
!4562 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 1182, column: 23)
!4563 = !DILocation(line: 1185, column: 20, scope: !4561)
!4564 = !DILocation(line: 1185, column: 26, scope: !4561)
!4565 = !DILocation(line: 1185, column: 12, scope: !4561)
!4566 = !DILocation(line: 1185, column: 8, scope: !4561)
!4567 = !DILocation(line: 1185, column: 33, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 1185, column: 3)
!4569 = !DILocation(line: 1185, column: 3, scope: !4561)
!4570 = !DILocalVariable(name: "text_check_line", scope: !4571, file: !3, line: 1186, type: !1213)
!4571 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 1185, column: 55)
!4572 = !DILocation(line: 1186, column: 16, scope: !4571)
!4573 = !DILocation(line: 1186, column: 38, scope: !4571)
!4574 = !DILocation(line: 1186, column: 43, scope: !4571)
!4575 = !DILocalVariable(name: "text_check_line_len", scope: !4571, file: !3, line: 1187, type: !3399)
!4576 = !DILocation(line: 1187, column: 16, scope: !4571)
!4577 = !DILocation(line: 1187, column: 38, scope: !4571)
!4578 = !DILocation(line: 1187, column: 43, scope: !4571)
!4579 = !DILocation(line: 1188, column: 10, scope: !4571)
!4580 = !DILocation(line: 1189, column: 11, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 1189, column: 4)
!4582 = !DILocation(line: 1189, column: 9, scope: !4581)
!4583 = !DILocation(line: 1189, column: 16, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 1189, column: 4)
!4585 = !DILocation(line: 1189, column: 20, scope: !4584)
!4586 = !DILocation(line: 1189, column: 18, scope: !4584)
!4587 = !DILocation(line: 1189, column: 4, scope: !4581)
!4588 = !DILocation(line: 1190, column: 12, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1189, column: 46)
!4590 = !DILocation(line: 1191, column: 12, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 1191, column: 5)
!4592 = !DILocation(line: 1191, column: 10, scope: !4591)
!4593 = !DILocation(line: 1191, column: 17, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 1191, column: 5)
!4595 = !DILocation(line: 1191, column: 29, scope: !4594)
!4596 = !DILocation(line: 1191, column: 33, scope: !4594)
!4597 = !DILocation(line: 1191, column: 21, scope: !4594)
!4598 = !DILocation(line: 1191, column: 19, scope: !4594)
!4599 = !DILocation(line: 1191, column: 5, scope: !4591)
!4600 = !DILocation(line: 1192, column: 11, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1192, column: 10)
!4602 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1191, column: 49)
!4603 = !DILocation(line: 1192, column: 15, scope: !4601)
!4604 = !DILocation(line: 1192, column: 13, scope: !4601)
!4605 = !DILocation(line: 1192, column: 21, scope: !4601)
!4606 = !DILocation(line: 1192, column: 18, scope: !4601)
!4607 = !DILocation(line: 1192, column: 10, scope: !4602)
!4608 = !DILocation(line: 1193, column: 11, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1193, column: 11)
!4610 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 1192, column: 42)
!4611 = !DILocation(line: 1193, column: 27, scope: !4609)
!4612 = !DILocation(line: 1193, column: 31, scope: !4609)
!4613 = !DILocation(line: 1193, column: 29, scope: !4609)
!4614 = !DILocation(line: 1193, column: 34, scope: !4609)
!4615 = !DILocation(line: 1193, column: 11, scope: !4610)
!4616 = !DILocation(line: 1194, column: 15, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 1193, column: 42)
!4618 = !DILocation(line: 1195, column: 7, scope: !4617)
!4619 = !DILocation(line: 1196, column: 6, scope: !4610)
!4620 = !DILocation(line: 1197, column: 5, scope: !4602)
!4621 = !DILocation(line: 1191, column: 45, scope: !4594)
!4622 = !DILocation(line: 1191, column: 5, scope: !4594)
!4623 = distinct !{!4623, !4599, !4624}
!4624 = !DILocation(line: 1197, column: 5, scope: !4591)
!4625 = !DILocation(line: 1198, column: 10, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 1198, column: 9)
!4627 = !DILocation(line: 1198, column: 9, scope: !4589)
!4628 = !DILocation(line: 1199, column: 10, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4626, file: !3, line: 1198, column: 18)
!4630 = !DILocation(line: 1199, column: 15, scope: !4629)
!4631 = !DILocation(line: 1199, column: 19, scope: !4629)
!4632 = !DILocation(line: 1199, column: 29, scope: !4629)
!4633 = !DILocation(line: 1199, column: 14, scope: !4629)
!4634 = !DILocation(line: 1199, column: 12, scope: !4629)
!4635 = !DILocation(line: 1199, column: 8, scope: !4629)
!4636 = !DILocation(line: 1200, column: 14, scope: !4629)
!4637 = !DILocation(line: 1200, column: 20, scope: !4629)
!4638 = !DILocation(line: 1200, column: 12, scope: !4629)
!4639 = !DILocation(line: 1201, column: 5, scope: !4629)
!4640 = !DILocation(line: 1202, column: 4, scope: !4589)
!4641 = !DILocation(line: 1189, column: 42, scope: !4584)
!4642 = !DILocation(line: 1189, column: 4, scope: !4584)
!4643 = distinct !{!4643, !4587, !4644}
!4644 = !DILocation(line: 1202, column: 4, scope: !4581)
!4645 = !DILocation(line: 1204, column: 8, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 1204, column: 8)
!4647 = !DILocation(line: 1204, column: 14, scope: !4646)
!4648 = !DILocation(line: 1204, column: 8, scope: !4571)
!4649 = !DILocation(line: 1205, column: 16, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 1204, column: 19)
!4651 = !DILocation(line: 1205, column: 28, scope: !4650)
!4652 = !DILocation(line: 1205, column: 53, scope: !4650)
!4653 = !DILocation(line: 1205, column: 57, scope: !4650)
!4654 = !DILocation(line: 1205, column: 69, scope: !4650)
!4655 = !DILocation(line: 1205, column: 67, scope: !4650)
!4656 = !DILocation(line: 1205, column: 78, scope: !4650)
!4657 = !DILocation(line: 1205, column: 76, scope: !4650)
!4658 = !DILocation(line: 1205, column: 85, scope: !4650)
!4659 = !DILocation(line: 1205, column: 48, scope: !4650)
!4660 = !DILocation(line: 1205, column: 14, scope: !4650)
!4661 = !DILocation(line: 1206, column: 11, scope: !4650)
!4662 = !DILocation(line: 1207, column: 12, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1207, column: 5)
!4664 = !DILocation(line: 1207, column: 10, scope: !4663)
!4665 = !DILocation(line: 1207, column: 17, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 1207, column: 5)
!4667 = !DILocation(line: 1207, column: 21, scope: !4666)
!4668 = !DILocation(line: 1207, column: 19, scope: !4666)
!4669 = !DILocation(line: 1207, column: 5, scope: !4663)
!4670 = !DILocation(line: 1208, column: 13, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 1207, column: 47)
!4672 = !DILocation(line: 1209, column: 13, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 1209, column: 6)
!4674 = !DILocation(line: 1209, column: 11, scope: !4673)
!4675 = !DILocation(line: 1209, column: 18, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 1209, column: 6)
!4677 = !DILocation(line: 1209, column: 30, scope: !4676)
!4678 = !DILocation(line: 1209, column: 34, scope: !4676)
!4679 = !DILocation(line: 1209, column: 22, scope: !4676)
!4680 = !DILocation(line: 1209, column: 20, scope: !4676)
!4681 = !DILocation(line: 1209, column: 6, scope: !4673)
!4682 = !DILocation(line: 1210, column: 12, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1210, column: 11)
!4684 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 1209, column: 50)
!4685 = !DILocation(line: 1210, column: 16, scope: !4683)
!4686 = !DILocation(line: 1210, column: 14, scope: !4683)
!4687 = !DILocation(line: 1210, column: 22, scope: !4683)
!4688 = !DILocation(line: 1210, column: 19, scope: !4683)
!4689 = !DILocation(line: 1210, column: 11, scope: !4684)
!4690 = !DILocation(line: 1211, column: 12, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 1211, column: 12)
!4692 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1210, column: 43)
!4693 = !DILocation(line: 1211, column: 28, scope: !4691)
!4694 = !DILocation(line: 1211, column: 32, scope: !4691)
!4695 = !DILocation(line: 1211, column: 30, scope: !4691)
!4696 = !DILocation(line: 1211, column: 35, scope: !4691)
!4697 = !DILocation(line: 1211, column: 12, scope: !4692)
!4698 = !DILocation(line: 1212, column: 16, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 1211, column: 43)
!4700 = !DILocation(line: 1213, column: 8, scope: !4699)
!4701 = !DILocation(line: 1214, column: 7, scope: !4692)
!4702 = !DILocation(line: 1215, column: 6, scope: !4684)
!4703 = !DILocation(line: 1209, column: 46, scope: !4676)
!4704 = !DILocation(line: 1209, column: 6, scope: !4676)
!4705 = distinct !{!4705, !4681, !4706}
!4706 = !DILocation(line: 1215, column: 6, scope: !4673)
!4707 = !DILocation(line: 1217, column: 11, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 1217, column: 10)
!4709 = !DILocation(line: 1217, column: 10, scope: !4671)
!4710 = !DILocation(line: 1218, column: 7, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1217, column: 19)
!4712 = !DILocation(line: 1218, column: 16, scope: !4711)
!4713 = !DILocation(line: 1218, column: 23, scope: !4711)
!4714 = !DILocation(line: 1219, column: 11, scope: !4711)
!4715 = !DILocation(line: 1219, column: 16, scope: !4711)
!4716 = !DILocation(line: 1219, column: 20, scope: !4711)
!4717 = !DILocation(line: 1219, column: 30, scope: !4711)
!4718 = !DILocation(line: 1219, column: 15, scope: !4711)
!4719 = !DILocation(line: 1219, column: 13, scope: !4711)
!4720 = !DILocation(line: 1219, column: 9, scope: !4711)
!4721 = !DILocation(line: 1220, column: 12, scope: !4711)
!4722 = !DILocation(line: 1222, column: 6, scope: !4711)
!4723 = !DILocation(line: 1224, column: 25, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1223, column: 11)
!4725 = !DILocation(line: 1224, column: 41, scope: !4724)
!4726 = !DILocation(line: 1224, column: 7, scope: !4724)
!4727 = !DILocation(line: 1224, column: 16, scope: !4724)
!4728 = !DILocation(line: 1224, column: 23, scope: !4724)
!4729 = !DILocation(line: 1225, column: 12, scope: !4724)
!4730 = !DILocation(line: 1227, column: 5, scope: !4671)
!4731 = !DILocation(line: 1207, column: 43, scope: !4666)
!4732 = !DILocation(line: 1207, column: 5, scope: !4666)
!4733 = distinct !{!4733, !4669, !4734}
!4734 = !DILocation(line: 1227, column: 5, scope: !4663)
!4735 = !DILocation(line: 1228, column: 5, scope: !4650)
!4736 = !DILocation(line: 1228, column: 14, scope: !4650)
!4737 = !DILocation(line: 1228, column: 21, scope: !4650)
!4738 = !DILocation(line: 1230, column: 9, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1230, column: 9)
!4740 = !DILocation(line: 1230, column: 14, scope: !4739)
!4741 = !DILocation(line: 1230, column: 9, scope: !4650)
!4742 = !DILocation(line: 1230, column: 20, scope: !4739)
!4743 = !DILocation(line: 1230, column: 30, scope: !4739)
!4744 = !DILocation(line: 1230, column: 35, scope: !4739)
!4745 = !DILocation(line: 1231, column: 9, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1231, column: 9)
!4747 = !DILocation(line: 1231, column: 14, scope: !4746)
!4748 = !DILocation(line: 1231, column: 9, scope: !4650)
!4749 = !DILocation(line: 1231, column: 22, scope: !4746)
!4750 = !DILocation(line: 1231, column: 32, scope: !4746)
!4751 = !DILocation(line: 1231, column: 37, scope: !4746)
!4752 = !DILocation(line: 1233, column: 17, scope: !4650)
!4753 = !DILocation(line: 1233, column: 5, scope: !4650)
!4754 = !DILocation(line: 1233, column: 10, scope: !4650)
!4755 = !DILocation(line: 1233, column: 15, scope: !4650)
!4756 = !DILocation(line: 1234, column: 23, scope: !4650)
!4757 = !DILocation(line: 1234, column: 16, scope: !4650)
!4758 = !DILocation(line: 1234, column: 5, scope: !4650)
!4759 = !DILocation(line: 1234, column: 10, scope: !4650)
!4760 = !DILocation(line: 1234, column: 14, scope: !4650)
!4761 = !DILocation(line: 1235, column: 5, scope: !4650)
!4762 = !DILocation(line: 1235, column: 10, scope: !4650)
!4763 = !DILocation(line: 1235, column: 17, scope: !4650)
!4764 = !DILocation(line: 1236, column: 4, scope: !4650)
!4765 = !DILocation(line: 1237, column: 3, scope: !4571)
!4766 = !DILocation(line: 1185, column: 44, scope: !4568)
!4767 = !DILocation(line: 1185, column: 49, scope: !4568)
!4768 = !DILocation(line: 1185, column: 42, scope: !4568)
!4769 = !DILocation(line: 1185, column: 3, scope: !4568)
!4770 = distinct !{!4770, !4569, !4771}
!4771 = !DILocation(line: 1237, column: 3, scope: !4561)
!4772 = !DILocation(line: 1238, column: 2, scope: !4562)
!4773 = !DILocation(line: 1240, column: 21, scope: !4380)
!4774 = !DILocation(line: 1240, column: 2, scope: !4380)
!4775 = !DILocation(line: 1241, column: 27, scope: !4380)
!4776 = !DILocation(line: 1241, column: 2, scope: !4380)
!4777 = !DILocation(line: 1242, column: 28, scope: !4380)
!4778 = !DILocation(line: 1242, column: 2, scope: !4380)
!4779 = !DILocation(line: 1243, column: 24, scope: !4380)
!4780 = !DILocation(line: 1243, column: 48, scope: !4380)
!4781 = !DILocation(line: 1243, column: 2, scope: !4380)
!4782 = !DILocation(line: 1245, column: 2, scope: !4380)
!4783 = distinct !DISubprogram(name: "TEXT_OT_select_all", scope: !3, file: !3, line: 1277, type: !1205, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4784 = !DILocalVariable(name: "ot", arg: 1, scope: !4783, file: !3, line: 1277, type: !1207)
!4785 = !DILocation(line: 1277, column: 41, scope: !4783)
!4786 = !DILocation(line: 1280, column: 2, scope: !4783)
!4787 = !DILocation(line: 1280, column: 6, scope: !4783)
!4788 = !DILocation(line: 1280, column: 11, scope: !4783)
!4789 = !DILocation(line: 1281, column: 2, scope: !4783)
!4790 = !DILocation(line: 1281, column: 6, scope: !4783)
!4791 = !DILocation(line: 1281, column: 13, scope: !4783)
!4792 = !DILocation(line: 1282, column: 2, scope: !4783)
!4793 = !DILocation(line: 1282, column: 6, scope: !4783)
!4794 = !DILocation(line: 1282, column: 18, scope: !4783)
!4795 = !DILocation(line: 1285, column: 2, scope: !4783)
!4796 = !DILocation(line: 1285, column: 6, scope: !4783)
!4797 = !DILocation(line: 1285, column: 11, scope: !4783)
!4798 = !DILocation(line: 1286, column: 2, scope: !4783)
!4799 = !DILocation(line: 1286, column: 6, scope: !4783)
!4800 = !DILocation(line: 1286, column: 11, scope: !4783)
!4801 = !DILocation(line: 1287, column: 1, scope: !4783)
!4802 = distinct !DISubprogram(name: "text_select_all_exec", scope: !3, file: !3, line: 1265, type: !2948, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4803 = !DILocalVariable(name: "C", arg: 1, scope: !4802, file: !3, line: 1265, type: !2783)
!4804 = !DILocation(line: 1265, column: 43, scope: !4802)
!4805 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4802, file: !3, line: 1265, type: !2785)
!4806 = !DILocation(line: 1265, column: 58, scope: !4802)
!4807 = !DILocalVariable(name: "text", scope: !4802, file: !3, line: 1267, type: !2858)
!4808 = !DILocation(line: 1267, column: 8, scope: !4802)
!4809 = !DILocation(line: 1267, column: 34, scope: !4802)
!4810 = !DILocation(line: 1267, column: 15, scope: !4802)
!4811 = !DILocation(line: 1269, column: 14, scope: !4802)
!4812 = !DILocation(line: 1269, column: 2, scope: !4802)
!4813 = !DILocation(line: 1271, column: 27, scope: !4802)
!4814 = !DILocation(line: 1271, column: 2, scope: !4802)
!4815 = !DILocation(line: 1272, column: 24, scope: !4802)
!4816 = !DILocation(line: 1272, column: 48, scope: !4802)
!4817 = !DILocation(line: 1272, column: 2, scope: !4802)
!4818 = !DILocation(line: 1274, column: 2, scope: !4802)
!4819 = distinct !DISubprogram(name: "TEXT_OT_select_line", scope: !3, file: !3, line: 1303, type: !1205, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4820 = !DILocalVariable(name: "ot", arg: 1, scope: !4819, file: !3, line: 1303, type: !1207)
!4821 = !DILocation(line: 1303, column: 42, scope: !4819)
!4822 = !DILocation(line: 1306, column: 2, scope: !4819)
!4823 = !DILocation(line: 1306, column: 6, scope: !4819)
!4824 = !DILocation(line: 1306, column: 11, scope: !4819)
!4825 = !DILocation(line: 1307, column: 2, scope: !4819)
!4826 = !DILocation(line: 1307, column: 6, scope: !4819)
!4827 = !DILocation(line: 1307, column: 13, scope: !4819)
!4828 = !DILocation(line: 1308, column: 2, scope: !4819)
!4829 = !DILocation(line: 1308, column: 6, scope: !4819)
!4830 = !DILocation(line: 1308, column: 18, scope: !4819)
!4831 = !DILocation(line: 1311, column: 2, scope: !4819)
!4832 = !DILocation(line: 1311, column: 6, scope: !4819)
!4833 = !DILocation(line: 1311, column: 11, scope: !4819)
!4834 = !DILocation(line: 1312, column: 2, scope: !4819)
!4835 = !DILocation(line: 1312, column: 6, scope: !4819)
!4836 = !DILocation(line: 1312, column: 11, scope: !4819)
!4837 = !DILocation(line: 1313, column: 1, scope: !4819)
!4838 = distinct !DISubprogram(name: "text_select_line_exec", scope: !3, file: !3, line: 1291, type: !2948, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4839 = !DILocalVariable(name: "C", arg: 1, scope: !4838, file: !3, line: 1291, type: !2783)
!4840 = !DILocation(line: 1291, column: 44, scope: !4838)
!4841 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4838, file: !3, line: 1291, type: !2785)
!4842 = !DILocation(line: 1291, column: 59, scope: !4838)
!4843 = !DILocalVariable(name: "text", scope: !4838, file: !3, line: 1293, type: !2858)
!4844 = !DILocation(line: 1293, column: 8, scope: !4838)
!4845 = !DILocation(line: 1293, column: 34, scope: !4838)
!4846 = !DILocation(line: 1293, column: 15, scope: !4838)
!4847 = !DILocation(line: 1295, column: 15, scope: !4838)
!4848 = !DILocation(line: 1295, column: 2, scope: !4838)
!4849 = !DILocation(line: 1297, column: 27, scope: !4838)
!4850 = !DILocation(line: 1297, column: 2, scope: !4838)
!4851 = !DILocation(line: 1298, column: 24, scope: !4838)
!4852 = !DILocation(line: 1298, column: 48, scope: !4838)
!4853 = !DILocation(line: 1298, column: 2, scope: !4838)
!4854 = !DILocation(line: 1300, column: 2, scope: !4838)
!4855 = distinct !DISubprogram(name: "TEXT_OT_select_word", scope: !3, file: !3, line: 1332, type: !1205, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4856 = !DILocalVariable(name: "ot", arg: 1, scope: !4855, file: !3, line: 1332, type: !1207)
!4857 = !DILocation(line: 1332, column: 42, scope: !4855)
!4858 = !DILocation(line: 1335, column: 2, scope: !4855)
!4859 = !DILocation(line: 1335, column: 6, scope: !4855)
!4860 = !DILocation(line: 1335, column: 11, scope: !4855)
!4861 = !DILocation(line: 1336, column: 2, scope: !4855)
!4862 = !DILocation(line: 1336, column: 6, scope: !4855)
!4863 = !DILocation(line: 1336, column: 13, scope: !4855)
!4864 = !DILocation(line: 1337, column: 2, scope: !4855)
!4865 = !DILocation(line: 1337, column: 6, scope: !4855)
!4866 = !DILocation(line: 1337, column: 18, scope: !4855)
!4867 = !DILocation(line: 1340, column: 2, scope: !4855)
!4868 = !DILocation(line: 1340, column: 6, scope: !4855)
!4869 = !DILocation(line: 1340, column: 11, scope: !4855)
!4870 = !DILocation(line: 1341, column: 2, scope: !4855)
!4871 = !DILocation(line: 1341, column: 6, scope: !4855)
!4872 = !DILocation(line: 1341, column: 11, scope: !4855)
!4873 = !DILocation(line: 1342, column: 1, scope: !4855)
!4874 = distinct !DISubprogram(name: "text_select_word_exec", scope: !3, file: !3, line: 1317, type: !2948, scopeLine: 1318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4875 = !DILocalVariable(name: "C", arg: 1, scope: !4874, file: !3, line: 1317, type: !2783)
!4876 = !DILocation(line: 1317, column: 44, scope: !4874)
!4877 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !4874, file: !3, line: 1317, type: !2785)
!4878 = !DILocation(line: 1317, column: 59, scope: !4874)
!4879 = !DILocalVariable(name: "text", scope: !4874, file: !3, line: 1319, type: !2858)
!4880 = !DILocation(line: 1319, column: 8, scope: !4874)
!4881 = !DILocation(line: 1319, column: 34, scope: !4874)
!4882 = !DILocation(line: 1319, column: 15, scope: !4874)
!4883 = !DILocalVariable(name: "use_init_step", scope: !4874, file: !3, line: 1321, type: !3143)
!4884 = !DILocation(line: 1321, column: 13, scope: !4874)
!4885 = !DILocation(line: 1323, column: 16, scope: !4874)
!4886 = !DILocation(line: 1323, column: 2, scope: !4874)
!4887 = !DILocation(line: 1324, column: 17, scope: !4874)
!4888 = !DILocation(line: 1324, column: 2, scope: !4874)
!4889 = !DILocation(line: 1326, column: 27, scope: !4874)
!4890 = !DILocation(line: 1326, column: 2, scope: !4874)
!4891 = !DILocation(line: 1327, column: 24, scope: !4874)
!4892 = !DILocation(line: 1327, column: 48, scope: !4874)
!4893 = !DILocation(line: 1327, column: 2, scope: !4874)
!4894 = !DILocation(line: 1329, column: 2, scope: !4874)
!4895 = !DILocalVariable(name: "ot", arg: 1, scope: !1204, file: !3, line: 1363, type: !1207)
!4896 = !DILocation(line: 1363, column: 41, scope: !1204)
!4897 = !DILocation(line: 1372, column: 2, scope: !1204)
!4898 = !DILocation(line: 1372, column: 6, scope: !1204)
!4899 = !DILocation(line: 1372, column: 11, scope: !1204)
!4900 = !DILocation(line: 1373, column: 2, scope: !1204)
!4901 = !DILocation(line: 1373, column: 6, scope: !1204)
!4902 = !DILocation(line: 1373, column: 13, scope: !1204)
!4903 = !DILocation(line: 1374, column: 2, scope: !1204)
!4904 = !DILocation(line: 1374, column: 6, scope: !1204)
!4905 = !DILocation(line: 1374, column: 18, scope: !1204)
!4906 = !DILocation(line: 1377, column: 2, scope: !1204)
!4907 = !DILocation(line: 1377, column: 6, scope: !1204)
!4908 = !DILocation(line: 1377, column: 11, scope: !1204)
!4909 = !DILocation(line: 1378, column: 2, scope: !1204)
!4910 = !DILocation(line: 1378, column: 6, scope: !1204)
!4911 = !DILocation(line: 1378, column: 11, scope: !1204)
!4912 = !DILocation(line: 1381, column: 15, scope: !1204)
!4913 = !DILocation(line: 1381, column: 19, scope: !1204)
!4914 = !DILocation(line: 1381, column: 2, scope: !1204)
!4915 = !DILocation(line: 1382, column: 1, scope: !1204)
!4916 = distinct !DISubprogram(name: "move_lines_exec", scope: !3, file: !3, line: 1346, type: !2948, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4917 = !DILocalVariable(name: "C", arg: 1, scope: !4916, file: !3, line: 1346, type: !2783)
!4918 = !DILocation(line: 1346, column: 38, scope: !4916)
!4919 = !DILocalVariable(name: "op", arg: 2, scope: !4916, file: !3, line: 1346, type: !2785)
!4920 = !DILocation(line: 1346, column: 53, scope: !4916)
!4921 = !DILocalVariable(name: "text", scope: !4916, file: !3, line: 1348, type: !2858)
!4922 = !DILocation(line: 1348, column: 8, scope: !4916)
!4923 = !DILocation(line: 1348, column: 34, scope: !4916)
!4924 = !DILocation(line: 1348, column: 15, scope: !4916)
!4925 = !DILocalVariable(name: "direction", scope: !4916, file: !3, line: 1349, type: !3399)
!4926 = !DILocation(line: 1349, column: 12, scope: !4916)
!4927 = !DILocation(line: 1349, column: 37, scope: !4916)
!4928 = !DILocation(line: 1349, column: 41, scope: !4916)
!4929 = !DILocation(line: 1349, column: 24, scope: !4916)
!4930 = !DILocation(line: 1351, column: 17, scope: !4916)
!4931 = !DILocation(line: 1351, column: 23, scope: !4916)
!4932 = !DILocation(line: 1351, column: 2, scope: !4916)
!4933 = !DILocation(line: 1353, column: 27, scope: !4916)
!4934 = !DILocation(line: 1353, column: 2, scope: !4916)
!4935 = !DILocation(line: 1354, column: 24, scope: !4916)
!4936 = !DILocation(line: 1354, column: 48, scope: !4916)
!4937 = !DILocation(line: 1354, column: 2, scope: !4916)
!4938 = !DILocation(line: 1357, column: 24, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 1357, column: 6)
!4940 = !DILocation(line: 1357, column: 6, scope: !4939)
!4941 = !DILocation(line: 1357, column: 28, scope: !4939)
!4942 = !DILocation(line: 1357, column: 6, scope: !4916)
!4943 = !DILocation(line: 1358, column: 19, scope: !4939)
!4944 = !DILocation(line: 1358, column: 3, scope: !4939)
!4945 = !DILocation(line: 1360, column: 2, scope: !4916)
!4946 = distinct !DISubprogram(name: "TEXT_OT_move", scope: !3, file: !3, line: 1921, type: !1205, scopeLine: 1922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4947 = !DILocalVariable(name: "ot", arg: 1, scope: !4946, file: !3, line: 1921, type: !1207)
!4948 = !DILocation(line: 1921, column: 35, scope: !4946)
!4949 = !DILocation(line: 1924, column: 2, scope: !4946)
!4950 = !DILocation(line: 1924, column: 6, scope: !4946)
!4951 = !DILocation(line: 1924, column: 11, scope: !4946)
!4952 = !DILocation(line: 1925, column: 2, scope: !4946)
!4953 = !DILocation(line: 1925, column: 6, scope: !4946)
!4954 = !DILocation(line: 1925, column: 13, scope: !4946)
!4955 = !DILocation(line: 1926, column: 2, scope: !4946)
!4956 = !DILocation(line: 1926, column: 6, scope: !4946)
!4957 = !DILocation(line: 1926, column: 18, scope: !4946)
!4958 = !DILocation(line: 1929, column: 2, scope: !4946)
!4959 = !DILocation(line: 1929, column: 6, scope: !4946)
!4960 = !DILocation(line: 1929, column: 11, scope: !4946)
!4961 = !DILocation(line: 1930, column: 2, scope: !4946)
!4962 = !DILocation(line: 1930, column: 6, scope: !4946)
!4963 = !DILocation(line: 1930, column: 11, scope: !4946)
!4964 = !DILocation(line: 1933, column: 15, scope: !4946)
!4965 = !DILocation(line: 1933, column: 19, scope: !4946)
!4966 = !DILocation(line: 1933, column: 2, scope: !4946)
!4967 = !DILocation(line: 1934, column: 1, scope: !4946)
!4968 = distinct !DISubprogram(name: "text_move_exec", scope: !3, file: !3, line: 1914, type: !2948, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4969 = !DILocalVariable(name: "C", arg: 1, scope: !4968, file: !3, line: 1914, type: !2783)
!4970 = !DILocation(line: 1914, column: 37, scope: !4968)
!4971 = !DILocalVariable(name: "op", arg: 2, scope: !4968, file: !3, line: 1914, type: !2785)
!4972 = !DILocation(line: 1914, column: 52, scope: !4968)
!4973 = !DILocalVariable(name: "type", scope: !4968, file: !3, line: 1916, type: !1200)
!4974 = !DILocation(line: 1916, column: 6, scope: !4968)
!4975 = !DILocation(line: 1916, column: 26, scope: !4968)
!4976 = !DILocation(line: 1916, column: 30, scope: !4968)
!4977 = !DILocation(line: 1916, column: 13, scope: !4968)
!4978 = !DILocation(line: 1918, column: 26, scope: !4968)
!4979 = !DILocation(line: 1918, column: 29, scope: !4968)
!4980 = !DILocation(line: 1918, column: 9, scope: !4968)
!4981 = !DILocation(line: 1918, column: 2, scope: !4968)
!4982 = distinct !DISubprogram(name: "TEXT_OT_move_select", scope: !3, file: !3, line: 1945, type: !1205, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!4983 = !DILocalVariable(name: "ot", arg: 1, scope: !4982, file: !3, line: 1945, type: !1207)
!4984 = !DILocation(line: 1945, column: 42, scope: !4982)
!4985 = !DILocation(line: 1948, column: 2, scope: !4982)
!4986 = !DILocation(line: 1948, column: 6, scope: !4982)
!4987 = !DILocation(line: 1948, column: 11, scope: !4982)
!4988 = !DILocation(line: 1949, column: 2, scope: !4982)
!4989 = !DILocation(line: 1949, column: 6, scope: !4982)
!4990 = !DILocation(line: 1949, column: 13, scope: !4982)
!4991 = !DILocation(line: 1950, column: 2, scope: !4982)
!4992 = !DILocation(line: 1950, column: 6, scope: !4982)
!4993 = !DILocation(line: 1950, column: 18, scope: !4982)
!4994 = !DILocation(line: 1953, column: 2, scope: !4982)
!4995 = !DILocation(line: 1953, column: 6, scope: !4982)
!4996 = !DILocation(line: 1953, column: 11, scope: !4982)
!4997 = !DILocation(line: 1954, column: 2, scope: !4982)
!4998 = !DILocation(line: 1954, column: 6, scope: !4982)
!4999 = !DILocation(line: 1954, column: 11, scope: !4982)
!5000 = !DILocation(line: 1957, column: 15, scope: !4982)
!5001 = !DILocation(line: 1957, column: 19, scope: !4982)
!5002 = !DILocation(line: 1957, column: 2, scope: !4982)
!5003 = !DILocation(line: 1958, column: 1, scope: !4982)
!5004 = distinct !DISubprogram(name: "text_move_select_exec", scope: !3, file: !3, line: 1938, type: !2948, scopeLine: 1939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5005 = !DILocalVariable(name: "C", arg: 1, scope: !5004, file: !3, line: 1938, type: !2783)
!5006 = !DILocation(line: 1938, column: 44, scope: !5004)
!5007 = !DILocalVariable(name: "op", arg: 2, scope: !5004, file: !3, line: 1938, type: !2785)
!5008 = !DILocation(line: 1938, column: 59, scope: !5004)
!5009 = !DILocalVariable(name: "type", scope: !5004, file: !3, line: 1940, type: !1200)
!5010 = !DILocation(line: 1940, column: 6, scope: !5004)
!5011 = !DILocation(line: 1940, column: 26, scope: !5004)
!5012 = !DILocation(line: 1940, column: 30, scope: !5004)
!5013 = !DILocation(line: 1940, column: 13, scope: !5004)
!5014 = !DILocation(line: 1942, column: 26, scope: !5004)
!5015 = !DILocation(line: 1942, column: 29, scope: !5004)
!5016 = !DILocation(line: 1942, column: 9, scope: !5004)
!5017 = !DILocation(line: 1942, column: 2, scope: !5004)
!5018 = distinct !DISubprogram(name: "TEXT_OT_jump", scope: !3, file: !3, line: 1987, type: !1205, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5019 = !DILocalVariable(name: "ot", arg: 1, scope: !5018, file: !3, line: 1987, type: !1207)
!5020 = !DILocation(line: 1987, column: 35, scope: !5018)
!5021 = !DILocalVariable(name: "prop", scope: !5018, file: !3, line: 1989, type: !2709)
!5022 = !DILocation(line: 1989, column: 15, scope: !5018)
!5023 = !DILocation(line: 1992, column: 2, scope: !5018)
!5024 = !DILocation(line: 1992, column: 6, scope: !5018)
!5025 = !DILocation(line: 1992, column: 11, scope: !5018)
!5026 = !DILocation(line: 1993, column: 2, scope: !5018)
!5027 = !DILocation(line: 1993, column: 6, scope: !5018)
!5028 = !DILocation(line: 1993, column: 13, scope: !5018)
!5029 = !DILocation(line: 1994, column: 2, scope: !5018)
!5030 = !DILocation(line: 1994, column: 6, scope: !5018)
!5031 = !DILocation(line: 1994, column: 18, scope: !5018)
!5032 = !DILocation(line: 1997, column: 2, scope: !5018)
!5033 = !DILocation(line: 1997, column: 6, scope: !5018)
!5034 = !DILocation(line: 1997, column: 13, scope: !5018)
!5035 = !DILocation(line: 1998, column: 2, scope: !5018)
!5036 = !DILocation(line: 1998, column: 6, scope: !5018)
!5037 = !DILocation(line: 1998, column: 11, scope: !5018)
!5038 = !DILocation(line: 1999, column: 2, scope: !5018)
!5039 = !DILocation(line: 1999, column: 6, scope: !5018)
!5040 = !DILocation(line: 1999, column: 11, scope: !5018)
!5041 = !DILocation(line: 2002, column: 21, scope: !5018)
!5042 = !DILocation(line: 2002, column: 25, scope: !5018)
!5043 = !DILocation(line: 2002, column: 9, scope: !5018)
!5044 = !DILocation(line: 2002, column: 7, scope: !5018)
!5045 = !DILocation(line: 2003, column: 39, scope: !5018)
!5046 = !DILocation(line: 2003, column: 2, scope: !5018)
!5047 = !DILocation(line: 2004, column: 1, scope: !5018)
!5048 = distinct !DISubprogram(name: "text_jump_invoke", scope: !3, file: !3, line: 1981, type: !2781, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5049 = !DILocalVariable(name: "C", arg: 1, scope: !5048, file: !3, line: 1981, type: !2783)
!5050 = !DILocation(line: 1981, column: 39, scope: !5048)
!5051 = !DILocalVariable(name: "op", arg: 2, scope: !5048, file: !3, line: 1981, type: !2785)
!5052 = !DILocation(line: 1981, column: 54, scope: !5048)
!5053 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5048, file: !3, line: 1981, type: !2787)
!5054 = !DILocation(line: 1981, column: 73, scope: !5048)
!5055 = !DILocation(line: 1983, column: 40, scope: !5048)
!5056 = !DILocation(line: 1983, column: 43, scope: !5048)
!5057 = !DILocation(line: 1983, column: 52, scope: !5048)
!5058 = !DILocation(line: 1983, column: 50, scope: !5048)
!5059 = !DILocation(line: 1983, column: 67, scope: !5048)
!5060 = !DILocation(line: 1983, column: 65, scope: !5048)
!5061 = !DILocation(line: 1983, column: 9, scope: !5048)
!5062 = !DILocation(line: 1983, column: 2, scope: !5048)
!5063 = distinct !DISubprogram(name: "text_jump_exec", scope: !3, file: !3, line: 1962, type: !2948, scopeLine: 1963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5064 = !DILocalVariable(name: "C", arg: 1, scope: !5063, file: !3, line: 1962, type: !2783)
!5065 = !DILocation(line: 1962, column: 37, scope: !5063)
!5066 = !DILocalVariable(name: "op", arg: 2, scope: !5063, file: !3, line: 1962, type: !2785)
!5067 = !DILocation(line: 1962, column: 52, scope: !5063)
!5068 = !DILocalVariable(name: "text", scope: !5063, file: !3, line: 1964, type: !2858)
!5069 = !DILocation(line: 1964, column: 8, scope: !5063)
!5070 = !DILocation(line: 1964, column: 34, scope: !5063)
!5071 = !DILocation(line: 1964, column: 15, scope: !5063)
!5072 = !DILocalVariable(name: "line", scope: !5063, file: !3, line: 1965, type: !1200)
!5073 = !DILocation(line: 1965, column: 6, scope: !5063)
!5074 = !DILocation(line: 1965, column: 25, scope: !5063)
!5075 = !DILocation(line: 1965, column: 29, scope: !5063)
!5076 = !DILocation(line: 1965, column: 13, scope: !5063)
!5077 = !DILocalVariable(name: "nlines", scope: !5063, file: !3, line: 1966, type: !1246)
!5078 = !DILocation(line: 1966, column: 8, scope: !5063)
!5079 = !DILocation(line: 1966, column: 30, scope: !5063)
!5080 = !DILocation(line: 1966, column: 36, scope: !5063)
!5081 = !DILocation(line: 1966, column: 42, scope: !5063)
!5082 = !DILocation(line: 1966, column: 49, scope: !5063)
!5083 = !DILocation(line: 1966, column: 55, scope: !5063)
!5084 = !DILocation(line: 1966, column: 61, scope: !5063)
!5085 = !DILocation(line: 1966, column: 17, scope: !5063)
!5086 = !DILocation(line: 1966, column: 67, scope: !5063)
!5087 = !DILocation(line: 1968, column: 6, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 1968, column: 6)
!5089 = !DILocation(line: 1968, column: 11, scope: !5088)
!5090 = !DILocation(line: 1968, column: 6, scope: !5063)
!5091 = !DILocation(line: 1969, column: 19, scope: !5088)
!5092 = !DILocation(line: 1969, column: 3, scope: !5088)
!5093 = !DILocation(line: 1970, column: 11, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1970, column: 11)
!5095 = !DILocation(line: 1970, column: 18, scope: !5094)
!5096 = !DILocation(line: 1970, column: 16, scope: !5094)
!5097 = !DILocation(line: 1970, column: 11, scope: !5088)
!5098 = !DILocation(line: 1971, column: 19, scope: !5094)
!5099 = !DILocation(line: 1971, column: 25, scope: !5094)
!5100 = !DILocation(line: 1971, column: 32, scope: !5094)
!5101 = !DILocation(line: 1971, column: 3, scope: !5094)
!5102 = !DILocation(line: 1973, column: 19, scope: !5094)
!5103 = !DILocation(line: 1973, column: 25, scope: !5094)
!5104 = !DILocation(line: 1973, column: 30, scope: !5094)
!5105 = !DILocation(line: 1973, column: 3, scope: !5094)
!5106 = !DILocation(line: 1975, column: 27, scope: !5063)
!5107 = !DILocation(line: 1975, column: 2, scope: !5063)
!5108 = !DILocation(line: 1976, column: 24, scope: !5063)
!5109 = !DILocation(line: 1976, column: 48, scope: !5063)
!5110 = !DILocation(line: 1976, column: 2, scope: !5063)
!5111 = !DILocation(line: 1978, column: 2, scope: !5063)
!5112 = distinct !DISubprogram(name: "TEXT_OT_delete", scope: !3, file: !3, line: 2061, type: !1205, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5113 = !DILocalVariable(name: "ot", arg: 1, scope: !5112, file: !3, line: 2061, type: !1207)
!5114 = !DILocation(line: 2061, column: 37, scope: !5112)
!5115 = !DILocation(line: 2064, column: 2, scope: !5112)
!5116 = !DILocation(line: 2064, column: 6, scope: !5112)
!5117 = !DILocation(line: 2064, column: 11, scope: !5112)
!5118 = !DILocation(line: 2065, column: 2, scope: !5112)
!5119 = !DILocation(line: 2065, column: 6, scope: !5112)
!5120 = !DILocation(line: 2065, column: 13, scope: !5112)
!5121 = !DILocation(line: 2066, column: 2, scope: !5112)
!5122 = !DILocation(line: 2066, column: 6, scope: !5112)
!5123 = !DILocation(line: 2066, column: 18, scope: !5112)
!5124 = !DILocation(line: 2069, column: 2, scope: !5112)
!5125 = !DILocation(line: 2069, column: 6, scope: !5112)
!5126 = !DILocation(line: 2069, column: 11, scope: !5112)
!5127 = !DILocation(line: 2070, column: 2, scope: !5112)
!5128 = !DILocation(line: 2070, column: 6, scope: !5112)
!5129 = !DILocation(line: 2070, column: 11, scope: !5112)
!5130 = !DILocation(line: 2073, column: 15, scope: !5112)
!5131 = !DILocation(line: 2073, column: 19, scope: !5112)
!5132 = !DILocation(line: 2073, column: 2, scope: !5112)
!5133 = !DILocation(line: 2074, column: 1, scope: !5112)
!5134 = distinct !DISubprogram(name: "text_delete_exec", scope: !3, file: !3, line: 2015, type: !2948, scopeLine: 2016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5135 = !DILocalVariable(name: "C", arg: 1, scope: !5134, file: !3, line: 2015, type: !2783)
!5136 = !DILocation(line: 2015, column: 39, scope: !5134)
!5137 = !DILocalVariable(name: "op", arg: 2, scope: !5134, file: !3, line: 2015, type: !2785)
!5138 = !DILocation(line: 2015, column: 54, scope: !5134)
!5139 = !DILocalVariable(name: "st", scope: !5134, file: !3, line: 2017, type: !2804)
!5140 = !DILocation(line: 2017, column: 13, scope: !5134)
!5141 = !DILocation(line: 2017, column: 36, scope: !5134)
!5142 = !DILocation(line: 2017, column: 18, scope: !5134)
!5143 = !DILocalVariable(name: "text", scope: !5134, file: !3, line: 2018, type: !2858)
!5144 = !DILocation(line: 2018, column: 8, scope: !5134)
!5145 = !DILocation(line: 2018, column: 34, scope: !5134)
!5146 = !DILocation(line: 2018, column: 15, scope: !5134)
!5147 = !DILocalVariable(name: "type", scope: !5134, file: !3, line: 2019, type: !1200)
!5148 = !DILocation(line: 2019, column: 6, scope: !5134)
!5149 = !DILocation(line: 2019, column: 26, scope: !5134)
!5150 = !DILocation(line: 2019, column: 30, scope: !5134)
!5151 = !DILocation(line: 2019, column: 13, scope: !5134)
!5152 = !DILocation(line: 2021, column: 28, scope: !5134)
!5153 = !DILocation(line: 2021, column: 2, scope: !5134)
!5154 = !DILocation(line: 2025, column: 18, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2025, column: 6)
!5156 = !DILocation(line: 2025, column: 6, scope: !5155)
!5157 = !DILocation(line: 2025, column: 6, scope: !5134)
!5158 = !DILocation(line: 2026, column: 12, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 2026, column: 12)
!5160 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 2025, column: 25)
!5161 = !DILocation(line: 2026, column: 17, scope: !5159)
!5162 = !DILocation(line: 2026, column: 12, scope: !5160)
!5163 = !DILocation(line: 2026, column: 40, scope: !5159)
!5164 = !DILocation(line: 2026, column: 35, scope: !5159)
!5165 = !DILocation(line: 2027, column: 12, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2027, column: 12)
!5167 = !DILocation(line: 2027, column: 17, scope: !5166)
!5168 = !DILocation(line: 2027, column: 12, scope: !5159)
!5169 = !DILocation(line: 2027, column: 40, scope: !5166)
!5170 = !DILocation(line: 2027, column: 35, scope: !5166)
!5171 = !DILocation(line: 2028, column: 2, scope: !5160)
!5172 = !DILocation(line: 2030, column: 6, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2030, column: 6)
!5174 = !DILocation(line: 2030, column: 11, scope: !5173)
!5175 = !DILocation(line: 2030, column: 6, scope: !5134)
!5176 = !DILocation(line: 2031, column: 32, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 2031, column: 7)
!5178 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 2030, column: 29)
!5179 = !DILocation(line: 2031, column: 7, scope: !5177)
!5180 = !DILocation(line: 2031, column: 7, scope: !5178)
!5181 = !DILocation(line: 2032, column: 23, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 2031, column: 39)
!5183 = !DILocation(line: 2032, column: 4, scope: !5182)
!5184 = !DILocation(line: 2033, column: 3, scope: !5182)
!5185 = !DILocation(line: 2034, column: 22, scope: !5178)
!5186 = !DILocation(line: 2034, column: 3, scope: !5178)
!5187 = !DILocation(line: 2035, column: 2, scope: !5178)
!5188 = !DILocation(line: 2036, column: 11, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 2036, column: 11)
!5190 = !DILocation(line: 2036, column: 16, scope: !5189)
!5191 = !DILocation(line: 2036, column: 11, scope: !5173)
!5192 = !DILocation(line: 2037, column: 22, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2036, column: 34)
!5194 = !DILocation(line: 2037, column: 3, scope: !5193)
!5195 = !DILocation(line: 2038, column: 2, scope: !5193)
!5196 = !DILocation(line: 2039, column: 11, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2039, column: 11)
!5198 = !DILocation(line: 2039, column: 16, scope: !5197)
!5199 = !DILocation(line: 2039, column: 11, scope: !5189)
!5200 = !DILocation(line: 2040, column: 30, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2040, column: 7)
!5202 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 2039, column: 34)
!5203 = !DILocation(line: 2040, column: 7, scope: !5201)
!5204 = !DILocation(line: 2040, column: 7, scope: !5202)
!5205 = !DILocation(line: 2041, column: 20, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 2040, column: 37)
!5207 = !DILocation(line: 2041, column: 4, scope: !5206)
!5208 = !DILocation(line: 2042, column: 3, scope: !5206)
!5209 = !DILocation(line: 2043, column: 19, scope: !5202)
!5210 = !DILocation(line: 2043, column: 3, scope: !5202)
!5211 = !DILocation(line: 2044, column: 2, scope: !5202)
!5212 = !DILocation(line: 2045, column: 11, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 2045, column: 11)
!5214 = !DILocation(line: 2045, column: 16, scope: !5213)
!5215 = !DILocation(line: 2045, column: 11, scope: !5197)
!5216 = !DILocation(line: 2046, column: 19, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 2045, column: 34)
!5218 = !DILocation(line: 2046, column: 3, scope: !5217)
!5219 = !DILocation(line: 2047, column: 2, scope: !5217)
!5220 = !DILocation(line: 2049, column: 26, scope: !5134)
!5221 = !DILocation(line: 2049, column: 32, scope: !5134)
!5222 = !DILocation(line: 2049, column: 2, scope: !5134)
!5223 = !DILocation(line: 2051, column: 27, scope: !5134)
!5224 = !DILocation(line: 2051, column: 2, scope: !5134)
!5225 = !DILocation(line: 2052, column: 24, scope: !5134)
!5226 = !DILocation(line: 2052, column: 48, scope: !5134)
!5227 = !DILocation(line: 2052, column: 2, scope: !5134)
!5228 = !DILocation(line: 2055, column: 6, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2055, column: 6)
!5230 = !DILocation(line: 2055, column: 10, scope: !5229)
!5231 = !DILocation(line: 2055, column: 6, scope: !5134)
!5232 = !DILocation(line: 2056, column: 19, scope: !5229)
!5233 = !DILocation(line: 2056, column: 3, scope: !5229)
!5234 = !DILocation(line: 2058, column: 2, scope: !5134)
!5235 = distinct !DISubprogram(name: "TEXT_OT_overwrite_toggle", scope: !3, file: !3, line: 2089, type: !1205, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5236 = !DILocalVariable(name: "ot", arg: 1, scope: !5235, file: !3, line: 2089, type: !1207)
!5237 = !DILocation(line: 2089, column: 47, scope: !5235)
!5238 = !DILocation(line: 2092, column: 2, scope: !5235)
!5239 = !DILocation(line: 2092, column: 6, scope: !5235)
!5240 = !DILocation(line: 2092, column: 11, scope: !5235)
!5241 = !DILocation(line: 2093, column: 2, scope: !5235)
!5242 = !DILocation(line: 2093, column: 6, scope: !5235)
!5243 = !DILocation(line: 2093, column: 13, scope: !5235)
!5244 = !DILocation(line: 2094, column: 2, scope: !5235)
!5245 = !DILocation(line: 2094, column: 6, scope: !5235)
!5246 = !DILocation(line: 2094, column: 18, scope: !5235)
!5247 = !DILocation(line: 2097, column: 2, scope: !5235)
!5248 = !DILocation(line: 2097, column: 6, scope: !5235)
!5249 = !DILocation(line: 2097, column: 11, scope: !5235)
!5250 = !DILocation(line: 2098, column: 2, scope: !5235)
!5251 = !DILocation(line: 2098, column: 6, scope: !5235)
!5252 = !DILocation(line: 2098, column: 11, scope: !5235)
!5253 = !DILocation(line: 2099, column: 1, scope: !5235)
!5254 = distinct !DISubprogram(name: "text_toggle_overwrite_exec", scope: !3, file: !3, line: 2078, type: !2948, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5255 = !DILocalVariable(name: "C", arg: 1, scope: !5254, file: !3, line: 2078, type: !2783)
!5256 = !DILocation(line: 2078, column: 49, scope: !5254)
!5257 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5254, file: !3, line: 2078, type: !2785)
!5258 = !DILocation(line: 2078, column: 64, scope: !5254)
!5259 = !DILocalVariable(name: "st", scope: !5254, file: !3, line: 2080, type: !2804)
!5260 = !DILocation(line: 2080, column: 13, scope: !5254)
!5261 = !DILocation(line: 2080, column: 36, scope: !5254)
!5262 = !DILocation(line: 2080, column: 18, scope: !5254)
!5263 = !DILocation(line: 2082, column: 19, scope: !5254)
!5264 = !DILocation(line: 2082, column: 23, scope: !5254)
!5265 = !DILocation(line: 2082, column: 18, scope: !5254)
!5266 = !DILocation(line: 2082, column: 2, scope: !5254)
!5267 = !DILocation(line: 2082, column: 6, scope: !5254)
!5268 = !DILocation(line: 2082, column: 16, scope: !5254)
!5269 = !DILocation(line: 2084, column: 24, scope: !5254)
!5270 = !DILocation(line: 2084, column: 48, scope: !5254)
!5271 = !DILocation(line: 2084, column: 52, scope: !5254)
!5272 = !DILocation(line: 2084, column: 2, scope: !5254)
!5273 = !DILocation(line: 2086, column: 2, scope: !5254)
!5274 = distinct !DISubprogram(name: "TEXT_OT_scroll", scope: !3, file: !3, line: 2297, type: !1205, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5275 = !DILocalVariable(name: "ot", arg: 1, scope: !5274, file: !3, line: 2297, type: !1207)
!5276 = !DILocation(line: 2297, column: 37, scope: !5274)
!5277 = !DILocation(line: 2300, column: 2, scope: !5274)
!5278 = !DILocation(line: 2300, column: 6, scope: !5274)
!5279 = !DILocation(line: 2300, column: 11, scope: !5274)
!5280 = !DILocation(line: 2304, column: 2, scope: !5274)
!5281 = !DILocation(line: 2304, column: 6, scope: !5274)
!5282 = !DILocation(line: 2304, column: 13, scope: !5274)
!5283 = !DILocation(line: 2305, column: 2, scope: !5274)
!5284 = !DILocation(line: 2305, column: 6, scope: !5274)
!5285 = !DILocation(line: 2305, column: 18, scope: !5274)
!5286 = !DILocation(line: 2308, column: 2, scope: !5274)
!5287 = !DILocation(line: 2308, column: 6, scope: !5274)
!5288 = !DILocation(line: 2308, column: 11, scope: !5274)
!5289 = !DILocation(line: 2309, column: 2, scope: !5274)
!5290 = !DILocation(line: 2309, column: 6, scope: !5274)
!5291 = !DILocation(line: 2309, column: 13, scope: !5274)
!5292 = !DILocation(line: 2310, column: 2, scope: !5274)
!5293 = !DILocation(line: 2310, column: 6, scope: !5274)
!5294 = !DILocation(line: 2310, column: 12, scope: !5274)
!5295 = !DILocation(line: 2311, column: 2, scope: !5274)
!5296 = !DILocation(line: 2311, column: 6, scope: !5274)
!5297 = !DILocation(line: 2311, column: 13, scope: !5274)
!5298 = !DILocation(line: 2312, column: 2, scope: !5274)
!5299 = !DILocation(line: 2312, column: 6, scope: !5274)
!5300 = !DILocation(line: 2312, column: 11, scope: !5274)
!5301 = !DILocation(line: 2315, column: 2, scope: !5274)
!5302 = !DILocation(line: 2315, column: 6, scope: !5274)
!5303 = !DILocation(line: 2315, column: 11, scope: !5274)
!5304 = !DILocation(line: 2318, column: 14, scope: !5274)
!5305 = !DILocation(line: 2318, column: 18, scope: !5274)
!5306 = !DILocation(line: 2318, column: 2, scope: !5274)
!5307 = !DILocation(line: 2319, column: 1, scope: !5274)
!5308 = distinct !DISubprogram(name: "text_scroll_exec", scope: !3, file: !3, line: 2148, type: !2948, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5309 = !DILocalVariable(name: "C", arg: 1, scope: !5308, file: !3, line: 2148, type: !2783)
!5310 = !DILocation(line: 2148, column: 39, scope: !5308)
!5311 = !DILocalVariable(name: "op", arg: 2, scope: !5308, file: !3, line: 2148, type: !2785)
!5312 = !DILocation(line: 2148, column: 54, scope: !5308)
!5313 = !DILocalVariable(name: "st", scope: !5308, file: !3, line: 2150, type: !2804)
!5314 = !DILocation(line: 2150, column: 13, scope: !5308)
!5315 = !DILocation(line: 2150, column: 36, scope: !5308)
!5316 = !DILocation(line: 2150, column: 18, scope: !5308)
!5317 = !DILocalVariable(name: "ar", scope: !5308, file: !3, line: 2151, type: !3324)
!5318 = !DILocation(line: 2151, column: 11, scope: !5308)
!5319 = !DILocation(line: 2151, column: 30, scope: !5308)
!5320 = !DILocation(line: 2151, column: 16, scope: !5308)
!5321 = !DILocalVariable(name: "lines", scope: !5308, file: !3, line: 2153, type: !1200)
!5322 = !DILocation(line: 2153, column: 6, scope: !5308)
!5323 = !DILocation(line: 2153, column: 26, scope: !5308)
!5324 = !DILocation(line: 2153, column: 30, scope: !5308)
!5325 = !DILocation(line: 2153, column: 14, scope: !5308)
!5326 = !DILocation(line: 2155, column: 6, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 2155, column: 6)
!5328 = !DILocation(line: 2155, column: 12, scope: !5327)
!5329 = !DILocation(line: 2155, column: 6, scope: !5308)
!5330 = !DILocation(line: 2156, column: 3, scope: !5327)
!5331 = !DILocation(line: 2158, column: 18, scope: !5308)
!5332 = !DILocation(line: 2158, column: 22, scope: !5308)
!5333 = !DILocation(line: 2158, column: 26, scope: !5308)
!5334 = !DILocation(line: 2158, column: 36, scope: !5308)
!5335 = !DILocation(line: 2158, column: 34, scope: !5308)
!5336 = !DILocation(line: 2158, column: 32, scope: !5308)
!5337 = !DILocation(line: 2158, column: 2, scope: !5308)
!5338 = !DILocation(line: 2160, column: 33, scope: !5308)
!5339 = !DILocation(line: 2160, column: 21, scope: !5308)
!5340 = !DILocation(line: 2160, column: 2, scope: !5308)
!5341 = !DILocation(line: 2162, column: 2, scope: !5308)
!5342 = !DILocation(line: 2163, column: 1, scope: !5308)
!5343 = distinct !DISubprogram(name: "text_scroll_invoke", scope: !3, file: !3, line: 2262, type: !2781, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5344 = !DILocalVariable(name: "C", arg: 1, scope: !5343, file: !3, line: 2262, type: !2783)
!5345 = !DILocation(line: 2262, column: 41, scope: !5343)
!5346 = !DILocalVariable(name: "op", arg: 2, scope: !5343, file: !3, line: 2262, type: !2785)
!5347 = !DILocation(line: 2262, column: 56, scope: !5343)
!5348 = !DILocalVariable(name: "event", arg: 3, scope: !5343, file: !3, line: 2262, type: !2787)
!5349 = !DILocation(line: 2262, column: 75, scope: !5343)
!5350 = !DILocalVariable(name: "st", scope: !5343, file: !3, line: 2264, type: !2804)
!5351 = !DILocation(line: 2264, column: 13, scope: !5343)
!5352 = !DILocation(line: 2264, column: 36, scope: !5343)
!5353 = !DILocation(line: 2264, column: 18, scope: !5343)
!5354 = !DILocalVariable(name: "tsc", scope: !5343, file: !3, line: 2265, type: !5355)
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5356, size: 64)
!5356 = !DIDerivedType(tag: DW_TAG_typedef, name: "TextScroll", file: !3, line: 2140, baseType: !5357)
!5357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextScroll", file: !3, line: 2132, size: 224, elements: !5358)
!5358 = !{!5359, !5360, !5361, !5362, !5363}
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "old", scope: !5357, file: !3, line: 2133, baseType: !1601, size: 64)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5357, file: !3, line: 2134, baseType: !1601, size: 64, offset: 64)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !5357, file: !3, line: 2136, baseType: !1200, size: 32, offset: 128)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "scrollbar", scope: !5357, file: !3, line: 2137, baseType: !1200, size: 32, offset: 160)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !5357, file: !3, line: 2139, baseType: !1200, size: 32, offset: 192)
!5364 = !DILocation(line: 2265, column: 14, scope: !5343)
!5365 = !DILocation(line: 2267, column: 33, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 2267, column: 6)
!5367 = !DILocation(line: 2267, column: 37, scope: !5366)
!5368 = !DILocation(line: 2267, column: 6, scope: !5366)
!5369 = !DILocation(line: 2267, column: 6, scope: !5343)
!5370 = !DILocation(line: 2268, column: 27, scope: !5366)
!5371 = !DILocation(line: 2268, column: 30, scope: !5366)
!5372 = !DILocation(line: 2268, column: 10, scope: !5366)
!5373 = !DILocation(line: 2268, column: 3, scope: !5366)
!5374 = !DILocation(line: 2270, column: 8, scope: !5343)
!5375 = !DILocation(line: 2270, column: 6, scope: !5343)
!5376 = !DILocation(line: 2271, column: 2, scope: !5343)
!5377 = !DILocation(line: 2271, column: 7, scope: !5343)
!5378 = !DILocation(line: 2271, column: 13, scope: !5343)
!5379 = !DILocation(line: 2272, column: 2, scope: !5343)
!5380 = !DILocation(line: 2272, column: 7, scope: !5343)
!5381 = !DILocation(line: 2272, column: 12, scope: !5343)
!5382 = !DILocation(line: 2273, column: 19, scope: !5343)
!5383 = !DILocation(line: 2273, column: 2, scope: !5343)
!5384 = !DILocation(line: 2273, column: 6, scope: !5343)
!5385 = !DILocation(line: 2273, column: 17, scope: !5343)
!5386 = !DILocation(line: 2275, column: 2, scope: !5343)
!5387 = !DILocation(line: 2275, column: 6, scope: !5343)
!5388 = !DILocation(line: 2275, column: 12, scope: !5343)
!5389 = !DILocation(line: 2277, column: 6, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 2277, column: 6)
!5391 = !DILocation(line: 2277, column: 13, scope: !5390)
!5392 = !DILocation(line: 2277, column: 18, scope: !5390)
!5393 = !DILocation(line: 2277, column: 6, scope: !5343)
!5394 = !DILocation(line: 2278, column: 31, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 2277, column: 31)
!5396 = !DILocation(line: 2278, column: 3, scope: !5395)
!5397 = !DILocation(line: 2280, column: 17, scope: !5395)
!5398 = !DILocation(line: 2280, column: 24, scope: !5395)
!5399 = !DILocation(line: 2280, column: 3, scope: !5395)
!5400 = !DILocation(line: 2280, column: 8, scope: !5395)
!5401 = !DILocation(line: 2280, column: 15, scope: !5395)
!5402 = !DILocation(line: 2281, column: 17, scope: !5395)
!5403 = !DILocation(line: 2281, column: 24, scope: !5395)
!5404 = !DILocation(line: 2281, column: 3, scope: !5395)
!5405 = !DILocation(line: 2281, column: 8, scope: !5395)
!5406 = !DILocation(line: 2281, column: 15, scope: !5395)
!5407 = !DILocation(line: 2283, column: 20, scope: !5395)
!5408 = !DILocation(line: 2283, column: 27, scope: !5395)
!5409 = !DILocation(line: 2283, column: 31, scope: !5395)
!5410 = !DILocation(line: 2283, column: 38, scope: !5395)
!5411 = !DILocation(line: 2283, column: 29, scope: !5395)
!5412 = !DILocation(line: 2283, column: 47, scope: !5395)
!5413 = !DILocation(line: 2283, column: 51, scope: !5395)
!5414 = !DILocation(line: 2283, column: 45, scope: !5395)
!5415 = !DILocation(line: 2283, column: 58, scope: !5395)
!5416 = !DILocation(line: 2283, column: 3, scope: !5395)
!5417 = !DILocation(line: 2283, column: 8, scope: !5395)
!5418 = !DILocation(line: 2283, column: 17, scope: !5395)
!5419 = !DILocation(line: 2284, column: 20, scope: !5395)
!5420 = !DILocation(line: 2284, column: 27, scope: !5395)
!5421 = !DILocation(line: 2284, column: 31, scope: !5395)
!5422 = !DILocation(line: 2284, column: 38, scope: !5395)
!5423 = !DILocation(line: 2284, column: 29, scope: !5395)
!5424 = !DILocation(line: 2284, column: 47, scope: !5395)
!5425 = !DILocation(line: 2284, column: 51, scope: !5395)
!5426 = !DILocation(line: 2284, column: 45, scope: !5395)
!5427 = !DILocation(line: 2284, column: 63, scope: !5395)
!5428 = !DILocation(line: 2284, column: 3, scope: !5395)
!5429 = !DILocation(line: 2284, column: 8, scope: !5395)
!5430 = !DILocation(line: 2284, column: 17, scope: !5395)
!5431 = !DILocation(line: 2285, column: 3, scope: !5395)
!5432 = !DILocation(line: 2285, column: 8, scope: !5395)
!5433 = !DILocation(line: 2285, column: 14, scope: !5395)
!5434 = !DILocation(line: 2286, column: 3, scope: !5395)
!5435 = !DILocation(line: 2286, column: 8, scope: !5395)
!5436 = !DILocation(line: 2286, column: 18, scope: !5395)
!5437 = !DILocation(line: 2287, column: 21, scope: !5395)
!5438 = !DILocation(line: 2287, column: 24, scope: !5395)
!5439 = !DILocation(line: 2287, column: 28, scope: !5395)
!5440 = !DILocation(line: 2287, column: 3, scope: !5395)
!5441 = !DILocation(line: 2288, column: 15, scope: !5395)
!5442 = !DILocation(line: 2288, column: 18, scope: !5395)
!5443 = !DILocation(line: 2288, column: 3, scope: !5395)
!5444 = !DILocation(line: 2289, column: 3, scope: !5395)
!5445 = !DILocation(line: 2292, column: 29, scope: !5343)
!5446 = !DILocation(line: 2292, column: 32, scope: !5343)
!5447 = !DILocation(line: 2292, column: 2, scope: !5343)
!5448 = !DILocation(line: 2294, column: 2, scope: !5343)
!5449 = !DILocation(line: 2295, column: 1, scope: !5343)
!5450 = distinct !DISubprogram(name: "text_scroll_modal", scope: !3, file: !3, line: 2231, type: !2781, scopeLine: 2232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5451 = !DILocalVariable(name: "C", arg: 1, scope: !5450, file: !3, line: 2231, type: !2783)
!5452 = !DILocation(line: 2231, column: 40, scope: !5450)
!5453 = !DILocalVariable(name: "op", arg: 2, scope: !5450, file: !3, line: 2231, type: !2785)
!5454 = !DILocation(line: 2231, column: 55, scope: !5450)
!5455 = !DILocalVariable(name: "event", arg: 3, scope: !5450, file: !3, line: 2231, type: !2787)
!5456 = !DILocation(line: 2231, column: 74, scope: !5450)
!5457 = !DILocalVariable(name: "tsc", scope: !5450, file: !3, line: 2233, type: !5355)
!5458 = !DILocation(line: 2233, column: 14, scope: !5450)
!5459 = !DILocation(line: 2233, column: 20, scope: !5450)
!5460 = !DILocation(line: 2233, column: 24, scope: !5450)
!5461 = !DILocalVariable(name: "st", scope: !5450, file: !3, line: 2234, type: !2804)
!5462 = !DILocation(line: 2234, column: 13, scope: !5450)
!5463 = !DILocation(line: 2234, column: 36, scope: !5450)
!5464 = !DILocation(line: 2234, column: 18, scope: !5450)
!5465 = !DILocalVariable(name: "ar", scope: !5450, file: !3, line: 2235, type: !3324)
!5466 = !DILocation(line: 2235, column: 11, scope: !5450)
!5467 = !DILocation(line: 2235, column: 30, scope: !5450)
!5468 = !DILocation(line: 2235, column: 16, scope: !5450)
!5469 = !DILocation(line: 2237, column: 10, scope: !5450)
!5470 = !DILocation(line: 2237, column: 17, scope: !5450)
!5471 = !DILocation(line: 2237, column: 2, scope: !5450)
!5472 = !DILocation(line: 2239, column: 8, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 2239, column: 8)
!5474 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 2237, column: 23)
!5475 = !DILocation(line: 2239, column: 13, scope: !5473)
!5476 = !DILocation(line: 2239, column: 18, scope: !5473)
!5477 = !DILocation(line: 2239, column: 8, scope: !5474)
!5478 = !DILocation(line: 2240, column: 23, scope: !5473)
!5479 = !DILocation(line: 2240, column: 26, scope: !5473)
!5480 = !DILocation(line: 2240, column: 30, scope: !5473)
!5481 = !DILocation(line: 2240, column: 5, scope: !5473)
!5482 = !DILocation(line: 2241, column: 4, scope: !5474)
!5483 = !DILocation(line: 2245, column: 8, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 2245, column: 8)
!5485 = !DILocation(line: 2245, column: 8, scope: !5474)
!5486 = !DILocation(line: 2246, column: 21, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 2245, column: 77)
!5488 = !DILocation(line: 2246, column: 25, scope: !5487)
!5489 = !DILocation(line: 2246, column: 29, scope: !5487)
!5490 = !DILocation(line: 2246, column: 33, scope: !5487)
!5491 = !DILocation(line: 2246, column: 46, scope: !5487)
!5492 = !DILocation(line: 2246, column: 51, scope: !5487)
!5493 = !DILocation(line: 2246, column: 56, scope: !5487)
!5494 = !DILocation(line: 2246, column: 43, scope: !5487)
!5495 = !DILocation(line: 2246, column: 5, scope: !5487)
!5496 = !DILocation(line: 2248, column: 36, scope: !5487)
!5497 = !DILocation(line: 2248, column: 24, scope: !5487)
!5498 = !DILocation(line: 2248, column: 5, scope: !5487)
!5499 = !DILocation(line: 2249, column: 4, scope: !5487)
!5500 = !DILocation(line: 2250, column: 16, scope: !5474)
!5501 = !DILocation(line: 2250, column: 19, scope: !5474)
!5502 = !DILocation(line: 2250, column: 4, scope: !5474)
!5503 = !DILocation(line: 2251, column: 4, scope: !5474)
!5504 = !DILocation(line: 2254, column: 2, scope: !5450)
!5505 = !DILocation(line: 2255, column: 1, scope: !5450)
!5506 = distinct !DISubprogram(name: "text_scroll_cancel", scope: !3, file: !3, line: 2257, type: !3278, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5507 = !DILocalVariable(name: "C", arg: 1, scope: !5506, file: !3, line: 2257, type: !2783)
!5508 = !DILocation(line: 2257, column: 42, scope: !5506)
!5509 = !DILocalVariable(name: "op", arg: 2, scope: !5506, file: !3, line: 2257, type: !2785)
!5510 = !DILocation(line: 2257, column: 57, scope: !5506)
!5511 = !DILocation(line: 2259, column: 14, scope: !5506)
!5512 = !DILocation(line: 2259, column: 17, scope: !5506)
!5513 = !DILocation(line: 2259, column: 2, scope: !5506)
!5514 = !DILocation(line: 2260, column: 1, scope: !5506)
!5515 = distinct !DISubprogram(name: "text_scroll_poll", scope: !3, file: !3, line: 2142, type: !2799, scopeLine: 2143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5516 = !DILocalVariable(name: "C", arg: 1, scope: !5515, file: !3, line: 2142, type: !2783)
!5517 = !DILocation(line: 2142, column: 39, scope: !5515)
!5518 = !DILocation(line: 2145, column: 28, scope: !5515)
!5519 = !DILocation(line: 2145, column: 9, scope: !5515)
!5520 = !DILocation(line: 2145, column: 31, scope: !5515)
!5521 = !DILocation(line: 2145, column: 2, scope: !5515)
!5522 = distinct !DISubprogram(name: "TEXT_OT_scroll_bar", scope: !3, file: !3, line: 2389, type: !1205, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5523 = !DILocalVariable(name: "ot", arg: 1, scope: !5522, file: !3, line: 2389, type: !1207)
!5524 = !DILocation(line: 2389, column: 41, scope: !5522)
!5525 = !DILocation(line: 2392, column: 2, scope: !5522)
!5526 = !DILocation(line: 2392, column: 6, scope: !5522)
!5527 = !DILocation(line: 2392, column: 11, scope: !5522)
!5528 = !DILocation(line: 2396, column: 2, scope: !5522)
!5529 = !DILocation(line: 2396, column: 6, scope: !5522)
!5530 = !DILocation(line: 2396, column: 13, scope: !5522)
!5531 = !DILocation(line: 2397, column: 2, scope: !5522)
!5532 = !DILocation(line: 2397, column: 6, scope: !5522)
!5533 = !DILocation(line: 2397, column: 18, scope: !5522)
!5534 = !DILocation(line: 2400, column: 2, scope: !5522)
!5535 = !DILocation(line: 2400, column: 6, scope: !5522)
!5536 = !DILocation(line: 2400, column: 13, scope: !5522)
!5537 = !DILocation(line: 2401, column: 2, scope: !5522)
!5538 = !DILocation(line: 2401, column: 6, scope: !5522)
!5539 = !DILocation(line: 2401, column: 12, scope: !5522)
!5540 = !DILocation(line: 2402, column: 2, scope: !5522)
!5541 = !DILocation(line: 2402, column: 6, scope: !5522)
!5542 = !DILocation(line: 2402, column: 13, scope: !5522)
!5543 = !DILocation(line: 2403, column: 2, scope: !5522)
!5544 = !DILocation(line: 2403, column: 6, scope: !5522)
!5545 = !DILocation(line: 2403, column: 11, scope: !5522)
!5546 = !DILocation(line: 2406, column: 2, scope: !5522)
!5547 = !DILocation(line: 2406, column: 6, scope: !5522)
!5548 = !DILocation(line: 2406, column: 11, scope: !5522)
!5549 = !DILocation(line: 2409, column: 14, scope: !5522)
!5550 = !DILocation(line: 2409, column: 18, scope: !5522)
!5551 = !DILocation(line: 2409, column: 2, scope: !5522)
!5552 = !DILocation(line: 2410, column: 1, scope: !5522)
!5553 = distinct !DISubprogram(name: "text_scroll_bar_invoke", scope: !3, file: !3, line: 2339, type: !2781, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5554 = !DILocalVariable(name: "C", arg: 1, scope: !5553, file: !3, line: 2339, type: !2783)
!5555 = !DILocation(line: 2339, column: 45, scope: !5553)
!5556 = !DILocalVariable(name: "op", arg: 2, scope: !5553, file: !3, line: 2339, type: !2785)
!5557 = !DILocation(line: 2339, column: 60, scope: !5553)
!5558 = !DILocalVariable(name: "event", arg: 3, scope: !5553, file: !3, line: 2339, type: !2787)
!5559 = !DILocation(line: 2339, column: 79, scope: !5553)
!5560 = !DILocalVariable(name: "st", scope: !5553, file: !3, line: 2341, type: !2804)
!5561 = !DILocation(line: 2341, column: 13, scope: !5553)
!5562 = !DILocation(line: 2341, column: 36, scope: !5553)
!5563 = !DILocation(line: 2341, column: 18, scope: !5553)
!5564 = !DILocalVariable(name: "ar", scope: !5553, file: !3, line: 2342, type: !3324)
!5565 = !DILocation(line: 2342, column: 11, scope: !5553)
!5566 = !DILocation(line: 2342, column: 30, scope: !5553)
!5567 = !DILocation(line: 2342, column: 16, scope: !5553)
!5568 = !DILocalVariable(name: "tsc", scope: !5553, file: !3, line: 2343, type: !5355)
!5569 = !DILocation(line: 2343, column: 14, scope: !5553)
!5570 = !DILocalVariable(name: "mval", scope: !5553, file: !3, line: 2344, type: !5571)
!5571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!5572 = !DILocation(line: 2344, column: 13, scope: !5553)
!5573 = !DILocation(line: 2344, column: 20, scope: !5553)
!5574 = !DILocation(line: 2344, column: 27, scope: !5553)
!5575 = !DILocalVariable(name: "zone", scope: !5553, file: !3, line: 2345, type: !1200)
!5576 = !DILocation(line: 2345, column: 6, scope: !5553)
!5577 = !DILocation(line: 2347, column: 33, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2347, column: 6)
!5579 = !DILocation(line: 2347, column: 37, scope: !5578)
!5580 = !DILocation(line: 2347, column: 6, scope: !5578)
!5581 = !DILocation(line: 2347, column: 6, scope: !5553)
!5582 = !DILocation(line: 2348, column: 27, scope: !5578)
!5583 = !DILocation(line: 2348, column: 30, scope: !5578)
!5584 = !DILocation(line: 2348, column: 10, scope: !5578)
!5585 = !DILocation(line: 2348, column: 3, scope: !5578)
!5586 = !DILocation(line: 2351, column: 6, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2351, column: 6)
!5588 = !DILocation(line: 2351, column: 16, scope: !5587)
!5589 = !DILocation(line: 2351, column: 20, scope: !5587)
!5590 = !DILocation(line: 2351, column: 27, scope: !5587)
!5591 = !DILocation(line: 2351, column: 14, scope: !5587)
!5592 = !DILocation(line: 2351, column: 32, scope: !5587)
!5593 = !DILocation(line: 2351, column: 35, scope: !5587)
!5594 = !DILocation(line: 2351, column: 45, scope: !5587)
!5595 = !DILocation(line: 2351, column: 49, scope: !5587)
!5596 = !DILocation(line: 2351, column: 56, scope: !5587)
!5597 = !DILocation(line: 2351, column: 43, scope: !5587)
!5598 = !DILocation(line: 2351, column: 6, scope: !5553)
!5599 = !DILocation(line: 2352, column: 7, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 2352, column: 7)
!5601 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 2351, column: 62)
!5602 = !DILocation(line: 2352, column: 18, scope: !5600)
!5603 = !DILocation(line: 2352, column: 22, scope: !5600)
!5604 = !DILocation(line: 2352, column: 29, scope: !5600)
!5605 = !DILocation(line: 2352, column: 15, scope: !5600)
!5606 = !DILocation(line: 2352, column: 34, scope: !5600)
!5607 = !DILocation(line: 2352, column: 37, scope: !5600)
!5608 = !DILocation(line: 2352, column: 48, scope: !5600)
!5609 = !DILocation(line: 2352, column: 52, scope: !5600)
!5610 = !DILocation(line: 2352, column: 59, scope: !5600)
!5611 = !DILocation(line: 2352, column: 45, scope: !5600)
!5612 = !DILocation(line: 2352, column: 7, scope: !5601)
!5613 = !DILocation(line: 2354, column: 9, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 2352, column: 65)
!5615 = !DILocation(line: 2355, column: 3, scope: !5614)
!5616 = !DILocation(line: 2356, column: 12, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 2356, column: 12)
!5618 = !DILocation(line: 2356, column: 22, scope: !5617)
!5619 = !DILocation(line: 2356, column: 20, scope: !5617)
!5620 = !DILocation(line: 2356, column: 39, scope: !5617)
!5621 = !DILocation(line: 2356, column: 42, scope: !5617)
!5622 = !DILocation(line: 2356, column: 52, scope: !5617)
!5623 = !DILocation(line: 2356, column: 56, scope: !5617)
!5624 = !DILocation(line: 2356, column: 63, scope: !5617)
!5625 = !DILocation(line: 2356, column: 61, scope: !5617)
!5626 = !DILocation(line: 2356, column: 50, scope: !5617)
!5627 = !DILocation(line: 2356, column: 12, scope: !5600)
!5628 = !DILocation(line: 2357, column: 8, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 2357, column: 8)
!5630 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 2356, column: 81)
!5631 = !DILocation(line: 2357, column: 18, scope: !5629)
!5632 = !DILocation(line: 2357, column: 22, scope: !5629)
!5633 = !DILocation(line: 2357, column: 29, scope: !5629)
!5634 = !DILocation(line: 2357, column: 16, scope: !5629)
!5635 = !DILocation(line: 2357, column: 8, scope: !5630)
!5636 = !DILocation(line: 2357, column: 40, scope: !5629)
!5637 = !DILocation(line: 2357, column: 35, scope: !5629)
!5638 = !DILocation(line: 2358, column: 14, scope: !5629)
!5639 = !DILocation(line: 2359, column: 3, scope: !5630)
!5640 = !DILocation(line: 2360, column: 2, scope: !5601)
!5641 = !DILocation(line: 2362, column: 6, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2362, column: 6)
!5643 = !DILocation(line: 2362, column: 11, scope: !5642)
!5644 = !DILocation(line: 2362, column: 6, scope: !5553)
!5645 = !DILocation(line: 2364, column: 3, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 2362, column: 18)
!5647 = !DILocation(line: 2367, column: 8, scope: !5553)
!5648 = !DILocation(line: 2367, column: 6, scope: !5553)
!5649 = !DILocation(line: 2368, column: 2, scope: !5553)
!5650 = !DILocation(line: 2368, column: 7, scope: !5553)
!5651 = !DILocation(line: 2368, column: 13, scope: !5553)
!5652 = !DILocation(line: 2369, column: 2, scope: !5553)
!5653 = !DILocation(line: 2369, column: 7, scope: !5553)
!5654 = !DILocation(line: 2369, column: 17, scope: !5553)
!5655 = !DILocation(line: 2370, column: 14, scope: !5553)
!5656 = !DILocation(line: 2370, column: 2, scope: !5553)
!5657 = !DILocation(line: 2370, column: 7, scope: !5553)
!5658 = !DILocation(line: 2370, column: 12, scope: !5553)
!5659 = !DILocation(line: 2371, column: 19, scope: !5553)
!5660 = !DILocation(line: 2371, column: 2, scope: !5553)
!5661 = !DILocation(line: 2371, column: 6, scope: !5553)
!5662 = !DILocation(line: 2371, column: 17, scope: !5553)
!5663 = !DILocation(line: 2372, column: 2, scope: !5553)
!5664 = !DILocation(line: 2372, column: 6, scope: !5553)
!5665 = !DILocation(line: 2372, column: 12, scope: !5553)
!5666 = !DILocation(line: 2375, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 2375, column: 6)
!5668 = !DILocation(line: 2375, column: 13, scope: !5667)
!5669 = !DILocation(line: 2375, column: 18, scope: !5667)
!5670 = !DILocation(line: 2375, column: 6, scope: !5553)
!5671 = !DILocation(line: 2376, column: 17, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 2375, column: 34)
!5673 = !DILocation(line: 2376, column: 21, scope: !5672)
!5674 = !DILocation(line: 2376, column: 28, scope: !5672)
!5675 = !DILocation(line: 2376, column: 52, scope: !5672)
!5676 = !DILocation(line: 2376, column: 56, scope: !5672)
!5677 = !DILocation(line: 2376, column: 35, scope: !5672)
!5678 = !DILocation(line: 2376, column: 33, scope: !5672)
!5679 = !DILocation(line: 2376, column: 3, scope: !5672)
!5680 = !DILocation(line: 2376, column: 8, scope: !5672)
!5681 = !DILocation(line: 2376, column: 15, scope: !5672)
!5682 = !DILocation(line: 2377, column: 17, scope: !5672)
!5683 = !DILocation(line: 2377, column: 21, scope: !5672)
!5684 = !DILocation(line: 2377, column: 28, scope: !5672)
!5685 = !DILocation(line: 2377, column: 52, scope: !5672)
!5686 = !DILocation(line: 2377, column: 56, scope: !5672)
!5687 = !DILocation(line: 2377, column: 35, scope: !5672)
!5688 = !DILocation(line: 2377, column: 33, scope: !5672)
!5689 = !DILocation(line: 2377, column: 3, scope: !5672)
!5690 = !DILocation(line: 2377, column: 8, scope: !5672)
!5691 = !DILocation(line: 2377, column: 15, scope: !5672)
!5692 = !DILocation(line: 2379, column: 3, scope: !5672)
!5693 = !DILocation(line: 2379, column: 8, scope: !5672)
!5694 = !DILocation(line: 2379, column: 14, scope: !5672)
!5695 = !DILocation(line: 2380, column: 3, scope: !5672)
!5696 = !DILocation(line: 2380, column: 8, scope: !5672)
!5697 = !DILocation(line: 2380, column: 13, scope: !5672)
!5698 = !DILocation(line: 2381, column: 21, scope: !5672)
!5699 = !DILocation(line: 2381, column: 24, scope: !5672)
!5700 = !DILocation(line: 2381, column: 28, scope: !5672)
!5701 = !DILocation(line: 2381, column: 3, scope: !5672)
!5702 = !DILocation(line: 2382, column: 2, scope: !5672)
!5703 = !DILocation(line: 2384, column: 29, scope: !5553)
!5704 = !DILocation(line: 2384, column: 32, scope: !5553)
!5705 = !DILocation(line: 2384, column: 2, scope: !5553)
!5706 = !DILocation(line: 2386, column: 2, scope: !5553)
!5707 = !DILocation(line: 2387, column: 1, scope: !5553)
!5708 = distinct !DISubprogram(name: "text_region_scroll_poll", scope: !3, file: !3, line: 2323, type: !2799, scopeLine: 2324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5709 = !DILocalVariable(name: "C", arg: 1, scope: !5708, file: !3, line: 2323, type: !2783)
!5710 = !DILocation(line: 2323, column: 46, scope: !5708)
!5711 = !DILocalVariable(name: "st", scope: !5708, file: !3, line: 2326, type: !2804)
!5712 = !DILocation(line: 2326, column: 13, scope: !5708)
!5713 = !DILocation(line: 2326, column: 36, scope: !5708)
!5714 = !DILocation(line: 2326, column: 18, scope: !5708)
!5715 = !DILocalVariable(name: "text", scope: !5708, file: !3, line: 2327, type: !2858)
!5716 = !DILocation(line: 2327, column: 8, scope: !5708)
!5717 = !DILocation(line: 2327, column: 34, scope: !5708)
!5718 = !DILocation(line: 2327, column: 15, scope: !5708)
!5719 = !DILocalVariable(name: "ar", scope: !5708, file: !3, line: 2328, type: !3324)
!5720 = !DILocation(line: 2328, column: 11, scope: !5708)
!5721 = !DILocation(line: 2328, column: 30, scope: !5708)
!5722 = !DILocation(line: 2328, column: 16, scope: !5708)
!5723 = !DILocation(line: 2330, column: 7, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 2330, column: 6)
!5725 = !DILocation(line: 2330, column: 10, scope: !5724)
!5726 = !DILocation(line: 2330, column: 14, scope: !5724)
!5727 = !DILocation(line: 2330, column: 6, scope: !5708)
!5728 = !DILocation(line: 2331, column: 3, scope: !5724)
!5729 = !DILocation(line: 2333, column: 7, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 2333, column: 6)
!5731 = !DILocation(line: 2333, column: 10, scope: !5730)
!5732 = !DILocation(line: 2333, column: 13, scope: !5730)
!5733 = !DILocation(line: 2333, column: 17, scope: !5730)
!5734 = !DILocation(line: 2333, column: 28, scope: !5730)
!5735 = !DILocation(line: 2333, column: 6, scope: !5708)
!5736 = !DILocation(line: 2334, column: 3, scope: !5730)
!5737 = !DILocation(line: 2336, column: 2, scope: !5708)
!5738 = !DILocation(line: 2337, column: 1, scope: !5708)
!5739 = distinct !DISubprogram(name: "TEXT_OT_selection_set", scope: !3, file: !3, line: 2733, type: !1205, scopeLine: 2734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5740 = !DILocalVariable(name: "ot", arg: 1, scope: !5739, file: !3, line: 2733, type: !1207)
!5741 = !DILocation(line: 2733, column: 44, scope: !5739)
!5742 = !DILocation(line: 2736, column: 2, scope: !5739)
!5743 = !DILocation(line: 2736, column: 6, scope: !5739)
!5744 = !DILocation(line: 2736, column: 11, scope: !5739)
!5745 = !DILocation(line: 2737, column: 2, scope: !5739)
!5746 = !DILocation(line: 2737, column: 6, scope: !5739)
!5747 = !DILocation(line: 2737, column: 13, scope: !5739)
!5748 = !DILocation(line: 2738, column: 2, scope: !5739)
!5749 = !DILocation(line: 2738, column: 6, scope: !5739)
!5750 = !DILocation(line: 2738, column: 18, scope: !5739)
!5751 = !DILocation(line: 2741, column: 2, scope: !5739)
!5752 = !DILocation(line: 2741, column: 6, scope: !5739)
!5753 = !DILocation(line: 2741, column: 13, scope: !5739)
!5754 = !DILocation(line: 2742, column: 2, scope: !5739)
!5755 = !DILocation(line: 2742, column: 6, scope: !5739)
!5756 = !DILocation(line: 2742, column: 12, scope: !5739)
!5757 = !DILocation(line: 2743, column: 2, scope: !5739)
!5758 = !DILocation(line: 2743, column: 6, scope: !5739)
!5759 = !DILocation(line: 2743, column: 13, scope: !5739)
!5760 = !DILocation(line: 2744, column: 2, scope: !5739)
!5761 = !DILocation(line: 2744, column: 6, scope: !5739)
!5762 = !DILocation(line: 2744, column: 11, scope: !5739)
!5763 = !DILocation(line: 2747, column: 18, scope: !5739)
!5764 = !DILocation(line: 2747, column: 22, scope: !5739)
!5765 = !DILocation(line: 2747, column: 2, scope: !5739)
!5766 = !DILocation(line: 2748, column: 1, scope: !5739)
!5767 = distinct !DISubprogram(name: "text_set_selection_invoke", scope: !3, file: !3, line: 2687, type: !2781, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5768 = !DILocalVariable(name: "C", arg: 1, scope: !5767, file: !3, line: 2687, type: !2783)
!5769 = !DILocation(line: 2687, column: 48, scope: !5767)
!5770 = !DILocalVariable(name: "op", arg: 2, scope: !5767, file: !3, line: 2687, type: !2785)
!5771 = !DILocation(line: 2687, column: 63, scope: !5767)
!5772 = !DILocalVariable(name: "event", arg: 3, scope: !5767, file: !3, line: 2687, type: !2787)
!5773 = !DILocation(line: 2687, column: 82, scope: !5767)
!5774 = !DILocalVariable(name: "st", scope: !5767, file: !3, line: 2689, type: !2804)
!5775 = !DILocation(line: 2689, column: 13, scope: !5767)
!5776 = !DILocation(line: 2689, column: 36, scope: !5767)
!5777 = !DILocation(line: 2689, column: 18, scope: !5767)
!5778 = !DILocalVariable(name: "ssel", scope: !5767, file: !3, line: 2690, type: !5779)
!5779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5780, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_typedef, name: "SetSelection", file: !3, line: 2418, baseType: !5781)
!5781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SetSelection", file: !3, line: 2414, size: 128, elements: !5782)
!5782 = !{!5783, !5784, !5785, !5786}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "selecting", scope: !5781, file: !3, line: 2415, baseType: !1200, size: 32)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "selc", scope: !5781, file: !3, line: 2416, baseType: !1200, size: 32, offset: 32)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "sell", scope: !5781, file: !3, line: 2416, baseType: !1200, size: 32, offset: 64)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "old", scope: !5781, file: !3, line: 2417, baseType: !1805, size: 32, offset: 96)
!5787 = !DILocation(line: 2690, column: 16, scope: !5767)
!5788 = !DILocation(line: 2692, column: 6, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 2692, column: 6)
!5790 = !DILocation(line: 2692, column: 13, scope: !5789)
!5791 = !DILocation(line: 2692, column: 24, scope: !5789)
!5792 = !DILocation(line: 2692, column: 28, scope: !5789)
!5793 = !DILocation(line: 2692, column: 35, scope: !5789)
!5794 = !DILocation(line: 2692, column: 21, scope: !5789)
!5795 = !DILocation(line: 2692, column: 6, scope: !5767)
!5796 = !DILocation(line: 2693, column: 3, scope: !5789)
!5797 = !DILocation(line: 2695, column: 19, scope: !5767)
!5798 = !DILocation(line: 2695, column: 2, scope: !5767)
!5799 = !DILocation(line: 2695, column: 6, scope: !5767)
!5800 = !DILocation(line: 2695, column: 17, scope: !5767)
!5801 = !DILocation(line: 2696, column: 9, scope: !5767)
!5802 = !DILocation(line: 2696, column: 13, scope: !5767)
!5803 = !DILocation(line: 2696, column: 7, scope: !5767)
!5804 = !DILocation(line: 2697, column: 36, scope: !5767)
!5805 = !DILocation(line: 2697, column: 40, scope: !5767)
!5806 = !DILocation(line: 2697, column: 20, scope: !5767)
!5807 = !DILocation(line: 2697, column: 2, scope: !5767)
!5808 = !DILocation(line: 2697, column: 8, scope: !5767)
!5809 = !DILocation(line: 2697, column: 18, scope: !5767)
!5810 = !DILocation(line: 2699, column: 17, scope: !5767)
!5811 = !DILocation(line: 2699, column: 24, scope: !5767)
!5812 = !DILocation(line: 2699, column: 2, scope: !5767)
!5813 = !DILocation(line: 2699, column: 8, scope: !5767)
!5814 = !DILocation(line: 2699, column: 15, scope: !5767)
!5815 = !DILocation(line: 2700, column: 17, scope: !5767)
!5816 = !DILocation(line: 2700, column: 24, scope: !5767)
!5817 = !DILocation(line: 2700, column: 2, scope: !5767)
!5818 = !DILocation(line: 2700, column: 8, scope: !5767)
!5819 = !DILocation(line: 2700, column: 15, scope: !5767)
!5820 = !DILocation(line: 2702, column: 28, scope: !5767)
!5821 = !DILocation(line: 2702, column: 32, scope: !5767)
!5822 = !DILocation(line: 2702, column: 38, scope: !5767)
!5823 = !DILocation(line: 2702, column: 44, scope: !5767)
!5824 = !DILocation(line: 2702, column: 51, scope: !5767)
!5825 = !DILocation(line: 2702, column: 55, scope: !5767)
!5826 = !DILocation(line: 2702, column: 61, scope: !5767)
!5827 = !DILocation(line: 2702, column: 15, scope: !5767)
!5828 = !DILocation(line: 2702, column: 2, scope: !5767)
!5829 = !DILocation(line: 2702, column: 8, scope: !5767)
!5830 = !DILocation(line: 2702, column: 13, scope: !5767)
!5831 = !DILocation(line: 2703, column: 15, scope: !5767)
!5832 = !DILocation(line: 2703, column: 19, scope: !5767)
!5833 = !DILocation(line: 2703, column: 25, scope: !5767)
!5834 = !DILocation(line: 2703, column: 2, scope: !5767)
!5835 = !DILocation(line: 2703, column: 8, scope: !5767)
!5836 = !DILocation(line: 2703, column: 13, scope: !5767)
!5837 = !DILocation(line: 2705, column: 29, scope: !5767)
!5838 = !DILocation(line: 2705, column: 32, scope: !5767)
!5839 = !DILocation(line: 2705, column: 2, scope: !5767)
!5840 = !DILocation(line: 2707, column: 24, scope: !5767)
!5841 = !DILocation(line: 2707, column: 27, scope: !5767)
!5842 = !DILocation(line: 2707, column: 31, scope: !5767)
!5843 = !DILocation(line: 2707, column: 2, scope: !5767)
!5844 = !DILocation(line: 2709, column: 2, scope: !5767)
!5845 = !DILocation(line: 2710, column: 1, scope: !5767)
!5846 = distinct !DISubprogram(name: "text_set_selection_modal", scope: !3, file: !3, line: 2712, type: !2781, scopeLine: 2713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5847 = !DILocalVariable(name: "C", arg: 1, scope: !5846, file: !3, line: 2712, type: !2783)
!5848 = !DILocation(line: 2712, column: 47, scope: !5846)
!5849 = !DILocalVariable(name: "op", arg: 2, scope: !5846, file: !3, line: 2712, type: !2785)
!5850 = !DILocation(line: 2712, column: 62, scope: !5846)
!5851 = !DILocalVariable(name: "event", arg: 3, scope: !5846, file: !3, line: 2712, type: !2787)
!5852 = !DILocation(line: 2712, column: 81, scope: !5846)
!5853 = !DILocation(line: 2714, column: 10, scope: !5846)
!5854 = !DILocation(line: 2714, column: 17, scope: !5846)
!5855 = !DILocation(line: 2714, column: 2, scope: !5846)
!5856 = !DILocation(line: 2718, column: 25, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 2714, column: 23)
!5858 = !DILocation(line: 2718, column: 28, scope: !5857)
!5859 = !DILocation(line: 2718, column: 4, scope: !5857)
!5860 = !DILocation(line: 2719, column: 4, scope: !5857)
!5861 = !DILocation(line: 2721, column: 26, scope: !5857)
!5862 = !DILocation(line: 2721, column: 29, scope: !5857)
!5863 = !DILocation(line: 2721, column: 33, scope: !5857)
!5864 = !DILocation(line: 2721, column: 4, scope: !5857)
!5865 = !DILocation(line: 2722, column: 4, scope: !5857)
!5866 = !DILocation(line: 2725, column: 2, scope: !5846)
!5867 = !DILocation(line: 2726, column: 1, scope: !5846)
!5868 = distinct !DISubprogram(name: "text_set_selection_cancel", scope: !3, file: !3, line: 2728, type: !3278, scopeLine: 2729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5869 = !DILocalVariable(name: "C", arg: 1, scope: !5868, file: !3, line: 2728, type: !2783)
!5870 = !DILocation(line: 2728, column: 49, scope: !5868)
!5871 = !DILocalVariable(name: "op", arg: 2, scope: !5868, file: !3, line: 2728, type: !2785)
!5872 = !DILocation(line: 2728, column: 64, scope: !5868)
!5873 = !DILocation(line: 2730, column: 23, scope: !5868)
!5874 = !DILocation(line: 2730, column: 26, scope: !5868)
!5875 = !DILocation(line: 2730, column: 2, scope: !5868)
!5876 = !DILocation(line: 2731, column: 1, scope: !5868)
!5877 = distinct !DISubprogram(name: "text_region_edit_poll", scope: !3, file: !3, line: 119, type: !2799, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5878 = !DILocalVariable(name: "C", arg: 1, scope: !5877, file: !3, line: 119, type: !2783)
!5879 = !DILocation(line: 119, column: 44, scope: !5877)
!5880 = !DILocalVariable(name: "st", scope: !5877, file: !3, line: 121, type: !2804)
!5881 = !DILocation(line: 121, column: 13, scope: !5877)
!5882 = !DILocation(line: 121, column: 36, scope: !5877)
!5883 = !DILocation(line: 121, column: 18, scope: !5877)
!5884 = !DILocalVariable(name: "text", scope: !5877, file: !3, line: 122, type: !2858)
!5885 = !DILocation(line: 122, column: 8, scope: !5877)
!5886 = !DILocation(line: 122, column: 34, scope: !5877)
!5887 = !DILocation(line: 122, column: 15, scope: !5877)
!5888 = !DILocalVariable(name: "ar", scope: !5877, file: !3, line: 123, type: !3324)
!5889 = !DILocation(line: 123, column: 11, scope: !5877)
!5890 = !DILocation(line: 123, column: 30, scope: !5877)
!5891 = !DILocation(line: 123, column: 16, scope: !5877)
!5892 = !DILocation(line: 125, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 125, column: 6)
!5894 = !DILocation(line: 125, column: 10, scope: !5893)
!5895 = !DILocation(line: 125, column: 14, scope: !5893)
!5896 = !DILocation(line: 125, column: 6, scope: !5877)
!5897 = !DILocation(line: 126, column: 3, scope: !5893)
!5898 = !DILocation(line: 128, column: 7, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 128, column: 6)
!5900 = !DILocation(line: 128, column: 10, scope: !5899)
!5901 = !DILocation(line: 128, column: 13, scope: !5899)
!5902 = !DILocation(line: 128, column: 17, scope: !5899)
!5903 = !DILocation(line: 128, column: 28, scope: !5899)
!5904 = !DILocation(line: 128, column: 6, scope: !5877)
!5905 = !DILocation(line: 129, column: 3, scope: !5899)
!5906 = !DILocation(line: 131, column: 6, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 131, column: 6)
!5908 = !DILocation(line: 131, column: 12, scope: !5907)
!5909 = !DILocation(line: 131, column: 15, scope: !5907)
!5910 = !DILocation(line: 131, column: 6, scope: !5877)
!5911 = !DILocation(line: 133, column: 3, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 131, column: 20)
!5913 = !DILocation(line: 136, column: 2, scope: !5877)
!5914 = !DILocation(line: 137, column: 1, scope: !5877)
!5915 = distinct !DISubprogram(name: "TEXT_OT_cursor_set", scope: !3, file: !3, line: 2780, type: !1205, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5916 = !DILocalVariable(name: "ot", arg: 1, scope: !5915, file: !3, line: 2780, type: !1207)
!5917 = !DILocation(line: 2780, column: 41, scope: !5915)
!5918 = !DILocation(line: 2783, column: 2, scope: !5915)
!5919 = !DILocation(line: 2783, column: 6, scope: !5915)
!5920 = !DILocation(line: 2783, column: 11, scope: !5915)
!5921 = !DILocation(line: 2784, column: 2, scope: !5915)
!5922 = !DILocation(line: 2784, column: 6, scope: !5915)
!5923 = !DILocation(line: 2784, column: 13, scope: !5915)
!5924 = !DILocation(line: 2785, column: 2, scope: !5915)
!5925 = !DILocation(line: 2785, column: 6, scope: !5915)
!5926 = !DILocation(line: 2785, column: 18, scope: !5915)
!5927 = !DILocation(line: 2788, column: 2, scope: !5915)
!5928 = !DILocation(line: 2788, column: 6, scope: !5915)
!5929 = !DILocation(line: 2788, column: 13, scope: !5915)
!5930 = !DILocation(line: 2789, column: 2, scope: !5915)
!5931 = !DILocation(line: 2789, column: 6, scope: !5915)
!5932 = !DILocation(line: 2789, column: 11, scope: !5915)
!5933 = !DILocation(line: 2790, column: 2, scope: !5915)
!5934 = !DILocation(line: 2790, column: 6, scope: !5915)
!5935 = !DILocation(line: 2790, column: 11, scope: !5915)
!5936 = !DILocation(line: 2793, column: 14, scope: !5915)
!5937 = !DILocation(line: 2793, column: 18, scope: !5915)
!5938 = !DILocation(line: 2793, column: 2, scope: !5915)
!5939 = !DILocation(line: 2794, column: 14, scope: !5915)
!5940 = !DILocation(line: 2794, column: 18, scope: !5915)
!5941 = !DILocation(line: 2794, column: 2, scope: !5915)
!5942 = !DILocation(line: 2795, column: 1, scope: !5915)
!5943 = distinct !DISubprogram(name: "text_cursor_set_invoke", scope: !3, file: !3, line: 2767, type: !2781, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5944 = !DILocalVariable(name: "C", arg: 1, scope: !5943, file: !3, line: 2767, type: !2783)
!5945 = !DILocation(line: 2767, column: 45, scope: !5943)
!5946 = !DILocalVariable(name: "op", arg: 2, scope: !5943, file: !3, line: 2767, type: !2785)
!5947 = !DILocation(line: 2767, column: 60, scope: !5943)
!5948 = !DILocalVariable(name: "event", arg: 3, scope: !5943, file: !3, line: 2767, type: !2787)
!5949 = !DILocation(line: 2767, column: 79, scope: !5943)
!5950 = !DILocalVariable(name: "st", scope: !5943, file: !3, line: 2769, type: !2804)
!5951 = !DILocation(line: 2769, column: 13, scope: !5943)
!5952 = !DILocation(line: 2769, column: 36, scope: !5943)
!5953 = !DILocation(line: 2769, column: 18, scope: !5943)
!5954 = !DILocation(line: 2771, column: 6, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 2771, column: 6)
!5956 = !DILocation(line: 2771, column: 13, scope: !5955)
!5957 = !DILocation(line: 2771, column: 24, scope: !5955)
!5958 = !DILocation(line: 2771, column: 28, scope: !5955)
!5959 = !DILocation(line: 2771, column: 35, scope: !5955)
!5960 = !DILocation(line: 2771, column: 21, scope: !5955)
!5961 = !DILocation(line: 2771, column: 6, scope: !5943)
!5962 = !DILocation(line: 2772, column: 3, scope: !5955)
!5963 = !DILocation(line: 2774, column: 14, scope: !5943)
!5964 = !DILocation(line: 2774, column: 18, scope: !5943)
!5965 = !DILocation(line: 2774, column: 28, scope: !5943)
!5966 = !DILocation(line: 2774, column: 35, scope: !5943)
!5967 = !DILocation(line: 2774, column: 2, scope: !5943)
!5968 = !DILocation(line: 2775, column: 14, scope: !5943)
!5969 = !DILocation(line: 2775, column: 18, scope: !5943)
!5970 = !DILocation(line: 2775, column: 28, scope: !5943)
!5971 = !DILocation(line: 2775, column: 35, scope: !5943)
!5972 = !DILocation(line: 2775, column: 2, scope: !5943)
!5973 = !DILocation(line: 2777, column: 30, scope: !5943)
!5974 = !DILocation(line: 2777, column: 33, scope: !5943)
!5975 = !DILocation(line: 2777, column: 9, scope: !5943)
!5976 = !DILocation(line: 2777, column: 2, scope: !5943)
!5977 = !DILocation(line: 2778, column: 1, scope: !5943)
!5978 = distinct !DISubprogram(name: "text_cursor_set_exec", scope: !3, file: !3, line: 2752, type: !2948, scopeLine: 2753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!5979 = !DILocalVariable(name: "C", arg: 1, scope: !5978, file: !3, line: 2752, type: !2783)
!5980 = !DILocation(line: 2752, column: 43, scope: !5978)
!5981 = !DILocalVariable(name: "op", arg: 2, scope: !5978, file: !3, line: 2752, type: !2785)
!5982 = !DILocation(line: 2752, column: 58, scope: !5978)
!5983 = !DILocalVariable(name: "st", scope: !5978, file: !3, line: 2754, type: !2804)
!5984 = !DILocation(line: 2754, column: 13, scope: !5978)
!5985 = !DILocation(line: 2754, column: 36, scope: !5978)
!5986 = !DILocation(line: 2754, column: 18, scope: !5978)
!5987 = !DILocalVariable(name: "ar", scope: !5978, file: !3, line: 2755, type: !3324)
!5988 = !DILocation(line: 2755, column: 11, scope: !5978)
!5989 = !DILocation(line: 2755, column: 30, scope: !5978)
!5990 = !DILocation(line: 2755, column: 16, scope: !5978)
!5991 = !DILocalVariable(name: "x", scope: !5978, file: !3, line: 2756, type: !1200)
!5992 = !DILocation(line: 2756, column: 6, scope: !5978)
!5993 = !DILocation(line: 2756, column: 22, scope: !5978)
!5994 = !DILocation(line: 2756, column: 26, scope: !5978)
!5995 = !DILocation(line: 2756, column: 10, scope: !5978)
!5996 = !DILocalVariable(name: "y", scope: !5978, file: !3, line: 2757, type: !1200)
!5997 = !DILocation(line: 2757, column: 6, scope: !5978)
!5998 = !DILocation(line: 2757, column: 22, scope: !5978)
!5999 = !DILocation(line: 2757, column: 26, scope: !5978)
!6000 = !DILocation(line: 2757, column: 10, scope: !5978)
!6001 = !DILocation(line: 2759, column: 25, scope: !5978)
!6002 = !DILocation(line: 2759, column: 29, scope: !5978)
!6003 = !DILocation(line: 2759, column: 33, scope: !5978)
!6004 = !DILocation(line: 2759, column: 36, scope: !5978)
!6005 = !DILocation(line: 2759, column: 2, scope: !5978)
!6006 = !DILocation(line: 2761, column: 27, scope: !5978)
!6007 = !DILocation(line: 2761, column: 2, scope: !5978)
!6008 = !DILocation(line: 2762, column: 24, scope: !5978)
!6009 = !DILocation(line: 2762, column: 48, scope: !5978)
!6010 = !DILocation(line: 2762, column: 52, scope: !5978)
!6011 = !DILocation(line: 2762, column: 2, scope: !5978)
!6012 = !DILocation(line: 2764, column: 2, scope: !5978)
!6013 = distinct !DISubprogram(name: "TEXT_OT_line_number", scope: !3, file: !3, line: 2836, type: !1205, scopeLine: 2837, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6014 = !DILocalVariable(name: "ot", arg: 1, scope: !6013, file: !3, line: 2836, type: !1207)
!6015 = !DILocation(line: 2836, column: 42, scope: !6013)
!6016 = !DILocation(line: 2839, column: 2, scope: !6013)
!6017 = !DILocation(line: 2839, column: 6, scope: !6013)
!6018 = !DILocation(line: 2839, column: 11, scope: !6013)
!6019 = !DILocation(line: 2840, column: 2, scope: !6013)
!6020 = !DILocation(line: 2840, column: 6, scope: !6013)
!6021 = !DILocation(line: 2840, column: 13, scope: !6013)
!6022 = !DILocation(line: 2841, column: 2, scope: !6013)
!6023 = !DILocation(line: 2841, column: 6, scope: !6013)
!6024 = !DILocation(line: 2841, column: 18, scope: !6013)
!6025 = !DILocation(line: 2844, column: 2, scope: !6013)
!6026 = !DILocation(line: 2844, column: 6, scope: !6013)
!6027 = !DILocation(line: 2844, column: 13, scope: !6013)
!6028 = !DILocation(line: 2845, column: 2, scope: !6013)
!6029 = !DILocation(line: 2845, column: 6, scope: !6013)
!6030 = !DILocation(line: 2845, column: 11, scope: !6013)
!6031 = !DILocation(line: 2846, column: 1, scope: !6013)
!6032 = !DILocalVariable(name: "C", arg: 1, scope: !2780, file: !3, line: 2799, type: !2783)
!6033 = !DILocation(line: 2799, column: 46, scope: !2780)
!6034 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !2780, file: !3, line: 2799, type: !2785)
!6035 = !DILocation(line: 2799, column: 61, scope: !2780)
!6036 = !DILocalVariable(name: "event", arg: 3, scope: !2780, file: !3, line: 2799, type: !2787)
!6037 = !DILocation(line: 2799, column: 88, scope: !2780)
!6038 = !DILocalVariable(name: "st", scope: !2780, file: !3, line: 2801, type: !2804)
!6039 = !DILocation(line: 2801, column: 13, scope: !2780)
!6040 = !DILocation(line: 2801, column: 36, scope: !2780)
!6041 = !DILocation(line: 2801, column: 18, scope: !2780)
!6042 = !DILocalVariable(name: "text", scope: !2780, file: !3, line: 2802, type: !2858)
!6043 = !DILocation(line: 2802, column: 8, scope: !2780)
!6044 = !DILocation(line: 2802, column: 34, scope: !2780)
!6045 = !DILocation(line: 2802, column: 15, scope: !2780)
!6046 = !DILocalVariable(name: "ar", scope: !2780, file: !3, line: 2803, type: !3324)
!6047 = !DILocation(line: 2803, column: 11, scope: !2780)
!6048 = !DILocation(line: 2803, column: 30, scope: !2780)
!6049 = !DILocation(line: 2803, column: 16, scope: !2780)
!6050 = !DILocalVariable(name: "mval", scope: !2780, file: !3, line: 2804, type: !5571)
!6051 = !DILocation(line: 2804, column: 13, scope: !2780)
!6052 = !DILocation(line: 2804, column: 20, scope: !2780)
!6053 = !DILocation(line: 2804, column: 27, scope: !2780)
!6054 = !DILocalVariable(name: "time", scope: !2780, file: !3, line: 2805, type: !2417)
!6055 = !DILocation(line: 2805, column: 9, scope: !2780)
!6056 = !DILocation(line: 2809, column: 30, scope: !2780)
!6057 = !DILocation(line: 2809, column: 2, scope: !2780)
!6058 = !DILocation(line: 2811, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 2811, column: 6)
!6060 = !DILocation(line: 2811, column: 11, scope: !6059)
!6061 = !DILocation(line: 2811, column: 6, scope: !2780)
!6062 = !DILocation(line: 2812, column: 3, scope: !6059)
!6063 = !DILocation(line: 2814, column: 8, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 2814, column: 6)
!6065 = !DILocation(line: 2814, column: 16, scope: !6064)
!6066 = !DILocation(line: 2814, column: 20, scope: !6064)
!6067 = !DILocation(line: 2814, column: 23, scope: !6064)
!6068 = !DILocation(line: 2814, column: 34, scope: !6064)
!6069 = !DILocation(line: 2814, column: 47, scope: !6064)
!6070 = !DILocation(line: 2814, column: 45, scope: !6064)
!6071 = !DILocation(line: 2814, column: 31, scope: !6064)
!6072 = !DILocation(line: 2814, column: 57, scope: !6064)
!6073 = !DILocation(line: 2814, column: 60, scope: !6064)
!6074 = !DILocation(line: 2814, column: 68, scope: !6064)
!6075 = !DILocation(line: 2814, column: 72, scope: !6064)
!6076 = !DILocation(line: 2814, column: 75, scope: !6064)
!6077 = !DILocation(line: 2814, column: 85, scope: !6064)
!6078 = !DILocation(line: 2814, column: 89, scope: !6064)
!6079 = !DILocation(line: 2814, column: 94, scope: !6064)
!6080 = !DILocation(line: 2814, column: 83, scope: !6064)
!6081 = !DILocation(line: 2814, column: 6, scope: !2780)
!6082 = !DILocation(line: 2815, column: 3, scope: !6064)
!6083 = !DILocation(line: 2817, column: 8, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 2817, column: 6)
!6085 = !DILocation(line: 2817, column: 15, scope: !6084)
!6086 = !DILocation(line: 2817, column: 21, scope: !6084)
!6087 = !DILocation(line: 2817, column: 28, scope: !6084)
!6088 = !DILocation(line: 2817, column: 31, scope: !6084)
!6089 = !DILocation(line: 2817, column: 38, scope: !6084)
!6090 = !DILocation(line: 2817, column: 44, scope: !6084)
!6091 = !DILocation(line: 2817, column: 6, scope: !2780)
!6092 = !DILocation(line: 2818, column: 3, scope: !6084)
!6093 = !DILocation(line: 2820, column: 9, scope: !2780)
!6094 = !DILocation(line: 2820, column: 7, scope: !2780)
!6095 = !DILocation(line: 2821, column: 6, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 2821, column: 6)
!6097 = !DILocation(line: 2821, column: 18, scope: !6096)
!6098 = !DILocation(line: 2821, column: 23, scope: !6096)
!6099 = !DILocation(line: 2821, column: 16, scope: !6096)
!6100 = !DILocation(line: 2821, column: 6, scope: !2780)
!6101 = !DILocation(line: 2822, column: 11, scope: !6096)
!6102 = !DILocation(line: 2822, column: 3, scope: !6096)
!6103 = !DILocation(line: 2824, column: 10, scope: !2780)
!6104 = !DILocation(line: 2825, column: 19, scope: !2780)
!6105 = !DILocation(line: 2825, column: 26, scope: !2780)
!6106 = !DILocation(line: 2825, column: 32, scope: !2780)
!6107 = !DILocation(line: 2825, column: 10, scope: !2780)
!6108 = !DILocation(line: 2827, column: 18, scope: !2780)
!6109 = !DILocation(line: 2827, column: 24, scope: !2780)
!6110 = !DILocation(line: 2827, column: 32, scope: !2780)
!6111 = !DILocation(line: 2827, column: 2, scope: !2780)
!6112 = !DILocation(line: 2828, column: 14, scope: !2780)
!6113 = !DILocation(line: 2828, column: 12, scope: !2780)
!6114 = !DILocation(line: 2830, column: 27, scope: !2780)
!6115 = !DILocation(line: 2830, column: 2, scope: !2780)
!6116 = !DILocation(line: 2831, column: 24, scope: !2780)
!6117 = !DILocation(line: 2831, column: 48, scope: !2780)
!6118 = !DILocation(line: 2831, column: 2, scope: !2780)
!6119 = !DILocation(line: 2833, column: 2, scope: !2780)
!6120 = !DILocation(line: 2834, column: 1, scope: !2780)
!6121 = distinct !DISubprogram(name: "TEXT_OT_insert", scope: !3, file: !3, line: 2928, type: !1205, scopeLine: 2929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6122 = !DILocalVariable(name: "ot", arg: 1, scope: !6121, file: !3, line: 2928, type: !1207)
!6123 = !DILocation(line: 2928, column: 37, scope: !6121)
!6124 = !DILocalVariable(name: "prop", scope: !6121, file: !3, line: 2930, type: !2709)
!6125 = !DILocation(line: 2930, column: 15, scope: !6121)
!6126 = !DILocation(line: 2933, column: 2, scope: !6121)
!6127 = !DILocation(line: 2933, column: 6, scope: !6121)
!6128 = !DILocation(line: 2933, column: 11, scope: !6121)
!6129 = !DILocation(line: 2934, column: 2, scope: !6121)
!6130 = !DILocation(line: 2934, column: 6, scope: !6121)
!6131 = !DILocation(line: 2934, column: 13, scope: !6121)
!6132 = !DILocation(line: 2935, column: 2, scope: !6121)
!6133 = !DILocation(line: 2935, column: 6, scope: !6121)
!6134 = !DILocation(line: 2935, column: 18, scope: !6121)
!6135 = !DILocation(line: 2938, column: 2, scope: !6121)
!6136 = !DILocation(line: 2938, column: 6, scope: !6121)
!6137 = !DILocation(line: 2938, column: 11, scope: !6121)
!6138 = !DILocation(line: 2939, column: 2, scope: !6121)
!6139 = !DILocation(line: 2939, column: 6, scope: !6121)
!6140 = !DILocation(line: 2939, column: 13, scope: !6121)
!6141 = !DILocation(line: 2940, column: 2, scope: !6121)
!6142 = !DILocation(line: 2940, column: 6, scope: !6121)
!6143 = !DILocation(line: 2940, column: 11, scope: !6121)
!6144 = !DILocation(line: 2943, column: 24, scope: !6121)
!6145 = !DILocation(line: 2943, column: 28, scope: !6121)
!6146 = !DILocation(line: 2943, column: 9, scope: !6121)
!6147 = !DILocation(line: 2943, column: 7, scope: !6121)
!6148 = !DILocation(line: 2944, column: 24, scope: !6121)
!6149 = !DILocation(line: 2944, column: 2, scope: !6121)
!6150 = !DILocation(line: 2945, column: 1, scope: !6121)
!6151 = distinct !DISubprogram(name: "text_insert_exec", scope: !3, file: !3, line: 2850, type: !2948, scopeLine: 2851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6152 = !DILocalVariable(name: "C", arg: 1, scope: !6151, file: !3, line: 2850, type: !2783)
!6153 = !DILocation(line: 2850, column: 39, scope: !6151)
!6154 = !DILocalVariable(name: "op", arg: 2, scope: !6151, file: !3, line: 2850, type: !2785)
!6155 = !DILocation(line: 2850, column: 54, scope: !6151)
!6156 = !DILocalVariable(name: "st", scope: !6151, file: !3, line: 2852, type: !2804)
!6157 = !DILocation(line: 2852, column: 13, scope: !6151)
!6158 = !DILocation(line: 2852, column: 36, scope: !6151)
!6159 = !DILocation(line: 2852, column: 18, scope: !6151)
!6160 = !DILocalVariable(name: "text", scope: !6151, file: !3, line: 2853, type: !2858)
!6161 = !DILocation(line: 2853, column: 8, scope: !6151)
!6162 = !DILocation(line: 2853, column: 34, scope: !6151)
!6163 = !DILocation(line: 2853, column: 15, scope: !6151)
!6164 = !DILocalVariable(name: "str", scope: !6151, file: !3, line: 2854, type: !1460)
!6165 = !DILocation(line: 2854, column: 8, scope: !6151)
!6166 = !DILocalVariable(name: "done", scope: !6151, file: !3, line: 2855, type: !1930)
!6167 = !DILocation(line: 2855, column: 7, scope: !6151)
!6168 = !DILocalVariable(name: "i", scope: !6151, file: !3, line: 2856, type: !1196)
!6169 = !DILocation(line: 2856, column: 9, scope: !6151)
!6170 = !DILocalVariable(name: "code", scope: !6151, file: !3, line: 2857, type: !7)
!6171 = !DILocation(line: 2857, column: 15, scope: !6151)
!6172 = !DILocation(line: 2859, column: 28, scope: !6151)
!6173 = !DILocation(line: 2859, column: 2, scope: !6151)
!6174 = !DILocation(line: 2861, column: 29, scope: !6151)
!6175 = !DILocation(line: 2861, column: 33, scope: !6151)
!6176 = !DILocation(line: 2861, column: 8, scope: !6151)
!6177 = !DILocation(line: 2861, column: 6, scope: !6151)
!6178 = !DILocation(line: 2863, column: 6, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 2863, column: 6)
!6180 = !DILocation(line: 2863, column: 9, scope: !6179)
!6181 = !DILocation(line: 2863, column: 12, scope: !6179)
!6182 = !DILocation(line: 2863, column: 16, scope: !6179)
!6183 = !DILocation(line: 2863, column: 6, scope: !6151)
!6184 = !DILocation(line: 2864, column: 3, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 2863, column: 27)
!6186 = !DILocation(line: 2864, column: 10, scope: !6185)
!6187 = !DILocation(line: 2864, column: 14, scope: !6185)
!6188 = !DILocation(line: 2865, column: 40, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 2864, column: 18)
!6190 = !DILocation(line: 2865, column: 11, scope: !6189)
!6191 = !DILocation(line: 2865, column: 9, scope: !6189)
!6192 = !DILocation(line: 2866, column: 29, scope: !6189)
!6193 = !DILocation(line: 2866, column: 35, scope: !6189)
!6194 = !DILocation(line: 2866, column: 12, scope: !6189)
!6195 = !DILocation(line: 2866, column: 9, scope: !6189)
!6196 = distinct !{!6196, !6184, !6197}
!6197 = !DILocation(line: 2867, column: 3, scope: !6185)
!6198 = !DILocation(line: 2868, column: 2, scope: !6185)
!6199 = !DILocation(line: 2870, column: 3, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 2869, column: 7)
!6201 = !DILocation(line: 2870, column: 10, scope: !6200)
!6202 = !DILocation(line: 2870, column: 14, scope: !6200)
!6203 = !DILocation(line: 2871, column: 40, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 2870, column: 18)
!6205 = !DILocation(line: 2871, column: 11, scope: !6204)
!6206 = !DILocation(line: 2871, column: 9, scope: !6204)
!6207 = !DILocation(line: 2872, column: 25, scope: !6204)
!6208 = !DILocation(line: 2872, column: 31, scope: !6204)
!6209 = !DILocation(line: 2872, column: 12, scope: !6204)
!6210 = !DILocation(line: 2872, column: 9, scope: !6204)
!6211 = distinct !{!6211, !6199, !6212}
!6212 = !DILocation(line: 2873, column: 3, scope: !6200)
!6213 = !DILocation(line: 2876, column: 2, scope: !6151)
!6214 = !DILocation(line: 2876, column: 12, scope: !6151)
!6215 = !DILocation(line: 2878, column: 7, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 2878, column: 6)
!6217 = !DILocation(line: 2878, column: 6, scope: !6151)
!6218 = !DILocation(line: 2879, column: 3, scope: !6216)
!6219 = !DILocation(line: 2881, column: 26, scope: !6151)
!6220 = !DILocation(line: 2881, column: 32, scope: !6151)
!6221 = !DILocation(line: 2881, column: 2, scope: !6151)
!6222 = !DILocation(line: 2883, column: 27, scope: !6151)
!6223 = !DILocation(line: 2883, column: 2, scope: !6151)
!6224 = !DILocation(line: 2884, column: 24, scope: !6151)
!6225 = !DILocation(line: 2884, column: 48, scope: !6151)
!6226 = !DILocation(line: 2884, column: 2, scope: !6151)
!6227 = !DILocation(line: 2886, column: 2, scope: !6151)
!6228 = !DILocation(line: 2887, column: 1, scope: !6151)
!6229 = distinct !DISubprogram(name: "text_insert_invoke", scope: !3, file: !3, line: 2889, type: !2781, scopeLine: 2890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6230 = !DILocalVariable(name: "C", arg: 1, scope: !6229, file: !3, line: 2889, type: !2783)
!6231 = !DILocation(line: 2889, column: 41, scope: !6229)
!6232 = !DILocalVariable(name: "op", arg: 2, scope: !6229, file: !3, line: 2889, type: !2785)
!6233 = !DILocation(line: 2889, column: 56, scope: !6229)
!6234 = !DILocalVariable(name: "event", arg: 3, scope: !6229, file: !3, line: 2889, type: !2787)
!6235 = !DILocation(line: 2889, column: 75, scope: !6229)
!6236 = !DILocalVariable(name: "ret", scope: !6229, file: !3, line: 2891, type: !1200)
!6237 = !DILocation(line: 2891, column: 6, scope: !6229)
!6238 = !DILocation(line: 2894, column: 25, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 2894, column: 6)
!6240 = !DILocation(line: 2894, column: 29, scope: !6239)
!6241 = !DILocation(line: 2894, column: 7, scope: !6239)
!6242 = !DILocation(line: 2894, column: 6, scope: !6229)
!6243 = !DILocation(line: 2899, column: 8, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 2899, column: 7)
!6245 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 2894, column: 43)
!6246 = !DILocation(line: 2899, column: 15, scope: !6244)
!6247 = !DILocation(line: 2899, column: 20, scope: !6244)
!6248 = !DILocation(line: 2899, column: 23, scope: !6244)
!6249 = !DILocation(line: 2899, column: 30, scope: !6244)
!6250 = !DILocation(line: 2899, column: 37, scope: !6244)
!6251 = !DILocation(line: 2899, column: 41, scope: !6244)
!6252 = !DILocation(line: 2899, column: 48, scope: !6244)
!6253 = !DILocation(line: 2899, column: 7, scope: !6245)
!6254 = !DILocation(line: 2900, column: 4, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 2899, column: 61)
!6256 = !DILocalVariable(name: "str", scope: !6257, file: !3, line: 2903, type: !1828)
!6257 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 2902, column: 8)
!6258 = !DILocation(line: 2903, column: 9, scope: !6257)
!6259 = !DILocalVariable(name: "len", scope: !6257, file: !3, line: 2904, type: !1196)
!6260 = !DILocation(line: 2904, column: 11, scope: !6257)
!6261 = !DILocation(line: 2906, column: 8, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 2906, column: 8)
!6263 = !DILocation(line: 2906, column: 15, scope: !6262)
!6264 = !DILocation(line: 2906, column: 8, scope: !6257)
!6265 = !DILocation(line: 2907, column: 34, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 2906, column: 28)
!6267 = !DILocation(line: 2907, column: 41, scope: !6266)
!6268 = !DILocation(line: 2907, column: 11, scope: !6266)
!6269 = !DILocation(line: 2907, column: 9, scope: !6266)
!6270 = !DILocation(line: 2908, column: 5, scope: !6266)
!6271 = !DILocation(line: 2908, column: 17, scope: !6266)
!6272 = !DILocation(line: 2908, column: 24, scope: !6266)
!6273 = !DILocation(line: 2908, column: 34, scope: !6266)
!6274 = !DILocation(line: 2909, column: 4, scope: !6266)
!6275 = !DILocation(line: 2912, column: 37, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 2910, column: 9)
!6277 = !DILocation(line: 2912, column: 44, scope: !6276)
!6278 = !DILocation(line: 2912, column: 51, scope: !6276)
!6279 = !DILocation(line: 2912, column: 11, scope: !6276)
!6280 = !DILocation(line: 2912, column: 9, scope: !6276)
!6281 = !DILocation(line: 2914, column: 8, scope: !6257)
!6282 = !DILocation(line: 2914, column: 4, scope: !6257)
!6283 = !DILocation(line: 2914, column: 13, scope: !6257)
!6284 = !DILocation(line: 2915, column: 19, scope: !6257)
!6285 = !DILocation(line: 2915, column: 23, scope: !6257)
!6286 = !DILocation(line: 2915, column: 36, scope: !6257)
!6287 = !DILocation(line: 2915, column: 4, scope: !6257)
!6288 = !DILocation(line: 2917, column: 2, scope: !6245)
!6289 = !DILocation(line: 2919, column: 25, scope: !6229)
!6290 = !DILocation(line: 2919, column: 28, scope: !6229)
!6291 = !DILocation(line: 2919, column: 8, scope: !6229)
!6292 = !DILocation(line: 2919, column: 6, scope: !6229)
!6293 = !DILocation(line: 2922, column: 6, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 2922, column: 6)
!6295 = !DILocation(line: 2922, column: 10, scope: !6294)
!6296 = !DILocation(line: 2922, column: 31, scope: !6294)
!6297 = !DILocation(line: 2922, column: 52, scope: !6294)
!6298 = !DILocation(line: 2922, column: 34, scope: !6294)
!6299 = !DILocation(line: 2922, column: 56, scope: !6294)
!6300 = !DILocation(line: 2922, column: 6, scope: !6229)
!6301 = !DILocation(line: 2923, column: 19, scope: !6294)
!6302 = !DILocation(line: 2923, column: 3, scope: !6294)
!6303 = !DILocation(line: 2925, column: 9, scope: !6229)
!6304 = !DILocation(line: 2925, column: 2, scope: !6229)
!6305 = !DILocation(line: 2926, column: 1, scope: !6229)
!6306 = distinct !DISubprogram(name: "TEXT_OT_find", scope: !3, file: !3, line: 3018, type: !1205, scopeLine: 3019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6307 = !DILocalVariable(name: "ot", arg: 1, scope: !6306, file: !3, line: 3018, type: !1207)
!6308 = !DILocation(line: 3018, column: 35, scope: !6306)
!6309 = !DILocation(line: 3021, column: 2, scope: !6306)
!6310 = !DILocation(line: 3021, column: 6, scope: !6306)
!6311 = !DILocation(line: 3021, column: 11, scope: !6306)
!6312 = !DILocation(line: 3022, column: 2, scope: !6306)
!6313 = !DILocation(line: 3022, column: 6, scope: !6306)
!6314 = !DILocation(line: 3022, column: 13, scope: !6306)
!6315 = !DILocation(line: 3023, column: 2, scope: !6306)
!6316 = !DILocation(line: 3023, column: 6, scope: !6306)
!6317 = !DILocation(line: 3023, column: 18, scope: !6306)
!6318 = !DILocation(line: 3026, column: 2, scope: !6306)
!6319 = !DILocation(line: 3026, column: 6, scope: !6306)
!6320 = !DILocation(line: 3026, column: 11, scope: !6306)
!6321 = !DILocation(line: 3027, column: 2, scope: !6306)
!6322 = !DILocation(line: 3027, column: 6, scope: !6306)
!6323 = !DILocation(line: 3027, column: 11, scope: !6306)
!6324 = !DILocation(line: 3028, column: 1, scope: !6306)
!6325 = distinct !DISubprogram(name: "text_find_exec", scope: !3, file: !3, line: 3013, type: !2948, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6326 = !DILocalVariable(name: "C", arg: 1, scope: !6325, file: !3, line: 3013, type: !2783)
!6327 = !DILocation(line: 3013, column: 37, scope: !6325)
!6328 = !DILocalVariable(name: "op", arg: 2, scope: !6325, file: !3, line: 3013, type: !2785)
!6329 = !DILocation(line: 3013, column: 52, scope: !6325)
!6330 = !DILocation(line: 3015, column: 31, scope: !6325)
!6331 = !DILocation(line: 3015, column: 34, scope: !6325)
!6332 = !DILocation(line: 3015, column: 9, scope: !6325)
!6333 = !DILocation(line: 3015, column: 2, scope: !6325)
!6334 = distinct !DISubprogram(name: "TEXT_OT_replace", scope: !3, file: !3, line: 3037, type: !1205, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6335 = !DILocalVariable(name: "ot", arg: 1, scope: !6334, file: !3, line: 3037, type: !1207)
!6336 = !DILocation(line: 3037, column: 38, scope: !6334)
!6337 = !DILocation(line: 3040, column: 2, scope: !6334)
!6338 = !DILocation(line: 3040, column: 6, scope: !6334)
!6339 = !DILocation(line: 3040, column: 11, scope: !6334)
!6340 = !DILocation(line: 3041, column: 2, scope: !6334)
!6341 = !DILocation(line: 3041, column: 6, scope: !6334)
!6342 = !DILocation(line: 3041, column: 13, scope: !6334)
!6343 = !DILocation(line: 3042, column: 2, scope: !6334)
!6344 = !DILocation(line: 3042, column: 6, scope: !6334)
!6345 = !DILocation(line: 3042, column: 18, scope: !6334)
!6346 = !DILocation(line: 3045, column: 2, scope: !6334)
!6347 = !DILocation(line: 3045, column: 6, scope: !6334)
!6348 = !DILocation(line: 3045, column: 11, scope: !6334)
!6349 = !DILocation(line: 3046, column: 2, scope: !6334)
!6350 = !DILocation(line: 3046, column: 6, scope: !6334)
!6351 = !DILocation(line: 3046, column: 11, scope: !6334)
!6352 = !DILocation(line: 3047, column: 1, scope: !6334)
!6353 = distinct !DISubprogram(name: "text_replace_exec", scope: !3, file: !3, line: 3032, type: !2948, scopeLine: 3033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6354 = !DILocalVariable(name: "C", arg: 1, scope: !6353, file: !3, line: 3032, type: !2783)
!6355 = !DILocation(line: 3032, column: 40, scope: !6353)
!6356 = !DILocalVariable(name: "op", arg: 2, scope: !6353, file: !3, line: 3032, type: !2785)
!6357 = !DILocation(line: 3032, column: 55, scope: !6353)
!6358 = !DILocation(line: 3034, column: 31, scope: !6353)
!6359 = !DILocation(line: 3034, column: 34, scope: !6353)
!6360 = !DILocation(line: 3034, column: 9, scope: !6353)
!6361 = !DILocation(line: 3034, column: 2, scope: !6353)
!6362 = distinct !DISubprogram(name: "TEXT_OT_find_set_selected", scope: !3, file: !3, line: 3067, type: !1205, scopeLine: 3068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6363 = !DILocalVariable(name: "ot", arg: 1, scope: !6362, file: !3, line: 3067, type: !1207)
!6364 = !DILocation(line: 3067, column: 48, scope: !6362)
!6365 = !DILocation(line: 3070, column: 2, scope: !6362)
!6366 = !DILocation(line: 3070, column: 6, scope: !6362)
!6367 = !DILocation(line: 3070, column: 11, scope: !6362)
!6368 = !DILocation(line: 3071, column: 2, scope: !6362)
!6369 = !DILocation(line: 3071, column: 6, scope: !6362)
!6370 = !DILocation(line: 3071, column: 13, scope: !6362)
!6371 = !DILocation(line: 3072, column: 2, scope: !6362)
!6372 = !DILocation(line: 3072, column: 6, scope: !6362)
!6373 = !DILocation(line: 3072, column: 18, scope: !6362)
!6374 = !DILocation(line: 3075, column: 2, scope: !6362)
!6375 = !DILocation(line: 3075, column: 6, scope: !6362)
!6376 = !DILocation(line: 3075, column: 11, scope: !6362)
!6377 = !DILocation(line: 3076, column: 2, scope: !6362)
!6378 = !DILocation(line: 3076, column: 6, scope: !6362)
!6379 = !DILocation(line: 3076, column: 11, scope: !6362)
!6380 = !DILocation(line: 3077, column: 1, scope: !6362)
!6381 = distinct !DISubprogram(name: "text_find_set_selected_exec", scope: !3, file: !3, line: 3051, type: !2948, scopeLine: 3052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6382 = !DILocalVariable(name: "C", arg: 1, scope: !6381, file: !3, line: 3051, type: !2783)
!6383 = !DILocation(line: 3051, column: 50, scope: !6381)
!6384 = !DILocalVariable(name: "op", arg: 2, scope: !6381, file: !3, line: 3051, type: !2785)
!6385 = !DILocation(line: 3051, column: 65, scope: !6381)
!6386 = !DILocalVariable(name: "st", scope: !6381, file: !3, line: 3053, type: !2804)
!6387 = !DILocation(line: 3053, column: 13, scope: !6381)
!6388 = !DILocation(line: 3053, column: 36, scope: !6381)
!6389 = !DILocation(line: 3053, column: 18, scope: !6381)
!6390 = !DILocalVariable(name: "text", scope: !6381, file: !3, line: 3054, type: !2858)
!6391 = !DILocation(line: 3054, column: 8, scope: !6381)
!6392 = !DILocation(line: 3054, column: 34, scope: !6381)
!6393 = !DILocation(line: 3054, column: 15, scope: !6381)
!6394 = !DILocalVariable(name: "tmp", scope: !6381, file: !3, line: 3055, type: !1460)
!6395 = !DILocation(line: 3055, column: 8, scope: !6381)
!6396 = !DILocation(line: 3057, column: 23, scope: !6381)
!6397 = !DILocation(line: 3057, column: 8, scope: !6381)
!6398 = !DILocation(line: 3057, column: 6, scope: !6381)
!6399 = !DILocation(line: 3058, column: 14, scope: !6381)
!6400 = !DILocation(line: 3058, column: 18, scope: !6381)
!6401 = !DILocation(line: 3058, column: 27, scope: !6381)
!6402 = !DILocation(line: 3058, column: 2, scope: !6381)
!6403 = !DILocation(line: 3059, column: 2, scope: !6381)
!6404 = !DILocation(line: 3059, column: 12, scope: !6381)
!6405 = !DILocation(line: 3061, column: 7, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 3061, column: 6)
!6407 = !DILocation(line: 3061, column: 11, scope: !6406)
!6408 = !DILocation(line: 3061, column: 6, scope: !6381)
!6409 = !DILocation(line: 3062, column: 3, scope: !6406)
!6410 = !DILocation(line: 3064, column: 31, scope: !6381)
!6411 = !DILocation(line: 3064, column: 34, scope: !6381)
!6412 = !DILocation(line: 3064, column: 9, scope: !6381)
!6413 = !DILocation(line: 3064, column: 2, scope: !6381)
!6414 = !DILocation(line: 3065, column: 1, scope: !6381)
!6415 = distinct !DISubprogram(name: "TEXT_OT_replace_set_selected", scope: !3, file: !3, line: 3094, type: !1205, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6416 = !DILocalVariable(name: "ot", arg: 1, scope: !6415, file: !3, line: 3094, type: !1207)
!6417 = !DILocation(line: 3094, column: 51, scope: !6415)
!6418 = !DILocation(line: 3097, column: 2, scope: !6415)
!6419 = !DILocation(line: 3097, column: 6, scope: !6415)
!6420 = !DILocation(line: 3097, column: 11, scope: !6415)
!6421 = !DILocation(line: 3098, column: 2, scope: !6415)
!6422 = !DILocation(line: 3098, column: 6, scope: !6415)
!6423 = !DILocation(line: 3098, column: 13, scope: !6415)
!6424 = !DILocation(line: 3099, column: 2, scope: !6415)
!6425 = !DILocation(line: 3099, column: 6, scope: !6415)
!6426 = !DILocation(line: 3099, column: 18, scope: !6415)
!6427 = !DILocation(line: 3102, column: 2, scope: !6415)
!6428 = !DILocation(line: 3102, column: 6, scope: !6415)
!6429 = !DILocation(line: 3102, column: 11, scope: !6415)
!6430 = !DILocation(line: 3103, column: 2, scope: !6415)
!6431 = !DILocation(line: 3103, column: 6, scope: !6415)
!6432 = !DILocation(line: 3103, column: 11, scope: !6415)
!6433 = !DILocation(line: 3104, column: 1, scope: !6415)
!6434 = distinct !DISubprogram(name: "text_replace_set_selected_exec", scope: !3, file: !3, line: 3081, type: !2948, scopeLine: 3082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6435 = !DILocalVariable(name: "C", arg: 1, scope: !6434, file: !3, line: 3081, type: !2783)
!6436 = !DILocation(line: 3081, column: 53, scope: !6434)
!6437 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6434, file: !3, line: 3081, type: !2785)
!6438 = !DILocation(line: 3081, column: 68, scope: !6434)
!6439 = !DILocalVariable(name: "st", scope: !6434, file: !3, line: 3083, type: !2804)
!6440 = !DILocation(line: 3083, column: 13, scope: !6434)
!6441 = !DILocation(line: 3083, column: 36, scope: !6434)
!6442 = !DILocation(line: 3083, column: 18, scope: !6434)
!6443 = !DILocalVariable(name: "text", scope: !6434, file: !3, line: 3084, type: !2858)
!6444 = !DILocation(line: 3084, column: 8, scope: !6434)
!6445 = !DILocation(line: 3084, column: 34, scope: !6434)
!6446 = !DILocation(line: 3084, column: 15, scope: !6434)
!6447 = !DILocalVariable(name: "tmp", scope: !6434, file: !3, line: 3085, type: !1460)
!6448 = !DILocation(line: 3085, column: 8, scope: !6434)
!6449 = !DILocation(line: 3087, column: 23, scope: !6434)
!6450 = !DILocation(line: 3087, column: 8, scope: !6434)
!6451 = !DILocation(line: 3087, column: 6, scope: !6434)
!6452 = !DILocation(line: 3088, column: 14, scope: !6434)
!6453 = !DILocation(line: 3088, column: 18, scope: !6434)
!6454 = !DILocation(line: 3088, column: 30, scope: !6434)
!6455 = !DILocation(line: 3088, column: 2, scope: !6434)
!6456 = !DILocation(line: 3089, column: 2, scope: !6434)
!6457 = !DILocation(line: 3089, column: 12, scope: !6434)
!6458 = !DILocation(line: 3091, column: 2, scope: !6434)
!6459 = distinct !DISubprogram(name: "TEXT_OT_resolve_conflict", scope: !3, file: !3, line: 3179, type: !1205, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6460 = !DILocalVariable(name: "ot", arg: 1, scope: !6459, file: !3, line: 3179, type: !1207)
!6461 = !DILocation(line: 3179, column: 47, scope: !6459)
!6462 = !DILocation(line: 3182, column: 2, scope: !6459)
!6463 = !DILocation(line: 3182, column: 6, scope: !6459)
!6464 = !DILocation(line: 3182, column: 11, scope: !6459)
!6465 = !DILocation(line: 3183, column: 2, scope: !6459)
!6466 = !DILocation(line: 3183, column: 6, scope: !6459)
!6467 = !DILocation(line: 3183, column: 13, scope: !6459)
!6468 = !DILocation(line: 3184, column: 2, scope: !6459)
!6469 = !DILocation(line: 3184, column: 6, scope: !6459)
!6470 = !DILocation(line: 3184, column: 18, scope: !6459)
!6471 = !DILocation(line: 3187, column: 2, scope: !6459)
!6472 = !DILocation(line: 3187, column: 6, scope: !6459)
!6473 = !DILocation(line: 3187, column: 11, scope: !6459)
!6474 = !DILocation(line: 3188, column: 2, scope: !6459)
!6475 = !DILocation(line: 3188, column: 6, scope: !6459)
!6476 = !DILocation(line: 3188, column: 13, scope: !6459)
!6477 = !DILocation(line: 3189, column: 2, scope: !6459)
!6478 = !DILocation(line: 3189, column: 6, scope: !6459)
!6479 = !DILocation(line: 3189, column: 11, scope: !6459)
!6480 = !DILocation(line: 3192, column: 15, scope: !6459)
!6481 = !DILocation(line: 3192, column: 19, scope: !6459)
!6482 = !DILocation(line: 3192, column: 2, scope: !6459)
!6483 = !DILocation(line: 3193, column: 1, scope: !6459)
!6484 = distinct !DISubprogram(name: "text_resolve_conflict_exec", scope: !3, file: !3, line: 3117, type: !2948, scopeLine: 3118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6485 = !DILocalVariable(name: "C", arg: 1, scope: !6484, file: !3, line: 3117, type: !2783)
!6486 = !DILocation(line: 3117, column: 49, scope: !6484)
!6487 = !DILocalVariable(name: "op", arg: 2, scope: !6484, file: !3, line: 3117, type: !2785)
!6488 = !DILocation(line: 3117, column: 64, scope: !6484)
!6489 = !DILocalVariable(name: "text", scope: !6484, file: !3, line: 3119, type: !2858)
!6490 = !DILocation(line: 3119, column: 8, scope: !6484)
!6491 = !DILocation(line: 3119, column: 34, scope: !6484)
!6492 = !DILocation(line: 3119, column: 15, scope: !6484)
!6493 = !DILocalVariable(name: "resolution", scope: !6484, file: !3, line: 3120, type: !1200)
!6494 = !DILocation(line: 3120, column: 6, scope: !6484)
!6495 = !DILocation(line: 3120, column: 32, scope: !6484)
!6496 = !DILocation(line: 3120, column: 36, scope: !6484)
!6497 = !DILocation(line: 3120, column: 19, scope: !6484)
!6498 = !DILocation(line: 3122, column: 10, scope: !6484)
!6499 = !DILocation(line: 3122, column: 2, scope: !6484)
!6500 = !DILocation(line: 3124, column: 28, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 3122, column: 22)
!6502 = !DILocation(line: 3124, column: 31, scope: !6501)
!6503 = !DILocation(line: 3124, column: 11, scope: !6501)
!6504 = !DILocation(line: 3124, column: 4, scope: !6501)
!6505 = !DILocation(line: 3126, column: 26, scope: !6501)
!6506 = !DILocation(line: 3126, column: 29, scope: !6501)
!6507 = !DILocation(line: 3126, column: 11, scope: !6501)
!6508 = !DILocation(line: 3126, column: 4, scope: !6501)
!6509 = !DILocation(line: 3128, column: 35, scope: !6501)
!6510 = !DILocation(line: 3128, column: 38, scope: !6501)
!6511 = !DILocation(line: 3128, column: 11, scope: !6501)
!6512 = !DILocation(line: 3128, column: 4, scope: !6501)
!6513 = !DILocation(line: 3130, column: 34, scope: !6501)
!6514 = !DILocation(line: 3130, column: 4, scope: !6501)
!6515 = !DILocation(line: 3131, column: 4, scope: !6501)
!6516 = !DILocation(line: 3134, column: 2, scope: !6484)
!6517 = !DILocation(line: 3135, column: 1, scope: !6484)
!6518 = distinct !DISubprogram(name: "text_resolve_conflict_invoke", scope: !3, file: !3, line: 3137, type: !2781, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6519 = !DILocalVariable(name: "C", arg: 1, scope: !6518, file: !3, line: 3137, type: !2783)
!6520 = !DILocation(line: 3137, column: 51, scope: !6518)
!6521 = !DILocalVariable(name: "op", arg: 2, scope: !6518, file: !3, line: 3137, type: !2785)
!6522 = !DILocation(line: 3137, column: 66, scope: !6518)
!6523 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !6518, file: !3, line: 3137, type: !2787)
!6524 = !DILocation(line: 3137, column: 85, scope: !6518)
!6525 = !DILocalVariable(name: "text", scope: !6518, file: !3, line: 3139, type: !2858)
!6526 = !DILocation(line: 3139, column: 8, scope: !6518)
!6527 = !DILocation(line: 3139, column: 34, scope: !6518)
!6528 = !DILocation(line: 3139, column: 15, scope: !6518)
!6529 = !DILocalVariable(name: "pup", scope: !6518, file: !3, line: 3140, type: !6530)
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 64)
!6531 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupMenu", file: !6532, line: 355, baseType: !6533)
!6532 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6533 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupMenu", file: !6532, line: 355, flags: DIFlagFwdDecl)
!6534 = !DILocation(line: 3140, column: 15, scope: !6518)
!6535 = !DILocalVariable(name: "layout", scope: !6518, file: !3, line: 3141, type: !6536)
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !6532, line: 85, baseType: !2683)
!6538 = !DILocation(line: 3141, column: 12, scope: !6518)
!6539 = !DILocation(line: 3143, column: 39, scope: !6518)
!6540 = !DILocation(line: 3143, column: 10, scope: !6518)
!6541 = !DILocation(line: 3143, column: 2, scope: !6518)
!6542 = !DILocation(line: 3145, column: 8, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 3145, column: 8)
!6544 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 3143, column: 46)
!6545 = !DILocation(line: 3145, column: 14, scope: !6543)
!6546 = !DILocation(line: 3145, column: 20, scope: !6543)
!6547 = !DILocation(line: 3145, column: 8, scope: !6544)
!6548 = !DILocation(line: 3147, column: 26, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 3145, column: 35)
!6550 = !DILocation(line: 3147, column: 11, scope: !6549)
!6551 = !DILocation(line: 3147, column: 9, scope: !6549)
!6552 = !DILocation(line: 3148, column: 30, scope: !6549)
!6553 = !DILocation(line: 3148, column: 14, scope: !6549)
!6554 = !DILocation(line: 3148, column: 12, scope: !6549)
!6555 = !DILocation(line: 3149, column: 21, scope: !6549)
!6556 = !DILocation(line: 3149, column: 29, scope: !6549)
!6557 = !DILocation(line: 3149, column: 33, scope: !6549)
!6558 = !DILocation(line: 3149, column: 5, scope: !6549)
!6559 = !DILocation(line: 3151, column: 21, scope: !6549)
!6560 = !DILocation(line: 3151, column: 29, scope: !6549)
!6561 = !DILocation(line: 3151, column: 33, scope: !6549)
!6562 = !DILocation(line: 3151, column: 5, scope: !6549)
!6563 = !DILocation(line: 3153, column: 21, scope: !6549)
!6564 = !DILocation(line: 3153, column: 29, scope: !6549)
!6565 = !DILocation(line: 3153, column: 33, scope: !6549)
!6566 = !DILocation(line: 3153, column: 5, scope: !6549)
!6567 = !DILocation(line: 3155, column: 18, scope: !6549)
!6568 = !DILocation(line: 3155, column: 21, scope: !6549)
!6569 = !DILocation(line: 3155, column: 5, scope: !6549)
!6570 = !DILocation(line: 3156, column: 4, scope: !6549)
!6571 = !DILocation(line: 3158, column: 26, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 3157, column: 9)
!6573 = !DILocation(line: 3158, column: 11, scope: !6572)
!6574 = !DILocation(line: 3158, column: 9, scope: !6572)
!6575 = !DILocation(line: 3159, column: 30, scope: !6572)
!6576 = !DILocation(line: 3159, column: 14, scope: !6572)
!6577 = !DILocation(line: 3159, column: 12, scope: !6572)
!6578 = !DILocation(line: 3160, column: 21, scope: !6572)
!6579 = !DILocation(line: 3160, column: 29, scope: !6572)
!6580 = !DILocation(line: 3160, column: 33, scope: !6572)
!6581 = !DILocation(line: 3160, column: 5, scope: !6572)
!6582 = !DILocation(line: 3161, column: 21, scope: !6572)
!6583 = !DILocation(line: 3161, column: 29, scope: !6572)
!6584 = !DILocation(line: 3161, column: 33, scope: !6572)
!6585 = !DILocation(line: 3161, column: 5, scope: !6572)
!6586 = !DILocation(line: 3163, column: 21, scope: !6572)
!6587 = !DILocation(line: 3163, column: 29, scope: !6572)
!6588 = !DILocation(line: 3163, column: 33, scope: !6572)
!6589 = !DILocation(line: 3163, column: 5, scope: !6572)
!6590 = !DILocation(line: 3164, column: 18, scope: !6572)
!6591 = !DILocation(line: 3164, column: 21, scope: !6572)
!6592 = !DILocation(line: 3164, column: 5, scope: !6572)
!6593 = !DILocation(line: 3166, column: 4, scope: !6544)
!6594 = !DILocation(line: 3168, column: 25, scope: !6544)
!6595 = !DILocation(line: 3168, column: 10, scope: !6544)
!6596 = !DILocation(line: 3168, column: 8, scope: !6544)
!6597 = !DILocation(line: 3169, column: 29, scope: !6544)
!6598 = !DILocation(line: 3169, column: 13, scope: !6544)
!6599 = !DILocation(line: 3169, column: 11, scope: !6544)
!6600 = !DILocation(line: 3170, column: 20, scope: !6544)
!6601 = !DILocation(line: 3170, column: 28, scope: !6544)
!6602 = !DILocation(line: 3170, column: 32, scope: !6544)
!6603 = !DILocation(line: 3170, column: 4, scope: !6544)
!6604 = !DILocation(line: 3171, column: 20, scope: !6544)
!6605 = !DILocation(line: 3171, column: 28, scope: !6544)
!6606 = !DILocation(line: 3171, column: 32, scope: !6544)
!6607 = !DILocation(line: 3171, column: 4, scope: !6544)
!6608 = !DILocation(line: 3172, column: 17, scope: !6544)
!6609 = !DILocation(line: 3172, column: 20, scope: !6544)
!6610 = !DILocation(line: 3172, column: 4, scope: !6544)
!6611 = !DILocation(line: 3173, column: 4, scope: !6544)
!6612 = !DILocation(line: 3176, column: 2, scope: !6518)
!6613 = distinct !DISubprogram(name: "TEXT_OT_to_3d_object", scope: !3, file: !3, line: 3207, type: !1205, scopeLine: 3208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6614 = !DILocalVariable(name: "ot", arg: 1, scope: !6613, file: !3, line: 3207, type: !1207)
!6615 = !DILocation(line: 3207, column: 43, scope: !6613)
!6616 = !DILocation(line: 3210, column: 2, scope: !6613)
!6617 = !DILocation(line: 3210, column: 6, scope: !6613)
!6618 = !DILocation(line: 3210, column: 11, scope: !6613)
!6619 = !DILocation(line: 3211, column: 2, scope: !6613)
!6620 = !DILocation(line: 3211, column: 6, scope: !6613)
!6621 = !DILocation(line: 3211, column: 13, scope: !6613)
!6622 = !DILocation(line: 3212, column: 2, scope: !6613)
!6623 = !DILocation(line: 3212, column: 6, scope: !6613)
!6624 = !DILocation(line: 3212, column: 18, scope: !6613)
!6625 = !DILocation(line: 3215, column: 2, scope: !6613)
!6626 = !DILocation(line: 3215, column: 6, scope: !6613)
!6627 = !DILocation(line: 3215, column: 11, scope: !6613)
!6628 = !DILocation(line: 3216, column: 2, scope: !6613)
!6629 = !DILocation(line: 3216, column: 6, scope: !6613)
!6630 = !DILocation(line: 3216, column: 11, scope: !6613)
!6631 = !DILocation(line: 3219, column: 2, scope: !6613)
!6632 = !DILocation(line: 3219, column: 6, scope: !6613)
!6633 = !DILocation(line: 3219, column: 11, scope: !6613)
!6634 = !DILocation(line: 3222, column: 18, scope: !6613)
!6635 = !DILocation(line: 3222, column: 22, scope: !6613)
!6636 = !DILocation(line: 3222, column: 2, scope: !6613)
!6637 = !DILocation(line: 3223, column: 1, scope: !6613)
!6638 = distinct !DISubprogram(name: "text_to_3d_object_exec", scope: !3, file: !3, line: 3197, type: !2948, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6639 = !DILocalVariable(name: "C", arg: 1, scope: !6638, file: !3, line: 3197, type: !2783)
!6640 = !DILocation(line: 3197, column: 45, scope: !6638)
!6641 = !DILocalVariable(name: "op", arg: 2, scope: !6638, file: !3, line: 3197, type: !2785)
!6642 = !DILocation(line: 3197, column: 60, scope: !6638)
!6643 = !DILocalVariable(name: "text", scope: !6638, file: !3, line: 3199, type: !2858)
!6644 = !DILocation(line: 3199, column: 8, scope: !6638)
!6645 = !DILocation(line: 3199, column: 34, scope: !6638)
!6646 = !DILocation(line: 3199, column: 15, scope: !6638)
!6647 = !DILocalVariable(name: "split_lines", scope: !6638, file: !3, line: 3200, type: !3143)
!6648 = !DILocation(line: 3200, column: 13, scope: !6638)
!6649 = !DILocation(line: 3200, column: 43, scope: !6638)
!6650 = !DILocation(line: 3200, column: 47, scope: !6638)
!6651 = !DILocation(line: 3200, column: 27, scope: !6638)
!6652 = !DILocation(line: 3202, column: 20, scope: !6638)
!6653 = !DILocation(line: 3202, column: 23, scope: !6638)
!6654 = !DILocation(line: 3202, column: 29, scope: !6638)
!6655 = !DILocation(line: 3202, column: 2, scope: !6638)
!6656 = !DILocation(line: 3204, column: 2, scope: !6638)
!6657 = distinct !DISubprogram(name: "ED_text_undo_step", scope: !3, file: !3, line: 3228, type: !6658, scopeLine: 3229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{null, !2783, !1200}
!6660 = !DILocalVariable(name: "C", arg: 1, scope: !6657, file: !3, line: 3228, type: !2783)
!6661 = !DILocation(line: 3228, column: 34, scope: !6657)
!6662 = !DILocalVariable(name: "step", arg: 2, scope: !6657, file: !3, line: 3228, type: !1200)
!6663 = !DILocation(line: 3228, column: 41, scope: !6657)
!6664 = !DILocalVariable(name: "text", scope: !6657, file: !3, line: 3230, type: !2858)
!6665 = !DILocation(line: 3230, column: 8, scope: !6657)
!6666 = !DILocation(line: 3230, column: 34, scope: !6657)
!6667 = !DILocation(line: 3230, column: 15, scope: !6657)
!6668 = !DILocation(line: 3232, column: 7, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3232, column: 6)
!6670 = !DILocation(line: 3232, column: 6, scope: !6657)
!6671 = !DILocation(line: 3233, column: 3, scope: !6669)
!6672 = !DILocation(line: 3235, column: 6, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3235, column: 6)
!6674 = !DILocation(line: 3235, column: 11, scope: !6673)
!6675 = !DILocation(line: 3235, column: 6, scope: !6657)
!6676 = !DILocation(line: 3236, column: 15, scope: !6673)
!6677 = !DILocation(line: 3236, column: 3, scope: !6673)
!6678 = !DILocation(line: 3237, column: 11, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 3237, column: 11)
!6680 = !DILocation(line: 3237, column: 16, scope: !6679)
!6681 = !DILocation(line: 3237, column: 11, scope: !6673)
!6682 = !DILocation(line: 3238, column: 15, scope: !6679)
!6683 = !DILocation(line: 3238, column: 3, scope: !6679)
!6684 = !DILocation(line: 3240, column: 21, scope: !6657)
!6685 = !DILocation(line: 3240, column: 2, scope: !6657)
!6686 = !DILocation(line: 3242, column: 27, scope: !6657)
!6687 = !DILocation(line: 3242, column: 2, scope: !6657)
!6688 = !DILocation(line: 3243, column: 46, scope: !6657)
!6689 = !DILocation(line: 3243, column: 28, scope: !6657)
!6690 = !DILocation(line: 3243, column: 2, scope: !6657)
!6691 = !DILocation(line: 3244, column: 24, scope: !6657)
!6692 = !DILocation(line: 3244, column: 48, scope: !6657)
!6693 = !DILocation(line: 3244, column: 2, scope: !6657)
!6694 = !DILocation(line: 3245, column: 1, scope: !6657)
!6695 = distinct !DISubprogram(name: "text_open_init", scope: !3, file: !3, line: 212, type: !3278, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6696 = !DILocalVariable(name: "C", arg: 1, scope: !6695, file: !3, line: 212, type: !2783)
!6697 = !DILocation(line: 212, column: 38, scope: !6695)
!6698 = !DILocalVariable(name: "op", arg: 2, scope: !6695, file: !3, line: 212, type: !2785)
!6699 = !DILocation(line: 212, column: 53, scope: !6695)
!6700 = !DILocalVariable(name: "pprop", scope: !6695, file: !3, line: 214, type: !3130)
!6701 = !DILocation(line: 214, column: 22, scope: !6695)
!6702 = !DILocation(line: 216, column: 27, scope: !6695)
!6703 = !DILocation(line: 216, column: 25, scope: !6695)
!6704 = !DILocation(line: 216, column: 19, scope: !6695)
!6705 = !DILocation(line: 216, column: 2, scope: !6695)
!6706 = !DILocation(line: 216, column: 6, scope: !6695)
!6707 = !DILocation(line: 216, column: 17, scope: !6695)
!6708 = !DILocation(line: 217, column: 22, scope: !6695)
!6709 = !DILocation(line: 217, column: 26, scope: !6695)
!6710 = !DILocation(line: 217, column: 33, scope: !6695)
!6711 = !DILocation(line: 217, column: 39, scope: !6695)
!6712 = !DILocation(line: 217, column: 46, scope: !6695)
!6713 = !DILocation(line: 217, column: 2, scope: !6695)
!6714 = !DILocation(line: 218, column: 1, scope: !6695)
!6715 = distinct !DISubprogram(name: "txt_screen_clamp", scope: !3, file: !3, line: 2103, type: !6716, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6716 = !DISubroutineType(types: !6717)
!6717 = !{null, !2804, !3324}
!6718 = !DILocalVariable(name: "st", arg: 1, scope: !6715, file: !3, line: 2103, type: !2804)
!6719 = !DILocation(line: 2103, column: 41, scope: !6715)
!6720 = !DILocalVariable(name: "ar", arg: 2, scope: !6715, file: !3, line: 2103, type: !3324)
!6721 = !DILocation(line: 2103, column: 54, scope: !6715)
!6722 = !DILocation(line: 2105, column: 6, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 2105, column: 6)
!6724 = !DILocation(line: 2105, column: 10, scope: !6723)
!6725 = !DILocation(line: 2105, column: 14, scope: !6723)
!6726 = !DILocation(line: 2105, column: 6, scope: !6715)
!6727 = !DILocation(line: 2106, column: 3, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2105, column: 20)
!6729 = !DILocation(line: 2106, column: 7, scope: !6728)
!6730 = !DILocation(line: 2106, column: 11, scope: !6728)
!6731 = !DILocation(line: 2107, column: 2, scope: !6728)
!6732 = !DILocalVariable(name: "last", scope: !6733, file: !3, line: 2109, type: !1200)
!6733 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2108, column: 7)
!6734 = !DILocation(line: 2109, column: 7, scope: !6733)
!6735 = !DILocation(line: 2110, column: 31, scope: !6733)
!6736 = !DILocation(line: 2110, column: 35, scope: !6733)
!6737 = !DILocation(line: 2110, column: 10, scope: !6733)
!6738 = !DILocation(line: 2110, column: 8, scope: !6733)
!6739 = !DILocation(line: 2111, column: 10, scope: !6733)
!6740 = !DILocation(line: 2111, column: 18, scope: !6733)
!6741 = !DILocation(line: 2111, column: 22, scope: !6733)
!6742 = !DILocation(line: 2111, column: 32, scope: !6733)
!6743 = !DILocation(line: 2111, column: 15, scope: !6733)
!6744 = !DILocation(line: 2111, column: 8, scope: !6733)
!6745 = !DILocation(line: 2112, column: 7, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 2112, column: 7)
!6747 = !DILocation(line: 2112, column: 12, scope: !6746)
!6748 = !DILocation(line: 2112, column: 16, scope: !6746)
!6749 = !DILocation(line: 2112, column: 19, scope: !6746)
!6750 = !DILocation(line: 2112, column: 23, scope: !6746)
!6751 = !DILocation(line: 2112, column: 29, scope: !6746)
!6752 = !DILocation(line: 2112, column: 27, scope: !6746)
!6753 = !DILocation(line: 2112, column: 7, scope: !6733)
!6754 = !DILocation(line: 2113, column: 14, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2112, column: 35)
!6756 = !DILocation(line: 2113, column: 4, scope: !6755)
!6757 = !DILocation(line: 2113, column: 8, scope: !6755)
!6758 = !DILocation(line: 2113, column: 12, scope: !6755)
!6759 = !DILocation(line: 2114, column: 3, scope: !6755)
!6760 = !DILocation(line: 2116, column: 1, scope: !6715)
!6761 = distinct !DISubprogram(name: "txt_write_file", scope: !3, file: !3, line: 457, type: !6762, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{null, !2858, !6764}
!6764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6765, size: 64)
!6765 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !99, line: 112, baseType: !1283)
!6766 = !DILocalVariable(name: "text", arg: 1, scope: !6761, file: !3, line: 457, type: !2858)
!6767 = !DILocation(line: 457, column: 34, scope: !6761)
!6768 = !DILocalVariable(name: "reports", arg: 2, scope: !6761, file: !3, line: 457, type: !6764)
!6769 = !DILocation(line: 457, column: 52, scope: !6761)
!6770 = !DILocalVariable(name: "fp", scope: !6761, file: !3, line: 459, type: !6771)
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6772 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !6773, line: 7, baseType: !6774)
!6773 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!6774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !6775, line: 49, size: 1728, elements: !6776)
!6775 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!6776 = !{!6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784, !6785, !6786, !6787, !6788, !6789, !6792, !6794, !6795, !6796, !6799, !6801, !6803, !6804, !6807, !6809, !6812, !6815, !6816, !6817, !6818, !6819}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !6774, file: !6775, line: 51, baseType: !1200, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !6774, file: !6775, line: 54, baseType: !1460, size: 64, offset: 64)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !6774, file: !6775, line: 55, baseType: !1460, size: 64, offset: 128)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !6774, file: !6775, line: 56, baseType: !1460, size: 64, offset: 192)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !6774, file: !6775, line: 57, baseType: !1460, size: 64, offset: 256)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !6774, file: !6775, line: 58, baseType: !1460, size: 64, offset: 320)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !6774, file: !6775, line: 59, baseType: !1460, size: 64, offset: 384)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !6774, file: !6775, line: 60, baseType: !1460, size: 64, offset: 448)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !6774, file: !6775, line: 61, baseType: !1460, size: 64, offset: 512)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !6774, file: !6775, line: 64, baseType: !1460, size: 64, offset: 576)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !6774, file: !6775, line: 65, baseType: !1460, size: 64, offset: 640)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !6774, file: !6775, line: 66, baseType: !1460, size: 64, offset: 704)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !6774, file: !6775, line: 68, baseType: !6790, size: 64, offset: 768)
!6790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6791, size: 64)
!6791 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !6775, line: 36, flags: DIFlagFwdDecl)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !6774, file: !6775, line: 70, baseType: !6793, size: 64, offset: 832)
!6793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6774, size: 64)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !6774, file: !6775, line: 72, baseType: !1200, size: 32, offset: 896)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !6774, file: !6775, line: 73, baseType: !1200, size: 32, offset: 928)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !6774, file: !6775, line: 74, baseType: !6797, size: 64, offset: 960)
!6797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2563, line: 152, baseType: !6798)
!6798 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !6774, file: !6775, line: 77, baseType: !6800, size: 16, offset: 1024)
!6800 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !6774, file: !6775, line: 78, baseType: !6802, size: 8, offset: 1040)
!6802 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !6774, file: !6775, line: 79, baseType: !1392, size: 8, offset: 1048)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !6774, file: !6775, line: 81, baseType: !6805, size: 64, offset: 1088)
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6806 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !6775, line: 43, baseType: null)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !6774, file: !6775, line: 89, baseType: !6808, size: 64, offset: 1152)
!6808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2563, line: 153, baseType: !6798)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !6774, file: !6775, line: 91, baseType: !6810, size: 64, offset: 1216)
!6810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6811, size: 64)
!6811 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !6775, line: 37, flags: DIFlagFwdDecl)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !6774, file: !6775, line: 92, baseType: !6813, size: 64, offset: 1280)
!6813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6814, size: 64)
!6814 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !6775, line: 38, flags: DIFlagFwdDecl)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !6774, file: !6775, line: 93, baseType: !6793, size: 64, offset: 1344)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !6774, file: !6775, line: 94, baseType: !1195, size: 64, offset: 1408)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !6774, file: !6775, line: 95, baseType: !1196, size: 64, offset: 1472)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !6774, file: !6775, line: 96, baseType: !1200, size: 32, offset: 1536)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !6774, file: !6775, line: 98, baseType: !6820, size: 160, offset: 1568)
!6820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 160, elements: !6821)
!6821 = !{!6822}
!6822 = !DISubrange(count: 20)
!6823 = !DILocation(line: 459, column: 8, scope: !6761)
!6824 = !DILocalVariable(name: "tmp", scope: !6761, file: !3, line: 460, type: !2398)
!6825 = !DILocation(line: 460, column: 12, scope: !6761)
!6826 = !DILocalVariable(name: "st", scope: !6761, file: !3, line: 461, type: !6827)
!6827 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_stat_t", file: !6828, line: 73, baseType: !6829)
!6828 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !6830, line: 46, size: 1152, elements: !6831)
!6830 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!6831 = !{!6832, !6834, !6836, !6838, !6840, !6842, !6844, !6845, !6846, !6847, !6849, !6851, !6859, !6860, !6861}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !6829, file: !6830, line: 48, baseType: !6833, size: 64)
!6833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2563, line: 145, baseType: !1198)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !6829, file: !6830, line: 53, baseType: !6835, size: 64, offset: 64)
!6835 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2563, line: 148, baseType: !1198)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !6829, file: !6830, line: 61, baseType: !6837, size: 64, offset: 128)
!6837 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2563, line: 151, baseType: !1198)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !6829, file: !6830, line: 62, baseType: !6839, size: 32, offset: 192)
!6839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2563, line: 150, baseType: !7)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !6829, file: !6830, line: 64, baseType: !6841, size: 32, offset: 224)
!6841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2563, line: 146, baseType: !7)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !6829, file: !6830, line: 65, baseType: !6843, size: 32, offset: 256)
!6843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2563, line: 147, baseType: !7)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !6829, file: !6830, line: 67, baseType: !1200, size: 32, offset: 288)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !6829, file: !6830, line: 69, baseType: !6833, size: 64, offset: 320)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !6829, file: !6830, line: 74, baseType: !6797, size: 64, offset: 384)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !6829, file: !6830, line: 78, baseType: !6848, size: 64, offset: 448)
!6848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2563, line: 174, baseType: !6798)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !6829, file: !6830, line: 80, baseType: !6850, size: 64, offset: 512)
!6850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2563, line: 179, baseType: !6798)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !6829, file: !6830, line: 91, baseType: !6852, size: 128, offset: 576)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !6853, line: 10, size: 128, elements: !6854)
!6853 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!6854 = !{!6855, !6857}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6852, file: !6853, line: 12, baseType: !6856, size: 64)
!6856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2563, line: 160, baseType: !6798)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6852, file: !6853, line: 16, baseType: !6858, size: 64, offset: 64)
!6858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2563, line: 196, baseType: !6798)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !6829, file: !6830, line: 92, baseType: !6852, size: 128, offset: 704)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !6829, file: !6830, line: 93, baseType: !6852, size: 128, offset: 832)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !6829, file: !6830, line: 106, baseType: !6862, size: 192, offset: 960)
!6862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6858, size: 192, elements: !1381)
!6863 = !DILocation(line: 461, column: 13, scope: !6761)
!6864 = !DILocalVariable(name: "filepath", scope: !6761, file: !3, line: 462, type: !1326)
!6865 = !DILocation(line: 462, column: 7, scope: !6761)
!6866 = !DILocation(line: 464, column: 14, scope: !6761)
!6867 = !DILocation(line: 464, column: 24, scope: !6761)
!6868 = !DILocation(line: 464, column: 30, scope: !6761)
!6869 = !DILocation(line: 464, column: 2, scope: !6761)
!6870 = !DILocation(line: 465, column: 15, scope: !6761)
!6871 = !DILocation(line: 465, column: 27, scope: !6761)
!6872 = !DILocation(line: 465, column: 33, scope: !6761)
!6873 = !DILocation(line: 465, column: 25, scope: !6761)
!6874 = !DILocation(line: 465, column: 2, scope: !6761)
!6875 = !DILocation(line: 467, column: 17, scope: !6761)
!6876 = !DILocation(line: 467, column: 7, scope: !6761)
!6877 = !DILocation(line: 467, column: 5, scope: !6761)
!6878 = !DILocation(line: 468, column: 6, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 468, column: 6)
!6880 = !DILocation(line: 468, column: 9, scope: !6879)
!6881 = !DILocation(line: 468, column: 6, scope: !6761)
!6882 = !DILocation(line: 469, column: 15, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 468, column: 18)
!6884 = !DILocation(line: 470, column: 15, scope: !6883)
!6885 = !DILocation(line: 470, column: 25, scope: !6883)
!6886 = !DILocation(line: 470, column: 42, scope: !6883)
!6887 = !DILocation(line: 470, column: 33, scope: !6883)
!6888 = !DILocation(line: 469, column: 3, scope: !6883)
!6889 = !DILocation(line: 471, column: 3, scope: !6883)
!6890 = !DILocation(line: 474, column: 13, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 474, column: 2)
!6892 = !DILocation(line: 474, column: 19, scope: !6891)
!6893 = !DILocation(line: 474, column: 25, scope: !6891)
!6894 = !DILocation(line: 474, column: 11, scope: !6891)
!6895 = !DILocation(line: 474, column: 7, scope: !6891)
!6896 = !DILocation(line: 474, column: 32, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 474, column: 2)
!6898 = !DILocation(line: 474, column: 2, scope: !6891)
!6899 = !DILocation(line: 475, column: 9, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 474, column: 54)
!6901 = !DILocation(line: 475, column: 14, scope: !6900)
!6902 = !DILocation(line: 475, column: 20, scope: !6900)
!6903 = !DILocation(line: 475, column: 3, scope: !6900)
!6904 = !DILocation(line: 476, column: 7, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 476, column: 7)
!6906 = !DILocation(line: 476, column: 12, scope: !6905)
!6907 = !DILocation(line: 476, column: 7, scope: !6900)
!6908 = !DILocation(line: 477, column: 16, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 476, column: 18)
!6910 = !DILocation(line: 477, column: 4, scope: !6909)
!6911 = !DILocation(line: 478, column: 3, scope: !6909)
!6912 = !DILocation(line: 479, column: 2, scope: !6900)
!6913 = !DILocation(line: 474, column: 43, scope: !6897)
!6914 = !DILocation(line: 474, column: 48, scope: !6897)
!6915 = !DILocation(line: 474, column: 41, scope: !6897)
!6916 = !DILocation(line: 474, column: 2, scope: !6897)
!6917 = distinct !{!6917, !6898, !6918}
!6918 = !DILocation(line: 479, column: 2, scope: !6891)
!6919 = !DILocation(line: 481, column: 9, scope: !6761)
!6920 = !DILocation(line: 481, column: 2, scope: !6761)
!6921 = !DILocation(line: 483, column: 15, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 483, column: 6)
!6923 = !DILocation(line: 483, column: 6, scope: !6922)
!6924 = !DILocation(line: 483, column: 30, scope: !6922)
!6925 = !DILocation(line: 483, column: 6, scope: !6761)
!6926 = !DILocation(line: 484, column: 20, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 483, column: 36)
!6928 = !DILocation(line: 484, column: 17, scope: !6927)
!6929 = !DILocation(line: 484, column: 3, scope: !6927)
!6930 = !DILocation(line: 484, column: 9, scope: !6927)
!6931 = !DILocation(line: 484, column: 15, scope: !6927)
!6932 = !DILocation(line: 487, column: 15, scope: !6927)
!6933 = !DILocation(line: 487, column: 53, scope: !6927)
!6934 = !DILocation(line: 487, column: 3, scope: !6927)
!6935 = !DILocation(line: 488, column: 2, scope: !6927)
!6936 = !DILocation(line: 490, column: 3, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 489, column: 7)
!6938 = !DILocation(line: 490, column: 9, scope: !6937)
!6939 = !DILocation(line: 490, column: 15, scope: !6937)
!6940 = !DILocation(line: 491, column: 15, scope: !6937)
!6941 = !DILocation(line: 492, column: 15, scope: !6937)
!6942 = !DILocation(line: 492, column: 25, scope: !6937)
!6943 = !DILocation(line: 492, column: 42, scope: !6937)
!6944 = !DILocation(line: 492, column: 33, scope: !6937)
!6945 = !DILocation(line: 491, column: 3, scope: !6937)
!6946 = !DILocation(line: 495, column: 2, scope: !6761)
!6947 = !DILocation(line: 495, column: 8, scope: !6761)
!6948 = !DILocation(line: 495, column: 14, scope: !6761)
!6949 = !DILocation(line: 496, column: 1, scope: !6761)
!6950 = distinct !DISubprogram(name: "text_run_script", scope: !3, file: !3, line: 591, type: !6951, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6951 = !DISubroutineType(types: !6952)
!6952 = !{!1200, !2783, !6764}
!6953 = !DILocalVariable(name: "C", arg: 1, scope: !6950, file: !3, line: 591, type: !2783)
!6954 = !DILocation(line: 591, column: 38, scope: !6950)
!6955 = !DILocalVariable(name: "reports", arg: 2, scope: !6950, file: !3, line: 591, type: !6764)
!6956 = !DILocation(line: 591, column: 53, scope: !6950)
!6957 = !DILocation(line: 624, column: 8, scope: !6950)
!6958 = !DILocation(line: 625, column: 8, scope: !6950)
!6959 = !DILocation(line: 627, column: 2, scope: !6950)
!6960 = distinct !DISubprogram(name: "txt_copy_clipboard", scope: !3, file: !3, line: 875, type: !2901, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6961 = !DILocalVariable(name: "text", arg: 1, scope: !6960, file: !3, line: 875, type: !2858)
!6962 = !DILocation(line: 875, column: 38, scope: !6960)
!6963 = !DILocalVariable(name: "buf", scope: !6960, file: !3, line: 877, type: !1460)
!6964 = !DILocation(line: 877, column: 8, scope: !6960)
!6965 = !DILocation(line: 879, column: 26, scope: !6960)
!6966 = !DILocation(line: 879, column: 8, scope: !6960)
!6967 = !DILocation(line: 879, column: 6, scope: !6960)
!6968 = !DILocation(line: 881, column: 6, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 881, column: 6)
!6970 = !DILocation(line: 881, column: 6, scope: !6960)
!6971 = !DILocation(line: 882, column: 25, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 881, column: 11)
!6973 = !DILocation(line: 882, column: 3, scope: !6972)
!6974 = !DILocation(line: 883, column: 3, scope: !6972)
!6975 = !DILocation(line: 883, column: 13, scope: !6972)
!6976 = !DILocation(line: 884, column: 2, scope: !6972)
!6977 = !DILocation(line: 885, column: 1, scope: !6960)
!6978 = distinct !DISubprogram(name: "txt_copy_selected", scope: !3, file: !3, line: 717, type: !6979, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!1460, !2858}
!6981 = !DILocalVariable(name: "text", arg: 1, scope: !6978, file: !3, line: 717, type: !2858)
!6982 = !DILocation(line: 717, column: 38, scope: !6978)
!6983 = !DILocalVariable(name: "tmp", scope: !6978, file: !3, line: 719, type: !2398)
!6984 = !DILocation(line: 719, column: 12, scope: !6978)
!6985 = !DILocalVariable(name: "linef", scope: !6978, file: !3, line: 719, type: !2398)
!6986 = !DILocation(line: 719, column: 18, scope: !6978)
!6987 = !DILocalVariable(name: "linel", scope: !6978, file: !3, line: 719, type: !2398)
!6988 = !DILocation(line: 719, column: 26, scope: !6978)
!6989 = !DILocalVariable(name: "buf", scope: !6978, file: !3, line: 720, type: !1460)
!6990 = !DILocation(line: 720, column: 8, scope: !6978)
!6991 = !DILocalVariable(name: "charf", scope: !6978, file: !3, line: 721, type: !1200)
!6992 = !DILocation(line: 721, column: 6, scope: !6978)
!6993 = !DILocalVariable(name: "charl", scope: !6978, file: !3, line: 721, type: !1200)
!6994 = !DILocation(line: 721, column: 13, scope: !6978)
!6995 = !DILocalVariable(name: "length", scope: !6978, file: !3, line: 721, type: !1200)
!6996 = !DILocation(line: 721, column: 20, scope: !6978)
!6997 = !DILocation(line: 723, column: 7, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 723, column: 6)
!6999 = !DILocation(line: 723, column: 6, scope: !6978)
!7000 = !DILocation(line: 723, column: 13, scope: !6998)
!7001 = !DILocation(line: 724, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 724, column: 6)
!7003 = !DILocation(line: 724, column: 13, scope: !7002)
!7004 = !DILocation(line: 724, column: 6, scope: !6978)
!7005 = !DILocation(line: 724, column: 19, scope: !7002)
!7006 = !DILocation(line: 725, column: 7, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 725, column: 6)
!7008 = !DILocation(line: 725, column: 13, scope: !7007)
!7009 = !DILocation(line: 725, column: 6, scope: !6978)
!7010 = !DILocation(line: 725, column: 19, scope: !7007)
!7011 = !DILocation(line: 727, column: 19, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 727, column: 6)
!7013 = !DILocation(line: 727, column: 7, scope: !7012)
!7014 = !DILocation(line: 727, column: 6, scope: !6978)
!7015 = !DILocation(line: 727, column: 26, scope: !7012)
!7016 = !DILocation(line: 729, column: 6, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 729, column: 6)
!7018 = !DILocation(line: 729, column: 12, scope: !7017)
!7019 = !DILocation(line: 729, column: 20, scope: !7017)
!7020 = !DILocation(line: 729, column: 26, scope: !7017)
!7021 = !DILocation(line: 729, column: 17, scope: !7017)
!7022 = !DILocation(line: 729, column: 6, scope: !6978)
!7023 = !DILocation(line: 730, column: 19, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 729, column: 32)
!7025 = !DILocation(line: 730, column: 25, scope: !7024)
!7026 = !DILocation(line: 730, column: 17, scope: !7024)
!7027 = !DILocation(line: 730, column: 9, scope: !7024)
!7028 = !DILocation(line: 732, column: 7, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 732, column: 7)
!7030 = !DILocation(line: 732, column: 13, scope: !7029)
!7031 = !DILocation(line: 732, column: 20, scope: !7029)
!7032 = !DILocation(line: 732, column: 26, scope: !7029)
!7033 = !DILocation(line: 732, column: 18, scope: !7029)
!7034 = !DILocation(line: 732, column: 7, scope: !7024)
!7035 = !DILocation(line: 733, column: 12, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 732, column: 32)
!7037 = !DILocation(line: 733, column: 18, scope: !7036)
!7038 = !DILocation(line: 733, column: 10, scope: !7036)
!7039 = !DILocation(line: 734, column: 12, scope: !7036)
!7040 = !DILocation(line: 734, column: 18, scope: !7036)
!7041 = !DILocation(line: 734, column: 10, scope: !7036)
!7042 = !DILocation(line: 735, column: 3, scope: !7036)
!7043 = !DILocation(line: 737, column: 12, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 736, column: 8)
!7045 = !DILocation(line: 737, column: 18, scope: !7044)
!7046 = !DILocation(line: 737, column: 10, scope: !7044)
!7047 = !DILocation(line: 738, column: 12, scope: !7044)
!7048 = !DILocation(line: 738, column: 18, scope: !7044)
!7049 = !DILocation(line: 738, column: 10, scope: !7044)
!7050 = !DILocation(line: 740, column: 2, scope: !7024)
!7051 = !DILocation(line: 741, column: 24, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 741, column: 11)
!7053 = !DILocation(line: 741, column: 30, scope: !7052)
!7054 = !DILocation(line: 741, column: 36, scope: !7052)
!7055 = !DILocation(line: 741, column: 42, scope: !7052)
!7056 = !DILocation(line: 741, column: 11, scope: !7052)
!7057 = !DILocation(line: 741, column: 48, scope: !7052)
!7058 = !DILocation(line: 741, column: 11, scope: !7017)
!7059 = !DILocation(line: 742, column: 11, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 741, column: 53)
!7061 = !DILocation(line: 742, column: 17, scope: !7060)
!7062 = !DILocation(line: 742, column: 9, scope: !7060)
!7063 = !DILocation(line: 743, column: 11, scope: !7060)
!7064 = !DILocation(line: 743, column: 17, scope: !7060)
!7065 = !DILocation(line: 743, column: 9, scope: !7060)
!7066 = !DILocation(line: 745, column: 11, scope: !7060)
!7067 = !DILocation(line: 745, column: 17, scope: !7060)
!7068 = !DILocation(line: 745, column: 9, scope: !7060)
!7069 = !DILocation(line: 746, column: 11, scope: !7060)
!7070 = !DILocation(line: 746, column: 17, scope: !7060)
!7071 = !DILocation(line: 746, column: 9, scope: !7060)
!7072 = !DILocation(line: 747, column: 2, scope: !7060)
!7073 = !DILocation(line: 749, column: 11, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 748, column: 7)
!7075 = !DILocation(line: 749, column: 17, scope: !7074)
!7076 = !DILocation(line: 749, column: 9, scope: !7074)
!7077 = !DILocation(line: 750, column: 11, scope: !7074)
!7078 = !DILocation(line: 750, column: 17, scope: !7074)
!7079 = !DILocation(line: 750, column: 9, scope: !7074)
!7080 = !DILocation(line: 752, column: 11, scope: !7074)
!7081 = !DILocation(line: 752, column: 17, scope: !7074)
!7082 = !DILocation(line: 752, column: 9, scope: !7074)
!7083 = !DILocation(line: 753, column: 11, scope: !7074)
!7084 = !DILocation(line: 753, column: 17, scope: !7074)
!7085 = !DILocation(line: 753, column: 9, scope: !7074)
!7086 = !DILocation(line: 756, column: 6, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 756, column: 6)
!7088 = !DILocation(line: 756, column: 15, scope: !7087)
!7089 = !DILocation(line: 756, column: 12, scope: !7087)
!7090 = !DILocation(line: 756, column: 6, scope: !6978)
!7091 = !DILocation(line: 757, column: 12, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 756, column: 22)
!7093 = !DILocation(line: 757, column: 20, scope: !7092)
!7094 = !DILocation(line: 757, column: 18, scope: !7092)
!7095 = !DILocation(line: 757, column: 10, scope: !7092)
!7096 = !DILocation(line: 759, column: 9, scope: !7092)
!7097 = !DILocation(line: 759, column: 21, scope: !7092)
!7098 = !DILocation(line: 759, column: 28, scope: !7092)
!7099 = !DILocation(line: 759, column: 7, scope: !7092)
!7100 = !DILocation(line: 761, column: 15, scope: !7092)
!7101 = !DILocation(line: 761, column: 20, scope: !7092)
!7102 = !DILocation(line: 761, column: 27, scope: !7092)
!7103 = !DILocation(line: 761, column: 34, scope: !7092)
!7104 = !DILocation(line: 761, column: 32, scope: !7092)
!7105 = !DILocation(line: 761, column: 41, scope: !7092)
!7106 = !DILocation(line: 761, column: 48, scope: !7092)
!7107 = !DILocation(line: 761, column: 3, scope: !7092)
!7108 = !DILocation(line: 762, column: 2, scope: !7092)
!7109 = !DILocation(line: 764, column: 13, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 763, column: 7)
!7111 = !DILocation(line: 764, column: 20, scope: !7110)
!7112 = !DILocation(line: 764, column: 26, scope: !7110)
!7113 = !DILocation(line: 764, column: 24, scope: !7110)
!7114 = !DILocation(line: 764, column: 10, scope: !7110)
!7115 = !DILocation(line: 765, column: 13, scope: !7110)
!7116 = !DILocation(line: 765, column: 10, scope: !7110)
!7117 = !DILocation(line: 766, column: 9, scope: !7110)
!7118 = !DILocation(line: 768, column: 9, scope: !7110)
!7119 = !DILocation(line: 768, column: 16, scope: !7110)
!7120 = !DILocation(line: 768, column: 7, scope: !7110)
!7121 = !DILocation(line: 769, column: 3, scope: !7110)
!7122 = !DILocation(line: 769, column: 10, scope: !7110)
!7123 = !DILocation(line: 769, column: 14, scope: !7110)
!7124 = !DILocation(line: 769, column: 17, scope: !7110)
!7125 = !DILocation(line: 769, column: 24, scope: !7110)
!7126 = !DILocation(line: 769, column: 21, scope: !7110)
!7127 = !DILocation(line: 0, scope: !7110)
!7128 = !DILocation(line: 770, column: 14, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 769, column: 31)
!7130 = !DILocation(line: 770, column: 19, scope: !7129)
!7131 = !DILocation(line: 770, column: 23, scope: !7129)
!7132 = !DILocation(line: 770, column: 11, scope: !7129)
!7133 = !DILocation(line: 771, column: 10, scope: !7129)
!7134 = !DILocation(line: 771, column: 15, scope: !7129)
!7135 = !DILocation(line: 771, column: 8, scope: !7129)
!7136 = distinct !{!7136, !7121, !7137}
!7137 = !DILocation(line: 772, column: 3, scope: !7110)
!7138 = !DILocation(line: 774, column: 9, scope: !7110)
!7139 = !DILocation(line: 774, column: 21, scope: !7110)
!7140 = !DILocation(line: 774, column: 28, scope: !7110)
!7141 = !DILocation(line: 774, column: 7, scope: !7110)
!7142 = !DILocation(line: 776, column: 11, scope: !7110)
!7143 = !DILocation(line: 776, column: 16, scope: !7110)
!7144 = !DILocation(line: 776, column: 23, scope: !7110)
!7145 = !DILocation(line: 776, column: 30, scope: !7110)
!7146 = !DILocation(line: 776, column: 28, scope: !7110)
!7147 = !DILocation(line: 776, column: 37, scope: !7110)
!7148 = !DILocation(line: 776, column: 44, scope: !7110)
!7149 = !DILocation(line: 776, column: 50, scope: !7110)
!7150 = !DILocation(line: 776, column: 48, scope: !7110)
!7151 = !DILocation(line: 776, column: 3, scope: !7110)
!7152 = !DILocation(line: 777, column: 12, scope: !7110)
!7153 = !DILocation(line: 777, column: 19, scope: !7110)
!7154 = !DILocation(line: 777, column: 25, scope: !7110)
!7155 = !DILocation(line: 777, column: 23, scope: !7110)
!7156 = !DILocation(line: 777, column: 10, scope: !7110)
!7157 = !DILocation(line: 779, column: 3, scope: !7110)
!7158 = !DILocation(line: 779, column: 13, scope: !7110)
!7159 = !DILocation(line: 779, column: 17, scope: !7110)
!7160 = !DILocation(line: 781, column: 9, scope: !7110)
!7161 = !DILocation(line: 781, column: 16, scope: !7110)
!7162 = !DILocation(line: 781, column: 7, scope: !7110)
!7163 = !DILocation(line: 782, column: 3, scope: !7110)
!7164 = !DILocation(line: 782, column: 10, scope: !7110)
!7165 = !DILocation(line: 782, column: 14, scope: !7110)
!7166 = !DILocation(line: 782, column: 17, scope: !7110)
!7167 = !DILocation(line: 782, column: 24, scope: !7110)
!7168 = !DILocation(line: 782, column: 21, scope: !7110)
!7169 = !DILocation(line: 783, column: 12, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 782, column: 31)
!7171 = !DILocation(line: 783, column: 18, scope: !7170)
!7172 = !DILocation(line: 783, column: 16, scope: !7170)
!7173 = !DILocation(line: 783, column: 26, scope: !7170)
!7174 = !DILocation(line: 783, column: 31, scope: !7170)
!7175 = !DILocation(line: 783, column: 37, scope: !7170)
!7176 = !DILocation(line: 783, column: 42, scope: !7170)
!7177 = !DILocation(line: 783, column: 4, scope: !7170)
!7178 = !DILocation(line: 784, column: 14, scope: !7170)
!7179 = !DILocation(line: 784, column: 19, scope: !7170)
!7180 = !DILocation(line: 784, column: 11, scope: !7170)
!7181 = !DILocation(line: 786, column: 4, scope: !7170)
!7182 = !DILocation(line: 786, column: 14, scope: !7170)
!7183 = !DILocation(line: 786, column: 18, scope: !7170)
!7184 = !DILocation(line: 788, column: 10, scope: !7170)
!7185 = !DILocation(line: 788, column: 15, scope: !7170)
!7186 = !DILocation(line: 788, column: 8, scope: !7170)
!7187 = distinct !{!7187, !7163, !7188}
!7188 = !DILocation(line: 789, column: 3, scope: !7110)
!7189 = !DILocation(line: 790, column: 11, scope: !7110)
!7190 = !DILocation(line: 790, column: 17, scope: !7110)
!7191 = !DILocation(line: 790, column: 15, scope: !7110)
!7192 = !DILocation(line: 790, column: 25, scope: !7110)
!7193 = !DILocation(line: 790, column: 32, scope: !7110)
!7194 = !DILocation(line: 790, column: 38, scope: !7110)
!7195 = !DILocation(line: 790, column: 3, scope: !7110)
!7196 = !DILocation(line: 791, column: 13, scope: !7110)
!7197 = !DILocation(line: 791, column: 10, scope: !7110)
!7198 = !DILocation(line: 793, column: 3, scope: !7110)
!7199 = !DILocation(line: 793, column: 7, scope: !7110)
!7200 = !DILocation(line: 793, column: 15, scope: !7110)
!7201 = !DILocation(line: 796, column: 9, scope: !6978)
!7202 = !DILocation(line: 796, column: 2, scope: !6978)
!7203 = !DILocation(line: 797, column: 1, scope: !6978)
!7204 = distinct !DISubprogram(name: "text_move_cursor", scope: !3, file: !3, line: 1818, type: !7205, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!1200, !2783, !1200, !1930}
!7207 = !DILocalVariable(name: "C", arg: 1, scope: !7204, file: !3, line: 1818, type: !2783)
!7208 = !DILocation(line: 1818, column: 39, scope: !7204)
!7209 = !DILocalVariable(name: "type", arg: 2, scope: !7204, file: !3, line: 1818, type: !1200)
!7210 = !DILocation(line: 1818, column: 46, scope: !7204)
!7211 = !DILocalVariable(name: "select", arg: 3, scope: !7204, file: !3, line: 1818, type: !1930)
!7212 = !DILocation(line: 1818, column: 57, scope: !7204)
!7213 = !DILocalVariable(name: "st", scope: !7204, file: !3, line: 1820, type: !2804)
!7214 = !DILocation(line: 1820, column: 13, scope: !7204)
!7215 = !DILocation(line: 1820, column: 36, scope: !7204)
!7216 = !DILocation(line: 1820, column: 18, scope: !7204)
!7217 = !DILocalVariable(name: "text", scope: !7204, file: !3, line: 1821, type: !2858)
!7218 = !DILocation(line: 1821, column: 8, scope: !7204)
!7219 = !DILocation(line: 1821, column: 34, scope: !7204)
!7220 = !DILocation(line: 1821, column: 15, scope: !7204)
!7221 = !DILocalVariable(name: "ar", scope: !7204, file: !3, line: 1822, type: !3324)
!7222 = !DILocation(line: 1822, column: 11, scope: !7204)
!7223 = !DILocation(line: 1822, column: 30, scope: !7204)
!7224 = !DILocation(line: 1822, column: 16, scope: !7204)
!7225 = !DILocation(line: 1825, column: 6, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1825, column: 6)
!7227 = !DILocation(line: 1825, column: 9, scope: !7226)
!7228 = !DILocation(line: 1825, column: 12, scope: !7226)
!7229 = !DILocation(line: 1825, column: 16, scope: !7226)
!7230 = !DILocation(line: 1825, column: 27, scope: !7226)
!7231 = !DILocation(line: 1825, column: 6, scope: !7204)
!7232 = !DILocation(line: 1826, column: 6, scope: !7226)
!7233 = !DILocation(line: 1826, column: 3, scope: !7226)
!7234 = !DILocation(line: 1828, column: 10, scope: !7204)
!7235 = !DILocation(line: 1828, column: 2, scope: !7204)
!7236 = !DILocation(line: 1830, column: 9, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1830, column: 8)
!7238 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1828, column: 16)
!7239 = !DILocation(line: 1830, column: 8, scope: !7238)
!7240 = !DILocation(line: 1831, column: 19, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1830, column: 17)
!7242 = !DILocation(line: 1831, column: 5, scope: !7241)
!7243 = !DILocation(line: 1832, column: 4, scope: !7241)
!7244 = !DILocation(line: 1833, column: 8, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1833, column: 8)
!7246 = !DILocation(line: 1833, column: 11, scope: !7245)
!7247 = !DILocation(line: 1833, column: 14, scope: !7245)
!7248 = !DILocation(line: 1833, column: 18, scope: !7245)
!7249 = !DILocation(line: 1833, column: 27, scope: !7245)
!7250 = !DILocation(line: 1833, column: 30, scope: !7245)
!7251 = !DILocation(line: 1833, column: 8, scope: !7238)
!7252 = !DILocation(line: 1833, column: 52, scope: !7245)
!7253 = !DILocation(line: 1833, column: 56, scope: !7245)
!7254 = !DILocation(line: 1833, column: 60, scope: !7245)
!7255 = !DILocation(line: 1833, column: 34, scope: !7245)
!7256 = !DILocation(line: 1834, column: 22, scope: !7245)
!7257 = !DILocation(line: 1834, column: 28, scope: !7245)
!7258 = !DILocation(line: 1834, column: 9, scope: !7245)
!7259 = !DILocation(line: 1835, column: 4, scope: !7238)
!7260 = !DILocation(line: 1838, column: 9, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1838, column: 8)
!7262 = !DILocation(line: 1838, column: 8, scope: !7238)
!7263 = !DILocation(line: 1839, column: 19, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 1838, column: 17)
!7265 = !DILocation(line: 1839, column: 5, scope: !7264)
!7266 = !DILocation(line: 1840, column: 4, scope: !7264)
!7267 = !DILocation(line: 1841, column: 8, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1841, column: 8)
!7269 = !DILocation(line: 1841, column: 11, scope: !7268)
!7270 = !DILocation(line: 1841, column: 14, scope: !7268)
!7271 = !DILocation(line: 1841, column: 18, scope: !7268)
!7272 = !DILocation(line: 1841, column: 27, scope: !7268)
!7273 = !DILocation(line: 1841, column: 30, scope: !7268)
!7274 = !DILocation(line: 1841, column: 8, scope: !7238)
!7275 = !DILocation(line: 1841, column: 52, scope: !7268)
!7276 = !DILocation(line: 1841, column: 56, scope: !7268)
!7277 = !DILocation(line: 1841, column: 60, scope: !7268)
!7278 = !DILocation(line: 1841, column: 34, scope: !7268)
!7279 = !DILocation(line: 1842, column: 22, scope: !7268)
!7280 = !DILocation(line: 1842, column: 28, scope: !7268)
!7281 = !DILocation(line: 1842, column: 9, scope: !7268)
!7282 = !DILocation(line: 1843, column: 4, scope: !7238)
!7283 = !DILocation(line: 1846, column: 17, scope: !7238)
!7284 = !DILocation(line: 1846, column: 23, scope: !7238)
!7285 = !DILocation(line: 1846, column: 4, scope: !7238)
!7286 = !DILocation(line: 1847, column: 4, scope: !7238)
!7287 = !DILocation(line: 1850, column: 17, scope: !7238)
!7288 = !DILocation(line: 1850, column: 23, scope: !7238)
!7289 = !DILocation(line: 1850, column: 4, scope: !7238)
!7290 = !DILocation(line: 1851, column: 4, scope: !7238)
!7291 = !DILocation(line: 1854, column: 33, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1854, column: 8)
!7293 = !DILocation(line: 1854, column: 8, scope: !7292)
!7294 = !DILocation(line: 1854, column: 8, scope: !7238)
!7295 = !DILocation(line: 1855, column: 19, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 1854, column: 40)
!7297 = !DILocation(line: 1855, column: 25, scope: !7296)
!7298 = !DILocation(line: 1855, column: 5, scope: !7296)
!7299 = !DILocation(line: 1856, column: 4, scope: !7296)
!7300 = !DILocation(line: 1857, column: 18, scope: !7238)
!7301 = !DILocation(line: 1857, column: 24, scope: !7238)
!7302 = !DILocation(line: 1857, column: 4, scope: !7238)
!7303 = !DILocation(line: 1858, column: 4, scope: !7238)
!7304 = !DILocation(line: 1861, column: 31, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1861, column: 8)
!7306 = !DILocation(line: 1861, column: 8, scope: !7305)
!7307 = !DILocation(line: 1861, column: 8, scope: !7238)
!7308 = !DILocation(line: 1862, column: 20, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 1861, column: 38)
!7310 = !DILocation(line: 1862, column: 26, scope: !7309)
!7311 = !DILocation(line: 1862, column: 5, scope: !7309)
!7312 = !DILocation(line: 1863, column: 4, scope: !7309)
!7313 = !DILocation(line: 1864, column: 19, scope: !7238)
!7314 = !DILocation(line: 1864, column: 25, scope: !7238)
!7315 = !DILocation(line: 1864, column: 4, scope: !7238)
!7316 = !DILocation(line: 1865, column: 4, scope: !7238)
!7317 = !DILocation(line: 1868, column: 20, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1868, column: 8)
!7319 = !DILocation(line: 1868, column: 8, scope: !7318)
!7320 = !DILocation(line: 1868, column: 26, scope: !7318)
!7321 = !DILocation(line: 1868, column: 30, scope: !7318)
!7322 = !DILocation(line: 1868, column: 8, scope: !7238)
!7323 = !DILocation(line: 1869, column: 23, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 1868, column: 38)
!7325 = !DILocation(line: 1869, column: 5, scope: !7324)
!7326 = !DILocation(line: 1870, column: 17, scope: !7324)
!7327 = !DILocation(line: 1870, column: 5, scope: !7324)
!7328 = !DILocation(line: 1871, column: 4, scope: !7324)
!7329 = !DILocation(line: 1873, column: 19, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 1872, column: 9)
!7331 = !DILocation(line: 1873, column: 25, scope: !7330)
!7332 = !DILocation(line: 1873, column: 5, scope: !7330)
!7333 = !DILocation(line: 1875, column: 4, scope: !7238)
!7334 = !DILocation(line: 1878, column: 20, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1878, column: 8)
!7336 = !DILocation(line: 1878, column: 8, scope: !7335)
!7337 = !DILocation(line: 1878, column: 26, scope: !7335)
!7338 = !DILocation(line: 1878, column: 30, scope: !7335)
!7339 = !DILocation(line: 1878, column: 8, scope: !7238)
!7340 = !DILocation(line: 1879, column: 23, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1878, column: 38)
!7342 = !DILocation(line: 1879, column: 5, scope: !7341)
!7343 = !DILocation(line: 1880, column: 17, scope: !7341)
!7344 = !DILocation(line: 1880, column: 5, scope: !7341)
!7345 = !DILocation(line: 1881, column: 4, scope: !7341)
!7346 = !DILocation(line: 1883, column: 20, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1882, column: 9)
!7348 = !DILocation(line: 1883, column: 26, scope: !7347)
!7349 = !DILocation(line: 1883, column: 5, scope: !7347)
!7350 = !DILocation(line: 1885, column: 4, scope: !7238)
!7351 = !DILocation(line: 1888, column: 8, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1888, column: 8)
!7353 = !DILocation(line: 1888, column: 11, scope: !7352)
!7354 = !DILocation(line: 1888, column: 14, scope: !7352)
!7355 = !DILocation(line: 1888, column: 18, scope: !7352)
!7356 = !DILocation(line: 1888, column: 27, scope: !7352)
!7357 = !DILocation(line: 1888, column: 30, scope: !7352)
!7358 = !DILocation(line: 1888, column: 8, scope: !7238)
!7359 = !DILocation(line: 1888, column: 51, scope: !7352)
!7360 = !DILocation(line: 1888, column: 55, scope: !7352)
!7361 = !DILocation(line: 1888, column: 59, scope: !7352)
!7362 = !DILocation(line: 1888, column: 34, scope: !7352)
!7363 = !DILocation(line: 1889, column: 21, scope: !7352)
!7364 = !DILocation(line: 1889, column: 27, scope: !7352)
!7365 = !DILocation(line: 1889, column: 9, scope: !7352)
!7366 = !DILocation(line: 1890, column: 4, scope: !7238)
!7367 = !DILocation(line: 1893, column: 8, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1893, column: 8)
!7369 = !DILocation(line: 1893, column: 11, scope: !7368)
!7370 = !DILocation(line: 1893, column: 14, scope: !7368)
!7371 = !DILocation(line: 1893, column: 18, scope: !7368)
!7372 = !DILocation(line: 1893, column: 27, scope: !7368)
!7373 = !DILocation(line: 1893, column: 30, scope: !7368)
!7374 = !DILocation(line: 1893, column: 8, scope: !7238)
!7375 = !DILocation(line: 1893, column: 53, scope: !7368)
!7376 = !DILocation(line: 1893, column: 57, scope: !7368)
!7377 = !DILocation(line: 1893, column: 61, scope: !7368)
!7378 = !DILocation(line: 1893, column: 34, scope: !7368)
!7379 = !DILocation(line: 1894, column: 23, scope: !7368)
!7380 = !DILocation(line: 1894, column: 29, scope: !7368)
!7381 = !DILocation(line: 1894, column: 9, scope: !7368)
!7382 = !DILocation(line: 1895, column: 4, scope: !7238)
!7383 = !DILocation(line: 1898, column: 8, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1898, column: 8)
!7385 = !DILocation(line: 1898, column: 8, scope: !7238)
!7386 = !DILocation(line: 1898, column: 24, scope: !7384)
!7387 = !DILocation(line: 1898, column: 28, scope: !7384)
!7388 = !DILocation(line: 1898, column: 32, scope: !7384)
!7389 = !DILocation(line: 1898, column: 36, scope: !7384)
!7390 = !DILocation(line: 1898, column: 43, scope: !7384)
!7391 = !DILocation(line: 1898, column: 47, scope: !7384)
!7392 = !DILocation(line: 1898, column: 42, scope: !7384)
!7393 = !DILocation(line: 1898, column: 58, scope: !7384)
!7394 = !DILocation(line: 1898, column: 12, scope: !7384)
!7395 = !DILocation(line: 1899, column: 33, scope: !7384)
!7396 = !DILocation(line: 1899, column: 44, scope: !7384)
!7397 = !DILocation(line: 1899, column: 9, scope: !7384)
!7398 = !DILocation(line: 1900, column: 4, scope: !7238)
!7399 = !DILocation(line: 1903, column: 8, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1903, column: 8)
!7401 = !DILocation(line: 1903, column: 8, scope: !7238)
!7402 = !DILocation(line: 1903, column: 24, scope: !7400)
!7403 = !DILocation(line: 1903, column: 28, scope: !7400)
!7404 = !DILocation(line: 1903, column: 32, scope: !7400)
!7405 = !DILocation(line: 1903, column: 36, scope: !7400)
!7406 = !DILocation(line: 1903, column: 42, scope: !7400)
!7407 = !DILocation(line: 1903, column: 46, scope: !7400)
!7408 = !DILocation(line: 1903, column: 57, scope: !7400)
!7409 = !DILocation(line: 1903, column: 12, scope: !7400)
!7410 = !DILocation(line: 1904, column: 33, scope: !7400)
!7411 = !DILocation(line: 1904, column: 43, scope: !7400)
!7412 = !DILocation(line: 1904, column: 9, scope: !7400)
!7413 = !DILocation(line: 1905, column: 4, scope: !7238)
!7414 = !DILocation(line: 1908, column: 27, scope: !7204)
!7415 = !DILocation(line: 1908, column: 2, scope: !7204)
!7416 = !DILocation(line: 1909, column: 24, scope: !7204)
!7417 = !DILocation(line: 1909, column: 48, scope: !7204)
!7418 = !DILocation(line: 1909, column: 2, scope: !7204)
!7419 = !DILocation(line: 1911, column: 2, scope: !7204)
!7420 = distinct !DISubprogram(name: "txt_wrap_move_bol", scope: !3, file: !3, line: 1575, type: !7421, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{null, !2804, !3324, !3143}
!7423 = !DILocalVariable(name: "st", arg: 1, scope: !7420, file: !3, line: 1575, type: !2804)
!7424 = !DILocation(line: 1575, column: 42, scope: !7420)
!7425 = !DILocalVariable(name: "ar", arg: 2, scope: !7420, file: !3, line: 1575, type: !3324)
!7426 = !DILocation(line: 1575, column: 55, scope: !7420)
!7427 = !DILocalVariable(name: "sel", arg: 3, scope: !7420, file: !3, line: 1575, type: !3143)
!7428 = !DILocation(line: 1575, column: 70, scope: !7420)
!7429 = !DILocalVariable(name: "text", scope: !7420, file: !3, line: 1577, type: !2858)
!7430 = !DILocation(line: 1577, column: 8, scope: !7420)
!7431 = !DILocation(line: 1577, column: 15, scope: !7420)
!7432 = !DILocation(line: 1577, column: 19, scope: !7420)
!7433 = !DILocalVariable(name: "linep", scope: !7420, file: !3, line: 1578, type: !7434)
!7434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!7435 = !DILocation(line: 1578, column: 13, scope: !7420)
!7436 = !DILocalVariable(name: "charp", scope: !7420, file: !3, line: 1579, type: !4405)
!7437 = !DILocation(line: 1579, column: 7, scope: !7420)
!7438 = !DILocalVariable(name: "oldc", scope: !7420, file: !3, line: 1580, type: !1200)
!7439 = !DILocation(line: 1580, column: 6, scope: !7420)
!7440 = !DILocalVariable(name: "i", scope: !7420, file: !3, line: 1580, type: !1200)
!7441 = !DILocation(line: 1580, column: 12, scope: !7420)
!7442 = !DILocalVariable(name: "j", scope: !7420, file: !3, line: 1580, type: !1200)
!7443 = !DILocation(line: 1580, column: 15, scope: !7420)
!7444 = !DILocalVariable(name: "max", scope: !7420, file: !3, line: 1580, type: !1200)
!7445 = !DILocation(line: 1580, column: 18, scope: !7420)
!7446 = !DILocalVariable(name: "start", scope: !7420, file: !3, line: 1580, type: !1200)
!7447 = !DILocation(line: 1580, column: 23, scope: !7420)
!7448 = !DILocalVariable(name: "end", scope: !7420, file: !3, line: 1580, type: !1200)
!7449 = !DILocation(line: 1580, column: 30, scope: !7420)
!7450 = !DILocalVariable(name: "endj", scope: !7420, file: !3, line: 1580, type: !1200)
!7451 = !DILocation(line: 1580, column: 35, scope: !7420)
!7452 = !DILocalVariable(name: "chop", scope: !7420, file: !3, line: 1580, type: !1200)
!7453 = !DILocation(line: 1580, column: 41, scope: !7420)
!7454 = !DILocalVariable(name: "loop", scope: !7420, file: !3, line: 1580, type: !1200)
!7455 = !DILocation(line: 1580, column: 47, scope: !7420)
!7456 = !DILocalVariable(name: "ch", scope: !7420, file: !3, line: 1581, type: !1215)
!7457 = !DILocation(line: 1581, column: 7, scope: !7420)
!7458 = !DILocation(line: 1583, column: 30, scope: !7420)
!7459 = !DILocation(line: 1583, column: 2, scope: !7420)
!7460 = !DILocation(line: 1585, column: 6, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1585, column: 6)
!7462 = !DILocation(line: 1585, column: 6, scope: !7420)
!7463 = !DILocation(line: 1585, column: 22, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1585, column: 11)
!7465 = !DILocation(line: 1585, column: 28, scope: !7464)
!7466 = !DILocation(line: 1585, column: 19, scope: !7464)
!7467 = !DILocation(line: 1585, column: 43, scope: !7464)
!7468 = !DILocation(line: 1585, column: 49, scope: !7464)
!7469 = !DILocation(line: 1585, column: 40, scope: !7464)
!7470 = !DILocation(line: 1585, column: 55, scope: !7464)
!7471 = !DILocation(line: 1586, column: 22, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1586, column: 11)
!7473 = !DILocation(line: 1586, column: 28, scope: !7472)
!7474 = !DILocation(line: 1586, column: 19, scope: !7472)
!7475 = !DILocation(line: 1586, column: 43, scope: !7472)
!7476 = !DILocation(line: 1586, column: 49, scope: !7472)
!7477 = !DILocation(line: 1586, column: 40, scope: !7472)
!7478 = !DILocation(line: 1588, column: 10, scope: !7420)
!7479 = !DILocation(line: 1588, column: 9, scope: !7420)
!7480 = !DILocation(line: 1588, column: 7, scope: !7420)
!7481 = !DILocation(line: 1590, column: 19, scope: !7420)
!7482 = !DILocation(line: 1590, column: 23, scope: !7420)
!7483 = !DILocation(line: 1590, column: 8, scope: !7420)
!7484 = !DILocation(line: 1590, column: 6, scope: !7420)
!7485 = !DILocation(line: 1592, column: 15, scope: !7420)
!7486 = !DILocation(line: 1592, column: 8, scope: !7420)
!7487 = !DILocation(line: 1593, column: 8, scope: !7420)
!7488 = !DILocation(line: 1593, column: 6, scope: !7420)
!7489 = !DILocation(line: 1594, column: 14, scope: !7420)
!7490 = !DILocation(line: 1594, column: 7, scope: !7420)
!7491 = !DILocation(line: 1595, column: 3, scope: !7420)
!7492 = !DILocation(line: 1595, column: 9, scope: !7420)
!7493 = !DILocation(line: 1597, column: 9, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1597, column: 2)
!7495 = !DILocation(line: 1597, column: 16, scope: !7494)
!7496 = !DILocation(line: 1597, column: 7, scope: !7494)
!7497 = !DILocation(line: 1597, column: 21, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 1597, column: 2)
!7499 = !DILocation(line: 1597, column: 2, scope: !7494)
!7500 = !DILocalVariable(name: "chars", scope: !7501, file: !3, line: 1598, type: !1200)
!7501 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 1597, column: 76)
!7502 = !DILocation(line: 1598, column: 7, scope: !7501)
!7503 = !DILocalVariable(name: "columns", scope: !7501, file: !3, line: 1599, type: !1200)
!7504 = !DILocation(line: 1599, column: 7, scope: !7501)
!7505 = !DILocation(line: 1599, column: 48, scope: !7501)
!7506 = !DILocation(line: 1599, column: 47, scope: !7501)
!7507 = !DILocation(line: 1599, column: 56, scope: !7501)
!7508 = !DILocation(line: 1599, column: 63, scope: !7501)
!7509 = !DILocation(line: 1599, column: 61, scope: !7501)
!7510 = !DILocation(line: 1599, column: 17, scope: !7501)
!7511 = !DILocation(line: 1602, column: 10, scope: !7501)
!7512 = !DILocation(line: 1602, column: 9, scope: !7501)
!7513 = !DILocation(line: 1602, column: 18, scope: !7501)
!7514 = !DILocation(line: 1602, column: 23, scope: !7501)
!7515 = !DILocation(line: 1602, column: 8, scope: !7501)
!7516 = !DILocation(line: 1602, column: 6, scope: !7501)
!7517 = !DILocation(line: 1603, column: 7, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 1603, column: 7)
!7519 = !DILocation(line: 1603, column: 10, scope: !7518)
!7520 = !DILocation(line: 1603, column: 7, scope: !7501)
!7521 = !DILocation(line: 1604, column: 12, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 1603, column: 19)
!7523 = !DILocation(line: 1604, column: 16, scope: !7522)
!7524 = !DILocation(line: 1604, column: 28, scope: !7522)
!7525 = !DILocation(line: 1604, column: 32, scope: !7522)
!7526 = !DILocation(line: 1604, column: 36, scope: !7522)
!7527 = !DILocation(line: 1604, column: 30, scope: !7522)
!7528 = !DILocation(line: 1604, column: 26, scope: !7522)
!7529 = !DILocation(line: 1604, column: 10, scope: !7522)
!7530 = !DILocation(line: 1605, column: 7, scope: !7522)
!7531 = !DILocation(line: 1606, column: 3, scope: !7522)
!7532 = !DILocation(line: 1608, column: 10, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 1607, column: 8)
!7534 = !DILocation(line: 1611, column: 3, scope: !7501)
!7535 = !DILocation(line: 1611, column: 15, scope: !7501)
!7536 = !DILocation(line: 1612, column: 8, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1612, column: 8)
!7538 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 1611, column: 19)
!7539 = !DILocation(line: 1612, column: 12, scope: !7537)
!7540 = !DILocation(line: 1612, column: 10, scope: !7537)
!7541 = !DILocation(line: 1612, column: 22, scope: !7537)
!7542 = !DILocation(line: 1612, column: 20, scope: !7537)
!7543 = !DILocation(line: 1612, column: 30, scope: !7537)
!7544 = !DILocation(line: 1612, column: 28, scope: !7537)
!7545 = !DILocation(line: 1612, column: 8, scope: !7538)
!7546 = !DILocation(line: 1613, column: 11, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1612, column: 35)
!7548 = !DILocation(line: 1613, column: 9, scope: !7547)
!7549 = !DILocation(line: 1615, column: 14, scope: !7547)
!7550 = !DILocation(line: 1615, column: 6, scope: !7547)
!7551 = !DILocation(line: 1615, column: 12, scope: !7547)
!7552 = !DILocation(line: 1617, column: 9, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1617, column: 9)
!7554 = !DILocation(line: 1617, column: 14, scope: !7553)
!7555 = !DILocation(line: 1617, column: 11, scope: !7553)
!7556 = !DILocation(line: 1617, column: 9, scope: !7547)
!7557 = !DILocation(line: 1618, column: 10, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 1618, column: 10)
!7559 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1617, column: 20)
!7560 = !DILocation(line: 1618, column: 13, scope: !7558)
!7561 = !DILocation(line: 1618, column: 10, scope: !7559)
!7562 = !DILocation(line: 1618, column: 59, scope: !7558)
!7563 = !DILocation(line: 1618, column: 58, scope: !7558)
!7564 = !DILocation(line: 1618, column: 67, scope: !7558)
!7565 = !DILocation(line: 1618, column: 73, scope: !7558)
!7566 = !DILocation(line: 1618, column: 31, scope: !7558)
!7567 = !DILocation(line: 1618, column: 23, scope: !7558)
!7568 = !DILocation(line: 1618, column: 29, scope: !7558)
!7569 = !DILocation(line: 1618, column: 22, scope: !7558)
!7570 = !DILocation(line: 1619, column: 11, scope: !7559)
!7571 = !DILocation(line: 1620, column: 6, scope: !7559)
!7572 = !DILocation(line: 1623, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1623, column: 9)
!7574 = !DILocation(line: 1623, column: 9, scope: !7547)
!7575 = !DILocation(line: 1623, column: 22, scope: !7573)
!7576 = !DILocation(line: 1623, column: 20, scope: !7573)
!7577 = !DILocation(line: 1623, column: 15, scope: !7573)
!7578 = !DILocation(line: 1625, column: 13, scope: !7547)
!7579 = !DILocation(line: 1625, column: 11, scope: !7547)
!7580 = !DILocation(line: 1626, column: 12, scope: !7547)
!7581 = !DILocation(line: 1626, column: 9, scope: !7547)
!7582 = !DILocation(line: 1627, column: 10, scope: !7547)
!7583 = !DILocation(line: 1628, column: 4, scope: !7547)
!7584 = !DILocation(line: 1629, column: 13, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1629, column: 13)
!7586 = !DILocation(line: 1629, column: 16, scope: !7585)
!7587 = !DILocation(line: 1629, column: 23, scope: !7585)
!7588 = !DILocation(line: 1629, column: 26, scope: !7585)
!7589 = !DILocation(line: 1629, column: 29, scope: !7585)
!7590 = !DILocation(line: 1629, column: 36, scope: !7585)
!7591 = !DILocation(line: 1629, column: 39, scope: !7585)
!7592 = !DILocation(line: 1629, column: 42, scope: !7585)
!7593 = !DILocation(line: 1629, column: 13, scope: !7537)
!7594 = !DILocation(line: 1630, column: 9, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1630, column: 9)
!7596 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 1629, column: 51)
!7597 = !DILocation(line: 1630, column: 14, scope: !7595)
!7598 = !DILocation(line: 1630, column: 11, scope: !7595)
!7599 = !DILocation(line: 1630, column: 9, scope: !7596)
!7600 = !DILocation(line: 1631, column: 43, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 1630, column: 20)
!7602 = !DILocation(line: 1631, column: 42, scope: !7601)
!7603 = !DILocation(line: 1631, column: 51, scope: !7601)
!7604 = !DILocation(line: 1631, column: 57, scope: !7601)
!7605 = !DILocation(line: 1631, column: 15, scope: !7601)
!7606 = !DILocation(line: 1631, column: 7, scope: !7601)
!7607 = !DILocation(line: 1631, column: 13, scope: !7601)
!7608 = !DILocation(line: 1632, column: 11, scope: !7601)
!7609 = !DILocation(line: 1633, column: 6, scope: !7601)
!7610 = !DILocation(line: 1636, column: 11, scope: !7596)
!7611 = !DILocation(line: 1636, column: 13, scope: !7596)
!7612 = !DILocation(line: 1636, column: 9, scope: !7596)
!7613 = !DILocation(line: 1637, column: 12, scope: !7596)
!7614 = !DILocation(line: 1637, column: 14, scope: !7596)
!7615 = !DILocation(line: 1637, column: 10, scope: !7596)
!7616 = !DILocation(line: 1638, column: 10, scope: !7596)
!7617 = !DILocation(line: 1639, column: 4, scope: !7596)
!7618 = !DILocation(line: 1640, column: 9, scope: !7538)
!7619 = !DILocation(line: 1640, column: 6, scope: !7538)
!7620 = distinct !{!7620, !7534, !7621}
!7621 = !DILocation(line: 1641, column: 3, scope: !7501)
!7622 = !DILocation(line: 1642, column: 2, scope: !7501)
!7623 = !DILocation(line: 1597, column: 57, scope: !7498)
!7624 = !DILocation(line: 1597, column: 56, scope: !7498)
!7625 = !DILocation(line: 1597, column: 65, scope: !7498)
!7626 = !DILocation(line: 1597, column: 72, scope: !7498)
!7627 = !DILocation(line: 1597, column: 70, scope: !7498)
!7628 = !DILocation(line: 1597, column: 32, scope: !7498)
!7629 = !DILocation(line: 1597, column: 29, scope: !7498)
!7630 = !DILocation(line: 1597, column: 2, scope: !7498)
!7631 = distinct !{!7631, !7499, !7632}
!7632 = !DILocation(line: 1642, column: 2, scope: !7494)
!7633 = !DILocation(line: 1644, column: 7, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1644, column: 6)
!7635 = !DILocation(line: 1644, column: 6, scope: !7420)
!7636 = !DILocation(line: 1644, column: 24, scope: !7634)
!7637 = !DILocation(line: 1644, column: 12, scope: !7634)
!7638 = !DILocation(line: 1645, column: 1, scope: !7420)
!7639 = distinct !DISubprogram(name: "txt_wrap_move_eol", scope: !3, file: !3, line: 1647, type: !7421, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!7640 = !DILocalVariable(name: "st", arg: 1, scope: !7639, file: !3, line: 1647, type: !2804)
!7641 = !DILocation(line: 1647, column: 42, scope: !7639)
!7642 = !DILocalVariable(name: "ar", arg: 2, scope: !7639, file: !3, line: 1647, type: !3324)
!7643 = !DILocation(line: 1647, column: 55, scope: !7639)
!7644 = !DILocalVariable(name: "sel", arg: 3, scope: !7639, file: !3, line: 1647, type: !3143)
!7645 = !DILocation(line: 1647, column: 70, scope: !7639)
!7646 = !DILocalVariable(name: "text", scope: !7639, file: !3, line: 1649, type: !2858)
!7647 = !DILocation(line: 1649, column: 8, scope: !7639)
!7648 = !DILocation(line: 1649, column: 15, scope: !7639)
!7649 = !DILocation(line: 1649, column: 19, scope: !7639)
!7650 = !DILocalVariable(name: "linep", scope: !7639, file: !3, line: 1650, type: !7434)
!7651 = !DILocation(line: 1650, column: 13, scope: !7639)
!7652 = !DILocalVariable(name: "charp", scope: !7639, file: !3, line: 1651, type: !4405)
!7653 = !DILocation(line: 1651, column: 7, scope: !7639)
!7654 = !DILocalVariable(name: "oldc", scope: !7639, file: !3, line: 1652, type: !1200)
!7655 = !DILocation(line: 1652, column: 6, scope: !7639)
!7656 = !DILocalVariable(name: "i", scope: !7639, file: !3, line: 1652, type: !1200)
!7657 = !DILocation(line: 1652, column: 12, scope: !7639)
!7658 = !DILocalVariable(name: "j", scope: !7639, file: !3, line: 1652, type: !1200)
!7659 = !DILocation(line: 1652, column: 15, scope: !7639)
!7660 = !DILocalVariable(name: "max", scope: !7639, file: !3, line: 1652, type: !1200)
!7661 = !DILocation(line: 1652, column: 18, scope: !7639)
!7662 = !DILocalVariable(name: "start", scope: !7639, file: !3, line: 1652, type: !1200)
!7663 = !DILocation(line: 1652, column: 23, scope: !7639)
!7664 = !DILocalVariable(name: "end", scope: !7639, file: !3, line: 1652, type: !1200)
!7665 = !DILocation(line: 1652, column: 30, scope: !7639)
!7666 = !DILocalVariable(name: "endj", scope: !7639, file: !3, line: 1652, type: !1200)
!7667 = !DILocation(line: 1652, column: 35, scope: !7639)
!7668 = !DILocalVariable(name: "chop", scope: !7639, file: !3, line: 1652, type: !1200)
!7669 = !DILocation(line: 1652, column: 41, scope: !7639)
!7670 = !DILocalVariable(name: "loop", scope: !7639, file: !3, line: 1652, type: !1200)
!7671 = !DILocation(line: 1652, column: 47, scope: !7639)
!7672 = !DILocalVariable(name: "ch", scope: !7639, file: !3, line: 1653, type: !1215)
!7673 = !DILocation(line: 1653, column: 7, scope: !7639)
!7674 = !DILocation(line: 1655, column: 30, scope: !7639)
!7675 = !DILocation(line: 1655, column: 2, scope: !7639)
!7676 = !DILocation(line: 1657, column: 6, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 1657, column: 6)
!7678 = !DILocation(line: 1657, column: 6, scope: !7639)
!7679 = !DILocation(line: 1657, column: 22, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 1657, column: 11)
!7681 = !DILocation(line: 1657, column: 28, scope: !7680)
!7682 = !DILocation(line: 1657, column: 19, scope: !7680)
!7683 = !DILocation(line: 1657, column: 43, scope: !7680)
!7684 = !DILocation(line: 1657, column: 49, scope: !7680)
!7685 = !DILocation(line: 1657, column: 40, scope: !7680)
!7686 = !DILocation(line: 1657, column: 55, scope: !7680)
!7687 = !DILocation(line: 1658, column: 22, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 1658, column: 11)
!7689 = !DILocation(line: 1658, column: 28, scope: !7688)
!7690 = !DILocation(line: 1658, column: 19, scope: !7688)
!7691 = !DILocation(line: 1658, column: 43, scope: !7688)
!7692 = !DILocation(line: 1658, column: 49, scope: !7688)
!7693 = !DILocation(line: 1658, column: 40, scope: !7688)
!7694 = !DILocation(line: 1660, column: 10, scope: !7639)
!7695 = !DILocation(line: 1660, column: 9, scope: !7639)
!7696 = !DILocation(line: 1660, column: 7, scope: !7639)
!7697 = !DILocation(line: 1662, column: 19, scope: !7639)
!7698 = !DILocation(line: 1662, column: 23, scope: !7639)
!7699 = !DILocation(line: 1662, column: 8, scope: !7639)
!7700 = !DILocation(line: 1662, column: 6, scope: !7639)
!7701 = !DILocation(line: 1664, column: 15, scope: !7639)
!7702 = !DILocation(line: 1664, column: 8, scope: !7639)
!7703 = !DILocation(line: 1665, column: 8, scope: !7639)
!7704 = !DILocation(line: 1665, column: 6, scope: !7639)
!7705 = !DILocation(line: 1666, column: 14, scope: !7639)
!7706 = !DILocation(line: 1666, column: 7, scope: !7639)
!7707 = !DILocation(line: 1667, column: 3, scope: !7639)
!7708 = !DILocation(line: 1667, column: 9, scope: !7639)
!7709 = !DILocation(line: 1669, column: 9, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 1669, column: 2)
!7711 = !DILocation(line: 1669, column: 16, scope: !7710)
!7712 = !DILocation(line: 1669, column: 7, scope: !7710)
!7713 = !DILocation(line: 1669, column: 21, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 1669, column: 2)
!7715 = !DILocation(line: 1669, column: 2, scope: !7710)
!7716 = !DILocalVariable(name: "chars", scope: !7717, file: !3, line: 1670, type: !1200)
!7717 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 1669, column: 76)
!7718 = !DILocation(line: 1670, column: 7, scope: !7717)
!7719 = !DILocalVariable(name: "columns", scope: !7717, file: !3, line: 1671, type: !1200)
!7720 = !DILocation(line: 1671, column: 7, scope: !7717)
!7721 = !DILocation(line: 1671, column: 48, scope: !7717)
!7722 = !DILocation(line: 1671, column: 47, scope: !7717)
!7723 = !DILocation(line: 1671, column: 56, scope: !7717)
!7724 = !DILocation(line: 1671, column: 63, scope: !7717)
!7725 = !DILocation(line: 1671, column: 61, scope: !7717)
!7726 = !DILocation(line: 1671, column: 17, scope: !7717)
!7727 = !DILocation(line: 1674, column: 10, scope: !7717)
!7728 = !DILocation(line: 1674, column: 9, scope: !7717)
!7729 = !DILocation(line: 1674, column: 18, scope: !7717)
!7730 = !DILocation(line: 1674, column: 23, scope: !7717)
!7731 = !DILocation(line: 1674, column: 8, scope: !7717)
!7732 = !DILocation(line: 1674, column: 6, scope: !7717)
!7733 = !DILocation(line: 1675, column: 7, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 1675, column: 7)
!7735 = !DILocation(line: 1675, column: 10, scope: !7734)
!7736 = !DILocation(line: 1675, column: 7, scope: !7717)
!7737 = !DILocation(line: 1676, column: 12, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 1675, column: 19)
!7739 = !DILocation(line: 1676, column: 16, scope: !7738)
!7740 = !DILocation(line: 1676, column: 28, scope: !7738)
!7741 = !DILocation(line: 1676, column: 32, scope: !7738)
!7742 = !DILocation(line: 1676, column: 36, scope: !7738)
!7743 = !DILocation(line: 1676, column: 30, scope: !7738)
!7744 = !DILocation(line: 1676, column: 26, scope: !7738)
!7745 = !DILocation(line: 1676, column: 10, scope: !7738)
!7746 = !DILocation(line: 1677, column: 7, scope: !7738)
!7747 = !DILocation(line: 1678, column: 3, scope: !7738)
!7748 = !DILocation(line: 1680, column: 10, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 1679, column: 8)
!7750 = !DILocation(line: 1683, column: 3, scope: !7717)
!7751 = !DILocation(line: 1683, column: 15, scope: !7717)
!7752 = !DILocation(line: 1684, column: 8, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1684, column: 8)
!7754 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 1683, column: 19)
!7755 = !DILocation(line: 1684, column: 12, scope: !7753)
!7756 = !DILocation(line: 1684, column: 10, scope: !7753)
!7757 = !DILocation(line: 1684, column: 22, scope: !7753)
!7758 = !DILocation(line: 1684, column: 20, scope: !7753)
!7759 = !DILocation(line: 1684, column: 30, scope: !7753)
!7760 = !DILocation(line: 1684, column: 28, scope: !7753)
!7761 = !DILocation(line: 1684, column: 8, scope: !7754)
!7762 = !DILocation(line: 1685, column: 11, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 1684, column: 35)
!7764 = !DILocation(line: 1685, column: 9, scope: !7763)
!7765 = !DILocation(line: 1687, column: 9, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1687, column: 9)
!7767 = !DILocation(line: 1687, column: 9, scope: !7763)
!7768 = !DILocation(line: 1687, column: 47, scope: !7766)
!7769 = !DILocation(line: 1687, column: 46, scope: !7766)
!7770 = !DILocation(line: 1687, column: 55, scope: !7766)
!7771 = !DILocation(line: 1687, column: 62, scope: !7766)
!7772 = !DILocation(line: 1687, column: 60, scope: !7766)
!7773 = !DILocation(line: 1687, column: 22, scope: !7766)
!7774 = !DILocation(line: 1687, column: 69, scope: !7766)
!7775 = !DILocation(line: 1687, column: 68, scope: !7766)
!7776 = !DILocation(line: 1687, column: 77, scope: !7766)
!7777 = !DILocation(line: 1687, column: 65, scope: !7766)
!7778 = !DILocation(line: 1687, column: 20, scope: !7766)
!7779 = !DILocation(line: 1687, column: 15, scope: !7766)
!7780 = !DILocation(line: 1689, column: 9, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1689, column: 9)
!7782 = !DILocation(line: 1689, column: 17, scope: !7781)
!7783 = !DILocation(line: 1689, column: 14, scope: !7781)
!7784 = !DILocation(line: 1689, column: 9, scope: !7763)
!7785 = !DILocation(line: 1690, column: 10, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 1690, column: 10)
!7787 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 1689, column: 23)
!7788 = !DILocation(line: 1690, column: 13, scope: !7786)
!7789 = !DILocation(line: 1690, column: 10, scope: !7787)
!7790 = !DILocation(line: 1690, column: 33, scope: !7786)
!7791 = !DILocation(line: 1690, column: 32, scope: !7786)
!7792 = !DILocation(line: 1690, column: 41, scope: !7786)
!7793 = !DILocation(line: 1690, column: 23, scope: !7786)
!7794 = !DILocation(line: 1690, column: 29, scope: !7786)
!7795 = !DILocation(line: 1690, column: 22, scope: !7786)
!7796 = !DILocation(line: 1691, column: 20, scope: !7786)
!7797 = !DILocation(line: 1691, column: 12, scope: !7786)
!7798 = !DILocation(line: 1691, column: 18, scope: !7786)
!7799 = !DILocation(line: 1692, column: 11, scope: !7787)
!7800 = !DILocation(line: 1693, column: 6, scope: !7787)
!7801 = !DILocation(line: 1696, column: 13, scope: !7763)
!7802 = !DILocation(line: 1696, column: 11, scope: !7763)
!7803 = !DILocation(line: 1697, column: 12, scope: !7763)
!7804 = !DILocation(line: 1697, column: 9, scope: !7763)
!7805 = !DILocation(line: 1698, column: 10, scope: !7763)
!7806 = !DILocation(line: 1699, column: 4, scope: !7763)
!7807 = !DILocation(line: 1700, column: 13, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 1700, column: 13)
!7809 = !DILocation(line: 1700, column: 16, scope: !7808)
!7810 = !DILocation(line: 1700, column: 13, scope: !7753)
!7811 = !DILocation(line: 1701, column: 16, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 1700, column: 25)
!7813 = !DILocation(line: 1701, column: 15, scope: !7812)
!7814 = !DILocation(line: 1701, column: 24, scope: !7812)
!7815 = !DILocation(line: 1701, column: 6, scope: !7812)
!7816 = !DILocation(line: 1701, column: 12, scope: !7812)
!7817 = !DILocation(line: 1702, column: 10, scope: !7812)
!7818 = !DILocation(line: 1703, column: 5, scope: !7812)
!7819 = !DILocation(line: 1705, column: 13, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 1705, column: 13)
!7821 = !DILocation(line: 1705, column: 16, scope: !7820)
!7822 = !DILocation(line: 1705, column: 23, scope: !7820)
!7823 = !DILocation(line: 1705, column: 26, scope: !7820)
!7824 = !DILocation(line: 1705, column: 29, scope: !7820)
!7825 = !DILocation(line: 1705, column: 13, scope: !7808)
!7826 = !DILocation(line: 1706, column: 11, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7820, file: !3, line: 1705, column: 37)
!7828 = !DILocation(line: 1706, column: 13, scope: !7827)
!7829 = !DILocation(line: 1706, column: 9, scope: !7827)
!7830 = !DILocation(line: 1707, column: 12, scope: !7827)
!7831 = !DILocation(line: 1707, column: 10, scope: !7827)
!7832 = !DILocation(line: 1708, column: 10, scope: !7827)
!7833 = !DILocation(line: 1709, column: 4, scope: !7827)
!7834 = !DILocation(line: 1710, column: 9, scope: !7754)
!7835 = !DILocation(line: 1710, column: 6, scope: !7754)
!7836 = distinct !{!7836, !7750, !7837}
!7837 = !DILocation(line: 1711, column: 3, scope: !7717)
!7838 = !DILocation(line: 1712, column: 2, scope: !7717)
!7839 = !DILocation(line: 1669, column: 57, scope: !7714)
!7840 = !DILocation(line: 1669, column: 56, scope: !7714)
!7841 = !DILocation(line: 1669, column: 65, scope: !7714)
!7842 = !DILocation(line: 1669, column: 72, scope: !7714)
!7843 = !DILocation(line: 1669, column: 70, scope: !7714)
!7844 = !DILocation(line: 1669, column: 32, scope: !7714)
!7845 = !DILocation(line: 1669, column: 29, scope: !7714)
!7846 = !DILocation(line: 1669, column: 2, scope: !7714)
!7847 = distinct !{!7847, !7715, !7848}
!7848 = !DILocation(line: 1712, column: 2, scope: !7710)
!7849 = !DILocation(line: 1714, column: 7, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 1714, column: 6)
!7851 = !DILocation(line: 1714, column: 6, scope: !7639)
!7852 = !DILocation(line: 1714, column: 24, scope: !7850)
!7853 = !DILocation(line: 1714, column: 12, scope: !7850)
!7854 = !DILocation(line: 1715, column: 1, scope: !7639)
!7855 = distinct !DISubprogram(name: "txt_wrap_move_up", scope: !3, file: !3, line: 1717, type: !7421, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!7856 = !DILocalVariable(name: "st", arg: 1, scope: !7855, file: !3, line: 1717, type: !2804)
!7857 = !DILocation(line: 1717, column: 41, scope: !7855)
!7858 = !DILocalVariable(name: "ar", arg: 2, scope: !7855, file: !3, line: 1717, type: !3324)
!7859 = !DILocation(line: 1717, column: 54, scope: !7855)
!7860 = !DILocalVariable(name: "sel", arg: 3, scope: !7855, file: !3, line: 1717, type: !3143)
!7861 = !DILocation(line: 1717, column: 69, scope: !7855)
!7862 = !DILocalVariable(name: "text", scope: !7855, file: !3, line: 1719, type: !2858)
!7863 = !DILocation(line: 1719, column: 8, scope: !7855)
!7864 = !DILocation(line: 1719, column: 15, scope: !7855)
!7865 = !DILocation(line: 1719, column: 19, scope: !7855)
!7866 = !DILocalVariable(name: "linep", scope: !7855, file: !3, line: 1720, type: !7434)
!7867 = !DILocation(line: 1720, column: 13, scope: !7855)
!7868 = !DILocalVariable(name: "charp", scope: !7855, file: !3, line: 1721, type: !4405)
!7869 = !DILocation(line: 1721, column: 7, scope: !7855)
!7870 = !DILocalVariable(name: "offl", scope: !7855, file: !3, line: 1722, type: !1200)
!7871 = !DILocation(line: 1722, column: 6, scope: !7855)
!7872 = !DILocalVariable(name: "offc", scope: !7855, file: !3, line: 1722, type: !1200)
!7873 = !DILocation(line: 1722, column: 12, scope: !7855)
!7874 = !DILocalVariable(name: "col", scope: !7855, file: !3, line: 1722, type: !1200)
!7875 = !DILocation(line: 1722, column: 18, scope: !7855)
!7876 = !DILocation(line: 1724, column: 30, scope: !7855)
!7877 = !DILocation(line: 1724, column: 2, scope: !7855)
!7878 = !DILocation(line: 1726, column: 6, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 1726, column: 6)
!7880 = !DILocation(line: 1726, column: 6, scope: !7855)
!7881 = !DILocation(line: 1726, column: 22, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 1726, column: 11)
!7883 = !DILocation(line: 1726, column: 28, scope: !7882)
!7884 = !DILocation(line: 1726, column: 19, scope: !7882)
!7885 = !DILocation(line: 1726, column: 43, scope: !7882)
!7886 = !DILocation(line: 1726, column: 49, scope: !7882)
!7887 = !DILocation(line: 1726, column: 40, scope: !7882)
!7888 = !DILocation(line: 1726, column: 55, scope: !7882)
!7889 = !DILocation(line: 1727, column: 22, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 1727, column: 11)
!7891 = !DILocation(line: 1727, column: 28, scope: !7890)
!7892 = !DILocation(line: 1727, column: 19, scope: !7890)
!7893 = !DILocation(line: 1727, column: 43, scope: !7890)
!7894 = !DILocation(line: 1727, column: 49, scope: !7890)
!7895 = !DILocation(line: 1727, column: 40, scope: !7890)
!7896 = !DILocation(line: 1729, column: 22, scope: !7855)
!7897 = !DILocation(line: 1729, column: 26, scope: !7855)
!7898 = !DILocation(line: 1729, column: 31, scope: !7855)
!7899 = !DILocation(line: 1729, column: 30, scope: !7855)
!7900 = !DILocation(line: 1729, column: 39, scope: !7855)
!7901 = !DILocation(line: 1729, column: 38, scope: !7855)
!7902 = !DILocation(line: 1729, column: 2, scope: !7855)
!7903 = !DILocation(line: 1730, column: 26, scope: !7855)
!7904 = !DILocation(line: 1730, column: 32, scope: !7855)
!7905 = !DILocation(line: 1730, column: 31, scope: !7855)
!7906 = !DILocation(line: 1730, column: 40, scope: !7855)
!7907 = !DILocation(line: 1730, column: 47, scope: !7855)
!7908 = !DILocation(line: 1730, column: 46, scope: !7855)
!7909 = !DILocation(line: 1730, column: 8, scope: !7855)
!7910 = !DILocation(line: 1730, column: 56, scope: !7855)
!7911 = !DILocation(line: 1730, column: 54, scope: !7855)
!7912 = !DILocation(line: 1730, column: 6, scope: !7855)
!7913 = !DILocation(line: 1731, column: 6, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 1731, column: 6)
!7915 = !DILocation(line: 1731, column: 6, scope: !7855)
!7916 = !DILocation(line: 1732, column: 32, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 1731, column: 12)
!7918 = !DILocation(line: 1732, column: 36, scope: !7917)
!7919 = !DILocation(line: 1732, column: 41, scope: !7917)
!7920 = !DILocation(line: 1732, column: 40, scope: !7917)
!7921 = !DILocation(line: 1732, column: 48, scope: !7917)
!7922 = !DILocation(line: 1732, column: 53, scope: !7917)
!7923 = !DILocation(line: 1732, column: 58, scope: !7917)
!7924 = !DILocation(line: 1732, column: 12, scope: !7917)
!7925 = !DILocation(line: 1732, column: 4, scope: !7917)
!7926 = !DILocation(line: 1732, column: 10, scope: !7917)
!7927 = !DILocation(line: 1733, column: 2, scope: !7917)
!7928 = !DILocation(line: 1735, column: 9, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 1735, column: 7)
!7930 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 1734, column: 7)
!7931 = !DILocation(line: 1735, column: 8, scope: !7929)
!7932 = !DILocation(line: 1735, column: 17, scope: !7929)
!7933 = !DILocation(line: 1735, column: 7, scope: !7929)
!7934 = !DILocation(line: 1735, column: 7, scope: !7930)
!7935 = !DILocalVariable(name: "visible_lines", scope: !7936, file: !3, line: 1736, type: !1200)
!7936 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 1735, column: 23)
!7937 = !DILocation(line: 1736, column: 8, scope: !7936)
!7938 = !DILocation(line: 1738, column: 15, scope: !7936)
!7939 = !DILocation(line: 1738, column: 14, scope: !7936)
!7940 = !DILocation(line: 1738, column: 23, scope: !7936)
!7941 = !DILocation(line: 1738, column: 5, scope: !7936)
!7942 = !DILocation(line: 1738, column: 11, scope: !7936)
!7943 = !DILocation(line: 1739, column: 43, scope: !7936)
!7944 = !DILocation(line: 1739, column: 47, scope: !7936)
!7945 = !DILocation(line: 1739, column: 53, scope: !7936)
!7946 = !DILocation(line: 1739, column: 52, scope: !7936)
!7947 = !DILocation(line: 1739, column: 61, scope: !7936)
!7948 = !DILocation(line: 1739, column: 20, scope: !7936)
!7949 = !DILocation(line: 1739, column: 18, scope: !7936)
!7950 = !DILocation(line: 1740, column: 33, scope: !7936)
!7951 = !DILocation(line: 1740, column: 37, scope: !7936)
!7952 = !DILocation(line: 1740, column: 42, scope: !7936)
!7953 = !DILocation(line: 1740, column: 41, scope: !7936)
!7954 = !DILocation(line: 1740, column: 49, scope: !7936)
!7955 = !DILocation(line: 1740, column: 63, scope: !7936)
!7956 = !DILocation(line: 1740, column: 68, scope: !7936)
!7957 = !DILocation(line: 1740, column: 13, scope: !7936)
!7958 = !DILocation(line: 1740, column: 5, scope: !7936)
!7959 = !DILocation(line: 1740, column: 11, scope: !7936)
!7960 = !DILocation(line: 1741, column: 3, scope: !7936)
!7961 = !DILocation(line: 1743, column: 5, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 1742, column: 8)
!7963 = !DILocation(line: 1743, column: 11, scope: !7962)
!7964 = !DILocation(line: 1747, column: 7, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 1747, column: 6)
!7966 = !DILocation(line: 1747, column: 6, scope: !7855)
!7967 = !DILocation(line: 1747, column: 24, scope: !7965)
!7968 = !DILocation(line: 1747, column: 12, scope: !7965)
!7969 = !DILocation(line: 1748, column: 1, scope: !7855)
!7970 = distinct !DISubprogram(name: "txt_wrap_move_down", scope: !3, file: !3, line: 1750, type: !7421, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!7971 = !DILocalVariable(name: "st", arg: 1, scope: !7970, file: !3, line: 1750, type: !2804)
!7972 = !DILocation(line: 1750, column: 43, scope: !7970)
!7973 = !DILocalVariable(name: "ar", arg: 2, scope: !7970, file: !3, line: 1750, type: !3324)
!7974 = !DILocation(line: 1750, column: 56, scope: !7970)
!7975 = !DILocalVariable(name: "sel", arg: 3, scope: !7970, file: !3, line: 1750, type: !3143)
!7976 = !DILocation(line: 1750, column: 71, scope: !7970)
!7977 = !DILocalVariable(name: "text", scope: !7970, file: !3, line: 1752, type: !2858)
!7978 = !DILocation(line: 1752, column: 8, scope: !7970)
!7979 = !DILocation(line: 1752, column: 15, scope: !7970)
!7980 = !DILocation(line: 1752, column: 19, scope: !7970)
!7981 = !DILocalVariable(name: "linep", scope: !7970, file: !3, line: 1753, type: !7434)
!7982 = !DILocation(line: 1753, column: 13, scope: !7970)
!7983 = !DILocalVariable(name: "charp", scope: !7970, file: !3, line: 1754, type: !4405)
!7984 = !DILocation(line: 1754, column: 7, scope: !7970)
!7985 = !DILocalVariable(name: "offl", scope: !7970, file: !3, line: 1755, type: !1200)
!7986 = !DILocation(line: 1755, column: 6, scope: !7970)
!7987 = !DILocalVariable(name: "offc", scope: !7970, file: !3, line: 1755, type: !1200)
!7988 = !DILocation(line: 1755, column: 12, scope: !7970)
!7989 = !DILocalVariable(name: "col", scope: !7970, file: !3, line: 1755, type: !1200)
!7990 = !DILocation(line: 1755, column: 18, scope: !7970)
!7991 = !DILocalVariable(name: "visible_lines", scope: !7970, file: !3, line: 1755, type: !1200)
!7992 = !DILocation(line: 1755, column: 23, scope: !7970)
!7993 = !DILocation(line: 1757, column: 30, scope: !7970)
!7994 = !DILocation(line: 1757, column: 2, scope: !7970)
!7995 = !DILocation(line: 1759, column: 6, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 1759, column: 6)
!7997 = !DILocation(line: 1759, column: 6, scope: !7970)
!7998 = !DILocation(line: 1759, column: 22, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 1759, column: 11)
!8000 = !DILocation(line: 1759, column: 28, scope: !7999)
!8001 = !DILocation(line: 1759, column: 19, scope: !7999)
!8002 = !DILocation(line: 1759, column: 43, scope: !7999)
!8003 = !DILocation(line: 1759, column: 49, scope: !7999)
!8004 = !DILocation(line: 1759, column: 40, scope: !7999)
!8005 = !DILocation(line: 1759, column: 55, scope: !7999)
!8006 = !DILocation(line: 1760, column: 22, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 1760, column: 11)
!8008 = !DILocation(line: 1760, column: 28, scope: !8007)
!8009 = !DILocation(line: 1760, column: 19, scope: !8007)
!8010 = !DILocation(line: 1760, column: 43, scope: !8007)
!8011 = !DILocation(line: 1760, column: 49, scope: !8007)
!8012 = !DILocation(line: 1760, column: 40, scope: !8007)
!8013 = !DILocation(line: 1762, column: 22, scope: !7970)
!8014 = !DILocation(line: 1762, column: 26, scope: !7970)
!8015 = !DILocation(line: 1762, column: 31, scope: !7970)
!8016 = !DILocation(line: 1762, column: 30, scope: !7970)
!8017 = !DILocation(line: 1762, column: 39, scope: !7970)
!8018 = !DILocation(line: 1762, column: 38, scope: !7970)
!8019 = !DILocation(line: 1762, column: 2, scope: !7970)
!8020 = !DILocation(line: 1763, column: 26, scope: !7970)
!8021 = !DILocation(line: 1763, column: 32, scope: !7970)
!8022 = !DILocation(line: 1763, column: 31, scope: !7970)
!8023 = !DILocation(line: 1763, column: 40, scope: !7970)
!8024 = !DILocation(line: 1763, column: 47, scope: !7970)
!8025 = !DILocation(line: 1763, column: 46, scope: !7970)
!8026 = !DILocation(line: 1763, column: 8, scope: !7970)
!8027 = !DILocation(line: 1763, column: 56, scope: !7970)
!8028 = !DILocation(line: 1763, column: 54, scope: !7970)
!8029 = !DILocation(line: 1763, column: 6, scope: !7970)
!8030 = !DILocation(line: 1764, column: 41, scope: !7970)
!8031 = !DILocation(line: 1764, column: 45, scope: !7970)
!8032 = !DILocation(line: 1764, column: 51, scope: !7970)
!8033 = !DILocation(line: 1764, column: 50, scope: !7970)
!8034 = !DILocation(line: 1764, column: 59, scope: !7970)
!8035 = !DILocation(line: 1764, column: 18, scope: !7970)
!8036 = !DILocation(line: 1764, column: 16, scope: !7970)
!8037 = !DILocation(line: 1765, column: 6, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 1765, column: 6)
!8039 = !DILocation(line: 1765, column: 13, scope: !8038)
!8040 = !DILocation(line: 1765, column: 27, scope: !8038)
!8041 = !DILocation(line: 1765, column: 11, scope: !8038)
!8042 = !DILocation(line: 1765, column: 6, scope: !7970)
!8043 = !DILocation(line: 1766, column: 32, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 1765, column: 32)
!8045 = !DILocation(line: 1766, column: 36, scope: !8044)
!8046 = !DILocation(line: 1766, column: 41, scope: !8044)
!8047 = !DILocation(line: 1766, column: 40, scope: !8044)
!8048 = !DILocation(line: 1766, column: 48, scope: !8044)
!8049 = !DILocation(line: 1766, column: 53, scope: !8044)
!8050 = !DILocation(line: 1766, column: 58, scope: !8044)
!8051 = !DILocation(line: 1766, column: 12, scope: !8044)
!8052 = !DILocation(line: 1766, column: 4, scope: !8044)
!8053 = !DILocation(line: 1766, column: 10, scope: !8044)
!8054 = !DILocation(line: 1767, column: 2, scope: !8044)
!8055 = !DILocation(line: 1769, column: 9, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 1769, column: 7)
!8057 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 1768, column: 7)
!8058 = !DILocation(line: 1769, column: 8, scope: !8056)
!8059 = !DILocation(line: 1769, column: 17, scope: !8056)
!8060 = !DILocation(line: 1769, column: 7, scope: !8056)
!8061 = !DILocation(line: 1769, column: 7, scope: !8057)
!8062 = !DILocation(line: 1770, column: 15, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1769, column: 23)
!8064 = !DILocation(line: 1770, column: 14, scope: !8063)
!8065 = !DILocation(line: 1770, column: 23, scope: !8063)
!8066 = !DILocation(line: 1770, column: 5, scope: !8063)
!8067 = !DILocation(line: 1770, column: 11, scope: !8063)
!8068 = !DILocation(line: 1771, column: 33, scope: !8063)
!8069 = !DILocation(line: 1771, column: 37, scope: !8063)
!8070 = !DILocation(line: 1771, column: 42, scope: !8063)
!8071 = !DILocation(line: 1771, column: 41, scope: !8063)
!8072 = !DILocation(line: 1771, column: 52, scope: !8063)
!8073 = !DILocation(line: 1771, column: 13, scope: !8063)
!8074 = !DILocation(line: 1771, column: 5, scope: !8063)
!8075 = !DILocation(line: 1771, column: 11, scope: !8063)
!8076 = !DILocation(line: 1772, column: 3, scope: !8063)
!8077 = !DILocation(line: 1774, column: 15, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1773, column: 8)
!8079 = !DILocation(line: 1774, column: 14, scope: !8078)
!8080 = !DILocation(line: 1774, column: 23, scope: !8078)
!8081 = !DILocation(line: 1774, column: 5, scope: !8078)
!8082 = !DILocation(line: 1774, column: 11, scope: !8078)
!8083 = !DILocation(line: 1778, column: 7, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 1778, column: 6)
!8085 = !DILocation(line: 1778, column: 6, scope: !7970)
!8086 = !DILocation(line: 1778, column: 24, scope: !8084)
!8087 = !DILocation(line: 1778, column: 12, scope: !8084)
!8088 = !DILocation(line: 1779, column: 1, scope: !7970)
!8089 = distinct !DISubprogram(name: "cursor_skip", scope: !3, file: !3, line: 1787, type: !8090, scopeLine: 1788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{null, !2804, !3324, !2858, !1200, !3143}
!8092 = !DILocalVariable(name: "st", arg: 1, scope: !8089, file: !3, line: 1787, type: !2804)
!8093 = !DILocation(line: 1787, column: 36, scope: !8089)
!8094 = !DILocalVariable(name: "ar", arg: 2, scope: !8089, file: !3, line: 1787, type: !3324)
!8095 = !DILocation(line: 1787, column: 49, scope: !8089)
!8096 = !DILocalVariable(name: "text", arg: 3, scope: !8089, file: !3, line: 1787, type: !2858)
!8097 = !DILocation(line: 1787, column: 59, scope: !8089)
!8098 = !DILocalVariable(name: "lines", arg: 4, scope: !8089, file: !3, line: 1787, type: !1200)
!8099 = !DILocation(line: 1787, column: 69, scope: !8089)
!8100 = !DILocalVariable(name: "sel", arg: 5, scope: !8089, file: !3, line: 1787, type: !3143)
!8101 = !DILocation(line: 1787, column: 87, scope: !8089)
!8102 = !DILocalVariable(name: "linep", scope: !8089, file: !3, line: 1789, type: !7434)
!8103 = !DILocation(line: 1789, column: 13, scope: !8089)
!8104 = !DILocalVariable(name: "charp", scope: !8089, file: !3, line: 1790, type: !4405)
!8105 = !DILocation(line: 1790, column: 7, scope: !8089)
!8106 = !DILocation(line: 1792, column: 6, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1792, column: 6)
!8108 = !DILocation(line: 1792, column: 6, scope: !8089)
!8109 = !DILocation(line: 1792, column: 22, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 1792, column: 11)
!8111 = !DILocation(line: 1792, column: 28, scope: !8110)
!8112 = !DILocation(line: 1792, column: 19, scope: !8110)
!8113 = !DILocation(line: 1792, column: 43, scope: !8110)
!8114 = !DILocation(line: 1792, column: 49, scope: !8110)
!8115 = !DILocation(line: 1792, column: 40, scope: !8110)
!8116 = !DILocation(line: 1792, column: 55, scope: !8110)
!8117 = !DILocation(line: 1793, column: 22, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 1793, column: 11)
!8119 = !DILocation(line: 1793, column: 28, scope: !8118)
!8120 = !DILocation(line: 1793, column: 19, scope: !8118)
!8121 = !DILocation(line: 1793, column: 43, scope: !8118)
!8122 = !DILocation(line: 1793, column: 49, scope: !8118)
!8123 = !DILocation(line: 1793, column: 40, scope: !8118)
!8124 = !DILocation(line: 1795, column: 6, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1795, column: 6)
!8126 = !DILocation(line: 1795, column: 9, scope: !8125)
!8127 = !DILocation(line: 1795, column: 12, scope: !8125)
!8128 = !DILocation(line: 1795, column: 15, scope: !8125)
!8129 = !DILocation(line: 1795, column: 18, scope: !8125)
!8130 = !DILocation(line: 1795, column: 22, scope: !8125)
!8131 = !DILocation(line: 1795, column: 6, scope: !8089)
!8132 = !DILocalVariable(name: "rell", scope: !8133, file: !3, line: 1796, type: !1200)
!8133 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 1795, column: 32)
!8134 = !DILocation(line: 1796, column: 7, scope: !8133)
!8135 = !DILocalVariable(name: "relc", scope: !8133, file: !3, line: 1796, type: !1200)
!8136 = !DILocation(line: 1796, column: 13, scope: !8133)
!8137 = !DILocation(line: 1799, column: 29, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1799, column: 7)
!8139 = !DILocation(line: 1799, column: 33, scope: !8138)
!8140 = !DILocation(line: 1799, column: 37, scope: !8138)
!8141 = !DILocation(line: 1799, column: 44, scope: !8138)
!8142 = !DILocation(line: 1799, column: 51, scope: !8138)
!8143 = !DILocation(line: 1799, column: 7, scope: !8138)
!8144 = !DILocation(line: 1799, column: 7, scope: !8133)
!8145 = !DILocation(line: 1800, column: 33, scope: !8138)
!8146 = !DILocation(line: 1800, column: 37, scope: !8138)
!8147 = !DILocation(line: 1800, column: 42, scope: !8138)
!8148 = !DILocation(line: 1800, column: 41, scope: !8138)
!8149 = !DILocation(line: 1800, column: 49, scope: !8138)
!8150 = !DILocation(line: 1800, column: 55, scope: !8138)
!8151 = !DILocation(line: 1800, column: 13, scope: !8138)
!8152 = !DILocation(line: 1800, column: 5, scope: !8138)
!8153 = !DILocation(line: 1800, column: 11, scope: !8138)
!8154 = !DILocation(line: 1800, column: 4, scope: !8138)
!8155 = !DILocation(line: 1801, column: 2, scope: !8133)
!8156 = !DILocation(line: 1803, column: 3, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 1802, column: 7)
!8158 = !DILocation(line: 1803, column: 10, scope: !8157)
!8159 = !DILocation(line: 1803, column: 16, scope: !8157)
!8160 = !DILocation(line: 1803, column: 20, scope: !8157)
!8161 = !DILocation(line: 1803, column: 25, scope: !8157)
!8162 = !DILocation(line: 1803, column: 24, scope: !8157)
!8163 = !DILocation(line: 1803, column: 33, scope: !8157)
!8164 = !DILocation(line: 0, scope: !8157)
!8165 = !DILocation(line: 1804, column: 15, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 1803, column: 39)
!8167 = !DILocation(line: 1804, column: 14, scope: !8166)
!8168 = !DILocation(line: 1804, column: 23, scope: !8166)
!8169 = !DILocation(line: 1804, column: 5, scope: !8166)
!8170 = !DILocation(line: 1804, column: 11, scope: !8166)
!8171 = !DILocation(line: 1805, column: 9, scope: !8166)
!8172 = distinct !{!8172, !8156, !8173}
!8173 = !DILocation(line: 1806, column: 3, scope: !8157)
!8174 = !DILocation(line: 1807, column: 3, scope: !8157)
!8175 = !DILocation(line: 1807, column: 10, scope: !8157)
!8176 = !DILocation(line: 1807, column: 16, scope: !8157)
!8177 = !DILocation(line: 1807, column: 20, scope: !8157)
!8178 = !DILocation(line: 1807, column: 25, scope: !8157)
!8179 = !DILocation(line: 1807, column: 24, scope: !8157)
!8180 = !DILocation(line: 1807, column: 33, scope: !8157)
!8181 = !DILocation(line: 1808, column: 15, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 1807, column: 39)
!8183 = !DILocation(line: 1808, column: 14, scope: !8182)
!8184 = !DILocation(line: 1808, column: 23, scope: !8182)
!8185 = !DILocation(line: 1808, column: 5, scope: !8182)
!8186 = !DILocation(line: 1808, column: 11, scope: !8182)
!8187 = !DILocation(line: 1809, column: 9, scope: !8182)
!8188 = distinct !{!8188, !8174, !8189}
!8189 = !DILocation(line: 1810, column: 3, scope: !8157)
!8190 = !DILocation(line: 1813, column: 7, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1813, column: 6)
!8192 = !DILocation(line: 1813, column: 6, scope: !8191)
!8193 = !DILocation(line: 1813, column: 17, scope: !8191)
!8194 = !DILocation(line: 1813, column: 16, scope: !8191)
!8195 = !DILocation(line: 1813, column: 25, scope: !8191)
!8196 = !DILocation(line: 1813, column: 13, scope: !8191)
!8197 = !DILocation(line: 1813, column: 6, scope: !8089)
!8198 = !DILocation(line: 1813, column: 41, scope: !8191)
!8199 = !DILocation(line: 1813, column: 40, scope: !8191)
!8200 = !DILocation(line: 1813, column: 49, scope: !8191)
!8201 = !DILocation(line: 1813, column: 31, scope: !8191)
!8202 = !DILocation(line: 1813, column: 37, scope: !8191)
!8203 = !DILocation(line: 1813, column: 30, scope: !8191)
!8204 = !DILocation(line: 1815, column: 7, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 1815, column: 6)
!8206 = !DILocation(line: 1815, column: 6, scope: !8089)
!8207 = !DILocation(line: 1815, column: 24, scope: !8205)
!8208 = !DILocation(line: 1815, column: 12, scope: !8205)
!8209 = !DILocation(line: 1816, column: 1, scope: !8089)
!8210 = distinct !DISubprogram(name: "text_get_cursor_rel", scope: !3, file: !3, line: 1402, type: !8211, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!1200, !2804, !3324, !2398, !1200, !1200}
!8213 = !DILocalVariable(name: "st", arg: 1, scope: !8210, file: !3, line: 1402, type: !2804)
!8214 = !DILocation(line: 1402, column: 43, scope: !8210)
!8215 = !DILocalVariable(name: "ar", arg: 2, scope: !8210, file: !3, line: 1402, type: !3324)
!8216 = !DILocation(line: 1402, column: 56, scope: !8210)
!8217 = !DILocalVariable(name: "linein", arg: 3, scope: !8210, file: !3, line: 1402, type: !2398)
!8218 = !DILocation(line: 1402, column: 70, scope: !8210)
!8219 = !DILocalVariable(name: "rell", arg: 4, scope: !8210, file: !3, line: 1402, type: !1200)
!8220 = !DILocation(line: 1402, column: 82, scope: !8210)
!8221 = !DILocalVariable(name: "relc", arg: 5, scope: !8210, file: !3, line: 1402, type: !1200)
!8222 = !DILocation(line: 1402, column: 92, scope: !8210)
!8223 = !DILocalVariable(name: "i", scope: !8210, file: !3, line: 1404, type: !1200)
!8224 = !DILocation(line: 1404, column: 6, scope: !8210)
!8225 = !DILocalVariable(name: "j", scope: !8210, file: !3, line: 1404, type: !1200)
!8226 = !DILocation(line: 1404, column: 9, scope: !8210)
!8227 = !DILocalVariable(name: "start", scope: !8210, file: !3, line: 1404, type: !1200)
!8228 = !DILocation(line: 1404, column: 12, scope: !8210)
!8229 = !DILocalVariable(name: "end", scope: !8210, file: !3, line: 1404, type: !1200)
!8230 = !DILocation(line: 1404, column: 19, scope: !8210)
!8231 = !DILocalVariable(name: "max", scope: !8210, file: !3, line: 1404, type: !1200)
!8232 = !DILocation(line: 1404, column: 24, scope: !8210)
!8233 = !DILocalVariable(name: "chop", scope: !8210, file: !3, line: 1404, type: !1200)
!8234 = !DILocation(line: 1404, column: 29, scope: !8210)
!8235 = !DILocalVariable(name: "curs", scope: !8210, file: !3, line: 1404, type: !1200)
!8236 = !DILocation(line: 1404, column: 35, scope: !8210)
!8237 = !DILocalVariable(name: "loop", scope: !8210, file: !3, line: 1404, type: !1200)
!8238 = !DILocation(line: 1404, column: 41, scope: !8210)
!8239 = !DILocalVariable(name: "endj", scope: !8210, file: !3, line: 1404, type: !1200)
!8240 = !DILocation(line: 1404, column: 47, scope: !8210)
!8241 = !DILocalVariable(name: "found", scope: !8210, file: !3, line: 1404, type: !1200)
!8242 = !DILocation(line: 1404, column: 53, scope: !8210)
!8243 = !DILocalVariable(name: "selc", scope: !8210, file: !3, line: 1404, type: !1200)
!8244 = !DILocation(line: 1404, column: 60, scope: !8210)
!8245 = !DILocalVariable(name: "ch", scope: !8210, file: !3, line: 1405, type: !1215)
!8246 = !DILocation(line: 1405, column: 7, scope: !8210)
!8247 = !DILocation(line: 1407, column: 19, scope: !8210)
!8248 = !DILocation(line: 1407, column: 23, scope: !8210)
!8249 = !DILocation(line: 1407, column: 8, scope: !8210)
!8250 = !DILocation(line: 1407, column: 6, scope: !8210)
!8251 = !DILocation(line: 1409, column: 37, scope: !8210)
!8252 = !DILocation(line: 1409, column: 29, scope: !8210)
!8253 = !DILocation(line: 1409, column: 22, scope: !8210)
!8254 = !DILocation(line: 1409, column: 15, scope: !8210)
!8255 = !DILocation(line: 1409, column: 7, scope: !8210)
!8256 = !DILocation(line: 1410, column: 8, scope: !8210)
!8257 = !DILocation(line: 1410, column: 6, scope: !8210)
!8258 = !DILocation(line: 1411, column: 14, scope: !8210)
!8259 = !DILocation(line: 1411, column: 7, scope: !8210)
!8260 = !DILocation(line: 1413, column: 9, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1413, column: 2)
!8262 = !DILocation(line: 1413, column: 16, scope: !8261)
!8263 = !DILocation(line: 1413, column: 7, scope: !8261)
!8264 = !DILocation(line: 1413, column: 21, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 1413, column: 2)
!8266 = !DILocation(line: 1413, column: 2, scope: !8261)
!8267 = !DILocalVariable(name: "chars", scope: !8268, file: !3, line: 1414, type: !1200)
!8268 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 1413, column: 74)
!8269 = !DILocation(line: 1414, column: 7, scope: !8268)
!8270 = !DILocalVariable(name: "columns", scope: !8268, file: !3, line: 1415, type: !1200)
!8271 = !DILocation(line: 1415, column: 7, scope: !8268)
!8272 = !DILocation(line: 1415, column: 46, scope: !8268)
!8273 = !DILocation(line: 1415, column: 54, scope: !8268)
!8274 = !DILocation(line: 1415, column: 61, scope: !8268)
!8275 = !DILocation(line: 1415, column: 59, scope: !8268)
!8276 = !DILocation(line: 1415, column: 17, scope: !8268)
!8277 = !DILocation(line: 1418, column: 8, scope: !8268)
!8278 = !DILocation(line: 1418, column: 16, scope: !8268)
!8279 = !DILocation(line: 1418, column: 21, scope: !8268)
!8280 = !DILocation(line: 1418, column: 6, scope: !8268)
!8281 = !DILocation(line: 1419, column: 7, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 1419, column: 7)
!8283 = !DILocation(line: 1419, column: 10, scope: !8282)
!8284 = !DILocation(line: 1419, column: 7, scope: !8268)
!8285 = !DILocation(line: 1420, column: 12, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 1419, column: 19)
!8287 = !DILocation(line: 1420, column: 16, scope: !8286)
!8288 = !DILocation(line: 1420, column: 28, scope: !8286)
!8289 = !DILocation(line: 1420, column: 32, scope: !8286)
!8290 = !DILocation(line: 1420, column: 36, scope: !8286)
!8291 = !DILocation(line: 1420, column: 30, scope: !8286)
!8292 = !DILocation(line: 1420, column: 26, scope: !8286)
!8293 = !DILocation(line: 1420, column: 10, scope: !8286)
!8294 = !DILocation(line: 1421, column: 7, scope: !8286)
!8295 = !DILocation(line: 1422, column: 3, scope: !8286)
!8296 = !DILocation(line: 1424, column: 10, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 1423, column: 8)
!8298 = !DILocation(line: 1427, column: 3, scope: !8268)
!8299 = !DILocation(line: 1427, column: 15, scope: !8268)
!8300 = !DILocation(line: 1428, column: 8, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 1428, column: 8)
!8302 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 1427, column: 19)
!8303 = !DILocation(line: 1428, column: 13, scope: !8301)
!8304 = !DILocation(line: 1428, column: 18, scope: !8301)
!8305 = !DILocation(line: 1428, column: 21, scope: !8301)
!8306 = !DILocation(line: 1428, column: 25, scope: !8301)
!8307 = !DILocation(line: 1428, column: 23, scope: !8301)
!8308 = !DILocation(line: 1428, column: 34, scope: !8301)
!8309 = !DILocation(line: 1428, column: 31, scope: !8301)
!8310 = !DILocation(line: 1428, column: 39, scope: !8301)
!8311 = !DILocation(line: 1428, column: 42, scope: !8301)
!8312 = !DILocation(line: 1428, column: 46, scope: !8301)
!8313 = !DILocation(line: 1428, column: 44, scope: !8301)
!8314 = !DILocation(line: 1428, column: 56, scope: !8301)
!8315 = !DILocation(line: 1428, column: 54, scope: !8301)
!8316 = !DILocation(line: 1428, column: 64, scope: !8301)
!8317 = !DILocation(line: 1428, column: 62, scope: !8301)
!8318 = !DILocation(line: 1428, column: 8, scope: !8302)
!8319 = !DILocation(line: 1431, column: 12, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 1428, column: 70)
!8321 = !DILocation(line: 1431, column: 10, scope: !8320)
!8322 = !DILocation(line: 1432, column: 11, scope: !8320)
!8323 = !DILocation(line: 1433, column: 4, scope: !8320)
!8324 = !DILocation(line: 1434, column: 13, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 1434, column: 13)
!8326 = !DILocation(line: 1434, column: 17, scope: !8325)
!8327 = !DILocation(line: 1434, column: 15, scope: !8325)
!8328 = !DILocation(line: 1434, column: 24, scope: !8325)
!8329 = !DILocation(line: 1434, column: 21, scope: !8325)
!8330 = !DILocation(line: 1434, column: 29, scope: !8325)
!8331 = !DILocation(line: 1434, column: 32, scope: !8325)
!8332 = !DILocation(line: 1434, column: 36, scope: !8325)
!8333 = !DILocation(line: 1434, column: 34, scope: !8325)
!8334 = !DILocation(line: 1434, column: 46, scope: !8325)
!8335 = !DILocation(line: 1434, column: 44, scope: !8325)
!8336 = !DILocation(line: 1434, column: 52, scope: !8325)
!8337 = !DILocation(line: 1434, column: 50, scope: !8325)
!8338 = !DILocation(line: 1434, column: 13, scope: !8301)
!8339 = !DILocation(line: 1435, column: 12, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 1434, column: 58)
!8341 = !DILocation(line: 1435, column: 10, scope: !8340)
!8342 = !DILocation(line: 1436, column: 4, scope: !8340)
!8343 = !DILocation(line: 1437, column: 8, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 1437, column: 8)
!8345 = !DILocation(line: 1437, column: 12, scope: !8344)
!8346 = !DILocation(line: 1437, column: 10, scope: !8344)
!8347 = !DILocation(line: 1437, column: 22, scope: !8344)
!8348 = !DILocation(line: 1437, column: 20, scope: !8344)
!8349 = !DILocation(line: 1437, column: 30, scope: !8344)
!8350 = !DILocation(line: 1437, column: 28, scope: !8344)
!8351 = !DILocation(line: 1437, column: 8, scope: !8302)
!8352 = !DILocation(line: 1438, column: 11, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 1437, column: 35)
!8354 = !DILocation(line: 1438, column: 9, scope: !8353)
!8355 = !DILocation(line: 1440, column: 9, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1440, column: 9)
!8357 = !DILocation(line: 1440, column: 9, scope: !8353)
!8358 = !DILocation(line: 1443, column: 10, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 1443, column: 10)
!8360 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 1440, column: 16)
!8361 = !DILocation(line: 1443, column: 17, scope: !8359)
!8362 = !DILocation(line: 1443, column: 15, scope: !8359)
!8363 = !DILocation(line: 1443, column: 22, scope: !8359)
!8364 = !DILocation(line: 1443, column: 26, scope: !8359)
!8365 = !DILocation(line: 1443, column: 10, scope: !8360)
!8366 = !DILocation(line: 1443, column: 39, scope: !8359)
!8367 = !DILocation(line: 1443, column: 37, scope: !8359)
!8368 = !DILocation(line: 1443, column: 32, scope: !8359)
!8369 = !DILocation(line: 1444, column: 11, scope: !8360)
!8370 = !DILocation(line: 1445, column: 6, scope: !8360)
!8371 = !DILocation(line: 1448, column: 9, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1448, column: 9)
!8373 = !DILocation(line: 1448, column: 9, scope: !8353)
!8374 = !DILocation(line: 1448, column: 22, scope: !8372)
!8375 = !DILocation(line: 1448, column: 20, scope: !8372)
!8376 = !DILocation(line: 1448, column: 15, scope: !8372)
!8377 = !DILocation(line: 1450, column: 13, scope: !8353)
!8378 = !DILocation(line: 1450, column: 11, scope: !8353)
!8379 = !DILocation(line: 1451, column: 12, scope: !8353)
!8380 = !DILocation(line: 1451, column: 9, scope: !8353)
!8381 = !DILocation(line: 1452, column: 10, scope: !8353)
!8382 = !DILocation(line: 1453, column: 9, scope: !8353)
!8383 = !DILocation(line: 1455, column: 9, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 1455, column: 9)
!8385 = !DILocation(line: 1455, column: 14, scope: !8384)
!8386 = !DILocation(line: 1455, column: 19, scope: !8384)
!8387 = !DILocation(line: 1455, column: 22, scope: !8384)
!8388 = !DILocation(line: 1455, column: 26, scope: !8384)
!8389 = !DILocation(line: 1455, column: 24, scope: !8384)
!8390 = !DILocation(line: 1455, column: 36, scope: !8384)
!8391 = !DILocation(line: 1455, column: 34, scope: !8384)
!8392 = !DILocation(line: 1455, column: 44, scope: !8384)
!8393 = !DILocation(line: 1455, column: 42, scope: !8384)
!8394 = !DILocation(line: 1455, column: 9, scope: !8353)
!8395 = !DILocation(line: 1456, column: 13, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 1455, column: 50)
!8397 = !DILocation(line: 1456, column: 11, scope: !8396)
!8398 = !DILocation(line: 1457, column: 11, scope: !8396)
!8399 = !DILocation(line: 1458, column: 6, scope: !8396)
!8400 = !DILocation(line: 1460, column: 4, scope: !8353)
!8401 = !DILocation(line: 1461, column: 13, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 1461, column: 13)
!8403 = !DILocation(line: 1461, column: 16, scope: !8402)
!8404 = !DILocation(line: 1461, column: 13, scope: !8344)
!8405 = !DILocation(line: 1462, column: 10, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 1462, column: 9)
!8407 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1461, column: 25)
!8408 = !DILocation(line: 1462, column: 9, scope: !8407)
!8409 = !DILocation(line: 1462, column: 24, scope: !8406)
!8410 = !DILocation(line: 1462, column: 32, scope: !8406)
!8411 = !DILocation(line: 1462, column: 22, scope: !8406)
!8412 = !DILocation(line: 1462, column: 17, scope: !8406)
!8413 = !DILocation(line: 1463, column: 10, scope: !8407)
!8414 = !DILocation(line: 1464, column: 5, scope: !8407)
!8415 = !DILocation(line: 1466, column: 13, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1466, column: 13)
!8417 = !DILocation(line: 1466, column: 16, scope: !8416)
!8418 = !DILocation(line: 1466, column: 23, scope: !8416)
!8419 = !DILocation(line: 1466, column: 26, scope: !8416)
!8420 = !DILocation(line: 1466, column: 29, scope: !8416)
!8421 = !DILocation(line: 1466, column: 13, scope: !8402)
!8422 = !DILocation(line: 1467, column: 9, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 1467, column: 9)
!8424 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 1466, column: 37)
!8425 = !DILocation(line: 1467, column: 9, scope: !8424)
!8426 = !DILocation(line: 1468, column: 11, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 1467, column: 16)
!8428 = !DILocation(line: 1469, column: 6, scope: !8427)
!8429 = !DILocation(line: 1472, column: 9, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 1472, column: 9)
!8431 = !DILocation(line: 1472, column: 14, scope: !8430)
!8432 = !DILocation(line: 1472, column: 19, scope: !8430)
!8433 = !DILocation(line: 1472, column: 22, scope: !8430)
!8434 = !DILocation(line: 1472, column: 26, scope: !8430)
!8435 = !DILocation(line: 1472, column: 24, scope: !8430)
!8436 = !DILocation(line: 1472, column: 36, scope: !8430)
!8437 = !DILocation(line: 1472, column: 34, scope: !8430)
!8438 = !DILocation(line: 1472, column: 44, scope: !8430)
!8439 = !DILocation(line: 1472, column: 42, scope: !8430)
!8440 = !DILocation(line: 1472, column: 9, scope: !8424)
!8441 = !DILocation(line: 1473, column: 13, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 1472, column: 50)
!8443 = !DILocation(line: 1473, column: 11, scope: !8442)
!8444 = !DILocation(line: 1474, column: 11, scope: !8442)
!8445 = !DILocation(line: 1475, column: 6, scope: !8442)
!8446 = !DILocation(line: 1477, column: 11, scope: !8424)
!8447 = !DILocation(line: 1477, column: 13, scope: !8424)
!8448 = !DILocation(line: 1477, column: 9, scope: !8424)
!8449 = !DILocation(line: 1478, column: 12, scope: !8424)
!8450 = !DILocation(line: 1478, column: 10, scope: !8424)
!8451 = !DILocation(line: 1479, column: 10, scope: !8424)
!8452 = !DILocation(line: 1480, column: 4, scope: !8424)
!8453 = !DILocation(line: 1481, column: 9, scope: !8302)
!8454 = !DILocation(line: 1481, column: 6, scope: !8302)
!8455 = distinct !{!8455, !8298, !8456}
!8456 = !DILocation(line: 1482, column: 3, scope: !8268)
!8457 = !DILocation(line: 1483, column: 2, scope: !8268)
!8458 = !DILocation(line: 1413, column: 55, scope: !8265)
!8459 = !DILocation(line: 1413, column: 63, scope: !8265)
!8460 = !DILocation(line: 1413, column: 70, scope: !8265)
!8461 = !DILocation(line: 1413, column: 68, scope: !8265)
!8462 = !DILocation(line: 1413, column: 32, scope: !8265)
!8463 = !DILocation(line: 1413, column: 29, scope: !8265)
!8464 = !DILocation(line: 1413, column: 2, scope: !8265)
!8465 = distinct !{!8465, !8266, !8466}
!8466 = !DILocation(line: 1483, column: 2, scope: !8261)
!8467 = !DILocation(line: 1485, column: 9, scope: !8210)
!8468 = !DILocation(line: 1485, column: 2, scope: !8210)
!8469 = distinct !DISubprogram(name: "cursor_skip_find_line", scope: !3, file: !3, line: 1488, type: !8470, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!1200, !2804, !3324, !1200, !7434, !4405, !4405, !4405}
!8472 = !DILocalVariable(name: "st", arg: 1, scope: !8469, file: !3, line: 1488, type: !2804)
!8473 = !DILocation(line: 1488, column: 45, scope: !8469)
!8474 = !DILocalVariable(name: "ar", arg: 2, scope: !8469, file: !3, line: 1488, type: !3324)
!8475 = !DILocation(line: 1488, column: 58, scope: !8469)
!8476 = !DILocalVariable(name: "lines", arg: 3, scope: !8469, file: !3, line: 1489, type: !1200)
!8477 = !DILocation(line: 1489, column: 38, scope: !8469)
!8478 = !DILocalVariable(name: "linep", arg: 4, scope: !8469, file: !3, line: 1489, type: !7434)
!8479 = !DILocation(line: 1489, column: 56, scope: !8469)
!8480 = !DILocalVariable(name: "charp", arg: 5, scope: !8469, file: !3, line: 1489, type: !4405)
!8481 = !DILocation(line: 1489, column: 68, scope: !8469)
!8482 = !DILocalVariable(name: "rell", arg: 6, scope: !8469, file: !3, line: 1489, type: !4405)
!8483 = !DILocation(line: 1489, column: 80, scope: !8469)
!8484 = !DILocalVariable(name: "relc", arg: 7, scope: !8469, file: !3, line: 1489, type: !4405)
!8485 = !DILocation(line: 1489, column: 91, scope: !8469)
!8486 = !DILocalVariable(name: "offl", scope: !8469, file: !3, line: 1491, type: !1200)
!8487 = !DILocation(line: 1491, column: 6, scope: !8469)
!8488 = !DILocalVariable(name: "offc", scope: !8469, file: !3, line: 1491, type: !1200)
!8489 = !DILocation(line: 1491, column: 12, scope: !8469)
!8490 = !DILocalVariable(name: "visible_lines", scope: !8469, file: !3, line: 1491, type: !1200)
!8491 = !DILocation(line: 1491, column: 18, scope: !8469)
!8492 = !DILocation(line: 1493, column: 22, scope: !8469)
!8493 = !DILocation(line: 1493, column: 26, scope: !8469)
!8494 = !DILocation(line: 1493, column: 31, scope: !8469)
!8495 = !DILocation(line: 1493, column: 30, scope: !8469)
!8496 = !DILocation(line: 1493, column: 39, scope: !8469)
!8497 = !DILocation(line: 1493, column: 38, scope: !8469)
!8498 = !DILocation(line: 1493, column: 2, scope: !8469)
!8499 = !DILocation(line: 1494, column: 28, scope: !8469)
!8500 = !DILocation(line: 1494, column: 34, scope: !8469)
!8501 = !DILocation(line: 1494, column: 33, scope: !8469)
!8502 = !DILocation(line: 1494, column: 42, scope: !8469)
!8503 = !DILocation(line: 1494, column: 49, scope: !8469)
!8504 = !DILocation(line: 1494, column: 48, scope: !8469)
!8505 = !DILocation(line: 1494, column: 10, scope: !8469)
!8506 = !DILocation(line: 1494, column: 58, scope: !8469)
!8507 = !DILocation(line: 1494, column: 56, scope: !8469)
!8508 = !DILocation(line: 1494, column: 3, scope: !8469)
!8509 = !DILocation(line: 1494, column: 8, scope: !8469)
!8510 = !DILocation(line: 1495, column: 10, scope: !8469)
!8511 = !DILocation(line: 1495, column: 3, scope: !8469)
!8512 = !DILocation(line: 1495, column: 8, scope: !8469)
!8513 = !DILocation(line: 1498, column: 6, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 1498, column: 6)
!8515 = !DILocation(line: 1498, column: 12, scope: !8514)
!8516 = !DILocation(line: 1498, column: 6, scope: !8469)
!8517 = !DILocation(line: 1499, column: 42, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1498, column: 17)
!8519 = !DILocation(line: 1499, column: 46, scope: !8518)
!8520 = !DILocation(line: 1499, column: 52, scope: !8518)
!8521 = !DILocation(line: 1499, column: 51, scope: !8518)
!8522 = !DILocation(line: 1499, column: 60, scope: !8518)
!8523 = !DILocation(line: 1499, column: 19, scope: !8518)
!8524 = !DILocation(line: 1499, column: 17, scope: !8518)
!8525 = !DILocation(line: 1501, column: 8, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 1501, column: 7)
!8527 = !DILocation(line: 1501, column: 7, scope: !8526)
!8528 = !DILocation(line: 1501, column: 15, scope: !8526)
!8529 = !DILocation(line: 1501, column: 13, scope: !8526)
!8530 = !DILocation(line: 1501, column: 31, scope: !8526)
!8531 = !DILocation(line: 1501, column: 29, scope: !8526)
!8532 = !DILocation(line: 1501, column: 36, scope: !8526)
!8533 = !DILocation(line: 1501, column: 7, scope: !8518)
!8534 = !DILocation(line: 1502, column: 11, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 1502, column: 8)
!8536 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1501, column: 42)
!8537 = !DILocation(line: 1502, column: 10, scope: !8535)
!8538 = !DILocation(line: 1502, column: 19, scope: !8535)
!8539 = !DILocation(line: 1502, column: 9, scope: !8535)
!8540 = !DILocation(line: 1502, column: 8, scope: !8536)
!8541 = !DILocation(line: 1503, column: 9, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 1503, column: 9)
!8543 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 1502, column: 25)
!8544 = !DILocation(line: 1503, column: 16, scope: !8542)
!8545 = !DILocation(line: 1503, column: 30, scope: !8542)
!8546 = !DILocation(line: 1503, column: 14, scope: !8542)
!8547 = !DILocation(line: 1503, column: 9, scope: !8543)
!8548 = !DILocation(line: 1504, column: 14, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1503, column: 35)
!8550 = !DILocation(line: 1504, column: 28, scope: !8549)
!8551 = !DILocation(line: 1504, column: 7, scope: !8549)
!8552 = !DILocation(line: 1504, column: 12, scope: !8549)
!8553 = !DILocation(line: 1505, column: 6, scope: !8549)
!8554 = !DILocation(line: 1508, column: 16, scope: !8543)
!8555 = !DILocation(line: 1508, column: 15, scope: !8543)
!8556 = !DILocation(line: 1508, column: 24, scope: !8543)
!8557 = !DILocation(line: 1508, column: 6, scope: !8543)
!8558 = !DILocation(line: 1508, column: 12, scope: !8543)
!8559 = !DILocation(line: 1509, column: 5, scope: !8543)
!8560 = !DILocation(line: 1512, column: 13, scope: !8536)
!8561 = !DILocation(line: 1512, column: 29, scope: !8536)
!8562 = !DILocation(line: 1512, column: 27, scope: !8536)
!8563 = !DILocation(line: 1512, column: 5, scope: !8536)
!8564 = !DILocation(line: 1512, column: 10, scope: !8536)
!8565 = !DILocation(line: 1513, column: 15, scope: !8536)
!8566 = !DILocation(line: 1513, column: 14, scope: !8536)
!8567 = !DILocation(line: 1513, column: 23, scope: !8536)
!8568 = !DILocation(line: 1513, column: 5, scope: !8536)
!8569 = !DILocation(line: 1513, column: 11, scope: !8536)
!8570 = !DILocation(line: 1514, column: 3, scope: !8536)
!8571 = !DILocation(line: 1516, column: 13, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1515, column: 8)
!8573 = !DILocation(line: 1516, column: 5, scope: !8572)
!8574 = !DILocation(line: 1516, column: 10, scope: !8572)
!8575 = !DILocation(line: 1517, column: 4, scope: !8572)
!8576 = !DILocation(line: 1519, column: 2, scope: !8518)
!8577 = !DILocation(line: 1521, column: 8, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 1521, column: 7)
!8579 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1520, column: 7)
!8580 = !DILocation(line: 1521, column: 7, scope: !8578)
!8581 = !DILocation(line: 1521, column: 15, scope: !8578)
!8582 = !DILocation(line: 1521, column: 13, scope: !8578)
!8583 = !DILocation(line: 1521, column: 20, scope: !8578)
!8584 = !DILocation(line: 1521, column: 7, scope: !8579)
!8585 = !DILocation(line: 1522, column: 11, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 1522, column: 8)
!8587 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1521, column: 26)
!8588 = !DILocation(line: 1522, column: 10, scope: !8586)
!8589 = !DILocation(line: 1522, column: 19, scope: !8586)
!8590 = !DILocation(line: 1522, column: 9, scope: !8586)
!8591 = !DILocation(line: 1522, column: 8, scope: !8587)
!8592 = !DILocation(line: 1523, column: 9, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1523, column: 9)
!8594 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 1522, column: 25)
!8595 = !DILocation(line: 1523, column: 9, scope: !8594)
!8596 = !DILocation(line: 1524, column: 7, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1523, column: 15)
!8598 = !DILocation(line: 1524, column: 12, scope: !8597)
!8599 = !DILocation(line: 1525, column: 6, scope: !8597)
!8600 = !DILocation(line: 1528, column: 6, scope: !8594)
!8601 = !DILocation(line: 1528, column: 12, scope: !8594)
!8602 = !DILocation(line: 1529, column: 5, scope: !8594)
!8603 = !DILocation(line: 1532, column: 13, scope: !8587)
!8604 = !DILocation(line: 1532, column: 5, scope: !8587)
!8605 = !DILocation(line: 1532, column: 10, scope: !8587)
!8606 = !DILocation(line: 1533, column: 15, scope: !8587)
!8607 = !DILocation(line: 1533, column: 14, scope: !8587)
!8608 = !DILocation(line: 1533, column: 23, scope: !8587)
!8609 = !DILocation(line: 1533, column: 5, scope: !8587)
!8610 = !DILocation(line: 1533, column: 11, scope: !8587)
!8611 = !DILocation(line: 1534, column: 3, scope: !8587)
!8612 = !DILocation(line: 1536, column: 13, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1535, column: 8)
!8614 = !DILocation(line: 1536, column: 5, scope: !8613)
!8615 = !DILocation(line: 1536, column: 10, scope: !8613)
!8616 = !DILocation(line: 1537, column: 4, scope: !8613)
!8617 = !DILocation(line: 1542, column: 2, scope: !8469)
!8618 = !DILocation(line: 1542, column: 10, scope: !8469)
!8619 = !DILocation(line: 1542, column: 9, scope: !8469)
!8620 = !DILocation(line: 1543, column: 42, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 1542, column: 17)
!8622 = !DILocation(line: 1543, column: 46, scope: !8621)
!8623 = !DILocation(line: 1543, column: 52, scope: !8621)
!8624 = !DILocation(line: 1543, column: 51, scope: !8621)
!8625 = !DILocation(line: 1543, column: 60, scope: !8621)
!8626 = !DILocation(line: 1543, column: 19, scope: !8621)
!8627 = !DILocation(line: 1543, column: 17, scope: !8621)
!8628 = !DILocation(line: 1545, column: 7, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 1545, column: 7)
!8630 = !DILocation(line: 1545, column: 13, scope: !8629)
!8631 = !DILocation(line: 1545, column: 7, scope: !8621)
!8632 = !DILocation(line: 1546, column: 9, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 1546, column: 8)
!8634 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 1545, column: 18)
!8635 = !DILocation(line: 1546, column: 8, scope: !8633)
!8636 = !DILocation(line: 1546, column: 16, scope: !8633)
!8637 = !DILocation(line: 1546, column: 14, scope: !8633)
!8638 = !DILocation(line: 1546, column: 30, scope: !8633)
!8639 = !DILocation(line: 1546, column: 8, scope: !8634)
!8640 = !DILocation(line: 1547, column: 14, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 1546, column: 36)
!8642 = !DILocation(line: 1547, column: 6, scope: !8641)
!8643 = !DILocation(line: 1547, column: 11, scope: !8641)
!8644 = !DILocation(line: 1548, column: 5, scope: !8641)
!8645 = !DILocation(line: 1551, column: 11, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 1551, column: 8)
!8647 = !DILocation(line: 1551, column: 10, scope: !8646)
!8648 = !DILocation(line: 1551, column: 19, scope: !8646)
!8649 = !DILocation(line: 1551, column: 9, scope: !8646)
!8650 = !DILocation(line: 1551, column: 8, scope: !8634)
!8651 = !DILocation(line: 1552, column: 6, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 1551, column: 25)
!8653 = !DILocation(line: 1552, column: 11, scope: !8652)
!8654 = !DILocation(line: 1553, column: 5, scope: !8652)
!8655 = !DILocation(line: 1556, column: 13, scope: !8634)
!8656 = !DILocation(line: 1556, column: 5, scope: !8634)
!8657 = !DILocation(line: 1556, column: 10, scope: !8634)
!8658 = !DILocation(line: 1557, column: 15, scope: !8634)
!8659 = !DILocation(line: 1557, column: 14, scope: !8634)
!8660 = !DILocation(line: 1557, column: 23, scope: !8634)
!8661 = !DILocation(line: 1557, column: 5, scope: !8634)
!8662 = !DILocation(line: 1557, column: 11, scope: !8634)
!8663 = !DILocation(line: 1558, column: 3, scope: !8634)
!8664 = !DILocation(line: 1560, column: 9, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 1560, column: 8)
!8666 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 1559, column: 8)
!8667 = !DILocation(line: 1560, column: 8, scope: !8665)
!8668 = !DILocation(line: 1560, column: 16, scope: !8665)
!8669 = !DILocation(line: 1560, column: 14, scope: !8665)
!8670 = !DILocation(line: 1560, column: 30, scope: !8665)
!8671 = !DILocation(line: 1560, column: 8, scope: !8666)
!8672 = !DILocation(line: 1560, column: 35, scope: !8665)
!8673 = !DILocation(line: 1562, column: 11, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 1562, column: 8)
!8675 = !DILocation(line: 1562, column: 10, scope: !8674)
!8676 = !DILocation(line: 1562, column: 19, scope: !8674)
!8677 = !DILocation(line: 1562, column: 9, scope: !8674)
!8678 = !DILocation(line: 1562, column: 8, scope: !8666)
!8679 = !DILocation(line: 1563, column: 13, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1562, column: 25)
!8681 = !DILocation(line: 1563, column: 27, scope: !8680)
!8682 = !DILocation(line: 1563, column: 6, scope: !8680)
!8683 = !DILocation(line: 1563, column: 11, scope: !8680)
!8684 = !DILocation(line: 1564, column: 5, scope: !8680)
!8685 = !DILocation(line: 1567, column: 13, scope: !8666)
!8686 = !DILocation(line: 1567, column: 5, scope: !8666)
!8687 = !DILocation(line: 1567, column: 10, scope: !8666)
!8688 = !DILocation(line: 1568, column: 15, scope: !8666)
!8689 = !DILocation(line: 1568, column: 14, scope: !8666)
!8690 = !DILocation(line: 1568, column: 23, scope: !8666)
!8691 = !DILocation(line: 1568, column: 5, scope: !8666)
!8692 = !DILocation(line: 1568, column: 11, scope: !8666)
!8693 = distinct !{!8693, !8617, !8694}
!8694 = !DILocation(line: 1570, column: 2, scope: !8469)
!8695 = !DILocation(line: 1572, column: 2, scope: !8469)
!8696 = !DILocation(line: 1573, column: 1, scope: !8469)
!8697 = distinct !DISubprogram(name: "txt_screen_skip", scope: !3, file: !3, line: 2119, type: !8698, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{null, !2804, !3324, !1200}
!8700 = !DILocalVariable(name: "st", arg: 1, scope: !8697, file: !3, line: 2119, type: !2804)
!8701 = !DILocation(line: 2119, column: 40, scope: !8697)
!8702 = !DILocalVariable(name: "ar", arg: 2, scope: !8697, file: !3, line: 2119, type: !3324)
!8703 = !DILocation(line: 2119, column: 53, scope: !8697)
!8704 = !DILocalVariable(name: "lines", arg: 3, scope: !8697, file: !3, line: 2119, type: !1200)
!8705 = !DILocation(line: 2119, column: 61, scope: !8697)
!8706 = !DILocation(line: 2121, column: 13, scope: !8697)
!8707 = !DILocation(line: 2121, column: 2, scope: !8697)
!8708 = !DILocation(line: 2121, column: 6, scope: !8697)
!8709 = !DILocation(line: 2121, column: 10, scope: !8697)
!8710 = !DILocation(line: 2122, column: 19, scope: !8697)
!8711 = !DILocation(line: 2122, column: 23, scope: !8697)
!8712 = !DILocation(line: 2122, column: 2, scope: !8697)
!8713 = !DILocation(line: 2123, column: 1, scope: !8697)
!8714 = distinct !DISubprogram(name: "text_scroll_apply", scope: !3, file: !3, line: 2165, type: !8715, scopeLine: 2166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{null, !2783, !2785, !2787}
!8717 = !DILocalVariable(name: "C", arg: 1, scope: !8714, file: !3, line: 2165, type: !2783)
!8718 = !DILocation(line: 2165, column: 41, scope: !8714)
!8719 = !DILocalVariable(name: "op", arg: 2, scope: !8714, file: !3, line: 2165, type: !2785)
!8720 = !DILocation(line: 2165, column: 56, scope: !8714)
!8721 = !DILocalVariable(name: "event", arg: 3, scope: !8714, file: !3, line: 2165, type: !2787)
!8722 = !DILocation(line: 2165, column: 75, scope: !8714)
!8723 = !DILocalVariable(name: "st", scope: !8714, file: !3, line: 2167, type: !2804)
!8724 = !DILocation(line: 2167, column: 13, scope: !8714)
!8725 = !DILocation(line: 2167, column: 36, scope: !8714)
!8726 = !DILocation(line: 2167, column: 18, scope: !8714)
!8727 = !DILocalVariable(name: "ar", scope: !8714, file: !3, line: 2168, type: !3324)
!8728 = !DILocation(line: 2168, column: 11, scope: !8714)
!8729 = !DILocation(line: 2168, column: 30, scope: !8714)
!8730 = !DILocation(line: 2168, column: 16, scope: !8714)
!8731 = !DILocalVariable(name: "tsc", scope: !8714, file: !3, line: 2169, type: !5355)
!8732 = !DILocation(line: 2169, column: 14, scope: !8714)
!8733 = !DILocation(line: 2169, column: 20, scope: !8714)
!8734 = !DILocation(line: 2169, column: 24, scope: !8714)
!8735 = !DILocalVariable(name: "mval", scope: !8714, file: !3, line: 2170, type: !1601)
!8736 = !DILocation(line: 2170, column: 6, scope: !8714)
!8737 = !DILocation(line: 2170, column: 16, scope: !8714)
!8738 = !DILocation(line: 2170, column: 17, scope: !8714)
!8739 = !DILocation(line: 2170, column: 24, scope: !8714)
!8740 = !DILocation(line: 2170, column: 27, scope: !8714)
!8741 = !DILocation(line: 2170, column: 34, scope: !8714)
!8742 = !DILocalVariable(name: "scroll_steps", scope: !8714, file: !3, line: 2171, type: !1601)
!8743 = !DILocation(line: 2171, column: 6, scope: !8714)
!8744 = !DILocation(line: 2173, column: 30, scope: !8714)
!8745 = !DILocation(line: 2173, column: 2, scope: !8714)
!8746 = !DILocation(line: 2176, column: 6, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 2176, column: 6)
!8748 = !DILocation(line: 2176, column: 11, scope: !8747)
!8749 = !DILocation(line: 2176, column: 6, scope: !8714)
!8750 = !DILocation(line: 2177, column: 17, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 2176, column: 18)
!8752 = !DILocation(line: 2177, column: 3, scope: !8751)
!8753 = !DILocation(line: 2177, column: 8, scope: !8751)
!8754 = !DILocation(line: 2177, column: 15, scope: !8751)
!8755 = !DILocation(line: 2178, column: 17, scope: !8751)
!8756 = !DILocation(line: 2178, column: 3, scope: !8751)
!8757 = !DILocation(line: 2178, column: 8, scope: !8751)
!8758 = !DILocation(line: 2178, column: 15, scope: !8751)
!8759 = !DILocation(line: 2179, column: 3, scope: !8751)
!8760 = !DILocation(line: 2179, column: 8, scope: !8751)
!8761 = !DILocation(line: 2179, column: 14, scope: !8751)
!8762 = !DILocation(line: 2180, column: 2, scope: !8751)
!8763 = !DILocation(line: 2182, column: 6, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 2182, column: 6)
!8765 = !DILocation(line: 2182, column: 13, scope: !8764)
!8766 = !DILocation(line: 2182, column: 18, scope: !8764)
!8767 = !DILocation(line: 2182, column: 6, scope: !8714)
!8768 = !DILocation(line: 2183, column: 19, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 2182, column: 31)
!8770 = !DILocation(line: 2183, column: 29, scope: !8769)
!8771 = !DILocation(line: 2183, column: 34, scope: !8769)
!8772 = !DILocation(line: 2183, column: 27, scope: !8769)
!8773 = !DILocation(line: 2183, column: 3, scope: !8769)
!8774 = !DILocation(line: 2183, column: 8, scope: !8769)
!8775 = !DILocation(line: 2183, column: 17, scope: !8769)
!8776 = !DILocation(line: 2184, column: 19, scope: !8769)
!8777 = !DILocation(line: 2184, column: 29, scope: !8769)
!8778 = !DILocation(line: 2184, column: 34, scope: !8769)
!8779 = !DILocation(line: 2184, column: 27, scope: !8769)
!8780 = !DILocation(line: 2184, column: 3, scope: !8769)
!8781 = !DILocation(line: 2184, column: 8, scope: !8769)
!8782 = !DILocation(line: 2184, column: 17, scope: !8769)
!8783 = !DILocation(line: 2185, column: 2, scope: !8769)
!8784 = !DILocation(line: 2189, column: 7, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 2189, column: 6)
!8786 = !DILocation(line: 2189, column: 12, scope: !8785)
!8787 = !DILocation(line: 2189, column: 6, scope: !8714)
!8788 = !DILocation(line: 2190, column: 27, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2189, column: 23)
!8790 = !DILocation(line: 2190, column: 32, scope: !8789)
!8791 = !DILocation(line: 2190, column: 26, scope: !8789)
!8792 = !DILocation(line: 2190, column: 50, scope: !8789)
!8793 = !DILocation(line: 2190, column: 54, scope: !8789)
!8794 = !DILocation(line: 2190, column: 43, scope: !8789)
!8795 = !DILocation(line: 2190, column: 41, scope: !8789)
!8796 = !DILocation(line: 2190, column: 3, scope: !8789)
!8797 = !DILocation(line: 2190, column: 7, scope: !8789)
!8798 = !DILocation(line: 2190, column: 23, scope: !8789)
!8799 = !DILocation(line: 2191, column: 26, scope: !8789)
!8800 = !DILocation(line: 2191, column: 31, scope: !8789)
!8801 = !DILocation(line: 2191, column: 50, scope: !8789)
!8802 = !DILocation(line: 2191, column: 54, scope: !8789)
!8803 = !DILocation(line: 2191, column: 68, scope: !8789)
!8804 = !DILocation(line: 2191, column: 66, scope: !8789)
!8805 = !DILocation(line: 2191, column: 42, scope: !8789)
!8806 = !DILocation(line: 2191, column: 40, scope: !8789)
!8807 = !DILocation(line: 2191, column: 3, scope: !8789)
!8808 = !DILocation(line: 2191, column: 7, scope: !8789)
!8809 = !DILocation(line: 2191, column: 23, scope: !8789)
!8810 = !DILocation(line: 2192, column: 2, scope: !8789)
!8811 = !DILocation(line: 2194, column: 27, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2193, column: 7)
!8813 = !DILocation(line: 2194, column: 32, scope: !8812)
!8814 = !DILocation(line: 2194, column: 26, scope: !8812)
!8815 = !DILocation(line: 2194, column: 43, scope: !8812)
!8816 = !DILocation(line: 2194, column: 47, scope: !8812)
!8817 = !DILocation(line: 2194, column: 41, scope: !8812)
!8818 = !DILocation(line: 2194, column: 3, scope: !8812)
!8819 = !DILocation(line: 2194, column: 7, scope: !8812)
!8820 = !DILocation(line: 2194, column: 23, scope: !8812)
!8821 = !DILocation(line: 2198, column: 25, scope: !8714)
!8822 = !DILocation(line: 2198, column: 29, scope: !8714)
!8823 = !DILocation(line: 2198, column: 20, scope: !8714)
!8824 = !DILocation(line: 2198, column: 2, scope: !8714)
!8825 = !DILocation(line: 2198, column: 18, scope: !8714)
!8826 = !DILocation(line: 2199, column: 25, scope: !8714)
!8827 = !DILocation(line: 2199, column: 29, scope: !8714)
!8828 = !DILocation(line: 2199, column: 20, scope: !8714)
!8829 = !DILocation(line: 2199, column: 2, scope: !8714)
!8830 = !DILocation(line: 2199, column: 18, scope: !8714)
!8831 = !DILocation(line: 2201, column: 25, scope: !8714)
!8832 = !DILocation(line: 2201, column: 2, scope: !8714)
!8833 = !DILocation(line: 2201, column: 6, scope: !8714)
!8834 = !DILocation(line: 2201, column: 22, scope: !8714)
!8835 = !DILocation(line: 2202, column: 25, scope: !8714)
!8836 = !DILocation(line: 2202, column: 2, scope: !8714)
!8837 = !DILocation(line: 2202, column: 6, scope: !8714)
!8838 = !DILocation(line: 2202, column: 22, scope: !8714)
!8839 = !DILocation(line: 2205, column: 6, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 2205, column: 6)
!8841 = !DILocation(line: 2205, column: 22, scope: !8840)
!8842 = !DILocation(line: 2205, column: 25, scope: !8840)
!8843 = !DILocation(line: 2205, column: 6, scope: !8714)
!8844 = !DILocation(line: 2206, column: 19, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 2205, column: 42)
!8846 = !DILocation(line: 2206, column: 23, scope: !8845)
!8847 = !DILocation(line: 2206, column: 27, scope: !8845)
!8848 = !DILocation(line: 2206, column: 3, scope: !8845)
!8849 = !DILocation(line: 2208, column: 7, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2208, column: 7)
!8851 = !DILocation(line: 2208, column: 11, scope: !8850)
!8852 = !DILocation(line: 2208, column: 7, scope: !8845)
!8853 = !DILocation(line: 2209, column: 4, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2208, column: 21)
!8855 = !DILocation(line: 2209, column: 8, scope: !8854)
!8856 = !DILocation(line: 2209, column: 13, scope: !8854)
!8857 = !DILocation(line: 2210, column: 3, scope: !8854)
!8858 = !DILocation(line: 2212, column: 16, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2211, column: 8)
!8860 = !DILocation(line: 2212, column: 4, scope: !8859)
!8861 = !DILocation(line: 2212, column: 8, scope: !8859)
!8862 = !DILocation(line: 2212, column: 13, scope: !8859)
!8863 = !DILocation(line: 2213, column: 8, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 2213, column: 8)
!8865 = !DILocation(line: 2213, column: 12, scope: !8864)
!8866 = !DILocation(line: 2213, column: 17, scope: !8864)
!8867 = !DILocation(line: 2213, column: 8, scope: !8859)
!8868 = !DILocation(line: 2213, column: 22, scope: !8864)
!8869 = !DILocation(line: 2213, column: 26, scope: !8864)
!8870 = !DILocation(line: 2213, column: 31, scope: !8864)
!8871 = !DILocation(line: 2216, column: 34, scope: !8845)
!8872 = !DILocation(line: 2216, column: 22, scope: !8845)
!8873 = !DILocation(line: 2216, column: 3, scope: !8845)
!8874 = !DILocation(line: 2217, column: 2, scope: !8845)
!8875 = !DILocation(line: 2219, column: 16, scope: !8714)
!8876 = !DILocation(line: 2219, column: 2, scope: !8714)
!8877 = !DILocation(line: 2219, column: 7, scope: !8714)
!8878 = !DILocation(line: 2219, column: 14, scope: !8714)
!8879 = !DILocation(line: 2220, column: 16, scope: !8714)
!8880 = !DILocation(line: 2220, column: 2, scope: !8714)
!8881 = !DILocation(line: 2220, column: 7, scope: !8714)
!8882 = !DILocation(line: 2220, column: 14, scope: !8714)
!8883 = !DILocation(line: 2221, column: 1, scope: !8714)
!8884 = distinct !DISubprogram(name: "scroll_exit", scope: !3, file: !3, line: 2223, type: !3278, scopeLine: 2224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8885 = !DILocalVariable(name: "C", arg: 1, scope: !8884, file: !3, line: 2223, type: !2783)
!8886 = !DILocation(line: 2223, column: 35, scope: !8884)
!8887 = !DILocalVariable(name: "op", arg: 2, scope: !8884, file: !3, line: 2223, type: !2785)
!8888 = !DILocation(line: 2223, column: 50, scope: !8884)
!8889 = !DILocalVariable(name: "st", scope: !8884, file: !3, line: 2225, type: !2804)
!8890 = !DILocation(line: 2225, column: 13, scope: !8884)
!8891 = !DILocation(line: 2225, column: 36, scope: !8884)
!8892 = !DILocation(line: 2225, column: 18, scope: !8884)
!8893 = !DILocation(line: 2227, column: 2, scope: !8884)
!8894 = !DILocation(line: 2227, column: 6, scope: !8884)
!8895 = !DILocation(line: 2227, column: 12, scope: !8884)
!8896 = !DILocation(line: 2228, column: 2, scope: !8884)
!8897 = !DILocation(line: 2228, column: 12, scope: !8884)
!8898 = !DILocation(line: 2228, column: 16, scope: !8884)
!8899 = !DILocation(line: 2229, column: 1, scope: !8884)
!8900 = distinct !DISubprogram(name: "BLI_rcti_cent_x", scope: !8901, file: !8901, line: 100, type: !8902, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8901 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8902 = !DISubroutineType(types: !8903)
!8903 = !{!1200, !8904}
!8904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 64)
!8905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2329)
!8906 = !DILocalVariable(name: "rct", arg: 1, scope: !8900, file: !8901, line: 100, type: !8904)
!8907 = !DILocation(line: 100, column: 53, scope: !8900)
!8908 = !DILocation(line: 100, column: 68, scope: !8900)
!8909 = !DILocation(line: 100, column: 73, scope: !8900)
!8910 = !DILocation(line: 100, column: 80, scope: !8900)
!8911 = !DILocation(line: 100, column: 85, scope: !8900)
!8912 = !DILocation(line: 100, column: 78, scope: !8900)
!8913 = !DILocation(line: 100, column: 91, scope: !8900)
!8914 = !DILocation(line: 100, column: 60, scope: !8900)
!8915 = distinct !DISubprogram(name: "BLI_rcti_cent_y", scope: !8901, file: !8901, line: 101, type: !8902, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8916 = !DILocalVariable(name: "rct", arg: 1, scope: !8915, file: !8901, line: 101, type: !8904)
!8917 = !DILocation(line: 101, column: 53, scope: !8915)
!8918 = !DILocation(line: 101, column: 68, scope: !8915)
!8919 = !DILocation(line: 101, column: 73, scope: !8915)
!8920 = !DILocation(line: 101, column: 80, scope: !8915)
!8921 = !DILocation(line: 101, column: 85, scope: !8915)
!8922 = !DILocation(line: 101, column: 78, scope: !8915)
!8923 = !DILocation(line: 101, column: 91, scope: !8915)
!8924 = !DILocation(line: 101, column: 60, scope: !8915)
!8925 = distinct !DISubprogram(name: "text_cursor_set_apply", scope: !3, file: !3, line: 2632, type: !8715, scopeLine: 2633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!8926 = !DILocalVariable(name: "C", arg: 1, scope: !8925, file: !3, line: 2632, type: !2783)
!8927 = !DILocation(line: 2632, column: 45, scope: !8925)
!8928 = !DILocalVariable(name: "op", arg: 2, scope: !8925, file: !3, line: 2632, type: !2785)
!8929 = !DILocation(line: 2632, column: 60, scope: !8925)
!8930 = !DILocalVariable(name: "event", arg: 3, scope: !8925, file: !3, line: 2632, type: !2787)
!8931 = !DILocation(line: 2632, column: 79, scope: !8925)
!8932 = !DILocalVariable(name: "st", scope: !8925, file: !3, line: 2634, type: !2804)
!8933 = !DILocation(line: 2634, column: 13, scope: !8925)
!8934 = !DILocation(line: 2634, column: 36, scope: !8925)
!8935 = !DILocation(line: 2634, column: 18, scope: !8925)
!8936 = !DILocalVariable(name: "ar", scope: !8925, file: !3, line: 2635, type: !3324)
!8937 = !DILocation(line: 2635, column: 11, scope: !8925)
!8938 = !DILocation(line: 2635, column: 30, scope: !8925)
!8939 = !DILocation(line: 2635, column: 16, scope: !8925)
!8940 = !DILocalVariable(name: "ssel", scope: !8925, file: !3, line: 2636, type: !5779)
!8941 = !DILocation(line: 2636, column: 16, scope: !8925)
!8942 = !DILocation(line: 2636, column: 23, scope: !8925)
!8943 = !DILocation(line: 2636, column: 27, scope: !8925)
!8944 = !DILocation(line: 2638, column: 6, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 2638, column: 6)
!8946 = !DILocation(line: 2638, column: 13, scope: !8945)
!8947 = !DILocation(line: 2638, column: 21, scope: !8945)
!8948 = !DILocation(line: 2638, column: 25, scope: !8945)
!8949 = !DILocation(line: 2638, column: 28, scope: !8945)
!8950 = !DILocation(line: 2638, column: 35, scope: !8945)
!8951 = !DILocation(line: 2638, column: 45, scope: !8945)
!8952 = !DILocation(line: 2638, column: 49, scope: !8945)
!8953 = !DILocation(line: 2638, column: 43, scope: !8945)
!8954 = !DILocation(line: 2638, column: 6, scope: !8925)
!8955 = !DILocalVariable(name: "d", scope: !8956, file: !3, line: 2639, type: !1200)
!8956 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 2638, column: 55)
!8957 = !DILocation(line: 2639, column: 7, scope: !8956)
!8958 = !DILocation(line: 2639, column: 12, scope: !8956)
!8959 = !DILocation(line: 2639, column: 18, scope: !8956)
!8960 = !DILocation(line: 2639, column: 27, scope: !8956)
!8961 = !DILocation(line: 2639, column: 34, scope: !8956)
!8962 = !DILocation(line: 2639, column: 25, scope: !8956)
!8963 = !DILocation(line: 2639, column: 11, scope: !8956)
!8964 = !DILocation(line: 2639, column: 45, scope: !8956)
!8965 = !DILocation(line: 2639, column: 49, scope: !8956)
!8966 = !DILocation(line: 2639, column: 43, scope: !8956)
!8967 = !DILocation(line: 2640, column: 7, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 2640, column: 7)
!8969 = !DILocation(line: 2640, column: 7, scope: !8956)
!8970 = !DILocation(line: 2640, column: 26, scope: !8968)
!8971 = !DILocation(line: 2640, column: 30, scope: !8968)
!8972 = !DILocation(line: 2640, column: 34, scope: !8968)
!8973 = !DILocation(line: 2640, column: 10, scope: !8968)
!8974 = !DILocation(line: 2642, column: 26, scope: !8956)
!8975 = !DILocation(line: 2642, column: 30, scope: !8956)
!8976 = !DILocation(line: 2642, column: 34, scope: !8956)
!8977 = !DILocation(line: 2642, column: 41, scope: !8956)
!8978 = !DILocation(line: 2642, column: 50, scope: !8956)
!8979 = !DILocation(line: 2642, column: 57, scope: !8956)
!8980 = !DILocation(line: 2642, column: 65, scope: !8956)
!8981 = !DILocation(line: 2642, column: 75, scope: !8956)
!8982 = !DILocation(line: 2642, column: 79, scope: !8956)
!8983 = !DILocation(line: 2642, column: 3, scope: !8956)
!8984 = !DILocation(line: 2644, column: 28, scope: !8956)
!8985 = !DILocation(line: 2644, column: 3, scope: !8956)
!8986 = !DILocation(line: 2645, column: 25, scope: !8956)
!8987 = !DILocation(line: 2645, column: 49, scope: !8956)
!8988 = !DILocation(line: 2645, column: 53, scope: !8956)
!8989 = !DILocation(line: 2645, column: 3, scope: !8956)
!8990 = !DILocation(line: 2646, column: 2, scope: !8956)
!8991 = !DILocation(line: 2647, column: 12, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 2647, column: 11)
!8993 = !DILocation(line: 2647, column: 16, scope: !8992)
!8994 = !DILocation(line: 2647, column: 25, scope: !8992)
!8995 = !DILocation(line: 2647, column: 29, scope: !8992)
!8996 = !DILocation(line: 2647, column: 36, scope: !8992)
!8997 = !DILocation(line: 2647, column: 44, scope: !8992)
!8998 = !DILocation(line: 2647, column: 48, scope: !8992)
!8999 = !DILocation(line: 2647, column: 51, scope: !8992)
!9000 = !DILocation(line: 2647, column: 58, scope: !8992)
!9001 = !DILocation(line: 2647, column: 68, scope: !8992)
!9002 = !DILocation(line: 2647, column: 72, scope: !8992)
!9003 = !DILocation(line: 2647, column: 66, scope: !8992)
!9004 = !DILocation(line: 2647, column: 11, scope: !8945)
!9005 = !DILocation(line: 2648, column: 7, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 2648, column: 7)
!9007 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 2647, column: 79)
!9008 = !DILocation(line: 2648, column: 14, scope: !9006)
!9009 = !DILocation(line: 2648, column: 24, scope: !9006)
!9010 = !DILocation(line: 2648, column: 28, scope: !9006)
!9011 = !DILocation(line: 2648, column: 22, scope: !9006)
!9012 = !DILocation(line: 2648, column: 7, scope: !9007)
!9013 = !DILocation(line: 2648, column: 34, scope: !9006)
!9014 = !DILocation(line: 2648, column: 38, scope: !9006)
!9015 = !DILocation(line: 2648, column: 42, scope: !9006)
!9016 = !DILocation(line: 2649, column: 12, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 2649, column: 12)
!9018 = !DILocation(line: 2649, column: 19, scope: !9017)
!9019 = !DILocation(line: 2649, column: 27, scope: !9017)
!9020 = !DILocation(line: 2649, column: 31, scope: !9017)
!9021 = !DILocation(line: 2649, column: 34, scope: !9017)
!9022 = !DILocation(line: 2649, column: 38, scope: !9017)
!9023 = !DILocation(line: 2649, column: 43, scope: !9017)
!9024 = !DILocation(line: 2649, column: 12, scope: !9006)
!9025 = !DILocation(line: 2649, column: 48, scope: !9017)
!9026 = !DILocation(line: 2649, column: 52, scope: !9017)
!9027 = !DILocation(line: 2649, column: 56, scope: !9017)
!9028 = !DILocation(line: 2651, column: 26, scope: !9007)
!9029 = !DILocation(line: 2651, column: 30, scope: !9007)
!9030 = !DILocation(line: 2651, column: 34, scope: !9007)
!9031 = !DILocation(line: 2651, column: 41, scope: !9007)
!9032 = !DILocation(line: 2651, column: 50, scope: !9007)
!9033 = !DILocation(line: 2651, column: 57, scope: !9007)
!9034 = !DILocation(line: 2651, column: 3, scope: !9007)
!9035 = !DILocation(line: 2653, column: 28, scope: !9007)
!9036 = !DILocation(line: 2653, column: 3, scope: !9007)
!9037 = !DILocation(line: 2654, column: 25, scope: !9007)
!9038 = !DILocation(line: 2654, column: 49, scope: !9007)
!9039 = !DILocation(line: 2654, column: 53, scope: !9007)
!9040 = !DILocation(line: 2654, column: 3, scope: !9007)
!9041 = !DILocation(line: 2656, column: 2, scope: !9007)
!9042 = !DILocation(line: 2658, column: 26, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 2657, column: 7)
!9044 = !DILocation(line: 2658, column: 30, scope: !9043)
!9045 = !DILocation(line: 2658, column: 34, scope: !9043)
!9046 = !DILocation(line: 2658, column: 41, scope: !9043)
!9047 = !DILocation(line: 2658, column: 50, scope: !9043)
!9048 = !DILocation(line: 2658, column: 57, scope: !9043)
!9049 = !DILocation(line: 2658, column: 3, scope: !9043)
!9050 = !DILocation(line: 2660, column: 28, scope: !9043)
!9051 = !DILocation(line: 2660, column: 3, scope: !9043)
!9052 = !DILocation(line: 2661, column: 25, scope: !9043)
!9053 = !DILocation(line: 2661, column: 49, scope: !9043)
!9054 = !DILocation(line: 2661, column: 53, scope: !9043)
!9055 = !DILocation(line: 2661, column: 3, scope: !9043)
!9056 = !DILocation(line: 2663, column: 18, scope: !9043)
!9057 = !DILocation(line: 2663, column: 25, scope: !9043)
!9058 = !DILocation(line: 2663, column: 3, scope: !9043)
!9059 = !DILocation(line: 2663, column: 9, scope: !9043)
!9060 = !DILocation(line: 2663, column: 16, scope: !9043)
!9061 = !DILocation(line: 2664, column: 18, scope: !9043)
!9062 = !DILocation(line: 2664, column: 25, scope: !9043)
!9063 = !DILocation(line: 2664, column: 3, scope: !9043)
!9064 = !DILocation(line: 2664, column: 9, scope: !9043)
!9065 = !DILocation(line: 2664, column: 16, scope: !9043)
!9066 = !DILocation(line: 2666, column: 1, scope: !8925)
!9067 = distinct !DISubprogram(name: "text_cursor_set_to_pos", scope: !3, file: !3, line: 2592, type: !9068, scopeLine: 2593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{null, !2804, !3324, !1200, !1200, !3143}
!9070 = !DILocalVariable(name: "st", arg: 1, scope: !9067, file: !3, line: 2592, type: !2804)
!9071 = !DILocation(line: 2592, column: 47, scope: !9067)
!9072 = !DILocalVariable(name: "ar", arg: 2, scope: !9067, file: !3, line: 2592, type: !3324)
!9073 = !DILocation(line: 2592, column: 60, scope: !9067)
!9074 = !DILocalVariable(name: "x", arg: 3, scope: !9067, file: !3, line: 2592, type: !1200)
!9075 = !DILocation(line: 2592, column: 68, scope: !9067)
!9076 = !DILocalVariable(name: "y", arg: 4, scope: !9067, file: !3, line: 2592, type: !1200)
!9077 = !DILocation(line: 2592, column: 75, scope: !9067)
!9078 = !DILocalVariable(name: "sel", arg: 5, scope: !9067, file: !3, line: 2592, type: !3143)
!9079 = !DILocation(line: 2592, column: 89, scope: !9067)
!9080 = !DILocalVariable(name: "text", scope: !9067, file: !3, line: 2594, type: !2858)
!9081 = !DILocation(line: 2594, column: 8, scope: !9067)
!9082 = !DILocation(line: 2594, column: 15, scope: !9067)
!9083 = !DILocation(line: 2594, column: 19, scope: !9067)
!9084 = !DILocation(line: 2595, column: 30, scope: !9067)
!9085 = !DILocation(line: 2595, column: 2, scope: !9067)
!9086 = !DILocation(line: 2596, column: 7, scope: !9067)
!9087 = !DILocation(line: 2596, column: 11, scope: !9067)
!9088 = !DILocation(line: 2596, column: 16, scope: !9067)
!9089 = !DILocation(line: 2596, column: 22, scope: !9067)
!9090 = !DILocation(line: 2596, column: 20, scope: !9067)
!9091 = !DILocation(line: 2596, column: 28, scope: !9067)
!9092 = !DILocation(line: 2596, column: 32, scope: !9067)
!9093 = !DILocation(line: 2596, column: 46, scope: !9067)
!9094 = !DILocation(line: 2596, column: 44, scope: !9067)
!9095 = !DILocation(line: 2596, column: 25, scope: !9067)
!9096 = !DILocation(line: 2596, column: 4, scope: !9067)
!9097 = !DILocation(line: 2598, column: 6, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 2598, column: 6)
!9099 = !DILocation(line: 2598, column: 10, scope: !9098)
!9100 = !DILocation(line: 2598, column: 6, scope: !9067)
!9101 = !DILocation(line: 2598, column: 28, scope: !9098)
!9102 = !DILocation(line: 2598, column: 41, scope: !9098)
!9103 = !DILocation(line: 2598, column: 39, scope: !9098)
!9104 = !DILocation(line: 2598, column: 25, scope: !9098)
!9105 = !DILocation(line: 2598, column: 23, scope: !9098)
!9106 = !DILocation(line: 2599, column: 12, scope: !9098)
!9107 = !DILocation(line: 2599, column: 9, scope: !9098)
!9108 = !DILocation(line: 2601, column: 6, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 2601, column: 6)
!9110 = !DILocation(line: 2601, column: 8, scope: !9109)
!9111 = !DILocation(line: 2601, column: 6, scope: !9067)
!9112 = !DILocation(line: 2601, column: 15, scope: !9109)
!9113 = !DILocation(line: 2601, column: 13, scope: !9109)
!9114 = !DILocation(line: 2602, column: 29, scope: !9067)
!9115 = !DILocation(line: 2602, column: 33, scope: !9067)
!9116 = !DILocation(line: 2602, column: 6, scope: !9067)
!9117 = !DILocation(line: 2602, column: 38, scope: !9067)
!9118 = !DILocation(line: 2602, column: 42, scope: !9067)
!9119 = !DILocation(line: 2602, column: 36, scope: !9067)
!9120 = !DILocation(line: 2602, column: 4, scope: !9067)
!9121 = !DILocation(line: 2604, column: 6, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 2604, column: 6)
!9123 = !DILocation(line: 2604, column: 10, scope: !9122)
!9124 = !DILocation(line: 2604, column: 6, scope: !9067)
!9125 = !DILocation(line: 2605, column: 34, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 2604, column: 20)
!9127 = !DILocation(line: 2605, column: 38, scope: !9126)
!9128 = !DILocation(line: 2605, column: 42, scope: !9126)
!9129 = !DILocation(line: 2605, column: 45, scope: !9126)
!9130 = !DILocation(line: 2605, column: 48, scope: !9126)
!9131 = !DILocation(line: 2605, column: 3, scope: !9126)
!9132 = !DILocation(line: 2606, column: 2, scope: !9126)
!9133 = !DILocalVariable(name: "linep", scope: !9134, file: !3, line: 2608, type: !7434)
!9134 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 2607, column: 7)
!9135 = !DILocation(line: 2608, column: 14, scope: !9134)
!9136 = !DILocalVariable(name: "charp", scope: !9134, file: !3, line: 2609, type: !4405)
!9137 = !DILocation(line: 2609, column: 8, scope: !9134)
!9138 = !DILocalVariable(name: "w", scope: !9134, file: !3, line: 2610, type: !1200)
!9139 = !DILocation(line: 2610, column: 7, scope: !9134)
!9140 = !DILocation(line: 2612, column: 7, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 2612, column: 7)
!9142 = !DILocation(line: 2612, column: 7, scope: !9134)
!9143 = !DILocation(line: 2612, column: 23, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 2612, column: 12)
!9145 = !DILocation(line: 2612, column: 29, scope: !9144)
!9146 = !DILocation(line: 2612, column: 20, scope: !9144)
!9147 = !DILocation(line: 2612, column: 44, scope: !9144)
!9148 = !DILocation(line: 2612, column: 50, scope: !9144)
!9149 = !DILocation(line: 2612, column: 41, scope: !9144)
!9150 = !DILocation(line: 2612, column: 56, scope: !9144)
!9151 = !DILocation(line: 2613, column: 23, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 2613, column: 12)
!9153 = !DILocation(line: 2613, column: 29, scope: !9152)
!9154 = !DILocation(line: 2613, column: 20, scope: !9152)
!9155 = !DILocation(line: 2613, column: 44, scope: !9152)
!9156 = !DILocation(line: 2613, column: 50, scope: !9152)
!9157 = !DILocation(line: 2613, column: 41, scope: !9152)
!9158 = !DILocation(line: 2615, column: 21, scope: !9134)
!9159 = !DILocation(line: 2615, column: 27, scope: !9134)
!9160 = !DILocation(line: 2615, column: 33, scope: !9134)
!9161 = !DILocation(line: 2615, column: 41, scope: !9134)
!9162 = !DILocation(line: 2615, column: 40, scope: !9134)
!9163 = !DILocation(line: 2615, column: 8, scope: !9134)
!9164 = !DILocation(line: 2615, column: 50, scope: !9134)
!9165 = !DILocation(line: 2615, column: 54, scope: !9134)
!9166 = !DILocation(line: 2615, column: 48, scope: !9134)
!9167 = !DILocation(line: 2615, column: 5, scope: !9134)
!9168 = !DILocation(line: 2617, column: 7, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 2617, column: 7)
!9170 = !DILocation(line: 2617, column: 9, scope: !9169)
!9171 = !DILocation(line: 2617, column: 7, scope: !9134)
!9172 = !DILocation(line: 2618, column: 4, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2617, column: 14)
!9174 = !DILocation(line: 2618, column: 12, scope: !9173)
!9175 = !DILocation(line: 2618, column: 15, scope: !9173)
!9176 = !DILocation(line: 2618, column: 27, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2618, column: 25)
!9178 = !DILocation(line: 2618, column: 26, scope: !9177)
!9179 = !DILocation(line: 2618, column: 35, scope: !9177)
!9180 = !DILocation(line: 2618, column: 25, scope: !9177)
!9181 = !DILocation(line: 2618, column: 25, scope: !9173)
!9182 = !DILocation(line: 2618, column: 52, scope: !9177)
!9183 = !DILocation(line: 2618, column: 51, scope: !9177)
!9184 = !DILocation(line: 2618, column: 60, scope: !9177)
!9185 = !DILocation(line: 2618, column: 42, scope: !9177)
!9186 = !DILocation(line: 2618, column: 48, scope: !9177)
!9187 = !DILocation(line: 2618, column: 41, scope: !9177)
!9188 = distinct !{!9188, !9172, !9189}
!9189 = !DILocation(line: 2618, column: 60, scope: !9173)
!9190 = !DILocation(line: 2619, column: 3, scope: !9173)
!9191 = !DILocation(line: 2620, column: 12, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2620, column: 12)
!9193 = !DILocation(line: 2620, column: 14, scope: !9192)
!9194 = !DILocation(line: 2620, column: 12, scope: !9169)
!9195 = !DILocation(line: 2621, column: 4, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 2620, column: 19)
!9197 = !DILocation(line: 2621, column: 12, scope: !9196)
!9198 = !DILocation(line: 2621, column: 15, scope: !9196)
!9199 = !DILocation(line: 2621, column: 27, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9196, file: !3, line: 2621, column: 25)
!9201 = !DILocation(line: 2621, column: 26, scope: !9200)
!9202 = !DILocation(line: 2621, column: 35, scope: !9200)
!9203 = !DILocation(line: 2621, column: 25, scope: !9200)
!9204 = !DILocation(line: 2621, column: 25, scope: !9196)
!9205 = !DILocation(line: 2621, column: 52, scope: !9200)
!9206 = !DILocation(line: 2621, column: 51, scope: !9200)
!9207 = !DILocation(line: 2621, column: 60, scope: !9200)
!9208 = !DILocation(line: 2621, column: 42, scope: !9200)
!9209 = !DILocation(line: 2621, column: 48, scope: !9200)
!9210 = !DILocation(line: 2621, column: 41, scope: !9200)
!9211 = distinct !{!9211, !9195, !9212}
!9212 = !DILocation(line: 2621, column: 60, scope: !9196)
!9213 = !DILocation(line: 2622, column: 3, scope: !9196)
!9214 = !DILocation(line: 2625, column: 21, scope: !9134)
!9215 = !DILocation(line: 2625, column: 27, scope: !9134)
!9216 = !DILocation(line: 2625, column: 26, scope: !9134)
!9217 = !DILocation(line: 2625, column: 35, scope: !9134)
!9218 = !DILocation(line: 2625, column: 7, scope: !9134)
!9219 = !DILocation(line: 2625, column: 5, scope: !9134)
!9220 = !DILocation(line: 2626, column: 7, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 2626, column: 7)
!9222 = !DILocation(line: 2626, column: 11, scope: !9221)
!9223 = !DILocation(line: 2626, column: 9, scope: !9221)
!9224 = !DILocation(line: 2626, column: 7, scope: !9134)
!9225 = !DILocation(line: 2626, column: 48, scope: !9221)
!9226 = !DILocation(line: 2626, column: 54, scope: !9221)
!9227 = !DILocation(line: 2626, column: 53, scope: !9221)
!9228 = !DILocation(line: 2626, column: 62, scope: !9221)
!9229 = !DILocation(line: 2626, column: 68, scope: !9221)
!9230 = !DILocation(line: 2626, column: 23, scope: !9221)
!9231 = !DILocation(line: 2626, column: 15, scope: !9221)
!9232 = !DILocation(line: 2626, column: 21, scope: !9221)
!9233 = !DILocation(line: 2626, column: 14, scope: !9221)
!9234 = !DILocation(line: 2627, column: 19, scope: !9221)
!9235 = !DILocation(line: 2627, column: 18, scope: !9221)
!9236 = !DILocation(line: 2627, column: 27, scope: !9221)
!9237 = !DILocation(line: 2627, column: 9, scope: !9221)
!9238 = !DILocation(line: 2627, column: 15, scope: !9221)
!9239 = !DILocation(line: 2629, column: 7, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 2629, column: 6)
!9241 = !DILocation(line: 2629, column: 6, scope: !9067)
!9242 = !DILocation(line: 2629, column: 24, scope: !9240)
!9243 = !DILocation(line: 2629, column: 12, scope: !9240)
!9244 = !DILocation(line: 2630, column: 1, scope: !9067)
!9245 = distinct !DISubprogram(name: "text_pixel_x_to_column", scope: !3, file: !3, line: 77, type: !9246, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9246 = !DISubroutineType(types: !9247)
!9247 = !{!1200, !2804, !3399}
!9248 = !DILocalVariable(name: "st", arg: 1, scope: !9245, file: !3, line: 77, type: !2804)
!9249 = !DILocation(line: 77, column: 50, scope: !9245)
!9250 = !DILocalVariable(name: "x", arg: 2, scope: !9245, file: !3, line: 77, type: !3399)
!9251 = !DILocation(line: 77, column: 64, scope: !9245)
!9252 = !DILocation(line: 80, column: 10, scope: !9245)
!9253 = !DILocation(line: 80, column: 15, scope: !9245)
!9254 = !DILocation(line: 80, column: 19, scope: !9245)
!9255 = !DILocation(line: 80, column: 26, scope: !9245)
!9256 = !DILocation(line: 80, column: 12, scope: !9245)
!9257 = !DILocation(line: 80, column: 34, scope: !9245)
!9258 = !DILocation(line: 80, column: 38, scope: !9245)
!9259 = !DILocation(line: 80, column: 32, scope: !9245)
!9260 = !DILocation(line: 80, column: 2, scope: !9245)
!9261 = distinct !DISubprogram(name: "text_cursor_set_to_pos_wrapped", scope: !3, file: !3, line: 2475, type: !9068, scopeLine: 2476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9262 = !DILocalVariable(name: "st", arg: 1, scope: !9261, file: !3, line: 2475, type: !2804)
!9263 = !DILocation(line: 2475, column: 55, scope: !9261)
!9264 = !DILocalVariable(name: "ar", arg: 2, scope: !9261, file: !3, line: 2475, type: !3324)
!9265 = !DILocation(line: 2475, column: 68, scope: !9261)
!9266 = !DILocalVariable(name: "x", arg: 3, scope: !9261, file: !3, line: 2475, type: !1200)
!9267 = !DILocation(line: 2475, column: 76, scope: !9261)
!9268 = !DILocalVariable(name: "y", arg: 4, scope: !9261, file: !3, line: 2475, type: !1200)
!9269 = !DILocation(line: 2475, column: 83, scope: !9261)
!9270 = !DILocalVariable(name: "sel", arg: 5, scope: !9261, file: !3, line: 2475, type: !3143)
!9271 = !DILocation(line: 2475, column: 97, scope: !9261)
!9272 = !DILocalVariable(name: "text", scope: !9261, file: !3, line: 2477, type: !2858)
!9273 = !DILocation(line: 2477, column: 8, scope: !9261)
!9274 = !DILocation(line: 2477, column: 15, scope: !9261)
!9275 = !DILocation(line: 2477, column: 19, scope: !9261)
!9276 = !DILocalVariable(name: "max", scope: !9261, file: !3, line: 2478, type: !1200)
!9277 = !DILocation(line: 2478, column: 6, scope: !9261)
!9278 = !DILocation(line: 2478, column: 23, scope: !9261)
!9279 = !DILocation(line: 2478, column: 27, scope: !9261)
!9280 = !DILocation(line: 2478, column: 12, scope: !9261)
!9281 = !DILocalVariable(name: "charp", scope: !9261, file: !3, line: 2479, type: !1200)
!9282 = !DILocation(line: 2479, column: 6, scope: !9261)
!9283 = !DILocalVariable(name: "loop", scope: !9261, file: !3, line: 2480, type: !1200)
!9284 = !DILocation(line: 2480, column: 6, scope: !9261)
!9285 = !DILocalVariable(name: "found", scope: !9261, file: !3, line: 2480, type: !1200)
!9286 = !DILocation(line: 2480, column: 16, scope: !9261)
!9287 = !DILocalVariable(name: "ch", scope: !9261, file: !3, line: 2481, type: !1215)
!9288 = !DILocation(line: 2481, column: 7, scope: !9261)
!9289 = !DILocalVariable(name: "linep", scope: !9261, file: !3, line: 2484, type: !2398)
!9290 = !DILocation(line: 2484, column: 12, scope: !9261)
!9291 = !DILocation(line: 2484, column: 43, scope: !9261)
!9292 = !DILocation(line: 2484, column: 47, scope: !9261)
!9293 = !DILocation(line: 2484, column: 20, scope: !9261)
!9294 = !DILocation(line: 2486, column: 2, scope: !9261)
!9295 = !DILocation(line: 2486, column: 9, scope: !9261)
!9296 = !DILocation(line: 2486, column: 14, scope: !9261)
!9297 = !DILocation(line: 2486, column: 17, scope: !9261)
!9298 = !DILocation(line: 0, scope: !9261)
!9299 = !DILocalVariable(name: "i", scope: !9300, file: !3, line: 2487, type: !1200)
!9300 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 2486, column: 24)
!9301 = !DILocation(line: 2487, column: 7, scope: !9300)
!9302 = !DILocalVariable(name: "start", scope: !9300, file: !3, line: 2487, type: !1200)
!9303 = !DILocation(line: 2487, column: 14, scope: !9300)
!9304 = !DILocalVariable(name: "end", scope: !9300, file: !3, line: 2487, type: !1200)
!9305 = !DILocation(line: 2487, column: 25, scope: !9300)
!9306 = !DILocation(line: 2487, column: 31, scope: !9300)
!9307 = !DILocalVariable(name: "j", scope: !9300, file: !3, line: 2488, type: !1200)
!9308 = !DILocation(line: 2488, column: 7, scope: !9300)
!9309 = !DILocalVariable(name: "curs", scope: !9300, file: !3, line: 2488, type: !1200)
!9310 = !DILocation(line: 2488, column: 14, scope: !9300)
!9311 = !DILocalVariable(name: "endj", scope: !9300, file: !3, line: 2488, type: !1200)
!9312 = !DILocation(line: 2488, column: 24, scope: !9300)
!9313 = !DILocalVariable(name: "chop", scope: !9300, file: !3, line: 2489, type: !1200)
!9314 = !DILocation(line: 2489, column: 7, scope: !9300)
!9315 = !DILocation(line: 2491, column: 3, scope: !9300)
!9316 = !DILocation(line: 2491, column: 10, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 2491, column: 3)
!9318 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 2491, column: 3)
!9319 = !DILocation(line: 2491, column: 3, scope: !9318)
!9320 = !DILocalVariable(name: "chars", scope: !9321, file: !3, line: 2492, type: !1200)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2491, column: 62)
!9322 = !DILocation(line: 2492, column: 8, scope: !9321)
!9323 = !DILocalVariable(name: "columns", scope: !9321, file: !3, line: 2493, type: !1200)
!9324 = !DILocation(line: 2493, column: 8, scope: !9321)
!9325 = !DILocation(line: 2493, column: 47, scope: !9321)
!9326 = !DILocation(line: 2493, column: 54, scope: !9321)
!9327 = !DILocation(line: 2493, column: 61, scope: !9321)
!9328 = !DILocation(line: 2493, column: 59, scope: !9321)
!9329 = !DILocation(line: 2493, column: 18, scope: !9321)
!9330 = !DILocation(line: 2496, column: 9, scope: !9321)
!9331 = !DILocation(line: 2496, column: 16, scope: !9321)
!9332 = !DILocation(line: 2496, column: 21, scope: !9321)
!9333 = !DILocation(line: 2496, column: 7, scope: !9321)
!9334 = !DILocation(line: 2497, column: 8, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 2497, column: 8)
!9336 = !DILocation(line: 2497, column: 11, scope: !9335)
!9337 = !DILocation(line: 2497, column: 8, scope: !9321)
!9338 = !DILocation(line: 2498, column: 13, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 2497, column: 20)
!9340 = !DILocation(line: 2498, column: 17, scope: !9339)
!9341 = !DILocation(line: 2498, column: 29, scope: !9339)
!9342 = !DILocation(line: 2498, column: 33, scope: !9339)
!9343 = !DILocation(line: 2498, column: 37, scope: !9339)
!9344 = !DILocation(line: 2498, column: 31, scope: !9339)
!9345 = !DILocation(line: 2498, column: 27, scope: !9339)
!9346 = !DILocation(line: 2498, column: 11, scope: !9339)
!9347 = !DILocation(line: 2499, column: 8, scope: !9339)
!9348 = !DILocation(line: 2500, column: 4, scope: !9339)
!9349 = !DILocation(line: 2502, column: 11, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 2501, column: 9)
!9351 = !DILocation(line: 2505, column: 4, scope: !9321)
!9352 = !DILocation(line: 2505, column: 16, scope: !9321)
!9353 = !DILocation(line: 2507, column: 9, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 2507, column: 9)
!9355 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 2505, column: 20)
!9356 = !DILocation(line: 2507, column: 11, scope: !9354)
!9357 = !DILocation(line: 2507, column: 9, scope: !9355)
!9358 = !DILocation(line: 2508, column: 14, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 2507, column: 16)
!9360 = !DILocation(line: 2508, column: 12, scope: !9359)
!9361 = !DILocation(line: 2509, column: 11, scope: !9359)
!9362 = !DILocation(line: 2510, column: 6, scope: !9359)
!9363 = !DILocation(line: 2513, column: 14, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 2513, column: 14)
!9365 = !DILocation(line: 2513, column: 16, scope: !9364)
!9366 = !DILocation(line: 2513, column: 21, scope: !9364)
!9367 = !DILocation(line: 2513, column: 24, scope: !9364)
!9368 = !DILocation(line: 2513, column: 28, scope: !9364)
!9369 = !DILocation(line: 2513, column: 26, scope: !9364)
!9370 = !DILocation(line: 2513, column: 37, scope: !9364)
!9371 = !DILocation(line: 2513, column: 34, scope: !9364)
!9372 = !DILocation(line: 2513, column: 39, scope: !9364)
!9373 = !DILocation(line: 2513, column: 42, scope: !9364)
!9374 = !DILocation(line: 2513, column: 46, scope: !9364)
!9375 = !DILocation(line: 2513, column: 44, scope: !9364)
!9376 = !DILocation(line: 2513, column: 56, scope: !9364)
!9377 = !DILocation(line: 2513, column: 54, scope: !9364)
!9378 = !DILocation(line: 2513, column: 64, scope: !9364)
!9379 = !DILocation(line: 2513, column: 62, scope: !9364)
!9380 = !DILocation(line: 2513, column: 14, scope: !9354)
!9381 = !DILocation(line: 2516, column: 21, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2513, column: 67)
!9383 = !DILocation(line: 2516, column: 19, scope: !9382)
!9384 = !DILocation(line: 2516, column: 12, scope: !9382)
!9385 = !DILocation(line: 2517, column: 12, scope: !9382)
!9386 = !DILocation(line: 2519, column: 5, scope: !9382)
!9387 = !DILocation(line: 2520, column: 14, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2520, column: 14)
!9389 = !DILocation(line: 2520, column: 18, scope: !9388)
!9390 = !DILocation(line: 2520, column: 16, scope: !9388)
!9391 = !DILocation(line: 2520, column: 25, scope: !9388)
!9392 = !DILocation(line: 2520, column: 22, scope: !9388)
!9393 = !DILocation(line: 2520, column: 27, scope: !9388)
!9394 = !DILocation(line: 2520, column: 30, scope: !9388)
!9395 = !DILocation(line: 2520, column: 34, scope: !9388)
!9396 = !DILocation(line: 2520, column: 32, scope: !9388)
!9397 = !DILocation(line: 2520, column: 44, scope: !9388)
!9398 = !DILocation(line: 2520, column: 42, scope: !9388)
!9399 = !DILocation(line: 2520, column: 50, scope: !9388)
!9400 = !DILocation(line: 2520, column: 48, scope: !9388)
!9401 = !DILocation(line: 2520, column: 14, scope: !9364)
!9402 = !DILocation(line: 2521, column: 13, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 2520, column: 53)
!9404 = !DILocation(line: 2521, column: 11, scope: !9403)
!9405 = !DILocation(line: 2522, column: 5, scope: !9403)
!9406 = !DILocation(line: 2523, column: 9, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 2523, column: 9)
!9408 = !DILocation(line: 2523, column: 13, scope: !9407)
!9409 = !DILocation(line: 2523, column: 11, scope: !9407)
!9410 = !DILocation(line: 2523, column: 23, scope: !9407)
!9411 = !DILocation(line: 2523, column: 21, scope: !9407)
!9412 = !DILocation(line: 2523, column: 31, scope: !9407)
!9413 = !DILocation(line: 2523, column: 29, scope: !9407)
!9414 = !DILocation(line: 2523, column: 9, scope: !9355)
!9415 = !DILocation(line: 2524, column: 12, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 2523, column: 36)
!9417 = !DILocation(line: 2524, column: 10, scope: !9416)
!9418 = !DILocation(line: 2526, column: 10, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 2526, column: 10)
!9420 = !DILocation(line: 2526, column: 10, scope: !9416)
!9421 = !DILocation(line: 2529, column: 11, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2529, column: 11)
!9423 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 2526, column: 17)
!9424 = !DILocation(line: 2529, column: 19, scope: !9422)
!9425 = !DILocation(line: 2529, column: 17, scope: !9422)
!9426 = !DILocation(line: 2529, column: 24, scope: !9422)
!9427 = !DILocation(line: 2529, column: 28, scope: !9422)
!9428 = !DILocation(line: 2529, column: 33, scope: !9422)
!9429 = !DILocation(line: 2529, column: 36, scope: !9422)
!9430 = !DILocation(line: 2529, column: 39, scope: !9422)
!9431 = !DILocation(line: 2529, column: 11, scope: !9423)
!9432 = !DILocation(line: 2529, column: 56, scope: !9422)
!9433 = !DILocation(line: 2529, column: 54, scope: !9422)
!9434 = !DILocation(line: 2529, column: 48, scope: !9422)
!9435 = !DILocation(line: 2530, column: 12, scope: !9423)
!9436 = !DILocation(line: 2531, column: 7, scope: !9423)
!9437 = !DILocation(line: 2534, column: 10, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 2534, column: 10)
!9439 = !DILocation(line: 2534, column: 10, scope: !9416)
!9440 = !DILocation(line: 2534, column: 23, scope: !9438)
!9441 = !DILocation(line: 2534, column: 21, scope: !9438)
!9442 = !DILocation(line: 2534, column: 16, scope: !9438)
!9443 = !DILocation(line: 2535, column: 14, scope: !9416)
!9444 = !DILocation(line: 2535, column: 12, scope: !9416)
!9445 = !DILocation(line: 2536, column: 13, scope: !9416)
!9446 = !DILocation(line: 2536, column: 10, scope: !9416)
!9447 = !DILocation(line: 2538, column: 10, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 2538, column: 10)
!9449 = !DILocation(line: 2538, column: 14, scope: !9448)
!9450 = !DILocation(line: 2538, column: 21, scope: !9448)
!9451 = !DILocation(line: 2538, column: 12, scope: !9448)
!9452 = !DILocation(line: 2538, column: 10, scope: !9416)
!9453 = !DILocation(line: 2539, column: 8, scope: !9448)
!9454 = !DILocation(line: 2539, column: 7, scope: !9448)
!9455 = !DILocation(line: 2541, column: 11, scope: !9416)
!9456 = !DILocation(line: 2542, column: 10, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 2542, column: 10)
!9458 = !DILocation(line: 2542, column: 12, scope: !9457)
!9459 = !DILocation(line: 2542, column: 17, scope: !9457)
!9460 = !DILocation(line: 2542, column: 20, scope: !9457)
!9461 = !DILocation(line: 2542, column: 24, scope: !9457)
!9462 = !DILocation(line: 2542, column: 22, scope: !9457)
!9463 = !DILocation(line: 2542, column: 34, scope: !9457)
!9464 = !DILocation(line: 2542, column: 32, scope: !9457)
!9465 = !DILocation(line: 2542, column: 42, scope: !9457)
!9466 = !DILocation(line: 2542, column: 40, scope: !9457)
!9467 = !DILocation(line: 2542, column: 10, scope: !9416)
!9468 = !DILocation(line: 2543, column: 15, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 2542, column: 45)
!9470 = !DILocation(line: 2543, column: 13, scope: !9469)
!9471 = !DILocation(line: 2544, column: 12, scope: !9469)
!9472 = !DILocation(line: 2545, column: 7, scope: !9469)
!9473 = !DILocation(line: 2547, column: 5, scope: !9416)
!9474 = !DILocation(line: 2548, column: 14, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 2548, column: 14)
!9476 = !DILocation(line: 2548, column: 17, scope: !9475)
!9477 = !DILocation(line: 2548, column: 24, scope: !9475)
!9478 = !DILocation(line: 2548, column: 27, scope: !9475)
!9479 = !DILocation(line: 2548, column: 30, scope: !9475)
!9480 = !DILocation(line: 2548, column: 37, scope: !9475)
!9481 = !DILocation(line: 2548, column: 40, scope: !9475)
!9482 = !DILocation(line: 2548, column: 43, scope: !9475)
!9483 = !DILocation(line: 2548, column: 14, scope: !9407)
!9484 = !DILocation(line: 2549, column: 10, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 2549, column: 10)
!9486 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 2548, column: 52)
!9487 = !DILocation(line: 2549, column: 10, scope: !9486)
!9488 = !DILocation(line: 2550, column: 12, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 2549, column: 17)
!9490 = !DILocation(line: 2551, column: 7, scope: !9489)
!9491 = !DILocation(line: 2554, column: 10, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 2554, column: 10)
!9493 = !DILocation(line: 2554, column: 12, scope: !9492)
!9494 = !DILocation(line: 2554, column: 17, scope: !9492)
!9495 = !DILocation(line: 2554, column: 20, scope: !9492)
!9496 = !DILocation(line: 2554, column: 24, scope: !9492)
!9497 = !DILocation(line: 2554, column: 22, scope: !9492)
!9498 = !DILocation(line: 2554, column: 34, scope: !9492)
!9499 = !DILocation(line: 2554, column: 32, scope: !9492)
!9500 = !DILocation(line: 2554, column: 42, scope: !9492)
!9501 = !DILocation(line: 2554, column: 40, scope: !9492)
!9502 = !DILocation(line: 2554, column: 10, scope: !9486)
!9503 = !DILocation(line: 2555, column: 15, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 2554, column: 45)
!9505 = !DILocation(line: 2555, column: 13, scope: !9504)
!9506 = !DILocation(line: 2556, column: 12, scope: !9504)
!9507 = !DILocation(line: 2557, column: 7, scope: !9504)
!9508 = !DILocation(line: 2559, column: 12, scope: !9486)
!9509 = !DILocation(line: 2559, column: 14, scope: !9486)
!9510 = !DILocation(line: 2559, column: 10, scope: !9486)
!9511 = !DILocation(line: 2560, column: 13, scope: !9486)
!9512 = !DILocation(line: 2560, column: 11, scope: !9486)
!9513 = !DILocation(line: 2561, column: 11, scope: !9486)
!9514 = !DILocation(line: 2562, column: 5, scope: !9486)
!9515 = !DILocation(line: 2563, column: 10, scope: !9355)
!9516 = !DILocation(line: 2563, column: 7, scope: !9355)
!9517 = distinct !{!9517, !9351, !9518}
!9518 = !DILocation(line: 2564, column: 4, scope: !9321)
!9519 = !DILocation(line: 2566, column: 8, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 2566, column: 8)
!9521 = !DILocation(line: 2566, column: 11, scope: !9520)
!9522 = !DILocation(line: 2566, column: 8, scope: !9321)
!9523 = !DILocation(line: 2566, column: 20, scope: !9520)
!9524 = !DILocation(line: 2567, column: 3, scope: !9321)
!9525 = !DILocation(line: 2491, column: 44, scope: !9317)
!9526 = !DILocation(line: 2491, column: 51, scope: !9317)
!9527 = !DILocation(line: 2491, column: 58, scope: !9317)
!9528 = !DILocation(line: 2491, column: 56, scope: !9317)
!9529 = !DILocation(line: 2491, column: 21, scope: !9317)
!9530 = !DILocation(line: 2491, column: 18, scope: !9317)
!9531 = !DILocation(line: 2491, column: 3, scope: !9317)
!9532 = distinct !{!9532, !9319, !9533}
!9533 = !DILocation(line: 2567, column: 3, scope: !9318)
!9534 = !DILocation(line: 2569, column: 8, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 2569, column: 7)
!9536 = !DILocation(line: 2569, column: 13, scope: !9535)
!9537 = !DILocation(line: 2569, column: 16, scope: !9535)
!9538 = !DILocation(line: 2569, column: 7, scope: !9300)
!9539 = !DILocation(line: 2569, column: 23, scope: !9535)
!9540 = !DILocation(line: 2571, column: 8, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 2571, column: 7)
!9542 = !DILocation(line: 2571, column: 15, scope: !9541)
!9543 = !DILocation(line: 2571, column: 7, scope: !9300)
!9544 = !DILocation(line: 2572, column: 12, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 2571, column: 21)
!9546 = !DILocation(line: 2572, column: 19, scope: !9545)
!9547 = !DILocation(line: 2572, column: 10, scope: !9545)
!9548 = !DILocation(line: 2573, column: 4, scope: !9545)
!9549 = !DILocation(line: 2577, column: 7, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 2577, column: 7)
!9551 = !DILocation(line: 2577, column: 9, scope: !9550)
!9552 = !DILocation(line: 2577, column: 7, scope: !9300)
!9553 = !DILocation(line: 2578, column: 12, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 2577, column: 15)
!9555 = !DILocation(line: 2578, column: 19, scope: !9554)
!9556 = !DILocation(line: 2578, column: 10, scope: !9554)
!9557 = !DILocation(line: 2579, column: 4, scope: !9554)
!9558 = !DILocation(line: 2581, column: 11, scope: !9300)
!9559 = !DILocation(line: 2581, column: 18, scope: !9300)
!9560 = !DILocation(line: 2581, column: 9, scope: !9300)
!9561 = !DILocation(line: 2583, column: 4, scope: !9300)
!9562 = distinct !{!9562, !9294, !9563}
!9563 = !DILocation(line: 2584, column: 2, scope: !9261)
!9564 = !DILocation(line: 2586, column: 6, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 2586, column: 6)
!9566 = !DILocation(line: 2586, column: 12, scope: !9565)
!9567 = !DILocation(line: 2586, column: 15, scope: !9565)
!9568 = !DILocation(line: 2586, column: 21, scope: !9565)
!9569 = !DILocation(line: 2586, column: 6, scope: !9261)
!9570 = !DILocation(line: 2587, column: 7, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 2587, column: 7)
!9572 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 2586, column: 28)
!9573 = !DILocation(line: 2587, column: 7, scope: !9572)
!9574 = !DILocation(line: 2587, column: 27, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 2587, column: 12)
!9576 = !DILocation(line: 2587, column: 14, scope: !9575)
!9577 = !DILocation(line: 2587, column: 20, scope: !9575)
!9578 = !DILocation(line: 2587, column: 25, scope: !9575)
!9579 = !DILocation(line: 2587, column: 47, scope: !9575)
!9580 = !DILocation(line: 2587, column: 34, scope: !9575)
!9581 = !DILocation(line: 2587, column: 40, scope: !9575)
!9582 = !DILocation(line: 2587, column: 45, scope: !9575)
!9583 = !DILocation(line: 2587, column: 54, scope: !9575)
!9584 = !DILocation(line: 2588, column: 27, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 2588, column: 12)
!9586 = !DILocation(line: 2588, column: 14, scope: !9585)
!9587 = !DILocation(line: 2588, column: 20, scope: !9585)
!9588 = !DILocation(line: 2588, column: 25, scope: !9585)
!9589 = !DILocation(line: 2588, column: 47, scope: !9585)
!9590 = !DILocation(line: 2588, column: 34, scope: !9585)
!9591 = !DILocation(line: 2588, column: 40, scope: !9585)
!9592 = !DILocation(line: 2588, column: 45, scope: !9585)
!9593 = !DILocation(line: 2589, column: 2, scope: !9572)
!9594 = !DILocation(line: 2590, column: 1, scope: !9261)
!9595 = distinct !DISubprogram(name: "flatten_width", scope: !3, file: !3, line: 2420, type: !9596, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9596 = !DISubroutineType(types: !9597)
!9597 = !{!1200, !2804, !1213}
!9598 = !DILocalVariable(name: "st", arg: 1, scope: !9595, file: !3, line: 2420, type: !2804)
!9599 = !DILocation(line: 2420, column: 37, scope: !9595)
!9600 = !DILocalVariable(name: "str", arg: 2, scope: !9595, file: !3, line: 2420, type: !1213)
!9601 = !DILocation(line: 2420, column: 53, scope: !9595)
!9602 = !DILocalVariable(name: "i", scope: !9595, file: !3, line: 2422, type: !1200)
!9603 = !DILocation(line: 2422, column: 6, scope: !9595)
!9604 = !DILocalVariable(name: "total", scope: !9595, file: !3, line: 2422, type: !1200)
!9605 = !DILocation(line: 2422, column: 9, scope: !9595)
!9606 = !DILocation(line: 2424, column: 9, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 2424, column: 2)
!9608 = !DILocation(line: 2424, column: 7, scope: !9607)
!9609 = !DILocation(line: 2424, column: 14, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 2424, column: 2)
!9611 = !DILocation(line: 2424, column: 18, scope: !9610)
!9612 = !DILocation(line: 2424, column: 2, scope: !9607)
!9613 = !DILocation(line: 2425, column: 7, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 2425, column: 7)
!9615 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 2424, column: 60)
!9616 = !DILocation(line: 2425, column: 11, scope: !9614)
!9617 = !DILocation(line: 2425, column: 14, scope: !9614)
!9618 = !DILocation(line: 2425, column: 7, scope: !9615)
!9619 = !DILocation(line: 2426, column: 13, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2425, column: 23)
!9621 = !DILocation(line: 2426, column: 17, scope: !9620)
!9622 = !DILocation(line: 2426, column: 29, scope: !9620)
!9623 = !DILocation(line: 2426, column: 37, scope: !9620)
!9624 = !DILocation(line: 2426, column: 41, scope: !9620)
!9625 = !DILocation(line: 2426, column: 35, scope: !9620)
!9626 = !DILocation(line: 2426, column: 27, scope: !9620)
!9627 = !DILocation(line: 2426, column: 10, scope: !9620)
!9628 = !DILocation(line: 2427, column: 3, scope: !9620)
!9629 = !DILocation(line: 2429, column: 42, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2428, column: 8)
!9631 = !DILocation(line: 2429, column: 48, scope: !9630)
!9632 = !DILocation(line: 2429, column: 46, scope: !9630)
!9633 = !DILocation(line: 2429, column: 13, scope: !9630)
!9634 = !DILocation(line: 2429, column: 10, scope: !9630)
!9635 = !DILocation(line: 2431, column: 2, scope: !9615)
!9636 = !DILocation(line: 2424, column: 50, scope: !9610)
!9637 = !DILocation(line: 2424, column: 56, scope: !9610)
!9638 = !DILocation(line: 2424, column: 54, scope: !9610)
!9639 = !DILocation(line: 2424, column: 27, scope: !9610)
!9640 = !DILocation(line: 2424, column: 24, scope: !9610)
!9641 = !DILocation(line: 2424, column: 2, scope: !9610)
!9642 = distinct !{!9642, !9612, !9643}
!9643 = !DILocation(line: 2431, column: 2, scope: !9607)
!9644 = !DILocation(line: 2433, column: 9, scope: !9595)
!9645 = !DILocation(line: 2433, column: 2, scope: !9595)
!9646 = distinct !DISubprogram(name: "flatten_column_to_offset", scope: !3, file: !3, line: 2436, type: !9647, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{!1200, !2804, !1213, !1200}
!9649 = !DILocalVariable(name: "st", arg: 1, scope: !9646, file: !3, line: 2436, type: !2804)
!9650 = !DILocation(line: 2436, column: 48, scope: !9646)
!9651 = !DILocalVariable(name: "str", arg: 2, scope: !9646, file: !3, line: 2436, type: !1213)
!9652 = !DILocation(line: 2436, column: 64, scope: !9646)
!9653 = !DILocalVariable(name: "index", arg: 3, scope: !9646, file: !3, line: 2436, type: !1200)
!9654 = !DILocation(line: 2436, column: 73, scope: !9646)
!9655 = !DILocalVariable(name: "i", scope: !9646, file: !3, line: 2438, type: !1200)
!9656 = !DILocation(line: 2438, column: 6, scope: !9646)
!9657 = !DILocalVariable(name: "j", scope: !9646, file: !3, line: 2438, type: !1200)
!9658 = !DILocation(line: 2438, column: 13, scope: !9646)
!9659 = !DILocalVariable(name: "col", scope: !9646, file: !3, line: 2438, type: !1200)
!9660 = !DILocation(line: 2438, column: 20, scope: !9646)
!9661 = !DILocation(line: 2440, column: 2, scope: !9646)
!9662 = !DILocation(line: 2440, column: 11, scope: !9646)
!9663 = !DILocation(line: 2440, column: 17, scope: !9646)
!9664 = !DILocation(line: 2440, column: 15, scope: !9646)
!9665 = !DILocation(line: 2440, column: 9, scope: !9646)
!9666 = !DILocation(line: 2441, column: 7, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 2441, column: 7)
!9668 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 2440, column: 21)
!9669 = !DILocation(line: 2441, column: 11, scope: !9667)
!9670 = !DILocation(line: 2441, column: 14, scope: !9667)
!9671 = !DILocation(line: 2441, column: 7, scope: !9668)
!9672 = !DILocation(line: 2442, column: 10, scope: !9667)
!9673 = !DILocation(line: 2442, column: 14, scope: !9667)
!9674 = !DILocation(line: 2442, column: 26, scope: !9667)
!9675 = !DILocation(line: 2442, column: 30, scope: !9667)
!9676 = !DILocation(line: 2442, column: 34, scope: !9667)
!9677 = !DILocation(line: 2442, column: 28, scope: !9667)
!9678 = !DILocation(line: 2442, column: 24, scope: !9667)
!9679 = !DILocation(line: 2442, column: 8, scope: !9667)
!9680 = !DILocation(line: 2442, column: 4, scope: !9667)
!9681 = !DILocation(line: 2444, column: 39, scope: !9667)
!9682 = !DILocation(line: 2444, column: 45, scope: !9667)
!9683 = !DILocation(line: 2444, column: 43, scope: !9667)
!9684 = !DILocation(line: 2444, column: 10, scope: !9667)
!9685 = !DILocation(line: 2444, column: 8, scope: !9667)
!9686 = !DILocation(line: 2446, column: 7, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 2446, column: 7)
!9688 = !DILocation(line: 2446, column: 11, scope: !9687)
!9689 = !DILocation(line: 2446, column: 9, scope: !9687)
!9690 = !DILocation(line: 2446, column: 17, scope: !9687)
!9691 = !DILocation(line: 2446, column: 15, scope: !9687)
!9692 = !DILocation(line: 2446, column: 7, scope: !9668)
!9693 = !DILocation(line: 2447, column: 4, scope: !9687)
!9694 = !DILocation(line: 2449, column: 8, scope: !9668)
!9695 = !DILocation(line: 2449, column: 5, scope: !9668)
!9696 = !DILocation(line: 2450, column: 31, scope: !9668)
!9697 = !DILocation(line: 2450, column: 37, scope: !9668)
!9698 = !DILocation(line: 2450, column: 35, scope: !9668)
!9699 = !DILocation(line: 2450, column: 8, scope: !9668)
!9700 = !DILocation(line: 2450, column: 5, scope: !9668)
!9701 = distinct !{!9701, !9661, !9702}
!9702 = !DILocation(line: 2451, column: 2, scope: !9646)
!9703 = !DILocation(line: 2453, column: 9, scope: !9646)
!9704 = !DILocation(line: 2453, column: 2, scope: !9646)
!9705 = distinct !DISubprogram(name: "get_first_visible_line", scope: !3, file: !3, line: 2456, type: !9706, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!2398, !2804, !3324, !4405}
!9708 = !DILocalVariable(name: "st", arg: 1, scope: !9705, file: !3, line: 2456, type: !2804)
!9709 = !DILocation(line: 2456, column: 52, scope: !9705)
!9710 = !DILocalVariable(name: "ar", arg: 2, scope: !9705, file: !3, line: 2456, type: !3324)
!9711 = !DILocation(line: 2456, column: 65, scope: !9705)
!9712 = !DILocalVariable(name: "y", arg: 3, scope: !9705, file: !3, line: 2456, type: !4405)
!9713 = !DILocation(line: 2456, column: 74, scope: !9705)
!9714 = !DILocalVariable(name: "linep", scope: !9705, file: !3, line: 2458, type: !2398)
!9715 = !DILocation(line: 2458, column: 12, scope: !9705)
!9716 = !DILocation(line: 2458, column: 20, scope: !9705)
!9717 = !DILocation(line: 2458, column: 24, scope: !9705)
!9718 = !DILocation(line: 2458, column: 30, scope: !9705)
!9719 = !DILocation(line: 2458, column: 36, scope: !9705)
!9720 = !DILocalVariable(name: "i", scope: !9705, file: !3, line: 2459, type: !1200)
!9721 = !DILocation(line: 2459, column: 6, scope: !9705)
!9722 = !DILocation(line: 2460, column: 11, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 2460, column: 2)
!9724 = !DILocation(line: 2460, column: 15, scope: !9723)
!9725 = !DILocation(line: 2460, column: 9, scope: !9723)
!9726 = !DILocation(line: 2460, column: 7, scope: !9723)
!9727 = !DILocation(line: 2460, column: 20, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9723, file: !3, line: 2460, column: 2)
!9729 = !DILocation(line: 2460, column: 22, scope: !9728)
!9730 = !DILocation(line: 2460, column: 26, scope: !9728)
!9731 = !DILocation(line: 2460, column: 29, scope: !9728)
!9732 = !DILocation(line: 0, scope: !9728)
!9733 = !DILocation(line: 2460, column: 2, scope: !9723)
!9734 = !DILocalVariable(name: "lines", scope: !9735, file: !3, line: 2461, type: !1200)
!9735 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 2460, column: 38)
!9736 = !DILocation(line: 2461, column: 7, scope: !9735)
!9737 = !DILocation(line: 2461, column: 38, scope: !9735)
!9738 = !DILocation(line: 2461, column: 42, scope: !9735)
!9739 = !DILocation(line: 2461, column: 46, scope: !9735)
!9740 = !DILocation(line: 2461, column: 53, scope: !9735)
!9741 = !DILocation(line: 2461, column: 15, scope: !9735)
!9742 = !DILocation(line: 2463, column: 7, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 2463, column: 7)
!9744 = !DILocation(line: 2463, column: 11, scope: !9743)
!9745 = !DILocation(line: 2463, column: 9, scope: !9743)
!9746 = !DILocation(line: 2463, column: 17, scope: !9743)
!9747 = !DILocation(line: 2463, column: 7, scope: !9735)
!9748 = !DILocation(line: 2464, column: 10, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 2463, column: 22)
!9750 = !DILocation(line: 2464, column: 5, scope: !9749)
!9751 = !DILocation(line: 2464, column: 7, scope: !9749)
!9752 = !DILocation(line: 2465, column: 4, scope: !9749)
!9753 = !DILocation(line: 2468, column: 12, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 2467, column: 8)
!9755 = !DILocation(line: 2468, column: 19, scope: !9754)
!9756 = !DILocation(line: 2468, column: 10, scope: !9754)
!9757 = !DILocation(line: 2469, column: 9, scope: !9754)
!9758 = !DILocation(line: 2469, column: 6, scope: !9754)
!9759 = !DILocation(line: 2460, column: 2, scope: !9728)
!9760 = distinct !{!9760, !9733, !9761}
!9761 = !DILocation(line: 2471, column: 2, scope: !9723)
!9762 = !DILocation(line: 2472, column: 9, scope: !9705)
!9763 = !DILocation(line: 2472, column: 2, scope: !9705)
!9764 = distinct !DISubprogram(name: "text_cursor_set_exit", scope: !3, file: !3, line: 2668, type: !3278, scopeLine: 2669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9765 = !DILocalVariable(name: "C", arg: 1, scope: !9764, file: !3, line: 2668, type: !2783)
!9766 = !DILocation(line: 2668, column: 44, scope: !9764)
!9767 = !DILocalVariable(name: "op", arg: 2, scope: !9764, file: !3, line: 2668, type: !2785)
!9768 = !DILocation(line: 2668, column: 59, scope: !9764)
!9769 = !DILocalVariable(name: "st", scope: !9764, file: !3, line: 2670, type: !2804)
!9770 = !DILocation(line: 2670, column: 13, scope: !9764)
!9771 = !DILocation(line: 2670, column: 36, scope: !9764)
!9772 = !DILocation(line: 2670, column: 18, scope: !9764)
!9773 = !DILocalVariable(name: "text", scope: !9764, file: !3, line: 2671, type: !2858)
!9774 = !DILocation(line: 2671, column: 8, scope: !9764)
!9775 = !DILocation(line: 2671, column: 15, scope: !9764)
!9776 = !DILocation(line: 2671, column: 19, scope: !9764)
!9777 = !DILocalVariable(name: "ssel", scope: !9764, file: !3, line: 2672, type: !5779)
!9778 = !DILocation(line: 2672, column: 16, scope: !9764)
!9779 = !DILocation(line: 2672, column: 23, scope: !9764)
!9780 = !DILocation(line: 2672, column: 27, scope: !9764)
!9781 = !DILocalVariable(name: "buffer", scope: !9764, file: !3, line: 2673, type: !1460)
!9782 = !DILocation(line: 2673, column: 8, scope: !9764)
!9783 = !DILocation(line: 2675, column: 18, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 2675, column: 6)
!9785 = !DILocation(line: 2675, column: 6, scope: !9784)
!9786 = !DILocation(line: 2675, column: 6, scope: !9764)
!9787 = !DILocation(line: 2676, column: 27, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 2675, column: 25)
!9789 = !DILocation(line: 2676, column: 12, scope: !9788)
!9790 = !DILocation(line: 2676, column: 10, scope: !9788)
!9791 = !DILocation(line: 2677, column: 25, scope: !9788)
!9792 = !DILocation(line: 2677, column: 3, scope: !9788)
!9793 = !DILocation(line: 2678, column: 3, scope: !9788)
!9794 = !DILocation(line: 2678, column: 13, scope: !9788)
!9795 = !DILocation(line: 2679, column: 2, scope: !9788)
!9796 = !DILocation(line: 2681, column: 27, scope: !9764)
!9797 = !DILocation(line: 2681, column: 2, scope: !9764)
!9798 = !DILocation(line: 2682, column: 24, scope: !9764)
!9799 = !DILocation(line: 2682, column: 48, scope: !9764)
!9800 = !DILocation(line: 2682, column: 52, scope: !9764)
!9801 = !DILocation(line: 2682, column: 2, scope: !9764)
!9802 = !DILocation(line: 2684, column: 2, scope: !9764)
!9803 = !DILocation(line: 2684, column: 12, scope: !9764)
!9804 = !DILocation(line: 2685, column: 1, scope: !9764)
!9805 = distinct !DISubprogram(name: "text_find_and_replace", scope: !3, file: !3, line: 2953, type: !9806, scopeLine: 2954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2760)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!1200, !2783, !2785, !1246}
!9808 = !DILocalVariable(name: "C", arg: 1, scope: !9805, file: !3, line: 2953, type: !2783)
!9809 = !DILocation(line: 2953, column: 44, scope: !9805)
!9810 = !DILocalVariable(name: "op", arg: 2, scope: !9805, file: !3, line: 2953, type: !2785)
!9811 = !DILocation(line: 2953, column: 59, scope: !9805)
!9812 = !DILocalVariable(name: "mode", arg: 3, scope: !9805, file: !3, line: 2953, type: !1246)
!9813 = !DILocation(line: 2953, column: 69, scope: !9805)
!9814 = !DILocalVariable(name: "bmain", scope: !9805, file: !3, line: 2955, type: !2959)
!9815 = !DILocation(line: 2955, column: 8, scope: !9805)
!9816 = !DILocation(line: 2955, column: 30, scope: !9805)
!9817 = !DILocation(line: 2955, column: 16, scope: !9805)
!9818 = !DILocalVariable(name: "st", scope: !9805, file: !3, line: 2956, type: !2804)
!9819 = !DILocation(line: 2956, column: 13, scope: !9805)
!9820 = !DILocation(line: 2956, column: 36, scope: !9805)
!9821 = !DILocation(line: 2956, column: 18, scope: !9805)
!9822 = !DILocalVariable(name: "text", scope: !9805, file: !3, line: 2957, type: !2858)
!9823 = !DILocation(line: 2957, column: 8, scope: !9805)
!9824 = !DILocation(line: 2957, column: 15, scope: !9805)
!9825 = !DILocation(line: 2957, column: 19, scope: !9805)
!9826 = !DILocalVariable(name: "flags", scope: !9805, file: !3, line: 2958, type: !1200)
!9827 = !DILocation(line: 2958, column: 6, scope: !9805)
!9828 = !DILocalVariable(name: "found", scope: !9805, file: !3, line: 2959, type: !1200)
!9829 = !DILocation(line: 2959, column: 6, scope: !9805)
!9830 = !DILocalVariable(name: "tmp", scope: !9805, file: !3, line: 2960, type: !1460)
!9831 = !DILocation(line: 2960, column: 8, scope: !9805)
!9832 = !DILocation(line: 2962, column: 7, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 2962, column: 6)
!9834 = !DILocation(line: 2962, column: 11, scope: !9833)
!9835 = !DILocation(line: 2962, column: 6, scope: !9805)
!9836 = !DILocation(line: 2963, column: 3, scope: !9833)
!9837 = !DILocation(line: 2965, column: 10, scope: !9805)
!9838 = !DILocation(line: 2965, column: 14, scope: !9805)
!9839 = !DILocation(line: 2965, column: 8, scope: !9805)
!9840 = !DILocation(line: 2966, column: 6, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 2966, column: 6)
!9842 = !DILocation(line: 2966, column: 12, scope: !9841)
!9843 = !DILocation(line: 2966, column: 6, scope: !9805)
!9844 = !DILocation(line: 2967, column: 9, scope: !9841)
!9845 = !DILocation(line: 2967, column: 3, scope: !9841)
!9846 = !DILocation(line: 2970, column: 6, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 2970, column: 6)
!9848 = !DILocation(line: 2970, column: 11, scope: !9847)
!9849 = !DILocation(line: 2970, column: 24, scope: !9847)
!9850 = !DILocation(line: 2970, column: 39, scope: !9847)
!9851 = !DILocation(line: 2970, column: 27, scope: !9847)
!9852 = !DILocation(line: 2970, column: 6, scope: !9805)
!9853 = !DILocation(line: 2971, column: 24, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 2970, column: 46)
!9855 = !DILocation(line: 2971, column: 9, scope: !9854)
!9856 = !DILocation(line: 2971, column: 7, scope: !9854)
!9857 = !DILocation(line: 2973, column: 7, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 2973, column: 7)
!9859 = !DILocation(line: 2973, column: 13, scope: !9858)
!9860 = !DILocation(line: 2973, column: 7, scope: !9854)
!9861 = !DILocation(line: 2973, column: 45, scope: !9858)
!9862 = !DILocation(line: 2973, column: 49, scope: !9858)
!9863 = !DILocation(line: 2973, column: 58, scope: !9858)
!9864 = !DILocation(line: 2973, column: 38, scope: !9858)
!9865 = !DILocation(line: 2973, column: 63, scope: !9858)
!9866 = !DILocation(line: 2973, column: 36, scope: !9858)
!9867 = !DILocation(line: 2973, column: 30, scope: !9858)
!9868 = !DILocation(line: 2974, column: 31, scope: !9858)
!9869 = !DILocation(line: 2974, column: 35, scope: !9858)
!9870 = !DILocation(line: 2974, column: 44, scope: !9858)
!9871 = !DILocation(line: 2974, column: 16, scope: !9858)
!9872 = !DILocation(line: 2974, column: 49, scope: !9858)
!9873 = !DILocation(line: 2974, column: 14, scope: !9858)
!9874 = !DILocation(line: 2976, column: 7, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 2976, column: 7)
!9876 = !DILocation(line: 2976, column: 7, scope: !9854)
!9877 = !DILocation(line: 2977, column: 8, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2977, column: 8)
!9879 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 2976, column: 14)
!9880 = !DILocation(line: 2977, column: 13, scope: !9878)
!9881 = !DILocation(line: 2977, column: 8, scope: !9879)
!9882 = !DILocation(line: 2978, column: 20, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9878, file: !3, line: 2977, column: 30)
!9884 = !DILocation(line: 2978, column: 26, scope: !9883)
!9885 = !DILocation(line: 2978, column: 30, scope: !9883)
!9886 = !DILocation(line: 2978, column: 5, scope: !9883)
!9887 = !DILocation(line: 2979, column: 9, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 2979, column: 9)
!9889 = !DILocation(line: 2979, column: 15, scope: !9888)
!9890 = !DILocation(line: 2979, column: 20, scope: !9888)
!9891 = !DILocation(line: 2979, column: 23, scope: !9888)
!9892 = !DILocation(line: 2979, column: 29, scope: !9888)
!9893 = !DILocation(line: 2979, column: 35, scope: !9888)
!9894 = !DILocation(line: 2979, column: 9, scope: !9883)
!9895 = !DILocation(line: 2980, column: 6, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 2979, column: 43)
!9897 = !DILocation(line: 2980, column: 16, scope: !9896)
!9898 = !DILocation(line: 2980, column: 22, scope: !9896)
!9899 = !DILocation(line: 2980, column: 28, scope: !9896)
!9900 = !DILocation(line: 2981, column: 6, scope: !9896)
!9901 = !DILocation(line: 2981, column: 12, scope: !9896)
!9902 = !DILocation(line: 2981, column: 18, scope: !9896)
!9903 = !DILocation(line: 2981, column: 25, scope: !9896)
!9904 = !DILocation(line: 2982, column: 5, scope: !9896)
!9905 = !DILocation(line: 2983, column: 30, scope: !9883)
!9906 = !DILocation(line: 2983, column: 5, scope: !9883)
!9907 = !DILocation(line: 2984, column: 27, scope: !9883)
!9908 = !DILocation(line: 2984, column: 51, scope: !9883)
!9909 = !DILocation(line: 2984, column: 5, scope: !9883)
!9910 = !DILocation(line: 2985, column: 49, scope: !9883)
!9911 = !DILocation(line: 2985, column: 31, scope: !9883)
!9912 = !DILocation(line: 2985, column: 5, scope: !9883)
!9913 = !DILocation(line: 2986, column: 4, scope: !9883)
!9914 = !DILocation(line: 2987, column: 3, scope: !9879)
!9915 = !DILocation(line: 2988, column: 3, scope: !9854)
!9916 = !DILocation(line: 2988, column: 13, scope: !9854)
!9917 = !DILocation(line: 2989, column: 7, scope: !9854)
!9918 = !DILocation(line: 2990, column: 2, scope: !9854)
!9919 = !DILocation(line: 2993, column: 22, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 2993, column: 6)
!9921 = !DILocation(line: 2993, column: 28, scope: !9920)
!9922 = !DILocation(line: 2993, column: 32, scope: !9920)
!9923 = !DILocation(line: 2993, column: 41, scope: !9920)
!9924 = !DILocation(line: 2993, column: 47, scope: !9920)
!9925 = !DILocation(line: 2993, column: 63, scope: !9920)
!9926 = !DILocation(line: 2993, column: 69, scope: !9920)
!9927 = !DILocation(line: 2993, column: 6, scope: !9920)
!9928 = !DILocation(line: 2993, column: 6, scope: !9805)
!9929 = !DILocation(line: 2994, column: 28, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 2993, column: 87)
!9931 = !DILocation(line: 2994, column: 3, scope: !9930)
!9932 = !DILocation(line: 2995, column: 25, scope: !9930)
!9933 = !DILocation(line: 2995, column: 49, scope: !9930)
!9934 = !DILocation(line: 2995, column: 3, scope: !9930)
!9935 = !DILocation(line: 2996, column: 2, scope: !9930)
!9936 = !DILocation(line: 2997, column: 11, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 2997, column: 11)
!9938 = !DILocation(line: 2997, column: 17, scope: !9937)
!9939 = !DILocation(line: 2997, column: 11, scope: !9920)
!9940 = !DILocation(line: 2998, column: 7, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 2998, column: 7)
!9942 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 2997, column: 32)
!9943 = !DILocation(line: 2998, column: 13, scope: !9941)
!9944 = !DILocation(line: 2998, column: 16, scope: !9941)
!9945 = !DILocation(line: 2998, column: 7, scope: !9942)
!9946 = !DILocation(line: 2999, column: 22, scope: !9941)
!9947 = !DILocation(line: 2999, column: 28, scope: !9941)
!9948 = !DILocation(line: 2999, column: 31, scope: !9941)
!9949 = !DILocation(line: 2999, column: 11, scope: !9941)
!9950 = !DILocation(line: 2999, column: 15, scope: !9941)
!9951 = !DILocation(line: 2999, column: 20, scope: !9941)
!9952 = !DILocation(line: 2999, column: 9, scope: !9941)
!9953 = !DILocation(line: 2999, column: 4, scope: !9941)
!9954 = !DILocation(line: 3001, column: 22, scope: !9941)
!9955 = !DILocation(line: 3001, column: 29, scope: !9941)
!9956 = !DILocation(line: 3001, column: 34, scope: !9941)
!9957 = !DILocation(line: 3001, column: 11, scope: !9941)
!9958 = !DILocation(line: 3001, column: 15, scope: !9941)
!9959 = !DILocation(line: 3001, column: 20, scope: !9941)
!9960 = !DILocation(line: 3001, column: 9, scope: !9941)
!9961 = !DILocation(line: 3002, column: 19, scope: !9942)
!9962 = !DILocation(line: 3002, column: 3, scope: !9942)
!9963 = !DILocation(line: 3003, column: 28, scope: !9942)
!9964 = !DILocation(line: 3003, column: 3, scope: !9942)
!9965 = !DILocation(line: 3004, column: 25, scope: !9942)
!9966 = !DILocation(line: 3004, column: 49, scope: !9942)
!9967 = !DILocation(line: 3004, column: 3, scope: !9942)
!9968 = !DILocation(line: 3005, column: 2, scope: !9942)
!9969 = !DILocation(line: 3007, column: 8, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 3007, column: 7)
!9971 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 3006, column: 7)
!9972 = !DILocation(line: 3007, column: 7, scope: !9971)
!9973 = !DILocation(line: 3007, column: 27, scope: !9970)
!9974 = !DILocation(line: 3007, column: 31, scope: !9970)
!9975 = !DILocation(line: 3007, column: 73, scope: !9970)
!9976 = !DILocation(line: 3007, column: 77, scope: !9970)
!9977 = !DILocation(line: 3007, column: 15, scope: !9970)
!9978 = !DILocation(line: 3010, column: 2, scope: !9805)
!9979 = !DILocation(line: 3011, column: 1, scope: !9805)
