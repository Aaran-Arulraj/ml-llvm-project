; ModuleID = 'wand/magick-image.c'
source_filename = "wand/magick-image.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._MagickWand = type { i64, [4096 x i8], %struct._ExceptionInfo*, %struct._ImageInfo*, %struct._QuantizeInfo*, %struct._Image*, i32, i32, i32, i64 }
%struct._ImageInfo = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i64, i64, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, double, double, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, i32, i64, i32, i32, i32, i64, i32, i32, i8*, i8*, i32, %struct._Image*, i8*, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i64 (%struct._Image*, i8*, i64)*, %struct._IO_FILE*, i8*, i64, [4096 x i8], [4096 x i8], [4096 x i8], [4096 x i8], i32, i8*, i64, i64, %struct._PixelPacket, i64, i32, %struct._PixelPacket, i8*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._QuantizeInfo = type { i64, i64, i32, i32, i32, i64, i32 }
%struct._DrawingWand = type opaque
%struct._DrawInfo = type { i8*, i8*, %struct._RectangleInfo, %struct._AffineMatrix, i32, %struct._PixelPacket, %struct._PixelPacket, double, %struct._GradientInfo, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, i32, i32, i32, i64, double, i32, i32, i8*, i64, i8*, i8*, i8*, i32, i32, i64, i8*, double, i8*, i32, %struct._PixelPacket, %struct._PixelPacket, i8*, double*, i8*, %struct._SegmentInfo, i32, i16, i32, %struct._ElementReference, i32, i64, double, double, double, i32 }
%struct._AffineMatrix = type { double, double, double, double, double, double }
%struct._GradientInfo = type { i32, %struct._RectangleInfo, %struct._SegmentInfo, %struct._StopInfo*, i64, i32, i32, i64, %struct._PointInfo, float }
%struct._StopInfo = type { %struct._MagickPixelPacket, float }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._PointInfo = type { double, double }
%struct._SegmentInfo = type { double, double, double, double }
%struct._ElementReference = type { i8*, i32, %struct._GradientInfo, i64, %struct._ElementReference*, %struct._ElementReference* }
%struct._PixelWand = type opaque
%struct.KernelInfo = type { i32, i64, i64, i64, i64, double*, double, double, double, double, double, %struct.KernelInfo*, i64 }
%struct._FrameInfo = type { i64, i64, i64, i64, i64, i64 }
%struct._ChannelFeatures = type { [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double], [4 x double] }
%struct._ChannelStatistics = type { i64, double, double, double, double, double, double, double, double, double, double, double }
%struct._ColorPacket = type { %struct._PixelPacket, i16, i64 }
%struct._CacheView = type opaque
%struct._MontageInfo = type { i8*, i8*, i8*, i8*, i8*, i8*, double, i64, i32, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, [4096 x i8], i32, i64 }
%struct._MagickInfo = type { i8*, i8*, i8*, i8*, i8*, %struct._ImageInfo*, %struct._Image* (%struct._ImageInfo*, %struct._ExceptionInfo*)*, i32 (%struct._ImageInfo*, %struct._Image*)*, i32 (i8*, i64)*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, %struct._MagickInfo*, %struct._MagickInfo*, i64, i8*, %struct.SemaphoreInfo* }

@.str = private unnamed_addr constant [20 x i8] c"wand/magick-image.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"ContainsNoImages\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"%+g%+g\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"%u,%u,%u,%u\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"%g,%g,%g,%g\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"InvalidColormapIndex\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"signature\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"UnableToCreateTemporaryFile\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"%g,%g,%g\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"15x15+3+3\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"+0+0\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"%gx%g\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"0x0+0+0\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"%s-%.20g\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"MagickWand\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @GetImageFromMagickWand(%struct._MagickWand* %wand) #0 !dbg !1453 {
entry:
  %retval = alloca %struct._Image*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1459, metadata !DIExpression()), !dbg !1460
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1461
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1463
  %1 = load i32, i32* %debug, align 8, !dbg !1463
  %cmp = icmp ne i32 %1, 0, !dbg !1464
  br i1 %cmp, label %if.then, label %if.end, !dbg !1465

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1466
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1467
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1466
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1468
  br label %if.end, !dbg !1469

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1470
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1472
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1472
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1473
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1474

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1475
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1477
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1477
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1478
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1479
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1478
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 147, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1480
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1481
  br label %return, !dbg !1481

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1482
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1483
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !1483
  store %struct._Image* %9, %struct._Image** %retval, align 8, !dbg !1484
  br label %return, !dbg !1484

return:                                           ; preds = %if.end6, %if.then2
  %10 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !1485
  ret %struct._Image* %10, !dbg !1485
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAdaptiveBlurImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !1486 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1489, metadata !DIExpression()), !dbg !1490
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !1491, metadata !DIExpression()), !dbg !1492
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !1493, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1495, metadata !DIExpression()), !dbg !1496
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1497
  %1 = load double, double* %radius.addr, align 8, !dbg !1498
  %2 = load double, double* %sigma.addr, align 8, !dbg !1499
  %call = call i32 @MagickAdaptiveBlurImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !1500
  store i32 %call, i32* %status, align 4, !dbg !1501
  %3 = load i32, i32* %status, align 4, !dbg !1502
  ret i32 %3, !dbg !1503
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAdaptiveBlurImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma) #0 !dbg !1504 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %sharp_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1508, metadata !DIExpression()), !dbg !1509
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1510, metadata !DIExpression()), !dbg !1511
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !1512, metadata !DIExpression()), !dbg !1513
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !1514, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata %struct._Image** %sharp_image, metadata !1516, metadata !DIExpression()), !dbg !1517
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1518
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1520
  %1 = load i32, i32* %debug, align 8, !dbg !1520
  %cmp = icmp ne i32 %1, 0, !dbg !1521
  br i1 %cmp, label %if.then, label %if.end, !dbg !1522

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1523
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1524
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1523
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1525
  br label %if.end, !dbg !1526

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1527
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1529
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1529
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1530
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1531

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1532
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1532
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1532
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1532
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1532
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1532
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 213, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1532
  store i32 0, i32* %retval, align 4, !dbg !1532
  br label %return, !dbg !1532

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1534
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1535
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !1535
  %10 = load i32, i32* %channel.addr, align 4, !dbg !1536
  %11 = load double, double* %radius.addr, align 8, !dbg !1537
  %12 = load double, double* %sigma.addr, align 8, !dbg !1538
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1539
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !1540
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !1540
  %call9 = call %struct._Image* @AdaptiveBlurImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !1541
  store %struct._Image* %call9, %struct._Image** %sharp_image, align 8, !dbg !1542
  %15 = load %struct._Image*, %struct._Image** %sharp_image, align 8, !dbg !1543
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !1545
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1546

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1547
  br label %return, !dbg !1547

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1548
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !1549
  %17 = load %struct._Image*, %struct._Image** %sharp_image, align 8, !dbg !1550
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !1551
  store i32 1, i32* %retval, align 4, !dbg !1552
  br label %return, !dbg !1552

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !1553
  ret i32 %18, !dbg !1553
}

declare dso_local %struct._Image* @AdaptiveBlurImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #2

declare dso_local void @ReplaceImageInList(%struct._Image**, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAdaptiveResizeImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows) #0 !dbg !1554 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %resize_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1557, metadata !DIExpression()), !dbg !1558
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !1559, metadata !DIExpression()), !dbg !1560
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !1561, metadata !DIExpression()), !dbg !1562
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image, metadata !1563, metadata !DIExpression()), !dbg !1564
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1565
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1567
  %1 = load i32, i32* %debug, align 8, !dbg !1567
  %cmp = icmp ne i32 %1, 0, !dbg !1568
  br i1 %cmp, label %if.then, label %if.end, !dbg !1569

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1570
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1571
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1570
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 257, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1572
  br label %if.end, !dbg !1573

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1574
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1576
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1576
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1577
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1578

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1579
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1579
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1579
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1579
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1579
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1579
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 259, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1579
  store i32 0, i32* %retval, align 4, !dbg !1579
  br label %return, !dbg !1579

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1581
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1582
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !1582
  %10 = load i64, i64* %columns.addr, align 8, !dbg !1583
  %11 = load i64, i64* %rows.addr, align 8, !dbg !1584
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1585
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !1586
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !1586
  %call9 = call %struct._Image* @AdaptiveResizeImage(%struct._Image* %9, i64 %10, i64 %11, %struct._ExceptionInfo* %13), !dbg !1587
  store %struct._Image* %call9, %struct._Image** %resize_image, align 8, !dbg !1588
  %14 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !1589
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !1591
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1592

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1593
  br label %return, !dbg !1593

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1594
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !1595
  %16 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !1596
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !1597
  store i32 1, i32* %retval, align 4, !dbg !1598
  br label %return, !dbg !1598

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !1599
  ret i32 %17, !dbg !1599
}

declare dso_local %struct._Image* @AdaptiveResizeImage(%struct._Image*, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAdaptiveSharpenImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !1600 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1601, metadata !DIExpression()), !dbg !1602
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !1603, metadata !DIExpression()), !dbg !1604
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !1605, metadata !DIExpression()), !dbg !1606
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1607, metadata !DIExpression()), !dbg !1608
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1609
  %1 = load double, double* %radius.addr, align 8, !dbg !1610
  %2 = load double, double* %sigma.addr, align 8, !dbg !1611
  %call = call i32 @MagickAdaptiveSharpenImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !1612
  store i32 %call, i32* %status, align 4, !dbg !1613
  %3 = load i32, i32* %status, align 4, !dbg !1614
  ret i32 %3, !dbg !1615
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAdaptiveSharpenImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma) #0 !dbg !1616 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %sharp_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1617, metadata !DIExpression()), !dbg !1618
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1619, metadata !DIExpression()), !dbg !1620
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !1621, metadata !DIExpression()), !dbg !1622
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !1623, metadata !DIExpression()), !dbg !1624
  call void @llvm.dbg.declare(metadata %struct._Image** %sharp_image, metadata !1625, metadata !DIExpression()), !dbg !1626
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1627
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1629
  %1 = load i32, i32* %debug, align 8, !dbg !1629
  %cmp = icmp ne i32 %1, 0, !dbg !1630
  br i1 %cmp, label %if.then, label %if.end, !dbg !1631

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1632
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1633
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1632
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 324, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1634
  br label %if.end, !dbg !1635

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1636
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1638
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1638
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1639
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1640

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1641
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1641
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1641
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1641
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1641
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1641
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 326, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1641
  store i32 0, i32* %retval, align 4, !dbg !1641
  br label %return, !dbg !1641

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1643
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1644
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !1644
  %10 = load i32, i32* %channel.addr, align 4, !dbg !1645
  %11 = load double, double* %radius.addr, align 8, !dbg !1646
  %12 = load double, double* %sigma.addr, align 8, !dbg !1647
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1648
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !1649
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !1649
  %call9 = call %struct._Image* @AdaptiveSharpenImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !1650
  store %struct._Image* %call9, %struct._Image** %sharp_image, align 8, !dbg !1651
  %15 = load %struct._Image*, %struct._Image** %sharp_image, align 8, !dbg !1652
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !1654
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1655

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1656
  br label %return, !dbg !1656

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1657
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !1658
  %17 = load %struct._Image*, %struct._Image** %sharp_image, align 8, !dbg !1659
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !1660
  store i32 1, i32* %retval, align 4, !dbg !1661
  br label %return, !dbg !1661

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !1662
  ret i32 %18, !dbg !1662
}

declare dso_local %struct._Image* @AdaptiveSharpenImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAdaptiveThresholdImage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %offset) #0 !dbg !1663 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %offset.addr = alloca i64, align 8
  %threshold_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1667, metadata !DIExpression()), !dbg !1668
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1669, metadata !DIExpression()), !dbg !1670
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1671, metadata !DIExpression()), !dbg !1672
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1673, metadata !DIExpression()), !dbg !1674
  call void @llvm.dbg.declare(metadata %struct._Image** %threshold_image, metadata !1675, metadata !DIExpression()), !dbg !1676
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1677
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1679
  %1 = load i32, i32* %debug, align 8, !dbg !1679
  %cmp = icmp ne i32 %1, 0, !dbg !1680
  br i1 %cmp, label %if.then, label %if.end, !dbg !1681

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1682
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1683
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1682
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1684
  br label %if.end, !dbg !1685

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1686
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1688
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1688
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1689
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1690

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1691
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1691
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1691
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1691
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1691
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1691
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 378, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1691
  store i32 0, i32* %retval, align 4, !dbg !1691
  br label %return, !dbg !1691

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1693
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1694
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !1694
  %10 = load i64, i64* %width.addr, align 8, !dbg !1695
  %11 = load i64, i64* %height.addr, align 8, !dbg !1696
  %12 = load i64, i64* %offset.addr, align 8, !dbg !1697
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1698
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !1699
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !1699
  %call9 = call %struct._Image* @AdaptiveThresholdImage(%struct._Image* %9, i64 %10, i64 %11, i64 %12, %struct._ExceptionInfo* %14), !dbg !1700
  store %struct._Image* %call9, %struct._Image** %threshold_image, align 8, !dbg !1701
  %15 = load %struct._Image*, %struct._Image** %threshold_image, align 8, !dbg !1702
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !1704
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1705

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1706
  br label %return, !dbg !1706

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1707
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !1708
  %17 = load %struct._Image*, %struct._Image** %threshold_image, align 8, !dbg !1709
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !1710
  store i32 1, i32* %retval, align 4, !dbg !1711
  br label %return, !dbg !1711

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !1712
  ret i32 %18, !dbg !1712
}

declare dso_local %struct._Image* @AdaptiveThresholdImage(%struct._Image*, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAddImage(%struct._MagickWand* %wand, %struct._MagickWand* %add_wand) #0 !dbg !1713 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %add_wand.addr = alloca %struct._MagickWand*, align 8
  %images = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1716, metadata !DIExpression()), !dbg !1717
  store %struct._MagickWand* %add_wand, %struct._MagickWand** %add_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %add_wand.addr, metadata !1718, metadata !DIExpression()), !dbg !1719
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !1720, metadata !DIExpression()), !dbg !1721
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1722
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1724
  %1 = load i32, i32* %debug, align 8, !dbg !1724
  %cmp = icmp ne i32 %1, 0, !dbg !1725
  br i1 %cmp, label %if.then, label %if.end, !dbg !1726

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1727
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1728
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1727
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 480, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1729
  br label %if.end, !dbg !1730

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %add_wand.addr, align 8, !dbg !1731
  %images1 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1733
  %4 = load %struct._Image*, %struct._Image** %images1, align 8, !dbg !1733
  %cmp2 = icmp eq %struct._Image* %4, null, !dbg !1734
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !1735

if.then3:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1736
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1736
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1736
  %7 = load %struct._MagickWand*, %struct._MagickWand** %add_wand.addr, align 8, !dbg !1736
  %name4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1736
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name4, i64 0, i64 0, !dbg !1736
  %call6 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 484, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay5), !dbg !1736
  store i32 0, i32* %retval, align 4, !dbg !1736
  br label %return, !dbg !1736

if.end7:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %add_wand.addr, align 8, !dbg !1738
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1739
  %9 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !1739
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1740
  %exception9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !1741
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !1741
  %call10 = call %struct._Image* @CloneImageList(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !1742
  store %struct._Image* %call10, %struct._Image** %images, align 8, !dbg !1743
  %12 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1744
  %cmp11 = icmp eq %struct._Image* %12, null, !dbg !1746
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !1747

if.then12:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !1748
  br label %return, !dbg !1748

if.end13:                                         ; preds = %if.end7
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1749
  %14 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1750
  %call14 = call i32 @InsertImageInWand(%struct._MagickWand* %13, %struct._Image* %14), !dbg !1751
  store i32 %call14, i32* %retval, align 4, !dbg !1752
  br label %return, !dbg !1752

return:                                           ; preds = %if.end13, %if.then12, %if.then3
  %15 = load i32, i32* %retval, align 4, !dbg !1753
  ret i32 %15, !dbg !1753
}

declare dso_local %struct._Image* @CloneImageList(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @InsertImageInWand(%struct._MagickWand* %wand, %struct._Image* %images) #0 !dbg !1754 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %images.addr = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1757, metadata !DIExpression()), !dbg !1758
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !1759, metadata !DIExpression()), !dbg !1760
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1761
  %images1 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 5, !dbg !1763
  %1 = load %struct._Image*, %struct._Image** %images1, align 8, !dbg !1763
  %cmp = icmp eq %struct._Image* %1, null, !dbg !1764
  br i1 %cmp, label %if.then, label %if.end7, !dbg !1765

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1766
  %insert_before = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 6, !dbg !1769
  %3 = load i32, i32* %insert_before, align 8, !dbg !1769
  %cmp2 = icmp ne i32 %3, 0, !dbg !1770
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !1771

if.then3:                                         ; preds = %if.then
  %4 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1772
  %call = call %struct._Image* @GetFirstImageInList(%struct._Image* %4), !dbg !1773
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1774
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !1775
  store %struct._Image* %call, %struct._Image** %images4, align 8, !dbg !1776
  br label %if.end, !dbg !1774

if.else:                                          ; preds = %if.then
  %6 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1777
  %call5 = call %struct._Image* @GetLastImageInList(%struct._Image* %6), !dbg !1778
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1779
  %images6 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 5, !dbg !1780
  store %struct._Image* %call5, %struct._Image** %images6, align 8, !dbg !1781
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  store i32 1, i32* %retval, align 4, !dbg !1782
  br label %return, !dbg !1782

if.end7:                                          ; preds = %entry
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1783
  %insert_before8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 6, !dbg !1785
  %9 = load i32, i32* %insert_before8, align 8, !dbg !1785
  %cmp9 = icmp ne i32 %9, 0, !dbg !1786
  br i1 %cmp9, label %land.lhs.true, label %if.end16, !dbg !1787

land.lhs.true:                                    ; preds = %if.end7
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1788
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !1789
  %11 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !1789
  %previous = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 67, !dbg !1790
  %12 = load %struct._Image*, %struct._Image** %previous, align 8, !dbg !1790
  %cmp11 = icmp eq %struct._Image* %12, null, !dbg !1791
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !1792

if.then12:                                        ; preds = %land.lhs.true
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1793
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !1795
  %14 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1796
  call void @PrependImageToList(%struct._Image** %images13, %struct._Image* %14), !dbg !1797
  %15 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1798
  %call14 = call %struct._Image* @GetFirstImageInList(%struct._Image* %15), !dbg !1799
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1800
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !1801
  store %struct._Image* %call14, %struct._Image** %images15, align 8, !dbg !1802
  store i32 1, i32* %retval, align 4, !dbg !1803
  br label %return, !dbg !1803

if.end16:                                         ; preds = %land.lhs.true, %if.end7
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1804
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !1806
  %18 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !1806
  %next = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 69, !dbg !1807
  %19 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !1807
  %cmp18 = icmp eq %struct._Image* %19, null, !dbg !1808
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !1809

if.then19:                                        ; preds = %if.end16
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1810
  %images20 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 5, !dbg !1812
  %21 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1813
  call void @InsertImageInList(%struct._Image** %images20, %struct._Image* %21), !dbg !1814
  %22 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1815
  %call21 = call %struct._Image* @GetLastImageInList(%struct._Image* %22), !dbg !1816
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1817
  %images22 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %23, i32 0, i32 5, !dbg !1818
  store %struct._Image* %call21, %struct._Image** %images22, align 8, !dbg !1819
  store i32 1, i32* %retval, align 4, !dbg !1820
  br label %return, !dbg !1820

if.end23:                                         ; preds = %if.end16
  %24 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1821
  %images24 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %24, i32 0, i32 5, !dbg !1822
  %25 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1823
  call void @InsertImageInList(%struct._Image** %images24, %struct._Image* %25), !dbg !1824
  store i32 1, i32* %retval, align 4, !dbg !1825
  br label %return, !dbg !1825

return:                                           ; preds = %if.end23, %if.then19, %if.then12, %if.end
  %26 = load i32, i32* %retval, align 4, !dbg !1826
  ret i32 %26, !dbg !1826
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAddNoiseImage(%struct._MagickWand* %wand, i32 %noise_type) #0 !dbg !1827 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %noise_type.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1832, metadata !DIExpression()), !dbg !1833
  store i32 %noise_type, i32* %noise_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %noise_type.addr, metadata !1834, metadata !DIExpression()), !dbg !1835
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1836, metadata !DIExpression()), !dbg !1837
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1838
  %1 = load i32, i32* %noise_type.addr, align 4, !dbg !1839
  %call = call i32 @MagickAddNoiseImageChannel(%struct._MagickWand* %0, i32 134217719, i32 %1), !dbg !1840
  store i32 %call, i32* %status, align 4, !dbg !1841
  %2 = load i32, i32* %status, align 4, !dbg !1842
  ret i32 %2, !dbg !1843
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAddNoiseImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %noise_type) #0 !dbg !1844 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %noise_type.addr = alloca i32, align 4
  %noise_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1847, metadata !DIExpression()), !dbg !1848
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1849, metadata !DIExpression()), !dbg !1850
  store i32 %noise_type, i32* %noise_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %noise_type.addr, metadata !1851, metadata !DIExpression()), !dbg !1852
  call void @llvm.dbg.declare(metadata %struct._Image** %noise_image, metadata !1853, metadata !DIExpression()), !dbg !1854
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1855
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1857
  %1 = load i32, i32* %debug, align 8, !dbg !1857
  %cmp = icmp ne i32 %1, 0, !dbg !1858
  br i1 %cmp, label %if.then, label %if.end, !dbg !1859

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1860
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1861
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1860
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 544, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1862
  br label %if.end, !dbg !1863

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1864
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1866
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1866
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1867
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1868

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1869
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1869
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1869
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1869
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1869
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1869
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 546, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1869
  store i32 0, i32* %retval, align 4, !dbg !1869
  br label %return, !dbg !1869

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1871
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !1872
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !1872
  %10 = load i32, i32* %channel.addr, align 4, !dbg !1873
  %11 = load i32, i32* %noise_type.addr, align 4, !dbg !1874
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1875
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !1876
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !1876
  %call9 = call %struct._Image* @AddNoiseImageChannel(%struct._Image* %9, i32 %10, i32 %11, %struct._ExceptionInfo* %13), !dbg !1877
  store %struct._Image* %call9, %struct._Image** %noise_image, align 8, !dbg !1878
  %14 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1879
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !1881
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1882

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1883
  br label %return, !dbg !1883

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1884
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !1885
  %16 = load %struct._Image*, %struct._Image** %noise_image, align 8, !dbg !1886
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !1887
  store i32 1, i32* %retval, align 4, !dbg !1888
  br label %return, !dbg !1888

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !1889
  ret i32 %17, !dbg !1889
}

declare dso_local %struct._Image* @AddNoiseImageChannel(%struct._Image*, i32, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAffineTransformImage(%struct._MagickWand* %wand, %struct._DrawingWand* %drawing_wand) #0 !dbg !1890 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %drawing_wand.addr = alloca %struct._DrawingWand*, align 8
  %draw_info = alloca %struct._DrawInfo*, align 8
  %affine_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1898, metadata !DIExpression()), !dbg !1899
  store %struct._DrawingWand* %drawing_wand, %struct._DrawingWand** %drawing_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %drawing_wand.addr, metadata !1900, metadata !DIExpression()), !dbg !1901
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !1902, metadata !DIExpression()), !dbg !1903
  call void @llvm.dbg.declare(metadata %struct._Image** %affine_image, metadata !1904, metadata !DIExpression()), !dbg !1905
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1906
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1908
  %1 = load i32, i32* %debug, align 8, !dbg !1908
  %cmp = icmp ne i32 %1, 0, !dbg !1909
  br i1 %cmp, label %if.then, label %if.end, !dbg !1910

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1911
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1912
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1911
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 593, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1913
  br label %if.end, !dbg !1914

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1915
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1917
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1917
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1918
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1919

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1920
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1920
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1920
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1920
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1920
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1920
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 595, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1920
  store i32 0, i32* %retval, align 4, !dbg !1920
  br label %return, !dbg !1920

if.end6:                                          ; preds = %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !1922
  %call7 = call %struct._DrawInfo* @PeekDrawingWand(%struct._DrawingWand* %8), !dbg !1923
  store %struct._DrawInfo* %call7, %struct._DrawInfo** %draw_info, align 8, !dbg !1924
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1925
  %cmp8 = icmp eq %struct._DrawInfo* %9, null, !dbg !1927
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !1928

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1929
  br label %return, !dbg !1929

if.end10:                                         ; preds = %if.end6
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1930
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !1931
  %11 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !1931
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1932
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 3, !dbg !1933
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1934
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !1935
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !1935
  %call13 = call %struct._Image* @AffineTransformImage(%struct._Image* %11, %struct._AffineMatrix* %affine, %struct._ExceptionInfo* %14), !dbg !1936
  store %struct._Image* %call13, %struct._Image** %affine_image, align 8, !dbg !1937
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1938
  %call14 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %15), !dbg !1939
  store %struct._DrawInfo* %call14, %struct._DrawInfo** %draw_info, align 8, !dbg !1940
  %16 = load %struct._Image*, %struct._Image** %affine_image, align 8, !dbg !1941
  %cmp15 = icmp eq %struct._Image* %16, null, !dbg !1943
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !1944

if.then16:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !1945
  br label %return, !dbg !1945

if.end17:                                         ; preds = %if.end10
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1946
  %images18 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !1947
  %18 = load %struct._Image*, %struct._Image** %affine_image, align 8, !dbg !1948
  call void @ReplaceImageInList(%struct._Image** %images18, %struct._Image* %18), !dbg !1949
  store i32 1, i32* %retval, align 4, !dbg !1950
  br label %return, !dbg !1950

return:                                           ; preds = %if.end17, %if.then16, %if.then9, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !1951
  ret i32 %19, !dbg !1951
}

declare dso_local %struct._DrawInfo* @PeekDrawingWand(%struct._DrawingWand*) #2

declare dso_local %struct._Image* @AffineTransformImage(%struct._Image*, %struct._AffineMatrix*, %struct._ExceptionInfo*) #2

declare dso_local %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAnnotateImage(%struct._MagickWand* %wand, %struct._DrawingWand* %drawing_wand, double %x, double %y, double %angle, i8* %text) #0 !dbg !1952 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %drawing_wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %angle.addr = alloca double, align 8
  %text.addr = alloca i8*, align 8
  %geometry = alloca [4096 x i8], align 16
  %draw_info = alloca %struct._DrawInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !1955, metadata !DIExpression()), !dbg !1956
  store %struct._DrawingWand* %drawing_wand, %struct._DrawingWand** %drawing_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %drawing_wand.addr, metadata !1957, metadata !DIExpression()), !dbg !1958
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !1959, metadata !DIExpression()), !dbg !1960
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !1961, metadata !DIExpression()), !dbg !1962
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !1963, metadata !DIExpression()), !dbg !1964
  store i8* %text, i8** %text.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %text.addr, metadata !1965, metadata !DIExpression()), !dbg !1966
  call void @llvm.dbg.declare(metadata [4096 x i8]* %geometry, metadata !1967, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !1969, metadata !DIExpression()), !dbg !1970
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1971, metadata !DIExpression()), !dbg !1972
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1973
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !1975
  %1 = load i32, i32* %debug, align 8, !dbg !1975
  %cmp = icmp ne i32 %1, 0, !dbg !1976
  br i1 %cmp, label %if.then, label %if.end, !dbg !1977

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1978
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !1979
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1978
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 658, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1980
  br label %if.end, !dbg !1981

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1982
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !1984
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !1984
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !1985
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1986

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1987
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !1987
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1987
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !1987
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !1987
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !1987
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 660, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !1987
  store i32 0, i32* %retval, align 4, !dbg !1987
  br label %return, !dbg !1987

if.end6:                                          ; preds = %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !1989
  %call7 = call %struct._DrawInfo* @PeekDrawingWand(%struct._DrawingWand* %8), !dbg !1990
  store %struct._DrawInfo* %call7, %struct._DrawInfo** %draw_info, align 8, !dbg !1991
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1992
  %cmp8 = icmp eq %struct._DrawInfo* %9, null, !dbg !1994
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !1995

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !1996
  br label %return, !dbg !1996

if.end10:                                         ; preds = %if.end6
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1997
  %text11 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 21, !dbg !1998
  %11 = load i8*, i8** %text.addr, align 8, !dbg !1999
  %call12 = call i8* @CloneString(i8** %text11, i8* %11), !dbg !2000
  %arraydecay13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !2001
  %12 = load double, double* %x.addr, align 8, !dbg !2002
  %13 = load double, double* %y.addr, align 8, !dbg !2003
  %call14 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay13, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), double %12, double %13), !dbg !2004
  %14 = load double, double* %angle.addr, align 8, !dbg !2005
  %call15 = call double @fmod(double %14, double 3.600000e+02) #6, !dbg !2006
  %call16 = call double @DegreesToRadians(double %call15), !dbg !2007
  %call17 = call double @cos(double %call16) #6, !dbg !2008
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2009
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 3, !dbg !2010
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !2011
  store double %call17, double* %sx, align 8, !dbg !2012
  %16 = load double, double* %angle.addr, align 8, !dbg !2013
  %call18 = call double @fmod(double %16, double 3.600000e+02) #6, !dbg !2014
  %call19 = call double @DegreesToRadians(double %call18), !dbg !2015
  %call20 = call double @sin(double %call19) #6, !dbg !2016
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2017
  %affine21 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 3, !dbg !2018
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine21, i32 0, i32 1, !dbg !2019
  store double %call20, double* %rx, align 8, !dbg !2020
  %18 = load double, double* %angle.addr, align 8, !dbg !2021
  %call22 = call double @fmod(double %18, double 3.600000e+02) #6, !dbg !2022
  %call23 = call double @DegreesToRadians(double %call22), !dbg !2023
  %call24 = call double @sin(double %call23) #6, !dbg !2024
  %fneg = fneg double %call24, !dbg !2025
  %19 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2026
  %affine25 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %19, i32 0, i32 3, !dbg !2027
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine25, i32 0, i32 2, !dbg !2028
  store double %fneg, double* %ry, align 8, !dbg !2029
  %20 = load double, double* %angle.addr, align 8, !dbg !2030
  %call26 = call double @fmod(double %20, double 3.600000e+02) #6, !dbg !2031
  %call27 = call double @DegreesToRadians(double %call26), !dbg !2032
  %call28 = call double @cos(double %call27) #6, !dbg !2033
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2034
  %affine29 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %21, i32 0, i32 3, !dbg !2035
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine29, i32 0, i32 3, !dbg !2036
  store double %call28, double* %sy, align 8, !dbg !2037
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2038
  %geometry30 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 1, !dbg !2039
  %arraydecay31 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !2040
  %call32 = call i8* @CloneString(i8** %geometry30, i8* %arraydecay31), !dbg !2041
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2042
  %images33 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %23, i32 0, i32 5, !dbg !2043
  %24 = load %struct._Image*, %struct._Image** %images33, align 8, !dbg !2043
  %25 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2044
  %call34 = call i32 @AnnotateImage(%struct._Image* %24, %struct._DrawInfo* %25), !dbg !2045
  store i32 %call34, i32* %status, align 4, !dbg !2046
  %26 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !2047
  %call35 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %26), !dbg !2048
  store %struct._DrawInfo* %call35, %struct._DrawInfo** %draw_info, align 8, !dbg !2049
  %27 = load i32, i32* %status, align 4, !dbg !2050
  %cmp36 = icmp eq i32 %27, 0, !dbg !2052
  br i1 %cmp36, label %if.then37, label %if.end41, !dbg !2053

if.then37:                                        ; preds = %if.end10
  %28 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2054
  %exception38 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %28, i32 0, i32 2, !dbg !2055
  %29 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception38, align 8, !dbg !2055
  %30 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2056
  %images39 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %30, i32 0, i32 5, !dbg !2057
  %31 = load %struct._Image*, %struct._Image** %images39, align 8, !dbg !2057
  %exception40 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 58, !dbg !2058
  call void @InheritException(%struct._ExceptionInfo* %29, %struct._ExceptionInfo* %exception40), !dbg !2059
  br label %if.end41, !dbg !2059

if.end41:                                         ; preds = %if.then37, %if.end10
  %32 = load i32, i32* %status, align 4, !dbg !2060
  store i32 %32, i32* %retval, align 4, !dbg !2061
  br label %return, !dbg !2061

return:                                           ; preds = %if.end41, %if.then9, %if.then2
  %33 = load i32, i32* %retval, align 4, !dbg !2062
  ret i32 %33, !dbg !2062
}

declare dso_local i8* @CloneString(i8**, i8*) #2

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local double @cos(double) #3

; Function Attrs: noinline nounwind uwtable
define internal double @DegreesToRadians(double %degrees) #0 !dbg !2063 {
entry:
  %degrees.addr = alloca double, align 8
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !2067, metadata !DIExpression()), !dbg !2068
  %0 = load double, double* %degrees.addr, align 8, !dbg !2069
  %mul = fmul double 0x400921FB54442D18, %0, !dbg !2070
  %div = fdiv double %mul, 1.800000e+02, !dbg !2071
  ret double %div, !dbg !2072
}

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #3

; Function Attrs: nounwind
declare dso_local double @sin(double) #3

declare dso_local i32 @AnnotateImage(%struct._Image*, %struct._DrawInfo*) #2

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAnimateImages(%struct._MagickWand* %wand, i8* %server_name) #0 !dbg !2073 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %server_name.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2076, metadata !DIExpression()), !dbg !2077
  store i8* %server_name, i8** %server_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %server_name.addr, metadata !2078, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2080, metadata !DIExpression()), !dbg !2081
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2082
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2084
  %1 = load i32, i32* %debug, align 8, !dbg !2084
  %cmp = icmp ne i32 %1, 0, !dbg !2085
  br i1 %cmp, label %if.then, label %if.end, !dbg !2086

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2087
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2088
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2087
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 712, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2089
  br label %if.end, !dbg !2090

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2091
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !2092
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !2092
  %server_name1 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %4, i32 0, i32 18, !dbg !2093
  %5 = load i8*, i8** %server_name.addr, align 8, !dbg !2094
  %call2 = call i8* @CloneString(i8** %server_name1, i8* %5), !dbg !2095
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2096
  %image_info3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 3, !dbg !2097
  %7 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info3, align 8, !dbg !2097
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2098
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2099
  %9 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2099
  %call4 = call i32 @AnimateImages(%struct._ImageInfo* %7, %struct._Image* %9), !dbg !2100
  store i32 %call4, i32* %status, align 4, !dbg !2101
  %10 = load i32, i32* %status, align 4, !dbg !2102
  %cmp5 = icmp eq i32 %10, 0, !dbg !2104
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !2105

if.then6:                                         ; preds = %if.end
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2106
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !2107
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2107
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2108
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !2109
  %14 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2109
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !2110
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception8), !dbg !2111
  br label %if.end9, !dbg !2111

if.end9:                                          ; preds = %if.then6, %if.end
  %15 = load i32, i32* %status, align 4, !dbg !2112
  ret i32 %15, !dbg !2113
}

declare dso_local i32 @AnimateImages(%struct._ImageInfo*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickAppendImages(%struct._MagickWand* %wand, i32 %stack) #0 !dbg !2114 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %stack.addr = alloca i32, align 4
  %append_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2118, metadata !DIExpression()), !dbg !2119
  store i32 %stack, i32* %stack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stack.addr, metadata !2120, metadata !DIExpression()), !dbg !2121
  call void @llvm.dbg.declare(metadata %struct._Image** %append_image, metadata !2122, metadata !DIExpression()), !dbg !2123
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2124
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2126
  %1 = load i32, i32* %debug, align 8, !dbg !2126
  %cmp = icmp ne i32 %1, 0, !dbg !2127
  br i1 %cmp, label %if.then, label %if.end, !dbg !2128

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2129
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2130
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2129
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 761, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2131
  br label %if.end, !dbg !2132

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2133
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2135
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2135
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2136
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2137

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !2138
  br label %return, !dbg !2138

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2139
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !2140
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !2140
  %7 = load i32, i32* %stack.addr, align 4, !dbg !2141
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2142
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !2143
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2143
  %call5 = call %struct._Image* @AppendImages(%struct._Image* %6, i32 %7, %struct._ExceptionInfo* %9), !dbg !2144
  store %struct._Image* %call5, %struct._Image** %append_image, align 8, !dbg !2145
  %10 = load %struct._Image*, %struct._Image** %append_image, align 8, !dbg !2146
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !2148
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2149

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !2150
  br label %return, !dbg !2150

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2151
  %12 = load %struct._Image*, %struct._Image** %append_image, align 8, !dbg !2152
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !2153
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !2154
  br label %return, !dbg !2154

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !2155
  ret %struct._MagickWand* %13, !dbg !2155
}

declare dso_local %struct._Image* @AppendImages(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %wand, %struct._Image* %images) #0 !dbg !2156 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %clone_wand = alloca %struct._MagickWand*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2159, metadata !DIExpression()), !dbg !2160
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %clone_wand, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2165
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2167
  %1 = load i32, i32* %debug, align 8, !dbg !2167
  %cmp = icmp ne i32 %1, 0, !dbg !2168
  br i1 %cmp, label %if.then, label %if.end, !dbg !2169

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2170
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2171
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2170
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2172
  br label %if.end, !dbg !2173

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @AcquireMagickMemory(i64 4160) #7, !dbg !2174
  %3 = bitcast i8* %call1 to %struct._MagickWand*, !dbg !2175
  store %struct._MagickWand* %3, %struct._MagickWand** %clone_wand, align 8, !dbg !2176
  %4 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2177
  %cmp2 = icmp eq %struct._MagickWand* %4, null, !dbg !2179
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !2180

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !2181, metadata !DIExpression()), !dbg !2183
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !2183
  %5 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2183
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 53, !dbg !2183
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2183
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 100, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2183
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !2183
  %call6 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !2183
  call void @MagickWandTerminus(), !dbg !2183
  call void @_exit(i32 1) #8, !dbg !2183
  unreachable, !dbg !2183

if.end7:                                          ; preds = %if.end
  %6 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2184
  %7 = bitcast %struct._MagickWand* %6 to i8*, !dbg !2184
  %call8 = call i8* @ResetMagickMemory(i8* %7, i32 0, i64 4160), !dbg !2185
  %call9 = call i64 @AcquireWandId(), !dbg !2186
  %8 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2187
  %id = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 0, !dbg !2188
  store i64 %call9, i64* %id, align 8, !dbg !2189
  %9 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2190
  %name10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !2191
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name10, i64 0, i64 0, !dbg !2190
  %10 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2192
  %id12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 0, !dbg !2193
  %11 = load i64, i64* %id12, align 8, !dbg !2193
  %conv = uitofp i64 %11 to double, !dbg !2194
  %call13 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay11, i64 4096, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), double %conv), !dbg !2195
  %call14 = call %struct._ExceptionInfo* @AcquireExceptionInfo(), !dbg !2196
  %12 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2197
  %exception15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !2198
  store %struct._ExceptionInfo* %call14, %struct._ExceptionInfo** %exception15, align 8, !dbg !2199
  %13 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2200
  %exception16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !2201
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception16, align 8, !dbg !2201
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2202
  %exception17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !2203
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception17, align 8, !dbg !2203
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %16), !dbg !2204
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2205
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 3, !dbg !2206
  %18 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !2206
  %call18 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %18), !dbg !2207
  %19 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2208
  %image_info19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 3, !dbg !2209
  store %struct._ImageInfo* %call18, %struct._ImageInfo** %image_info19, align 8, !dbg !2210
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2211
  %quantize_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 4, !dbg !2212
  %21 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !2212
  %call20 = call %struct._QuantizeInfo* @CloneQuantizeInfo(%struct._QuantizeInfo* %21), !dbg !2213
  %22 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2214
  %quantize_info21 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 4, !dbg !2215
  store %struct._QuantizeInfo* %call20, %struct._QuantizeInfo** %quantize_info21, align 8, !dbg !2216
  %23 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2217
  %24 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2218
  %images22 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %24, i32 0, i32 5, !dbg !2219
  store %struct._Image* %23, %struct._Image** %images22, align 8, !dbg !2220
  %call23 = call i32 @IsEventLogging(), !dbg !2221
  %25 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2222
  %debug24 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %25, i32 0, i32 8, !dbg !2223
  store i32 %call23, i32* %debug24, align 8, !dbg !2224
  %26 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2225
  %debug25 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %26, i32 0, i32 8, !dbg !2227
  %27 = load i32, i32* %debug25, align 8, !dbg !2227
  %cmp26 = icmp ne i32 %27, 0, !dbg !2228
  br i1 %cmp26, label %if.then28, label %if.end32, !dbg !2229

if.then28:                                        ; preds = %if.end7
  %28 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2230
  %name29 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %28, i32 0, i32 1, !dbg !2231
  %arraydecay30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name29, i64 0, i64 0, !dbg !2230
  %call31 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay30), !dbg !2232
  br label %if.end32, !dbg !2233

if.end32:                                         ; preds = %if.then28, %if.end7
  %29 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2234
  %signature = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %29, i32 0, i32 9, !dbg !2235
  store i64 2880220587, i64* %signature, align 8, !dbg !2236
  %30 = load %struct._MagickWand*, %struct._MagickWand** %clone_wand, align 8, !dbg !2237
  ret %struct._MagickWand* %30, !dbg !2238
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAutoGammaImage(%struct._MagickWand* %wand) #0 !dbg !2239 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2242, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2244, metadata !DIExpression()), !dbg !2245
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2246
  %call = call i32 @MagickAutoGammaImageChannel(%struct._MagickWand* %0, i32 134217719), !dbg !2247
  store i32 %call, i32* %status, align 4, !dbg !2248
  %1 = load i32, i32* %status, align 4, !dbg !2249
  ret i32 %1, !dbg !2250
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAutoGammaImageChannel(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !2251 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2254, metadata !DIExpression()), !dbg !2255
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2256, metadata !DIExpression()), !dbg !2257
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2258, metadata !DIExpression()), !dbg !2259
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2260
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2262
  %1 = load i32, i32* %debug, align 8, !dbg !2262
  %cmp = icmp ne i32 %1, 0, !dbg !2263
  br i1 %cmp, label %if.then, label %if.end, !dbg !2264

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2265
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2266
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2265
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 815, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2267
  br label %if.end, !dbg !2268

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2269
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2271
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2271
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2272
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2273

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2274
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2274
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2274
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2274
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2274
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2274
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 817, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2274
  store i32 0, i32* %retval, align 4, !dbg !2274
  br label %return, !dbg !2274

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2276
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2277
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2277
  %10 = load i32, i32* %channel.addr, align 4, !dbg !2278
  %call8 = call i32 @AutoGammaImageChannel(%struct._Image* %9, i32 %10), !dbg !2279
  store i32 %call8, i32* %status, align 4, !dbg !2280
  %11 = load i32, i32* %status, align 4, !dbg !2281
  %cmp9 = icmp eq i32 %11, 0, !dbg !2283
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2284

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2285
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !2286
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2286
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2287
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !2288
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !2288
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !2289
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !2290
  br label %if.end14, !dbg !2290

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !2291
  store i32 %16, i32* %retval, align 4, !dbg !2292
  br label %return, !dbg !2292

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !2293
  ret i32 %17, !dbg !2293
}

declare dso_local i32 @AutoGammaImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAutoLevelImage(%struct._MagickWand* %wand) #0 !dbg !2294 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2297, metadata !DIExpression()), !dbg !2298
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2299
  %call = call i32 @MagickAutoLevelImageChannel(%struct._MagickWand* %0, i32 134217719), !dbg !2300
  store i32 %call, i32* %status, align 4, !dbg !2301
  %1 = load i32, i32* %status, align 4, !dbg !2302
  ret i32 %1, !dbg !2303
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickAutoLevelImageChannel(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !2304 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2305, metadata !DIExpression()), !dbg !2306
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2307, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2309, metadata !DIExpression()), !dbg !2310
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2311
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2313
  %1 = load i32, i32* %debug, align 8, !dbg !2313
  %cmp = icmp ne i32 %1, 0, !dbg !2314
  br i1 %cmp, label %if.then, label %if.end, !dbg !2315

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2316
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2317
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2316
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 869, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2318
  br label %if.end, !dbg !2319

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2320
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2322
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2322
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2323
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2324

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2325
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2325
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2325
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2325
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2325
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2325
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 871, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2325
  store i32 0, i32* %retval, align 4, !dbg !2325
  br label %return, !dbg !2325

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2327
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2328
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2328
  %10 = load i32, i32* %channel.addr, align 4, !dbg !2329
  %call8 = call i32 @AutoLevelImageChannel(%struct._Image* %9, i32 %10), !dbg !2330
  store i32 %call8, i32* %status, align 4, !dbg !2331
  %11 = load i32, i32* %status, align 4, !dbg !2332
  %cmp9 = icmp eq i32 %11, 0, !dbg !2334
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2335

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2336
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !2337
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2337
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2338
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !2339
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !2339
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !2340
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !2341
  br label %if.end14, !dbg !2341

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !2342
  store i32 %16, i32* %retval, align 4, !dbg !2343
  br label %return, !dbg !2343

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !2344
  ret i32 %17, !dbg !2344
}

declare dso_local i32 @AutoLevelImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBlackThresholdImage(%struct._MagickWand* %wand, %struct._PixelWand* %threshold) #0 !dbg !2345 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold.addr = alloca %struct._PixelWand*, align 8
  %thresholds = alloca [4096 x i8], align 16
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2350, metadata !DIExpression()), !dbg !2351
  store %struct._PixelWand* %threshold, %struct._PixelWand** %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %threshold.addr, metadata !2352, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.declare(metadata [4096 x i8]* %thresholds, metadata !2354, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2356, metadata !DIExpression()), !dbg !2357
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2358
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2360
  %1 = load i32, i32* %debug, align 8, !dbg !2360
  %cmp = icmp ne i32 %1, 0, !dbg !2361
  br i1 %cmp, label %if.then, label %if.end, !dbg !2362

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2363
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2364
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2363
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 917, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2365
  br label %if.end, !dbg !2366

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2367
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2369
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2369
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2370
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2371

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2372
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2372
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2372
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2372
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2372
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2372
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 919, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2372
  store i32 0, i32* %retval, align 4, !dbg !2372
  br label %return, !dbg !2372

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %thresholds, i64 0, i64 0, !dbg !2374
  %8 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !2375
  %call8 = call zeroext i16 @PixelGetRedQuantum(%struct._PixelWand* %8), !dbg !2376
  %conv = zext i16 %call8 to i32, !dbg !2376
  %9 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !2377
  %call9 = call zeroext i16 @PixelGetGreenQuantum(%struct._PixelWand* %9), !dbg !2378
  %conv10 = zext i16 %call9 to i32, !dbg !2378
  %10 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !2379
  %call11 = call zeroext i16 @PixelGetBlueQuantum(%struct._PixelWand* %10), !dbg !2380
  %conv12 = zext i16 %call11 to i32, !dbg !2380
  %11 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !2381
  %call13 = call zeroext i16 @PixelGetOpacityQuantum(%struct._PixelWand* %11), !dbg !2382
  %conv14 = zext i16 %call13 to i32, !dbg !2382
  %call15 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay7, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 %conv, i32 %conv10, i32 %conv12, i32 %conv14), !dbg !2383
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2384
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !2385
  %13 = load %struct._Image*, %struct._Image** %images16, align 8, !dbg !2385
  %arraydecay17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %thresholds, i64 0, i64 0, !dbg !2386
  %call18 = call i32 @BlackThresholdImage(%struct._Image* %13, i8* %arraydecay17), !dbg !2387
  store i32 %call18, i32* %status, align 4, !dbg !2388
  %14 = load i32, i32* %status, align 4, !dbg !2389
  %cmp19 = icmp eq i32 %14, 0, !dbg !2391
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !2392

if.then21:                                        ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2393
  %exception22 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !2394
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception22, align 8, !dbg !2394
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2395
  %images23 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !2396
  %18 = load %struct._Image*, %struct._Image** %images23, align 8, !dbg !2396
  %exception24 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !2397
  call void @InheritException(%struct._ExceptionInfo* %16, %struct._ExceptionInfo* %exception24), !dbg !2398
  br label %if.end25, !dbg !2398

if.end25:                                         ; preds = %if.then21, %if.end6
  %19 = load i32, i32* %status, align 4, !dbg !2399
  store i32 %19, i32* %retval, align 4, !dbg !2400
  br label %return, !dbg !2400

return:                                           ; preds = %if.end25, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !2401
  ret i32 %20, !dbg !2401
}

declare dso_local zeroext i16 @PixelGetRedQuantum(%struct._PixelWand*) #2

declare dso_local zeroext i16 @PixelGetGreenQuantum(%struct._PixelWand*) #2

declare dso_local zeroext i16 @PixelGetBlueQuantum(%struct._PixelWand*) #2

declare dso_local zeroext i16 @PixelGetOpacityQuantum(%struct._PixelWand*) #2

declare dso_local i32 @BlackThresholdImage(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBlueShiftImage(%struct._MagickWand* %wand, double %factor) #0 !dbg !2402 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %factor.addr = alloca double, align 8
  %shift_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2405, metadata !DIExpression()), !dbg !2406
  store double %factor, double* %factor.addr, align 8
  call void @llvm.dbg.declare(metadata double* %factor.addr, metadata !2407, metadata !DIExpression()), !dbg !2408
  call void @llvm.dbg.declare(metadata %struct._Image** %shift_image, metadata !2409, metadata !DIExpression()), !dbg !2410
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2411
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2413
  %1 = load i32, i32* %debug, align 8, !dbg !2413
  %cmp = icmp ne i32 %1, 0, !dbg !2414
  br i1 %cmp, label %if.then, label %if.end, !dbg !2415

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2416
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2417
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2416
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 965, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2418
  br label %if.end, !dbg !2419

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2420
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2422
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2422
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2423
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2424

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2425
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2425
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2425
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2425
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2425
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2425
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 967, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2425
  store i32 0, i32* %retval, align 4, !dbg !2425
  br label %return, !dbg !2425

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2427
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2428
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2428
  %10 = load double, double* %factor.addr, align 8, !dbg !2429
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2430
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !2431
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !2431
  %call9 = call %struct._Image* @BlueShiftImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !2432
  store %struct._Image* %call9, %struct._Image** %shift_image, align 8, !dbg !2433
  %13 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2434
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !2436
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2437

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !2438
  br label %return, !dbg !2438

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2439
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !2440
  %15 = load %struct._Image*, %struct._Image** %shift_image, align 8, !dbg !2441
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !2442
  store i32 1, i32* %retval, align 4, !dbg !2443
  br label %return, !dbg !2443

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !2444
  ret i32 %16, !dbg !2444
}

declare dso_local %struct._Image* @BlueShiftImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBlurImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !2445 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2446, metadata !DIExpression()), !dbg !2447
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !2448, metadata !DIExpression()), !dbg !2449
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !2450, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2452, metadata !DIExpression()), !dbg !2453
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2454
  %1 = load double, double* %radius.addr, align 8, !dbg !2455
  %2 = load double, double* %sigma.addr, align 8, !dbg !2456
  %call = call i32 @MagickBlurImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !2457
  store i32 %call, i32* %status, align 4, !dbg !2458
  %3 = load i32, i32* %status, align 4, !dbg !2459
  ret i32 %3, !dbg !2460
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBlurImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma) #0 !dbg !2461 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %blur_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2462, metadata !DIExpression()), !dbg !2463
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2464, metadata !DIExpression()), !dbg !2465
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !2466, metadata !DIExpression()), !dbg !2467
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !2468, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !2470, metadata !DIExpression()), !dbg !2471
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2472
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2474
  %1 = load i32, i32* %debug, align 8, !dbg !2474
  %cmp = icmp ne i32 %1, 0, !dbg !2475
  br i1 %cmp, label %if.then, label %if.end, !dbg !2476

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2477
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2478
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2477
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1030, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2479
  br label %if.end, !dbg !2480

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2481
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2483
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2483
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2484
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2485

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2486
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2486
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2486
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2486
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2486
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2486
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1032, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2486
  store i32 0, i32* %retval, align 4, !dbg !2486
  br label %return, !dbg !2486

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2488
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2489
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2489
  %10 = load i32, i32* %channel.addr, align 4, !dbg !2490
  %11 = load double, double* %radius.addr, align 8, !dbg !2491
  %12 = load double, double* %sigma.addr, align 8, !dbg !2492
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2493
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !2494
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !2494
  %call9 = call %struct._Image* @BlurImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !2495
  store %struct._Image* %call9, %struct._Image** %blur_image, align 8, !dbg !2496
  %15 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !2497
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !2499
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2500

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !2501
  br label %return, !dbg !2501

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2502
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !2503
  %17 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !2504
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !2505
  store i32 1, i32* %retval, align 4, !dbg !2506
  br label %return, !dbg !2506

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !2507
  ret i32 %18, !dbg !2507
}

declare dso_local %struct._Image* @BlurImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBorderImage(%struct._MagickWand* %wand, %struct._PixelWand* %bordercolor, i64 %width, i64 %height) #0 !dbg !2508 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %bordercolor.addr = alloca %struct._PixelWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %border_image = alloca %struct._Image*, align 8
  %border_info = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2511, metadata !DIExpression()), !dbg !2512
  store %struct._PixelWand* %bordercolor, %struct._PixelWand** %bordercolor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %bordercolor.addr, metadata !2513, metadata !DIExpression()), !dbg !2514
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2515, metadata !DIExpression()), !dbg !2516
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2517, metadata !DIExpression()), !dbg !2518
  call void @llvm.dbg.declare(metadata %struct._Image** %border_image, metadata !2519, metadata !DIExpression()), !dbg !2520
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %border_info, metadata !2521, metadata !DIExpression()), !dbg !2522
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2523
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2525
  %1 = load i32, i32* %debug, align 8, !dbg !2525
  %cmp = icmp ne i32 %1, 0, !dbg !2526
  br i1 %cmp, label %if.then, label %if.end, !dbg !2527

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2528
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2529
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2528
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1084, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2530
  br label %if.end, !dbg !2531

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2532
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2534
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2534
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2535
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2536

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2537
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2537
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2537
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2537
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2537
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2537
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1086, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2537
  store i32 0, i32* %retval, align 4, !dbg !2537
  br label %return, !dbg !2537

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !2539
  %width7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 0, !dbg !2540
  store i64 %8, i64* %width7, align 8, !dbg !2541
  %9 = load i64, i64* %height.addr, align 8, !dbg !2542
  %height8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 1, !dbg !2543
  store i64 %9, i64* %height8, align 8, !dbg !2544
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 2, !dbg !2545
  store i64 0, i64* %x, align 8, !dbg !2546
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %border_info, i32 0, i32 3, !dbg !2547
  store i64 0, i64* %y, align 8, !dbg !2548
  %10 = load %struct._PixelWand*, %struct._PixelWand** %bordercolor.addr, align 8, !dbg !2549
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2550
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !2551
  %12 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !2551
  %border_color = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 13, !dbg !2552
  call void @PixelGetQuantumColor(%struct._PixelWand* %10, %struct._PixelPacket* %border_color), !dbg !2553
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2554
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !2555
  %14 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !2555
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2556
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !2557
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2557
  %call12 = call %struct._Image* @BorderImage(%struct._Image* %14, %struct._RectangleInfo* %border_info, %struct._ExceptionInfo* %16), !dbg !2558
  store %struct._Image* %call12, %struct._Image** %border_image, align 8, !dbg !2559
  %17 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !2560
  %cmp13 = icmp eq %struct._Image* %17, null, !dbg !2562
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !2563

if.then14:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !2564
  br label %return, !dbg !2564

if.end15:                                         ; preds = %if.end6
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2565
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !2566
  %19 = load %struct._Image*, %struct._Image** %border_image, align 8, !dbg !2567
  call void @ReplaceImageInList(%struct._Image** %images16, %struct._Image* %19), !dbg !2568
  store i32 1, i32* %retval, align 4, !dbg !2569
  br label %return, !dbg !2569

return:                                           ; preds = %if.end15, %if.then14, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !2570
  ret i32 %20, !dbg !2570
}

declare dso_local void @PixelGetQuantumColor(%struct._PixelWand*, %struct._PixelPacket*) #2

declare dso_local %struct._Image* @BorderImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBrightnessContrastImage(%struct._MagickWand* %wand, double %brightness, double %contrast) #0 !dbg !2571 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %brightness.addr = alloca double, align 8
  %contrast.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2572, metadata !DIExpression()), !dbg !2573
  store double %brightness, double* %brightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %brightness.addr, metadata !2574, metadata !DIExpression()), !dbg !2575
  store double %contrast, double* %contrast.addr, align 8
  call void @llvm.dbg.declare(metadata double* %contrast.addr, metadata !2576, metadata !DIExpression()), !dbg !2577
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2578, metadata !DIExpression()), !dbg !2579
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2580
  %1 = load double, double* %brightness.addr, align 8, !dbg !2581
  %2 = load double, double* %contrast.addr, align 8, !dbg !2582
  %call = call i32 @MagickBrightnessContrastImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !2583
  store i32 %call, i32* %status, align 4, !dbg !2584
  %3 = load i32, i32* %status, align 4, !dbg !2585
  ret i32 %3, !dbg !2586
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickBrightnessContrastImageChannel(%struct._MagickWand* %wand, i32 %channel, double %brightness, double %contrast) #0 !dbg !2587 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %brightness.addr = alloca double, align 8
  %contrast.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2588, metadata !DIExpression()), !dbg !2589
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2590, metadata !DIExpression()), !dbg !2591
  store double %brightness, double* %brightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %brightness.addr, metadata !2592, metadata !DIExpression()), !dbg !2593
  store double %contrast, double* %contrast.addr, align 8
  call void @llvm.dbg.declare(metadata double* %contrast.addr, metadata !2594, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2596, metadata !DIExpression()), !dbg !2597
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2598
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2600
  %1 = load i32, i32* %debug, align 8, !dbg !2600
  %cmp = icmp ne i32 %1, 0, !dbg !2601
  br i1 %cmp, label %if.then, label %if.end, !dbg !2602

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2603
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2604
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2603
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1155, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2605
  br label %if.end, !dbg !2606

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2607
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2609
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2609
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2610
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2611

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2612
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2612
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2612
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2612
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2612
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2612
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1157, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2612
  store i32 0, i32* %retval, align 4, !dbg !2612
  br label %return, !dbg !2612

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2614
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2615
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2615
  %10 = load i32, i32* %channel.addr, align 4, !dbg !2616
  %11 = load double, double* %brightness.addr, align 8, !dbg !2617
  %12 = load double, double* %contrast.addr, align 8, !dbg !2618
  %call8 = call i32 @BrightnessContrastImageChannel(%struct._Image* %9, i32 %10, double %11, double %12), !dbg !2619
  store i32 %call8, i32* %status, align 4, !dbg !2620
  %13 = load i32, i32* %status, align 4, !dbg !2621
  %cmp9 = icmp eq i32 %13, 0, !dbg !2623
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2624

if.then10:                                        ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2625
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !2626
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2626
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2627
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !2628
  %17 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !2628
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !2629
  call void @InheritException(%struct._ExceptionInfo* %15, %struct._ExceptionInfo* %exception13), !dbg !2630
  br label %if.end14, !dbg !2630

if.end14:                                         ; preds = %if.then10, %if.end6
  %18 = load i32, i32* %status, align 4, !dbg !2631
  store i32 %18, i32* %retval, align 4, !dbg !2632
  br label %return, !dbg !2632

return:                                           ; preds = %if.end14, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !2633
  ret i32 %19, !dbg !2633
}

declare dso_local i32 @BrightnessContrastImageChannel(%struct._Image*, i32, double, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCharcoalImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !2634 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %charcoal_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !2637, metadata !DIExpression()), !dbg !2638
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !2639, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.declare(metadata %struct._Image** %charcoal_image, metadata !2641, metadata !DIExpression()), !dbg !2642
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2643
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2645
  %1 = load i32, i32* %debug, align 8, !dbg !2645
  %cmp = icmp ne i32 %1, 0, !dbg !2646
  br i1 %cmp, label %if.then, label %if.end, !dbg !2647

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2648
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2649
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2648
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1202, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2650
  br label %if.end, !dbg !2651

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2652
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2654
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2654
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2655
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2656

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2657
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2657
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2657
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2657
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2657
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2657
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1204, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2657
  store i32 0, i32* %retval, align 4, !dbg !2657
  br label %return, !dbg !2657

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2659
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2660
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2660
  %10 = load double, double* %radius.addr, align 8, !dbg !2661
  %11 = load double, double* %sigma.addr, align 8, !dbg !2662
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2663
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !2664
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !2664
  %call9 = call %struct._Image* @CharcoalImage(%struct._Image* %9, double %10, double %11, %struct._ExceptionInfo* %13), !dbg !2665
  store %struct._Image* %call9, %struct._Image** %charcoal_image, align 8, !dbg !2666
  %14 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2667
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !2669
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2670

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !2671
  br label %return, !dbg !2671

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2672
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !2673
  %16 = load %struct._Image*, %struct._Image** %charcoal_image, align 8, !dbg !2674
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !2675
  store i32 1, i32* %retval, align 4, !dbg !2676
  br label %return, !dbg !2676

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !2677
  ret i32 %17, !dbg !2677
}

declare dso_local %struct._Image* @CharcoalImage(%struct._Image*, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickChopImage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y) #0 !dbg !2678 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %chop_image = alloca %struct._Image*, align 8
  %chop = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2681, metadata !DIExpression()), !dbg !2682
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2683, metadata !DIExpression()), !dbg !2684
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2685, metadata !DIExpression()), !dbg !2686
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !2687, metadata !DIExpression()), !dbg !2688
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !2689, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.declare(metadata %struct._Image** %chop_image, metadata !2691, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %chop, metadata !2693, metadata !DIExpression()), !dbg !2694
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2695
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2697
  %1 = load i32, i32* %debug, align 8, !dbg !2697
  %cmp = icmp ne i32 %1, 0, !dbg !2698
  br i1 %cmp, label %if.then, label %if.end, !dbg !2699

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2700
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2701
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2700
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2702
  br label %if.end, !dbg !2703

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2704
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2706
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2706
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2707
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2708

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2709
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2709
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2709
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2709
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2709
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2709
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1258, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2709
  store i32 0, i32* %retval, align 4, !dbg !2709
  br label %return, !dbg !2709

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !2711
  %width7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %chop, i32 0, i32 0, !dbg !2712
  store i64 %8, i64* %width7, align 8, !dbg !2713
  %9 = load i64, i64* %height.addr, align 8, !dbg !2714
  %height8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %chop, i32 0, i32 1, !dbg !2715
  store i64 %9, i64* %height8, align 8, !dbg !2716
  %10 = load i64, i64* %x.addr, align 8, !dbg !2717
  %x9 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %chop, i32 0, i32 2, !dbg !2718
  store i64 %10, i64* %x9, align 8, !dbg !2719
  %11 = load i64, i64* %y.addr, align 8, !dbg !2720
  %y10 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %chop, i32 0, i32 3, !dbg !2721
  store i64 %11, i64* %y10, align 8, !dbg !2722
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2723
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !2724
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !2724
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2725
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !2726
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !2726
  %call13 = call %struct._Image* @ChopImage(%struct._Image* %13, %struct._RectangleInfo* %chop, %struct._ExceptionInfo* %15), !dbg !2727
  store %struct._Image* %call13, %struct._Image** %chop_image, align 8, !dbg !2728
  %16 = load %struct._Image*, %struct._Image** %chop_image, align 8, !dbg !2729
  %cmp14 = icmp eq %struct._Image* %16, null, !dbg !2731
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2732

if.then15:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !2733
  br label %return, !dbg !2733

if.end16:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2734
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !2735
  %18 = load %struct._Image*, %struct._Image** %chop_image, align 8, !dbg !2736
  call void @ReplaceImageInList(%struct._Image** %images17, %struct._Image* %18), !dbg !2737
  store i32 1, i32* %retval, align 4, !dbg !2738
  br label %return, !dbg !2738

return:                                           ; preds = %if.end16, %if.then15, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !2739
  ret i32 %19, !dbg !2739
}

declare dso_local %struct._Image* @ChopImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickClampImage(%struct._MagickWand* %wand) #0 !dbg !2740 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2741, metadata !DIExpression()), !dbg !2742
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2743, metadata !DIExpression()), !dbg !2744
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2745
  %call = call i32 @MagickClampImageChannel(%struct._MagickWand* %0, i32 134217719), !dbg !2746
  store i32 %call, i32* %status, align 4, !dbg !2747
  %1 = load i32, i32* %status, align 4, !dbg !2748
  ret i32 %1, !dbg !2749
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickClampImageChannel(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !2750 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2751, metadata !DIExpression()), !dbg !2752
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2753, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2755, metadata !DIExpression()), !dbg !2756
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2757
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2759
  %1 = load i32, i32* %debug, align 8, !dbg !2759
  %cmp = icmp ne i32 %1, 0, !dbg !2760
  br i1 %cmp, label %if.then, label %if.end, !dbg !2761

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2762
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2763
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2762
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1315, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2764
  br label %if.end, !dbg !2765

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2766
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2768
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2768
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2769
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2770

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2771
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2771
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2771
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2771
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2771
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2771
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1317, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2771
  store i32 0, i32* %retval, align 4, !dbg !2771
  br label %return, !dbg !2771

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2773
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2774
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2774
  %10 = load i32, i32* %channel.addr, align 4, !dbg !2775
  %call8 = call i32 @ClampImageChannel(%struct._Image* %9, i32 %10), !dbg !2776
  store i32 %call8, i32* %status, align 4, !dbg !2777
  %11 = load i32, i32* %status, align 4, !dbg !2778
  %cmp9 = icmp eq i32 %11, 0, !dbg !2780
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2781

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2782
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !2783
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2783
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2784
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !2785
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !2785
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !2786
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !2787
  br label %if.end14, !dbg !2787

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !2788
  store i32 %16, i32* %retval, align 4, !dbg !2789
  br label %return, !dbg !2789

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !2790
  ret i32 %17, !dbg !2790
}

declare dso_local i32 @ClampImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickClipImage(%struct._MagickWand* %wand) #0 !dbg !2791 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2794, metadata !DIExpression()), !dbg !2795
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2796
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2798
  %1 = load i32, i32* %debug, align 8, !dbg !2798
  %cmp = icmp ne i32 %1, 0, !dbg !2799
  br i1 %cmp, label %if.then, label %if.end, !dbg !2800

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2801
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2802
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2801
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1355, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2803
  br label %if.end, !dbg !2804

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2805
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2807
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2807
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2808
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2809

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2810
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2810
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2810
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2810
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2810
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2810
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1357, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2810
  store i32 0, i32* %retval, align 4, !dbg !2810
  br label %return, !dbg !2810

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2812
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2813
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2813
  %call8 = call i32 @ClipImage(%struct._Image* %9), !dbg !2814
  store i32 %call8, i32* %status, align 4, !dbg !2815
  %10 = load i32, i32* %status, align 4, !dbg !2816
  %cmp9 = icmp eq i32 %10, 0, !dbg !2818
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2819

if.then10:                                        ; preds = %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2820
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !2821
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2821
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2822
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !2823
  %14 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !2823
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !2824
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception13), !dbg !2825
  br label %if.end14, !dbg !2825

if.end14:                                         ; preds = %if.then10, %if.end6
  %15 = load i32, i32* %status, align 4, !dbg !2826
  store i32 %15, i32* %retval, align 4, !dbg !2827
  br label %return, !dbg !2827

return:                                           ; preds = %if.end14, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !2828
  ret i32 %16, !dbg !2828
}

declare dso_local i32 @ClipImage(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickClipImagePath(%struct._MagickWand* %wand, i8* %pathname, i32 %inside) #0 !dbg !2829 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %pathname.addr = alloca i8*, align 8
  %inside.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2832, metadata !DIExpression()), !dbg !2833
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !2834, metadata !DIExpression()), !dbg !2835
  store i32 %inside, i32* %inside.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inside.addr, metadata !2836, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2838, metadata !DIExpression()), !dbg !2839
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2840
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2842
  %1 = load i32, i32* %debug, align 8, !dbg !2842
  %cmp = icmp ne i32 %1, 0, !dbg !2843
  br i1 %cmp, label %if.then, label %if.end, !dbg !2844

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2845
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2846
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2845
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1405, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2847
  br label %if.end, !dbg !2848

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2849
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2851
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2851
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2852
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2853

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2854
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2854
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2854
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2854
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2854
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2854
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1407, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2854
  store i32 0, i32* %retval, align 4, !dbg !2854
  br label %return, !dbg !2854

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2856
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !2857
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !2857
  %10 = load i8*, i8** %pathname.addr, align 8, !dbg !2858
  %11 = load i32, i32* %inside.addr, align 4, !dbg !2859
  %call8 = call i32 @ClipImagePath(%struct._Image* %9, i8* %10, i32 %11), !dbg !2860
  store i32 %call8, i32* %status, align 4, !dbg !2861
  %12 = load i32, i32* %status, align 4, !dbg !2862
  %cmp9 = icmp eq i32 %12, 0, !dbg !2864
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2865

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2866
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !2867
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2867
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2868
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !2869
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !2869
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !2870
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !2871
  br label %if.end14, !dbg !2871

if.end14:                                         ; preds = %if.then10, %if.end6
  %17 = load i32, i32* %status, align 4, !dbg !2872
  store i32 %17, i32* %retval, align 4, !dbg !2873
  br label %return, !dbg !2873

return:                                           ; preds = %if.end14, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !2874
  ret i32 %18, !dbg !2874
}

declare dso_local i32 @ClipImagePath(%struct._Image*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickClutImage(%struct._MagickWand* %wand, %struct._MagickWand* %clut_wand) #0 !dbg !2875 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %clut_wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2876, metadata !DIExpression()), !dbg !2877
  store %struct._MagickWand* %clut_wand, %struct._MagickWand** %clut_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %clut_wand.addr, metadata !2878, metadata !DIExpression()), !dbg !2879
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2880, metadata !DIExpression()), !dbg !2881
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2882
  %1 = load %struct._MagickWand*, %struct._MagickWand** %clut_wand.addr, align 8, !dbg !2883
  %call = call i32 @MagickClutImageChannel(%struct._MagickWand* %0, i32 134217719, %struct._MagickWand* %1), !dbg !2884
  store i32 %call, i32* %status, align 4, !dbg !2885
  %2 = load i32, i32* %status, align 4, !dbg !2886
  ret i32 %2, !dbg !2887
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickClutImageChannel(%struct._MagickWand* %wand, i32 %channel, %struct._MagickWand* %clut_wand) #0 !dbg !2888 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %clut_wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2891, metadata !DIExpression()), !dbg !2892
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2893, metadata !DIExpression()), !dbg !2894
  store %struct._MagickWand* %clut_wand, %struct._MagickWand** %clut_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %clut_wand.addr, metadata !2895, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2897, metadata !DIExpression()), !dbg !2898
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2899
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2901
  %1 = load i32, i32* %debug, align 8, !dbg !2901
  %cmp = icmp ne i32 %1, 0, !dbg !2902
  br i1 %cmp, label %if.then, label %if.end, !dbg !2903

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2904
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2905
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2904
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1461, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2906
  br label %if.end, !dbg !2907

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2908
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2910
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2910
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2911
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !2912

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %clut_wand.addr, align 8, !dbg !2913
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !2914
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !2914
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !2915
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !2916

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2917
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !2917
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2917
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2917
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !2917
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !2917
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1463, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !2917
  store i32 0, i32* %retval, align 4, !dbg !2917
  br label %return, !dbg !2917

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2919
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !2920
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !2920
  %12 = load i32, i32* %channel.addr, align 4, !dbg !2921
  %13 = load %struct._MagickWand*, %struct._MagickWand** %clut_wand.addr, align 8, !dbg !2922
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !2923
  %14 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !2923
  %call11 = call i32 @ClutImageChannel(%struct._Image* %11, i32 %12, %struct._Image* %14), !dbg !2924
  store i32 %call11, i32* %status, align 4, !dbg !2925
  %15 = load i32, i32* %status, align 4, !dbg !2926
  %cmp12 = icmp eq i32 %15, 0, !dbg !2928
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !2929

if.then13:                                        ; preds = %if.end8
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2930
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !2931
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !2931
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2932
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !2933
  %19 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !2933
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !2934
  call void @InheritException(%struct._ExceptionInfo* %17, %struct._ExceptionInfo* %exception16), !dbg !2935
  br label %if.end17, !dbg !2935

if.end17:                                         ; preds = %if.then13, %if.end8
  %20 = load i32, i32* %status, align 4, !dbg !2936
  store i32 %20, i32* %retval, align 4, !dbg !2937
  br label %return, !dbg !2937

return:                                           ; preds = %if.end17, %if.then4
  %21 = load i32, i32* %retval, align 4, !dbg !2938
  ret i32 %21, !dbg !2938
}

declare dso_local i32 @ClutImageChannel(%struct._Image*, i32, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickCoalesceImages(%struct._MagickWand* %wand) #0 !dbg !2939 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %coalesce_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2942, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.declare(metadata %struct._Image** %coalesce_image, metadata !2944, metadata !DIExpression()), !dbg !2945
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2946
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2948
  %1 = load i32, i32* %debug, align 8, !dbg !2948
  %cmp = icmp ne i32 %1, 0, !dbg !2949
  br i1 %cmp, label %if.then, label %if.end, !dbg !2950

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2951
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2952
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2951
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1505, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2953
  br label %if.end, !dbg !2954

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2955
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2957
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2957
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2958
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2959

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !2960
  br label %return, !dbg !2960

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2961
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !2962
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !2962
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2963
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !2964
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2964
  %call5 = call %struct._Image* @CoalesceImages(%struct._Image* %6, %struct._ExceptionInfo* %8), !dbg !2965
  store %struct._Image* %call5, %struct._Image** %coalesce_image, align 8, !dbg !2966
  %9 = load %struct._Image*, %struct._Image** %coalesce_image, align 8, !dbg !2967
  %cmp6 = icmp eq %struct._Image* %9, null, !dbg !2969
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2970

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !2971
  br label %return, !dbg !2971

if.end8:                                          ; preds = %if.end3
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2972
  %11 = load %struct._Image*, %struct._Image** %coalesce_image, align 8, !dbg !2973
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %10, %struct._Image* %11), !dbg !2974
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !2975
  br label %return, !dbg !2975

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %12 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !2976
  ret %struct._MagickWand* %12, !dbg !2976
}

declare dso_local %struct._Image* @CoalesceImages(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickColorDecisionListImage(%struct._MagickWand* %wand, i8* %color_correction_collection) #0 !dbg !2977 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %color_correction_collection.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !2978, metadata !DIExpression()), !dbg !2979
  store i8* %color_correction_collection, i8** %color_correction_collection.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color_correction_collection.addr, metadata !2980, metadata !DIExpression()), !dbg !2981
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2982, metadata !DIExpression()), !dbg !2983
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2984
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !2986
  %1 = load i32, i32* %debug, align 8, !dbg !2986
  %cmp = icmp ne i32 %1, 0, !dbg !2987
  br i1 %cmp, label %if.then, label %if.end, !dbg !2988

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2989
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !2990
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2989
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1566, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2991
  br label %if.end, !dbg !2992

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2993
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !2995
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !2995
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !2996
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2997

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2998
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !2998
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2998
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !2998
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !2998
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !2998
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1568, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !2998
  store i32 0, i32* %retval, align 4, !dbg !2998
  br label %return, !dbg !2998

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3000
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3001
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3001
  %10 = load i8*, i8** %color_correction_collection.addr, align 8, !dbg !3002
  %call8 = call i32 @ColorDecisionListImage(%struct._Image* %9, i8* %10), !dbg !3003
  store i32 %call8, i32* %status, align 4, !dbg !3004
  %11 = load i32, i32* %status, align 4, !dbg !3005
  %cmp9 = icmp eq i32 %11, 0, !dbg !3007
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3008

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3009
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !3010
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3010
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3011
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !3012
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !3012
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !3013
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !3014
  br label %if.end14, !dbg !3014

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !3015
  store i32 %16, i32* %retval, align 4, !dbg !3016
  br label %return, !dbg !3016

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !3017
  ret i32 %17, !dbg !3017
}

declare dso_local i32 @ColorDecisionListImage(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickColorizeImage(%struct._MagickWand* %wand, %struct._PixelWand* %colorize, %struct._PixelWand* %opacity) #0 !dbg !3018 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %colorize.addr = alloca %struct._PixelWand*, align 8
  %opacity.addr = alloca %struct._PixelWand*, align 8
  %percent_opaque = alloca [4096 x i8], align 16
  %colorize_image = alloca %struct._Image*, align 8
  %target = alloca %struct._PixelPacket, align 2
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3021, metadata !DIExpression()), !dbg !3022
  store %struct._PixelWand* %colorize, %struct._PixelWand** %colorize.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %colorize.addr, metadata !3023, metadata !DIExpression()), !dbg !3024
  store %struct._PixelWand* %opacity, %struct._PixelWand** %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %opacity.addr, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.declare(metadata [4096 x i8]* %percent_opaque, metadata !3027, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata %struct._Image** %colorize_image, metadata !3029, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !3031, metadata !DIExpression()), !dbg !3032
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3033
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3035
  %1 = load i32, i32* %debug, align 8, !dbg !3035
  %cmp = icmp ne i32 %1, 0, !dbg !3036
  br i1 %cmp, label %if.then, label %if.end, !dbg !3037

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3038
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3039
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3038
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1617, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3040
  br label %if.end, !dbg !3041

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3042
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3044
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3044
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3045
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3046

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3047
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3047
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3047
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3047
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3047
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3047
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1619, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3047
  store i32 0, i32* %retval, align 4, !dbg !3047
  br label %return, !dbg !3047

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %percent_opaque, i64 0, i64 0, !dbg !3049
  %8 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !3050
  %call8 = call zeroext i16 @PixelGetRedQuantum(%struct._PixelWand* %8), !dbg !3051
  %conv = zext i16 %call8 to i32, !dbg !3051
  %conv9 = sitofp i32 %conv to double, !dbg !3051
  %mul = fmul double 0x3F59001900190019, %conv9, !dbg !3052
  %9 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !3053
  %call10 = call zeroext i16 @PixelGetGreenQuantum(%struct._PixelWand* %9), !dbg !3054
  %conv11 = zext i16 %call10 to i32, !dbg !3054
  %conv12 = sitofp i32 %conv11 to double, !dbg !3054
  %mul13 = fmul double 0x3F59001900190019, %conv12, !dbg !3055
  %10 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !3056
  %call14 = call zeroext i16 @PixelGetBlueQuantum(%struct._PixelWand* %10), !dbg !3057
  %conv15 = zext i16 %call14 to i32, !dbg !3057
  %conv16 = sitofp i32 %conv15 to double, !dbg !3057
  %mul17 = fmul double 0x3F59001900190019, %conv16, !dbg !3058
  %11 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !3059
  %call18 = call zeroext i16 @PixelGetOpacityQuantum(%struct._PixelWand* %11), !dbg !3060
  %conv19 = zext i16 %call18 to i32, !dbg !3060
  %conv20 = sitofp i32 %conv19 to double, !dbg !3060
  %mul21 = fmul double 0x3F59001900190019, %conv20, !dbg !3061
  %call22 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay7, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), double %mul, double %mul13, double %mul17, double %mul21), !dbg !3062
  %12 = load %struct._PixelWand*, %struct._PixelWand** %colorize.addr, align 8, !dbg !3063
  call void @PixelGetQuantumColor(%struct._PixelWand* %12, %struct._PixelPacket* %target), !dbg !3064
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3065
  %images23 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !3066
  %14 = load %struct._Image*, %struct._Image** %images23, align 8, !dbg !3066
  %arraydecay24 = getelementptr inbounds [4096 x i8], [4096 x i8]* %percent_opaque, i64 0, i64 0, !dbg !3067
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3068
  %exception25 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !3069
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception25, align 8, !dbg !3069
  %17 = bitcast %struct._PixelPacket* %target to i64*, !dbg !3070
  %18 = load i64, i64* %17, align 2, !dbg !3070
  %call26 = call %struct._Image* @ColorizeImage(%struct._Image* %14, i8* %arraydecay24, i64 %18, %struct._ExceptionInfo* %16), !dbg !3070
  store %struct._Image* %call26, %struct._Image** %colorize_image, align 8, !dbg !3071
  %19 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !3072
  %cmp27 = icmp eq %struct._Image* %19, null, !dbg !3074
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !3075

if.then29:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !3076
  br label %return, !dbg !3076

if.end30:                                         ; preds = %if.end6
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3077
  %images31 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 5, !dbg !3078
  %21 = load %struct._Image*, %struct._Image** %colorize_image, align 8, !dbg !3079
  call void @ReplaceImageInList(%struct._Image** %images31, %struct._Image* %21), !dbg !3080
  store i32 1, i32* %retval, align 4, !dbg !3081
  br label %return, !dbg !3081

return:                                           ; preds = %if.end30, %if.then29, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !3082
  ret i32 %22, !dbg !3082
}

declare dso_local %struct._Image* @ColorizeImage(%struct._Image*, i8*, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickColorMatrixImage(%struct._MagickWand* %wand, %struct.KernelInfo* %color_matrix) #0 !dbg !3083 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %color_matrix.addr = alloca %struct.KernelInfo*, align 8
  %color_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3086, metadata !DIExpression()), !dbg !3087
  store %struct.KernelInfo* %color_matrix, %struct.KernelInfo** %color_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %color_matrix.addr, metadata !3088, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.declare(metadata %struct._Image** %color_image, metadata !3090, metadata !DIExpression()), !dbg !3091
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3092
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3094
  %1 = load i32, i32* %debug, align 8, !dbg !3094
  %cmp = icmp ne i32 %1, 0, !dbg !3095
  br i1 %cmp, label %if.then, label %if.end, !dbg !3096

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3097
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3098
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3097
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1674, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3099
  br label %if.end, !dbg !3100

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !3101
  %cmp1 = icmp eq %struct.KernelInfo* %3, null, !dbg !3103
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3104

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3105
  br label %return, !dbg !3105

if.end3:                                          ; preds = %if.end
  %4 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3106
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 5, !dbg !3108
  %5 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3108
  %cmp4 = icmp eq %struct._Image* %5, null, !dbg !3109
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !3110

if.then5:                                         ; preds = %if.end3
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3111
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 2, !dbg !3111
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3111
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3111
  %name6 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 1, !dbg !3111
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name6, i64 0, i64 0, !dbg !3111
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1678, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay7), !dbg !3111
  store i32 0, i32* %retval, align 4, !dbg !3111
  br label %return, !dbg !3111

if.end9:                                          ; preds = %if.end3
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3113
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !3114
  %10 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !3114
  %11 = load %struct.KernelInfo*, %struct.KernelInfo** %color_matrix.addr, align 8, !dbg !3115
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3116
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !3117
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3117
  %call12 = call %struct._Image* @ColorMatrixImage(%struct._Image* %10, %struct.KernelInfo* %11, %struct._ExceptionInfo* %13), !dbg !3118
  store %struct._Image* %call12, %struct._Image** %color_image, align 8, !dbg !3119
  %14 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !3120
  %cmp13 = icmp eq %struct._Image* %14, null, !dbg !3122
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3123

if.then14:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !3124
  br label %return, !dbg !3124

if.end15:                                         ; preds = %if.end9
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3125
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !3126
  %16 = load %struct._Image*, %struct._Image** %color_image, align 8, !dbg !3127
  call void @ReplaceImageInList(%struct._Image** %images16, %struct._Image* %16), !dbg !3128
  store i32 1, i32* %retval, align 4, !dbg !3129
  br label %return, !dbg !3129

return:                                           ; preds = %if.end15, %if.then14, %if.then5, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !3130
  ret i32 %17, !dbg !3130
}

declare dso_local %struct._Image* @ColorMatrixImage(%struct._Image*, %struct.KernelInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickCombineImages(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !3131 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %combine_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3134, metadata !DIExpression()), !dbg !3135
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3136, metadata !DIExpression()), !dbg !3137
  call void @llvm.dbg.declare(metadata %struct._Image** %combine_image, metadata !3138, metadata !DIExpression()), !dbg !3139
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3140
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3142
  %1 = load i32, i32* %debug, align 8, !dbg !3142
  %cmp = icmp ne i32 %1, 0, !dbg !3143
  br i1 %cmp, label %if.then, label %if.end, !dbg !3144

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3145
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3146
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3145
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1723, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3147
  br label %if.end, !dbg !3148

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3149
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3151
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3151
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3152
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3153

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3154
  br label %return, !dbg !3154

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3155
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3156
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !3156
  %7 = load i32, i32* %channel.addr, align 4, !dbg !3157
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3158
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !3159
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3159
  %call5 = call %struct._Image* @CombineImages(%struct._Image* %6, i32 %7, %struct._ExceptionInfo* %9), !dbg !3160
  store %struct._Image* %call5, %struct._Image** %combine_image, align 8, !dbg !3161
  %10 = load %struct._Image*, %struct._Image** %combine_image, align 8, !dbg !3162
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !3164
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3165

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3166
  br label %return, !dbg !3166

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3167
  %12 = load %struct._Image*, %struct._Image** %combine_image, align 8, !dbg !3168
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !3169
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !3170
  br label %return, !dbg !3170

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !3171
  ret %struct._MagickWand* %13, !dbg !3171
}

declare dso_local %struct._Image* @CombineImages(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCommentImage(%struct._MagickWand* %wand, i8* %comment) #0 !dbg !3172 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %comment.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3173, metadata !DIExpression()), !dbg !3174
  store i8* %comment, i8** %comment.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %comment.addr, metadata !3175, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3177, metadata !DIExpression()), !dbg !3178
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3179
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3181
  %1 = load i32, i32* %debug, align 8, !dbg !3181
  %cmp = icmp ne i32 %1, 0, !dbg !3182
  br i1 %cmp, label %if.then, label %if.end, !dbg !3183

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3184
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3185
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3184
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1766, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3186
  br label %if.end, !dbg !3187

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3188
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3190
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3190
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3191
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3192

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3193
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3193
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3193
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3193
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3193
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3193
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1768, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3193
  store i32 0, i32* %retval, align 4, !dbg !3193
  br label %return, !dbg !3193

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3195
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3196
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3196
  %10 = load i8*, i8** %comment.addr, align 8, !dbg !3197
  %call8 = call i32 @SetImageProperty(%struct._Image* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* %10), !dbg !3198
  store i32 %call8, i32* %status, align 4, !dbg !3199
  %11 = load i32, i32* %status, align 4, !dbg !3200
  %cmp9 = icmp eq i32 %11, 0, !dbg !3202
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3203

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3204
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !3205
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3205
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3206
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !3207
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !3207
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !3208
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !3209
  br label %if.end14, !dbg !3209

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !3210
  store i32 %16, i32* %retval, align 4, !dbg !3211
  br label %return, !dbg !3211

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !3212
  ret i32 %17, !dbg !3212
}

declare dso_local i32 @SetImageProperty(%struct._Image*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickCompareImageChannels(%struct._MagickWand* %wand, %struct._MagickWand* %reference, i32 %channel, i32 %metric, double* %distortion) #0 !dbg !3213 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %reference.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %metric.addr = alloca i32, align 4
  %distortion.addr = alloca double*, align 8
  %compare_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3218, metadata !DIExpression()), !dbg !3219
  store %struct._MagickWand* %reference, %struct._MagickWand** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %reference.addr, metadata !3220, metadata !DIExpression()), !dbg !3221
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  store i32 %metric, i32* %metric.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %metric.addr, metadata !3224, metadata !DIExpression()), !dbg !3225
  store double* %distortion, double** %distortion.addr, align 8
  call void @llvm.dbg.declare(metadata double** %distortion.addr, metadata !3226, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata %struct._Image** %compare_image, metadata !3228, metadata !DIExpression()), !dbg !3229
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3230
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3232
  %1 = load i32, i32* %debug, align 8, !dbg !3232
  %cmp = icmp ne i32 %1, 0, !dbg !3233
  br i1 %cmp, label %if.then, label %if.end, !dbg !3234

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3235
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3236
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3235
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1818, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3237
  br label %if.end, !dbg !3238

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3239
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3241
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3241
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3242
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !3243

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !3244
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3245
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !3245
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !3246
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !3247

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3248
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !3250
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3250
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3251
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !3252
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !3251
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1821, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !3253
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3254
  br label %return, !dbg !3254

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3255
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !3256
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !3256
  %12 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !3257
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !3258
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !3258
  %14 = load i32, i32* %channel.addr, align 4, !dbg !3259
  %15 = load i32, i32* %metric.addr, align 4, !dbg !3260
  %16 = load double*, double** %distortion.addr, align 8, !dbg !3261
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3262
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !3263
  %18 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !3263
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !3264
  %call13 = call %struct._Image* @CompareImageChannels(%struct._Image* %11, %struct._Image* %13, i32 %14, i32 %15, double* %16, %struct._ExceptionInfo* %exception12), !dbg !3265
  store %struct._Image* %call13, %struct._Image** %compare_image, align 8, !dbg !3266
  %19 = load %struct._Image*, %struct._Image** %compare_image, align 8, !dbg !3267
  %cmp14 = icmp eq %struct._Image* %19, null, !dbg !3269
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !3270

if.then15:                                        ; preds = %if.end8
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3271
  br label %return, !dbg !3271

if.end16:                                         ; preds = %if.end8
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3272
  %21 = load %struct._Image*, %struct._Image** %compare_image, align 8, !dbg !3273
  %call17 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %20, %struct._Image* %21), !dbg !3274
  store %struct._MagickWand* %call17, %struct._MagickWand** %retval, align 8, !dbg !3275
  br label %return, !dbg !3275

return:                                           ; preds = %if.end16, %if.then15, %if.then4
  %22 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !3276
  ret %struct._MagickWand* %22, !dbg !3276
}

declare dso_local %struct._Image* @CompareImageChannels(%struct._Image*, %struct._Image*, i32, i32, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickCompareImageLayers(%struct._MagickWand* %wand, i32 %method) #0 !dbg !3277 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  %layers_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !3284, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.declare(metadata %struct._Image** %layers_image, metadata !3286, metadata !DIExpression()), !dbg !3287
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3288
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3290
  %1 = load i32, i32* %debug, align 8, !dbg !3290
  %cmp = icmp ne i32 %1, 0, !dbg !3291
  br i1 %cmp, label %if.then, label %if.end, !dbg !3292

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3293
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3294
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3293
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1868, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3295
  br label %if.end, !dbg !3296

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3297
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3299
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3299
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3300
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3301

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3302
  br label %return, !dbg !3302

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3303
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3304
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !3304
  %7 = load i32, i32* %method.addr, align 4, !dbg !3305
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3306
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !3307
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3307
  %call5 = call %struct._Image* @CompareImageLayers(%struct._Image* %6, i32 %7, %struct._ExceptionInfo* %9), !dbg !3308
  store %struct._Image* %call5, %struct._Image** %layers_image, align 8, !dbg !3309
  %10 = load %struct._Image*, %struct._Image** %layers_image, align 8, !dbg !3310
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !3312
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3313

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3314
  br label %return, !dbg !3314

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3315
  %12 = load %struct._Image*, %struct._Image** %layers_image, align 8, !dbg !3316
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !3317
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !3318
  br label %return, !dbg !3318

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !3319
  ret %struct._MagickWand* %13, !dbg !3319
}

declare dso_local %struct._Image* @CompareImageLayers(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickCompareImages(%struct._MagickWand* %wand, %struct._MagickWand* %reference, i32 %metric, double* %distortion) #0 !dbg !3320 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %reference.addr = alloca %struct._MagickWand*, align 8
  %metric.addr = alloca i32, align 4
  %distortion.addr = alloca double*, align 8
  %compare_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3323, metadata !DIExpression()), !dbg !3324
  store %struct._MagickWand* %reference, %struct._MagickWand** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %reference.addr, metadata !3325, metadata !DIExpression()), !dbg !3326
  store i32 %metric, i32* %metric.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %metric.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  store double* %distortion, double** %distortion.addr, align 8
  call void @llvm.dbg.declare(metadata double** %distortion.addr, metadata !3329, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.declare(metadata %struct._Image** %compare_image, metadata !3331, metadata !DIExpression()), !dbg !3332
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3333
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3335
  %1 = load i32, i32* %debug, align 8, !dbg !3335
  %cmp = icmp ne i32 %1, 0, !dbg !3336
  br i1 %cmp, label %if.then, label %if.end, !dbg !3337

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3338
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3339
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3338
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1917, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3340
  br label %if.end, !dbg !3341

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3342
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3344
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3344
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3345
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !3346

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !3347
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3348
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !3348
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !3349
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !3350

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3351
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !3353
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3353
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3354
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !3355
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !3354
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1920, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !3356
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3357
  br label %return, !dbg !3357

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3358
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !3359
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !3359
  %12 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !3360
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !3361
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !3361
  %14 = load i32, i32* %metric.addr, align 4, !dbg !3362
  %15 = load double*, double** %distortion.addr, align 8, !dbg !3363
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3364
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !3365
  %17 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !3365
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !3366
  %call13 = call %struct._Image* @CompareImages(%struct._Image* %11, %struct._Image* %13, i32 %14, double* %15, %struct._ExceptionInfo* %exception12), !dbg !3367
  store %struct._Image* %call13, %struct._Image** %compare_image, align 8, !dbg !3368
  %18 = load %struct._Image*, %struct._Image** %compare_image, align 8, !dbg !3369
  %cmp14 = icmp eq %struct._Image* %18, null, !dbg !3371
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !3372

if.then15:                                        ; preds = %if.end8
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3373
  br label %return, !dbg !3373

if.end16:                                         ; preds = %if.end8
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3374
  %20 = load %struct._Image*, %struct._Image** %compare_image, align 8, !dbg !3375
  %call17 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %19, %struct._Image* %20), !dbg !3376
  store %struct._MagickWand* %call17, %struct._MagickWand** %retval, align 8, !dbg !3377
  br label %return, !dbg !3377

return:                                           ; preds = %if.end16, %if.then15, %if.then4
  %21 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !3378
  ret %struct._MagickWand* %21, !dbg !3378
}

declare dso_local %struct._Image* @CompareImages(%struct._Image*, %struct._Image*, i32, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCompositeImage(%struct._MagickWand* %wand, %struct._MagickWand* %source_wand, i32 %compose, i64 %x, i64 %y) #0 !dbg !3379 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %source_wand.addr = alloca %struct._MagickWand*, align 8
  %compose.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3383, metadata !DIExpression()), !dbg !3384
  store %struct._MagickWand* %source_wand, %struct._MagickWand** %source_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %source_wand.addr, metadata !3385, metadata !DIExpression()), !dbg !3386
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !3387, metadata !DIExpression()), !dbg !3388
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3389, metadata !DIExpression()), !dbg !3390
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3391, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3393, metadata !DIExpression()), !dbg !3394
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3395
  %1 = load %struct._MagickWand*, %struct._MagickWand** %source_wand.addr, align 8, !dbg !3396
  %2 = load i32, i32* %compose.addr, align 4, !dbg !3397
  %3 = load i64, i64* %x.addr, align 8, !dbg !3398
  %4 = load i64, i64* %y.addr, align 8, !dbg !3399
  %call = call i32 @MagickCompositeImageChannel(%struct._MagickWand* %0, i32 134217719, %struct._MagickWand* %1, i32 %2, i64 %3, i64 %4), !dbg !3400
  store i32 %call, i32* %status, align 4, !dbg !3401
  %5 = load i32, i32* %status, align 4, !dbg !3402
  ret i32 %5, !dbg !3403
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCompositeImageChannel(%struct._MagickWand* %wand, i32 %channel, %struct._MagickWand* %source_wand, i32 %compose, i64 %x, i64 %y) #0 !dbg !3404 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %source_wand.addr = alloca %struct._MagickWand*, align 8
  %compose.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3407, metadata !DIExpression()), !dbg !3408
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3409, metadata !DIExpression()), !dbg !3410
  store %struct._MagickWand* %source_wand, %struct._MagickWand** %source_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %source_wand.addr, metadata !3411, metadata !DIExpression()), !dbg !3412
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !3413, metadata !DIExpression()), !dbg !3414
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3415, metadata !DIExpression()), !dbg !3416
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3417, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3419, metadata !DIExpression()), !dbg !3420
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3421
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3423
  %1 = load i32, i32* %debug, align 8, !dbg !3423
  %cmp = icmp ne i32 %1, 0, !dbg !3424
  br i1 %cmp, label %if.then, label %if.end, !dbg !3425

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3426
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3427
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3426
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1997, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3428
  br label %if.end, !dbg !3429

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3430
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3432
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3432
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3433
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !3434

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %source_wand.addr, align 8, !dbg !3435
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3436
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !3436
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !3437
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !3438

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3439
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !3439
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3439
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3439
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !3439
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !3439
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2000, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !3439
  store i32 0, i32* %retval, align 4, !dbg !3439
  br label %return, !dbg !3439

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3441
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !3442
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !3442
  %12 = load i32, i32* %channel.addr, align 4, !dbg !3443
  %13 = load i32, i32* %compose.addr, align 4, !dbg !3444
  %14 = load %struct._MagickWand*, %struct._MagickWand** %source_wand.addr, align 8, !dbg !3445
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !3446
  %15 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !3446
  %16 = load i64, i64* %x.addr, align 8, !dbg !3447
  %17 = load i64, i64* %y.addr, align 8, !dbg !3448
  %call11 = call i32 @CompositeImageChannel(%struct._Image* %11, i32 %12, i32 %13, %struct._Image* %15, i64 %16, i64 %17), !dbg !3449
  store i32 %call11, i32* %status, align 4, !dbg !3450
  %18 = load i32, i32* %status, align 4, !dbg !3451
  %cmp12 = icmp eq i32 %18, 0, !dbg !3453
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !3454

if.then13:                                        ; preds = %if.end8
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3455
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 2, !dbg !3456
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !3456
  %21 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3457
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %21, i32 0, i32 5, !dbg !3458
  %22 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !3458
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 58, !dbg !3459
  call void @InheritException(%struct._ExceptionInfo* %20, %struct._ExceptionInfo* %exception16), !dbg !3460
  br label %if.end17, !dbg !3460

if.end17:                                         ; preds = %if.then13, %if.end8
  %23 = load i32, i32* %status, align 4, !dbg !3461
  store i32 %23, i32* %retval, align 4, !dbg !3462
  br label %return, !dbg !3462

return:                                           ; preds = %if.end17, %if.then4
  %24 = load i32, i32* %retval, align 4, !dbg !3463
  ret i32 %24, !dbg !3463
}

declare dso_local i32 @CompositeImageChannel(%struct._Image*, i32, i32, %struct._Image*, i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCompositeLayers(%struct._MagickWand* %wand, %struct._MagickWand* %source_wand, i32 %compose, i64 %x, i64 %y) #0 !dbg !3464 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %source_wand.addr = alloca %struct._MagickWand*, align 8
  %compose.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3465, metadata !DIExpression()), !dbg !3466
  store %struct._MagickWand* %source_wand, %struct._MagickWand** %source_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %source_wand.addr, metadata !3467, metadata !DIExpression()), !dbg !3468
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3471, metadata !DIExpression()), !dbg !3472
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3473, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3475, metadata !DIExpression()), !dbg !3476
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3477
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3479
  %1 = load i32, i32* %debug, align 8, !dbg !3479
  %cmp = icmp ne i32 %1, 0, !dbg !3480
  br i1 %cmp, label %if.then, label %if.end, !dbg !3481

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3482
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3483
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3482
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2071, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3484
  br label %if.end, !dbg !3485

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3486
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3488
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3488
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3489
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !3490

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %source_wand.addr, align 8, !dbg !3491
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3492
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !3492
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !3493
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !3494

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3495
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !3495
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3495
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3495
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !3495
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !3495
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2074, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !3495
  store i32 0, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3497
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !3498
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !3498
  %12 = load i32, i32* %compose.addr, align 4, !dbg !3499
  %13 = load %struct._MagickWand*, %struct._MagickWand** %source_wand.addr, align 8, !dbg !3500
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !3501
  %14 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !3501
  %15 = load i64, i64* %x.addr, align 8, !dbg !3502
  %16 = load i64, i64* %y.addr, align 8, !dbg !3503
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3504
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !3505
  %18 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !3505
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !3506
  call void @CompositeLayers(%struct._Image* %11, i32 %12, %struct._Image* %14, i64 %15, i64 %16, %struct._ExceptionInfo* %exception12), !dbg !3507
  store i32 1, i32* %status, align 4, !dbg !3508
  %19 = load i32, i32* %status, align 4, !dbg !3509
  store i32 %19, i32* %retval, align 4, !dbg !3510
  br label %return, !dbg !3510

return:                                           ; preds = %if.end8, %if.then4
  %20 = load i32, i32* %retval, align 4, !dbg !3511
  ret i32 %20, !dbg !3511
}

declare dso_local void @CompositeLayers(%struct._Image*, i32, %struct._Image*, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickContrastImage(%struct._MagickWand* %wand, i32 %sharpen) #0 !dbg !3512 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %sharpen.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3515, metadata !DIExpression()), !dbg !3516
  store i32 %sharpen, i32* %sharpen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sharpen.addr, metadata !3517, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3519, metadata !DIExpression()), !dbg !3520
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3521
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3523
  %1 = load i32, i32* %debug, align 8, !dbg !3523
  %cmp = icmp ne i32 %1, 0, !dbg !3524
  br i1 %cmp, label %if.then, label %if.end, !dbg !3525

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3526
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3527
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3526
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3528
  br label %if.end, !dbg !3529

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3530
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3532
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3532
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3533
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3534

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3535
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3535
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3535
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3535
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3535
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3535
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2120, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3535
  store i32 0, i32* %retval, align 4, !dbg !3535
  br label %return, !dbg !3535

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3537
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3538
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3538
  %10 = load i32, i32* %sharpen.addr, align 4, !dbg !3539
  %call8 = call i32 @ContrastImage(%struct._Image* %9, i32 %10), !dbg !3540
  store i32 %call8, i32* %status, align 4, !dbg !3541
  %11 = load i32, i32* %status, align 4, !dbg !3542
  %cmp9 = icmp eq i32 %11, 0, !dbg !3544
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3545

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3546
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !3547
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3547
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3548
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !3549
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !3549
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !3550
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !3551
  br label %if.end14, !dbg !3551

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !3552
  store i32 %16, i32* %retval, align 4, !dbg !3553
  br label %return, !dbg !3553

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !3554
  ret i32 %17, !dbg !3554
}

declare dso_local i32 @ContrastImage(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickContrastStretchImage(%struct._MagickWand* %wand, double %black_point, double %white_point) #0 !dbg !3555 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !3558, metadata !DIExpression()), !dbg !3559
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3562, metadata !DIExpression()), !dbg !3563
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3564
  %1 = load double, double* %black_point.addr, align 8, !dbg !3565
  %2 = load double, double* %white_point.addr, align 8, !dbg !3566
  %call = call i32 @MagickContrastStretchImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !3567
  store i32 %call, i32* %status, align 4, !dbg !3568
  %3 = load i32, i32* %status, align 4, !dbg !3569
  ret i32 %3, !dbg !3570
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickContrastStretchImageChannel(%struct._MagickWand* %wand, i32 %channel, double %black_point, double %white_point) #0 !dbg !3571 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3572, metadata !DIExpression()), !dbg !3573
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3574, metadata !DIExpression()), !dbg !3575
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !3576, metadata !DIExpression()), !dbg !3577
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !3578, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3580, metadata !DIExpression()), !dbg !3581
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3582
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3584
  %1 = load i32, i32* %debug, align 8, !dbg !3584
  %cmp = icmp ne i32 %1, 0, !dbg !3585
  br i1 %cmp, label %if.then, label %if.end, !dbg !3586

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3587
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3588
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3587
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2183, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3589
  br label %if.end, !dbg !3590

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3591
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3593
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3593
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3594
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3595

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3596
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3596
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3596
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3596
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3596
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3596
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2185, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3596
  store i32 0, i32* %retval, align 4, !dbg !3596
  br label %return, !dbg !3596

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3598
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3599
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3599
  %10 = load i32, i32* %channel.addr, align 4, !dbg !3600
  %11 = load double, double* %black_point.addr, align 8, !dbg !3601
  %12 = load double, double* %white_point.addr, align 8, !dbg !3602
  %call8 = call i32 @ContrastStretchImageChannel(%struct._Image* %9, i32 %10, double %11, double %12), !dbg !3603
  store i32 %call8, i32* %status, align 4, !dbg !3604
  %13 = load i32, i32* %status, align 4, !dbg !3605
  %cmp9 = icmp eq i32 %13, 0, !dbg !3607
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3608

if.then10:                                        ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3609
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !3610
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3610
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3611
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !3612
  %17 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !3612
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !3613
  call void @InheritException(%struct._ExceptionInfo* %15, %struct._ExceptionInfo* %exception13), !dbg !3614
  br label %if.end14, !dbg !3614

if.end14:                                         ; preds = %if.then10, %if.end6
  %18 = load i32, i32* %status, align 4, !dbg !3615
  store i32 %18, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

return:                                           ; preds = %if.end14, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !3617
  ret i32 %19, !dbg !3617
}

declare dso_local i32 @ContrastStretchImageChannel(%struct._Image*, i32, double, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickConvolveImage(%struct._MagickWand* %wand, i64 %order, double* %kernel) #0 !dbg !3618 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %order.addr = alloca i64, align 8
  %kernel.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3621, metadata !DIExpression()), !dbg !3622
  store i64 %order, i64* %order.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %order.addr, metadata !3623, metadata !DIExpression()), !dbg !3624
  store double* %kernel, double** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata double** %kernel.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3627, metadata !DIExpression()), !dbg !3628
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3629
  %1 = load i64, i64* %order.addr, align 8, !dbg !3630
  %2 = load double*, double** %kernel.addr, align 8, !dbg !3631
  %call = call i32 @MagickConvolveImageChannel(%struct._MagickWand* %0, i32 134217719, i64 %1, double* %2), !dbg !3632
  store i32 %call, i32* %status, align 4, !dbg !3633
  %3 = load i32, i32* %status, align 4, !dbg !3634
  ret i32 %3, !dbg !3635
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickConvolveImageChannel(%struct._MagickWand* %wand, i32 %channel, i64 %order, double* %kernel) #0 !dbg !3636 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %order.addr = alloca i64, align 8
  %kernel.addr = alloca double*, align 8
  %convolve_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3641, metadata !DIExpression()), !dbg !3642
  store i64 %order, i64* %order.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %order.addr, metadata !3643, metadata !DIExpression()), !dbg !3644
  store double* %kernel, double** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata double** %kernel.addr, metadata !3645, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.declare(metadata %struct._Image** %convolve_image, metadata !3647, metadata !DIExpression()), !dbg !3648
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3649
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3651
  %1 = load i32, i32* %debug, align 8, !dbg !3651
  %cmp = icmp ne i32 %1, 0, !dbg !3652
  br i1 %cmp, label %if.then, label %if.end, !dbg !3653

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3654
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3655
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3654
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2245, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3656
  br label %if.end, !dbg !3657

if.end:                                           ; preds = %if.then, %entry
  %3 = load double*, double** %kernel.addr, align 8, !dbg !3658
  %cmp1 = icmp eq double* %3, null, !dbg !3660
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3661

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3662
  br label %return, !dbg !3662

if.end3:                                          ; preds = %if.end
  %4 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3663
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 5, !dbg !3665
  %5 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3665
  %cmp4 = icmp eq %struct._Image* %5, null, !dbg !3666
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !3667

if.then5:                                         ; preds = %if.end3
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3668
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 2, !dbg !3668
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3668
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3668
  %name6 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 1, !dbg !3668
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name6, i64 0, i64 0, !dbg !3668
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2249, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay7), !dbg !3668
  store i32 0, i32* %retval, align 4, !dbg !3668
  br label %return, !dbg !3668

if.end9:                                          ; preds = %if.end3
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3670
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !3671
  %10 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !3671
  %11 = load i32, i32* %channel.addr, align 4, !dbg !3672
  %12 = load i64, i64* %order.addr, align 8, !dbg !3673
  %13 = load double*, double** %kernel.addr, align 8, !dbg !3674
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3675
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !3676
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3676
  %call12 = call %struct._Image* @ConvolveImageChannel(%struct._Image* %10, i32 %11, i64 %12, double* %13, %struct._ExceptionInfo* %15), !dbg !3677
  store %struct._Image* %call12, %struct._Image** %convolve_image, align 8, !dbg !3678
  %16 = load %struct._Image*, %struct._Image** %convolve_image, align 8, !dbg !3679
  %cmp13 = icmp eq %struct._Image* %16, null, !dbg !3681
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3682

if.then14:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !3683
  br label %return, !dbg !3683

if.end15:                                         ; preds = %if.end9
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3684
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !3685
  %18 = load %struct._Image*, %struct._Image** %convolve_image, align 8, !dbg !3686
  call void @ReplaceImageInList(%struct._Image** %images16, %struct._Image* %18), !dbg !3687
  store i32 1, i32* %retval, align 4, !dbg !3688
  br label %return, !dbg !3688

return:                                           ; preds = %if.end15, %if.then14, %if.then5, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !3689
  ret i32 %19, !dbg !3689
}

declare dso_local %struct._Image* @ConvolveImageChannel(%struct._Image*, i32, i64, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCropImage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y) #0 !dbg !3690 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %crop_image = alloca %struct._Image*, align 8
  %crop = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3691, metadata !DIExpression()), !dbg !3692
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3693, metadata !DIExpression()), !dbg !3694
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3697, metadata !DIExpression()), !dbg !3698
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3699, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.declare(metadata %struct._Image** %crop_image, metadata !3701, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %crop, metadata !3703, metadata !DIExpression()), !dbg !3704
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3705
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3707
  %1 = load i32, i32* %debug, align 8, !dbg !3707
  %cmp = icmp ne i32 %1, 0, !dbg !3708
  br i1 %cmp, label %if.then, label %if.end, !dbg !3709

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3710
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3711
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3710
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2301, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3712
  br label %if.end, !dbg !3713

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3714
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3716
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3716
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3717
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3718

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3719
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3719
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3719
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3719
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3719
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3719
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2303, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3719
  store i32 0, i32* %retval, align 4, !dbg !3719
  br label %return, !dbg !3719

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !3721
  %width7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop, i32 0, i32 0, !dbg !3722
  store i64 %8, i64* %width7, align 8, !dbg !3723
  %9 = load i64, i64* %height.addr, align 8, !dbg !3724
  %height8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop, i32 0, i32 1, !dbg !3725
  store i64 %9, i64* %height8, align 8, !dbg !3726
  %10 = load i64, i64* %x.addr, align 8, !dbg !3727
  %x9 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop, i32 0, i32 2, !dbg !3728
  store i64 %10, i64* %x9, align 8, !dbg !3729
  %11 = load i64, i64* %y.addr, align 8, !dbg !3730
  %y10 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %crop, i32 0, i32 3, !dbg !3731
  store i64 %11, i64* %y10, align 8, !dbg !3732
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3733
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !3734
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !3734
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3735
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !3736
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !3736
  %call13 = call %struct._Image* @CropImage(%struct._Image* %13, %struct._RectangleInfo* %crop, %struct._ExceptionInfo* %15), !dbg !3737
  store %struct._Image* %call13, %struct._Image** %crop_image, align 8, !dbg !3738
  %16 = load %struct._Image*, %struct._Image** %crop_image, align 8, !dbg !3739
  %cmp14 = icmp eq %struct._Image* %16, null, !dbg !3741
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !3742

if.then15:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !3743
  br label %return, !dbg !3743

if.end16:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3744
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !3745
  %18 = load %struct._Image*, %struct._Image** %crop_image, align 8, !dbg !3746
  call void @ReplaceImageInList(%struct._Image** %images17, %struct._Image* %18), !dbg !3747
  store i32 1, i32* %retval, align 4, !dbg !3748
  br label %return, !dbg !3748

return:                                           ; preds = %if.end16, %if.then15, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !3749
  ret i32 %19, !dbg !3749
}

declare dso_local %struct._Image* @CropImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickCycleColormapImage(%struct._MagickWand* %wand, i64 %displace) #0 !dbg !3750 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %displace.addr = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3753, metadata !DIExpression()), !dbg !3754
  store i64 %displace, i64* %displace.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %displace.addr, metadata !3755, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3757, metadata !DIExpression()), !dbg !3758
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3759
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3761
  %1 = load i32, i32* %debug, align 8, !dbg !3761
  %cmp = icmp ne i32 %1, 0, !dbg !3762
  br i1 %cmp, label %if.then, label %if.end, !dbg !3763

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3764
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3765
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3764
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2351, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3766
  br label %if.end, !dbg !3767

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3768
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3770
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3770
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3771
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3772

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3773
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3773
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3773
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3773
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3773
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3773
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2353, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3773
  store i32 0, i32* %retval, align 4, !dbg !3773
  br label %return, !dbg !3773

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3775
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3776
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3776
  %10 = load i64, i64* %displace.addr, align 8, !dbg !3777
  %call8 = call i32 @CycleColormapImage(%struct._Image* %9, i64 %10), !dbg !3778
  store i32 %call8, i32* %status, align 4, !dbg !3779
  %11 = load i32, i32* %status, align 4, !dbg !3780
  %cmp9 = icmp eq i32 %11, 0, !dbg !3782
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !3783

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3784
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !3785
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !3785
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3786
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !3787
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !3787
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !3788
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !3789
  br label %if.end14, !dbg !3789

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !3790
  store i32 %16, i32* %retval, align 4, !dbg !3791
  br label %return, !dbg !3791

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !3792
  ret i32 %17, !dbg !3792
}

declare dso_local i32 @CycleColormapImage(%struct._Image*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickConstituteImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows, i8* %map, i32 %storage, i8* %pixels) #0 !dbg !3793 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %map.addr = alloca i8*, align 8
  %storage.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %images = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store i32 %storage, i32* %storage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %storage.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !3808, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !3810, metadata !DIExpression()), !dbg !3811
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3812
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3814
  %1 = load i32, i32* %debug, align 8, !dbg !3814
  %cmp = icmp ne i32 %1, 0, !dbg !3815
  br i1 %cmp, label %if.then, label %if.end, !dbg !3816

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3817
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3818
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3817
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2421, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3819
  br label %if.end, !dbg !3820

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %columns.addr, align 8, !dbg !3821
  %4 = load i64, i64* %rows.addr, align 8, !dbg !3822
  %5 = load i8*, i8** %map.addr, align 8, !dbg !3823
  %6 = load i32, i32* %storage.addr, align 4, !dbg !3824
  %7 = load i8*, i8** %pixels.addr, align 8, !dbg !3825
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3826
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !3827
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3827
  %call1 = call %struct._Image* @ConstituteImage(i64 %3, i64 %4, i8* %5, i32 %6, i8* %7, %struct._ExceptionInfo* %9), !dbg !3828
  store %struct._Image* %call1, %struct._Image** %images, align 8, !dbg !3829
  %10 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3830
  %cmp2 = icmp eq %struct._Image* %10, null, !dbg !3832
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3833

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3834
  br label %return, !dbg !3834

if.end4:                                          ; preds = %if.end
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3835
  %12 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3836
  %call5 = call i32 @InsertImageInWand(%struct._MagickWand* %11, %struct._Image* %12), !dbg !3837
  store i32 %call5, i32* %retval, align 4, !dbg !3838
  br label %return, !dbg !3838

return:                                           ; preds = %if.end4, %if.then3
  %13 = load i32, i32* %retval, align 4, !dbg !3839
  ret i32 %13, !dbg !3839
}

declare dso_local %struct._Image* @ConstituteImage(i64, i64, i8*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDecipherImage(%struct._MagickWand* %wand, i8* %passphrase) #0 !dbg !3840 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %passphrase.addr = alloca i8*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3841, metadata !DIExpression()), !dbg !3842
  store i8* %passphrase, i8** %passphrase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %passphrase.addr, metadata !3843, metadata !DIExpression()), !dbg !3844
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3845
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3847
  %1 = load i32, i32* %debug, align 8, !dbg !3847
  %cmp = icmp ne i32 %1, 0, !dbg !3848
  br i1 %cmp, label %if.then, label %if.end, !dbg !3849

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3850
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3851
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3850
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2459, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3852
  br label %if.end, !dbg !3853

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3854
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3856
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3856
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3857
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3858

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3859
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3859
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3859
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3859
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3859
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3859
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2461, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3859
  store i32 0, i32* %retval, align 4, !dbg !3859
  br label %return, !dbg !3859

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3861
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3862
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3862
  %10 = load i8*, i8** %passphrase.addr, align 8, !dbg !3863
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3864
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !3865
  %12 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !3865
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !3866
  %call10 = call i32 @DecipherImage(%struct._Image* %9, i8* %10, %struct._ExceptionInfo* %exception9), !dbg !3867
  store i32 %call10, i32* %retval, align 4, !dbg !3868
  br label %return, !dbg !3868

return:                                           ; preds = %if.end6, %if.then2
  %13 = load i32, i32* %retval, align 4, !dbg !3869
  ret i32 %13, !dbg !3869
}

declare dso_local i32 @DecipherImage(%struct._Image*, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickDeconstructImages(%struct._MagickWand* %wand) #0 !dbg !3870 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %deconstruct_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3871, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata %struct._Image** %deconstruct_image, metadata !3873, metadata !DIExpression()), !dbg !3874
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3875
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3877
  %1 = load i32, i32* %debug, align 8, !dbg !3877
  %cmp = icmp ne i32 %1, 0, !dbg !3878
  br i1 %cmp, label %if.then, label %if.end, !dbg !3879

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3880
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3881
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3880
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2497, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3882
  br label %if.end, !dbg !3883

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3884
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3886
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3886
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3887
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3888

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3889
  br label %return, !dbg !3889

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3890
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !3891
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !3891
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3892
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !3893
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3893
  %call5 = call %struct._Image* @DeconstructImages(%struct._Image* %6, %struct._ExceptionInfo* %8), !dbg !3894
  store %struct._Image* %call5, %struct._Image** %deconstruct_image, align 8, !dbg !3895
  %9 = load %struct._Image*, %struct._Image** %deconstruct_image, align 8, !dbg !3896
  %cmp6 = icmp eq %struct._Image* %9, null, !dbg !3898
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3899

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !3900
  br label %return, !dbg !3900

if.end8:                                          ; preds = %if.end3
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3901
  %11 = load %struct._Image*, %struct._Image** %deconstruct_image, align 8, !dbg !3902
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %10, %struct._Image* %11), !dbg !3903
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !3904
  br label %return, !dbg !3904

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %12 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !3905
  ret %struct._MagickWand* %12, !dbg !3905
}

declare dso_local %struct._Image* @DeconstructImages(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDeskewImage(%struct._MagickWand* %wand, double %threshold) #0 !dbg !3906 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold.addr = alloca double, align 8
  %sepia_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3907, metadata !DIExpression()), !dbg !3908
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !3909, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.declare(metadata %struct._Image** %sepia_image, metadata !3911, metadata !DIExpression()), !dbg !3912
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3913
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3915
  %1 = load i32, i32* %debug, align 8, !dbg !3915
  %cmp = icmp ne i32 %1, 0, !dbg !3916
  br i1 %cmp, label %if.then, label %if.end, !dbg !3917

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3918
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3919
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3918
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2543, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3920
  br label %if.end, !dbg !3921

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3922
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3924
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3924
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3925
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3926

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3927
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3927
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3927
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3927
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3927
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3927
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2545, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3927
  store i32 0, i32* %retval, align 4, !dbg !3927
  br label %return, !dbg !3927

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3929
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3930
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3930
  %10 = load double, double* %threshold.addr, align 8, !dbg !3931
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3932
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !3933
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !3933
  %call9 = call %struct._Image* @DeskewImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !3934
  store %struct._Image* %call9, %struct._Image** %sepia_image, align 8, !dbg !3935
  %13 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !3936
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !3938
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3939

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !3940
  br label %return, !dbg !3940

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3941
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !3942
  %15 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !3943
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !3944
  store i32 1, i32* %retval, align 4, !dbg !3945
  br label %return, !dbg !3945

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !3946
  ret i32 %16, !dbg !3946
}

declare dso_local %struct._Image* @DeskewImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDespeckleImage(%struct._MagickWand* %wand) #0 !dbg !3947 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %despeckle_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.declare(metadata %struct._Image** %despeckle_image, metadata !3950, metadata !DIExpression()), !dbg !3951
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3952
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !3954
  %1 = load i32, i32* %debug, align 8, !dbg !3954
  %cmp = icmp ne i32 %1, 0, !dbg !3955
  br i1 %cmp, label %if.then, label %if.end, !dbg !3956

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3957
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !3958
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3957
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2584, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3959
  br label %if.end, !dbg !3960

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3961
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !3963
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !3963
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !3964
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3965

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3966
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !3966
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3966
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3966
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !3966
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !3966
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2586, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !3966
  store i32 0, i32* %retval, align 4, !dbg !3966
  br label %return, !dbg !3966

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3968
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !3969
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !3969
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3970
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !3971
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !3971
  %call9 = call %struct._Image* @DespeckleImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !3972
  store %struct._Image* %call9, %struct._Image** %despeckle_image, align 8, !dbg !3973
  %12 = load %struct._Image*, %struct._Image** %despeckle_image, align 8, !dbg !3974
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !3976
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3977

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !3978
  br label %return, !dbg !3978

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !3979
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !3980
  %14 = load %struct._Image*, %struct._Image** %despeckle_image, align 8, !dbg !3981
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !3982
  store i32 1, i32* %retval, align 4, !dbg !3983
  br label %return, !dbg !3983

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !3984
  ret i32 %15, !dbg !3984
}

declare dso_local %struct._Image* @DespeckleImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MagickDestroyImage(%struct._Image* %image) #0 !dbg !3985 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3988, metadata !DIExpression()), !dbg !3989
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3990
  %call = call %struct._Image* @DestroyImage(%struct._Image* %0), !dbg !3991
  ret %struct._Image* %call, !dbg !3992
}

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDisplayImage(%struct._MagickWand* %wand, i8* %server_name) #0 !dbg !3993 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %server_name.addr = alloca i8*, align 8
  %image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  store i8* %server_name, i8** %server_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %server_name.addr, metadata !3996, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !3998, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4000, metadata !DIExpression()), !dbg !4001
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4002
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4004
  %1 = load i32, i32* %debug, align 8, !dbg !4004
  %cmp = icmp ne i32 %1, 0, !dbg !4005
  br i1 %cmp, label %if.then, label %if.end, !dbg !4006

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4007
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4008
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4007
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2659, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4009
  br label %if.end, !dbg !4010

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4011
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4013
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4013
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4014
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4015

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4016
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4016
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4016
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4016
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4016
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4016
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2661, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4016
  store i32 0, i32* %retval, align 4, !dbg !4016
  br label %return, !dbg !4016

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4018
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4019
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4019
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4020
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !4021
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4021
  %call9 = call %struct._Image* @CloneImage(%struct._Image* %9, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %11), !dbg !4022
  store %struct._Image* %call9, %struct._Image** %image, align 8, !dbg !4023
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4024
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !4026
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4027

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4028
  br label %return, !dbg !4028

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4029
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 3, !dbg !4030
  %14 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !4030
  %server_name13 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %14, i32 0, i32 18, !dbg !4031
  %15 = load i8*, i8** %server_name.addr, align 8, !dbg !4032
  %call14 = call i8* @CloneString(i8** %server_name13, i8* %15), !dbg !4033
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4034
  %image_info15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 3, !dbg !4035
  %17 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info15, align 8, !dbg !4035
  %18 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4036
  %call16 = call i32 @DisplayImages(%struct._ImageInfo* %17, %struct._Image* %18), !dbg !4037
  store i32 %call16, i32* %status, align 4, !dbg !4038
  %19 = load i32, i32* %status, align 4, !dbg !4039
  %cmp17 = icmp eq i32 %19, 0, !dbg !4041
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !4042

if.then18:                                        ; preds = %if.end12
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4043
  %exception19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 2, !dbg !4044
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception19, align 8, !dbg !4044
  %22 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4045
  %exception20 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 58, !dbg !4046
  call void @InheritException(%struct._ExceptionInfo* %21, %struct._ExceptionInfo* %exception20), !dbg !4047
  br label %if.end21, !dbg !4047

if.end21:                                         ; preds = %if.then18, %if.end12
  %23 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4048
  %call22 = call %struct._Image* @DestroyImage(%struct._Image* %23), !dbg !4049
  store %struct._Image* %call22, %struct._Image** %image, align 8, !dbg !4050
  %24 = load i32, i32* %status, align 4, !dbg !4051
  store i32 %24, i32* %retval, align 4, !dbg !4052
  br label %return, !dbg !4052

return:                                           ; preds = %if.end21, %if.then11, %if.then2
  %25 = load i32, i32* %retval, align 4, !dbg !4053
  ret i32 %25, !dbg !4053
}

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

declare dso_local i32 @DisplayImages(%struct._ImageInfo*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDisplayImages(%struct._MagickWand* %wand, i8* %server_name) #0 !dbg !4054 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %server_name.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4055, metadata !DIExpression()), !dbg !4056
  store i8* %server_name, i8** %server_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %server_name.addr, metadata !4057, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4059, metadata !DIExpression()), !dbg !4060
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4061
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4063
  %1 = load i32, i32* %debug, align 8, !dbg !4063
  %cmp = icmp ne i32 %1, 0, !dbg !4064
  br i1 %cmp, label %if.then, label %if.end, !dbg !4065

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4066
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4067
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4066
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2707, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4068
  br label %if.end, !dbg !4069

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4070
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !4071
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !4071
  %server_name1 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %4, i32 0, i32 18, !dbg !4072
  %5 = load i8*, i8** %server_name.addr, align 8, !dbg !4073
  %call2 = call i8* @CloneString(i8** %server_name1, i8* %5), !dbg !4074
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4075
  %image_info3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 3, !dbg !4076
  %7 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info3, align 8, !dbg !4076
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4077
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4078
  %9 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4078
  %call4 = call i32 @DisplayImages(%struct._ImageInfo* %7, %struct._Image* %9), !dbg !4079
  store i32 %call4, i32* %status, align 4, !dbg !4080
  %10 = load i32, i32* %status, align 4, !dbg !4081
  %cmp5 = icmp eq i32 %10, 0, !dbg !4083
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !4084

if.then6:                                         ; preds = %if.end
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4085
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !4086
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4086
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4087
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !4088
  %14 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4088
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !4089
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception8), !dbg !4090
  br label %if.end9, !dbg !4090

if.end9:                                          ; preds = %if.then6, %if.end
  %15 = load i32, i32* %status, align 4, !dbg !4091
  ret i32 %15, !dbg !4092
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDistortImage(%struct._MagickWand* %wand, i32 %method, i64 %number_arguments, double* %arguments, i32 %bestfit) #0 !dbg !4093 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %bestfit.addr = alloca i32, align 4
  %distort_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4098, metadata !DIExpression()), !dbg !4099
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !4100, metadata !DIExpression()), !dbg !4101
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !4104, metadata !DIExpression()), !dbg !4105
  store i32 %bestfit, i32* %bestfit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bestfit.addr, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.declare(metadata %struct._Image** %distort_image, metadata !4108, metadata !DIExpression()), !dbg !4109
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4110
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4112
  %1 = load i32, i32* %debug, align 8, !dbg !4112
  %cmp = icmp ne i32 %1, 0, !dbg !4113
  br i1 %cmp, label %if.then, label %if.end, !dbg !4114

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4115
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4116
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4115
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2785, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4117
  br label %if.end, !dbg !4118

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4119
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4121
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4121
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4122
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4123

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4124
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4124
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4124
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4124
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4124
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4124
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2787, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4124
  store i32 0, i32* %retval, align 4, !dbg !4124
  br label %return, !dbg !4124

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4126
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4127
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4127
  %10 = load i32, i32* %method.addr, align 4, !dbg !4128
  %11 = load i64, i64* %number_arguments.addr, align 8, !dbg !4129
  %12 = load double*, double** %arguments.addr, align 8, !dbg !4130
  %13 = load i32, i32* %bestfit.addr, align 4, !dbg !4131
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4132
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !4133
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4133
  %call9 = call %struct._Image* @DistortImage(%struct._Image* %9, i32 %10, i64 %11, double* %12, i32 %13, %struct._ExceptionInfo* %15), !dbg !4134
  store %struct._Image* %call9, %struct._Image** %distort_image, align 8, !dbg !4135
  %16 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !4136
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !4138
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4139

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4140
  br label %return, !dbg !4140

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4141
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !4142
  %18 = load %struct._Image*, %struct._Image** %distort_image, align 8, !dbg !4143
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !4144
  store i32 1, i32* %retval, align 4, !dbg !4145
  br label %return, !dbg !4145

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !4146
  ret i32 %19, !dbg !4146
}

declare dso_local %struct._Image* @DistortImage(%struct._Image*, i32, i64, double*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickDrawImage(%struct._MagickWand* %wand, %struct._DrawingWand* %drawing_wand) #0 !dbg !4147 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %drawing_wand.addr = alloca %struct._DrawingWand*, align 8
  %primitive = alloca i8*, align 8
  %draw_info = alloca %struct._DrawInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4148, metadata !DIExpression()), !dbg !4149
  store %struct._DrawingWand* %drawing_wand, %struct._DrawingWand** %drawing_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %drawing_wand.addr, metadata !4150, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.declare(metadata i8** %primitive, metadata !4152, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !4154, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4156, metadata !DIExpression()), !dbg !4157
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4158
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4160
  %1 = load i32, i32* %debug, align 8, !dbg !4160
  %cmp = icmp ne i32 %1, 0, !dbg !4161
  br i1 %cmp, label %if.then, label %if.end, !dbg !4162

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4163
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4164
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4163
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2836, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4165
  br label %if.end, !dbg !4166

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4167
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4169
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4169
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4170
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4171

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4172
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4172
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4172
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4172
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4172
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4172
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2838, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4172
  store i32 0, i32* %retval, align 4, !dbg !4172
  br label %return, !dbg !4172

if.end6:                                          ; preds = %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !4174
  %call7 = call %struct._DrawInfo* @PeekDrawingWand(%struct._DrawingWand* %8), !dbg !4175
  store %struct._DrawInfo* %call7, %struct._DrawInfo** %draw_info, align 8, !dbg !4176
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4177
  %cmp8 = icmp eq %struct._DrawInfo* %9, null, !dbg !4179
  br i1 %cmp8, label %if.then11, label %lor.lhs.false, !dbg !4180

lor.lhs.false:                                    ; preds = %if.end6
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4181
  %primitive9 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 0, !dbg !4182
  %11 = load i8*, i8** %primitive9, align 8, !dbg !4182
  %cmp10 = icmp eq i8* %11, null, !dbg !4183
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4184

if.then11:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4185
  br label %return, !dbg !4185

if.end12:                                         ; preds = %lor.lhs.false
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4186
  %primitive13 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 0, !dbg !4187
  %13 = load i8*, i8** %primitive13, align 8, !dbg !4187
  %call14 = call i8* @AcquireString(i8* %13), !dbg !4188
  store i8* %call14, i8** %primitive, align 8, !dbg !4189
  %14 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4190
  %call15 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %14), !dbg !4191
  store %struct._DrawInfo* %call15, %struct._DrawInfo** %draw_info, align 8, !dbg !4192
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4193
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 3, !dbg !4194
  %16 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !4194
  %call16 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* %16, %struct._DrawInfo* null), !dbg !4195
  store %struct._DrawInfo* %call16, %struct._DrawInfo** %draw_info, align 8, !dbg !4196
  %17 = load i8*, i8** %primitive, align 8, !dbg !4197
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4198
  %primitive17 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 0, !dbg !4199
  store i8* %17, i8** %primitive17, align 8, !dbg !4200
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4201
  %images18 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !4202
  %20 = load %struct._Image*, %struct._Image** %images18, align 8, !dbg !4202
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4203
  %call19 = call i32 @DrawImage(%struct._Image* %20, %struct._DrawInfo* %21), !dbg !4204
  store i32 %call19, i32* %status, align 4, !dbg !4205
  %22 = load i32, i32* %status, align 4, !dbg !4206
  %cmp20 = icmp eq i32 %22, 0, !dbg !4208
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !4209

if.then21:                                        ; preds = %if.end12
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4210
  %exception22 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %23, i32 0, i32 2, !dbg !4211
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception22, align 8, !dbg !4211
  %25 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4212
  %images23 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %25, i32 0, i32 5, !dbg !4213
  %26 = load %struct._Image*, %struct._Image** %images23, align 8, !dbg !4213
  %exception24 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !4214
  call void @InheritException(%struct._ExceptionInfo* %24, %struct._ExceptionInfo* %exception24), !dbg !4215
  br label %if.end25, !dbg !4215

if.end25:                                         ; preds = %if.then21, %if.end12
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4216
  %call26 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %27), !dbg !4217
  store %struct._DrawInfo* %call26, %struct._DrawInfo** %draw_info, align 8, !dbg !4218
  %28 = load i32, i32* %status, align 4, !dbg !4219
  store i32 %28, i32* %retval, align 4, !dbg !4220
  br label %return, !dbg !4220

return:                                           ; preds = %if.end25, %if.then11, %if.then2
  %29 = load i32, i32* %retval, align 4, !dbg !4221
  ret i32 %29, !dbg !4221
}

declare dso_local i8* @AcquireString(i8*) #2

declare dso_local %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo*, %struct._DrawInfo*) #2

declare dso_local i32 @DrawImage(%struct._Image*, %struct._DrawInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEdgeImage(%struct._MagickWand* %wand, double %radius) #0 !dbg !4222 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %edge_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4223, metadata !DIExpression()), !dbg !4224
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !4225, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.declare(metadata %struct._Image** %edge_image, metadata !4227, metadata !DIExpression()), !dbg !4228
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4229
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4231
  %1 = load i32, i32* %debug, align 8, !dbg !4231
  %cmp = icmp ne i32 %1, 0, !dbg !4232
  br i1 %cmp, label %if.then, label %if.end, !dbg !4233

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4234
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4235
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4234
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2889, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4236
  br label %if.end, !dbg !4237

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4238
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4240
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4240
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4241
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4242

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4243
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4243
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4243
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4243
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4243
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4243
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2891, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4243
  store i32 0, i32* %retval, align 4, !dbg !4243
  br label %return, !dbg !4243

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4245
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4246
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4246
  %10 = load double, double* %radius.addr, align 8, !dbg !4247
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4248
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !4249
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4249
  %call9 = call %struct._Image* @EdgeImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !4250
  store %struct._Image* %call9, %struct._Image** %edge_image, align 8, !dbg !4251
  %13 = load %struct._Image*, %struct._Image** %edge_image, align 8, !dbg !4252
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !4254
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4255

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4256
  br label %return, !dbg !4256

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4257
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !4258
  %15 = load %struct._Image*, %struct._Image** %edge_image, align 8, !dbg !4259
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !4260
  store i32 1, i32* %retval, align 4, !dbg !4261
  br label %return, !dbg !4261

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !4262
  ret i32 %16, !dbg !4262
}

declare dso_local %struct._Image* @EdgeImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEmbossImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !4263 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %emboss_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4264, metadata !DIExpression()), !dbg !4265
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !4268, metadata !DIExpression()), !dbg !4269
  call void @llvm.dbg.declare(metadata %struct._Image** %emboss_image, metadata !4270, metadata !DIExpression()), !dbg !4271
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4272
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4274
  %1 = load i32, i32* %debug, align 8, !dbg !4274
  %cmp = icmp ne i32 %1, 0, !dbg !4275
  br i1 %cmp, label %if.then, label %if.end, !dbg !4276

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4277
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4278
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4277
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2940, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4279
  br label %if.end, !dbg !4280

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4281
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4283
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4283
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4284
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4285

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4286
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4286
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4286
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4286
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4286
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4286
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2942, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4286
  store i32 0, i32* %retval, align 4, !dbg !4286
  br label %return, !dbg !4286

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4288
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4289
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4289
  %10 = load double, double* %radius.addr, align 8, !dbg !4290
  %11 = load double, double* %sigma.addr, align 8, !dbg !4291
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4292
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !4293
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4293
  %call9 = call %struct._Image* @EmbossImage(%struct._Image* %9, double %10, double %11, %struct._ExceptionInfo* %13), !dbg !4294
  store %struct._Image* %call9, %struct._Image** %emboss_image, align 8, !dbg !4295
  %14 = load %struct._Image*, %struct._Image** %emboss_image, align 8, !dbg !4296
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !4298
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4299

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4300
  br label %return, !dbg !4300

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4301
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !4302
  %16 = load %struct._Image*, %struct._Image** %emboss_image, align 8, !dbg !4303
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !4304
  store i32 1, i32* %retval, align 4, !dbg !4305
  br label %return, !dbg !4305

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !4306
  ret i32 %17, !dbg !4306
}

declare dso_local %struct._Image* @EmbossImage(%struct._Image*, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEncipherImage(%struct._MagickWand* %wand, i8* %passphrase) #0 !dbg !4307 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %passphrase.addr = alloca i8*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4308, metadata !DIExpression()), !dbg !4309
  store i8* %passphrase, i8** %passphrase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %passphrase.addr, metadata !4310, metadata !DIExpression()), !dbg !4311
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4312
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4314
  %1 = load i32, i32* %debug, align 8, !dbg !4314
  %cmp = icmp ne i32 %1, 0, !dbg !4315
  br i1 %cmp, label %if.then, label %if.end, !dbg !4316

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4317
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4318
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4317
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2981, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4319
  br label %if.end, !dbg !4320

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4321
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4323
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4323
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4324
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4325

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4326
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4326
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4326
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4326
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4326
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4326
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2983, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4326
  store i32 0, i32* %retval, align 4, !dbg !4326
  br label %return, !dbg !4326

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4328
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4329
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4329
  %10 = load i8*, i8** %passphrase.addr, align 8, !dbg !4330
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4331
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !4332
  %12 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !4332
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !4333
  %call10 = call i32 @EncipherImage(%struct._Image* %9, i8* %10, %struct._ExceptionInfo* %exception9), !dbg !4334
  store i32 %call10, i32* %retval, align 4, !dbg !4335
  br label %return, !dbg !4335

return:                                           ; preds = %if.end6, %if.then2
  %13 = load i32, i32* %retval, align 4, !dbg !4336
  ret i32 %13, !dbg !4336
}

declare dso_local i32 @EncipherImage(%struct._Image*, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEnhanceImage(%struct._MagickWand* %wand) #0 !dbg !4337 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %enhance_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4338, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.declare(metadata %struct._Image** %enhance_image, metadata !4340, metadata !DIExpression()), !dbg !4341
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4342
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4344
  %1 = load i32, i32* %debug, align 8, !dbg !4344
  %cmp = icmp ne i32 %1, 0, !dbg !4345
  br i1 %cmp, label %if.then, label %if.end, !dbg !4346

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4347
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4348
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4347
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3018, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4349
  br label %if.end, !dbg !4350

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4351
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4353
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4353
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4354
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4355

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4356
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4356
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4356
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4356
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4356
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4356
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3020, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4356
  store i32 0, i32* %retval, align 4, !dbg !4356
  br label %return, !dbg !4356

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4358
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4359
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4359
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4360
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !4361
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4361
  %call9 = call %struct._Image* @EnhanceImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !4362
  store %struct._Image* %call9, %struct._Image** %enhance_image, align 8, !dbg !4363
  %12 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4364
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !4366
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4367

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4368
  br label %return, !dbg !4368

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4369
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !4370
  %14 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4371
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !4372
  store i32 1, i32* %retval, align 4, !dbg !4373
  br label %return, !dbg !4373

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !4374
  ret i32 %15, !dbg !4374
}

declare dso_local %struct._Image* @EnhanceImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEqualizeImage(%struct._MagickWand* %wand) #0 !dbg !4375 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4376, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4378, metadata !DIExpression()), !dbg !4379
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4380
  %call = call i32 @MagickEqualizeImageChannel(%struct._MagickWand* %0, i32 134217719), !dbg !4381
  store i32 %call, i32* %status, align 4, !dbg !4382
  %1 = load i32, i32* %status, align 4, !dbg !4383
  ret i32 %1, !dbg !4384
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEqualizeImageChannel(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !4385 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4386, metadata !DIExpression()), !dbg !4387
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4388, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4390, metadata !DIExpression()), !dbg !4391
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4392
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4394
  %1 = load i32, i32* %debug, align 8, !dbg !4394
  %cmp = icmp ne i32 %1, 0, !dbg !4395
  br i1 %cmp, label %if.then, label %if.end, !dbg !4396

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4397
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4398
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4397
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3073, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4399
  br label %if.end, !dbg !4400

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4401
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4403
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4403
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4404
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4405

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4406
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4406
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4406
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4406
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4406
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4406
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3075, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4406
  store i32 0, i32* %retval, align 4, !dbg !4406
  br label %return, !dbg !4406

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4408
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4409
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4409
  %10 = load i32, i32* %channel.addr, align 4, !dbg !4410
  %call8 = call i32 @EqualizeImageChannel(%struct._Image* %9, i32 %10), !dbg !4411
  store i32 %call8, i32* %status, align 4, !dbg !4412
  %11 = load i32, i32* %status, align 4, !dbg !4413
  %cmp9 = icmp eq i32 %11, 0, !dbg !4415
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !4416

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4417
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !4418
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !4418
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4419
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !4420
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !4420
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !4421
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !4422
  br label %if.end14, !dbg !4422

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !4423
  store i32 %16, i32* %retval, align 4, !dbg !4424
  br label %return, !dbg !4424

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !4425
  ret i32 %17, !dbg !4425
}

declare dso_local i32 @EqualizeImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEvaluateImage(%struct._MagickWand* %wand, i32 %op, double %value) #0 !dbg !4426 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %op.addr = alloca i32, align 4
  %value.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4431, metadata !DIExpression()), !dbg !4432
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !4433, metadata !DIExpression()), !dbg !4434
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !4435, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4437, metadata !DIExpression()), !dbg !4438
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4439
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4441
  %1 = load i32, i32* %debug, align 8, !dbg !4441
  %cmp = icmp ne i32 %1, 0, !dbg !4442
  br i1 %cmp, label %if.then, label %if.end, !dbg !4443

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4444
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4445
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4444
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4446
  br label %if.end, !dbg !4447

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4448
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4450
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4450
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4451
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4452

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4453
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4453
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4453
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4453
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4453
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4453
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3131, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4453
  store i32 0, i32* %retval, align 4, !dbg !4453
  br label %return, !dbg !4453

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4455
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4456
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4456
  %10 = load i32, i32* %op.addr, align 4, !dbg !4457
  %11 = load double, double* %value.addr, align 8, !dbg !4458
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4459
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !4460
  %13 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !4460
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !4461
  %call10 = call i32 @EvaluateImage(%struct._Image* %9, i32 %10, double %11, %struct._ExceptionInfo* %exception9), !dbg !4462
  store i32 %call10, i32* %status, align 4, !dbg !4463
  %14 = load i32, i32* %status, align 4, !dbg !4464
  %cmp11 = icmp eq i32 %14, 0, !dbg !4466
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !4467

if.then12:                                        ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4468
  %exception13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !4469
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception13, align 8, !dbg !4469
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4470
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !4471
  %18 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !4471
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !4472
  call void @InheritException(%struct._ExceptionInfo* %16, %struct._ExceptionInfo* %exception15), !dbg !4473
  br label %if.end16, !dbg !4473

if.end16:                                         ; preds = %if.then12, %if.end6
  %19 = load i32, i32* %status, align 4, !dbg !4474
  store i32 %19, i32* %retval, align 4, !dbg !4475
  br label %return, !dbg !4475

return:                                           ; preds = %if.end16, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !4476
  ret i32 %20, !dbg !4476
}

declare dso_local i32 @EvaluateImage(%struct._Image*, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickEvaluateImages(%struct._MagickWand* %wand, i32 %op) #0 !dbg !4477 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %op.addr = alloca i32, align 4
  %evaluate_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4480, metadata !DIExpression()), !dbg !4481
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !4482, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.declare(metadata %struct._Image** %evaluate_image, metadata !4484, metadata !DIExpression()), !dbg !4485
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4486
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4488
  %1 = load i32, i32* %debug, align 8, !dbg !4488
  %cmp = icmp ne i32 %1, 0, !dbg !4489
  br i1 %cmp, label %if.then, label %if.end, !dbg !4490

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4491
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4492
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4491
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4493
  br label %if.end, !dbg !4494

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4495
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4497
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4497
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4498
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4499

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !4500
  br label %return, !dbg !4500

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4501
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !4502
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !4502
  %7 = load i32, i32* %op.addr, align 4, !dbg !4503
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4504
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !4505
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4505
  %call5 = call %struct._Image* @EvaluateImages(%struct._Image* %6, i32 %7, %struct._ExceptionInfo* %9), !dbg !4506
  store %struct._Image* %call5, %struct._Image** %evaluate_image, align 8, !dbg !4507
  %10 = load %struct._Image*, %struct._Image** %evaluate_image, align 8, !dbg !4508
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !4510
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4511

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !4512
  br label %return, !dbg !4512

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4513
  %12 = load %struct._Image*, %struct._Image** %evaluate_image, align 8, !dbg !4514
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !4515
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !4516
  br label %return, !dbg !4516

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !4517
  ret %struct._MagickWand* %13, !dbg !4517
}

declare dso_local %struct._Image* @EvaluateImages(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickEvaluateImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %op, double %value) #0 !dbg !4518 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %op.addr = alloca i32, align 4
  %value.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4521, metadata !DIExpression()), !dbg !4522
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4529, metadata !DIExpression()), !dbg !4530
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4531
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4533
  %1 = load i32, i32* %debug, align 8, !dbg !4533
  %cmp = icmp ne i32 %1, 0, !dbg !4534
  br i1 %cmp, label %if.then, label %if.end, !dbg !4535

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4536
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4537
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4536
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3165, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4538
  br label %if.end, !dbg !4539

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4540
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4542
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4542
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4543
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4544

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4545
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4545
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4545
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4545
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4545
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4545
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3167, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4545
  store i32 0, i32* %retval, align 4, !dbg !4545
  br label %return, !dbg !4545

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4547
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4548
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4548
  %10 = load i32, i32* %channel.addr, align 4, !dbg !4549
  %11 = load i32, i32* %op.addr, align 4, !dbg !4550
  %12 = load double, double* %value.addr, align 8, !dbg !4551
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4552
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !4553
  %14 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !4553
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !4554
  %call10 = call i32 @EvaluateImageChannel(%struct._Image* %9, i32 %10, i32 %11, double %12, %struct._ExceptionInfo* %exception9), !dbg !4555
  store i32 %call10, i32* %status, align 4, !dbg !4556
  %15 = load i32, i32* %status, align 4, !dbg !4557
  store i32 %15, i32* %retval, align 4, !dbg !4558
  br label %return, !dbg !4558

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !4559
  ret i32 %16, !dbg !4559
}

declare dso_local i32 @EvaluateImageChannel(%struct._Image*, i32, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickExportImagePixels(%struct._MagickWand* %wand, i64 %x, i64 %y, i64 %columns, i64 %rows, i8* %map, i32 %storage, i8* %pixels) #0 !dbg !4560 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %map.addr = alloca i8*, align 8
  %storage.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4563, metadata !DIExpression()), !dbg !4564
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4565, metadata !DIExpression()), !dbg !4566
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !4567, metadata !DIExpression()), !dbg !4568
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !4569, metadata !DIExpression()), !dbg !4570
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !4573, metadata !DIExpression()), !dbg !4574
  store i32 %storage, i32* %storage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %storage.addr, metadata !4575, metadata !DIExpression()), !dbg !4576
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !4577, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4579, metadata !DIExpression()), !dbg !4580
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4581
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4583
  %1 = load i32, i32* %debug, align 8, !dbg !4583
  %cmp = icmp ne i32 %1, 0, !dbg !4584
  br i1 %cmp, label %if.then, label %if.end, !dbg !4585

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4586
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4587
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4586
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3234, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4588
  br label %if.end, !dbg !4589

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4590
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4592
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4592
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4593
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4594

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4595
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4595
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4595
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4595
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4595
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4595
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3236, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4595
  store i32 0, i32* %retval, align 4, !dbg !4595
  br label %return, !dbg !4595

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4597
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4598
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4598
  %10 = load i64, i64* %x.addr, align 8, !dbg !4599
  %11 = load i64, i64* %y.addr, align 8, !dbg !4600
  %12 = load i64, i64* %columns.addr, align 8, !dbg !4601
  %13 = load i64, i64* %rows.addr, align 8, !dbg !4602
  %14 = load i8*, i8** %map.addr, align 8, !dbg !4603
  %15 = load i32, i32* %storage.addr, align 4, !dbg !4604
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !4605
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4606
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 2, !dbg !4607
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4607
  %call9 = call i32 @ExportImagePixels(%struct._Image* %9, i64 %10, i64 %11, i64 %12, i64 %13, i8* %14, i32 %15, i8* %16, %struct._ExceptionInfo* %18), !dbg !4608
  store i32 %call9, i32* %status, align 4, !dbg !4609
  %19 = load i32, i32* %status, align 4, !dbg !4610
  %cmp10 = icmp eq i32 %19, 0, !dbg !4612
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !4613

if.then11:                                        ; preds = %if.end6
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4614
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 2, !dbg !4615
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !4615
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4616
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 5, !dbg !4617
  %23 = load %struct._Image*, %struct._Image** %images13, align 8, !dbg !4617
  %exception14 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 58, !dbg !4618
  call void @InheritException(%struct._ExceptionInfo* %21, %struct._ExceptionInfo* %exception14), !dbg !4619
  br label %if.end15, !dbg !4619

if.end15:                                         ; preds = %if.then11, %if.end6
  %24 = load i32, i32* %status, align 4, !dbg !4620
  store i32 %24, i32* %retval, align 4, !dbg !4621
  br label %return, !dbg !4621

return:                                           ; preds = %if.end15, %if.then2
  %25 = load i32, i32* %retval, align 4, !dbg !4622
  ret i32 %25, !dbg !4622
}

declare dso_local i32 @ExportImagePixels(%struct._Image*, i64, i64, i64, i64, i8*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickExtentImage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y) #0 !dbg !4623 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %extent_image = alloca %struct._Image*, align 8
  %extent = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4630, metadata !DIExpression()), !dbg !4631
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata %struct._Image** %extent_image, metadata !4634, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %extent, metadata !4636, metadata !DIExpression()), !dbg !4637
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4638
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4640
  %1 = load i32, i32* %debug, align 8, !dbg !4640
  %cmp = icmp ne i32 %1, 0, !dbg !4641
  br i1 %cmp, label %if.then, label %if.end, !dbg !4642

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4643
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4644
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4643
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3289, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4645
  br label %if.end, !dbg !4646

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4647
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4649
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4649
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4650
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4651

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4652
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4652
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4652
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4652
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4652
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4652
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3291, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4652
  store i32 0, i32* %retval, align 4, !dbg !4652
  br label %return, !dbg !4652

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !4654
  %width7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %extent, i32 0, i32 0, !dbg !4655
  store i64 %8, i64* %width7, align 8, !dbg !4656
  %9 = load i64, i64* %height.addr, align 8, !dbg !4657
  %height8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %extent, i32 0, i32 1, !dbg !4658
  store i64 %9, i64* %height8, align 8, !dbg !4659
  %10 = load i64, i64* %x.addr, align 8, !dbg !4660
  %x9 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %extent, i32 0, i32 2, !dbg !4661
  store i64 %10, i64* %x9, align 8, !dbg !4662
  %11 = load i64, i64* %y.addr, align 8, !dbg !4663
  %y10 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %extent, i32 0, i32 3, !dbg !4664
  store i64 %11, i64* %y10, align 8, !dbg !4665
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4666
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !4667
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !4667
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4668
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !4669
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !4669
  %call13 = call %struct._Image* @ExtentImage(%struct._Image* %13, %struct._RectangleInfo* %extent, %struct._ExceptionInfo* %15), !dbg !4670
  store %struct._Image* %call13, %struct._Image** %extent_image, align 8, !dbg !4671
  %16 = load %struct._Image*, %struct._Image** %extent_image, align 8, !dbg !4672
  %cmp14 = icmp eq %struct._Image* %16, null, !dbg !4674
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4675

if.then15:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4676
  br label %return, !dbg !4676

if.end16:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4677
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !4678
  %18 = load %struct._Image*, %struct._Image** %extent_image, align 8, !dbg !4679
  call void @ReplaceImageInList(%struct._Image** %images17, %struct._Image* %18), !dbg !4680
  store i32 1, i32* %retval, align 4, !dbg !4681
  br label %return, !dbg !4681

return:                                           ; preds = %if.end16, %if.then15, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !4682
  ret i32 %19, !dbg !4682
}

declare dso_local %struct._Image* @ExtentImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFilterImage(%struct._MagickWand* %wand, %struct.KernelInfo* %kernel) #0 !dbg !4683 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4684, metadata !DIExpression()), !dbg !4685
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !4686, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4688, metadata !DIExpression()), !dbg !4689
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4690
  %1 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4691
  %call = call i32 @MagickFilterImageChannel(%struct._MagickWand* %0, i32 134217719, %struct.KernelInfo* %1), !dbg !4692
  store i32 %call, i32* %status, align 4, !dbg !4693
  %2 = load i32, i32* %status, align 4, !dbg !4694
  ret i32 %2, !dbg !4695
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFilterImageChannel(%struct._MagickWand* %wand, i32 %channel, %struct.KernelInfo* %kernel) #0 !dbg !4696 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %filter_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4699, metadata !DIExpression()), !dbg !4700
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4701, metadata !DIExpression()), !dbg !4702
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !4703, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.declare(metadata %struct._Image** %filter_image, metadata !4705, metadata !DIExpression()), !dbg !4706
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4707
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4709
  %1 = load i32, i32* %debug, align 8, !dbg !4709
  %cmp = icmp ne i32 %1, 0, !dbg !4710
  br i1 %cmp, label %if.then, label %if.end, !dbg !4711

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4712
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4713
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4712
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3352, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4714
  br label %if.end, !dbg !4715

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4716
  %cmp1 = icmp eq %struct.KernelInfo* %3, null, !dbg !4718
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4719

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4720
  br label %return, !dbg !4720

if.end3:                                          ; preds = %if.end
  %4 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4721
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 5, !dbg !4723
  %5 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4723
  %cmp4 = icmp eq %struct._Image* %5, null, !dbg !4724
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !4725

if.then5:                                         ; preds = %if.end3
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4726
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 2, !dbg !4726
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4726
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4726
  %name6 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 1, !dbg !4726
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name6, i64 0, i64 0, !dbg !4726
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3356, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay7), !dbg !4726
  store i32 0, i32* %retval, align 4, !dbg !4726
  br label %return, !dbg !4726

if.end9:                                          ; preds = %if.end3
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4728
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !4729
  %10 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !4729
  %11 = load i32, i32* %channel.addr, align 4, !dbg !4730
  %12 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !4731
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4732
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !4733
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !4733
  %call12 = call %struct._Image* @FilterImageChannel(%struct._Image* %10, i32 %11, %struct.KernelInfo* %12, %struct._ExceptionInfo* %14), !dbg !4734
  store %struct._Image* %call12, %struct._Image** %filter_image, align 8, !dbg !4735
  %15 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !4736
  %cmp13 = icmp eq %struct._Image* %15, null, !dbg !4738
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !4739

if.then14:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !4740
  br label %return, !dbg !4740

if.end15:                                         ; preds = %if.end9
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4741
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !4742
  %17 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !4743
  call void @ReplaceImageInList(%struct._Image** %images16, %struct._Image* %17), !dbg !4744
  store i32 1, i32* %retval, align 4, !dbg !4745
  br label %return, !dbg !4745

return:                                           ; preds = %if.end15, %if.then14, %if.then5, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !4746
  ret i32 %18, !dbg !4746
}

declare dso_local %struct._Image* @FilterImageChannel(%struct._Image*, i32, %struct.KernelInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFlipImage(%struct._MagickWand* %wand) #0 !dbg !4747 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %flip_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4748, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.declare(metadata %struct._Image** %flip_image, metadata !4750, metadata !DIExpression()), !dbg !4751
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4752
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4754
  %1 = load i32, i32* %debug, align 8, !dbg !4754
  %cmp = icmp ne i32 %1, 0, !dbg !4755
  br i1 %cmp, label %if.then, label %if.end, !dbg !4756

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4757
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4758
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4757
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3395, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4759
  br label %if.end, !dbg !4760

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4761
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4763
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4763
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4764
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4765

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4766
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4766
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4766
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4766
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4766
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4766
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3397, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4766
  store i32 0, i32* %retval, align 4, !dbg !4766
  br label %return, !dbg !4766

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4768
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4769
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4769
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4770
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !4771
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4771
  %call9 = call %struct._Image* @FlipImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !4772
  store %struct._Image* %call9, %struct._Image** %flip_image, align 8, !dbg !4773
  %12 = load %struct._Image*, %struct._Image** %flip_image, align 8, !dbg !4774
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !4776
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4777

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4778
  br label %return, !dbg !4778

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4779
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !4780
  %14 = load %struct._Image*, %struct._Image** %flip_image, align 8, !dbg !4781
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !4782
  store i32 1, i32* %retval, align 4, !dbg !4783
  br label %return, !dbg !4783

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !4784
  ret i32 %15, !dbg !4784
}

declare dso_local %struct._Image* @FlipImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFloodfillPaintImage(%struct._MagickWand* %wand, i32 %channel, %struct._PixelWand* %fill, double %fuzz, %struct._PixelWand* %bordercolor, i64 %x, i64 %y, i32 %invert) #0 !dbg !4785 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %fill.addr = alloca %struct._PixelWand*, align 8
  %fuzz.addr = alloca double, align 8
  %bordercolor.addr = alloca %struct._PixelWand*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %invert.addr = alloca i32, align 4
  %draw_info = alloca %struct._DrawInfo*, align 8
  %status = alloca i32, align 4
  %target = alloca %struct._MagickPixelPacket, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4788, metadata !DIExpression()), !dbg !4789
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4790, metadata !DIExpression()), !dbg !4791
  store %struct._PixelWand* %fill, %struct._PixelWand** %fill.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %fill.addr, metadata !4792, metadata !DIExpression()), !dbg !4793
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !4794, metadata !DIExpression()), !dbg !4795
  store %struct._PixelWand* %bordercolor, %struct._PixelWand** %bordercolor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %bordercolor.addr, metadata !4796, metadata !DIExpression()), !dbg !4797
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4798, metadata !DIExpression()), !dbg !4799
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !4800, metadata !DIExpression()), !dbg !4801
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !4802, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !4804, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4806, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %target, metadata !4808, metadata !DIExpression()), !dbg !4809
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4810
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4812
  %1 = load i32, i32* %debug, align 8, !dbg !4812
  %cmp = icmp ne i32 %1, 0, !dbg !4813
  br i1 %cmp, label %if.then, label %if.end, !dbg !4814

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4815
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4816
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4815
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3467, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4817
  br label %if.end, !dbg !4818

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4819
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4821
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4821
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4822
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4823

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4824
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4824
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4824
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4824
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4824
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4824
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3469, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4824
  store i32 0, i32* %retval, align 4, !dbg !4824
  br label %return, !dbg !4824

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4826
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 3, !dbg !4827
  %9 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !4827
  %call7 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* %9, %struct._DrawInfo* null), !dbg !4828
  store %struct._DrawInfo* %call7, %struct._DrawInfo** %draw_info, align 8, !dbg !4829
  %10 = load %struct._PixelWand*, %struct._PixelWand** %fill.addr, align 8, !dbg !4830
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4831
  %fill8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %11, i32 0, i32 5, !dbg !4832
  call void @PixelGetQuantumColor(%struct._PixelWand* %10, %struct._PixelPacket* %fill8), !dbg !4833
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4834
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !4835
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !4835
  %14 = load i64, i64* %x.addr, align 8, !dbg !4836
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4837
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !4838
  %16 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !4838
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 7, !dbg !4839
  %17 = load i64, i64* %columns, align 8, !dbg !4839
  %rem = urem i64 %14, %17, !dbg !4840
  %18 = load i64, i64* %y.addr, align 8, !dbg !4841
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4842
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !4843
  %20 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !4843
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 8, !dbg !4844
  %21 = load i64, i64* %rows, align 8, !dbg !4844
  %rem12 = urem i64 %18, %21, !dbg !4845
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4846
  %exception13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 2, !dbg !4847
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception13, align 8, !dbg !4847
  %call14 = call i32 @GetOneVirtualMagickPixel(%struct._Image* %13, i64 %rem, i64 %rem12, %struct._MagickPixelPacket* %target, %struct._ExceptionInfo* %23), !dbg !4848
  %24 = load %struct._PixelWand*, %struct._PixelWand** %bordercolor.addr, align 8, !dbg !4849
  %cmp15 = icmp ne %struct._PixelWand* %24, null, !dbg !4851
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !4852

if.then16:                                        ; preds = %if.end6
  %25 = load %struct._PixelWand*, %struct._PixelWand** %bordercolor.addr, align 8, !dbg !4853
  call void @PixelGetMagickColor(%struct._PixelWand* %25, %struct._MagickPixelPacket* %target), !dbg !4854
  br label %if.end17, !dbg !4854

if.end17:                                         ; preds = %if.then16, %if.end6
  %26 = load double, double* %fuzz.addr, align 8, !dbg !4855
  %27 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4856
  %images18 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %27, i32 0, i32 5, !dbg !4857
  %28 = load %struct._Image*, %struct._Image** %images18, align 8, !dbg !4857
  %fuzz19 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 31, !dbg !4858
  store double %26, double* %fuzz19, align 8, !dbg !4859
  %29 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4860
  %images20 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %29, i32 0, i32 5, !dbg !4861
  %30 = load %struct._Image*, %struct._Image** %images20, align 8, !dbg !4861
  %31 = load i32, i32* %channel.addr, align 4, !dbg !4862
  %32 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4863
  %33 = load i64, i64* %x.addr, align 8, !dbg !4864
  %34 = load i64, i64* %y.addr, align 8, !dbg !4865
  %35 = load i32, i32* %invert.addr, align 4, !dbg !4866
  %call21 = call i32 @FloodfillPaintImage(%struct._Image* %30, i32 %31, %struct._DrawInfo* %32, %struct._MagickPixelPacket* %target, i64 %33, i64 %34, i32 %35), !dbg !4867
  store i32 %call21, i32* %status, align 4, !dbg !4868
  %36 = load i32, i32* %status, align 4, !dbg !4869
  %cmp22 = icmp eq i32 %36, 0, !dbg !4871
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !4872

if.then23:                                        ; preds = %if.end17
  %37 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4873
  %exception24 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %37, i32 0, i32 2, !dbg !4874
  %38 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception24, align 8, !dbg !4874
  %39 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4875
  %images25 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %39, i32 0, i32 5, !dbg !4876
  %40 = load %struct._Image*, %struct._Image** %images25, align 8, !dbg !4876
  %exception26 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 58, !dbg !4877
  call void @InheritException(%struct._ExceptionInfo* %38, %struct._ExceptionInfo* %exception26), !dbg !4878
  br label %if.end27, !dbg !4878

if.end27:                                         ; preds = %if.then23, %if.end17
  %41 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !4879
  %call28 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %41), !dbg !4880
  store %struct._DrawInfo* %call28, %struct._DrawInfo** %draw_info, align 8, !dbg !4881
  %42 = load i32, i32* %status, align 4, !dbg !4882
  store i32 %42, i32* %retval, align 4, !dbg !4883
  br label %return, !dbg !4883

return:                                           ; preds = %if.end27, %if.then2
  %43 = load i32, i32* %retval, align 4, !dbg !4884
  ret i32 %43, !dbg !4884
}

declare dso_local i32 @GetOneVirtualMagickPixel(%struct._Image*, i64, i64, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #2

declare dso_local void @PixelGetMagickColor(%struct._PixelWand*, %struct._MagickPixelPacket*) #2

declare dso_local i32 @FloodfillPaintImage(%struct._Image*, i32, %struct._DrawInfo*, %struct._MagickPixelPacket*, i64, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFlopImage(%struct._MagickWand* %wand) #0 !dbg !4885 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %flop_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4886, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.declare(metadata %struct._Image** %flop_image, metadata !4888, metadata !DIExpression()), !dbg !4889
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4890
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4892
  %1 = load i32, i32* %debug, align 8, !dbg !4892
  %cmp = icmp ne i32 %1, 0, !dbg !4893
  br i1 %cmp, label %if.then, label %if.end, !dbg !4894

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4895
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4896
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4895
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3515, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4897
  br label %if.end, !dbg !4898

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4899
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4901
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4901
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4902
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4903

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4904
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4904
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4904
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4904
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4904
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4904
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3517, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4904
  store i32 0, i32* %retval, align 4, !dbg !4904
  br label %return, !dbg !4904

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4906
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4907
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4907
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4908
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !4909
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4909
  %call9 = call %struct._Image* @FlopImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !4910
  store %struct._Image* %call9, %struct._Image** %flop_image, align 8, !dbg !4911
  %12 = load %struct._Image*, %struct._Image** %flop_image, align 8, !dbg !4912
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !4914
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4915

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4916
  br label %return, !dbg !4916

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4917
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !4918
  %14 = load %struct._Image*, %struct._Image** %flop_image, align 8, !dbg !4919
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !4920
  store i32 1, i32* %retval, align 4, !dbg !4921
  br label %return, !dbg !4921

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !4922
  ret i32 %15, !dbg !4922
}

declare dso_local %struct._Image* @FlopImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickForwardFourierTransformImage(%struct._MagickWand* %wand, i32 %magnitude) #0 !dbg !4923 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %magnitude.addr = alloca i32, align 4
  %forward_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4924, metadata !DIExpression()), !dbg !4925
  store i32 %magnitude, i32* %magnitude.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %magnitude.addr, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata %struct._Image** %forward_image, metadata !4928, metadata !DIExpression()), !dbg !4929
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4930
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4932
  %1 = load i32, i32* %debug, align 8, !dbg !4932
  %cmp = icmp ne i32 %1, 0, !dbg !4933
  br i1 %cmp, label %if.then, label %if.end, !dbg !4934

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4935
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4936
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4935
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3562, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4937
  br label %if.end, !dbg !4938

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4939
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !4941
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !4941
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !4942
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4943

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4944
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !4944
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4944
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4944
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !4944
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !4944
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3564, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !4944
  store i32 0, i32* %retval, align 4, !dbg !4944
  br label %return, !dbg !4944

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4946
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !4947
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !4947
  %10 = load i32, i32* %magnitude.addr, align 4, !dbg !4948
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4949
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !4950
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !4950
  %call9 = call %struct._Image* @ForwardFourierTransformImage(%struct._Image* %9, i32 %10, %struct._ExceptionInfo* %12), !dbg !4951
  store %struct._Image* %call9, %struct._Image** %forward_image, align 8, !dbg !4952
  %13 = load %struct._Image*, %struct._Image** %forward_image, align 8, !dbg !4953
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !4955
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4956

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4957
  br label %return, !dbg !4957

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4958
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !4959
  %15 = load %struct._Image*, %struct._Image** %forward_image, align 8, !dbg !4960
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !4961
  store i32 1, i32* %retval, align 4, !dbg !4962
  br label %return, !dbg !4962

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !4963
  ret i32 %16, !dbg !4963
}

declare dso_local %struct._Image* @ForwardFourierTransformImage(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFrameImage(%struct._MagickWand* %wand, %struct._PixelWand* %matte_color, i64 %width, i64 %height, i64 %inner_bevel, i64 %outer_bevel) #0 !dbg !4964 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %matte_color.addr = alloca %struct._PixelWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %inner_bevel.addr = alloca i64, align 8
  %outer_bevel.addr = alloca i64, align 8
  %frame_image = alloca %struct._Image*, align 8
  %frame_info = alloca %struct._FrameInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  store %struct._PixelWand* %matte_color, %struct._PixelWand** %matte_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %matte_color.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4973, metadata !DIExpression()), !dbg !4974
  store i64 %inner_bevel, i64* %inner_bevel.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %inner_bevel.addr, metadata !4975, metadata !DIExpression()), !dbg !4976
  store i64 %outer_bevel, i64* %outer_bevel.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %outer_bevel.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  call void @llvm.dbg.declare(metadata %struct._Image** %frame_image, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.declare(metadata %struct._FrameInfo* %frame_info, metadata !4981, metadata !DIExpression()), !dbg !4992
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4993
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !4995
  %1 = load i32, i32* %debug, align 8, !dbg !4995
  %cmp = icmp ne i32 %1, 0, !dbg !4996
  br i1 %cmp, label %if.then, label %if.end, !dbg !4997

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !4998
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !4999
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4998
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3624, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5000
  br label %if.end, !dbg !5001

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5002
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5004
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5004
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5005
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5006

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5007
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5007
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5007
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5007
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5007
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5007
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3626, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5007
  store i32 0, i32* %retval, align 4, !dbg !5007
  br label %return, !dbg !5007

if.end6:                                          ; preds = %if.end
  %8 = bitcast %struct._FrameInfo* %frame_info to i8*, !dbg !5009
  %call7 = call i8* @ResetMagickMemory(i8* %8, i32 0, i64 48), !dbg !5010
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5011
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !5012
  %10 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !5012
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 7, !dbg !5013
  %11 = load i64, i64* %columns, align 8, !dbg !5013
  %12 = load i64, i64* %width.addr, align 8, !dbg !5014
  %mul = mul i64 2, %12, !dbg !5015
  %add = add i64 %11, %mul, !dbg !5016
  %width9 = getelementptr inbounds %struct._FrameInfo, %struct._FrameInfo* %frame_info, i32 0, i32 0, !dbg !5017
  store i64 %add, i64* %width9, align 8, !dbg !5018
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5019
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !5020
  %14 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !5020
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 8, !dbg !5021
  %15 = load i64, i64* %rows, align 8, !dbg !5021
  %16 = load i64, i64* %height.addr, align 8, !dbg !5022
  %mul11 = mul i64 2, %16, !dbg !5023
  %add12 = add i64 %15, %mul11, !dbg !5024
  %height13 = getelementptr inbounds %struct._FrameInfo, %struct._FrameInfo* %frame_info, i32 0, i32 1, !dbg !5025
  store i64 %add12, i64* %height13, align 8, !dbg !5026
  %17 = load i64, i64* %width.addr, align 8, !dbg !5027
  %x = getelementptr inbounds %struct._FrameInfo, %struct._FrameInfo* %frame_info, i32 0, i32 2, !dbg !5028
  store i64 %17, i64* %x, align 8, !dbg !5029
  %18 = load i64, i64* %height.addr, align 8, !dbg !5030
  %y = getelementptr inbounds %struct._FrameInfo, %struct._FrameInfo* %frame_info, i32 0, i32 3, !dbg !5031
  store i64 %18, i64* %y, align 8, !dbg !5032
  %19 = load i64, i64* %inner_bevel.addr, align 8, !dbg !5033
  %inner_bevel14 = getelementptr inbounds %struct._FrameInfo, %struct._FrameInfo* %frame_info, i32 0, i32 4, !dbg !5034
  store i64 %19, i64* %inner_bevel14, align 8, !dbg !5035
  %20 = load i64, i64* %outer_bevel.addr, align 8, !dbg !5036
  %outer_bevel15 = getelementptr inbounds %struct._FrameInfo, %struct._FrameInfo* %frame_info, i32 0, i32 5, !dbg !5037
  store i64 %20, i64* %outer_bevel15, align 8, !dbg !5038
  %21 = load %struct._PixelWand*, %struct._PixelWand** %matte_color.addr, align 8, !dbg !5039
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5040
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 5, !dbg !5041
  %23 = load %struct._Image*, %struct._Image** %images16, align 8, !dbg !5041
  %matte_color17 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 14, !dbg !5042
  call void @PixelGetQuantumColor(%struct._PixelWand* %21, %struct._PixelPacket* %matte_color17), !dbg !5043
  %24 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5044
  %images18 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %24, i32 0, i32 5, !dbg !5045
  %25 = load %struct._Image*, %struct._Image** %images18, align 8, !dbg !5045
  %26 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5046
  %exception19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %26, i32 0, i32 2, !dbg !5047
  %27 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception19, align 8, !dbg !5047
  %call20 = call %struct._Image* @FrameImage(%struct._Image* %25, %struct._FrameInfo* %frame_info, %struct._ExceptionInfo* %27), !dbg !5048
  store %struct._Image* %call20, %struct._Image** %frame_image, align 8, !dbg !5049
  %28 = load %struct._Image*, %struct._Image** %frame_image, align 8, !dbg !5050
  %cmp21 = icmp eq %struct._Image* %28, null, !dbg !5052
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5053

if.then22:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !5054
  br label %return, !dbg !5054

if.end23:                                         ; preds = %if.end6
  %29 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5055
  %images24 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %29, i32 0, i32 5, !dbg !5056
  %30 = load %struct._Image*, %struct._Image** %frame_image, align 8, !dbg !5057
  call void @ReplaceImageInList(%struct._Image** %images24, %struct._Image* %30), !dbg !5058
  store i32 1, i32* %retval, align 4, !dbg !5059
  br label %return, !dbg !5059

return:                                           ; preds = %if.end23, %if.then22, %if.then2
  %31 = load i32, i32* %retval, align 4, !dbg !5060
  ret i32 %31, !dbg !5060
}

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

declare dso_local %struct._Image* @FrameImage(%struct._Image*, %struct._FrameInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFunctionImage(%struct._MagickWand* %wand, i32 %function, i64 %number_arguments, double* %arguments) #0 !dbg !5061 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %function.addr = alloca i32, align 4
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  store i32 %function, i32* %function.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %function.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !5070, metadata !DIExpression()), !dbg !5071
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5074, metadata !DIExpression()), !dbg !5075
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5076
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5078
  %1 = load i32, i32* %debug, align 8, !dbg !5078
  %cmp = icmp ne i32 %1, 0, !dbg !5079
  br i1 %cmp, label %if.then, label %if.end, !dbg !5080

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5081
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5082
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5081
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3691, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5083
  br label %if.end, !dbg !5084

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5085
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5087
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5087
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5088
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5089

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5090
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5090
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5090
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5090
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5090
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5090
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3693, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5090
  store i32 0, i32* %retval, align 4, !dbg !5090
  br label %return, !dbg !5090

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5092
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5093
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5093
  %10 = load i32, i32* %function.addr, align 4, !dbg !5094
  %11 = load i64, i64* %number_arguments.addr, align 8, !dbg !5095
  %12 = load double*, double** %arguments.addr, align 8, !dbg !5096
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5097
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !5098
  %14 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !5098
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !5099
  %call10 = call i32 @FunctionImage(%struct._Image* %9, i32 %10, i64 %11, double* %12, %struct._ExceptionInfo* %exception9), !dbg !5100
  store i32 %call10, i32* %status, align 4, !dbg !5101
  %15 = load i32, i32* %status, align 4, !dbg !5102
  %cmp11 = icmp eq i32 %15, 0, !dbg !5104
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !5105

if.then12:                                        ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5106
  %exception13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !5107
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception13, align 8, !dbg !5107
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5108
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !5109
  %19 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !5109
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !5110
  call void @InheritException(%struct._ExceptionInfo* %17, %struct._ExceptionInfo* %exception15), !dbg !5111
  br label %if.end16, !dbg !5111

if.end16:                                         ; preds = %if.then12, %if.end6
  %20 = load i32, i32* %status, align 4, !dbg !5112
  store i32 %20, i32* %retval, align 4, !dbg !5113
  br label %return, !dbg !5113

return:                                           ; preds = %if.end16, %if.then2
  %21 = load i32, i32* %retval, align 4, !dbg !5114
  ret i32 %21, !dbg !5114
}

declare dso_local i32 @FunctionImage(%struct._Image*, i32, i64, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickFunctionImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %function, i64 %number_arguments, double* %arguments) #0 !dbg !5115 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %function.addr = alloca i32, align 4
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  store i32 %function, i32* %function.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %function.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !5124, metadata !DIExpression()), !dbg !5125
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !5126, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5128, metadata !DIExpression()), !dbg !5129
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5130
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5132
  %1 = load i32, i32* %debug, align 8, !dbg !5132
  %cmp = icmp ne i32 %1, 0, !dbg !5133
  br i1 %cmp, label %if.then, label %if.end, !dbg !5134

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5135
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5136
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5135
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3711, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5137
  br label %if.end, !dbg !5138

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5139
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5141
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5141
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5142
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5143

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5144
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5144
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5144
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5144
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5144
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5144
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3713, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5144
  store i32 0, i32* %retval, align 4, !dbg !5144
  br label %return, !dbg !5144

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5146
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5147
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5147
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5148
  %11 = load i32, i32* %function.addr, align 4, !dbg !5149
  %12 = load i64, i64* %number_arguments.addr, align 8, !dbg !5150
  %13 = load double*, double** %arguments.addr, align 8, !dbg !5151
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5152
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !5153
  %15 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !5153
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !5154
  %call10 = call i32 @FunctionImageChannel(%struct._Image* %9, i32 %10, i32 %11, i64 %12, double* %13, %struct._ExceptionInfo* %exception9), !dbg !5155
  store i32 %call10, i32* %status, align 4, !dbg !5156
  %16 = load i32, i32* %status, align 4, !dbg !5157
  store i32 %16, i32* %retval, align 4, !dbg !5158
  br label %return, !dbg !5158

return:                                           ; preds = %if.end6, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !5159
  ret i32 %17, !dbg !5159
}

declare dso_local i32 @FunctionImageChannel(%struct._Image*, i32, i32, i64, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickFxImage(%struct._MagickWand* %wand, i8* %expression) #0 !dbg !5160 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %expression.addr = alloca i8*, align 8
  %fx_wand = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5163, metadata !DIExpression()), !dbg !5164
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !5165, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %fx_wand, metadata !5167, metadata !DIExpression()), !dbg !5168
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5169
  %1 = load i8*, i8** %expression.addr, align 8, !dbg !5170
  %call = call %struct._MagickWand* @MagickFxImageChannel(%struct._MagickWand* %0, i32 134217719, i8* %1), !dbg !5171
  store %struct._MagickWand* %call, %struct._MagickWand** %fx_wand, align 8, !dbg !5172
  %2 = load %struct._MagickWand*, %struct._MagickWand** %fx_wand, align 8, !dbg !5173
  ret %struct._MagickWand* %2, !dbg !5174
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickFxImageChannel(%struct._MagickWand* %wand, i32 %channel, i8* %expression) #0 !dbg !5175 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %expression.addr = alloca i8*, align 8
  %fx_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5178, metadata !DIExpression()), !dbg !5179
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5180, metadata !DIExpression()), !dbg !5181
  store i8* %expression, i8** %expression.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %expression.addr, metadata !5182, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.declare(metadata %struct._Image** %fx_image, metadata !5184, metadata !DIExpression()), !dbg !5185
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5186
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5188
  %1 = load i32, i32* %debug, align 8, !dbg !5188
  %cmp = icmp ne i32 %1, 0, !dbg !5189
  br i1 %cmp, label %if.then, label %if.end, !dbg !5190

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5191
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5192
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5191
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3766, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5193
  br label %if.end, !dbg !5194

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5195
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5197
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5197
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5198
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5199

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !5200
  br label %return, !dbg !5200

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5201
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !5202
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !5202
  %7 = load i32, i32* %channel.addr, align 4, !dbg !5203
  %8 = load i8*, i8** %expression.addr, align 8, !dbg !5204
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5205
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 2, !dbg !5206
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5206
  %call5 = call %struct._Image* @FxImageChannel(%struct._Image* %6, i32 %7, i8* %8, %struct._ExceptionInfo* %10), !dbg !5207
  store %struct._Image* %call5, %struct._Image** %fx_image, align 8, !dbg !5208
  %11 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5209
  %cmp6 = icmp eq %struct._Image* %11, null, !dbg !5211
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5212

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !5213
  br label %return, !dbg !5213

if.end8:                                          ; preds = %if.end3
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5214
  %13 = load %struct._Image*, %struct._Image** %fx_image, align 8, !dbg !5215
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %12, %struct._Image* %13), !dbg !5216
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !5217
  br label %return, !dbg !5217

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %14 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !5218
  ret %struct._MagickWand* %14, !dbg !5218
}

declare dso_local %struct._Image* @FxImageChannel(%struct._Image*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGammaImage(%struct._MagickWand* %wand, double %gamma) #0 !dbg !5219 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %gamma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !5222, metadata !DIExpression()), !dbg !5223
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5224, metadata !DIExpression()), !dbg !5225
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5226
  %1 = load double, double* %gamma.addr, align 8, !dbg !5227
  %call = call i32 @MagickGammaImageChannel(%struct._MagickWand* %0, i32 134217719, double %1), !dbg !5228
  store i32 %call, i32* %status, align 4, !dbg !5229
  %2 = load i32, i32* %status, align 4, !dbg !5230
  ret i32 %2, !dbg !5231
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGammaImageChannel(%struct._MagickWand* %wand, i32 %channel, double %gamma) #0 !dbg !5232 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %gamma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5237, metadata !DIExpression()), !dbg !5238
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !5239, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5241, metadata !DIExpression()), !dbg !5242
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5243
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5245
  %1 = load i32, i32* %debug, align 8, !dbg !5245
  %cmp = icmp ne i32 %1, 0, !dbg !5246
  br i1 %cmp, label %if.then, label %if.end, !dbg !5247

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5248
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5249
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5248
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3830, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5250
  br label %if.end, !dbg !5251

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5252
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5254
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5254
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5255
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5256

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5257
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5257
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5257
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5257
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5257
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5257
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3832, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5257
  store i32 0, i32* %retval, align 4, !dbg !5257
  br label %return, !dbg !5257

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5259
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5260
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5260
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5261
  %11 = load double, double* %gamma.addr, align 8, !dbg !5262
  %call8 = call i32 @GammaImageChannel(%struct._Image* %9, i32 %10, double %11), !dbg !5263
  store i32 %call8, i32* %status, align 4, !dbg !5264
  %12 = load i32, i32* %status, align 4, !dbg !5265
  %cmp9 = icmp eq i32 %12, 0, !dbg !5267
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !5268

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5269
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5270
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !5270
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5271
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !5272
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !5272
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !5273
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !5274
  br label %if.end14, !dbg !5274

if.end14:                                         ; preds = %if.then10, %if.end6
  %17 = load i32, i32* %status, align 4, !dbg !5275
  store i32 %17, i32* %retval, align 4, !dbg !5276
  br label %return, !dbg !5276

return:                                           ; preds = %if.end14, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !5277
  ret i32 %18, !dbg !5277
}

declare dso_local i32 @GammaImageChannel(%struct._Image*, i32, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGaussianBlurImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !5278 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5285, metadata !DIExpression()), !dbg !5286
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5287
  %1 = load double, double* %radius.addr, align 8, !dbg !5288
  %2 = load double, double* %sigma.addr, align 8, !dbg !5289
  %call = call i32 @MagickGaussianBlurImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !5290
  store i32 %call, i32* %status, align 4, !dbg !5291
  %3 = load i32, i32* %status, align 4, !dbg !5292
  ret i32 %3, !dbg !5293
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGaussianBlurImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma) #0 !dbg !5294 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %blur_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5295, metadata !DIExpression()), !dbg !5296
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5297, metadata !DIExpression()), !dbg !5298
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !5299, metadata !DIExpression()), !dbg !5300
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !5301, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !5303, metadata !DIExpression()), !dbg !5304
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5305
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5307
  %1 = load i32, i32* %debug, align 8, !dbg !5307
  %cmp = icmp ne i32 %1, 0, !dbg !5308
  br i1 %cmp, label %if.then, label %if.end, !dbg !5309

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5310
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5311
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5310
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3894, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5312
  br label %if.end, !dbg !5313

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5314
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5316
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5316
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5317
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5318

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5319
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5319
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5319
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5319
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5319
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5319
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3896, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5319
  store i32 0, i32* %retval, align 4, !dbg !5319
  br label %return, !dbg !5319

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5321
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5322
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5322
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5323
  %11 = load double, double* %radius.addr, align 8, !dbg !5324
  %12 = load double, double* %sigma.addr, align 8, !dbg !5325
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5326
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5327
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5327
  %call9 = call %struct._Image* @GaussianBlurImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !5328
  store %struct._Image* %call9, %struct._Image** %blur_image, align 8, !dbg !5329
  %15 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !5330
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !5332
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5333

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !5334
  br label %return, !dbg !5334

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5335
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !5336
  %17 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !5337
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !5338
  store i32 1, i32* %retval, align 4, !dbg !5339
  br label %return, !dbg !5339

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !5340
  ret i32 %18, !dbg !5340
}

declare dso_local %struct._Image* @GaussianBlurImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickGetImage(%struct._MagickWand* %wand) #0 !dbg !5341 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5342, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !5344, metadata !DIExpression()), !dbg !5345
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5346
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5348
  %1 = load i32, i32* %debug, align 8, !dbg !5348
  %cmp = icmp ne i32 %1, 0, !dbg !5349
  br i1 %cmp, label %if.then, label %if.end, !dbg !5350

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5351
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5352
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5351
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3935, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5353
  br label %if.end, !dbg !5354

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5355
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5357
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5357
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5358
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5359

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5360
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5362
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5362
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5363
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5364
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5363
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3938, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5365
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !5366
  br label %return, !dbg !5366

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5367
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5368
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5368
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5369
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !5370
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5370
  %call9 = call %struct._Image* @CloneImage(%struct._Image* %9, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %11), !dbg !5371
  store %struct._Image* %call9, %struct._Image** %image, align 8, !dbg !5372
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5373
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !5375
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5376

if.then11:                                        ; preds = %if.end6
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !5377
  br label %return, !dbg !5377

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5378
  %14 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5379
  %call13 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %13, %struct._Image* %14), !dbg !5380
  store %struct._MagickWand* %call13, %struct._MagickWand** %retval, align 8, !dbg !5381
  br label %return, !dbg !5381

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !5382
  ret %struct._MagickWand* %15, !dbg !5382
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageAlphaChannel(%struct._MagickWand* %wand) #0 !dbg !5383 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5384, metadata !DIExpression()), !dbg !5385
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5386
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5388
  %1 = load i32, i32* %debug, align 8, !dbg !5388
  %cmp = icmp ne i32 %1, 0, !dbg !5389
  br i1 %cmp, label %if.then, label %if.end, !dbg !5390

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5391
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5392
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5391
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3977, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5393
  br label %if.end, !dbg !5394

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5395
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5397
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5397
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5398
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5399

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5400
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5400
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5400
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5400
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5400
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5400
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3979, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5400
  store i32 0, i32* %retval, align 4, !dbg !5400
  br label %return, !dbg !5400

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5402
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5403
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5403
  %call8 = call i32 @GetImageAlphaChannel(%struct._Image* %9), !dbg !5404
  store i32 %call8, i32* %retval, align 4, !dbg !5405
  br label %return, !dbg !5405

return:                                           ; preds = %if.end6, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !5406
  ret i32 %10, !dbg !5406
}

declare dso_local i32 @GetImageAlphaChannel(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickGetImageClipMask(%struct._MagickWand* %wand) #0 !dbg !5407 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !5410, metadata !DIExpression()), !dbg !5411
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5412
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5414
  %1 = load i32, i32* %debug, align 8, !dbg !5414
  %cmp = icmp ne i32 %1, 0, !dbg !5415
  br i1 %cmp, label %if.then, label %if.end, !dbg !5416

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5417
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5418
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5417
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4013, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5419
  br label %if.end, !dbg !5420

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5421
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5423
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5423
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5424
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5425

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5426
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5428
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5428
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5429
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5430
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5429
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4016, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5431
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !5432
  br label %return, !dbg !5432

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5433
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5434
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5434
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5435
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !5436
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5436
  %call9 = call %struct._Image* @GetImageClipMask(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !5437
  store %struct._Image* %call9, %struct._Image** %image, align 8, !dbg !5438
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5439
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !5441
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5442

if.then11:                                        ; preds = %if.end6
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !5443
  br label %return, !dbg !5443

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5444
  %14 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5445
  %call13 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %13, %struct._Image* %14), !dbg !5446
  store %struct._MagickWand* %call13, %struct._MagickWand** %retval, align 8, !dbg !5447
  br label %return, !dbg !5447

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !5448
  ret %struct._MagickWand* %15, !dbg !5448
}

declare dso_local %struct._Image* @GetImageClipMask(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageBackgroundColor(%struct._MagickWand* %wand, %struct._PixelWand* %background_color) #0 !dbg !5449 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %background_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5452, metadata !DIExpression()), !dbg !5453
  store %struct._PixelWand* %background_color, %struct._PixelWand** %background_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %background_color.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5456
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5458
  %1 = load i32, i32* %debug, align 8, !dbg !5458
  %cmp = icmp ne i32 %1, 0, !dbg !5459
  br i1 %cmp, label %if.then, label %if.end, !dbg !5460

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5461
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5462
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5461
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4057, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5463
  br label %if.end, !dbg !5464

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5465
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5467
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5467
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5468
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5469

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5470
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5470
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5470
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5470
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5470
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5470
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4059, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5470
  store i32 0, i32* %retval, align 4, !dbg !5470
  br label %return, !dbg !5470

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %background_color.addr, align 8, !dbg !5472
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5473
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !5474
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5474
  %background_color8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 12, !dbg !5475
  call void @PixelSetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %background_color8), !dbg !5476
  store i32 1, i32* %retval, align 4, !dbg !5477
  br label %return, !dbg !5477

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !5478
  ret i32 %11, !dbg !5478
}

declare dso_local void @PixelSetQuantumColor(%struct._PixelWand*, %struct._PixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @MagickGetImageBlob(%struct._MagickWand* %wand, i64* %length) #0 !dbg !5479 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %length.addr = alloca i64*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store i64* %length, i64** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %length.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5487
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5489
  %1 = load i32, i32* %debug, align 8, !dbg !5489
  %cmp = icmp ne i32 %1, 0, !dbg !5490
  br i1 %cmp, label %if.then, label %if.end, !dbg !5491

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5492
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5493
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5492
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5494
  br label %if.end, !dbg !5495

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5496
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5498
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5498
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5499
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5500

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5501
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5503
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5503
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5504
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5505
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5504
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4104, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5506
  store i8* null, i8** %retval, align 8, !dbg !5507
  br label %return, !dbg !5507

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5508
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 3, !dbg !5509
  %9 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !5509
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5510
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !5511
  %11 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5511
  %12 = load i64*, i64** %length.addr, align 8, !dbg !5512
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5513
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5514
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5514
  %call9 = call i8* @ImageToBlob(%struct._ImageInfo* %9, %struct._Image* %11, i64* %12, %struct._ExceptionInfo* %14), !dbg !5515
  store i8* %call9, i8** %retval, align 8, !dbg !5516
  br label %return, !dbg !5516

return:                                           ; preds = %if.end6, %if.then2
  %15 = load i8*, i8** %retval, align 8, !dbg !5517
  ret i8* %15, !dbg !5517
}

declare dso_local i8* @ImageToBlob(%struct._ImageInfo*, %struct._Image*, i64*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @MagickGetImagesBlob(%struct._MagickWand* %wand, i64* %length) #0 !dbg !5518 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %length.addr = alloca i64*, align 8
  %blob = alloca i8*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5519, metadata !DIExpression()), !dbg !5520
  store i64* %length, i64** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %length.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata i8** %blob, metadata !5523, metadata !DIExpression()), !dbg !5524
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5525
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5527
  %1 = load i32, i32* %debug, align 8, !dbg !5527
  %cmp = icmp ne i32 %1, 0, !dbg !5528
  br i1 %cmp, label %if.then, label %if.end, !dbg !5529

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5530
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5531
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5530
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4150, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5532
  br label %if.end, !dbg !5533

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5534
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5536
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5536
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5537
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5538

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5539
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5541
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5541
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5542
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5543
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5542
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4153, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5544
  store i8* null, i8** %retval, align 8, !dbg !5545
  br label %return, !dbg !5545

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5546
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 3, !dbg !5547
  %9 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !5547
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5548
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !5549
  %11 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5549
  %call8 = call %struct._Image* @GetFirstImageInList(%struct._Image* %11), !dbg !5550
  %12 = load i64*, i64** %length.addr, align 8, !dbg !5551
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5552
  %exception9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5553
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !5553
  %call10 = call i8* @ImagesToBlob(%struct._ImageInfo* %9, %struct._Image* %call8, i64* %12, %struct._ExceptionInfo* %14), !dbg !5554
  store i8* %call10, i8** %blob, align 8, !dbg !5555
  %15 = load i8*, i8** %blob, align 8, !dbg !5556
  store i8* %15, i8** %retval, align 8, !dbg !5557
  br label %return, !dbg !5557

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i8*, i8** %retval, align 8, !dbg !5558
  ret i8* %16, !dbg !5558
}

declare dso_local i8* @ImagesToBlob(%struct._ImageInfo*, %struct._Image*, i64*, %struct._ExceptionInfo*) #2

declare dso_local %struct._Image* @GetFirstImageInList(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageBluePrimary(%struct._MagickWand* %wand, double* %x, double* %y) #0 !dbg !5559 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5562, metadata !DIExpression()), !dbg !5563
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !5564, metadata !DIExpression()), !dbg !5565
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !5566, metadata !DIExpression()), !dbg !5567
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5568
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5570
  %1 = load i32, i32* %debug, align 8, !dbg !5570
  %cmp = icmp ne i32 %1, 0, !dbg !5571
  br i1 %cmp, label %if.then, label %if.end, !dbg !5572

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5573
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5574
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5573
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4196, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5575
  br label %if.end, !dbg !5576

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5577
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5579
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5579
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5580
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5581

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5582
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5582
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5582
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5582
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5582
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5582
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4198, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5582
  store i32 0, i32* %retval, align 4, !dbg !5582
  br label %return, !dbg !5582

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5584
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5585
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5585
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 16, !dbg !5586
  %blue_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 2, !dbg !5587
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary, i32 0, i32 0, !dbg !5588
  %10 = load double, double* %x8, align 8, !dbg !5588
  %11 = load double*, double** %x.addr, align 8, !dbg !5589
  store double %10, double* %11, align 8, !dbg !5590
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5591
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !5592
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !5592
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !5593
  %blue_primary11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 2, !dbg !5594
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary11, i32 0, i32 1, !dbg !5595
  %14 = load double, double* %y12, align 8, !dbg !5595
  %15 = load double*, double** %y.addr, align 8, !dbg !5596
  store double %14, double* %15, align 8, !dbg !5597
  store i32 1, i32* %retval, align 4, !dbg !5598
  br label %return, !dbg !5598

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !5599
  ret i32 %16, !dbg !5599
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageBorderColor(%struct._MagickWand* %wand, %struct._PixelWand* %border_color) #0 !dbg !5600 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %border_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5601, metadata !DIExpression()), !dbg !5602
  store %struct._PixelWand* %border_color, %struct._PixelWand** %border_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %border_color.addr, metadata !5603, metadata !DIExpression()), !dbg !5604
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5605
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5607
  %1 = load i32, i32* %debug, align 8, !dbg !5607
  %cmp = icmp ne i32 %1, 0, !dbg !5608
  br i1 %cmp, label %if.then, label %if.end, !dbg !5609

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5610
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5611
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5610
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4235, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5612
  br label %if.end, !dbg !5613

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5614
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5616
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5616
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5617
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5618

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5619
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5619
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5619
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5619
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5619
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5619
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4237, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5619
  store i32 0, i32* %retval, align 4, !dbg !5619
  br label %return, !dbg !5619

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %border_color.addr, align 8, !dbg !5621
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5622
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !5623
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5623
  %border_color8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 13, !dbg !5624
  call void @PixelSetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %border_color8), !dbg !5625
  store i32 1, i32* %retval, align 4, !dbg !5626
  br label %return, !dbg !5626

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !5627
  ret i32 %11, !dbg !5627
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageChannelDepth(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !5628 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5631, metadata !DIExpression()), !dbg !5632
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5635
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5637
  %1 = load i32, i32* %debug, align 8, !dbg !5637
  %cmp = icmp ne i32 %1, 0, !dbg !5638
  br i1 %cmp, label %if.then, label %if.end, !dbg !5639

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5640
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5641
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5640
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5642
  br label %if.end, !dbg !5643

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5644
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5646
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5646
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5647
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5648

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5649
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5649
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5649
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5649
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5649
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5649
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4275, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5649
  store i64 0, i64* %retval, align 8, !dbg !5649
  br label %return, !dbg !5649

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5651
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5652
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5652
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5653
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5654
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !5655
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5655
  %call9 = call i64 @GetImageChannelDepth(%struct._Image* %9, i32 %10, %struct._ExceptionInfo* %12), !dbg !5656
  store i64 %call9, i64* %retval, align 8, !dbg !5657
  br label %return, !dbg !5657

return:                                           ; preds = %if.end6, %if.then2
  %13 = load i64, i64* %retval, align 8, !dbg !5658
  ret i64 %13, !dbg !5658
}

declare dso_local i64 @GetImageChannelDepth(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageChannelDistortion(%struct._MagickWand* %wand, %struct._MagickWand* %reference, i32 %channel, i32 %metric, double* %distortion) #0 !dbg !5659 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %reference.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %metric.addr = alloca i32, align 4
  %distortion.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store %struct._MagickWand* %reference, %struct._MagickWand** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %reference.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5666, metadata !DIExpression()), !dbg !5667
  store i32 %metric, i32* %metric.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %metric.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  store double* %distortion, double** %distortion.addr, align 8
  call void @llvm.dbg.declare(metadata double** %distortion.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5672, metadata !DIExpression()), !dbg !5673
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5674
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5676
  %1 = load i32, i32* %debug, align 8, !dbg !5676
  %cmp = icmp ne i32 %1, 0, !dbg !5677
  br i1 %cmp, label %if.then, label %if.end, !dbg !5678

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5679
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5680
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5679
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4322, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5681
  br label %if.end, !dbg !5682

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5683
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5685
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5685
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5686
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !5687

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !5688
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !5689
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !5689
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !5690
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !5691

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5692
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !5692
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5692
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5692
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !5692
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !5692
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4326, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !5692
  store i32 0, i32* %retval, align 4, !dbg !5692
  br label %return, !dbg !5692

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5694
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !5695
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !5695
  %12 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !5696
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !5697
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !5697
  %14 = load i32, i32* %channel.addr, align 4, !dbg !5698
  %15 = load i32, i32* %metric.addr, align 4, !dbg !5699
  %16 = load double*, double** %distortion.addr, align 8, !dbg !5700
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5701
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !5702
  %18 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !5702
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !5703
  %call13 = call i32 @GetImageChannelDistortion(%struct._Image* %11, %struct._Image* %13, i32 %14, i32 %15, double* %16, %struct._ExceptionInfo* %exception12), !dbg !5704
  store i32 %call13, i32* %status, align 4, !dbg !5705
  %19 = load i32, i32* %status, align 4, !dbg !5706
  store i32 %19, i32* %retval, align 4, !dbg !5707
  br label %return, !dbg !5707

return:                                           ; preds = %if.end8, %if.then4
  %20 = load i32, i32* %retval, align 4, !dbg !5708
  ret i32 %20, !dbg !5708
}

declare dso_local i32 @GetImageChannelDistortion(%struct._Image*, %struct._Image*, i32, i32, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local double* @MagickGetImageChannelDistortions(%struct._MagickWand* %wand, %struct._MagickWand* %reference, i32 %metric) #0 !dbg !5709 {
entry:
  %retval = alloca double*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %reference.addr = alloca %struct._MagickWand*, align 8
  %metric.addr = alloca i32, align 4
  %channel_distortion = alloca double*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  store %struct._MagickWand* %reference, %struct._MagickWand** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %reference.addr, metadata !5714, metadata !DIExpression()), !dbg !5715
  store i32 %metric, i32* %metric.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %metric.addr, metadata !5716, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.declare(metadata double** %channel_distortion, metadata !5718, metadata !DIExpression()), !dbg !5719
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5720
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5722
  %1 = load i32, i32* %debug, align 8, !dbg !5722
  %cmp = icmp ne i32 %1, 0, !dbg !5723
  br i1 %cmp, label %if.then, label %if.end, !dbg !5724

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5725
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5726
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5725
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4371, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5727
  br label %if.end, !dbg !5728

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5729
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5731
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5731
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5732
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !5733

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !5734
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !5735
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !5735
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !5736
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !5737

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5738
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !5740
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5740
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5741
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !5742
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !5741
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4376, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !5743
  store double* null, double** %retval, align 8, !dbg !5744
  br label %return, !dbg !5744

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5745
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !5746
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !5746
  %12 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !5747
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !5748
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !5748
  %14 = load i32, i32* %metric.addr, align 4, !dbg !5749
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5750
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !5751
  %16 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !5751
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !5752
  %call13 = call double* @GetImageChannelDistortions(%struct._Image* %11, %struct._Image* %13, i32 %14, %struct._ExceptionInfo* %exception12), !dbg !5753
  store double* %call13, double** %channel_distortion, align 8, !dbg !5754
  %17 = load double*, double** %channel_distortion, align 8, !dbg !5755
  store double* %17, double** %retval, align 8, !dbg !5756
  br label %return, !dbg !5756

return:                                           ; preds = %if.end8, %if.then4
  %18 = load double*, double** %retval, align 8, !dbg !5757
  ret double* %18, !dbg !5757
}

declare dso_local double* @GetImageChannelDistortions(%struct._Image*, %struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ChannelFeatures* @MagickGetImageChannelFeatures(%struct._MagickWand* %wand, i64 %distance) #0 !dbg !5758 {
entry:
  %retval = alloca %struct._ChannelFeatures*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %distance.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  store i64 %distance, i64* %distance.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %distance.addr, metadata !5763, metadata !DIExpression()), !dbg !5764
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5765
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5767
  %1 = load i32, i32* %debug, align 8, !dbg !5767
  %cmp = icmp ne i32 %1, 0, !dbg !5768
  br i1 %cmp, label %if.then, label %if.end, !dbg !5769

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5770
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5771
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5770
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4429, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5772
  br label %if.end, !dbg !5773

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5774
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5776
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5776
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5777
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5778

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5779
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5781
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5781
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5782
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5783
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5782
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4432, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5784
  store %struct._ChannelFeatures* null, %struct._ChannelFeatures** %retval, align 8, !dbg !5785
  br label %return, !dbg !5785

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5786
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5787
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5787
  %10 = load i64, i64* %distance.addr, align 8, !dbg !5788
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5789
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !5790
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5790
  %call9 = call %struct._ChannelFeatures* @GetImageChannelFeatures(%struct._Image* %9, i64 %10, %struct._ExceptionInfo* %12), !dbg !5791
  store %struct._ChannelFeatures* %call9, %struct._ChannelFeatures** %retval, align 8, !dbg !5792
  br label %return, !dbg !5792

return:                                           ; preds = %if.end6, %if.then2
  %13 = load %struct._ChannelFeatures*, %struct._ChannelFeatures** %retval, align 8, !dbg !5793
  ret %struct._ChannelFeatures* %13, !dbg !5793
}

declare dso_local %struct._ChannelFeatures* @GetImageChannelFeatures(%struct._Image*, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageChannelKurtosis(%struct._MagickWand* %wand, i32 %channel, double* %kurtosis, double* %skewness) #0 !dbg !5794 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %kurtosis.addr = alloca double*, align 8
  %skewness.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5799, metadata !DIExpression()), !dbg !5800
  store double* %kurtosis, double** %kurtosis.addr, align 8
  call void @llvm.dbg.declare(metadata double** %kurtosis.addr, metadata !5801, metadata !DIExpression()), !dbg !5802
  store double* %skewness, double** %skewness.addr, align 8
  call void @llvm.dbg.declare(metadata double** %skewness.addr, metadata !5803, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5805, metadata !DIExpression()), !dbg !5806
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5807
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5809
  %1 = load i32, i32* %debug, align 8, !dbg !5809
  %cmp = icmp ne i32 %1, 0, !dbg !5810
  br i1 %cmp, label %if.then, label %if.end, !dbg !5811

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5812
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5813
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5812
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4478, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5814
  br label %if.end, !dbg !5815

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5816
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5818
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5818
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5819
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5820

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5821
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5821
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5821
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5821
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5821
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5821
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4480, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5821
  store i32 0, i32* %retval, align 4, !dbg !5821
  br label %return, !dbg !5821

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5823
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5824
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5824
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5825
  %11 = load double*, double** %kurtosis.addr, align 8, !dbg !5826
  %12 = load double*, double** %skewness.addr, align 8, !dbg !5827
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5828
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5829
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5829
  %call9 = call i32 @GetImageChannelKurtosis(%struct._Image* %9, i32 %10, double* %11, double* %12, %struct._ExceptionInfo* %14), !dbg !5830
  store i32 %call9, i32* %status, align 4, !dbg !5831
  %15 = load i32, i32* %status, align 4, !dbg !5832
  store i32 %15, i32* %retval, align 4, !dbg !5833
  br label %return, !dbg !5833

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !5834
  ret i32 %16, !dbg !5834
}

declare dso_local i32 @GetImageChannelKurtosis(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageChannelMean(%struct._MagickWand* %wand, i32 %channel, double* %mean, double* %standard_deviation) #0 !dbg !5835 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %mean.addr = alloca double*, align 8
  %standard_deviation.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  store double* %mean, double** %mean.addr, align 8
  call void @llvm.dbg.declare(metadata double** %mean.addr, metadata !5840, metadata !DIExpression()), !dbg !5841
  store double* %standard_deviation, double** %standard_deviation.addr, align 8
  call void @llvm.dbg.declare(metadata double** %standard_deviation.addr, metadata !5842, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5844, metadata !DIExpression()), !dbg !5845
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5846
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5848
  %1 = load i32, i32* %debug, align 8, !dbg !5848
  %cmp = icmp ne i32 %1, 0, !dbg !5849
  br i1 %cmp, label %if.then, label %if.end, !dbg !5850

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5851
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5852
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5851
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4525, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5853
  br label %if.end, !dbg !5854

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5855
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5857
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5857
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5858
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5859

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5860
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5860
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5860
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5860
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5860
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5860
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4527, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5860
  store i32 0, i32* %retval, align 4, !dbg !5860
  br label %return, !dbg !5860

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5862
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5863
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5863
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5864
  %11 = load double*, double** %mean.addr, align 8, !dbg !5865
  %12 = load double*, double** %standard_deviation.addr, align 8, !dbg !5866
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5867
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5868
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5868
  %call9 = call i32 @GetImageChannelMean(%struct._Image* %9, i32 %10, double* %11, double* %12, %struct._ExceptionInfo* %14), !dbg !5869
  store i32 %call9, i32* %status, align 4, !dbg !5870
  %15 = load i32, i32* %status, align 4, !dbg !5871
  store i32 %15, i32* %retval, align 4, !dbg !5872
  br label %return, !dbg !5872

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !5873
  ret i32 %16, !dbg !5873
}

declare dso_local i32 @GetImageChannelMean(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageChannelRange(%struct._MagickWand* %wand, i32 %channel, double* %minima, double* %maxima) #0 !dbg !5874 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %minima.addr = alloca double*, align 8
  %maxima.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5875, metadata !DIExpression()), !dbg !5876
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5877, metadata !DIExpression()), !dbg !5878
  store double* %minima, double** %minima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %minima.addr, metadata !5879, metadata !DIExpression()), !dbg !5880
  store double* %maxima, double** %maxima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %maxima.addr, metadata !5881, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5883, metadata !DIExpression()), !dbg !5884
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5885
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5887
  %1 = load i32, i32* %debug, align 8, !dbg !5887
  %cmp = icmp ne i32 %1, 0, !dbg !5888
  br i1 %cmp, label %if.then, label %if.end, !dbg !5889

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5890
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5891
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5890
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4571, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5892
  br label %if.end, !dbg !5893

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5894
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5896
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5896
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5897
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5898

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5899
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5899
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5899
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5899
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5899
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5899
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4573, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5899
  store i32 0, i32* %retval, align 4, !dbg !5899
  br label %return, !dbg !5899

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5901
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5902
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5902
  %10 = load i32, i32* %channel.addr, align 4, !dbg !5903
  %11 = load double*, double** %minima.addr, align 8, !dbg !5904
  %12 = load double*, double** %maxima.addr, align 8, !dbg !5905
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5906
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !5907
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5907
  %call9 = call i32 @GetImageChannelRange(%struct._Image* %9, i32 %10, double* %11, double* %12, %struct._ExceptionInfo* %14), !dbg !5908
  store i32 %call9, i32* %status, align 4, !dbg !5909
  %15 = load i32, i32* %status, align 4, !dbg !5910
  store i32 %15, i32* %retval, align 4, !dbg !5911
  br label %return, !dbg !5911

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !5912
  ret i32 %16, !dbg !5912
}

declare dso_local i32 @GetImageChannelRange(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ChannelStatistics* @MagickGetImageChannelStatistics(%struct._MagickWand* %wand) #0 !dbg !5913 {
entry:
  %retval = alloca %struct._ChannelStatistics*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5916, metadata !DIExpression()), !dbg !5917
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5918
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5920
  %1 = load i32, i32* %debug, align 8, !dbg !5920
  %cmp = icmp ne i32 %1, 0, !dbg !5921
  br i1 %cmp, label %if.then, label %if.end, !dbg !5922

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5923
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5924
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5923
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4614, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5925
  br label %if.end, !dbg !5926

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5927
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5929
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5929
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5930
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5931

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5932
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5934
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5934
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5935
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5936
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5935
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4617, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5937
  store %struct._ChannelStatistics* null, %struct._ChannelStatistics** %retval, align 8, !dbg !5938
  br label %return, !dbg !5938

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5939
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5940
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5940
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5941
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !5942
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !5942
  %call9 = call %struct._ChannelStatistics* @GetImageChannelStatistics(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !5943
  store %struct._ChannelStatistics* %call9, %struct._ChannelStatistics** %retval, align 8, !dbg !5944
  br label %return, !dbg !5944

return:                                           ; preds = %if.end6, %if.then2
  %12 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %retval, align 8, !dbg !5945
  ret %struct._ChannelStatistics* %12, !dbg !5945
}

declare dso_local %struct._ChannelStatistics* @GetImageChannelStatistics(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageColormapColor(%struct._MagickWand* %wand, i64 %index, %struct._PixelWand* %color) #0 !dbg !5946 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %index.addr = alloca i64, align 8
  %color.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !5951, metadata !DIExpression()), !dbg !5952
  store %struct._PixelWand* %color, %struct._PixelWand** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %color.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5955
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !5957
  %1 = load i32, i32* %debug, align 8, !dbg !5957
  %cmp = icmp ne i32 %1, 0, !dbg !5958
  br i1 %cmp, label %if.then, label %if.end, !dbg !5959

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5960
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !5961
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5960
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4658, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5962
  br label %if.end, !dbg !5963

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5964
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !5966
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !5966
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5967
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5968

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5969
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !5969
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5969
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5969
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !5969
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5969
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4660, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5969
  store i32 0, i32* %retval, align 4, !dbg !5969
  br label %return, !dbg !5969

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5971
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !5973
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !5973
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 11, !dbg !5974
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5974
  %cmp8 = icmp eq %struct._PixelPacket* %10, null, !dbg !5975
  br i1 %cmp8, label %if.then11, label %lor.lhs.false, !dbg !5976

lor.lhs.false:                                    ; preds = %if.end6
  %11 = load i64, i64* %index.addr, align 8, !dbg !5977
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5978
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !5979
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !5979
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 10, !dbg !5980
  %14 = load i64, i64* %colors, align 8, !dbg !5980
  %cmp10 = icmp uge i64 %11, %14, !dbg !5981
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !5982

if.then11:                                        ; preds = %lor.lhs.false, %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5983
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !5985
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !5985
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5986
  %name13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 1, !dbg !5987
  %arraydecay14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name13, i64 0, i64 0, !dbg !5986
  %call15 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4664, i32 470, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay14), !dbg !5988
  store i32 0, i32* %retval, align 4, !dbg !5989
  br label %return, !dbg !5989

if.end16:                                         ; preds = %lor.lhs.false
  %18 = load %struct._PixelWand*, %struct._PixelWand** %color.addr, align 8, !dbg !5990
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !5991
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !5992
  %20 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !5992
  %colormap18 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 11, !dbg !5993
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap18, align 8, !dbg !5993
  %22 = load i64, i64* %index.addr, align 8, !dbg !5994
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i64 %22, !dbg !5995
  call void @PixelSetQuantumColor(%struct._PixelWand* %18, %struct._PixelPacket* %add.ptr), !dbg !5996
  store i32 1, i32* %retval, align 4, !dbg !5997
  br label %return, !dbg !5997

return:                                           ; preds = %if.end16, %if.then11, %if.then2
  %23 = load i32, i32* %retval, align 4, !dbg !5998
  ret i32 %23, !dbg !5998
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageColors(%struct._MagickWand* %wand) #0 !dbg !5999 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6002, metadata !DIExpression()), !dbg !6003
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6004
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6006
  %1 = load i32, i32* %debug, align 8, !dbg !6006
  %cmp = icmp ne i32 %1, 0, !dbg !6007
  br i1 %cmp, label %if.then, label %if.end, !dbg !6008

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6009
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6010
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6009
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4699, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6011
  br label %if.end, !dbg !6012

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6013
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6015
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6015
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6016
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6017

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6018
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6020
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6020
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6021
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6022
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6021
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4702, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6023
  store i64 0, i64* %retval, align 8, !dbg !6024
  br label %return, !dbg !6024

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6025
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6026
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6026
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6027
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !6028
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !6028
  %call9 = call i64 @GetNumberColors(%struct._Image* %9, %struct._IO_FILE* null, %struct._ExceptionInfo* %11), !dbg !6029
  store i64 %call9, i64* %retval, align 8, !dbg !6030
  br label %return, !dbg !6030

return:                                           ; preds = %if.end6, %if.then2
  %12 = load i64, i64* %retval, align 8, !dbg !6031
  ret i64 %12, !dbg !6031
}

declare dso_local i64 @GetNumberColors(%struct._Image*, %struct._IO_FILE*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageColorspace(%struct._MagickWand* %wand) #0 !dbg !6032 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6035, metadata !DIExpression()), !dbg !6036
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6037
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6039
  %1 = load i32, i32* %debug, align 8, !dbg !6039
  %cmp = icmp ne i32 %1, 0, !dbg !6040
  br i1 %cmp, label %if.then, label %if.end, !dbg !6041

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6042
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6043
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6042
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4736, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6044
  br label %if.end, !dbg !6045

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6046
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6048
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6048
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6049
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6050

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6051
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6053
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6053
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6054
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6055
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6054
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4739, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6056
  store i32 0, i32* %retval, align 4, !dbg !6057
  br label %return, !dbg !6057

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6058
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6059
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6059
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 1, !dbg !6060
  %10 = load i32, i32* %colorspace, align 4, !dbg !6060
  store i32 %10, i32* %retval, align 4, !dbg !6061
  br label %return, !dbg !6061

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6062
  ret i32 %11, !dbg !6062
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageCompose(%struct._MagickWand* %wand) #0 !dbg !6063 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6066, metadata !DIExpression()), !dbg !6067
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6068
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6070
  %1 = load i32, i32* %debug, align 8, !dbg !6070
  %cmp = icmp ne i32 %1, 0, !dbg !6071
  br i1 %cmp, label %if.then, label %if.end, !dbg !6072

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6073
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6074
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6073
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4774, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6075
  br label %if.end, !dbg !6076

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6077
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6079
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6079
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6080
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6081

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6082
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6084
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6084
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6085
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6086
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6085
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4777, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6087
  store i32 0, i32* %retval, align 4, !dbg !6088
  br label %return, !dbg !6088

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6089
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6090
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6090
  %compose = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 36, !dbg !6091
  %10 = load i32, i32* %compose, align 8, !dbg !6091
  store i32 %10, i32* %retval, align 4, !dbg !6092
  br label %return, !dbg !6092

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6093
  ret i32 %11, !dbg !6093
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageCompression(%struct._MagickWand* %wand) #0 !dbg !6094 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6099
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6101
  %1 = load i32, i32* %debug, align 8, !dbg !6101
  %cmp = icmp ne i32 %1, 0, !dbg !6102
  br i1 %cmp, label %if.then, label %if.end, !dbg !6103

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6104
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6105
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6104
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4811, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6106
  br label %if.end, !dbg !6107

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6108
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6110
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6110
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6111
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6112

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6113
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6115
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6115
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6116
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6117
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6116
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4814, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6118
  store i32 0, i32* %retval, align 4, !dbg !6119
  br label %return, !dbg !6119

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6120
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6121
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6121
  %compression = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 2, !dbg !6122
  %10 = load i32, i32* %compression, align 8, !dbg !6122
  store i32 %10, i32* %retval, align 4, !dbg !6123
  br label %return, !dbg !6123

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6124
  ret i32 %11, !dbg !6124
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageCompressionQuality(%struct._MagickWand* %wand) #0 !dbg !6125 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6128
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6130
  %1 = load i32, i32* %debug, align 8, !dbg !6130
  %cmp = icmp ne i32 %1, 0, !dbg !6131
  br i1 %cmp, label %if.then, label %if.end, !dbg !6132

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6133
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6134
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6133
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4848, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6135
  br label %if.end, !dbg !6136

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6137
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6139
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6139
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6140
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6141

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6142
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6144
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6144
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6145
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6146
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6145
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4851, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6147
  store i64 0, i64* %retval, align 8, !dbg !6148
  br label %return, !dbg !6148

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6149
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6150
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6150
  %quality = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 3, !dbg !6151
  %10 = load i64, i64* %quality, align 8, !dbg !6151
  store i64 %10, i64* %retval, align 8, !dbg !6152
  br label %return, !dbg !6152

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !6153
  ret i64 %11, !dbg !6153
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageDelay(%struct._MagickWand* %wand) #0 !dbg !6154 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6157
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6159
  %1 = load i32, i32* %debug, align 8, !dbg !6159
  %cmp = icmp ne i32 %1, 0, !dbg !6160
  br i1 %cmp, label %if.then, label %if.end, !dbg !6161

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6162
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6163
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6162
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4885, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6164
  br label %if.end, !dbg !6165

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6166
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6168
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6168
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6169
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6170

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6171
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6171
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6171
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6171
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6171
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6171
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4887, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6171
  store i64 0, i64* %retval, align 8, !dbg !6171
  br label %return, !dbg !6171

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6173
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6174
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6174
  %delay = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 40, !dbg !6175
  %10 = load i64, i64* %delay, align 8, !dbg !6175
  store i64 %10, i64* %retval, align 8, !dbg !6176
  br label %return, !dbg !6176

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !6177
  ret i64 %11, !dbg !6177
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageDepth(%struct._MagickWand* %wand) #0 !dbg !6178 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6179, metadata !DIExpression()), !dbg !6180
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6181
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6183
  %1 = load i32, i32* %debug, align 8, !dbg !6183
  %cmp = icmp ne i32 %1, 0, !dbg !6184
  br i1 %cmp, label %if.then, label %if.end, !dbg !6185

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6186
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6187
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6186
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4918, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6188
  br label %if.end, !dbg !6189

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6190
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6192
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6192
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6193
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6194

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6195
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6195
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6195
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6195
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6195
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6195
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4920, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6195
  store i64 0, i64* %retval, align 8, !dbg !6195
  br label %return, !dbg !6195

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6197
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6198
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6198
  %depth = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 9, !dbg !6199
  %10 = load i64, i64* %depth, align 8, !dbg !6199
  store i64 %10, i64* %retval, align 8, !dbg !6200
  br label %return, !dbg !6200

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !6201
  ret i64 %11, !dbg !6201
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageDistortion(%struct._MagickWand* %wand, %struct._MagickWand* %reference, i32 %metric, double* %distortion) #0 !dbg !6202 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %reference.addr = alloca %struct._MagickWand*, align 8
  %metric.addr = alloca i32, align 4
  %distortion.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6205, metadata !DIExpression()), !dbg !6206
  store %struct._MagickWand* %reference, %struct._MagickWand** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %reference.addr, metadata !6207, metadata !DIExpression()), !dbg !6208
  store i32 %metric, i32* %metric.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %metric.addr, metadata !6209, metadata !DIExpression()), !dbg !6210
  store double* %distortion, double** %distortion.addr, align 8
  call void @llvm.dbg.declare(metadata double** %distortion.addr, metadata !6211, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6213, metadata !DIExpression()), !dbg !6214
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6215
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6217
  %1 = load i32, i32* %debug, align 8, !dbg !6217
  %cmp = icmp ne i32 %1, 0, !dbg !6218
  br i1 %cmp, label %if.then, label %if.end, !dbg !6219

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6220
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6221
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6220
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4964, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6222
  br label %if.end, !dbg !6223

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6224
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6226
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6226
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6227
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6228

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !6229
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !6230
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !6230
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !6231
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !6232

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6233
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !6233
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6233
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6233
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !6233
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !6233
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4966, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !6233
  store i32 0, i32* %retval, align 4, !dbg !6233
  br label %return, !dbg !6233

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6235
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !6236
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !6236
  %12 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !6237
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !6238
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !6238
  %14 = load i32, i32* %metric.addr, align 4, !dbg !6239
  %15 = load double*, double** %distortion.addr, align 8, !dbg !6240
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6241
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !6242
  %17 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !6242
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !6243
  %call13 = call i32 @GetImageDistortion(%struct._Image* %11, %struct._Image* %13, i32 %14, double* %15, %struct._ExceptionInfo* %exception12), !dbg !6244
  store i32 %call13, i32* %status, align 4, !dbg !6245
  %18 = load i32, i32* %status, align 4, !dbg !6246
  store i32 %18, i32* %retval, align 4, !dbg !6247
  br label %return, !dbg !6247

return:                                           ; preds = %if.end8, %if.then4
  %19 = load i32, i32* %retval, align 4, !dbg !6248
  ret i32 %19, !dbg !6248
}

declare dso_local i32 @GetImageDistortion(%struct._Image*, %struct._Image*, i32, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageDispose(%struct._MagickWand* %wand) #0 !dbg !6249 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6254
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6256
  %1 = load i32, i32* %debug, align 8, !dbg !6256
  %cmp = icmp ne i32 %1, 0, !dbg !6257
  br i1 %cmp, label %if.then, label %if.end, !dbg !6258

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6259
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6260
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6259
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4999, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6261
  br label %if.end, !dbg !6262

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6263
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6265
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6265
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6266
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6267

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6268
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6270
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6270
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6271
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6272
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6271
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5002, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6273
  store i32 0, i32* %retval, align 4, !dbg !6274
  br label %return, !dbg !6274

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6275
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6276
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6276
  %dispose = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 37, !dbg !6277
  %10 = load i32, i32* %dispose, align 4, !dbg !6277
  store i32 %10, i32* %retval, align 4, !dbg !6278
  br label %return, !dbg !6278

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6279
  ret i32 %11, !dbg !6279
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageEndian(%struct._MagickWand* %wand) #0 !dbg !6280 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6285
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6287
  %1 = load i32, i32* %debug, align 8, !dbg !6287
  %cmp = icmp ne i32 %1, 0, !dbg !6288
  br i1 %cmp, label %if.then, label %if.end, !dbg !6289

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6290
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6291
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6290
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5036, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6292
  br label %if.end, !dbg !6293

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6294
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6296
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6296
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6297
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6298

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6299
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6301
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6301
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6302
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6303
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6302
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5039, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6304
  store i32 0, i32* %retval, align 4, !dbg !6305
  br label %return, !dbg !6305

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6306
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6307
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6307
  %endian = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 34, !dbg !6308
  %10 = load i32, i32* %endian, align 8, !dbg !6308
  store i32 %10, i32* %retval, align 4, !dbg !6309
  br label %return, !dbg !6309

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6310
  ret i32 %11, !dbg !6310
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @MagickGetImageFilename(%struct._MagickWand* %wand) #0 !dbg !6311 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6316
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6318
  %1 = load i32, i32* %debug, align 8, !dbg !6318
  %cmp = icmp ne i32 %1, 0, !dbg !6319
  br i1 %cmp, label %if.then, label %if.end, !dbg !6320

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6321
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6322
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6321
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5074, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6323
  br label %if.end, !dbg !6324

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6325
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6327
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6327
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6328
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6329

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6330
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6332
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6332
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6333
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6334
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6333
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5077, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6335
  store i8* null, i8** %retval, align 8, !dbg !6336
  br label %return, !dbg !6336

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6337
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6338
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6338
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 53, !dbg !6339
  %arraydecay8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6337
  %call9 = call i8* @AcquireString(i8* %arraydecay8), !dbg !6340
  store i8* %call9, i8** %retval, align 8, !dbg !6341
  br label %return, !dbg !6341

return:                                           ; preds = %if.end6, %if.then2
  %10 = load i8*, i8** %retval, align 8, !dbg !6342
  ret i8* %10, !dbg !6342
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @MagickGetImageFormat(%struct._MagickWand* %wand) #0 !dbg !6343 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6346
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6348
  %1 = load i32, i32* %debug, align 8, !dbg !6348
  %cmp = icmp ne i32 %1, 0, !dbg !6349
  br i1 %cmp, label %if.then, label %if.end, !dbg !6350

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6351
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6352
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6351
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6353
  br label %if.end, !dbg !6354

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6355
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6357
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6357
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6358
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6359

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6360
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6362
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6362
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6363
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6364
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6363
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5115, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6365
  store i8* null, i8** %retval, align 8, !dbg !6366
  br label %return, !dbg !6366

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6367
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6368
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6368
  %magick = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 55, !dbg !6369
  %arraydecay8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick, i64 0, i64 0, !dbg !6367
  %call9 = call i8* @AcquireString(i8* %arraydecay8), !dbg !6370
  store i8* %call9, i8** %retval, align 8, !dbg !6371
  br label %return, !dbg !6371

return:                                           ; preds = %if.end6, %if.then2
  %10 = load i8*, i8** %retval, align 8, !dbg !6372
  ret i8* %10, !dbg !6372
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @MagickGetImageFuzz(%struct._MagickWand* %wand) #0 !dbg !6373 {
entry:
  %retval = alloca double, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6378
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6380
  %1 = load i32, i32* %debug, align 8, !dbg !6380
  %cmp = icmp ne i32 %1, 0, !dbg !6381
  br i1 %cmp, label %if.then, label %if.end, !dbg !6382

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6383
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6384
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6383
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5149, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6385
  br label %if.end, !dbg !6386

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6387
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6389
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6389
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6390
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6391

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6392
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6394
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6394
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6395
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6396
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6395
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5152, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6397
  store double 0.000000e+00, double* %retval, align 8, !dbg !6398
  br label %return, !dbg !6398

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6399
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6400
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6400
  %fuzz = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 31, !dbg !6401
  %10 = load double, double* %fuzz, align 8, !dbg !6401
  store double %10, double* %retval, align 8, !dbg !6402
  br label %return, !dbg !6402

return:                                           ; preds = %if.end6, %if.then2
  %11 = load double, double* %retval, align 8, !dbg !6403
  ret double %11, !dbg !6403
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @MagickGetImageGamma(%struct._MagickWand* %wand) #0 !dbg !6404 {
entry:
  %retval = alloca double, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6407
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6409
  %1 = load i32, i32* %debug, align 8, !dbg !6409
  %cmp = icmp ne i32 %1, 0, !dbg !6410
  br i1 %cmp, label %if.then, label %if.end, !dbg !6411

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6412
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6413
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6412
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5186, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6414
  br label %if.end, !dbg !6415

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6416
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6418
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6418
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6419
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6420

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6421
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6423
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6423
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6424
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6425
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6424
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5189, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6426
  store double 0.000000e+00, double* %retval, align 8, !dbg !6427
  br label %return, !dbg !6427

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6428
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6429
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6429
  %gamma = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 15, !dbg !6430
  %10 = load double, double* %gamma, align 8, !dbg !6430
  store double %10, double* %retval, align 8, !dbg !6431
  br label %return, !dbg !6431

return:                                           ; preds = %if.end6, %if.then2
  %11 = load double, double* %retval, align 8, !dbg !6432
  ret double %11, !dbg !6432
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageGravity(%struct._MagickWand* %wand) #0 !dbg !6433 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6436, metadata !DIExpression()), !dbg !6437
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6438
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6440
  %1 = load i32, i32* %debug, align 8, !dbg !6440
  %cmp = icmp ne i32 %1, 0, !dbg !6441
  br i1 %cmp, label %if.then, label %if.end, !dbg !6442

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6443
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6444
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6443
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5223, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6445
  br label %if.end, !dbg !6446

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6447
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6449
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6449
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6450
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6451

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6452
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6454
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6454
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6455
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6456
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6455
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5226, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6457
  store i32 0, i32* %retval, align 4, !dbg !6458
  br label %return, !dbg !6458

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6459
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6460
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6460
  %gravity = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 35, !dbg !6461
  %10 = load i32, i32* %gravity, align 4, !dbg !6461
  store i32 %10, i32* %retval, align 4, !dbg !6462
  br label %return, !dbg !6462

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6463
  ret i32 %11, !dbg !6463
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageGreenPrimary(%struct._MagickWand* %wand, double* %x, double* %y) #0 !dbg !6464 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6471
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6473
  %1 = load i32, i32* %debug, align 8, !dbg !6473
  %cmp = icmp ne i32 %1, 0, !dbg !6474
  br i1 %cmp, label %if.then, label %if.end, !dbg !6475

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6476
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6477
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6476
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5266, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6478
  br label %if.end, !dbg !6479

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6480
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6482
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6482
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6483
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6484

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6485
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6485
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6485
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6485
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6485
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6485
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5268, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6485
  store i32 0, i32* %retval, align 4, !dbg !6485
  br label %return, !dbg !6485

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6487
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6488
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6488
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 16, !dbg !6489
  %green_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 1, !dbg !6490
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary, i32 0, i32 0, !dbg !6491
  %10 = load double, double* %x8, align 8, !dbg !6491
  %11 = load double*, double** %x.addr, align 8, !dbg !6492
  store double %10, double* %11, align 8, !dbg !6493
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6494
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !6495
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !6495
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !6496
  %green_primary11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 1, !dbg !6497
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary11, i32 0, i32 1, !dbg !6498
  %14 = load double, double* %y12, align 8, !dbg !6498
  %15 = load double*, double** %y.addr, align 8, !dbg !6499
  store double %14, double* %15, align 8, !dbg !6500
  store i32 1, i32* %retval, align 4, !dbg !6501
  br label %return, !dbg !6501

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !6502
  ret i32 %16, !dbg !6502
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageHeight(%struct._MagickWand* %wand) #0 !dbg !6503 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6504, metadata !DIExpression()), !dbg !6505
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6506
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6508
  %1 = load i32, i32* %debug, align 8, !dbg !6508
  %cmp = icmp ne i32 %1, 0, !dbg !6509
  br i1 %cmp, label %if.then, label %if.end, !dbg !6510

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6511
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6512
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6511
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5301, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6513
  br label %if.end, !dbg !6514

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6515
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6517
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6517
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6518
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6519

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6520
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6520
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6520
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6520
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6520
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6520
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5303, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6520
  store i64 0, i64* %retval, align 8, !dbg !6520
  br label %return, !dbg !6520

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6522
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6523
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6523
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !6524
  %10 = load i64, i64* %rows, align 8, !dbg !6524
  store i64 %10, i64* %retval, align 8, !dbg !6525
  br label %return, !dbg !6525

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !6526
  ret i64 %11, !dbg !6526
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelWand** @MagickGetImageHistogram(%struct._MagickWand* %wand, i64* %number_colors) #0 !dbg !6527 {
entry:
  %retval = alloca %struct._PixelWand**, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %number_colors.addr = alloca i64*, align 8
  %histogram = alloca %struct._ColorPacket*, align 8
  %pixel_wands = alloca %struct._PixelWand**, align 8
  %i = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  store i64* %number_colors, i64** %number_colors.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %number_colors.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.declare(metadata %struct._ColorPacket** %histogram, metadata !6534, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.declare(metadata %struct._PixelWand*** %pixel_wands, metadata !6536, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6538, metadata !DIExpression()), !dbg !6539
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6540
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6542
  %1 = load i32, i32* %debug, align 8, !dbg !6542
  %cmp = icmp ne i32 %1, 0, !dbg !6543
  br i1 %cmp, label %if.then, label %if.end, !dbg !6544

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6545
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6546
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6545
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5349, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6547
  br label %if.end, !dbg !6548

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6549
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6551
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6551
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6552
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6553

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6554
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6556
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6556
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6557
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6558
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6557
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5352, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6559
  store %struct._PixelWand** null, %struct._PixelWand*** %retval, align 8, !dbg !6560
  br label %return, !dbg !6560

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6561
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6562
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6562
  %10 = load i64*, i64** %number_colors.addr, align 8, !dbg !6563
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6564
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !6565
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !6565
  %call9 = call %struct._ColorPacket* @GetImageHistogram(%struct._Image* %9, i64* %10, %struct._ExceptionInfo* %12), !dbg !6566
  store %struct._ColorPacket* %call9, %struct._ColorPacket** %histogram, align 8, !dbg !6567
  %13 = load %struct._ColorPacket*, %struct._ColorPacket** %histogram, align 8, !dbg !6568
  %cmp10 = icmp eq %struct._ColorPacket* %13, null, !dbg !6570
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !6571

if.then11:                                        ; preds = %if.end6
  store %struct._PixelWand** null, %struct._PixelWand*** %retval, align 8, !dbg !6572
  br label %return, !dbg !6572

if.end12:                                         ; preds = %if.end6
  %14 = load i64*, i64** %number_colors.addr, align 8, !dbg !6573
  %15 = load i64, i64* %14, align 8, !dbg !6574
  %call13 = call %struct._PixelWand** @NewPixelWands(i64 %15), !dbg !6575
  store %struct._PixelWand** %call13, %struct._PixelWand*** %pixel_wands, align 8, !dbg !6576
  store i64 0, i64* %i, align 8, !dbg !6577
  br label %for.cond, !dbg !6579

for.cond:                                         ; preds = %for.inc, %if.end12
  %16 = load i64, i64* %i, align 8, !dbg !6580
  %17 = load i64*, i64** %number_colors.addr, align 8, !dbg !6582
  %18 = load i64, i64* %17, align 8, !dbg !6583
  %cmp14 = icmp slt i64 %16, %18, !dbg !6584
  br i1 %cmp14, label %for.body, label %for.end, !dbg !6585

for.body:                                         ; preds = %for.cond
  %19 = load %struct._PixelWand**, %struct._PixelWand*** %pixel_wands, align 8, !dbg !6586
  %20 = load i64, i64* %i, align 8, !dbg !6588
  %arrayidx = getelementptr inbounds %struct._PixelWand*, %struct._PixelWand** %19, i64 %20, !dbg !6586
  %21 = load %struct._PixelWand*, %struct._PixelWand** %arrayidx, align 8, !dbg !6586
  %22 = load %struct._ColorPacket*, %struct._ColorPacket** %histogram, align 8, !dbg !6589
  %23 = load i64, i64* %i, align 8, !dbg !6590
  %arrayidx15 = getelementptr inbounds %struct._ColorPacket, %struct._ColorPacket* %22, i64 %23, !dbg !6589
  %pixel = getelementptr inbounds %struct._ColorPacket, %struct._ColorPacket* %arrayidx15, i32 0, i32 0, !dbg !6591
  call void @PixelSetQuantumColor(%struct._PixelWand* %21, %struct._PixelPacket* %pixel), !dbg !6592
  %24 = load %struct._PixelWand**, %struct._PixelWand*** %pixel_wands, align 8, !dbg !6593
  %25 = load i64, i64* %i, align 8, !dbg !6594
  %arrayidx16 = getelementptr inbounds %struct._PixelWand*, %struct._PixelWand** %24, i64 %25, !dbg !6593
  %26 = load %struct._PixelWand*, %struct._PixelWand** %arrayidx16, align 8, !dbg !6593
  %27 = load %struct._ColorPacket*, %struct._ColorPacket** %histogram, align 8, !dbg !6595
  %28 = load i64, i64* %i, align 8, !dbg !6596
  %arrayidx17 = getelementptr inbounds %struct._ColorPacket, %struct._ColorPacket* %27, i64 %28, !dbg !6595
  %index = getelementptr inbounds %struct._ColorPacket, %struct._ColorPacket* %arrayidx17, i32 0, i32 1, !dbg !6597
  %29 = load i16, i16* %index, align 8, !dbg !6597
  call void @PixelSetIndex(%struct._PixelWand* %26, i16 zeroext %29), !dbg !6598
  %30 = load %struct._PixelWand**, %struct._PixelWand*** %pixel_wands, align 8, !dbg !6599
  %31 = load i64, i64* %i, align 8, !dbg !6600
  %arrayidx18 = getelementptr inbounds %struct._PixelWand*, %struct._PixelWand** %30, i64 %31, !dbg !6599
  %32 = load %struct._PixelWand*, %struct._PixelWand** %arrayidx18, align 8, !dbg !6599
  %33 = load %struct._ColorPacket*, %struct._ColorPacket** %histogram, align 8, !dbg !6601
  %34 = load i64, i64* %i, align 8, !dbg !6602
  %arrayidx19 = getelementptr inbounds %struct._ColorPacket, %struct._ColorPacket* %33, i64 %34, !dbg !6601
  %count = getelementptr inbounds %struct._ColorPacket, %struct._ColorPacket* %arrayidx19, i32 0, i32 2, !dbg !6603
  %35 = load i64, i64* %count, align 8, !dbg !6603
  call void @PixelSetColorCount(%struct._PixelWand* %32, i64 %35), !dbg !6604
  br label %for.inc, !dbg !6605

for.inc:                                          ; preds = %for.body
  %36 = load i64, i64* %i, align 8, !dbg !6606
  %inc = add nsw i64 %36, 1, !dbg !6606
  store i64 %inc, i64* %i, align 8, !dbg !6606
  br label %for.cond, !dbg !6607, !llvm.loop !6608

for.end:                                          ; preds = %for.cond
  %37 = load %struct._ColorPacket*, %struct._ColorPacket** %histogram, align 8, !dbg !6610
  %38 = bitcast %struct._ColorPacket* %37 to i8*, !dbg !6610
  %call20 = call i8* @RelinquishMagickMemory(i8* %38), !dbg !6611
  %39 = bitcast i8* %call20 to %struct._ColorPacket*, !dbg !6612
  store %struct._ColorPacket* %39, %struct._ColorPacket** %histogram, align 8, !dbg !6613
  %40 = load %struct._PixelWand**, %struct._PixelWand*** %pixel_wands, align 8, !dbg !6614
  store %struct._PixelWand** %40, %struct._PixelWand*** %retval, align 8, !dbg !6615
  br label %return, !dbg !6615

return:                                           ; preds = %for.end, %if.then11, %if.then2
  %41 = load %struct._PixelWand**, %struct._PixelWand*** %retval, align 8, !dbg !6616
  ret %struct._PixelWand** %41, !dbg !6616
}

declare dso_local %struct._ColorPacket* @GetImageHistogram(%struct._Image*, i64*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelWand** @NewPixelWands(i64) #2

declare dso_local void @PixelSetIndex(%struct._PixelWand*, i16 zeroext) #2

declare dso_local void @PixelSetColorCount(%struct._PixelWand*, i64) #2

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageInterlaceScheme(%struct._MagickWand* %wand) #0 !dbg !6617 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6620, metadata !DIExpression()), !dbg !6621
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6622
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6624
  %1 = load i32, i32* %debug, align 8, !dbg !6624
  %cmp = icmp ne i32 %1, 0, !dbg !6625
  br i1 %cmp, label %if.then, label %if.end, !dbg !6626

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6627
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6628
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6627
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5397, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6629
  br label %if.end, !dbg !6630

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6631
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6633
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6633
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6634
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6635

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6636
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6638
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6638
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6639
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6640
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6639
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5400, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6641
  store i32 0, i32* %retval, align 4, !dbg !6642
  br label %return, !dbg !6642

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6643
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6644
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6644
  %interlace = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 33, !dbg !6645
  %10 = load i32, i32* %interlace, align 4, !dbg !6645
  store i32 %10, i32* %retval, align 4, !dbg !6646
  br label %return, !dbg !6646

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6647
  ret i32 %11, !dbg !6647
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageInterpolateMethod(%struct._MagickWand* %wand) #0 !dbg !6648 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6651, metadata !DIExpression()), !dbg !6652
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6653
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6655
  %1 = load i32, i32* %debug, align 8, !dbg !6655
  %cmp = icmp ne i32 %1, 0, !dbg !6656
  br i1 %cmp, label %if.then, label %if.end, !dbg !6657

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6658
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6659
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6658
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5436, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6660
  br label %if.end, !dbg !6661

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6662
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6664
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6664
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6665
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6666

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6667
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6669
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6669
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6670
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6671
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6670
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5439, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6672
  store i32 0, i32* %retval, align 4, !dbg !6673
  br label %return, !dbg !6673

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6674
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6675
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6675
  %interpolate = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 70, !dbg !6676
  %10 = load i32, i32* %interpolate, align 8, !dbg !6676
  store i32 %10, i32* %retval, align 4, !dbg !6677
  br label %return, !dbg !6677

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6678
  ret i32 %11, !dbg !6678
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageIterations(%struct._MagickWand* %wand) #0 !dbg !6679 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6680, metadata !DIExpression()), !dbg !6681
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6682
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6684
  %1 = load i32, i32* %debug, align 8, !dbg !6684
  %cmp = icmp ne i32 %1, 0, !dbg !6685
  br i1 %cmp, label %if.then, label %if.end, !dbg !6686

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6687
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6688
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6687
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5473, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6689
  br label %if.end, !dbg !6690

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6691
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6693
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6693
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6694
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6695

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6696
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6696
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6696
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6696
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6696
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6696
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5475, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6696
  store i64 0, i64* %retval, align 8, !dbg !6696
  br label %return, !dbg !6696

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6698
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6699
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6699
  %iterations = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 42, !dbg !6700
  %10 = load i64, i64* %iterations, align 8, !dbg !6700
  store i64 %10, i64* %retval, align 8, !dbg !6701
  br label %return, !dbg !6701

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !6702
  ret i64 %11, !dbg !6702
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageLength(%struct._MagickWand* %wand, i64* %length) #0 !dbg !6703 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %length.addr = alloca i64*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6707, metadata !DIExpression()), !dbg !6708
  store i64* %length, i64** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %length.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6711
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6713
  %1 = load i32, i32* %debug, align 8, !dbg !6713
  %cmp = icmp ne i32 %1, 0, !dbg !6714
  br i1 %cmp, label %if.then, label %if.end, !dbg !6715

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6716
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6717
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6716
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5510, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6718
  br label %if.end, !dbg !6719

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6720
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6722
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6722
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6723
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6724

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6725
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6725
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6725
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6725
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6725
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6725
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5512, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6725
  store i32 0, i32* %retval, align 4, !dbg !6725
  br label %return, !dbg !6725

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6727
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6728
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6728
  %call8 = call i64 @GetBlobSize(%struct._Image* %9), !dbg !6729
  %10 = load i64*, i64** %length.addr, align 8, !dbg !6730
  store i64 %call8, i64* %10, align 8, !dbg !6731
  store i32 1, i32* %retval, align 4, !dbg !6732
  br label %return, !dbg !6732

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6733
  ret i32 %11, !dbg !6733
}

declare dso_local i64 @GetBlobSize(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageMatteColor(%struct._MagickWand* %wand, %struct._PixelWand* %matte_color) #0 !dbg !6734 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %matte_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  store %struct._PixelWand* %matte_color, %struct._PixelWand** %matte_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %matte_color.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6739
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6741
  %1 = load i32, i32* %debug, align 8, !dbg !6741
  %cmp = icmp ne i32 %1, 0, !dbg !6742
  br i1 %cmp, label %if.then, label %if.end, !dbg !6743

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6744
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6745
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6744
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5548, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6746
  br label %if.end, !dbg !6747

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6748
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6750
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6750
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6751
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6752

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6753
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6753
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6753
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6753
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6753
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6753
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5550, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6753
  store i32 0, i32* %retval, align 4, !dbg !6753
  br label %return, !dbg !6753

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %matte_color.addr, align 8, !dbg !6755
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6756
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !6757
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6757
  %matte_color8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 14, !dbg !6758
  call void @PixelSetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %matte_color8), !dbg !6759
  store i32 1, i32* %retval, align 4, !dbg !6760
  br label %return, !dbg !6760

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6761
  ret i32 %11, !dbg !6761
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageOrientation(%struct._MagickWand* %wand) #0 !dbg !6762 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6767
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6769
  %1 = load i32, i32* %debug, align 8, !dbg !6769
  %cmp = icmp ne i32 %1, 0, !dbg !6770
  br i1 %cmp, label %if.then, label %if.end, !dbg !6771

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6772
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6773
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6772
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5582, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6774
  br label %if.end, !dbg !6775

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6776
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6778
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6778
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6779
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6780

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6781
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6783
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6783
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6784
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6785
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6784
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5585, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6786
  store i32 0, i32* %retval, align 4, !dbg !6787
  br label %return, !dbg !6787

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6788
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6789
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6789
  %orientation = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 4, !dbg !6790
  %10 = load i32, i32* %orientation, align 8, !dbg !6790
  store i32 %10, i32* %retval, align 4, !dbg !6791
  br label %return, !dbg !6791

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6792
  ret i32 %11, !dbg !6792
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImagePage(%struct._MagickWand* %wand, i64* %width, i64* %height, i64* %x, i64* %y) #0 !dbg !6793 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64*, align 8
  %height.addr = alloca i64*, align 8
  %x.addr = alloca i64*, align 8
  %y.addr = alloca i64*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  store i64* %width, i64** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i64* %height, i64** %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %height.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !6803, metadata !DIExpression()), !dbg !6804
  store i64* %y, i64** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %y.addr, metadata !6805, metadata !DIExpression()), !dbg !6806
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6807
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6809
  %1 = load i32, i32* %debug, align 8, !dbg !6809
  %cmp = icmp ne i32 %1, 0, !dbg !6810
  br i1 %cmp, label %if.then, label %if.end, !dbg !6811

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6812
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6813
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6812
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5629, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6814
  br label %if.end, !dbg !6815

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6816
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6818
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6818
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6819
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6820

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6821
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6821
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6821
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6821
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6821
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6821
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5631, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6821
  store i32 0, i32* %retval, align 4, !dbg !6821
  br label %return, !dbg !6821

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6823
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6824
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6824
  %page = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 26, !dbg !6825
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page, i32 0, i32 0, !dbg !6826
  %10 = load i64, i64* %width8, align 8, !dbg !6826
  %11 = load i64*, i64** %width.addr, align 8, !dbg !6827
  store i64 %10, i64* %11, align 8, !dbg !6828
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6829
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !6830
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !6830
  %page10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 26, !dbg !6831
  %height11 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page10, i32 0, i32 1, !dbg !6832
  %14 = load i64, i64* %height11, align 8, !dbg !6832
  %15 = load i64*, i64** %height.addr, align 8, !dbg !6833
  store i64 %14, i64* %15, align 8, !dbg !6834
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6835
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !6836
  %17 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !6836
  %page13 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 26, !dbg !6837
  %x14 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page13, i32 0, i32 2, !dbg !6838
  %18 = load i64, i64* %x14, align 8, !dbg !6838
  %19 = load i64*, i64** %x.addr, align 8, !dbg !6839
  store i64 %18, i64* %19, align 8, !dbg !6840
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6841
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 5, !dbg !6842
  %21 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !6842
  %page16 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 26, !dbg !6843
  %y17 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page16, i32 0, i32 3, !dbg !6844
  %22 = load i64, i64* %y17, align 8, !dbg !6844
  %23 = load i64*, i64** %y.addr, align 8, !dbg !6845
  store i64 %22, i64* %23, align 8, !dbg !6846
  store i32 1, i32* %retval, align 4, !dbg !6847
  br label %return, !dbg !6847

return:                                           ; preds = %if.end6, %if.then2
  %24 = load i32, i32* %retval, align 4, !dbg !6848
  ret i32 %24, !dbg !6848
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImagePixelColor(%struct._MagickWand* %wand, i64 %x, i64 %y, %struct._PixelWand* %color) #0 !dbg !6849 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %color.addr = alloca %struct._PixelWand*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !6856, metadata !DIExpression()), !dbg !6857
  store %struct._PixelWand* %color, %struct._PixelWand** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %color.addr, metadata !6858, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !6860, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !6863, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !6865, metadata !DIExpression()), !dbg !6869
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6870
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6872
  %1 = load i32, i32* %debug, align 8, !dbg !6872
  %cmp = icmp ne i32 %1, 0, !dbg !6873
  br i1 %cmp, label %if.then, label %if.end, !dbg !6874

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6875
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6876
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6875
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5681, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6877
  br label %if.end, !dbg !6878

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6879
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6881
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6881
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6882
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6883

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6884
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6884
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6884
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6884
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6884
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6884
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5683, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6884
  store i32 0, i32* %retval, align 4, !dbg !6884
  br label %return, !dbg !6884

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6886
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6887
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6887
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6888
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !6889
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !6889
  %call9 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !6890
  store %struct._CacheView* %call9, %struct._CacheView** %image_view, align 8, !dbg !6891
  %12 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6892
  %13 = load i64, i64* %x.addr, align 8, !dbg !6893
  %14 = load i64, i64* %y.addr, align 8, !dbg !6894
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6895
  %exception10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !6896
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception10, align 8, !dbg !6896
  %call11 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %12, i64 %13, i64 %14, i64 1, i64 1, %struct._ExceptionInfo* %16), !dbg !6897
  store %struct._PixelPacket* %call11, %struct._PixelPacket** %p, align 8, !dbg !6898
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6899
  %cmp12 = icmp eq %struct._PixelPacket* %17, null, !dbg !6901
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6902

if.then13:                                        ; preds = %if.end6
  %18 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6903
  %call14 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %18), !dbg !6905
  store %struct._CacheView* %call14, %struct._CacheView** %image_view, align 8, !dbg !6906
  store i32 0, i32* %retval, align 4, !dbg !6907
  br label %return, !dbg !6907

if.end15:                                         ; preds = %if.end6
  %19 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6908
  %call16 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %19), !dbg !6909
  store i16* %call16, i16** %indexes, align 8, !dbg !6910
  %20 = load %struct._PixelWand*, %struct._PixelWand** %color.addr, align 8, !dbg !6911
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6912
  call void @PixelSetQuantumColor(%struct._PixelWand* %20, %struct._PixelPacket* %21), !dbg !6913
  %22 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6914
  %call17 = call i32 @GetCacheViewColorspace(%struct._CacheView* %22), !dbg !6916
  %cmp18 = icmp eq i32 %call17, 12, !dbg !6917
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !6918

if.then19:                                        ; preds = %if.end15
  %23 = load %struct._PixelWand*, %struct._PixelWand** %color.addr, align 8, !dbg !6919
  %24 = load i16*, i16** %indexes, align 8, !dbg !6920
  %25 = load i16, i16* %24, align 2, !dbg !6921
  call void @PixelSetBlackQuantum(%struct._PixelWand* %23, i16 zeroext %25), !dbg !6922
  br label %if.end24, !dbg !6922

if.else:                                          ; preds = %if.end15
  %26 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6923
  %call20 = call i32 @GetCacheViewStorageClass(%struct._CacheView* %26), !dbg !6925
  %cmp21 = icmp eq i32 %call20, 2, !dbg !6926
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6927

if.then22:                                        ; preds = %if.else
  %27 = load %struct._PixelWand*, %struct._PixelWand** %color.addr, align 8, !dbg !6928
  %28 = load i16*, i16** %indexes, align 8, !dbg !6929
  %29 = load i16, i16* %28, align 2, !dbg !6930
  call void @PixelSetIndex(%struct._PixelWand* %27, i16 zeroext %29), !dbg !6931
  br label %if.end23, !dbg !6931

if.end23:                                         ; preds = %if.then22, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then19
  %30 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6932
  %call25 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %30), !dbg !6933
  store %struct._CacheView* %call25, %struct._CacheView** %image_view, align 8, !dbg !6934
  store i32 1, i32* %retval, align 4, !dbg !6935
  br label %return, !dbg !6935

return:                                           ; preds = %if.end24, %if.then13, %if.then2
  %31 = load i32, i32* %retval, align 4, !dbg !6936
  ret i32 %31, !dbg !6936
}

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

declare dso_local i32 @GetCacheViewColorspace(%struct._CacheView*) #2

declare dso_local void @PixelSetBlackQuantum(%struct._PixelWand*, i16 zeroext) #2

declare dso_local i32 @GetCacheViewStorageClass(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageRange(%struct._MagickWand* %wand, double* %minima, double* %maxima) #0 !dbg !6937 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %minima.addr = alloca double*, align 8
  %maxima.addr = alloca double*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6938, metadata !DIExpression()), !dbg !6939
  store double* %minima, double** %minima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %minima.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  store double* %maxima, double** %maxima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %maxima.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6944, metadata !DIExpression()), !dbg !6945
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6946
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6948
  %1 = load i32, i32* %debug, align 8, !dbg !6948
  %cmp = icmp ne i32 %1, 0, !dbg !6949
  br i1 %cmp, label %if.then, label %if.end, !dbg !6950

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6951
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6952
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6951
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5738, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6953
  br label %if.end, !dbg !6954

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6955
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6957
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6957
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6958
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6959

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6960
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6960
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6960
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6960
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6960
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6960
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5740, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6960
  store i32 0, i32* %retval, align 4, !dbg !6960
  br label %return, !dbg !6960

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6962
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6963
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6963
  %10 = load double*, double** %minima.addr, align 8, !dbg !6964
  %11 = load double*, double** %maxima.addr, align 8, !dbg !6965
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6966
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !6967
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !6967
  %call9 = call i32 @GetImageRange(%struct._Image* %9, double* %10, double* %11, %struct._ExceptionInfo* %13), !dbg !6968
  store i32 %call9, i32* %status, align 4, !dbg !6969
  %14 = load i32, i32* %status, align 4, !dbg !6970
  store i32 %14, i32* %retval, align 4, !dbg !6971
  br label %return, !dbg !6971

return:                                           ; preds = %if.end6, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !6972
  ret i32 %15, !dbg !6972
}

declare dso_local i32 @GetImageRange(%struct._Image*, double*, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageRedPrimary(%struct._MagickWand* %wand, double* %x, double* %y) #0 !dbg !6973 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6980
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !6982
  %1 = load i32, i32* %debug, align 8, !dbg !6982
  %cmp = icmp ne i32 %1, 0, !dbg !6983
  br i1 %cmp, label %if.then, label %if.end, !dbg !6984

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6985
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !6986
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6985
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5778, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6987
  br label %if.end, !dbg !6988

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6989
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !6991
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !6991
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6992
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6993

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6994
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !6994
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6994
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6994
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !6994
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6994
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5780, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6994
  store i32 0, i32* %retval, align 4, !dbg !6994
  br label %return, !dbg !6994

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !6996
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !6997
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !6997
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 16, !dbg !6998
  %red_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 0, !dbg !6999
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary, i32 0, i32 0, !dbg !7000
  %10 = load double, double* %x8, align 8, !dbg !7000
  %11 = load double*, double** %x.addr, align 8, !dbg !7001
  store double %10, double* %11, align 8, !dbg !7002
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7003
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !7004
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !7004
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !7005
  %red_primary11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 0, !dbg !7006
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary11, i32 0, i32 1, !dbg !7007
  %14 = load double, double* %y12, align 8, !dbg !7007
  %15 = load double*, double** %y.addr, align 8, !dbg !7008
  store double %14, double* %15, align 8, !dbg !7009
  store i32 1, i32* %retval, align 4, !dbg !7010
  br label %return, !dbg !7010

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !7011
  ret i32 %16, !dbg !7011
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickGetImageRegion(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y) #0 !dbg !7012 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %region_image = alloca %struct._Image*, align 8
  %region = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7015, metadata !DIExpression()), !dbg !7016
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7017, metadata !DIExpression()), !dbg !7018
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7019, metadata !DIExpression()), !dbg !7020
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !7021, metadata !DIExpression()), !dbg !7022
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !7023, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.declare(metadata %struct._Image** %region_image, metadata !7025, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %region, metadata !7027, metadata !DIExpression()), !dbg !7028
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7029
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7031
  %1 = load i32, i32* %debug, align 8, !dbg !7031
  %cmp = icmp ne i32 %1, 0, !dbg !7032
  br i1 %cmp, label %if.then, label %if.end, !dbg !7033

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7034
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7035
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7034
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5831, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7036
  br label %if.end, !dbg !7037

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7038
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7040
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7040
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7041
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7042

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !7043
  br label %return, !dbg !7043

if.end3:                                          ; preds = %if.end
  %5 = load i64, i64* %width.addr, align 8, !dbg !7044
  %width4 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %region, i32 0, i32 0, !dbg !7045
  store i64 %5, i64* %width4, align 8, !dbg !7046
  %6 = load i64, i64* %height.addr, align 8, !dbg !7047
  %height5 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %region, i32 0, i32 1, !dbg !7048
  store i64 %6, i64* %height5, align 8, !dbg !7049
  %7 = load i64, i64* %x.addr, align 8, !dbg !7050
  %x6 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %region, i32 0, i32 2, !dbg !7051
  store i64 %7, i64* %x6, align 8, !dbg !7052
  %8 = load i64, i64* %y.addr, align 8, !dbg !7053
  %y7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %region, i32 0, i32 3, !dbg !7054
  store i64 %8, i64* %y7, align 8, !dbg !7055
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7056
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !7057
  %10 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !7057
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7058
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !7059
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7059
  %call9 = call %struct._Image* @CropImage(%struct._Image* %10, %struct._RectangleInfo* %region, %struct._ExceptionInfo* %12), !dbg !7060
  store %struct._Image* %call9, %struct._Image** %region_image, align 8, !dbg !7061
  %13 = load %struct._Image*, %struct._Image** %region_image, align 8, !dbg !7062
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !7064
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7065

if.then11:                                        ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !7066
  br label %return, !dbg !7066

if.end12:                                         ; preds = %if.end3
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7067
  %15 = load %struct._Image*, %struct._Image** %region_image, align 8, !dbg !7068
  %call13 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %14, %struct._Image* %15), !dbg !7069
  store %struct._MagickWand* %call13, %struct._MagickWand** %retval, align 8, !dbg !7070
  br label %return, !dbg !7070

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !7071
  ret %struct._MagickWand* %16, !dbg !7071
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageRenderingIntent(%struct._MagickWand* %wand) #0 !dbg !7072 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7075, metadata !DIExpression()), !dbg !7076
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7077
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7079
  %1 = load i32, i32* %debug, align 8, !dbg !7079
  %cmp = icmp ne i32 %1, 0, !dbg !7080
  br i1 %cmp, label %if.then, label %if.end, !dbg !7081

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7082
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7083
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7082
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5871, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7084
  br label %if.end, !dbg !7085

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7086
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7088
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7088
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7089
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7090

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7091
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7093
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7093
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7094
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7095
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7094
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5874, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7096
  store i32 0, i32* %retval, align 4, !dbg !7097
  br label %return, !dbg !7097

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7098
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7099
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7099
  %rendering_intent = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 17, !dbg !7100
  %10 = load i32, i32* %rendering_intent, align 8, !dbg !7100
  store i32 %10, i32* %retval, align 4, !dbg !7101
  br label %return, !dbg !7101

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !7102
  ret i32 %11, !dbg !7102
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageResolution(%struct._MagickWand* %wand, double* %x, double* %y) #0 !dbg !7103 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7104, metadata !DIExpression()), !dbg !7105
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !7106, metadata !DIExpression()), !dbg !7107
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !7108, metadata !DIExpression()), !dbg !7109
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7110
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7112
  %1 = load i32, i32* %debug, align 8, !dbg !7112
  %cmp = icmp ne i32 %1, 0, !dbg !7113
  br i1 %cmp, label %if.then, label %if.end, !dbg !7114

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7115
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7116
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7115
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5914, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7117
  br label %if.end, !dbg !7118

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7119
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7121
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7121
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7122
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7123

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7124
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7124
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7124
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7124
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7124
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7124
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5916, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7124
  store i32 0, i32* %retval, align 4, !dbg !7124
  br label %return, !dbg !7124

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7126
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7127
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7127
  %x_resolution = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 24, !dbg !7128
  %10 = load double, double* %x_resolution, align 8, !dbg !7128
  %11 = load double*, double** %x.addr, align 8, !dbg !7129
  store double %10, double* %11, align 8, !dbg !7130
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7131
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !7132
  %13 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !7132
  %y_resolution = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 25, !dbg !7133
  %14 = load double, double* %y_resolution, align 8, !dbg !7133
  %15 = load double*, double** %y.addr, align 8, !dbg !7134
  store double %14, double* %15, align 8, !dbg !7135
  store i32 1, i32* %retval, align 4, !dbg !7136
  br label %return, !dbg !7136

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !7137
  ret i32 %16, !dbg !7137
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageScene(%struct._MagickWand* %wand) #0 !dbg !7138 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7141
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7143
  %1 = load i32, i32* %debug, align 8, !dbg !7143
  %cmp = icmp ne i32 %1, 0, !dbg !7144
  br i1 %cmp, label %if.then, label %if.end, !dbg !7145

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7146
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7147
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7146
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5949, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7148
  br label %if.end, !dbg !7149

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7150
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7152
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7152
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7153
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7154

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7155
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7155
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7155
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7155
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7155
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7155
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5951, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7155
  store i64 0, i64* %retval, align 8, !dbg !7155
  br label %return, !dbg !7155

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7157
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7158
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7158
  %scene = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 39, !dbg !7159
  %10 = load i64, i64* %scene, align 8, !dbg !7159
  store i64 %10, i64* %retval, align 8, !dbg !7160
  br label %return, !dbg !7160

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !7161
  ret i64 %11, !dbg !7161
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @MagickGetImageSignature(%struct._MagickWand* %wand) #0 !dbg !7162 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %value = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7163, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.declare(metadata i8** %value, metadata !7165, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7167, metadata !DIExpression()), !dbg !7168
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7169
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7171
  %1 = load i32, i32* %debug, align 8, !dbg !7171
  %cmp = icmp ne i32 %1, 0, !dbg !7172
  br i1 %cmp, label %if.then, label %if.end, !dbg !7173

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7174
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7175
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7174
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5989, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7176
  br label %if.end, !dbg !7177

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7178
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7180
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7180
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7181
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7182

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7183
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7185
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7185
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7186
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7187
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7186
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5992, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7188
  store i8* null, i8** %retval, align 8, !dbg !7189
  br label %return, !dbg !7189

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7190
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7191
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7191
  %call8 = call i32 @SignatureImage(%struct._Image* %9), !dbg !7192
  store i32 %call8, i32* %status, align 4, !dbg !7193
  %10 = load i32, i32* %status, align 4, !dbg !7194
  %cmp9 = icmp eq i32 %10, 0, !dbg !7196
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !7197

if.then10:                                        ; preds = %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7198
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !7199
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !7199
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7200
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !7201
  %14 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !7201
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !7202
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception13), !dbg !7203
  br label %if.end14, !dbg !7203

if.end14:                                         ; preds = %if.then10, %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7204
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !7205
  %16 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !7205
  %call16 = call i8* @GetImageProperty(%struct._Image* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)), !dbg !7206
  store i8* %call16, i8** %value, align 8, !dbg !7207
  %17 = load i8*, i8** %value, align 8, !dbg !7208
  %cmp17 = icmp ne i8* %17, null, !dbg !7210
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !7211

if.then18:                                        ; preds = %if.end14
  %18 = load i8*, i8** %value, align 8, !dbg !7212
  %call19 = call i8* @AcquireString(i8* %18), !dbg !7213
  store i8* %call19, i8** %retval, align 8, !dbg !7214
  br label %return, !dbg !7214

if.end20:                                         ; preds = %if.end14
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7215
  %exception21 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 2, !dbg !7216
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception21, align 8, !dbg !7216
  %21 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7217
  %images22 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %21, i32 0, i32 5, !dbg !7218
  %22 = load %struct._Image*, %struct._Image** %images22, align 8, !dbg !7218
  %exception23 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 58, !dbg !7219
  call void @InheritException(%struct._ExceptionInfo* %20, %struct._ExceptionInfo* %exception23), !dbg !7220
  store i8* null, i8** %retval, align 8, !dbg !7221
  br label %return, !dbg !7221

return:                                           ; preds = %if.end20, %if.then18, %if.then2
  %23 = load i8*, i8** %retval, align 8, !dbg !7222
  ret i8* %23, !dbg !7222
}

declare dso_local i32 @SignatureImage(%struct._Image*) #2

declare dso_local i8* @GetImageProperty(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageTicksPerSecond(%struct._MagickWand* %wand) #0 !dbg !7223 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7226
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7228
  %1 = load i32, i32* %debug, align 8, !dbg !7228
  %cmp = icmp ne i32 %1, 0, !dbg !7229
  br i1 %cmp, label %if.then, label %if.end, !dbg !7230

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7231
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7232
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7231
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6033, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7233
  br label %if.end, !dbg !7234

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7235
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7237
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7237
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7238
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7239

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7240
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7240
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7240
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7240
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7240
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7240
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6035, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7240
  store i64 0, i64* %retval, align 8, !dbg !7240
  br label %return, !dbg !7240

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7242
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7243
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7243
  %ticks_per_second = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 41, !dbg !7244
  %10 = load i64, i64* %ticks_per_second, align 8, !dbg !7244
  store i64 %10, i64* %retval, align 8, !dbg !7245
  br label %return, !dbg !7245

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !7246
  ret i64 %11, !dbg !7246
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageType(%struct._MagickWand* %wand) #0 !dbg !7247 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7250, metadata !DIExpression()), !dbg !7251
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7252
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7254
  %1 = load i32, i32* %debug, align 8, !dbg !7254
  %cmp = icmp ne i32 %1, 0, !dbg !7255
  br i1 %cmp, label %if.then, label %if.end, !dbg !7256

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7257
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7258
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7257
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6074, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7259
  br label %if.end, !dbg !7260

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7261
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7263
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7263
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7264
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7265

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7266
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7268
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7268
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7269
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7270
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7269
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6077, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7271
  store i32 0, i32* %retval, align 4, !dbg !7272
  br label %return, !dbg !7272

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7273
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7274
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7274
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7275
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !7276
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !7276
  %call9 = call i32 @GetImageType(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !7277
  store i32 %call9, i32* %retval, align 4, !dbg !7278
  br label %return, !dbg !7278

return:                                           ; preds = %if.end6, %if.then2
  %12 = load i32, i32* %retval, align 4, !dbg !7279
  ret i32 %12, !dbg !7279
}

declare dso_local i32 @GetImageType(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageUnits(%struct._MagickWand* %wand) #0 !dbg !7280 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7283, metadata !DIExpression()), !dbg !7284
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7285
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7287
  %1 = load i32, i32* %debug, align 8, !dbg !7287
  %cmp = icmp ne i32 %1, 0, !dbg !7288
  br i1 %cmp, label %if.then, label %if.end, !dbg !7289

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7290
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7291
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7290
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7292
  br label %if.end, !dbg !7293

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7294
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7296
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7296
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7297
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7298

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7299
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7301
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7301
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7302
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7303
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7302
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6114, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7304
  store i32 0, i32* %retval, align 4, !dbg !7305
  br label %return, !dbg !7305

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7306
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7307
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7307
  %units = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 19, !dbg !7308
  %10 = load i32, i32* %units, align 8, !dbg !7308
  store i32 %10, i32* %retval, align 4, !dbg !7309
  br label %return, !dbg !7309

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !7310
  ret i32 %11, !dbg !7310
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageVirtualPixelMethod(%struct._MagickWand* %wand) #0 !dbg !7311 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7314, metadata !DIExpression()), !dbg !7315
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7316
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7318
  %1 = load i32, i32* %debug, align 8, !dbg !7318
  %cmp = icmp ne i32 %1, 0, !dbg !7319
  br i1 %cmp, label %if.then, label %if.end, !dbg !7320

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7321
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7322
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7321
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6149, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7323
  br label %if.end, !dbg !7324

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7325
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7327
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7327
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7328
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7329

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7330
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7332
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7332
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7333
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7334
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7333
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6152, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7335
  store i32 0, i32* %retval, align 4, !dbg !7336
  br label %return, !dbg !7336

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7337
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7338
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7338
  %call8 = call i32 @GetImageVirtualPixelMethod(%struct._Image* %9), !dbg !7339
  store i32 %call8, i32* %retval, align 4, !dbg !7340
  br label %return, !dbg !7340

return:                                           ; preds = %if.end6, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !7341
  ret i32 %10, !dbg !7341
}

declare dso_local i32 @GetImageVirtualPixelMethod(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickGetImageWhitePoint(%struct._MagickWand* %wand, double* %x, double* %y) #0 !dbg !7342 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !7345, metadata !DIExpression()), !dbg !7346
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !7347, metadata !DIExpression()), !dbg !7348
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7349
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7351
  %1 = load i32, i32* %debug, align 8, !dbg !7351
  %cmp = icmp ne i32 %1, 0, !dbg !7352
  br i1 %cmp, label %if.then, label %if.end, !dbg !7353

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7354
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7355
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7354
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7356
  br label %if.end, !dbg !7357

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7358
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7360
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7360
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7361
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7362

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7363
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7363
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7363
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7363
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7363
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7363
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6194, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7363
  store i32 0, i32* %retval, align 4, !dbg !7363
  br label %return, !dbg !7363

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7365
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7366
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7366
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 16, !dbg !7367
  %white_point = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 3, !dbg !7368
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point, i32 0, i32 0, !dbg !7369
  %10 = load double, double* %x8, align 8, !dbg !7369
  %11 = load double*, double** %x.addr, align 8, !dbg !7370
  store double %10, double* %11, align 8, !dbg !7371
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7372
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !7373
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !7373
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !7374
  %white_point11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 3, !dbg !7375
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point11, i32 0, i32 1, !dbg !7376
  %14 = load double, double* %y12, align 8, !dbg !7376
  %15 = load double*, double** %y.addr, align 8, !dbg !7377
  store double %14, double* %15, align 8, !dbg !7378
  store i32 1, i32* %retval, align 4, !dbg !7379
  br label %return, !dbg !7379

return:                                           ; preds = %if.end6, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !7380
  ret i32 %16, !dbg !7380
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetImageWidth(%struct._MagickWand* %wand) #0 !dbg !7381 {
entry:
  %retval = alloca i64, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7384
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7386
  %1 = load i32, i32* %debug, align 8, !dbg !7386
  %cmp = icmp ne i32 %1, 0, !dbg !7387
  br i1 %cmp, label %if.then, label %if.end, !dbg !7388

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7389
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7390
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7389
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6227, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7391
  br label %if.end, !dbg !7392

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7393
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7395
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7395
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7396
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7397

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7398
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7398
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7398
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7398
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7398
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7398
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6229, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7398
  store i64 0, i64* %retval, align 8, !dbg !7398
  br label %return, !dbg !7398

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7400
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7401
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7401
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 7, !dbg !7402
  %10 = load i64, i64* %columns, align 8, !dbg !7402
  store i64 %10, i64* %retval, align 8, !dbg !7403
  br label %return, !dbg !7403

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i64, i64* %retval, align 8, !dbg !7404
  ret i64 %11, !dbg !7404
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @MagickGetNumberImages(%struct._MagickWand* %wand) #0 !dbg !7405 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7408
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7410
  %1 = load i32, i32* %debug, align 8, !dbg !7410
  %cmp = icmp ne i32 %1, 0, !dbg !7411
  br i1 %cmp, label %if.then, label %if.end, !dbg !7412

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7413
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7414
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7413
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6261, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7415
  br label %if.end, !dbg !7416

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7417
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7418
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7418
  %call1 = call i64 @GetImageListLength(%struct._Image* %4), !dbg !7419
  ret i64 %call1, !dbg !7420
}

declare dso_local i64 @GetImageListLength(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local double @MagickGetImageTotalInkDensity(%struct._MagickWand* %wand) #0 !dbg !7421 {
entry:
  %retval = alloca double, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7422, metadata !DIExpression()), !dbg !7423
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7424
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7426
  %1 = load i32, i32* %debug, align 8, !dbg !7426
  %cmp = icmp ne i32 %1, 0, !dbg !7427
  br i1 %cmp, label %if.then, label %if.end, !dbg !7428

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7429
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7430
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7429
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6292, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7431
  br label %if.end, !dbg !7432

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7433
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7435
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7435
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7436
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7437

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7438
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7440
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7440
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7441
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7442
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7441
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6295, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7443
  store double 0.000000e+00, double* %retval, align 8, !dbg !7444
  br label %return, !dbg !7444

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7445
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7446
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7446
  %call8 = call double @GetImageTotalInkDensity(%struct._Image* %9), !dbg !7447
  store double %call8, double* %retval, align 8, !dbg !7448
  br label %return, !dbg !7448

return:                                           ; preds = %if.end6, %if.then2
  %10 = load double, double* %retval, align 8, !dbg !7449
  ret double %10, !dbg !7449
}

declare dso_local double @GetImageTotalInkDensity(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickHaldClutImage(%struct._MagickWand* %wand, %struct._MagickWand* %hald_wand) #0 !dbg !7450 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %hald_wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  store %struct._MagickWand* %hald_wand, %struct._MagickWand** %hald_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %hald_wand.addr, metadata !7453, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7455, metadata !DIExpression()), !dbg !7456
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7457
  %1 = load %struct._MagickWand*, %struct._MagickWand** %hald_wand.addr, align 8, !dbg !7458
  %call = call i32 @MagickHaldClutImageChannel(%struct._MagickWand* %0, i32 134217719, %struct._MagickWand* %1), !dbg !7459
  store i32 %call, i32* %status, align 4, !dbg !7460
  %2 = load i32, i32* %status, align 4, !dbg !7461
  ret i32 %2, !dbg !7462
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickHaldClutImageChannel(%struct._MagickWand* %wand, i32 %channel, %struct._MagickWand* %hald_wand) #0 !dbg !7463 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %hald_wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7466, metadata !DIExpression()), !dbg !7467
  store %struct._MagickWand* %hald_wand, %struct._MagickWand** %hald_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %hald_wand.addr, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7470, metadata !DIExpression()), !dbg !7471
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7472
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7474
  %1 = load i32, i32* %debug, align 8, !dbg !7474
  %cmp = icmp ne i32 %1, 0, !dbg !7475
  br i1 %cmp, label %if.then, label %if.end, !dbg !7476

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7477
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7478
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7477
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6353, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7479
  br label %if.end, !dbg !7480

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7481
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7483
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7483
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7484
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7485

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %hald_wand.addr, align 8, !dbg !7486
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !7487
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !7487
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !7488
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !7489

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7490
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !7490
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7490
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7490
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !7490
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !7490
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6355, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !7490
  store i32 0, i32* %retval, align 4, !dbg !7490
  br label %return, !dbg !7490

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7492
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !7493
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !7493
  %12 = load i32, i32* %channel.addr, align 4, !dbg !7494
  %13 = load %struct._MagickWand*, %struct._MagickWand** %hald_wand.addr, align 8, !dbg !7495
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !7496
  %14 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !7496
  %call11 = call i32 @HaldClutImageChannel(%struct._Image* %11, i32 %12, %struct._Image* %14), !dbg !7497
  store i32 %call11, i32* %status, align 4, !dbg !7498
  %15 = load i32, i32* %status, align 4, !dbg !7499
  %cmp12 = icmp eq i32 %15, 0, !dbg !7501
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !7502

if.then13:                                        ; preds = %if.end8
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7503
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !7504
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !7504
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7505
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !7506
  %19 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !7506
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !7507
  call void @InheritException(%struct._ExceptionInfo* %17, %struct._ExceptionInfo* %exception16), !dbg !7508
  br label %if.end17, !dbg !7508

if.end17:                                         ; preds = %if.then13, %if.end8
  %20 = load i32, i32* %status, align 4, !dbg !7509
  store i32 %20, i32* %retval, align 4, !dbg !7510
  br label %return, !dbg !7510

return:                                           ; preds = %if.end17, %if.then4
  %21 = load i32, i32* %retval, align 4, !dbg !7511
  ret i32 %21, !dbg !7511
}

declare dso_local i32 @HaldClutImageChannel(%struct._Image*, i32, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickHasNextImage(%struct._MagickWand* %wand) #0 !dbg !7512 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7515
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7517
  %1 = load i32, i32* %debug, align 8, !dbg !7517
  %cmp = icmp ne i32 %1, 0, !dbg !7518
  br i1 %cmp, label %if.then, label %if.end, !dbg !7519

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7520
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7521
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7520
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6390, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7522
  br label %if.end, !dbg !7523

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7524
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7526
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7526
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7527
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7528

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7529
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7529
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7529
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7529
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7529
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7529
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6392, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7529
  store i32 0, i32* %retval, align 4, !dbg !7529
  br label %return, !dbg !7529

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7531
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7533
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7533
  %call8 = call %struct._Image* @GetNextImageInList(%struct._Image* %9), !dbg !7534
  %cmp9 = icmp eq %struct._Image* %call8, null, !dbg !7535
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7536

if.then10:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !7537
  br label %return, !dbg !7537

if.end11:                                         ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !7538
  br label %return, !dbg !7538

return:                                           ; preds = %if.end11, %if.then10, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !7539
  ret i32 %10, !dbg !7539
}

declare dso_local %struct._Image* @GetNextImageInList(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickHasPreviousImage(%struct._MagickWand* %wand) #0 !dbg !7540 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7543
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7545
  %1 = load i32, i32* %debug, align 8, !dbg !7545
  %cmp = icmp ne i32 %1, 0, !dbg !7546
  br i1 %cmp, label %if.then, label %if.end, !dbg !7547

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7548
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7549
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7548
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6426, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7550
  br label %if.end, !dbg !7551

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7552
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7554
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7554
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7555
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7556

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7557
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7557
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7557
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7557
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7557
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7557
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6428, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7557
  store i32 0, i32* %retval, align 4, !dbg !7557
  br label %return, !dbg !7557

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7559
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7561
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7561
  %call8 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %9), !dbg !7562
  %cmp9 = icmp eq %struct._Image* %call8, null, !dbg !7563
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7564

if.then10:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !7565
  br label %return, !dbg !7565

if.end11:                                         ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !7566
  br label %return, !dbg !7566

return:                                           ; preds = %if.end11, %if.then10, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !7567
  ret i32 %10, !dbg !7567
}

declare dso_local %struct._Image* @GetPreviousImageInList(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @MagickIdentifyImage(%struct._MagickWand* %wand) #0 !dbg !7568 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %description = alloca i8*, align 8
  %filename = alloca [4096 x i8], align 16
  %file = alloca %struct._IO_FILE*, align 8
  %unique_file = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7569, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.declare(metadata i8** %description, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.declare(metadata [4096 x i8]* %filename, metadata !7573, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %unique_file, metadata !7577, metadata !DIExpression()), !dbg !7578
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7579
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7581
  %1 = load i32, i32* %debug, align 8, !dbg !7581
  %cmp = icmp ne i32 %1, 0, !dbg !7582
  br i1 %cmp, label %if.then, label %if.end, !dbg !7583

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7584
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7585
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7584
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6472, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7586
  br label %if.end, !dbg !7587

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7588
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7590
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7590
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7591
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7592

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7593
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7595
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7595
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7596
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7597
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7596
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6475, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7598
  store i8* null, i8** %retval, align 8, !dbg !7599
  br label %return, !dbg !7599

if.end6:                                          ; preds = %if.end
  store i8* null, i8** %description, align 8, !dbg !7600
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7601
  %call8 = call i32 @AcquireUniqueFileResource(i8* %arraydecay7), !dbg !7602
  store i32 %call8, i32* %unique_file, align 4, !dbg !7603
  store %struct._IO_FILE* null, %struct._IO_FILE** %file, align 8, !dbg !7604
  %8 = load i32, i32* %unique_file, align 4, !dbg !7605
  %cmp9 = icmp ne i32 %8, -1, !dbg !7607
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !7608

if.then10:                                        ; preds = %if.end6
  %9 = load i32, i32* %unique_file, align 4, !dbg !7609
  %call11 = call %struct._IO_FILE* @fdopen(i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !7610
  store %struct._IO_FILE* %call11, %struct._IO_FILE** %file, align 8, !dbg !7611
  br label %if.end12, !dbg !7612

if.end12:                                         ; preds = %if.then10, %if.end6
  %10 = load i32, i32* %unique_file, align 4, !dbg !7613
  %cmp13 = icmp eq i32 %10, -1, !dbg !7615
  br i1 %cmp13, label %if.then15, label %lor.lhs.false, !dbg !7616

lor.lhs.false:                                    ; preds = %if.end12
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !7617
  %cmp14 = icmp eq %struct._IO_FILE* %11, null, !dbg !7618
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !7619

if.then15:                                        ; preds = %lor.lhs.false, %if.end12
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7620
  %exception16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !7622
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception16, align 8, !dbg !7622
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7623
  %name17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 1, !dbg !7624
  %arraydecay18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name17, i64 0, i64 0, !dbg !7623
  %call19 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6486, i32 470, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay18), !dbg !7625
  store i8* null, i8** %retval, align 8, !dbg !7626
  br label %return, !dbg !7626

if.end20:                                         ; preds = %lor.lhs.false
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7627
  %images21 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !7628
  %16 = load %struct._Image*, %struct._Image** %images21, align 8, !dbg !7628
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !7629
  %call22 = call i32 @IdentifyImage(%struct._Image* %16, %struct._IO_FILE* %17, i32 1), !dbg !7630
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !7631
  %call23 = call i32 @fclose(%struct._IO_FILE* %18), !dbg !7632
  %arraydecay24 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7633
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7634
  %exception25 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 2, !dbg !7635
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception25, align 8, !dbg !7635
  %call26 = call i8* @FileToString(i8* %arraydecay24, i64 -1, %struct._ExceptionInfo* %20), !dbg !7636
  store i8* %call26, i8** %description, align 8, !dbg !7637
  %arraydecay27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7638
  %call28 = call i32 @RelinquishUniqueFileResource(i8* %arraydecay27), !dbg !7639
  %21 = load i8*, i8** %description, align 8, !dbg !7640
  store i8* %21, i8** %retval, align 8, !dbg !7641
  br label %return, !dbg !7641

return:                                           ; preds = %if.end20, %if.then15, %if.then2
  %22 = load i8*, i8** %retval, align 8, !dbg !7642
  ret i8* %22, !dbg !7642
}

declare dso_local i32 @AcquireUniqueFileResource(i8*) #2

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #3

declare dso_local i32 @IdentifyImage(%struct._Image*, %struct._IO_FILE*, i32) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

declare dso_local i8* @FileToString(i8*, i64, %struct._ExceptionInfo*) #2

declare dso_local i32 @RelinquishUniqueFileResource(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickImplodeImage(%struct._MagickWand* %wand, double %amount) #0 !dbg !7643 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %amount.addr = alloca double, align 8
  %implode_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  store double %amount, double* %amount.addr, align 8
  call void @llvm.dbg.declare(metadata double* %amount.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.declare(metadata %struct._Image** %implode_image, metadata !7648, metadata !DIExpression()), !dbg !7649
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7650
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7652
  %1 = load i32, i32* %debug, align 8, !dbg !7652
  %cmp = icmp ne i32 %1, 0, !dbg !7653
  br i1 %cmp, label %if.then, label %if.end, !dbg !7654

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7655
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7656
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7655
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6534, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7657
  br label %if.end, !dbg !7658

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7659
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7661
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7661
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7662
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7663

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7664
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7664
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7664
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7664
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7664
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7664
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6536, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7664
  store i32 0, i32* %retval, align 4, !dbg !7664
  br label %return, !dbg !7664

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7666
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7667
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7667
  %10 = load double, double* %amount.addr, align 8, !dbg !7668
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7669
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !7670
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !7670
  %call9 = call %struct._Image* @ImplodeImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !7671
  store %struct._Image* %call9, %struct._Image** %implode_image, align 8, !dbg !7672
  %13 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !7673
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !7675
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7676

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !7677
  br label %return, !dbg !7677

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7678
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !7679
  %15 = load %struct._Image*, %struct._Image** %implode_image, align 8, !dbg !7680
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !7681
  store i32 1, i32* %retval, align 4, !dbg !7682
  br label %return, !dbg !7682

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !7683
  ret i32 %16, !dbg !7683
}

declare dso_local %struct._Image* @ImplodeImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickImportImagePixels(%struct._MagickWand* %wand, i64 %x, i64 %y, i64 %columns, i64 %rows, i8* %map, i32 %storage, i8* %pixels) #0 !dbg !7684 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %map.addr = alloca i8*, align 8
  %storage.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7687, metadata !DIExpression()), !dbg !7688
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !7689, metadata !DIExpression()), !dbg !7690
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !7693, metadata !DIExpression()), !dbg !7694
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  store i32 %storage, i32* %storage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %storage.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7705
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7707
  %1 = load i32, i32* %debug, align 8, !dbg !7707
  %cmp = icmp ne i32 %1, 0, !dbg !7708
  br i1 %cmp, label %if.then, label %if.end, !dbg !7709

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7710
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7711
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7710
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6605, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7712
  br label %if.end, !dbg !7713

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7714
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7716
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7716
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7717
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7718

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7719
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7719
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7719
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7719
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7719
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7719
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6607, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7719
  store i32 0, i32* %retval, align 4, !dbg !7719
  br label %return, !dbg !7719

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7721
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7722
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7722
  %10 = load i64, i64* %x.addr, align 8, !dbg !7723
  %11 = load i64, i64* %y.addr, align 8, !dbg !7724
  %12 = load i64, i64* %columns.addr, align 8, !dbg !7725
  %13 = load i64, i64* %rows.addr, align 8, !dbg !7726
  %14 = load i8*, i8** %map.addr, align 8, !dbg !7727
  %15 = load i32, i32* %storage.addr, align 4, !dbg !7728
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !7729
  %call8 = call i32 @ImportImagePixels(%struct._Image* %9, i64 %10, i64 %11, i64 %12, i64 %13, i8* %14, i32 %15, i8* %16), !dbg !7730
  store i32 %call8, i32* %status, align 4, !dbg !7731
  %17 = load i32, i32* %status, align 4, !dbg !7732
  %cmp9 = icmp eq i32 %17, 0, !dbg !7734
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !7735

if.then10:                                        ; preds = %if.end6
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7736
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 2, !dbg !7737
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !7737
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7738
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 5, !dbg !7739
  %21 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !7739
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !7740
  call void @InheritException(%struct._ExceptionInfo* %19, %struct._ExceptionInfo* %exception13), !dbg !7741
  br label %if.end14, !dbg !7741

if.end14:                                         ; preds = %if.then10, %if.end6
  %22 = load i32, i32* %status, align 4, !dbg !7742
  store i32 %22, i32* %retval, align 4, !dbg !7743
  br label %return, !dbg !7743

return:                                           ; preds = %if.end14, %if.then2
  %23 = load i32, i32* %retval, align 4, !dbg !7744
  ret i32 %23, !dbg !7744
}

declare dso_local i32 @ImportImagePixels(%struct._Image*, i64, i64, i64, i64, i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickInverseFourierTransformImage(%struct._MagickWand* %magnitude_wand, %struct._MagickWand* %phase_wand, i32 %magnitude) #0 !dbg !7745 {
entry:
  %retval = alloca i32, align 4
  %magnitude_wand.addr = alloca %struct._MagickWand*, align 8
  %phase_wand.addr = alloca %struct._MagickWand*, align 8
  %magnitude.addr = alloca i32, align 4
  %inverse_image = alloca %struct._Image*, align 8
  %wand = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %magnitude_wand, %struct._MagickWand** %magnitude_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %magnitude_wand.addr, metadata !7748, metadata !DIExpression()), !dbg !7749
  store %struct._MagickWand* %phase_wand, %struct._MagickWand** %phase_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %phase_wand.addr, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i32 %magnitude, i32* %magnitude.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %magnitude.addr, metadata !7752, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata %struct._Image** %inverse_image, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand, metadata !7756, metadata !DIExpression()), !dbg !7757
  %0 = load %struct._MagickWand*, %struct._MagickWand** %magnitude_wand.addr, align 8, !dbg !7758
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7760
  %1 = load i32, i32* %debug, align 8, !dbg !7760
  %cmp = icmp ne i32 %1, 0, !dbg !7761
  br i1 %cmp, label %if.then, label %if.end, !dbg !7762

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %magnitude_wand.addr, align 8, !dbg !7763
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7764
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7763
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6658, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7765
  br label %if.end, !dbg !7766

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %magnitude_wand.addr, align 8, !dbg !7767
  store %struct._MagickWand* %3, %struct._MagickWand** %wand, align 8, !dbg !7768
  %4 = load %struct._MagickWand*, %struct._MagickWand** %magnitude_wand.addr, align 8, !dbg !7769
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 5, !dbg !7771
  %5 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7771
  %cmp1 = icmp eq %struct._Image* %5, null, !dbg !7772
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7773

if.then2:                                         ; preds = %if.end
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand, align 8, !dbg !7774
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 2, !dbg !7774
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7774
  %8 = load %struct._MagickWand*, %struct._MagickWand** %magnitude_wand.addr, align 8, !dbg !7774
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 1, !dbg !7774
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7774
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6663, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7774
  store i32 0, i32* %retval, align 4, !dbg !7774
  br label %return, !dbg !7774

if.end6:                                          ; preds = %if.end
  %9 = load %struct._MagickWand*, %struct._MagickWand** %magnitude_wand.addr, align 8, !dbg !7776
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !7777
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7777
  %11 = load %struct._MagickWand*, %struct._MagickWand** %phase_wand.addr, align 8, !dbg !7778
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !7779
  %12 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !7779
  %13 = load i32, i32* %magnitude.addr, align 4, !dbg !7780
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand, align 8, !dbg !7781
  %exception9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !7782
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !7782
  %call10 = call %struct._Image* @InverseFourierTransformImage(%struct._Image* %10, %struct._Image* %12, i32 %13, %struct._ExceptionInfo* %15), !dbg !7783
  store %struct._Image* %call10, %struct._Image** %inverse_image, align 8, !dbg !7784
  %16 = load %struct._Image*, %struct._Image** %inverse_image, align 8, !dbg !7785
  %cmp11 = icmp eq %struct._Image* %16, null, !dbg !7787
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !7788

if.then12:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !7789
  br label %return, !dbg !7789

if.end13:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand, align 8, !dbg !7790
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !7791
  %18 = load %struct._Image*, %struct._Image** %inverse_image, align 8, !dbg !7792
  call void @ReplaceImageInList(%struct._Image** %images14, %struct._Image* %18), !dbg !7793
  store i32 1, i32* %retval, align 4, !dbg !7794
  br label %return, !dbg !7794

return:                                           ; preds = %if.end13, %if.then12, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !7795
  ret i32 %19, !dbg !7795
}

declare dso_local %struct._Image* @InverseFourierTransformImage(%struct._Image*, %struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickLabelImage(%struct._MagickWand* %wand, i8* %label) #0 !dbg !7796 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %label.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7797, metadata !DIExpression()), !dbg !7798
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7801, metadata !DIExpression()), !dbg !7802
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7803
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7805
  %1 = load i32, i32* %debug, align 8, !dbg !7805
  %cmp = icmp ne i32 %1, 0, !dbg !7806
  br i1 %cmp, label %if.then, label %if.end, !dbg !7807

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7808
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7809
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7808
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6707, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7810
  br label %if.end, !dbg !7811

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7812
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7814
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7814
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7815
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7816

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7817
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7817
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7817
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7817
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7817
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7817
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6709, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7817
  store i32 0, i32* %retval, align 4, !dbg !7817
  br label %return, !dbg !7817

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7819
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7820
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7820
  %10 = load i8*, i8** %label.addr, align 8, !dbg !7821
  %call8 = call i32 @SetImageProperty(%struct._Image* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i8* %10), !dbg !7822
  store i32 %call8, i32* %status, align 4, !dbg !7823
  %11 = load i32, i32* %status, align 4, !dbg !7824
  %cmp9 = icmp eq i32 %11, 0, !dbg !7826
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !7827

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7828
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !7829
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !7829
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7830
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !7831
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !7831
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !7832
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !7833
  br label %if.end14, !dbg !7833

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !7834
  store i32 %16, i32* %retval, align 4, !dbg !7835
  br label %return, !dbg !7835

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !7836
  ret i32 %17, !dbg !7836
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickLevelImage(%struct._MagickWand* %wand, double %black_point, double %gamma, double %white_point) #0 !dbg !7837 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %black_point.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !7842, metadata !DIExpression()), !dbg !7843
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7848, metadata !DIExpression()), !dbg !7849
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7850
  %1 = load double, double* %black_point.addr, align 8, !dbg !7851
  %2 = load double, double* %gamma.addr, align 8, !dbg !7852
  %3 = load double, double* %white_point.addr, align 8, !dbg !7853
  %call = call i32 @MagickLevelImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2, double %3), !dbg !7854
  store i32 %call, i32* %status, align 4, !dbg !7855
  %4 = load i32, i32* %status, align 4, !dbg !7856
  ret i32 %4, !dbg !7857
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickLevelImageChannel(%struct._MagickWand* %wand, i32 %channel, double %black_point, double %gamma, double %white_point) #0 !dbg !7858 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %black_point.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7861, metadata !DIExpression()), !dbg !7862
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7863, metadata !DIExpression()), !dbg !7864
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !7865, metadata !DIExpression()), !dbg !7866
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !7867, metadata !DIExpression()), !dbg !7868
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !7869, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7871, metadata !DIExpression()), !dbg !7872
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7873
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7875
  %1 = load i32, i32* %debug, align 8, !dbg !7875
  %cmp = icmp ne i32 %1, 0, !dbg !7876
  br i1 %cmp, label %if.then, label %if.end, !dbg !7877

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7878
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7879
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7878
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6779, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7880
  br label %if.end, !dbg !7881

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7882
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7884
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7884
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7885
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7886

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7887
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7887
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7887
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7887
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7887
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7887
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6781, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7887
  store i32 0, i32* %retval, align 4, !dbg !7887
  br label %return, !dbg !7887

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7889
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7890
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7890
  %10 = load i32, i32* %channel.addr, align 4, !dbg !7891
  %11 = load double, double* %black_point.addr, align 8, !dbg !7892
  %12 = load double, double* %white_point.addr, align 8, !dbg !7893
  %13 = load double, double* %gamma.addr, align 8, !dbg !7894
  %call8 = call i32 @LevelImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, double %13), !dbg !7895
  store i32 %call8, i32* %status, align 4, !dbg !7896
  %14 = load i32, i32* %status, align 4, !dbg !7897
  %cmp9 = icmp eq i32 %14, 0, !dbg !7899
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !7900

if.then10:                                        ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7901
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !7902
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !7902
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7903
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !7904
  %18 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !7904
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !7905
  call void @InheritException(%struct._ExceptionInfo* %16, %struct._ExceptionInfo* %exception13), !dbg !7906
  br label %if.end14, !dbg !7906

if.end14:                                         ; preds = %if.then10, %if.end6
  %19 = load i32, i32* %status, align 4, !dbg !7907
  store i32 %19, i32* %retval, align 4, !dbg !7908
  br label %return, !dbg !7908

return:                                           ; preds = %if.end14, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !7909
  ret i32 %20, !dbg !7909
}

declare dso_local i32 @LevelImageChannel(%struct._Image*, i32, double, double, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickLinearStretchImage(%struct._MagickWand* %wand, double %black_point, double %white_point) #0 !dbg !7910 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7917, metadata !DIExpression()), !dbg !7918
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7919
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7921
  %1 = load i32, i32* %debug, align 8, !dbg !7921
  %cmp = icmp ne i32 %1, 0, !dbg !7922
  br i1 %cmp, label %if.then, label %if.end, !dbg !7923

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7924
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7925
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7924
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6827, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7926
  br label %if.end, !dbg !7927

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7928
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7930
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7930
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7931
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7932

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7933
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7933
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7933
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7933
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7933
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7933
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6829, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7933
  store i32 0, i32* %retval, align 4, !dbg !7933
  br label %return, !dbg !7933

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7935
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7936
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7936
  %10 = load double, double* %black_point.addr, align 8, !dbg !7937
  %11 = load double, double* %white_point.addr, align 8, !dbg !7938
  %call8 = call i32 @LinearStretchImage(%struct._Image* %9, double %10, double %11), !dbg !7939
  store i32 %call8, i32* %status, align 4, !dbg !7940
  %12 = load i32, i32* %status, align 4, !dbg !7941
  %cmp9 = icmp eq i32 %12, 0, !dbg !7943
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !7944

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7945
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !7946
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !7946
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7947
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !7948
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !7948
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !7949
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !7950
  br label %if.end14, !dbg !7950

if.end14:                                         ; preds = %if.then10, %if.end6
  %17 = load i32, i32* %status, align 4, !dbg !7951
  store i32 %17, i32* %retval, align 4, !dbg !7952
  br label %return, !dbg !7952

return:                                           ; preds = %if.end14, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !7953
  ret i32 %18, !dbg !7953
}

declare dso_local i32 @LinearStretchImage(%struct._Image*, double, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickLiquidRescaleImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows, double %delta_x, double %rigidity) #0 !dbg !7954 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %delta_x.addr = alloca double, align 8
  %rigidity.addr = alloca double, align 8
  %rescale_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !7957, metadata !DIExpression()), !dbg !7958
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !7959, metadata !DIExpression()), !dbg !7960
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !7961, metadata !DIExpression()), !dbg !7962
  store double %delta_x, double* %delta_x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %delta_x.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  store double %rigidity, double* %rigidity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rigidity.addr, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata %struct._Image** %rescale_image, metadata !7967, metadata !DIExpression()), !dbg !7968
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7969
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !7971
  %1 = load i32, i32* %debug, align 8, !dbg !7971
  %cmp = icmp ne i32 %1, 0, !dbg !7972
  br i1 %cmp, label %if.then, label %if.end, !dbg !7973

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7974
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !7975
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7974
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6876, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7976
  br label %if.end, !dbg !7977

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7978
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !7980
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !7980
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !7981
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !7982

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7983
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !7983
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7983
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7983
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !7983
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !7983
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6878, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !7983
  store i32 0, i32* %retval, align 4, !dbg !7983
  br label %return, !dbg !7983

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7985
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !7986
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !7986
  %10 = load i64, i64* %columns.addr, align 8, !dbg !7987
  %11 = load i64, i64* %rows.addr, align 8, !dbg !7988
  %12 = load double, double* %delta_x.addr, align 8, !dbg !7989
  %13 = load double, double* %rigidity.addr, align 8, !dbg !7990
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !7991
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !7992
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !7992
  %call9 = call %struct._Image* @LiquidRescaleImage(%struct._Image* %9, i64 %10, i64 %11, double %12, double %13, %struct._ExceptionInfo* %15), !dbg !7993
  store %struct._Image* %call9, %struct._Image** %rescale_image, align 8, !dbg !7994
  %16 = load %struct._Image*, %struct._Image** %rescale_image, align 8, !dbg !7995
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !7997
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7998

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !7999
  br label %return, !dbg !7999

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8000
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !8001
  %18 = load %struct._Image*, %struct._Image** %rescale_image, align 8, !dbg !8002
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !8003
  store i32 1, i32* %retval, align 4, !dbg !8004
  br label %return, !dbg !8004

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !8005
  ret i32 %19, !dbg !8005
}

declare dso_local %struct._Image* @LiquidRescaleImage(%struct._Image*, i64, i64, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMagnifyImage(%struct._MagickWand* %wand) #0 !dbg !8006 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %magnify_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.declare(metadata %struct._Image** %magnify_image, metadata !8009, metadata !DIExpression()), !dbg !8010
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8011
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8013
  %1 = load i32, i32* %debug, align 8, !dbg !8013
  %cmp = icmp ne i32 %1, 0, !dbg !8014
  br i1 %cmp, label %if.then, label %if.end, !dbg !8015

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8016
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8017
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8016
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6918, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8018
  br label %if.end, !dbg !8019

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8020
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8022
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8022
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8023
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8024

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8025
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8025
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8025
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8025
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8025
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8025
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6920, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8025
  store i32 0, i32* %retval, align 4, !dbg !8025
  br label %return, !dbg !8025

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8027
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8028
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8028
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8029
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !8030
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !8030
  %call9 = call %struct._Image* @MagnifyImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !8031
  store %struct._Image* %call9, %struct._Image** %magnify_image, align 8, !dbg !8032
  %12 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !8033
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !8035
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8036

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8037
  br label %return, !dbg !8037

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8038
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !8039
  %14 = load %struct._Image*, %struct._Image** %magnify_image, align 8, !dbg !8040
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !8041
  store i32 1, i32* %retval, align 4, !dbg !8042
  br label %return, !dbg !8042

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !8043
  ret i32 %15, !dbg !8043
}

declare dso_local %struct._Image* @MagnifyImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickMergeImageLayers(%struct._MagickWand* %wand, i32 %method) #0 !dbg !8044 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  %mosaic_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.declare(metadata %struct._Image** %mosaic_image, metadata !8049, metadata !DIExpression()), !dbg !8050
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8051
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8053
  %1 = load i32, i32* %debug, align 8, !dbg !8053
  %cmp = icmp ne i32 %1, 0, !dbg !8054
  br i1 %cmp, label %if.then, label %if.end, !dbg !8055

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8056
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8057
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8056
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6980, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8058
  br label %if.end, !dbg !8059

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8060
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8062
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8062
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8063
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8064

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8065
  br label %return, !dbg !8065

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8066
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !8067
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !8067
  %7 = load i32, i32* %method.addr, align 4, !dbg !8068
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8069
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !8070
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8070
  %call5 = call %struct._Image* @MergeImageLayers(%struct._Image* %6, i32 %7, %struct._ExceptionInfo* %9), !dbg !8071
  store %struct._Image* %call5, %struct._Image** %mosaic_image, align 8, !dbg !8072
  %10 = load %struct._Image*, %struct._Image** %mosaic_image, align 8, !dbg !8073
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !8075
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8076

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8077
  br label %return, !dbg !8077

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8078
  %12 = load %struct._Image*, %struct._Image** %mosaic_image, align 8, !dbg !8079
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !8080
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !8081
  br label %return, !dbg !8081

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !8082
  ret %struct._MagickWand* %13, !dbg !8082
}

declare dso_local %struct._Image* @MergeImageLayers(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMinifyImage(%struct._MagickWand* %wand) #0 !dbg !8083 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %minify_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.declare(metadata %struct._Image** %minify_image, metadata !8086, metadata !DIExpression()), !dbg !8087
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8088
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8090
  %1 = load i32, i32* %debug, align 8, !dbg !8090
  %cmp = icmp ne i32 %1, 0, !dbg !8091
  br i1 %cmp, label %if.then, label %if.end, !dbg !8092

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8093
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8094
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8093
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7020, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8095
  br label %if.end, !dbg !8096

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8097
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8099
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8099
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8100
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8101

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8102
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8102
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8102
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8102
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8102
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8102
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7022, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8102
  store i32 0, i32* %retval, align 4, !dbg !8102
  br label %return, !dbg !8102

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8104
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8105
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8105
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8106
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !8107
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !8107
  %call9 = call %struct._Image* @MinifyImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !8108
  store %struct._Image* %call9, %struct._Image** %minify_image, align 8, !dbg !8109
  %12 = load %struct._Image*, %struct._Image** %minify_image, align 8, !dbg !8110
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !8112
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8113

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8114
  br label %return, !dbg !8114

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8115
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !8116
  %14 = load %struct._Image*, %struct._Image** %minify_image, align 8, !dbg !8117
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !8118
  store i32 1, i32* %retval, align 4, !dbg !8119
  br label %return, !dbg !8119

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !8120
  ret i32 %15, !dbg !8120
}

declare dso_local %struct._Image* @MinifyImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickModulateImage(%struct._MagickWand* %wand, double %brightness, double %saturation, double %hue) #0 !dbg !8121 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %brightness.addr = alloca double, align 8
  %saturation.addr = alloca double, align 8
  %hue.addr = alloca double, align 8
  %modulate = alloca [4096 x i8], align 16
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8122, metadata !DIExpression()), !dbg !8123
  store double %brightness, double* %brightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %brightness.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store double %saturation, double* %saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %saturation.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  store double %hue, double* %hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %hue.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  call void @llvm.dbg.declare(metadata [4096 x i8]* %modulate, metadata !8130, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8132, metadata !DIExpression()), !dbg !8133
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8134
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8136
  %1 = load i32, i32* %debug, align 8, !dbg !8136
  %cmp = icmp ne i32 %1, 0, !dbg !8137
  br i1 %cmp, label %if.then, label %if.end, !dbg !8138

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8139
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8140
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8139
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7078, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8141
  br label %if.end, !dbg !8142

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8143
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8145
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8145
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8146
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8147

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8148
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8148
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8148
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8148
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8148
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8148
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7080, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8148
  store i32 0, i32* %retval, align 4, !dbg !8148
  br label %return, !dbg !8148

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %modulate, i64 0, i64 0, !dbg !8150
  %8 = load double, double* %brightness.addr, align 8, !dbg !8151
  %9 = load double, double* %saturation.addr, align 8, !dbg !8152
  %10 = load double, double* %hue.addr, align 8, !dbg !8153
  %call8 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay7, i64 4096, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), double %8, double %9, double %10), !dbg !8154
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8155
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !8156
  %12 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !8156
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %modulate, i64 0, i64 0, !dbg !8157
  %call11 = call i32 @ModulateImage(%struct._Image* %12, i8* %arraydecay10), !dbg !8158
  store i32 %call11, i32* %status, align 4, !dbg !8159
  %13 = load i32, i32* %status, align 4, !dbg !8160
  %cmp12 = icmp eq i32 %13, 0, !dbg !8162
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !8163

if.then13:                                        ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8164
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !8165
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !8165
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8166
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !8167
  %17 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !8167
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !8168
  call void @InheritException(%struct._ExceptionInfo* %15, %struct._ExceptionInfo* %exception16), !dbg !8169
  br label %if.end17, !dbg !8169

if.end17:                                         ; preds = %if.then13, %if.end6
  %18 = load i32, i32* %status, align 4, !dbg !8170
  store i32 %18, i32* %retval, align 4, !dbg !8171
  br label %return, !dbg !8171

return:                                           ; preds = %if.end17, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !8172
  ret i32 %19, !dbg !8172
}

declare dso_local i32 @ModulateImage(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickMontageImage(%struct._MagickWand* %wand, %struct._DrawingWand* %drawing_wand, i8* %tile_geometry, i8* %thumbnail_geometry, i32 %mode, i8* %frame) #0 !dbg !8173 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %drawing_wand.addr = alloca %struct._DrawingWand*, align 8
  %tile_geometry.addr = alloca i8*, align 8
  %thumbnail_geometry.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %frame.addr = alloca i8*, align 8
  %font = alloca i8*, align 8
  %montage_image = alloca %struct._Image*, align 8
  %montage_info = alloca %struct._MontageInfo*, align 8
  %pixel_wand = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store %struct._DrawingWand* %drawing_wand, %struct._DrawingWand** %drawing_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %drawing_wand.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  store i8* %tile_geometry, i8** %tile_geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tile_geometry.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  store i8* %thumbnail_geometry, i8** %thumbnail_geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thumbnail_geometry.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store i8* %frame, i8** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %frame.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.declare(metadata i8** %font, metadata !8190, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.declare(metadata %struct._Image** %montage_image, metadata !8192, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.declare(metadata %struct._MontageInfo** %montage_info, metadata !8194, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %pixel_wand, metadata !8196, metadata !DIExpression()), !dbg !8197
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8198
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8200
  %1 = load i32, i32* %debug, align 8, !dbg !8200
  %cmp = icmp ne i32 %1, 0, !dbg !8201
  br i1 %cmp, label %if.then, label %if.end, !dbg !8202

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8203
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8204
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8203
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7148, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8205
  br label %if.end, !dbg !8206

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8207
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8209
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8209
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8210
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8211

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8212
  br label %return, !dbg !8212

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8213
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 3, !dbg !8214
  %6 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !8214
  %call4 = call %struct._MontageInfo* @CloneMontageInfo(%struct._ImageInfo* %6, %struct._MontageInfo* null), !dbg !8215
  store %struct._MontageInfo* %call4, %struct._MontageInfo** %montage_info, align 8, !dbg !8216
  %7 = load i32, i32* %mode.addr, align 4, !dbg !8217
  switch i32 %7, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb7
    i32 3, label %sw.bb10
  ], !dbg !8218

sw.bb:                                            ; preds = %if.end3
  %8 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8219
  %frame5 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %8, i32 0, i32 3, !dbg !8222
  %call6 = call i8* @CloneString(i8** %frame5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)), !dbg !8223
  %9 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8224
  %shadow = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %9, i32 0, i32 8, !dbg !8225
  store i32 1, i32* %shadow, align 8, !dbg !8226
  br label %sw.epilog, !dbg !8227

sw.bb7:                                           ; preds = %if.end3
  %10 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8228
  %frame8 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %10, i32 0, i32 3, !dbg !8230
  store i8* null, i8** %frame8, align 8, !dbg !8231
  %11 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8232
  %shadow9 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %11, i32 0, i32 8, !dbg !8233
  store i32 0, i32* %shadow9, align 8, !dbg !8234
  %12 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8235
  %border_width = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %12, i32 0, i32 7, !dbg !8236
  store i64 0, i64* %border_width, align 8, !dbg !8237
  br label %sw.epilog, !dbg !8238

sw.bb10:                                          ; preds = %if.end3
  %13 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8239
  %frame11 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %13, i32 0, i32 3, !dbg !8241
  store i8* null, i8** %frame11, align 8, !dbg !8242
  %14 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8243
  %shadow12 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %14, i32 0, i32 8, !dbg !8244
  store i32 0, i32* %shadow12, align 8, !dbg !8245
  %15 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8246
  %geometry = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %15, i32 0, i32 0, !dbg !8247
  %call13 = call i8* @CloneString(i8** %geometry, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)), !dbg !8248
  %16 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8249
  %border_width14 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %16, i32 0, i32 7, !dbg !8250
  store i64 0, i64* %border_width14, align 8, !dbg !8251
  br label %sw.epilog, !dbg !8252

sw.default:                                       ; preds = %if.end3
  br label %sw.epilog, !dbg !8253

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb7, %sw.bb
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !8254
  %call15 = call i8* @DrawGetFont(%struct._DrawingWand* %17), !dbg !8255
  store i8* %call15, i8** %font, align 8, !dbg !8256
  %18 = load i8*, i8** %font, align 8, !dbg !8257
  %cmp16 = icmp ne i8* %18, null, !dbg !8259
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !8260

if.then17:                                        ; preds = %sw.epilog
  %19 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8261
  %font18 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %19, i32 0, i32 5, !dbg !8262
  %20 = load i8*, i8** %font, align 8, !dbg !8263
  %call19 = call i8* @CloneString(i8** %font18, i8* %20), !dbg !8264
  br label %if.end20, !dbg !8265

if.end20:                                         ; preds = %if.then17, %sw.epilog
  %21 = load i8*, i8** %frame.addr, align 8, !dbg !8266
  %cmp21 = icmp ne i8* %21, null, !dbg !8268
  br i1 %cmp21, label %if.then22, label %if.end25, !dbg !8269

if.then22:                                        ; preds = %if.end20
  %22 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8270
  %frame23 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %22, i32 0, i32 3, !dbg !8271
  %23 = load i8*, i8** %frame.addr, align 8, !dbg !8272
  %call24 = call i8* @CloneString(i8** %frame23, i8* %23), !dbg !8273
  br label %if.end25, !dbg !8274

if.end25:                                         ; preds = %if.then22, %if.end20
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !8275
  %call26 = call double @DrawGetFontSize(%struct._DrawingWand* %24), !dbg !8276
  %25 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8277
  %pointsize = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %25, i32 0, i32 6, !dbg !8278
  store double %call26, double* %pointsize, align 8, !dbg !8279
  %call27 = call %struct._PixelWand* @NewPixelWand(), !dbg !8280
  store %struct._PixelWand* %call27, %struct._PixelWand** %pixel_wand, align 8, !dbg !8281
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !8282
  %27 = load %struct._PixelWand*, %struct._PixelWand** %pixel_wand, align 8, !dbg !8283
  call void @DrawGetFillColor(%struct._DrawingWand* %26, %struct._PixelWand* %27), !dbg !8284
  %28 = load %struct._PixelWand*, %struct._PixelWand** %pixel_wand, align 8, !dbg !8285
  %29 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8286
  %fill = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %29, i32 0, i32 9, !dbg !8287
  call void @PixelGetQuantumColor(%struct._PixelWand* %28, %struct._PixelPacket* %fill), !dbg !8288
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !8289
  %31 = load %struct._PixelWand*, %struct._PixelWand** %pixel_wand, align 8, !dbg !8290
  call void @DrawGetStrokeColor(%struct._DrawingWand* %30, %struct._PixelWand* %31), !dbg !8291
  %32 = load %struct._PixelWand*, %struct._PixelWand** %pixel_wand, align 8, !dbg !8292
  %33 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8293
  %stroke = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %33, i32 0, i32 10, !dbg !8294
  call void @PixelGetQuantumColor(%struct._PixelWand* %32, %struct._PixelPacket* %stroke), !dbg !8295
  %34 = load %struct._PixelWand*, %struct._PixelWand** %pixel_wand, align 8, !dbg !8296
  %call28 = call %struct._PixelWand* @DestroyPixelWand(%struct._PixelWand* %34), !dbg !8297
  store %struct._PixelWand* %call28, %struct._PixelWand** %pixel_wand, align 8, !dbg !8298
  %35 = load i8*, i8** %thumbnail_geometry.addr, align 8, !dbg !8299
  %cmp29 = icmp ne i8* %35, null, !dbg !8301
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !8302

if.then30:                                        ; preds = %if.end25
  %36 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8303
  %geometry31 = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %36, i32 0, i32 0, !dbg !8304
  %37 = load i8*, i8** %thumbnail_geometry.addr, align 8, !dbg !8305
  %call32 = call i8* @CloneString(i8** %geometry31, i8* %37), !dbg !8306
  br label %if.end33, !dbg !8307

if.end33:                                         ; preds = %if.then30, %if.end25
  %38 = load i8*, i8** %tile_geometry.addr, align 8, !dbg !8308
  %cmp34 = icmp ne i8* %38, null, !dbg !8310
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !8311

if.then35:                                        ; preds = %if.end33
  %39 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8312
  %tile = getelementptr inbounds %struct._MontageInfo, %struct._MontageInfo* %39, i32 0, i32 1, !dbg !8313
  %40 = load i8*, i8** %tile_geometry.addr, align 8, !dbg !8314
  %call36 = call i8* @CloneString(i8** %tile, i8* %40), !dbg !8315
  br label %if.end37, !dbg !8316

if.end37:                                         ; preds = %if.then35, %if.end33
  %41 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8317
  %image_info38 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %41, i32 0, i32 3, !dbg !8318
  %42 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info38, align 8, !dbg !8318
  %43 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8319
  %44 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8320
  %images39 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %44, i32 0, i32 5, !dbg !8321
  %45 = load %struct._Image*, %struct._Image** %images39, align 8, !dbg !8321
  %46 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8322
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %46, i32 0, i32 2, !dbg !8323
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8323
  %call40 = call %struct._Image* @MontageImageList(%struct._ImageInfo* %42, %struct._MontageInfo* %43, %struct._Image* %45, %struct._ExceptionInfo* %47), !dbg !8324
  store %struct._Image* %call40, %struct._Image** %montage_image, align 8, !dbg !8325
  %48 = load %struct._MontageInfo*, %struct._MontageInfo** %montage_info, align 8, !dbg !8326
  %call41 = call %struct._MontageInfo* @DestroyMontageInfo(%struct._MontageInfo* %48), !dbg !8327
  store %struct._MontageInfo* %call41, %struct._MontageInfo** %montage_info, align 8, !dbg !8328
  %49 = load %struct._Image*, %struct._Image** %montage_image, align 8, !dbg !8329
  %cmp42 = icmp eq %struct._Image* %49, null, !dbg !8331
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !8332

if.then43:                                        ; preds = %if.end37
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8333
  br label %return, !dbg !8333

if.end44:                                         ; preds = %if.end37
  %50 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8334
  %51 = load %struct._Image*, %struct._Image** %montage_image, align 8, !dbg !8335
  %call45 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %50, %struct._Image* %51), !dbg !8336
  store %struct._MagickWand* %call45, %struct._MagickWand** %retval, align 8, !dbg !8337
  br label %return, !dbg !8337

return:                                           ; preds = %if.end44, %if.then43, %if.then2
  %52 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !8338
  ret %struct._MagickWand* %52, !dbg !8338
}

declare dso_local %struct._MontageInfo* @CloneMontageInfo(%struct._ImageInfo*, %struct._MontageInfo*) #2

declare dso_local i8* @DrawGetFont(%struct._DrawingWand*) #2

declare dso_local double @DrawGetFontSize(%struct._DrawingWand*) #2

declare dso_local %struct._PixelWand* @NewPixelWand() #2

declare dso_local void @DrawGetFillColor(%struct._DrawingWand*, %struct._PixelWand*) #2

declare dso_local void @DrawGetStrokeColor(%struct._DrawingWand*, %struct._PixelWand*) #2

declare dso_local %struct._PixelWand* @DestroyPixelWand(%struct._PixelWand*) #2

declare dso_local %struct._Image* @MontageImageList(%struct._ImageInfo*, %struct._MontageInfo*, %struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._MontageInfo* @DestroyMontageInfo(%struct._MontageInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickMorphImages(%struct._MagickWand* %wand, i64 %number_frames) #0 !dbg !8339 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %number_frames.addr = alloca i64, align 8
  %morph_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  store i64 %number_frames, i64* %number_frames.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_frames.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.declare(metadata %struct._Image** %morph_image, metadata !8346, metadata !DIExpression()), !dbg !8347
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8348
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8350
  %1 = load i32, i32* %debug, align 8, !dbg !8350
  %cmp = icmp ne i32 %1, 0, !dbg !8351
  br i1 %cmp, label %if.then, label %if.end, !dbg !8352

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8353
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8354
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8353
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7238, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8355
  br label %if.end, !dbg !8356

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8357
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8359
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8359
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8360
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8361

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8362
  br label %return, !dbg !8362

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8363
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !8364
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !8364
  %7 = load i64, i64* %number_frames.addr, align 8, !dbg !8365
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8366
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !8367
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8367
  %call5 = call %struct._Image* @MorphImages(%struct._Image* %6, i64 %7, %struct._ExceptionInfo* %9), !dbg !8368
  store %struct._Image* %call5, %struct._Image** %morph_image, align 8, !dbg !8369
  %10 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !8370
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !8372
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8373

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8374
  br label %return, !dbg !8374

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8375
  %12 = load %struct._Image*, %struct._Image** %morph_image, align 8, !dbg !8376
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !8377
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !8378
  br label %return, !dbg !8378

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !8379
  ret %struct._MagickWand* %13, !dbg !8379
}

declare dso_local %struct._Image* @MorphImages(%struct._Image*, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMorphologyImage(%struct._MagickWand* %wand, i32 %method, i64 %iterations, %struct.KernelInfo* %kernel) #0 !dbg !8380 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  %iterations.addr = alloca i64, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  store i64 %iterations, i64* %iterations.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iterations.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8395
  %1 = load i32, i32* %method.addr, align 4, !dbg !8396
  %2 = load i64, i64* %iterations.addr, align 8, !dbg !8397
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8398
  %call = call i32 @MagickMorphologyImageChannel(%struct._MagickWand* %0, i32 134217719, i32 %1, i64 %2, %struct.KernelInfo* %3), !dbg !8399
  store i32 %call, i32* %status, align 4, !dbg !8400
  %4 = load i32, i32* %status, align 4, !dbg !8401
  ret i32 %4, !dbg !8402
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMorphologyImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %method, i64 %iterations, %struct.KernelInfo* %kernel) #0 !dbg !8403 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %iterations.addr = alloca i64, align 8
  %kernel.addr = alloca %struct.KernelInfo*, align 8
  %morphology_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8406, metadata !DIExpression()), !dbg !8407
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8408, metadata !DIExpression()), !dbg !8409
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  store i64 %iterations, i64* %iterations.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iterations.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  store %struct.KernelInfo* %kernel, %struct.KernelInfo** %kernel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.declare(metadata %struct._Image** %morphology_image, metadata !8416, metadata !DIExpression()), !dbg !8417
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8418
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8420
  %1 = load i32, i32* %debug, align 8, !dbg !8420
  %cmp = icmp ne i32 %1, 0, !dbg !8421
  br i1 %cmp, label %if.then, label %if.end, !dbg !8422

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8423
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8424
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8423
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7306, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8425
  br label %if.end, !dbg !8426

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8427
  %cmp1 = icmp eq %struct.KernelInfo* %3, null, !dbg !8429
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8430

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8431
  br label %return, !dbg !8431

if.end3:                                          ; preds = %if.end
  %4 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8432
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 5, !dbg !8434
  %5 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8434
  %cmp4 = icmp eq %struct._Image* %5, null, !dbg !8435
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !8436

if.then5:                                         ; preds = %if.end3
  %6 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8437
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 2, !dbg !8437
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8437
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8437
  %name6 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 1, !dbg !8437
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name6, i64 0, i64 0, !dbg !8437
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7310, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay7), !dbg !8437
  store i32 0, i32* %retval, align 4, !dbg !8437
  br label %return, !dbg !8437

if.end9:                                          ; preds = %if.end3
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8439
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !8440
  %10 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !8440
  %11 = load i32, i32* %channel.addr, align 4, !dbg !8441
  %12 = load i32, i32* %method.addr, align 4, !dbg !8442
  %13 = load i64, i64* %iterations.addr, align 8, !dbg !8443
  %14 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel.addr, align 8, !dbg !8444
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8445
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !8446
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !8446
  %call12 = call %struct._Image* @MorphologyImageChannel(%struct._Image* %10, i32 %11, i32 %12, i64 %13, %struct.KernelInfo* %14, %struct._ExceptionInfo* %16), !dbg !8447
  store %struct._Image* %call12, %struct._Image** %morphology_image, align 8, !dbg !8448
  %17 = load %struct._Image*, %struct._Image** %morphology_image, align 8, !dbg !8449
  %cmp13 = icmp eq %struct._Image* %17, null, !dbg !8451
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !8452

if.then14:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !8453
  br label %return, !dbg !8453

if.end15:                                         ; preds = %if.end9
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8454
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !8455
  %19 = load %struct._Image*, %struct._Image** %morphology_image, align 8, !dbg !8456
  call void @ReplaceImageInList(%struct._Image** %images16, %struct._Image* %19), !dbg !8457
  store i32 1, i32* %retval, align 4, !dbg !8458
  br label %return, !dbg !8458

return:                                           ; preds = %if.end15, %if.then14, %if.then5, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !8459
  ret i32 %20, !dbg !8459
}

declare dso_local %struct._Image* @MorphologyImageChannel(%struct._Image*, i32, i32, i64, %struct.KernelInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMotionBlurImage(%struct._MagickWand* %wand, double %radius, double %sigma, double %angle) #0 !dbg !8460 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %angle.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8461, metadata !DIExpression()), !dbg !8462
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !8463, metadata !DIExpression()), !dbg !8464
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8469, metadata !DIExpression()), !dbg !8470
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8471
  %1 = load double, double* %radius.addr, align 8, !dbg !8472
  %2 = load double, double* %sigma.addr, align 8, !dbg !8473
  %3 = load double, double* %angle.addr, align 8, !dbg !8474
  %call = call i32 @MagickMotionBlurImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2, double %3), !dbg !8475
  store i32 %call, i32* %status, align 4, !dbg !8476
  %4 = load i32, i32* %status, align 4, !dbg !8477
  ret i32 %4, !dbg !8478
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMotionBlurImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma, double %angle) #0 !dbg !8479 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %angle.addr = alloca double, align 8
  %blur_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !8486, metadata !DIExpression()), !dbg !8487
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !8490, metadata !DIExpression()), !dbg !8491
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8492
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8494
  %1 = load i32, i32* %debug, align 8, !dbg !8494
  %cmp = icmp ne i32 %1, 0, !dbg !8495
  br i1 %cmp, label %if.then, label %if.end, !dbg !8496

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8497
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8498
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8497
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7379, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8499
  br label %if.end, !dbg !8500

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8501
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8503
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8503
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8504
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8505

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8506
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8506
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8506
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8506
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8506
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8506
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7381, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8506
  store i32 0, i32* %retval, align 4, !dbg !8506
  br label %return, !dbg !8506

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8508
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8509
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8509
  %10 = load i32, i32* %channel.addr, align 4, !dbg !8510
  %11 = load double, double* %radius.addr, align 8, !dbg !8511
  %12 = load double, double* %sigma.addr, align 8, !dbg !8512
  %13 = load double, double* %angle.addr, align 8, !dbg !8513
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8514
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !8515
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !8515
  %call9 = call %struct._Image* @MotionBlurImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, double %13, %struct._ExceptionInfo* %15), !dbg !8516
  store %struct._Image* %call9, %struct._Image** %blur_image, align 8, !dbg !8517
  %16 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !8518
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !8520
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8521

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8522
  br label %return, !dbg !8522

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8523
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !8524
  %18 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !8525
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !8526
  store i32 1, i32* %retval, align 4, !dbg !8527
  br label %return, !dbg !8527

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !8528
  ret i32 %19, !dbg !8528
}

declare dso_local %struct._Image* @MotionBlurImageChannel(%struct._Image*, i32, double, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickNegateImage(%struct._MagickWand* %wand, i32 %gray) #0 !dbg !8529 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %gray.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8530, metadata !DIExpression()), !dbg !8531
  store i32 %gray, i32* %gray.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gray.addr, metadata !8532, metadata !DIExpression()), !dbg !8533
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8534, metadata !DIExpression()), !dbg !8535
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8536
  %1 = load i32, i32* %gray.addr, align 4, !dbg !8537
  %call = call i32 @MagickNegateImageChannel(%struct._MagickWand* %0, i32 134217719, i32 %1), !dbg !8538
  store i32 %call, i32* %status, align 4, !dbg !8539
  %2 = load i32, i32* %status, align 4, !dbg !8540
  ret i32 %2, !dbg !8541
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickNegateImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %gray) #0 !dbg !8542 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %gray.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8547, metadata !DIExpression()), !dbg !8548
  store i32 %gray, i32* %gray.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gray.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8551, metadata !DIExpression()), !dbg !8552
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8553
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8555
  %1 = load i32, i32* %debug, align 8, !dbg !8555
  %cmp = icmp ne i32 %1, 0, !dbg !8556
  br i1 %cmp, label %if.then, label %if.end, !dbg !8557

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8558
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8559
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8558
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7444, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8560
  br label %if.end, !dbg !8561

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8562
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8564
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8564
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8565
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8566

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8567
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8567
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8567
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8567
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8567
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8567
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7446, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8567
  store i32 0, i32* %retval, align 4, !dbg !8567
  br label %return, !dbg !8567

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8569
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8570
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8570
  %10 = load i32, i32* %channel.addr, align 4, !dbg !8571
  %11 = load i32, i32* %gray.addr, align 4, !dbg !8572
  %call8 = call i32 @NegateImageChannel(%struct._Image* %9, i32 %10, i32 %11), !dbg !8573
  store i32 %call8, i32* %status, align 4, !dbg !8574
  %12 = load i32, i32* %status, align 4, !dbg !8575
  %cmp9 = icmp eq i32 %12, 0, !dbg !8577
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !8578

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8579
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !8580
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !8580
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8581
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !8582
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !8582
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !8583
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !8584
  br label %if.end14, !dbg !8584

if.end14:                                         ; preds = %if.then10, %if.end6
  %17 = load i32, i32* %status, align 4, !dbg !8585
  store i32 %17, i32* %retval, align 4, !dbg !8586
  br label %return, !dbg !8586

return:                                           ; preds = %if.end14, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !8587
  ret i32 %18, !dbg !8587
}

declare dso_local i32 @NegateImageChannel(%struct._Image*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickNewImage(%struct._MagickWand* %wand, i64 %width, i64 %height, %struct._PixelWand* %background) #0 !dbg !8588 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %background.addr = alloca %struct._PixelWand*, align 8
  %images = alloca %struct._Image*, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8591, metadata !DIExpression()), !dbg !8592
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8593, metadata !DIExpression()), !dbg !8594
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8595, metadata !DIExpression()), !dbg !8596
  store %struct._PixelWand* %background, %struct._PixelWand** %background.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %background.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !8599, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !8601, metadata !DIExpression()), !dbg !8602
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8603
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8605
  %1 = load i32, i32* %debug, align 8, !dbg !8605
  %cmp = icmp ne i32 %1, 0, !dbg !8606
  br i1 %cmp, label %if.then, label %if.end, !dbg !8607

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8608
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8609
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8608
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7496, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8610
  br label %if.end, !dbg !8611

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %background.addr, align 8, !dbg !8612
  call void @PixelGetMagickColor(%struct._PixelWand* %3, %struct._MagickPixelPacket* %pixel), !dbg !8613
  %4 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8614
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 3, !dbg !8615
  %5 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !8615
  %6 = load i64, i64* %width.addr, align 8, !dbg !8616
  %7 = load i64, i64* %height.addr, align 8, !dbg !8617
  %call1 = call %struct._Image* @NewMagickImage(%struct._ImageInfo* %5, i64 %6, i64 %7, %struct._MagickPixelPacket* %pixel), !dbg !8618
  store %struct._Image* %call1, %struct._Image** %images, align 8, !dbg !8619
  %8 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8620
  %cmp2 = icmp eq %struct._Image* %8, null, !dbg !8622
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8623

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8624
  br label %return, !dbg !8624

if.end4:                                          ; preds = %if.end
  %9 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8625
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 58, !dbg !8627
  %severity = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %exception, i32 0, i32 0, !dbg !8628
  %10 = load i32, i32* %severity, align 8, !dbg !8628
  %cmp5 = icmp ne i32 %10, 0, !dbg !8629
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !8630

if.then6:                                         ; preds = %if.end4
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8631
  %exception7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !8632
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception7, align 8, !dbg !8632
  %13 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8633
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !8634
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception8), !dbg !8635
  br label %if.end9, !dbg !8635

if.end9:                                          ; preds = %if.then6, %if.end4
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8636
  %15 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8637
  %call10 = call i32 @InsertImageInWand(%struct._MagickWand* %14, %struct._Image* %15), !dbg !8638
  store i32 %call10, i32* %retval, align 4, !dbg !8639
  br label %return, !dbg !8639

return:                                           ; preds = %if.end9, %if.then3
  %16 = load i32, i32* %retval, align 4, !dbg !8640
  ret i32 %16, !dbg !8640
}

declare dso_local %struct._Image* @NewMagickImage(%struct._ImageInfo*, i64, i64, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickNextImage(%struct._MagickWand* %wand) #0 !dbg !8641 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8642, metadata !DIExpression()), !dbg !8643
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8644
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8646
  %1 = load i32, i32* %debug, align 8, !dbg !8646
  %cmp = icmp ne i32 %1, 0, !dbg !8647
  br i1 %cmp, label %if.then, label %if.end, !dbg !8648

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8649
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8650
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8649
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7546, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8651
  br label %if.end, !dbg !8652

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8653
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8655
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8655
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8656
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8657

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8658
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8658
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8658
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8658
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8658
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8658
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7548, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8658
  store i32 0, i32* %retval, align 4, !dbg !8658
  br label %return, !dbg !8658

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8660
  %insert_before = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 6, !dbg !8661
  store i32 0, i32* %insert_before, align 8, !dbg !8662
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8663
  %image_pending = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 7, !dbg !8665
  %10 = load i32, i32* %image_pending, align 4, !dbg !8665
  %cmp7 = icmp ne i32 %10, 0, !dbg !8666
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !8667

if.then8:                                         ; preds = %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8668
  %image_pending9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 7, !dbg !8670
  store i32 0, i32* %image_pending9, align 4, !dbg !8671
  store i32 1, i32* %retval, align 4, !dbg !8672
  br label %return, !dbg !8672

if.end10:                                         ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8673
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !8675
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !8675
  %call12 = call %struct._Image* @GetNextImageInList(%struct._Image* %13), !dbg !8676
  %cmp13 = icmp eq %struct._Image* %call12, null, !dbg !8677
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !8678

if.then14:                                        ; preds = %if.end10
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8679
  %image_pending15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 7, !dbg !8681
  store i32 1, i32* %image_pending15, align 4, !dbg !8682
  store i32 0, i32* %retval, align 4, !dbg !8683
  br label %return, !dbg !8683

if.end16:                                         ; preds = %if.end10
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8684
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !8685
  %16 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !8685
  %call18 = call %struct._Image* @GetNextImageInList(%struct._Image* %16), !dbg !8686
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8687
  %images19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !8688
  store %struct._Image* %call18, %struct._Image** %images19, align 8, !dbg !8689
  store i32 1, i32* %retval, align 4, !dbg !8690
  br label %return, !dbg !8690

return:                                           ; preds = %if.end16, %if.then14, %if.then8, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !8691
  ret i32 %18, !dbg !8691
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickNormalizeImage(%struct._MagickWand* %wand) #0 !dbg !8692 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8693, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8695, metadata !DIExpression()), !dbg !8696
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8697
  %call = call i32 @MagickNormalizeImageChannel(%struct._MagickWand* %0, i32 134217719), !dbg !8698
  store i32 %call, i32* %status, align 4, !dbg !8699
  %1 = load i32, i32* %status, align 4, !dbg !8700
  ret i32 %1, !dbg !8701
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickNormalizeImageChannel(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !8702 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8703, metadata !DIExpression()), !dbg !8704
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8705, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8707, metadata !DIExpression()), !dbg !8708
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8709
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8711
  %1 = load i32, i32* %debug, align 8, !dbg !8711
  %cmp = icmp ne i32 %1, 0, !dbg !8712
  br i1 %cmp, label %if.then, label %if.end, !dbg !8713

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8714
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8715
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8714
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7613, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8716
  br label %if.end, !dbg !8717

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8718
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8720
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8720
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8721
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8722

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8723
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8723
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8723
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8723
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8723
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8723
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7615, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8723
  store i32 0, i32* %retval, align 4, !dbg !8723
  br label %return, !dbg !8723

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8725
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8726
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8726
  %10 = load i32, i32* %channel.addr, align 4, !dbg !8727
  %call8 = call i32 @NormalizeImageChannel(%struct._Image* %9, i32 %10), !dbg !8728
  store i32 %call8, i32* %status, align 4, !dbg !8729
  %11 = load i32, i32* %status, align 4, !dbg !8730
  %cmp9 = icmp eq i32 %11, 0, !dbg !8732
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !8733

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8734
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !8735
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !8735
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8736
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !8737
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !8737
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !8738
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !8739
  br label %if.end14, !dbg !8739

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !8740
  store i32 %16, i32* %retval, align 4, !dbg !8741
  br label %return, !dbg !8741

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !8742
  ret i32 %17, !dbg !8742
}

declare dso_local i32 @NormalizeImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickOilPaintImage(%struct._MagickWand* %wand, double %radius) #0 !dbg !8743 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %paint_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.declare(metadata %struct._Image** %paint_image, metadata !8748, metadata !DIExpression()), !dbg !8749
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8750
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8752
  %1 = load i32, i32* %debug, align 8, !dbg !8752
  %cmp = icmp ne i32 %1, 0, !dbg !8753
  br i1 %cmp, label %if.then, label %if.end, !dbg !8754

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8755
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8756
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8755
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7658, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8757
  br label %if.end, !dbg !8758

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8759
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8761
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8761
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8762
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8763

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8764
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8764
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8764
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8764
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8764
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8764
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7660, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8764
  store i32 0, i32* %retval, align 4, !dbg !8764
  br label %return, !dbg !8764

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8766
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8767
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8767
  %10 = load double, double* %radius.addr, align 8, !dbg !8768
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8769
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !8770
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !8770
  %call9 = call %struct._Image* @OilPaintImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !8771
  store %struct._Image* %call9, %struct._Image** %paint_image, align 8, !dbg !8772
  %13 = load %struct._Image*, %struct._Image** %paint_image, align 8, !dbg !8773
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !8775
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8776

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8777
  br label %return, !dbg !8777

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8778
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !8779
  %15 = load %struct._Image*, %struct._Image** %paint_image, align 8, !dbg !8780
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !8781
  store i32 1, i32* %retval, align 4, !dbg !8782
  br label %return, !dbg !8782

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !8783
  ret i32 %16, !dbg !8783
}

declare dso_local %struct._Image* @OilPaintImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickOpaquePaintImage(%struct._MagickWand* %wand, %struct._PixelWand* %target, %struct._PixelWand* %fill, double %fuzz, i32 %invert) #0 !dbg !8784 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %target.addr = alloca %struct._PixelWand*, align 8
  %fill.addr = alloca %struct._PixelWand*, align 8
  %fuzz.addr = alloca double, align 8
  %invert.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  store %struct._PixelWand* %target, %struct._PixelWand** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %target.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  store %struct._PixelWand* %fill, %struct._PixelWand** %fill.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %fill.addr, metadata !8791, metadata !DIExpression()), !dbg !8792
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !8795, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8797, metadata !DIExpression()), !dbg !8798
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8799
  %1 = load %struct._PixelWand*, %struct._PixelWand** %target.addr, align 8, !dbg !8800
  %2 = load %struct._PixelWand*, %struct._PixelWand** %fill.addr, align 8, !dbg !8801
  %3 = load double, double* %fuzz.addr, align 8, !dbg !8802
  %4 = load i32, i32* %invert.addr, align 4, !dbg !8803
  %call = call i32 @MagickOpaquePaintImageChannel(%struct._MagickWand* %0, i32 134217719, %struct._PixelWand* %1, %struct._PixelWand* %2, double %3, i32 %4), !dbg !8804
  store i32 %call, i32* %status, align 4, !dbg !8805
  %5 = load i32, i32* %status, align 4, !dbg !8806
  ret i32 %5, !dbg !8807
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickOpaquePaintImageChannel(%struct._MagickWand* %wand, i32 %channel, %struct._PixelWand* %target, %struct._PixelWand* %fill, double %fuzz, i32 %invert) #0 !dbg !8808 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %target.addr = alloca %struct._PixelWand*, align 8
  %fill.addr = alloca %struct._PixelWand*, align 8
  %fuzz.addr = alloca double, align 8
  %invert.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %fill_pixel = alloca %struct._MagickPixelPacket, align 8
  %target_pixel = alloca %struct._MagickPixelPacket, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8813, metadata !DIExpression()), !dbg !8814
  store %struct._PixelWand* %target, %struct._PixelWand** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %target.addr, metadata !8815, metadata !DIExpression()), !dbg !8816
  store %struct._PixelWand* %fill, %struct._PixelWand** %fill.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %fill.addr, metadata !8817, metadata !DIExpression()), !dbg !8818
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !8819, metadata !DIExpression()), !dbg !8820
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !8821, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8823, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %fill_pixel, metadata !8825, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %target_pixel, metadata !8827, metadata !DIExpression()), !dbg !8828
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8829
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8831
  %1 = load i32, i32* %debug, align 8, !dbg !8831
  %cmp = icmp ne i32 %1, 0, !dbg !8832
  br i1 %cmp, label %if.then, label %if.end, !dbg !8833

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8834
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8835
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8834
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7738, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8836
  br label %if.end, !dbg !8837

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8838
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8840
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8840
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8841
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8842

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8843
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8843
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8843
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8843
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8843
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8843
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7740, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8843
  store i32 0, i32* %retval, align 4, !dbg !8843
  br label %return, !dbg !8843

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %target.addr, align 8, !dbg !8845
  call void @PixelGetMagickColor(%struct._PixelWand* %8, %struct._MagickPixelPacket* %target_pixel), !dbg !8846
  %9 = load %struct._PixelWand*, %struct._PixelWand** %fill.addr, align 8, !dbg !8847
  call void @PixelGetMagickColor(%struct._PixelWand* %9, %struct._MagickPixelPacket* %fill_pixel), !dbg !8848
  %10 = load double, double* %fuzz.addr, align 8, !dbg !8849
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8850
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !8851
  %12 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8851
  %fuzz8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 31, !dbg !8852
  store double %10, double* %fuzz8, align 8, !dbg !8853
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8854
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !8855
  %14 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !8855
  %15 = load i32, i32* %channel.addr, align 4, !dbg !8856
  %16 = load i32, i32* %invert.addr, align 4, !dbg !8857
  %call10 = call i32 @OpaquePaintImageChannel(%struct._Image* %14, i32 %15, %struct._MagickPixelPacket* %target_pixel, %struct._MagickPixelPacket* %fill_pixel, i32 %16), !dbg !8858
  store i32 %call10, i32* %status, align 4, !dbg !8859
  %17 = load i32, i32* %status, align 4, !dbg !8860
  %cmp11 = icmp eq i32 %17, 0, !dbg !8862
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !8863

if.then12:                                        ; preds = %if.end6
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8864
  %exception13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 2, !dbg !8865
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception13, align 8, !dbg !8865
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8866
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 5, !dbg !8867
  %21 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !8867
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !8868
  call void @InheritException(%struct._ExceptionInfo* %19, %struct._ExceptionInfo* %exception15), !dbg !8869
  br label %if.end16, !dbg !8869

if.end16:                                         ; preds = %if.then12, %if.end6
  %22 = load i32, i32* %status, align 4, !dbg !8870
  store i32 %22, i32* %retval, align 4, !dbg !8871
  br label %return, !dbg !8871

return:                                           ; preds = %if.end16, %if.then2
  %23 = load i32, i32* %retval, align 4, !dbg !8872
  ret i32 %23, !dbg !8872
}

declare dso_local i32 @OpaquePaintImageChannel(%struct._Image*, i32, %struct._MagickPixelPacket*, %struct._MagickPixelPacket*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickOptimizeImageLayers(%struct._MagickWand* %wand) #0 !dbg !8873 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %optimize_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.declare(metadata %struct._Image** %optimize_image, metadata !8876, metadata !DIExpression()), !dbg !8877
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8878
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8880
  %1 = load i32, i32* %debug, align 8, !dbg !8880
  %cmp = icmp ne i32 %1, 0, !dbg !8881
  br i1 %cmp, label %if.then, label %if.end, !dbg !8882

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8883
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8884
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8883
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7784, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8885
  br label %if.end, !dbg !8886

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8887
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8889
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8889
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8890
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8891

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8892
  br label %return, !dbg !8892

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8893
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !8894
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !8894
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8895
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !8896
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8896
  %call5 = call %struct._Image* @OptimizeImageLayers(%struct._Image* %6, %struct._ExceptionInfo* %8), !dbg !8897
  store %struct._Image* %call5, %struct._Image** %optimize_image, align 8, !dbg !8898
  %9 = load %struct._Image*, %struct._Image** %optimize_image, align 8, !dbg !8899
  %cmp6 = icmp eq %struct._Image* %9, null, !dbg !8901
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8902

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !8903
  br label %return, !dbg !8903

if.end8:                                          ; preds = %if.end3
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8904
  %11 = load %struct._Image*, %struct._Image** %optimize_image, align 8, !dbg !8905
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %10, %struct._Image* %11), !dbg !8906
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !8907
  br label %return, !dbg !8907

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %12 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !8908
  ret %struct._MagickWand* %12, !dbg !8908
}

declare dso_local %struct._Image* @OptimizeImageLayers(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickOptimizeImageTransparency(%struct._MagickWand* %wand) #0 !dbg !8909 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8910, metadata !DIExpression()), !dbg !8911
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8912
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8914
  %1 = load i32, i32* %debug, align 8, !dbg !8914
  %cmp = icmp ne i32 %1, 0, !dbg !8915
  br i1 %cmp, label %if.then, label %if.end, !dbg !8916

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8917
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8918
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8917
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7826, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8919
  br label %if.end, !dbg !8920

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8921
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8923
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8923
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8924
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8925

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8926
  br label %return, !dbg !8926

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8927
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !8928
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !8928
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8929
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !8930
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8930
  call void @OptimizeImageTransparency(%struct._Image* %6, %struct._ExceptionInfo* %8), !dbg !8931
  store i32 1, i32* %retval, align 4, !dbg !8932
  br label %return, !dbg !8932

return:                                           ; preds = %if.end3, %if.then2
  %9 = load i32, i32* %retval, align 4, !dbg !8933
  ret i32 %9, !dbg !8933
}

declare dso_local void @OptimizeImageTransparency(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickOrderedPosterizeImage(%struct._MagickWand* %wand, i8* %threshold_map) #0 !dbg !8934 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold_map.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8935, metadata !DIExpression()), !dbg !8936
  store i8* %threshold_map, i8** %threshold_map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %threshold_map.addr, metadata !8937, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8939, metadata !DIExpression()), !dbg !8940
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8941
  %1 = load i8*, i8** %threshold_map.addr, align 8, !dbg !8942
  %call = call i32 @MagickOrderedPosterizeImageChannel(%struct._MagickWand* %0, i32 134217719, i8* %1), !dbg !8943
  store i32 %call, i32* %status, align 4, !dbg !8944
  %2 = load i32, i32* %status, align 4, !dbg !8945
  ret i32 %2, !dbg !8946
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickOrderedPosterizeImageChannel(%struct._MagickWand* %wand, i32 %channel, i8* %threshold_map) #0 !dbg !8947 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %threshold_map.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8950, metadata !DIExpression()), !dbg !8951
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8952, metadata !DIExpression()), !dbg !8953
  store i8* %threshold_map, i8** %threshold_map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %threshold_map.addr, metadata !8954, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8956, metadata !DIExpression()), !dbg !8957
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8958
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8960
  %1 = load i32, i32* %debug, align 8, !dbg !8960
  %cmp = icmp ne i32 %1, 0, !dbg !8961
  br i1 %cmp, label %if.then, label %if.end, !dbg !8962

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8963
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !8964
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8963
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7902, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8965
  br label %if.end, !dbg !8966

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8967
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !8969
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !8969
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !8970
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8971

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8972
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !8972
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8972
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8972
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !8972
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8972
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7904, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8972
  store i32 0, i32* %retval, align 4, !dbg !8972
  br label %return, !dbg !8972

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8974
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !8975
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !8975
  %10 = load i32, i32* %channel.addr, align 4, !dbg !8976
  %11 = load i8*, i8** %threshold_map.addr, align 8, !dbg !8977
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8978
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !8979
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !8979
  %call9 = call i32 @OrderedPosterizeImageChannel(%struct._Image* %9, i32 %10, i8* %11, %struct._ExceptionInfo* %13), !dbg !8980
  store i32 %call9, i32* %status, align 4, !dbg !8981
  %14 = load i32, i32* %status, align 4, !dbg !8982
  store i32 %14, i32* %retval, align 4, !dbg !8983
  br label %return, !dbg !8983

return:                                           ; preds = %if.end6, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !8984
  ret i32 %15, !dbg !8984
}

declare dso_local i32 @OrderedPosterizeImageChannel(%struct._Image*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickPingImage(%struct._MagickWand* %wand, i8* %filename) #0 !dbg !8985 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %filename.addr = alloca i8*, align 8
  %images = alloca %struct._Image*, align 8
  %ping_info = alloca %struct._ImageInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !8986, metadata !DIExpression()), !dbg !8987
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8988, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %ping_info, metadata !8992, metadata !DIExpression()), !dbg !8993
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8994
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !8996
  %1 = load i32, i32* %debug, align 8, !dbg !8996
  %cmp = icmp ne i32 %1, 0, !dbg !8997
  br i1 %cmp, label %if.then, label %if.end, !dbg !8998

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !8999
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9000
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8999
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7949, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9001
  br label %if.end, !dbg !9002

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9003
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !9004
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9004
  %call1 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %4), !dbg !9005
  store %struct._ImageInfo* %call1, %struct._ImageInfo** %ping_info, align 8, !dbg !9006
  %5 = load i8*, i8** %filename.addr, align 8, !dbg !9007
  %cmp2 = icmp ne i8* %5, null, !dbg !9009
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !9010

if.then3:                                         ; preds = %if.end
  %6 = load %struct._ImageInfo*, %struct._ImageInfo** %ping_info, align 8, !dbg !9011
  %filename4 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %6, i32 0, i32 51, !dbg !9012
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename4, i64 0, i64 0, !dbg !9011
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !9013
  %call6 = call i64 @CopyMagickString(i8* %arraydecay5, i8* %7, i64 4096), !dbg !9014
  br label %if.end7, !dbg !9015

if.end7:                                          ; preds = %if.then3, %if.end
  %8 = load %struct._ImageInfo*, %struct._ImageInfo** %ping_info, align 8, !dbg !9016
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9017
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 2, !dbg !9018
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9018
  %call8 = call %struct._Image* @PingImage(%struct._ImageInfo* %8, %struct._ExceptionInfo* %10), !dbg !9019
  store %struct._Image* %call8, %struct._Image** %images, align 8, !dbg !9020
  %11 = load %struct._ImageInfo*, %struct._ImageInfo** %ping_info, align 8, !dbg !9021
  %call9 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %11), !dbg !9022
  store %struct._ImageInfo* %call9, %struct._ImageInfo** %ping_info, align 8, !dbg !9023
  %12 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9024
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !9026
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9027

if.then11:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !9028
  br label %return, !dbg !9028

if.end12:                                         ; preds = %if.end7
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9029
  %14 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9030
  %call13 = call i32 @InsertImageInWand(%struct._MagickWand* %13, %struct._Image* %14), !dbg !9031
  store i32 %call13, i32* %retval, align 4, !dbg !9032
  br label %return, !dbg !9032

return:                                           ; preds = %if.end12, %if.then11
  %15 = load i32, i32* %retval, align 4, !dbg !9033
  ret i32 %15, !dbg !9033
}

declare dso_local %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo*) #2

declare dso_local i64 @CopyMagickString(i8*, i8*, i64) #2

declare dso_local %struct._Image* @PingImage(%struct._ImageInfo*, %struct._ExceptionInfo*) #2

declare dso_local %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickPingImageBlob(%struct._MagickWand* %wand, i8* %blob, i64 %length) #0 !dbg !9034 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %blob.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %images = alloca %struct._Image*, align 8
  %read_info = alloca %struct._ImageInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  store i8* %blob, i8** %blob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %blob.addr, metadata !9039, metadata !DIExpression()), !dbg !9040
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !9041, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !9043, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %read_info, metadata !9045, metadata !DIExpression()), !dbg !9046
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9047
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9049
  %1 = load i32, i32* %debug, align 8, !dbg !9049
  %cmp = icmp ne i32 %1, 0, !dbg !9050
  br i1 %cmp, label %if.then, label %if.end, !dbg !9051

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9052
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9053
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9052
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7999, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9054
  br label %if.end, !dbg !9055

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9056
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !9057
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9057
  %call1 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %4), !dbg !9058
  store %struct._ImageInfo* %call1, %struct._ImageInfo** %read_info, align 8, !dbg !9059
  %5 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9060
  %6 = load i8*, i8** %blob.addr, align 8, !dbg !9061
  %7 = load i64, i64* %length.addr, align 8, !dbg !9062
  call void @SetImageInfoBlob(%struct._ImageInfo* %5, i8* %6, i64 %7), !dbg !9063
  %8 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9064
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9065
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 2, !dbg !9066
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9066
  %call2 = call %struct._Image* @PingImage(%struct._ImageInfo* %8, %struct._ExceptionInfo* %10), !dbg !9067
  store %struct._Image* %call2, %struct._Image** %images, align 8, !dbg !9068
  %11 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9069
  %call3 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %11), !dbg !9070
  store %struct._ImageInfo* %call3, %struct._ImageInfo** %read_info, align 8, !dbg !9071
  %12 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9072
  %cmp4 = icmp eq %struct._Image* %12, null, !dbg !9074
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9075

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9076
  br label %return, !dbg !9076

if.end6:                                          ; preds = %if.end
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9077
  %14 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9078
  %call7 = call i32 @InsertImageInWand(%struct._MagickWand* %13, %struct._Image* %14), !dbg !9079
  store i32 %call7, i32* %retval, align 4, !dbg !9080
  br label %return, !dbg !9080

return:                                           ; preds = %if.end6, %if.then5
  %15 = load i32, i32* %retval, align 4, !dbg !9081
  ret i32 %15, !dbg !9081
}

declare dso_local void @SetImageInfoBlob(%struct._ImageInfo*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickPingImageFile(%struct._MagickWand* %wand, %struct._IO_FILE* %file) #0 !dbg !9082 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %images = alloca %struct._Image*, align 8
  %read_info = alloca %struct._ImageInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9085, metadata !DIExpression()), !dbg !9086
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %read_info, metadata !9091, metadata !DIExpression()), !dbg !9092
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9093
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9095
  %1 = load i32, i32* %debug, align 8, !dbg !9095
  %cmp = icmp ne i32 %1, 0, !dbg !9096
  br i1 %cmp, label %if.then, label %if.end, !dbg !9097

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9098
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9099
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9098
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8046, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9100
  br label %if.end, !dbg !9101

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9102
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !9103
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9103
  %call1 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %4), !dbg !9104
  store %struct._ImageInfo* %call1, %struct._ImageInfo** %read_info, align 8, !dbg !9105
  %5 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9106
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9107
  call void @SetImageInfoFile(%struct._ImageInfo* %5, %struct._IO_FILE* %6), !dbg !9108
  %7 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9109
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9110
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !9111
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9111
  %call2 = call %struct._Image* @PingImage(%struct._ImageInfo* %7, %struct._ExceptionInfo* %9), !dbg !9112
  store %struct._Image* %call2, %struct._Image** %images, align 8, !dbg !9113
  %10 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9114
  %call3 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %10), !dbg !9115
  store %struct._ImageInfo* %call3, %struct._ImageInfo** %read_info, align 8, !dbg !9116
  %11 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9117
  %cmp4 = icmp eq %struct._Image* %11, null, !dbg !9119
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9120

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9121
  br label %return, !dbg !9121

if.end6:                                          ; preds = %if.end
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9122
  %13 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9123
  %call7 = call i32 @InsertImageInWand(%struct._MagickWand* %12, %struct._Image* %13), !dbg !9124
  store i32 %call7, i32* %retval, align 4, !dbg !9125
  br label %return, !dbg !9125

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i32, i32* %retval, align 4, !dbg !9126
  ret i32 %14, !dbg !9126
}

declare dso_local void @SetImageInfoFile(%struct._ImageInfo*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickPolaroidImage(%struct._MagickWand* %wand, %struct._DrawingWand* %drawing_wand, double %angle) #0 !dbg !9127 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %drawing_wand.addr = alloca %struct._DrawingWand*, align 8
  %angle.addr = alloca double, align 8
  %draw_info = alloca %struct._DrawInfo*, align 8
  %polaroid_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9130, metadata !DIExpression()), !dbg !9131
  store %struct._DrawingWand* %drawing_wand, %struct._DrawingWand** %drawing_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %drawing_wand.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !9136, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.declare(metadata %struct._Image** %polaroid_image, metadata !9138, metadata !DIExpression()), !dbg !9139
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9140
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9142
  %1 = load i32, i32* %debug, align 8, !dbg !9142
  %cmp = icmp ne i32 %1, 0, !dbg !9143
  br i1 %cmp, label %if.then, label %if.end, !dbg !9144

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9145
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9146
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9145
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8095, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9147
  br label %if.end, !dbg !9148

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9149
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9151
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9151
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9152
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9153

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9154
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9154
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9154
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9154
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9154
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9154
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8097, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9154
  store i32 0, i32* %retval, align 4, !dbg !9154
  br label %return, !dbg !9154

if.end6:                                          ; preds = %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %drawing_wand.addr, align 8, !dbg !9156
  %call7 = call %struct._DrawInfo* @PeekDrawingWand(%struct._DrawingWand* %8), !dbg !9157
  store %struct._DrawInfo* %call7, %struct._DrawInfo** %draw_info, align 8, !dbg !9158
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !9159
  %cmp8 = icmp eq %struct._DrawInfo* %9, null, !dbg !9161
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9162

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !9163
  br label %return, !dbg !9163

if.end10:                                         ; preds = %if.end6
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9164
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !9165
  %11 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !9165
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !9166
  %13 = load double, double* %angle.addr, align 8, !dbg !9167
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9168
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !9169
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !9169
  %call13 = call %struct._Image* @PolaroidImage(%struct._Image* %11, %struct._DrawInfo* %12, double %13, %struct._ExceptionInfo* %15), !dbg !9170
  store %struct._Image* %call13, %struct._Image** %polaroid_image, align 8, !dbg !9171
  %16 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !9172
  %cmp14 = icmp eq %struct._Image* %16, null, !dbg !9174
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !9175

if.then15:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !9176
  br label %return, !dbg !9176

if.end16:                                         ; preds = %if.end10
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9177
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !9178
  %18 = load %struct._Image*, %struct._Image** %polaroid_image, align 8, !dbg !9179
  call void @ReplaceImageInList(%struct._Image** %images17, %struct._Image* %18), !dbg !9180
  store i32 1, i32* %retval, align 4, !dbg !9181
  br label %return, !dbg !9181

return:                                           ; preds = %if.end16, %if.then15, %if.then9, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !9182
  ret i32 %19, !dbg !9182
}

declare dso_local %struct._Image* @PolaroidImage(%struct._Image*, %struct._DrawInfo*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickPosterizeImage(%struct._MagickWand* %wand, i64 %levels, i32 %dither) #0 !dbg !9183 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %levels.addr = alloca i64, align 8
  %dither.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9186, metadata !DIExpression()), !dbg !9187
  store i64 %levels, i64* %levels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %levels.addr, metadata !9188, metadata !DIExpression()), !dbg !9189
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !9190, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9192, metadata !DIExpression()), !dbg !9193
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9194
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9196
  %1 = load i32, i32* %debug, align 8, !dbg !9196
  %cmp = icmp ne i32 %1, 0, !dbg !9197
  br i1 %cmp, label %if.then, label %if.end, !dbg !9198

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9199
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9200
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9199
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8146, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9201
  br label %if.end, !dbg !9202

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9203
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9205
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9205
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9206
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9207

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9208
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9208
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9208
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9208
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9208
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9208
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8148, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9208
  store i32 0, i32* %retval, align 4, !dbg !9208
  br label %return, !dbg !9208

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9210
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !9211
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !9211
  %10 = load i64, i64* %levels.addr, align 8, !dbg !9212
  %11 = load i32, i32* %dither.addr, align 4, !dbg !9213
  %call8 = call i32 @PosterizeImage(%struct._Image* %9, i64 %10, i32 %11), !dbg !9214
  store i32 %call8, i32* %status, align 4, !dbg !9215
  %12 = load i32, i32* %status, align 4, !dbg !9216
  %cmp9 = icmp eq i32 %12, 0, !dbg !9218
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !9219

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9220
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !9221
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !9221
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9222
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !9223
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !9223
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !9224
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !9225
  br label %if.end14, !dbg !9225

if.end14:                                         ; preds = %if.then10, %if.end6
  %17 = load i32, i32* %status, align 4, !dbg !9226
  store i32 %17, i32* %retval, align 4, !dbg !9227
  br label %return, !dbg !9227

return:                                           ; preds = %if.end14, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !9228
  ret i32 %18, !dbg !9228
}

declare dso_local i32 @PosterizeImage(%struct._Image*, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickPreviewImages(%struct._MagickWand* %wand, i32 %preview) #0 !dbg !9229 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %preview.addr = alloca i32, align 4
  %preview_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9233, metadata !DIExpression()), !dbg !9234
  store i32 %preview, i32* %preview.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preview.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata %struct._Image** %preview_image, metadata !9237, metadata !DIExpression()), !dbg !9238
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9239
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9241
  %1 = load i32, i32* %debug, align 8, !dbg !9241
  %cmp = icmp ne i32 %1, 0, !dbg !9242
  br i1 %cmp, label %if.then, label %if.end, !dbg !9243

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9244
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9245
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9244
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9246
  br label %if.end, !dbg !9247

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9248
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9250
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9250
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9251
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9252

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !9253
  br label %return, !dbg !9253

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9254
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !9255
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !9255
  %7 = load i32, i32* %preview.addr, align 4, !dbg !9256
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9257
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !9258
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9258
  %call5 = call %struct._Image* @PreviewImage(%struct._Image* %6, i32 %7, %struct._ExceptionInfo* %9), !dbg !9259
  store %struct._Image* %call5, %struct._Image** %preview_image, align 8, !dbg !9260
  %10 = load %struct._Image*, %struct._Image** %preview_image, align 8, !dbg !9261
  %cmp6 = icmp eq %struct._Image* %10, null, !dbg !9263
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9264

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !9265
  br label %return, !dbg !9265

if.end8:                                          ; preds = %if.end3
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9266
  %12 = load %struct._Image*, %struct._Image** %preview_image, align 8, !dbg !9267
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %11, %struct._Image* %12), !dbg !9268
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !9269
  br label %return, !dbg !9269

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %13 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !9270
  ret %struct._MagickWand* %13, !dbg !9270
}

declare dso_local %struct._Image* @PreviewImage(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickPreviousImage(%struct._MagickWand* %wand) #0 !dbg !9271 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9274
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9276
  %1 = load i32, i32* %debug, align 8, !dbg !9276
  %cmp = icmp ne i32 %1, 0, !dbg !9277
  br i1 %cmp, label %if.then, label %if.end, !dbg !9278

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9279
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9280
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9279
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8242, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9281
  br label %if.end, !dbg !9282

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9283
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9285
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9285
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9286
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9287

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9288
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9288
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9288
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9288
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9288
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9288
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8244, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9288
  store i32 0, i32* %retval, align 4, !dbg !9288
  br label %return, !dbg !9288

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9290
  %image_pending = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 7, !dbg !9292
  %9 = load i32, i32* %image_pending, align 4, !dbg !9292
  %cmp7 = icmp ne i32 %9, 0, !dbg !9293
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9294

if.then8:                                         ; preds = %if.end6
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9295
  %image_pending9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 7, !dbg !9297
  store i32 0, i32* %image_pending9, align 4, !dbg !9298
  store i32 1, i32* %retval, align 4, !dbg !9299
  br label %return, !dbg !9299

if.end10:                                         ; preds = %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9300
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !9302
  %12 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !9302
  %call12 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %12), !dbg !9303
  %cmp13 = icmp eq %struct._Image* %call12, null, !dbg !9304
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !9305

if.then14:                                        ; preds = %if.end10
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9306
  %image_pending15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 7, !dbg !9308
  store i32 1, i32* %image_pending15, align 4, !dbg !9309
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9310
  %insert_before = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 6, !dbg !9311
  store i32 1, i32* %insert_before, align 8, !dbg !9312
  store i32 0, i32* %retval, align 4, !dbg !9313
  br label %return, !dbg !9313

if.end16:                                         ; preds = %if.end10
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9314
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !9315
  %16 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !9315
  %call18 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %16), !dbg !9316
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9317
  %images19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !9318
  store %struct._Image* %call18, %struct._Image** %images19, align 8, !dbg !9319
  store i32 1, i32* %retval, align 4, !dbg !9320
  br label %return, !dbg !9320

return:                                           ; preds = %if.end16, %if.then14, %if.then8, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !9321
  ret i32 %18, !dbg !9321
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickQuantizeImage(%struct._MagickWand* %wand, i64 %number_colors, i32 %colorspace, i64 %treedepth, i32 %dither, i32 %measure_error) #0 !dbg !9322 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %number_colors.addr = alloca i64, align 8
  %colorspace.addr = alloca i32, align 4
  %treedepth.addr = alloca i64, align 8
  %dither.addr = alloca i32, align 4
  %measure_error.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %quantize_info = alloca %struct._QuantizeInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  store i64 %number_colors, i64* %number_colors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_colors.addr, metadata !9328, metadata !DIExpression()), !dbg !9329
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  store i64 %treedepth, i64* %treedepth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %treedepth.addr, metadata !9332, metadata !DIExpression()), !dbg !9333
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !9334, metadata !DIExpression()), !dbg !9335
  store i32 %measure_error, i32* %measure_error.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %measure_error.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9338, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info, metadata !9340, metadata !DIExpression()), !dbg !9341
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9342
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9344
  %1 = load i32, i32* %debug, align 8, !dbg !9344
  %cmp = icmp ne i32 %1, 0, !dbg !9345
  br i1 %cmp, label %if.then, label %if.end, !dbg !9346

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9347
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9348
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9347
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8325, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9349
  br label %if.end, !dbg !9350

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9351
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9353
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9353
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9354
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9355

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9356
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9356
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9356
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9356
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9356
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9356
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8327, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9356
  store i32 0, i32* %retval, align 4, !dbg !9356
  br label %return, !dbg !9356

if.end6:                                          ; preds = %if.end
  %call7 = call %struct._QuantizeInfo* @CloneQuantizeInfo(%struct._QuantizeInfo* null), !dbg !9358
  store %struct._QuantizeInfo* %call7, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9359
  %8 = load i64, i64* %number_colors.addr, align 8, !dbg !9360
  %9 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9361
  %number_colors8 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %9, i32 0, i32 0, !dbg !9362
  store i64 %8, i64* %number_colors8, align 8, !dbg !9363
  %10 = load i32, i32* %dither.addr, align 4, !dbg !9364
  %11 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9365
  %dither9 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %11, i32 0, i32 2, !dbg !9366
  store i32 %10, i32* %dither9, align 8, !dbg !9367
  %12 = load i64, i64* %treedepth.addr, align 8, !dbg !9368
  %13 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9369
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %13, i32 0, i32 1, !dbg !9370
  store i64 %12, i64* %tree_depth, align 8, !dbg !9371
  %14 = load i32, i32* %colorspace.addr, align 4, !dbg !9372
  %15 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9373
  %colorspace10 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %15, i32 0, i32 3, !dbg !9374
  store i32 %14, i32* %colorspace10, align 4, !dbg !9375
  %16 = load i32, i32* %measure_error.addr, align 4, !dbg !9376
  %17 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9377
  %measure_error11 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %17, i32 0, i32 4, !dbg !9378
  store i32 %16, i32* %measure_error11, align 8, !dbg !9379
  %18 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9380
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9381
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !9382
  %20 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !9382
  %call13 = call i32 @QuantizeImage(%struct._QuantizeInfo* %18, %struct._Image* %20), !dbg !9383
  store i32 %call13, i32* %status, align 4, !dbg !9384
  %21 = load i32, i32* %status, align 4, !dbg !9385
  %cmp14 = icmp eq i32 %21, 0, !dbg !9387
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !9388

if.then15:                                        ; preds = %if.end6
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9389
  %exception16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 2, !dbg !9390
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception16, align 8, !dbg !9390
  %24 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9391
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %24, i32 0, i32 5, !dbg !9392
  %25 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !9392
  %exception18 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 58, !dbg !9393
  call void @InheritException(%struct._ExceptionInfo* %23, %struct._ExceptionInfo* %exception18), !dbg !9394
  br label %if.end19, !dbg !9394

if.end19:                                         ; preds = %if.then15, %if.end6
  %26 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9395
  %call20 = call %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo* %26), !dbg !9396
  store %struct._QuantizeInfo* %call20, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9397
  %27 = load i32, i32* %status, align 4, !dbg !9398
  store i32 %27, i32* %retval, align 4, !dbg !9399
  br label %return, !dbg !9399

return:                                           ; preds = %if.end19, %if.then2
  %28 = load i32, i32* %retval, align 4, !dbg !9400
  ret i32 %28, !dbg !9400
}

declare dso_local %struct._QuantizeInfo* @CloneQuantizeInfo(%struct._QuantizeInfo*) #2

declare dso_local i32 @QuantizeImage(%struct._QuantizeInfo*, %struct._Image*) #2

declare dso_local %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickQuantizeImages(%struct._MagickWand* %wand, i64 %number_colors, i32 %colorspace, i64 %treedepth, i32 %dither, i32 %measure_error) #0 !dbg !9401 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %number_colors.addr = alloca i64, align 8
  %colorspace.addr = alloca i32, align 4
  %treedepth.addr = alloca i64, align 8
  %dither.addr = alloca i32, align 4
  %measure_error.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %quantize_info = alloca %struct._QuantizeInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9402, metadata !DIExpression()), !dbg !9403
  store i64 %number_colors, i64* %number_colors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_colors.addr, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !9406, metadata !DIExpression()), !dbg !9407
  store i64 %treedepth, i64* %treedepth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %treedepth.addr, metadata !9408, metadata !DIExpression()), !dbg !9409
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !9410, metadata !DIExpression()), !dbg !9411
  store i32 %measure_error, i32* %measure_error.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %measure_error.addr, metadata !9412, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info, metadata !9416, metadata !DIExpression()), !dbg !9417
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9418
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9420
  %1 = load i32, i32* %debug, align 8, !dbg !9420
  %cmp = icmp ne i32 %1, 0, !dbg !9421
  br i1 %cmp, label %if.then, label %if.end, !dbg !9422

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9423
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9424
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9423
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8406, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9425
  br label %if.end, !dbg !9426

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9427
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9429
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9429
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9430
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9431

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9432
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9432
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9432
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9432
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9432
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9432
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8408, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9432
  store i32 0, i32* %retval, align 4, !dbg !9432
  br label %return, !dbg !9432

if.end6:                                          ; preds = %if.end
  %call7 = call %struct._QuantizeInfo* @CloneQuantizeInfo(%struct._QuantizeInfo* null), !dbg !9434
  store %struct._QuantizeInfo* %call7, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9435
  %8 = load i64, i64* %number_colors.addr, align 8, !dbg !9436
  %9 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9437
  %number_colors8 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %9, i32 0, i32 0, !dbg !9438
  store i64 %8, i64* %number_colors8, align 8, !dbg !9439
  %10 = load i32, i32* %dither.addr, align 4, !dbg !9440
  %11 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9441
  %dither9 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %11, i32 0, i32 2, !dbg !9442
  store i32 %10, i32* %dither9, align 8, !dbg !9443
  %12 = load i64, i64* %treedepth.addr, align 8, !dbg !9444
  %13 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9445
  %tree_depth = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %13, i32 0, i32 1, !dbg !9446
  store i64 %12, i64* %tree_depth, align 8, !dbg !9447
  %14 = load i32, i32* %colorspace.addr, align 4, !dbg !9448
  %15 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9449
  %colorspace10 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %15, i32 0, i32 3, !dbg !9450
  store i32 %14, i32* %colorspace10, align 4, !dbg !9451
  %16 = load i32, i32* %measure_error.addr, align 4, !dbg !9452
  %17 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9453
  %measure_error11 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %17, i32 0, i32 4, !dbg !9454
  store i32 %16, i32* %measure_error11, align 8, !dbg !9455
  %18 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9456
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9457
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !9458
  %20 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !9458
  %call13 = call i32 @QuantizeImages(%struct._QuantizeInfo* %18, %struct._Image* %20), !dbg !9459
  store i32 %call13, i32* %status, align 4, !dbg !9460
  %21 = load i32, i32* %status, align 4, !dbg !9461
  %cmp14 = icmp eq i32 %21, 0, !dbg !9463
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !9464

if.then15:                                        ; preds = %if.end6
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9465
  %exception16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 2, !dbg !9466
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception16, align 8, !dbg !9466
  %24 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9467
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %24, i32 0, i32 5, !dbg !9468
  %25 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !9468
  %exception18 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 58, !dbg !9469
  call void @InheritException(%struct._ExceptionInfo* %23, %struct._ExceptionInfo* %exception18), !dbg !9470
  br label %if.end19, !dbg !9470

if.end19:                                         ; preds = %if.then15, %if.end6
  %26 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9471
  %call20 = call %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo* %26), !dbg !9472
  store %struct._QuantizeInfo* %call20, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9473
  %27 = load i32, i32* %status, align 4, !dbg !9474
  store i32 %27, i32* %retval, align 4, !dbg !9475
  br label %return, !dbg !9475

return:                                           ; preds = %if.end19, %if.then2
  %28 = load i32, i32* %retval, align 4, !dbg !9476
  ret i32 %28, !dbg !9476
}

declare dso_local i32 @QuantizeImages(%struct._QuantizeInfo*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRaiseImage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y, i32 %raise) #0 !dbg !9477 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %raise.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %raise_info = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9480, metadata !DIExpression()), !dbg !9481
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9482, metadata !DIExpression()), !dbg !9483
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9484, metadata !DIExpression()), !dbg !9485
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !9486, metadata !DIExpression()), !dbg !9487
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !9488, metadata !DIExpression()), !dbg !9489
  store i32 %raise, i32* %raise.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %raise.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9492, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %raise_info, metadata !9494, metadata !DIExpression()), !dbg !9495
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9496
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9498
  %1 = load i32, i32* %debug, align 8, !dbg !9498
  %cmp = icmp ne i32 %1, 0, !dbg !9499
  br i1 %cmp, label %if.then, label %if.end, !dbg !9500

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9501
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9502
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9501
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8467, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9503
  br label %if.end, !dbg !9504

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9505
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9507
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9507
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9508
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9509

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9510
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9510
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9510
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9510
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9510
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9510
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8469, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9510
  store i32 0, i32* %retval, align 4, !dbg !9510
  br label %return, !dbg !9510

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !9512
  %width7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %raise_info, i32 0, i32 0, !dbg !9513
  store i64 %8, i64* %width7, align 8, !dbg !9514
  %9 = load i64, i64* %height.addr, align 8, !dbg !9515
  %height8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %raise_info, i32 0, i32 1, !dbg !9516
  store i64 %9, i64* %height8, align 8, !dbg !9517
  %10 = load i64, i64* %x.addr, align 8, !dbg !9518
  %x9 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %raise_info, i32 0, i32 2, !dbg !9519
  store i64 %10, i64* %x9, align 8, !dbg !9520
  %11 = load i64, i64* %y.addr, align 8, !dbg !9521
  %y10 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %raise_info, i32 0, i32 3, !dbg !9522
  store i64 %11, i64* %y10, align 8, !dbg !9523
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9524
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !9525
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !9525
  %14 = load i32, i32* %raise.addr, align 4, !dbg !9526
  %call12 = call i32 @RaiseImage(%struct._Image* %13, %struct._RectangleInfo* %raise_info, i32 %14), !dbg !9527
  store i32 %call12, i32* %status, align 4, !dbg !9528
  %15 = load i32, i32* %status, align 4, !dbg !9529
  %cmp13 = icmp eq i32 %15, 0, !dbg !9531
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !9532

if.then14:                                        ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9533
  %exception15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !9534
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception15, align 8, !dbg !9534
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9535
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !9536
  %19 = load %struct._Image*, %struct._Image** %images16, align 8, !dbg !9536
  %exception17 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !9537
  call void @InheritException(%struct._ExceptionInfo* %17, %struct._ExceptionInfo* %exception17), !dbg !9538
  br label %if.end18, !dbg !9538

if.end18:                                         ; preds = %if.then14, %if.end6
  %20 = load i32, i32* %status, align 4, !dbg !9539
  store i32 %20, i32* %retval, align 4, !dbg !9540
  br label %return, !dbg !9540

return:                                           ; preds = %if.end18, %if.then2
  %21 = load i32, i32* %retval, align 4, !dbg !9541
  ret i32 %21, !dbg !9541
}

declare dso_local i32 @RaiseImage(%struct._Image*, %struct._RectangleInfo*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRandomThresholdImage(%struct._MagickWand* %wand, double %low, double %high) #0 !dbg !9542 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %low.addr = alloca double, align 8
  %high.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  store double %low, double* %low.addr, align 8
  call void @llvm.dbg.declare(metadata double* %low.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  store double %high, double* %high.addr, align 8
  call void @llvm.dbg.declare(metadata double* %high.addr, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9549, metadata !DIExpression()), !dbg !9550
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9551
  %1 = load double, double* %low.addr, align 8, !dbg !9552
  %2 = load double, double* %high.addr, align 8, !dbg !9553
  %call = call i32 @MagickRandomThresholdImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !9554
  store i32 %call, i32* %status, align 4, !dbg !9555
  %3 = load i32, i32* %status, align 4, !dbg !9556
  ret i32 %3, !dbg !9557
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRandomThresholdImageChannel(%struct._MagickWand* %wand, i32 %channel, double %low, double %high) #0 !dbg !9558 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %low.addr = alloca double, align 8
  %high.addr = alloca double, align 8
  %threshold = alloca [4096 x i8], align 16
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9559, metadata !DIExpression()), !dbg !9560
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9561, metadata !DIExpression()), !dbg !9562
  store double %low, double* %low.addr, align 8
  call void @llvm.dbg.declare(metadata double* %low.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store double %high, double* %high.addr, align 8
  call void @llvm.dbg.declare(metadata double* %high.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.declare(metadata [4096 x i8]* %threshold, metadata !9567, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9569, metadata !DIExpression()), !dbg !9570
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9571
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9573
  %1 = load i32, i32* %debug, align 8, !dbg !9573
  %cmp = icmp ne i32 %1, 0, !dbg !9574
  br i1 %cmp, label %if.then, label %if.end, !dbg !9575

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9576
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9577
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9576
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8535, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9578
  br label %if.end, !dbg !9579

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9580
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9582
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9582
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9583
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9584

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9585
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9585
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9585
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9585
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9585
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9585
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8537, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9585
  store i32 0, i32* %retval, align 4, !dbg !9585
  br label %return, !dbg !9585

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %threshold, i64 0, i64 0, !dbg !9587
  %8 = load double, double* %low.addr, align 8, !dbg !9588
  %9 = load double, double* %high.addr, align 8, !dbg !9589
  %call8 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay7, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), double %8, double %9), !dbg !9590
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9591
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !9592
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !9592
  %12 = load i32, i32* %channel.addr, align 4, !dbg !9593
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %threshold, i64 0, i64 0, !dbg !9594
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9595
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !9596
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !9596
  %call12 = call i32 @RandomThresholdImageChannel(%struct._Image* %11, i32 %12, i8* %arraydecay10, %struct._ExceptionInfo* %14), !dbg !9597
  store i32 %call12, i32* %status, align 4, !dbg !9598
  %15 = load i32, i32* %status, align 4, !dbg !9599
  %cmp13 = icmp eq i32 %15, 0, !dbg !9601
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !9602

if.then14:                                        ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9603
  %exception15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !9604
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception15, align 8, !dbg !9604
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9605
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !9606
  %19 = load %struct._Image*, %struct._Image** %images16, align 8, !dbg !9606
  %exception17 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !9607
  call void @InheritException(%struct._ExceptionInfo* %17, %struct._ExceptionInfo* %exception17), !dbg !9608
  br label %if.end18, !dbg !9608

if.end18:                                         ; preds = %if.then14, %if.end6
  %20 = load i32, i32* %status, align 4, !dbg !9609
  store i32 %20, i32* %retval, align 4, !dbg !9610
  br label %return, !dbg !9610

return:                                           ; preds = %if.end18, %if.then2
  %21 = load i32, i32* %retval, align 4, !dbg !9611
  ret i32 %21, !dbg !9611
}

declare dso_local i32 @RandomThresholdImageChannel(%struct._Image*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickReadImage(%struct._MagickWand* %wand, i8* %filename) #0 !dbg !9612 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %filename.addr = alloca i8*, align 8
  %images = alloca %struct._Image*, align 8
  %read_info = alloca %struct._ImageInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9613, metadata !DIExpression()), !dbg !9614
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !9615, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !9617, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %read_info, metadata !9619, metadata !DIExpression()), !dbg !9620
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9621
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9623
  %1 = load i32, i32* %debug, align 8, !dbg !9623
  %cmp = icmp ne i32 %1, 0, !dbg !9624
  br i1 %cmp, label %if.then, label %if.end, !dbg !9625

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9626
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9627
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9626
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8586, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9628
  br label %if.end, !dbg !9629

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9630
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !9631
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9631
  %call1 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %4), !dbg !9632
  store %struct._ImageInfo* %call1, %struct._ImageInfo** %read_info, align 8, !dbg !9633
  %5 = load i8*, i8** %filename.addr, align 8, !dbg !9634
  %cmp2 = icmp ne i8* %5, null, !dbg !9636
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !9637

if.then3:                                         ; preds = %if.end
  %6 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9638
  %filename4 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %6, i32 0, i32 51, !dbg !9639
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename4, i64 0, i64 0, !dbg !9638
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !9640
  %call6 = call i64 @CopyMagickString(i8* %arraydecay5, i8* %7, i64 4096), !dbg !9641
  br label %if.end7, !dbg !9642

if.end7:                                          ; preds = %if.then3, %if.end
  %8 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9643
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9644
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 2, !dbg !9645
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9645
  %call8 = call %struct._Image* @ReadImage(%struct._ImageInfo* %8, %struct._ExceptionInfo* %10), !dbg !9646
  store %struct._Image* %call8, %struct._Image** %images, align 8, !dbg !9647
  %11 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9648
  %call9 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %11), !dbg !9649
  store %struct._ImageInfo* %call9, %struct._ImageInfo** %read_info, align 8, !dbg !9650
  %12 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9651
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !9653
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9654

if.then11:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !9655
  br label %return, !dbg !9655

if.end12:                                         ; preds = %if.end7
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9656
  %14 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9657
  %call13 = call i32 @InsertImageInWand(%struct._MagickWand* %13, %struct._Image* %14), !dbg !9658
  store i32 %call13, i32* %retval, align 4, !dbg !9659
  br label %return, !dbg !9659

return:                                           ; preds = %if.end12, %if.then11
  %15 = load i32, i32* %retval, align 4, !dbg !9660
  ret i32 %15, !dbg !9660
}

declare dso_local %struct._Image* @ReadImage(%struct._ImageInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickReadImageBlob(%struct._MagickWand* %wand, i8* %blob, i64 %length) #0 !dbg !9661 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %blob.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %images = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  store i8* %blob, i8** %blob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %blob.addr, metadata !9664, metadata !DIExpression()), !dbg !9665
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !9666, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !9668, metadata !DIExpression()), !dbg !9669
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9670
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9672
  %1 = load i32, i32* %debug, align 8, !dbg !9672
  %cmp = icmp ne i32 %1, 0, !dbg !9673
  br i1 %cmp, label %if.then, label %if.end, !dbg !9674

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9675
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9676
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9675
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9677
  br label %if.end, !dbg !9678

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9679
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !9680
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9680
  %5 = load i8*, i8** %blob.addr, align 8, !dbg !9681
  %6 = load i64, i64* %length.addr, align 8, !dbg !9682
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9683
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !9684
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9684
  %call1 = call %struct._Image* @BlobToImage(%struct._ImageInfo* %4, i8* %5, i64 %6, %struct._ExceptionInfo* %8), !dbg !9685
  store %struct._Image* %call1, %struct._Image** %images, align 8, !dbg !9686
  %9 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9687
  %cmp2 = icmp eq %struct._Image* %9, null, !dbg !9689
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9690

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9691
  br label %return, !dbg !9691

if.end4:                                          ; preds = %if.end
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9692
  %11 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9693
  %call5 = call i32 @InsertImageInWand(%struct._MagickWand* %10, %struct._Image* %11), !dbg !9694
  store i32 %call5, i32* %retval, align 4, !dbg !9695
  br label %return, !dbg !9695

return:                                           ; preds = %if.end4, %if.then3
  %12 = load i32, i32* %retval, align 4, !dbg !9696
  ret i32 %12, !dbg !9696
}

declare dso_local %struct._Image* @BlobToImage(%struct._ImageInfo*, i8*, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickReadImageFile(%struct._MagickWand* %wand, %struct._IO_FILE* %file) #0 !dbg !9697 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %images = alloca %struct._Image*, align 8
  %read_info = alloca %struct._ImageInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !9700, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %read_info, metadata !9704, metadata !DIExpression()), !dbg !9705
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9706
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9708
  %1 = load i32, i32* %debug, align 8, !dbg !9708
  %cmp = icmp ne i32 %1, 0, !dbg !9709
  br i1 %cmp, label %if.then, label %if.end, !dbg !9710

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9711
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9712
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9711
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8677, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9713
  br label %if.end, !dbg !9714

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9715
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 3, !dbg !9716
  %4 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9716
  %call1 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %4), !dbg !9717
  store %struct._ImageInfo* %call1, %struct._ImageInfo** %read_info, align 8, !dbg !9718
  %5 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9719
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9720
  call void @SetImageInfoFile(%struct._ImageInfo* %5, %struct._IO_FILE* %6), !dbg !9721
  %7 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9722
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9723
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !9724
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9724
  %call2 = call %struct._Image* @ReadImage(%struct._ImageInfo* %7, %struct._ExceptionInfo* %9), !dbg !9725
  store %struct._Image* %call2, %struct._Image** %images, align 8, !dbg !9726
  %10 = load %struct._ImageInfo*, %struct._ImageInfo** %read_info, align 8, !dbg !9727
  %call3 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %10), !dbg !9728
  store %struct._ImageInfo* %call3, %struct._ImageInfo** %read_info, align 8, !dbg !9729
  %11 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9730
  %cmp4 = icmp eq %struct._Image* %11, null, !dbg !9732
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9733

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9734
  br label %return, !dbg !9734

if.end6:                                          ; preds = %if.end
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9735
  %13 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9736
  %call7 = call i32 @InsertImageInWand(%struct._MagickWand* %12, %struct._Image* %13), !dbg !9737
  store i32 %call7, i32* %retval, align 4, !dbg !9738
  br label %return, !dbg !9738

return:                                           ; preds = %if.end6, %if.then5
  %14 = load i32, i32* %retval, align 4, !dbg !9739
  ret i32 %14, !dbg !9739
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRemapImage(%struct._MagickWand* %wand, %struct._MagickWand* %remap_wand, i32 %method) #0 !dbg !9740 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %remap_wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %quantize_info = alloca %struct._QuantizeInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store %struct._MagickWand* %remap_wand, %struct._MagickWand** %remap_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %remap_wand.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9750, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info, metadata !9752, metadata !DIExpression()), !dbg !9753
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9754
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9756
  %1 = load i32, i32* %debug, align 8, !dbg !9756
  %cmp = icmp ne i32 %1, 0, !dbg !9757
  br i1 %cmp, label %if.then, label %if.end, !dbg !9758

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9759
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9760
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9759
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8728, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9761
  br label %if.end, !dbg !9762

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9763
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9765
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9765
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9766
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !9767

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %remap_wand.addr, align 8, !dbg !9768
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !9769
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !9769
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !9770
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !9771

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9772
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !9772
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9772
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9772
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !9772
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !9772
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8731, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !9772
  store i32 0, i32* %retval, align 4, !dbg !9772
  br label %return, !dbg !9772

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9774
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 3, !dbg !9775
  %11 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !9775
  %call9 = call %struct._QuantizeInfo* @AcquireQuantizeInfo(%struct._ImageInfo* %11), !dbg !9776
  store %struct._QuantizeInfo* %call9, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9777
  %12 = load i32, i32* %method.addr, align 4, !dbg !9778
  %13 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9779
  %dither_method = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %13, i32 0, i32 6, !dbg !9780
  store i32 %12, i32* %dither_method, align 8, !dbg !9781
  %14 = load i32, i32* %method.addr, align 4, !dbg !9782
  %cmp10 = icmp eq i32 %14, 1, !dbg !9784
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9785

if.then11:                                        ; preds = %if.end8
  %15 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9786
  %dither = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %15, i32 0, i32 2, !dbg !9787
  store i32 0, i32* %dither, align 8, !dbg !9788
  br label %if.end12, !dbg !9786

if.end12:                                         ; preds = %if.then11, %if.end8
  %16 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9789
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9790
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !9791
  %18 = load %struct._Image*, %struct._Image** %images13, align 8, !dbg !9791
  %19 = load %struct._MagickWand*, %struct._MagickWand** %remap_wand.addr, align 8, !dbg !9792
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !9793
  %20 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !9793
  %call15 = call i32 @RemapImage(%struct._QuantizeInfo* %16, %struct._Image* %18, %struct._Image* %20), !dbg !9794
  store i32 %call15, i32* %status, align 4, !dbg !9795
  %21 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9796
  %call16 = call %struct._QuantizeInfo* @DestroyQuantizeInfo(%struct._QuantizeInfo* %21), !dbg !9797
  store %struct._QuantizeInfo* %call16, %struct._QuantizeInfo** %quantize_info, align 8, !dbg !9798
  %22 = load i32, i32* %status, align 4, !dbg !9799
  %cmp17 = icmp eq i32 %22, 0, !dbg !9801
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !9802

if.then18:                                        ; preds = %if.end12
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9803
  %exception19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %23, i32 0, i32 2, !dbg !9804
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception19, align 8, !dbg !9804
  %25 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9805
  %images20 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %25, i32 0, i32 5, !dbg !9806
  %26 = load %struct._Image*, %struct._Image** %images20, align 8, !dbg !9806
  %exception21 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !9807
  call void @InheritException(%struct._ExceptionInfo* %24, %struct._ExceptionInfo* %exception21), !dbg !9808
  br label %if.end22, !dbg !9808

if.end22:                                         ; preds = %if.then18, %if.end12
  %27 = load i32, i32* %status, align 4, !dbg !9809
  store i32 %27, i32* %retval, align 4, !dbg !9810
  br label %return, !dbg !9810

return:                                           ; preds = %if.end22, %if.then4
  %28 = load i32, i32* %retval, align 4, !dbg !9811
  ret i32 %28, !dbg !9811
}

declare dso_local %struct._QuantizeInfo* @AcquireQuantizeInfo(%struct._ImageInfo*) #2

declare dso_local i32 @RemapImage(%struct._QuantizeInfo*, %struct._Image*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRemoveImage(%struct._MagickWand* %wand) #0 !dbg !9812 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9815
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9817
  %1 = load i32, i32* %debug, align 8, !dbg !9817
  %cmp = icmp ne i32 %1, 0, !dbg !9818
  br i1 %cmp, label %if.then, label %if.end, !dbg !9819

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9820
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9821
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9820
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8772, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9822
  br label %if.end, !dbg !9823

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9824
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9826
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9826
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9827
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9828

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9829
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9829
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9829
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9829
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9829
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9829
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8774, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9829
  store i32 0, i32* %retval, align 4, !dbg !9829
  br label %return, !dbg !9829

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9831
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !9832
  call void @DeleteImageFromList(%struct._Image** %images7), !dbg !9833
  store i32 1, i32* %retval, align 4, !dbg !9834
  br label %return, !dbg !9834

return:                                           ; preds = %if.end6, %if.then2
  %9 = load i32, i32* %retval, align 4, !dbg !9835
  ret i32 %9, !dbg !9835
}

declare dso_local void @DeleteImageFromList(%struct._Image**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickResampleImage(%struct._MagickWand* %wand, double %x_resolution, double %y_resolution, i32 %filter, double %blur) #0 !dbg !9836 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x_resolution.addr = alloca double, align 8
  %y_resolution.addr = alloca double, align 8
  %filter.addr = alloca i32, align 4
  %blur.addr = alloca double, align 8
  %resample_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  store double %x_resolution, double* %x_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_resolution.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store double %y_resolution, double* %y_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y_resolution.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  store double %blur, double* %blur.addr, align 8
  call void @llvm.dbg.declare(metadata double* %blur.addr, metadata !9848, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.declare(metadata %struct._Image** %resample_image, metadata !9850, metadata !DIExpression()), !dbg !9851
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9852
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9854
  %1 = load i32, i32* %debug, align 8, !dbg !9854
  %cmp = icmp ne i32 %1, 0, !dbg !9855
  br i1 %cmp, label %if.then, label %if.end, !dbg !9856

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9857
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9858
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9857
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8831, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9859
  br label %if.end, !dbg !9860

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9861
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9863
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9863
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9864
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9865

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9866
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9866
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9866
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9866
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9866
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9866
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8833, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9866
  store i32 0, i32* %retval, align 4, !dbg !9866
  br label %return, !dbg !9866

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9868
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !9869
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !9869
  %10 = load double, double* %x_resolution.addr, align 8, !dbg !9870
  %11 = load double, double* %y_resolution.addr, align 8, !dbg !9871
  %12 = load i32, i32* %filter.addr, align 4, !dbg !9872
  %13 = load double, double* %blur.addr, align 8, !dbg !9873
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9874
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !9875
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !9875
  %call9 = call %struct._Image* @ResampleImage(%struct._Image* %9, double %10, double %11, i32 %12, double %13, %struct._ExceptionInfo* %15), !dbg !9876
  store %struct._Image* %call9, %struct._Image** %resample_image, align 8, !dbg !9877
  %16 = load %struct._Image*, %struct._Image** %resample_image, align 8, !dbg !9878
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !9880
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9881

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !9882
  br label %return, !dbg !9882

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9883
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !9884
  %18 = load %struct._Image*, %struct._Image** %resample_image, align 8, !dbg !9885
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !9886
  store i32 1, i32* %retval, align 4, !dbg !9887
  br label %return, !dbg !9887

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !9888
  ret i32 %19, !dbg !9888
}

declare dso_local %struct._Image* @ResampleImage(%struct._Image*, double, double, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickResetImagePage(%struct._MagickWand* %wand, i8* %page) #0 !dbg !9889 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %page.addr = alloca i8*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store i8* %page, i8** %page.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %page.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9894
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9896
  %1 = load i32, i32* %debug, align 8, !dbg !9896
  %cmp = icmp ne i32 %1, 0, !dbg !9897
  br i1 %cmp, label %if.then, label %if.end, !dbg !9898

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9899
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9900
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9899
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8873, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9901
  br label %if.end, !dbg !9902

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9903
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9905
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9905
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9906
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9907

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9908
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9908
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9908
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9908
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9908
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9908
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8875, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9908
  store i32 0, i32* %retval, align 4, !dbg !9908
  br label %return, !dbg !9908

if.end6:                                          ; preds = %if.end
  %8 = load i8*, i8** %page.addr, align 8, !dbg !9910
  %cmp7 = icmp eq i8* %8, null, !dbg !9912
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !9913

lor.lhs.false:                                    ; preds = %if.end6
  %9 = load i8*, i8** %page.addr, align 8, !dbg !9914
  %10 = load i8, i8* %9, align 1, !dbg !9915
  %conv = sext i8 %10 to i32, !dbg !9915
  %cmp8 = icmp eq i32 %conv, 0, !dbg !9916
  br i1 %cmp8, label %if.then10, label %if.end14, !dbg !9917

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9918
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !9920
  %12 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !9920
  %page12 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 26, !dbg !9921
  %call13 = call i32 @ParseAbsoluteGeometry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), %struct._RectangleInfo* %page12), !dbg !9922
  store i32 1, i32* %retval, align 4, !dbg !9923
  br label %return, !dbg !9923

if.end14:                                         ; preds = %lor.lhs.false
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9924
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !9925
  %14 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !9925
  %15 = load i8*, i8** %page.addr, align 8, !dbg !9926
  %call16 = call i32 @ResetImagePage(%struct._Image* %14, i8* %15), !dbg !9927
  store i32 %call16, i32* %retval, align 4, !dbg !9928
  br label %return, !dbg !9928

return:                                           ; preds = %if.end14, %if.then10, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !9929
  ret i32 %16, !dbg !9929
}

declare dso_local i32 @ParseAbsoluteGeometry(i8*, %struct._RectangleInfo*) #2

declare dso_local i32 @ResetImagePage(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickResizeImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows, i32 %filter, double %blur) #0 !dbg !9930 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %filter.addr = alloca i32, align 4
  %blur.addr = alloca double, align 8
  %resize_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9933, metadata !DIExpression()), !dbg !9934
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !9935, metadata !DIExpression()), !dbg !9936
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !9937, metadata !DIExpression()), !dbg !9938
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !9939, metadata !DIExpression()), !dbg !9940
  store double %blur, double* %blur.addr, align 8
  call void @llvm.dbg.declare(metadata double* %blur.addr, metadata !9941, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.declare(metadata %struct._Image** %resize_image, metadata !9943, metadata !DIExpression()), !dbg !9944
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9945
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9947
  %1 = load i32, i32* %debug, align 8, !dbg !9947
  %cmp = icmp ne i32 %1, 0, !dbg !9948
  br i1 %cmp, label %if.then, label %if.end, !dbg !9949

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9950
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9951
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9950
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8937, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9952
  br label %if.end, !dbg !9953

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9954
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !9956
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !9956
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !9957
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !9958

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9959
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !9959
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9959
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9959
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !9959
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !9959
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8939, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !9959
  store i32 0, i32* %retval, align 4, !dbg !9959
  br label %return, !dbg !9959

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9961
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !9962
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !9962
  %10 = load i64, i64* %columns.addr, align 8, !dbg !9963
  %11 = load i64, i64* %rows.addr, align 8, !dbg !9964
  %12 = load i32, i32* %filter.addr, align 4, !dbg !9965
  %13 = load double, double* %blur.addr, align 8, !dbg !9966
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9967
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !9968
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !9968
  %call9 = call %struct._Image* @ResizeImage(%struct._Image* %9, i64 %10, i64 %11, i32 %12, double %13, %struct._ExceptionInfo* %15), !dbg !9969
  store %struct._Image* %call9, %struct._Image** %resize_image, align 8, !dbg !9970
  %16 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !9971
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !9973
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9974

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !9975
  br label %return, !dbg !9975

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9976
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !9977
  %18 = load %struct._Image*, %struct._Image** %resize_image, align 8, !dbg !9978
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !9979
  store i32 1, i32* %retval, align 4, !dbg !9980
  br label %return, !dbg !9980

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !9981
  ret i32 %19, !dbg !9981
}

declare dso_local %struct._Image* @ResizeImage(%struct._Image*, i64, i64, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRollImage(%struct._MagickWand* %wand, i64 %x, i64 %y) #0 !dbg !9982 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %roll_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata %struct._Image** %roll_image, metadata !9991, metadata !DIExpression()), !dbg !9992
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9993
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !9995
  %1 = load i32, i32* %debug, align 8, !dbg !9995
  %cmp = icmp ne i32 %1, 0, !dbg !9996
  br i1 %cmp, label %if.then, label %if.end, !dbg !9997

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !9998
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !9999
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !9998
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8984, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10000
  br label %if.end, !dbg !10001

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10002
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10004
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10004
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10005
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10006

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10007
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10007
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10007
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10007
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10007
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10007
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 8986, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10007
  store i32 0, i32* %retval, align 4, !dbg !10007
  br label %return, !dbg !10007

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10009
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10010
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10010
  %10 = load i64, i64* %x.addr, align 8, !dbg !10011
  %11 = load i64, i64* %y.addr, align 8, !dbg !10012
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10013
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !10014
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !10014
  %call9 = call %struct._Image* @RollImage(%struct._Image* %9, i64 %10, i64 %11, %struct._ExceptionInfo* %13), !dbg !10015
  store %struct._Image* %call9, %struct._Image** %roll_image, align 8, !dbg !10016
  %14 = load %struct._Image*, %struct._Image** %roll_image, align 8, !dbg !10017
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !10019
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10020

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10021
  br label %return, !dbg !10021

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10022
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !10023
  %16 = load %struct._Image*, %struct._Image** %roll_image, align 8, !dbg !10024
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !10025
  store i32 1, i32* %retval, align 4, !dbg !10026
  br label %return, !dbg !10026

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !10027
  ret i32 %17, !dbg !10027
}

declare dso_local %struct._Image* @RollImage(%struct._Image*, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRotateImage(%struct._MagickWand* %wand, %struct._PixelWand* %background, double %degrees) #0 !dbg !10028 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %background.addr = alloca %struct._PixelWand*, align 8
  %degrees.addr = alloca double, align 8
  %rotate_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10031, metadata !DIExpression()), !dbg !10032
  store %struct._PixelWand* %background, %struct._PixelWand** %background.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %background.addr, metadata !10033, metadata !DIExpression()), !dbg !10034
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !10035, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.declare(metadata %struct._Image** %rotate_image, metadata !10037, metadata !DIExpression()), !dbg !10038
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10039
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10041
  %1 = load i32, i32* %debug, align 8, !dbg !10041
  %cmp = icmp ne i32 %1, 0, !dbg !10042
  br i1 %cmp, label %if.then, label %if.end, !dbg !10043

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10044
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10045
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10044
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9033, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10046
  br label %if.end, !dbg !10047

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10048
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10050
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10050
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10051
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10052

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10053
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10053
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10053
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10053
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10053
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10053
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9035, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10053
  store i32 0, i32* %retval, align 4, !dbg !10053
  br label %return, !dbg !10053

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %background.addr, align 8, !dbg !10055
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10056
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10057
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10057
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 12, !dbg !10058
  call void @PixelGetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %background_color), !dbg !10059
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10060
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !10061
  %12 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !10061
  %13 = load double, double* %degrees.addr, align 8, !dbg !10062
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10063
  %exception9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !10064
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !10064
  %call10 = call %struct._Image* @RotateImage(%struct._Image* %12, double %13, %struct._ExceptionInfo* %15), !dbg !10065
  store %struct._Image* %call10, %struct._Image** %rotate_image, align 8, !dbg !10066
  %16 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !10067
  %cmp11 = icmp eq %struct._Image* %16, null, !dbg !10069
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !10070

if.then12:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10071
  br label %return, !dbg !10071

if.end13:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10072
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !10073
  %18 = load %struct._Image*, %struct._Image** %rotate_image, align 8, !dbg !10074
  call void @ReplaceImageInList(%struct._Image** %images14, %struct._Image* %18), !dbg !10075
  store i32 1, i32* %retval, align 4, !dbg !10076
  br label %return, !dbg !10076

return:                                           ; preds = %if.end13, %if.then12, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !10077
  ret i32 %19, !dbg !10077
}

declare dso_local %struct._Image* @RotateImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRotationalBlurImage(%struct._MagickWand* %wand, double %angle) #0 !dbg !10078 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %angle.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10079, metadata !DIExpression()), !dbg !10080
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !10081, metadata !DIExpression()), !dbg !10082
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10083, metadata !DIExpression()), !dbg !10084
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10085
  %1 = load double, double* %angle.addr, align 8, !dbg !10086
  %call = call i32 @MagickRotationalBlurImageChannel(%struct._MagickWand* %0, i32 134217719, double %1), !dbg !10087
  store i32 %call, i32* %status, align 4, !dbg !10088
  %2 = load i32, i32* %status, align 4, !dbg !10089
  ret i32 %2, !dbg !10090
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickRotationalBlurImageChannel(%struct._MagickWand* %wand, i32 %channel, double %angle) #0 !dbg !10091 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %angle.addr = alloca double, align 8
  %blur_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !10098, metadata !DIExpression()), !dbg !10099
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10100
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10102
  %1 = load i32, i32* %debug, align 8, !dbg !10102
  %cmp = icmp ne i32 %1, 0, !dbg !10103
  br i1 %cmp, label %if.then, label %if.end, !dbg !10104

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10105
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10106
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10105
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9092, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10107
  br label %if.end, !dbg !10108

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10109
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10111
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10111
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10112
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10113

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10114
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10114
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10114
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10114
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10114
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10114
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9094, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10114
  store i32 0, i32* %retval, align 4, !dbg !10114
  br label %return, !dbg !10114

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10116
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10117
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10117
  %10 = load i32, i32* %channel.addr, align 4, !dbg !10118
  %11 = load double, double* %angle.addr, align 8, !dbg !10119
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10120
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !10121
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !10121
  %call9 = call %struct._Image* @RotationalBlurImageChannel(%struct._Image* %9, i32 %10, double %11, %struct._ExceptionInfo* %13), !dbg !10122
  store %struct._Image* %call9, %struct._Image** %blur_image, align 8, !dbg !10123
  %14 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10124
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !10126
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10127

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10128
  br label %return, !dbg !10128

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10129
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !10130
  %16 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10131
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !10132
  store i32 1, i32* %retval, align 4, !dbg !10133
  br label %return, !dbg !10133

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !10134
  ret i32 %17, !dbg !10134
}

declare dso_local %struct._Image* @RotationalBlurImageChannel(%struct._Image*, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSampleImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows) #0 !dbg !10135 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %sample_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10136, metadata !DIExpression()), !dbg !10137
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !10138, metadata !DIExpression()), !dbg !10139
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !10140, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.declare(metadata %struct._Image** %sample_image, metadata !10142, metadata !DIExpression()), !dbg !10143
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10144
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10146
  %1 = load i32, i32* %debug, align 8, !dbg !10146
  %cmp = icmp ne i32 %1, 0, !dbg !10147
  br i1 %cmp, label %if.then, label %if.end, !dbg !10148

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10149
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10150
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10149
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10151
  br label %if.end, !dbg !10152

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10153
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10155
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10155
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10156
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10157

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10158
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10158
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10158
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10158
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10158
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10158
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9143, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10158
  store i32 0, i32* %retval, align 4, !dbg !10158
  br label %return, !dbg !10158

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10160
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10161
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10161
  %10 = load i64, i64* %columns.addr, align 8, !dbg !10162
  %11 = load i64, i64* %rows.addr, align 8, !dbg !10163
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10164
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !10165
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !10165
  %call9 = call %struct._Image* @SampleImage(%struct._Image* %9, i64 %10, i64 %11, %struct._ExceptionInfo* %13), !dbg !10166
  store %struct._Image* %call9, %struct._Image** %sample_image, align 8, !dbg !10167
  %14 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !10168
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !10170
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10171

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10172
  br label %return, !dbg !10172

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10173
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !10174
  %16 = load %struct._Image*, %struct._Image** %sample_image, align 8, !dbg !10175
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !10176
  store i32 1, i32* %retval, align 4, !dbg !10177
  br label %return, !dbg !10177

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !10178
  ret i32 %17, !dbg !10178
}

declare dso_local %struct._Image* @SampleImage(%struct._Image*, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickScaleImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows) #0 !dbg !10179 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %scale_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10180, metadata !DIExpression()), !dbg !10181
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !10182, metadata !DIExpression()), !dbg !10183
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !10184, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata %struct._Image** %scale_image, metadata !10186, metadata !DIExpression()), !dbg !10187
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10188
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10190
  %1 = load i32, i32* %debug, align 8, !dbg !10190
  %cmp = icmp ne i32 %1, 0, !dbg !10191
  br i1 %cmp, label %if.then, label %if.end, !dbg !10192

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10193
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10194
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10193
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9187, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10195
  br label %if.end, !dbg !10196

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10197
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10199
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10199
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10200
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10201

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10202
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10202
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10202
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10202
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10202
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10202
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9189, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10202
  store i32 0, i32* %retval, align 4, !dbg !10202
  br label %return, !dbg !10202

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10204
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10205
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10205
  %10 = load i64, i64* %columns.addr, align 8, !dbg !10206
  %11 = load i64, i64* %rows.addr, align 8, !dbg !10207
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10208
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !10209
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !10209
  %call9 = call %struct._Image* @ScaleImage(%struct._Image* %9, i64 %10, i64 %11, %struct._ExceptionInfo* %13), !dbg !10210
  store %struct._Image* %call9, %struct._Image** %scale_image, align 8, !dbg !10211
  %14 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !10212
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !10214
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10215

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10216
  br label %return, !dbg !10216

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10217
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !10218
  %16 = load %struct._Image*, %struct._Image** %scale_image, align 8, !dbg !10219
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !10220
  store i32 1, i32* %retval, align 4, !dbg !10221
  br label %return, !dbg !10221

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !10222
  ret i32 %17, !dbg !10222
}

declare dso_local %struct._Image* @ScaleImage(%struct._Image*, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSegmentImage(%struct._MagickWand* %wand, i32 %colorspace, i32 %verbose, double %cluster_threshold, double %smooth_threshold) #0 !dbg !10223 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %colorspace.addr = alloca i32, align 4
  %verbose.addr = alloca i32, align 4
  %cluster_threshold.addr = alloca double, align 8
  %smooth_threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  store double %cluster_threshold, double* %cluster_threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %cluster_threshold.addr, metadata !10232, metadata !DIExpression()), !dbg !10233
  store double %smooth_threshold, double* %smooth_threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %smooth_threshold.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10236, metadata !DIExpression()), !dbg !10237
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10238
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10240
  %1 = load i32, i32* %debug, align 8, !dbg !10240
  %cmp = icmp ne i32 %1, 0, !dbg !10241
  br i1 %cmp, label %if.then, label %if.end, !dbg !10242

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10243
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10244
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10243
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9246, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10245
  br label %if.end, !dbg !10246

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10247
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10249
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10249
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10250
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10251

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10252
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10252
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10252
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10252
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10252
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10252
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9248, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10252
  store i32 0, i32* %retval, align 4, !dbg !10252
  br label %return, !dbg !10252

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10254
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10255
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10255
  %10 = load i32, i32* %colorspace.addr, align 4, !dbg !10256
  %11 = load i32, i32* %verbose.addr, align 4, !dbg !10257
  %12 = load double, double* %cluster_threshold.addr, align 8, !dbg !10258
  %13 = load double, double* %smooth_threshold.addr, align 8, !dbg !10259
  %call8 = call i32 @SegmentImage(%struct._Image* %9, i32 %10, i32 %11, double %12, double %13), !dbg !10260
  store i32 %call8, i32* %status, align 4, !dbg !10261
  %14 = load i32, i32* %status, align 4, !dbg !10262
  %cmp9 = icmp eq i32 %14, 0, !dbg !10264
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !10265

if.then10:                                        ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10266
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !10267
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !10267
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10268
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !10269
  %18 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !10269
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !10270
  call void @InheritException(%struct._ExceptionInfo* %16, %struct._ExceptionInfo* %exception13), !dbg !10271
  br label %if.end14, !dbg !10271

if.end14:                                         ; preds = %if.then10, %if.end6
  %19 = load i32, i32* %status, align 4, !dbg !10272
  store i32 %19, i32* %retval, align 4, !dbg !10273
  br label %return, !dbg !10273

return:                                           ; preds = %if.end14, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !10274
  ret i32 %20, !dbg !10274
}

declare dso_local i32 @SegmentImage(%struct._Image*, i32, i32, double, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSelectiveBlurImage(%struct._MagickWand* %wand, double %radius, double %sigma, double %threshold) #0 !dbg !10275 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10284, metadata !DIExpression()), !dbg !10285
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10286
  %1 = load double, double* %radius.addr, align 8, !dbg !10287
  %2 = load double, double* %sigma.addr, align 8, !dbg !10288
  %3 = load double, double* %threshold.addr, align 8, !dbg !10289
  %call = call i32 @MagickSelectiveBlurImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2, double %3), !dbg !10290
  store i32 %call, i32* %status, align 4, !dbg !10291
  %4 = load i32, i32* %status, align 4, !dbg !10292
  ret i32 %4, !dbg !10293
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSelectiveBlurImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma, double %threshold) #0 !dbg !10294 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %threshold.addr = alloca double, align 8
  %blur_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10295, metadata !DIExpression()), !dbg !10296
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10297, metadata !DIExpression()), !dbg !10298
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !10299, metadata !DIExpression()), !dbg !10300
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !10301, metadata !DIExpression()), !dbg !10302
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !10303, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.declare(metadata %struct._Image** %blur_image, metadata !10305, metadata !DIExpression()), !dbg !10306
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10307
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10309
  %1 = load i32, i32* %debug, align 8, !dbg !10309
  %cmp = icmp ne i32 %1, 0, !dbg !10310
  br i1 %cmp, label %if.then, label %if.end, !dbg !10311

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10312
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10313
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10312
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9316, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10314
  br label %if.end, !dbg !10315

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10316
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10318
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10318
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10319
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10320

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10321
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10321
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10321
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10321
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10321
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10321
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9318, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10321
  store i32 0, i32* %retval, align 4, !dbg !10321
  br label %return, !dbg !10321

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10323
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10324
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10324
  %10 = load i32, i32* %channel.addr, align 4, !dbg !10325
  %11 = load double, double* %radius.addr, align 8, !dbg !10326
  %12 = load double, double* %sigma.addr, align 8, !dbg !10327
  %13 = load double, double* %threshold.addr, align 8, !dbg !10328
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10329
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !10330
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !10330
  %call9 = call %struct._Image* @SelectiveBlurImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, double %13, %struct._ExceptionInfo* %15), !dbg !10331
  store %struct._Image* %call9, %struct._Image** %blur_image, align 8, !dbg !10332
  %16 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10333
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !10335
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10336

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10337
  br label %return, !dbg !10337

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10338
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !10339
  %18 = load %struct._Image*, %struct._Image** %blur_image, align 8, !dbg !10340
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !10341
  store i32 1, i32* %retval, align 4, !dbg !10342
  br label %return, !dbg !10342

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !10343
  ret i32 %19, !dbg !10343
}

declare dso_local %struct._Image* @SelectiveBlurImageChannel(%struct._Image*, i32, double, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSeparateImageChannel(%struct._MagickWand* %wand, i32 %channel) #0 !dbg !10344 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10345, metadata !DIExpression()), !dbg !10346
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10349, metadata !DIExpression()), !dbg !10350
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10351
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10353
  %1 = load i32, i32* %debug, align 8, !dbg !10353
  %cmp = icmp ne i32 %1, 0, !dbg !10354
  br i1 %cmp, label %if.then, label %if.end, !dbg !10355

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10356
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10357
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10356
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9363, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10358
  br label %if.end, !dbg !10359

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10360
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10362
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10362
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10363
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10364

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10365
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10365
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10365
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10365
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10365
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10365
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9365, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10365
  store i32 0, i32* %retval, align 4, !dbg !10365
  br label %return, !dbg !10365

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10367
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10368
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10368
  %10 = load i32, i32* %channel.addr, align 4, !dbg !10369
  %call8 = call i32 @SeparateImageChannel(%struct._Image* %9, i32 %10), !dbg !10370
  store i32 %call8, i32* %status, align 4, !dbg !10371
  %11 = load i32, i32* %status, align 4, !dbg !10372
  %cmp9 = icmp eq i32 %11, 0, !dbg !10374
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !10375

if.then10:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10376
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !10377
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !10377
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10378
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !10379
  %15 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !10379
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !10380
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception13), !dbg !10381
  br label %if.end14, !dbg !10381

if.end14:                                         ; preds = %if.then10, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !10382
  store i32 %16, i32* %retval, align 4, !dbg !10383
  br label %return, !dbg !10383

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !10384
  ret i32 %17, !dbg !10384
}

declare dso_local i32 @SeparateImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSepiaToneImage(%struct._MagickWand* %wand, double %threshold) #0 !dbg !10385 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold.addr = alloca double, align 8
  %sepia_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10386, metadata !DIExpression()), !dbg !10387
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.declare(metadata %struct._Image** %sepia_image, metadata !10390, metadata !DIExpression()), !dbg !10391
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10392
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10394
  %1 = load i32, i32* %debug, align 8, !dbg !10394
  %cmp = icmp ne i32 %1, 0, !dbg !10395
  br i1 %cmp, label %if.then, label %if.end, !dbg !10396

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10397
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10398
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10397
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9409, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10399
  br label %if.end, !dbg !10400

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10401
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10403
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10403
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10404
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10405

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10406
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10406
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10406
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10406
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10406
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10406
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9411, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10406
  store i32 0, i32* %retval, align 4, !dbg !10406
  br label %return, !dbg !10406

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10408
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10409
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10409
  %10 = load double, double* %threshold.addr, align 8, !dbg !10410
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10411
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !10412
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !10412
  %call9 = call %struct._Image* @SepiaToneImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !10413
  store %struct._Image* %call9, %struct._Image** %sepia_image, align 8, !dbg !10414
  %13 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !10415
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !10417
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10418

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10419
  br label %return, !dbg !10419

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10420
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !10421
  %15 = load %struct._Image*, %struct._Image** %sepia_image, align 8, !dbg !10422
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !10423
  store i32 1, i32* %retval, align 4, !dbg !10424
  br label %return, !dbg !10424

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !10425
  ret i32 %16, !dbg !10425
}

declare dso_local %struct._Image* @SepiaToneImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImage(%struct._MagickWand* %wand, %struct._MagickWand* %set_wand) #0 !dbg !10426 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %set_wand.addr = alloca %struct._MagickWand*, align 8
  %images = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10427, metadata !DIExpression()), !dbg !10428
  store %struct._MagickWand* %set_wand, %struct._MagickWand** %set_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %set_wand.addr, metadata !10429, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.declare(metadata %struct._Image** %images, metadata !10431, metadata !DIExpression()), !dbg !10432
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10433
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10435
  %1 = load i32, i32* %debug, align 8, !dbg !10435
  %cmp = icmp ne i32 %1, 0, !dbg !10436
  br i1 %cmp, label %if.then, label %if.end, !dbg !10437

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10438
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10439
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10438
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9455, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10440
  br label %if.end, !dbg !10441

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10442
  %debug1 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 8, !dbg !10444
  %4 = load i32, i32* %debug1, align 8, !dbg !10444
  %cmp2 = icmp ne i32 %4, 0, !dbg !10445
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !10446

if.then3:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %set_wand.addr, align 8, !dbg !10447
  %name4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 1, !dbg !10448
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name4, i64 0, i64 0, !dbg !10447
  %call6 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9459, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay5), !dbg !10449
  br label %if.end7, !dbg !10450

if.end7:                                          ; preds = %if.then3, %if.end
  %6 = load %struct._MagickWand*, %struct._MagickWand** %set_wand.addr, align 8, !dbg !10451
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 5, !dbg !10453
  %7 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !10453
  %cmp9 = icmp eq %struct._Image* %7, null, !dbg !10454
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !10455

if.then10:                                        ; preds = %if.end7
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10456
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !10456
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10456
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10456
  %name11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 1, !dbg !10456
  %arraydecay12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name11, i64 0, i64 0, !dbg !10456
  %call13 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9461, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay12), !dbg !10456
  store i32 0, i32* %retval, align 4, !dbg !10456
  br label %return, !dbg !10456

if.end14:                                         ; preds = %if.end7
  %11 = load %struct._MagickWand*, %struct._MagickWand** %set_wand.addr, align 8, !dbg !10458
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !10459
  %12 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !10459
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10460
  %exception16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !10461
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception16, align 8, !dbg !10461
  %call17 = call %struct._Image* @CloneImageList(%struct._Image* %12, %struct._ExceptionInfo* %14), !dbg !10462
  store %struct._Image* %call17, %struct._Image** %images, align 8, !dbg !10463
  %15 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10464
  %cmp18 = icmp eq %struct._Image* %15, null, !dbg !10466
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10467

if.then19:                                        ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !10468
  br label %return, !dbg !10468

if.end20:                                         ; preds = %if.end14
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10469
  %images21 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !10470
  %17 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10471
  call void @ReplaceImageInList(%struct._Image** %images21, %struct._Image* %17), !dbg !10472
  store i32 1, i32* %retval, align 4, !dbg !10473
  br label %return, !dbg !10473

return:                                           ; preds = %if.end20, %if.then19, %if.then10
  %18 = load i32, i32* %retval, align 4, !dbg !10474
  ret i32 %18, !dbg !10474
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageAlphaChannel(%struct._MagickWand* %wand, i32 %alpha_type) #0 !dbg !10475 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %alpha_type.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10480, metadata !DIExpression()), !dbg !10481
  store i32 %alpha_type, i32* %alpha_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alpha_type.addr, metadata !10482, metadata !DIExpression()), !dbg !10483
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10484
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10486
  %1 = load i32, i32* %debug, align 8, !dbg !10486
  %cmp = icmp ne i32 %1, 0, !dbg !10487
  br i1 %cmp, label %if.then, label %if.end, !dbg !10488

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10489
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10490
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10489
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9502, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10491
  br label %if.end, !dbg !10492

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10493
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10495
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10495
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10496
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10497

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10498
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10498
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10498
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10498
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10498
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10498
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9504, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10498
  store i32 0, i32* %retval, align 4, !dbg !10498
  br label %return, !dbg !10498

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10500
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10501
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10501
  %10 = load i32, i32* %alpha_type.addr, align 4, !dbg !10502
  %call8 = call i32 @SetImageAlphaChannel(%struct._Image* %9, i32 %10), !dbg !10503
  store i32 %call8, i32* %retval, align 4, !dbg !10504
  br label %return, !dbg !10504

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10505
  ret i32 %11, !dbg !10505
}

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageBackgroundColor(%struct._MagickWand* %wand, %struct._PixelWand* %background) #0 !dbg !10506 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %background.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10507, metadata !DIExpression()), !dbg !10508
  store %struct._PixelWand* %background, %struct._PixelWand** %background.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %background.addr, metadata !10509, metadata !DIExpression()), !dbg !10510
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10511
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10513
  %1 = load i32, i32* %debug, align 8, !dbg !10513
  %cmp = icmp ne i32 %1, 0, !dbg !10514
  br i1 %cmp, label %if.then, label %if.end, !dbg !10515

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10516
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10517
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10516
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9539, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10518
  br label %if.end, !dbg !10519

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10520
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10522
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10522
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10523
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10524

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10525
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10525
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10525
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10525
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10525
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10525
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9541, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10525
  store i32 0, i32* %retval, align 4, !dbg !10525
  br label %return, !dbg !10525

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %background.addr, align 8, !dbg !10527
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10528
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10529
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10529
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 12, !dbg !10530
  call void @PixelGetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %background_color), !dbg !10531
  store i32 1, i32* %retval, align 4, !dbg !10532
  br label %return, !dbg !10532

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10533
  ret i32 %11, !dbg !10533
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageBias(%struct._MagickWand* %wand, double %bias) #0 !dbg !10534 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %bias.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10535, metadata !DIExpression()), !dbg !10536
  store double %bias, double* %bias.addr, align 8
  call void @llvm.dbg.declare(metadata double* %bias.addr, metadata !10537, metadata !DIExpression()), !dbg !10538
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10539
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10541
  %1 = load i32, i32* %debug, align 8, !dbg !10541
  %cmp = icmp ne i32 %1, 0, !dbg !10542
  br i1 %cmp, label %if.then, label %if.end, !dbg !10543

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10544
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10545
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10544
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9578, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10546
  br label %if.end, !dbg !10547

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10548
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10550
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10550
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10551
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10552

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10553
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10553
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10553
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10553
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10553
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10553
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9580, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10553
  store i32 0, i32* %retval, align 4, !dbg !10553
  br label %return, !dbg !10553

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %bias.addr, align 8, !dbg !10555
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10556
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10557
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10557
  %bias8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 29, !dbg !10558
  store double %8, double* %bias8, align 8, !dbg !10559
  store i32 1, i32* %retval, align 4, !dbg !10560
  br label %return, !dbg !10560

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10561
  ret i32 %11, !dbg !10561
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageBluePrimary(%struct._MagickWand* %wand, double %x, double %y) #0 !dbg !10562 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10563, metadata !DIExpression()), !dbg !10564
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !10565, metadata !DIExpression()), !dbg !10566
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !10567, metadata !DIExpression()), !dbg !10568
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10569
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10571
  %1 = load i32, i32* %debug, align 8, !dbg !10571
  %cmp = icmp ne i32 %1, 0, !dbg !10572
  br i1 %cmp, label %if.then, label %if.end, !dbg !10573

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10574
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10575
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10574
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9618, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10576
  br label %if.end, !dbg !10577

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10578
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10580
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10580
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10581
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10582

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10583
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10583
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10583
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10583
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10583
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10583
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9620, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10583
  store i32 0, i32* %retval, align 4, !dbg !10583
  br label %return, !dbg !10583

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %x.addr, align 8, !dbg !10585
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10586
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10587
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10587
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 16, !dbg !10588
  %blue_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 2, !dbg !10589
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary, i32 0, i32 0, !dbg !10590
  store double %8, double* %x8, align 8, !dbg !10591
  %11 = load double, double* %y.addr, align 8, !dbg !10592
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10593
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !10594
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !10594
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !10595
  %blue_primary11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 2, !dbg !10596
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary11, i32 0, i32 1, !dbg !10597
  store double %11, double* %y12, align 8, !dbg !10598
  store i32 1, i32* %retval, align 4, !dbg !10599
  br label %return, !dbg !10599

return:                                           ; preds = %if.end6, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !10600
  ret i32 %14, !dbg !10600
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageBorderColor(%struct._MagickWand* %wand, %struct._PixelWand* %border) #0 !dbg !10601 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %border.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10602, metadata !DIExpression()), !dbg !10603
  store %struct._PixelWand* %border, %struct._PixelWand** %border.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %border.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10606
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10608
  %1 = load i32, i32* %debug, align 8, !dbg !10608
  %cmp = icmp ne i32 %1, 0, !dbg !10609
  br i1 %cmp, label %if.then, label %if.end, !dbg !10610

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10611
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10612
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10611
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9657, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10613
  br label %if.end, !dbg !10614

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10615
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10617
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10617
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10618
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10619

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10620
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10620
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10620
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10620
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10620
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10620
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9659, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10620
  store i32 0, i32* %retval, align 4, !dbg !10620
  br label %return, !dbg !10620

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %border.addr, align 8, !dbg !10622
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10623
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10624
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10624
  %border_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 13, !dbg !10625
  call void @PixelGetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %border_color), !dbg !10626
  store i32 1, i32* %retval, align 4, !dbg !10627
  br label %return, !dbg !10627

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10628
  ret i32 %11, !dbg !10628
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageChannelDepth(%struct._MagickWand* %wand, i32 %channel, i64 %depth) #0 !dbg !10629 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %depth.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !10636, metadata !DIExpression()), !dbg !10637
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10638
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10640
  %1 = load i32, i32* %debug, align 8, !dbg !10640
  %cmp = icmp ne i32 %1, 0, !dbg !10641
  br i1 %cmp, label %if.then, label %if.end, !dbg !10642

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10643
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10644
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10643
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9697, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10645
  br label %if.end, !dbg !10646

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10647
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10649
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10649
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10650
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10651

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10652
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10652
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10652
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10652
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10652
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10652
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9699, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10652
  store i32 0, i32* %retval, align 4, !dbg !10652
  br label %return, !dbg !10652

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10654
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10655
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10655
  %10 = load i32, i32* %channel.addr, align 4, !dbg !10656
  %11 = load i64, i64* %depth.addr, align 8, !dbg !10657
  %call8 = call i32 @SetImageChannelDepth(%struct._Image* %9, i32 %10, i64 %11), !dbg !10658
  store i32 %call8, i32* %retval, align 4, !dbg !10659
  br label %return, !dbg !10659

return:                                           ; preds = %if.end6, %if.then2
  %12 = load i32, i32* %retval, align 4, !dbg !10660
  ret i32 %12, !dbg !10660
}

declare dso_local i32 @SetImageChannelDepth(%struct._Image*, i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageClipMask(%struct._MagickWand* %wand, %struct._MagickWand* %clip_mask) #0 !dbg !10661 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %clip_mask.addr = alloca %struct._MagickWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  store %struct._MagickWand* %clip_mask, %struct._MagickWand** %clip_mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %clip_mask.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10666
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10668
  %1 = load i32, i32* %debug, align 8, !dbg !10668
  %cmp = icmp ne i32 %1, 0, !dbg !10669
  br i1 %cmp, label %if.then, label %if.end, !dbg !10670

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10671
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10672
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10671
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9734, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10673
  br label %if.end, !dbg !10674

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %clip_mask.addr, align 8, !dbg !10675
  %debug1 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 8, !dbg !10677
  %4 = load i32, i32* %debug1, align 8, !dbg !10677
  %cmp2 = icmp ne i32 %4, 0, !dbg !10678
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !10679

if.then3:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %clip_mask.addr, align 8, !dbg !10680
  %name4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 1, !dbg !10681
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name4, i64 0, i64 0, !dbg !10680
  %call6 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9738, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay5), !dbg !10682
  br label %if.end7, !dbg !10683

if.end7:                                          ; preds = %if.then3, %if.end
  %6 = load %struct._MagickWand*, %struct._MagickWand** %clip_mask.addr, align 8, !dbg !10684
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %6, i32 0, i32 5, !dbg !10686
  %7 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10686
  %cmp8 = icmp eq %struct._Image* %7, null, !dbg !10687
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !10688

if.then9:                                         ; preds = %if.end7
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10689
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 2, !dbg !10689
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10689
  %10 = load %struct._MagickWand*, %struct._MagickWand** %clip_mask.addr, align 8, !dbg !10689
  %name10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 1, !dbg !10689
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name10, i64 0, i64 0, !dbg !10689
  %call12 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9740, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay11), !dbg !10689
  store i32 0, i32* %retval, align 4, !dbg !10689
  br label %return, !dbg !10689

if.end13:                                         ; preds = %if.end7
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10691
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !10692
  %12 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !10692
  %13 = load %struct._MagickWand*, %struct._MagickWand** %clip_mask.addr, align 8, !dbg !10693
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !10694
  %14 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !10694
  %call16 = call i32 @SetImageClipMask(%struct._Image* %12, %struct._Image* %14), !dbg !10695
  store i32 %call16, i32* %retval, align 4, !dbg !10696
  br label %return, !dbg !10696

return:                                           ; preds = %if.end13, %if.then9
  %15 = load i32, i32* %retval, align 4, !dbg !10697
  ret i32 %15, !dbg !10697
}

declare dso_local i32 @SetImageClipMask(%struct._Image*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageColor(%struct._MagickWand* %wand, %struct._PixelWand* %color) #0 !dbg !10698 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %color.addr = alloca %struct._PixelWand*, align 8
  %status = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10699, metadata !DIExpression()), !dbg !10700
  store %struct._PixelWand* %color, %struct._PixelWand** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %color.addr, metadata !10701, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10703, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !10705, metadata !DIExpression()), !dbg !10706
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10707
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10709
  %1 = load i32, i32* %debug, align 8, !dbg !10709
  %cmp = icmp ne i32 %1, 0, !dbg !10710
  br i1 %cmp, label %if.then, label %if.end, !dbg !10711

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10712
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10713
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10712
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9781, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10714
  br label %if.end, !dbg !10715

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %color.addr, align 8, !dbg !10716
  call void @PixelGetMagickColor(%struct._PixelWand* %3, %struct._MagickPixelPacket* %pixel), !dbg !10717
  %4 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10718
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %4, i32 0, i32 5, !dbg !10719
  %5 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10719
  %call1 = call i32 @SetImageColor(%struct._Image* %5, %struct._MagickPixelPacket* %pixel), !dbg !10720
  store i32 %call1, i32* %status, align 4, !dbg !10721
  %6 = load i32, i32* %status, align 4, !dbg !10722
  %cmp2 = icmp eq i32 %6, 0, !dbg !10724
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !10725

if.then3:                                         ; preds = %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10726
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !10727
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10727
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10728
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10729
  %10 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !10729
  %exception5 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 58, !dbg !10730
  call void @InheritException(%struct._ExceptionInfo* %8, %struct._ExceptionInfo* %exception5), !dbg !10731
  br label %if.end6, !dbg !10731

if.end6:                                          ; preds = %if.then3, %if.end
  %11 = load i32, i32* %status, align 4, !dbg !10732
  ret i32 %11, !dbg !10733
}

declare dso_local i32 @SetImageColor(%struct._Image*, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageColormapColor(%struct._MagickWand* %wand, i64 %index, %struct._PixelWand* %color) #0 !dbg !10734 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %index.addr = alloca i64, align 8
  %color.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  store %struct._PixelWand* %color, %struct._PixelWand** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %color.addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10743
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10745
  %1 = load i32, i32* %debug, align 8, !dbg !10745
  %cmp = icmp ne i32 %1, 0, !dbg !10746
  br i1 %cmp, label %if.then, label %if.end, !dbg !10747

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10748
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10749
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10748
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9823, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10750
  br label %if.end, !dbg !10751

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10752
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10754
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10754
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10755
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10756

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10757
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10757
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10757
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10757
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10757
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10757
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9825, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10757
  store i32 0, i32* %retval, align 4, !dbg !10757
  br label %return, !dbg !10757

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10759
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10761
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10761
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 11, !dbg !10762
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !10762
  %cmp8 = icmp eq %struct._PixelPacket* %10, null, !dbg !10763
  br i1 %cmp8, label %if.then11, label %lor.lhs.false, !dbg !10764

lor.lhs.false:                                    ; preds = %if.end6
  %11 = load i64, i64* %index.addr, align 8, !dbg !10765
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10766
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !10767
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !10767
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 10, !dbg !10768
  %14 = load i64, i64* %colors, align 8, !dbg !10768
  %cmp10 = icmp uge i64 %11, %14, !dbg !10769
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !10770

if.then11:                                        ; preds = %lor.lhs.false, %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10771
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !10771
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !10771
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10771
  %name13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 1, !dbg !10771
  %arraydecay14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name13, i64 0, i64 0, !dbg !10771
  %call15 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9828, i32 470, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay14), !dbg !10771
  store i32 0, i32* %retval, align 4, !dbg !10771
  br label %return, !dbg !10771

if.end16:                                         ; preds = %lor.lhs.false
  %18 = load %struct._PixelWand*, %struct._PixelWand** %color.addr, align 8, !dbg !10773
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10774
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !10775
  %20 = load %struct._Image*, %struct._Image** %images17, align 8, !dbg !10775
  %colormap18 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 11, !dbg !10776
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap18, align 8, !dbg !10776
  %22 = load i64, i64* %index.addr, align 8, !dbg !10777
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i64 %22, !dbg !10778
  call void @PixelGetQuantumColor(%struct._PixelWand* %18, %struct._PixelPacket* %add.ptr), !dbg !10779
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10780
  %images19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %23, i32 0, i32 5, !dbg !10781
  %24 = load %struct._Image*, %struct._Image** %images19, align 8, !dbg !10781
  %call20 = call i32 @SyncImage(%struct._Image* %24), !dbg !10782
  store i32 %call20, i32* %retval, align 4, !dbg !10783
  br label %return, !dbg !10783

return:                                           ; preds = %if.end16, %if.then11, %if.then2
  %25 = load i32, i32* %retval, align 4, !dbg !10784
  ret i32 %25, !dbg !10784
}

declare dso_local i32 @SyncImage(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageColorspace(%struct._MagickWand* %wand, i32 %colorspace) #0 !dbg !10785 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %colorspace.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10788, metadata !DIExpression()), !dbg !10789
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !10790, metadata !DIExpression()), !dbg !10791
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10792
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10794
  %1 = load i32, i32* %debug, align 8, !dbg !10794
  %cmp = icmp ne i32 %1, 0, !dbg !10795
  br i1 %cmp, label %if.then, label %if.end, !dbg !10796

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10797
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10798
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10797
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9868, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10799
  br label %if.end, !dbg !10800

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10801
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10803
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10803
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10804
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10805

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10806
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10806
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10806
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10806
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10806
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10806
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9870, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10806
  store i32 0, i32* %retval, align 4, !dbg !10806
  br label %return, !dbg !10806

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10808
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !10809
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10809
  %10 = load i32, i32* %colorspace.addr, align 4, !dbg !10810
  %call8 = call i32 @SetImageColorspace(%struct._Image* %9, i32 %10), !dbg !10811
  store i32 %call8, i32* %retval, align 4, !dbg !10812
  br label %return, !dbg !10812

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10813
  ret i32 %11, !dbg !10813
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageCompose(%struct._MagickWand* %wand, i32 %compose) #0 !dbg !10814 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %compose.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !10819, metadata !DIExpression()), !dbg !10820
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10821
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10823
  %1 = load i32, i32* %debug, align 8, !dbg !10823
  %cmp = icmp ne i32 %1, 0, !dbg !10824
  br i1 %cmp, label %if.then, label %if.end, !dbg !10825

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10826
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10827
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10826
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9907, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10828
  br label %if.end, !dbg !10829

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10830
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10832
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10832
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10833
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10834

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10835
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10835
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10835
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10835
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10835
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10835
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9909, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10835
  store i32 0, i32* %retval, align 4, !dbg !10835
  br label %return, !dbg !10835

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %compose.addr, align 4, !dbg !10837
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10838
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10839
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10839
  %compose8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 36, !dbg !10840
  store i32 %8, i32* %compose8, align 8, !dbg !10841
  store i32 1, i32* %retval, align 4, !dbg !10842
  br label %return, !dbg !10842

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10843
  ret i32 %11, !dbg !10843
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageCompression(%struct._MagickWand* %wand, i32 %compression) #0 !dbg !10844 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %compression.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  store i32 %compression, i32* %compression.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compression.addr, metadata !10850, metadata !DIExpression()), !dbg !10851
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10852
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10854
  %1 = load i32, i32* %debug, align 8, !dbg !10854
  %cmp = icmp ne i32 %1, 0, !dbg !10855
  br i1 %cmp, label %if.then, label %if.end, !dbg !10856

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10857
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10858
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10857
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9945, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10859
  br label %if.end, !dbg !10860

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10861
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10863
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10863
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10864
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10865

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10866
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10866
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10866
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10866
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10866
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10866
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9947, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10866
  store i32 0, i32* %retval, align 4, !dbg !10866
  br label %return, !dbg !10866

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %compression.addr, align 4, !dbg !10868
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10869
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10870
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10870
  %compression8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 2, !dbg !10871
  store i32 %8, i32* %compression8, align 8, !dbg !10872
  store i32 1, i32* %retval, align 4, !dbg !10873
  br label %return, !dbg !10873

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10874
  ret i32 %11, !dbg !10874
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageCompressionQuality(%struct._MagickWand* %wand, i64 %quality) #0 !dbg !10875 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %quality.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10878, metadata !DIExpression()), !dbg !10879
  store i64 %quality, i64* %quality.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %quality.addr, metadata !10880, metadata !DIExpression()), !dbg !10881
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10882
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10884
  %1 = load i32, i32* %debug, align 8, !dbg !10884
  %cmp = icmp ne i32 %1, 0, !dbg !10885
  br i1 %cmp, label %if.then, label %if.end, !dbg !10886

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10887
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10888
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10887
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9983, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10889
  br label %if.end, !dbg !10890

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10891
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10893
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10893
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10894
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10895

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10896
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10896
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10896
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10896
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10896
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10896
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 9985, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10896
  store i32 0, i32* %retval, align 4, !dbg !10896
  br label %return, !dbg !10896

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %quality.addr, align 8, !dbg !10898
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10899
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10900
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10900
  %quality8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 3, !dbg !10901
  store i64 %8, i64* %quality8, align 8, !dbg !10902
  store i32 1, i32* %retval, align 4, !dbg !10903
  br label %return, !dbg !10903

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10904
  ret i32 %11, !dbg !10904
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageDelay(%struct._MagickWand* %wand, i64 %delay) #0 !dbg !10905 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %delay.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10906, metadata !DIExpression()), !dbg !10907
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10910
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10912
  %1 = load i32, i32* %debug, align 8, !dbg !10912
  %cmp = icmp ne i32 %1, 0, !dbg !10913
  br i1 %cmp, label %if.then, label %if.end, !dbg !10914

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10915
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10916
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10915
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10021, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10917
  br label %if.end, !dbg !10918

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10919
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10921
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10921
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10922
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10923

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10924
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10924
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10924
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10924
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10924
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10924
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10023, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10924
  store i32 0, i32* %retval, align 4, !dbg !10924
  br label %return, !dbg !10924

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %delay.addr, align 8, !dbg !10926
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10927
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10928
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10928
  %delay8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 40, !dbg !10929
  store i64 %8, i64* %delay8, align 8, !dbg !10930
  store i32 1, i32* %retval, align 4, !dbg !10931
  br label %return, !dbg !10931

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10932
  ret i32 %11, !dbg !10932
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageDepth(%struct._MagickWand* %wand, i64 %depth) #0 !dbg !10933 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %depth.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10938
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10940
  %1 = load i32, i32* %debug, align 8, !dbg !10940
  %cmp = icmp ne i32 %1, 0, !dbg !10941
  br i1 %cmp, label %if.then, label %if.end, !dbg !10942

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10943
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10944
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10943
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10059, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10945
  br label %if.end, !dbg !10946

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10947
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10949
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10949
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10950
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10951

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10952
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10952
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10952
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10952
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10952
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10952
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10061, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10952
  store i32 0, i32* %retval, align 4, !dbg !10952
  br label %return, !dbg !10952

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %depth.addr, align 8, !dbg !10954
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10955
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10956
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10956
  %depth8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 9, !dbg !10957
  store i64 %8, i64* %depth8, align 8, !dbg !10958
  store i32 1, i32* %retval, align 4, !dbg !10959
  br label %return, !dbg !10959

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10960
  ret i32 %11, !dbg !10960
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageDispose(%struct._MagickWand* %wand, i32 %dispose) #0 !dbg !10961 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %dispose.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10965, metadata !DIExpression()), !dbg !10966
  store i32 %dispose, i32* %dispose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dispose.addr, metadata !10967, metadata !DIExpression()), !dbg !10968
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10969
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !10971
  %1 = load i32, i32* %debug, align 8, !dbg !10971
  %cmp = icmp ne i32 %1, 0, !dbg !10972
  br i1 %cmp, label %if.then, label %if.end, !dbg !10973

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10974
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !10975
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !10974
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10097, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !10976
  br label %if.end, !dbg !10977

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10978
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !10980
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !10980
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !10981
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !10982

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10983
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !10983
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10983
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10983
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !10983
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !10983
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10099, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !10983
  store i32 0, i32* %retval, align 4, !dbg !10983
  br label %return, !dbg !10983

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %dispose.addr, align 4, !dbg !10985
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !10986
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !10987
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !10987
  %dispose8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 37, !dbg !10988
  store i32 %8, i32* %dispose8, align 4, !dbg !10989
  store i32 1, i32* %retval, align 4, !dbg !10990
  br label %return, !dbg !10990

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !10991
  ret i32 %11, !dbg !10991
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageEndian(%struct._MagickWand* %wand, i32 %endian) #0 !dbg !10992 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %endian.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  store i32 %endian, i32* %endian.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endian.addr, metadata !10998, metadata !DIExpression()), !dbg !10999
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11000
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11002
  %1 = load i32, i32* %debug, align 8, !dbg !11002
  %cmp = icmp ne i32 %1, 0, !dbg !11003
  br i1 %cmp, label %if.then, label %if.end, !dbg !11004

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11005
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11006
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11005
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11007
  br label %if.end, !dbg !11008

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11009
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11011
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11011
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11012
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11013

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11014
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11014
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11014
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11014
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11014
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11014
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10137, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11014
  store i32 0, i32* %retval, align 4, !dbg !11014
  br label %return, !dbg !11014

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %endian.addr, align 4, !dbg !11016
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11017
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11018
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11018
  %endian8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 34, !dbg !11019
  store i32 %8, i32* %endian8, align 8, !dbg !11020
  store i32 1, i32* %retval, align 4, !dbg !11021
  br label %return, !dbg !11021

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11022
  ret i32 %11, !dbg !11022
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageExtent(%struct._MagickWand* %wand, i64 %columns, i64 %rows) #0 !dbg !11023 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !11026, metadata !DIExpression()), !dbg !11027
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11030
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11032
  %1 = load i32, i32* %debug, align 8, !dbg !11032
  %cmp = icmp ne i32 %1, 0, !dbg !11033
  br i1 %cmp, label %if.then, label %if.end, !dbg !11034

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11035
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11036
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11035
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10175, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11037
  br label %if.end, !dbg !11038

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11039
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11041
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11041
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11042
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11043

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11044
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11044
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11044
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11044
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11044
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11044
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10177, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11044
  store i32 0, i32* %retval, align 4, !dbg !11044
  br label %return, !dbg !11044

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11046
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11047
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11047
  %10 = load i64, i64* %columns.addr, align 8, !dbg !11048
  %11 = load i64, i64* %rows.addr, align 8, !dbg !11049
  %call8 = call i32 @SetImageExtent(%struct._Image* %9, i64 %10, i64 %11), !dbg !11050
  store i32 %call8, i32* %retval, align 4, !dbg !11051
  br label %return, !dbg !11051

return:                                           ; preds = %if.end6, %if.then2
  %12 = load i32, i32* %retval, align 4, !dbg !11052
  ret i32 %12, !dbg !11052
}

declare dso_local i32 @SetImageExtent(%struct._Image*, i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageFilename(%struct._MagickWand* %wand, i8* %filename) #0 !dbg !11053 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %filename.addr = alloca i8*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11058
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11060
  %1 = load i32, i32* %debug, align 8, !dbg !11060
  %cmp = icmp ne i32 %1, 0, !dbg !11061
  br i1 %cmp, label %if.then, label %if.end, !dbg !11062

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11063
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11064
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11063
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11065
  br label %if.end, !dbg !11066

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11067
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11069
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11069
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11070
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11071

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11072
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11072
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11072
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11072
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11072
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11072
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10215, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11072
  store i32 0, i32* %retval, align 4, !dbg !11072
  br label %return, !dbg !11072

if.end6:                                          ; preds = %if.end
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !11074
  %cmp7 = icmp ne i8* %8, null, !dbg !11076
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !11077

if.then8:                                         ; preds = %if.end6
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11078
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11079
  %10 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !11079
  %filename10 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 53, !dbg !11080
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename10, i64 0, i64 0, !dbg !11078
  %11 = load i8*, i8** %filename.addr, align 8, !dbg !11081
  %call12 = call i64 @CopyMagickString(i8* %arraydecay11, i8* %11, i64 4096), !dbg !11082
  br label %if.end13, !dbg !11083

if.end13:                                         ; preds = %if.then8, %if.end6
  store i32 1, i32* %retval, align 4, !dbg !11084
  br label %return, !dbg !11084

return:                                           ; preds = %if.end13, %if.then2
  %12 = load i32, i32* %retval, align 4, !dbg !11085
  ret i32 %12, !dbg !11085
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageFormat(%struct._MagickWand* %wand, i8* %format) #0 !dbg !11086 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %format.addr = alloca i8*, align 8
  %magick_info = alloca %struct._MagickInfo*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata %struct._MagickInfo** %magick_info, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11093
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11095
  %1 = load i32, i32* %debug, align 8, !dbg !11095
  %cmp = icmp ne i32 %1, 0, !dbg !11096
  br i1 %cmp, label %if.then, label %if.end, !dbg !11097

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11098
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11099
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11098
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11100
  br label %if.end, !dbg !11101

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11102
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11104
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11104
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11105
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11106

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11107
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11107
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11107
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11107
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11107
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11107
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10258, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11107
  store i32 0, i32* %retval, align 4, !dbg !11107
  br label %return, !dbg !11107

if.end6:                                          ; preds = %if.end
  %8 = load i8*, i8** %format.addr, align 8, !dbg !11109
  %cmp7 = icmp eq i8* %8, null, !dbg !11111
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !11112

lor.lhs.false:                                    ; preds = %if.end6
  %9 = load i8*, i8** %format.addr, align 8, !dbg !11113
  %10 = load i8, i8* %9, align 1, !dbg !11114
  %conv = sext i8 %10 to i32, !dbg !11114
  %cmp8 = icmp eq i32 %conv, 0, !dbg !11115
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !11116

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11117
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !11119
  %12 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !11119
  %magick = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 55, !dbg !11120
  %arraydecay12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick, i64 0, i64 0, !dbg !11121
  store i8 0, i8* %arraydecay12, align 8, !dbg !11122
  store i32 1, i32* %retval, align 4, !dbg !11123
  br label %return, !dbg !11123

if.end13:                                         ; preds = %lor.lhs.false
  %13 = load i8*, i8** %format.addr, align 8, !dbg !11124
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11125
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !11126
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !11126
  %call15 = call %struct._MagickInfo* @GetMagickInfo(i8* %13, %struct._ExceptionInfo* %15), !dbg !11127
  store %struct._MagickInfo* %call15, %struct._MagickInfo** %magick_info, align 8, !dbg !11128
  %16 = load %struct._MagickInfo*, %struct._MagickInfo** %magick_info, align 8, !dbg !11129
  %cmp16 = icmp eq %struct._MagickInfo* %16, null, !dbg !11131
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11132

if.then18:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !11133
  br label %return, !dbg !11133

if.end19:                                         ; preds = %if.end13
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11134
  %exception20 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 2, !dbg !11135
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception20, align 8, !dbg !11135
  call void @ClearMagickException(%struct._ExceptionInfo* %18), !dbg !11136
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11137
  %images21 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !11138
  %20 = load %struct._Image*, %struct._Image** %images21, align 8, !dbg !11138
  %magick22 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 55, !dbg !11139
  %arraydecay23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick22, i64 0, i64 0, !dbg !11137
  %21 = load i8*, i8** %format.addr, align 8, !dbg !11140
  %call24 = call i64 @CopyMagickString(i8* %arraydecay23, i8* %21, i64 4096), !dbg !11141
  store i32 1, i32* %retval, align 4, !dbg !11142
  br label %return, !dbg !11142

return:                                           ; preds = %if.end19, %if.then18, %if.then10, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !11143
  ret i32 %22, !dbg !11143
}

declare dso_local %struct._MagickInfo* @GetMagickInfo(i8*, %struct._ExceptionInfo*) #2

declare dso_local void @ClearMagickException(%struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageFuzz(%struct._MagickWand* %wand, double %fuzz) #0 !dbg !11144 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %fuzz.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !11147, metadata !DIExpression()), !dbg !11148
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11149
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11151
  %1 = load i32, i32* %debug, align 8, !dbg !11151
  %cmp = icmp ne i32 %1, 0, !dbg !11152
  br i1 %cmp, label %if.then, label %if.end, !dbg !11153

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11154
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11155
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11154
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10303, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11156
  br label %if.end, !dbg !11157

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11158
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11160
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11160
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11161
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11162

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11163
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11163
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11163
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11163
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11163
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11163
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10305, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11163
  store i32 0, i32* %retval, align 4, !dbg !11163
  br label %return, !dbg !11163

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %fuzz.addr, align 8, !dbg !11165
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11166
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11167
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11167
  %fuzz8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 31, !dbg !11168
  store double %8, double* %fuzz8, align 8, !dbg !11169
  store i32 1, i32* %retval, align 4, !dbg !11170
  br label %return, !dbg !11170

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11171
  ret i32 %11, !dbg !11171
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageGamma(%struct._MagickWand* %wand, double %gamma) #0 !dbg !11172 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %gamma.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11173, metadata !DIExpression()), !dbg !11174
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11177
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11179
  %1 = load i32, i32* %debug, align 8, !dbg !11179
  %cmp = icmp ne i32 %1, 0, !dbg !11180
  br i1 %cmp, label %if.then, label %if.end, !dbg !11181

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11182
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11183
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11182
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10341, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11184
  br label %if.end, !dbg !11185

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11186
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11188
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11188
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11189
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11190

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11191
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11191
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11191
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11191
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11191
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11191
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10343, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11191
  store i32 0, i32* %retval, align 4, !dbg !11191
  br label %return, !dbg !11191

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %gamma.addr, align 8, !dbg !11193
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11194
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11195
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11195
  %gamma8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 15, !dbg !11196
  store double %8, double* %gamma8, align 8, !dbg !11197
  store i32 1, i32* %retval, align 4, !dbg !11198
  br label %return, !dbg !11198

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11199
  ret i32 %11, !dbg !11199
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageGravity(%struct._MagickWand* %wand, i32 %gravity) #0 !dbg !11200 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %gravity.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11204, metadata !DIExpression()), !dbg !11205
  store i32 %gravity, i32* %gravity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gravity.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11208
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11210
  %1 = load i32, i32* %debug, align 8, !dbg !11210
  %cmp = icmp ne i32 %1, 0, !dbg !11211
  br i1 %cmp, label %if.then, label %if.end, !dbg !11212

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11213
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11214
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11213
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10380, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11215
  br label %if.end, !dbg !11216

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11217
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11219
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11219
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11220
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11221

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11222
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11222
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11222
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11222
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11222
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11222
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10382, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11222
  store i32 0, i32* %retval, align 4, !dbg !11222
  br label %return, !dbg !11222

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %gravity.addr, align 4, !dbg !11224
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11225
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11226
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11226
  %gravity8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 35, !dbg !11227
  store i32 %8, i32* %gravity8, align 4, !dbg !11228
  store i32 1, i32* %retval, align 4, !dbg !11229
  br label %return, !dbg !11229

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11230
  ret i32 %11, !dbg !11230
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageGreenPrimary(%struct._MagickWand* %wand, double %x, double %y) #0 !dbg !11231 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11232, metadata !DIExpression()), !dbg !11233
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !11234, metadata !DIExpression()), !dbg !11235
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !11236, metadata !DIExpression()), !dbg !11237
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11238
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11240
  %1 = load i32, i32* %debug, align 8, !dbg !11240
  %cmp = icmp ne i32 %1, 0, !dbg !11241
  br i1 %cmp, label %if.then, label %if.end, !dbg !11242

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11243
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11244
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11243
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10422, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11245
  br label %if.end, !dbg !11246

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11247
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11249
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11249
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11250
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11251

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11252
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11252
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11252
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11252
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11252
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11252
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10424, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11252
  store i32 0, i32* %retval, align 4, !dbg !11252
  br label %return, !dbg !11252

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %x.addr, align 8, !dbg !11254
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11255
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11256
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11256
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 16, !dbg !11257
  %green_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 1, !dbg !11258
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary, i32 0, i32 0, !dbg !11259
  store double %8, double* %x8, align 8, !dbg !11260
  %11 = load double, double* %y.addr, align 8, !dbg !11261
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11262
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !11263
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !11263
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !11264
  %green_primary11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 1, !dbg !11265
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary11, i32 0, i32 1, !dbg !11266
  store double %11, double* %y12, align 8, !dbg !11267
  store i32 1, i32* %retval, align 4, !dbg !11268
  br label %return, !dbg !11268

return:                                           ; preds = %if.end6, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !11269
  ret i32 %14, !dbg !11269
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageInterlaceScheme(%struct._MagickWand* %wand, i32 %interlace) #0 !dbg !11270 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %interlace.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  store i32 %interlace, i32* %interlace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interlace.addr, metadata !11276, metadata !DIExpression()), !dbg !11277
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11278
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11280
  %1 = load i32, i32* %debug, align 8, !dbg !11280
  %cmp = icmp ne i32 %1, 0, !dbg !11281
  br i1 %cmp, label %if.then, label %if.end, !dbg !11282

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11283
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11284
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11283
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10462, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11285
  br label %if.end, !dbg !11286

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11287
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11289
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11289
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11290
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11291

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11292
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11292
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11292
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11292
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11292
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11292
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10464, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11292
  store i32 0, i32* %retval, align 4, !dbg !11292
  br label %return, !dbg !11292

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %interlace.addr, align 4, !dbg !11294
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11295
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11296
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11296
  %interlace8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 33, !dbg !11297
  store i32 %8, i32* %interlace8, align 4, !dbg !11298
  store i32 1, i32* %retval, align 4, !dbg !11299
  br label %return, !dbg !11299

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11300
  ret i32 %11, !dbg !11300
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageInterpolateMethod(%struct._MagickWand* %wand, i32 %method) #0 !dbg !11301 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11309
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11311
  %1 = load i32, i32* %debug, align 8, !dbg !11311
  %cmp = icmp ne i32 %1, 0, !dbg !11312
  br i1 %cmp, label %if.then, label %if.end, !dbg !11313

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11314
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11315
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11314
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10501, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11316
  br label %if.end, !dbg !11317

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11318
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11320
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11320
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11321
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11322

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11323
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11323
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11323
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11323
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11323
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11323
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10503, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11323
  store i32 0, i32* %retval, align 4, !dbg !11323
  br label %return, !dbg !11323

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %method.addr, align 4, !dbg !11325
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11326
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11327
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11327
  %interpolate = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 70, !dbg !11328
  store i32 %8, i32* %interpolate, align 8, !dbg !11329
  store i32 1, i32* %retval, align 4, !dbg !11330
  br label %return, !dbg !11330

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11331
  ret i32 %11, !dbg !11331
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageIterations(%struct._MagickWand* %wand, i64 %iterations) #0 !dbg !11332 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %iterations.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11333, metadata !DIExpression()), !dbg !11334
  store i64 %iterations, i64* %iterations.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iterations.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11337
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11339
  %1 = load i32, i32* %debug, align 8, !dbg !11339
  %cmp = icmp ne i32 %1, 0, !dbg !11340
  br i1 %cmp, label %if.then, label %if.end, !dbg !11341

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11342
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11343
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11342
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10539, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11344
  br label %if.end, !dbg !11345

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11346
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11348
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11348
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11349
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11350

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11351
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11351
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11351
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11351
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11351
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11351
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10541, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11351
  store i32 0, i32* %retval, align 4, !dbg !11351
  br label %return, !dbg !11351

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %iterations.addr, align 8, !dbg !11353
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11354
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11355
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11355
  %iterations8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 42, !dbg !11356
  store i64 %8, i64* %iterations8, align 8, !dbg !11357
  store i32 1, i32* %retval, align 4, !dbg !11358
  br label %return, !dbg !11358

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11359
  ret i32 %11, !dbg !11359
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageMatte(%struct._MagickWand* %wand, i32 %matte) #0 !dbg !11360 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %matte.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11361, metadata !DIExpression()), !dbg !11362
  store i32 %matte, i32* %matte.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %matte.addr, metadata !11363, metadata !DIExpression()), !dbg !11364
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11365
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11367
  %1 = load i32, i32* %debug, align 8, !dbg !11367
  %cmp = icmp ne i32 %1, 0, !dbg !11368
  br i1 %cmp, label %if.then, label %if.end, !dbg !11369

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11370
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11371
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11370
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10578, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11372
  br label %if.end, !dbg !11373

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11374
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11376
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11376
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11377
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11378

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11379
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11379
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11379
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11379
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11379
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11379
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10580, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11379
  store i32 0, i32* %retval, align 4, !dbg !11379
  br label %return, !dbg !11379

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11381
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11383
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11383
  %matte8 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 6, !dbg !11384
  %10 = load i32, i32* %matte8, align 8, !dbg !11384
  %cmp9 = icmp eq i32 %10, 0, !dbg !11385
  br i1 %cmp9, label %land.lhs.true, label %if.end14, !dbg !11386

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i32, i32* %matte.addr, align 4, !dbg !11387
  %cmp10 = icmp ne i32 %11, 0, !dbg !11388
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !11389

if.then11:                                        ; preds = %land.lhs.true
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11390
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !11391
  %13 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !11391
  %call13 = call i32 @SetImageOpacity(%struct._Image* %13, i16 zeroext 0), !dbg !11392
  br label %if.end14, !dbg !11393

if.end14:                                         ; preds = %if.then11, %land.lhs.true, %if.end6
  %14 = load i32, i32* %matte.addr, align 4, !dbg !11394
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11395
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !11396
  %16 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !11396
  %matte16 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 6, !dbg !11397
  store i32 %14, i32* %matte16, align 8, !dbg !11398
  store i32 1, i32* %retval, align 4, !dbg !11399
  br label %return, !dbg !11399

return:                                           ; preds = %if.end14, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !11400
  ret i32 %17, !dbg !11400
}

declare dso_local i32 @SetImageOpacity(%struct._Image*, i16 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageMatteColor(%struct._MagickWand* %wand, %struct._PixelWand* %matte) #0 !dbg !11401 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %matte.addr = alloca %struct._PixelWand*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11402, metadata !DIExpression()), !dbg !11403
  store %struct._PixelWand* %matte, %struct._PixelWand** %matte.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %matte.addr, metadata !11404, metadata !DIExpression()), !dbg !11405
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11406
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11408
  %1 = load i32, i32* %debug, align 8, !dbg !11408
  %cmp = icmp ne i32 %1, 0, !dbg !11409
  br i1 %cmp, label %if.then, label %if.end, !dbg !11410

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11411
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11412
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11411
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10618, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11413
  br label %if.end, !dbg !11414

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11415
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11417
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11417
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11418
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11419

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11420
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11420
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11420
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11420
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11420
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11420
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10620, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11420
  store i32 0, i32* %retval, align 4, !dbg !11420
  br label %return, !dbg !11420

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %matte.addr, align 8, !dbg !11422
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11423
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11424
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11424
  %matte_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 14, !dbg !11425
  call void @PixelGetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %matte_color), !dbg !11426
  store i32 1, i32* %retval, align 4, !dbg !11427
  br label %return, !dbg !11427

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11428
  ret i32 %11, !dbg !11428
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageOpacity(%struct._MagickWand* %wand, double %alpha) #0 !dbg !11429 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %alpha.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11430, metadata !DIExpression()), !dbg !11431
  store double %alpha, double* %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double* %alpha.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11434, metadata !DIExpression()), !dbg !11435
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11436
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11438
  %1 = load i32, i32* %debug, align 8, !dbg !11438
  %cmp = icmp ne i32 %1, 0, !dbg !11439
  br i1 %cmp, label %if.then, label %if.end, !dbg !11440

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11441
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11442
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11441
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10660, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11443
  br label %if.end, !dbg !11444

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11445
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11447
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11447
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11448
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11449

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11450
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11450
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11450
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11450
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11450
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11450
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10662, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11450
  store i32 0, i32* %retval, align 4, !dbg !11450
  br label %return, !dbg !11450

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11452
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11453
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11453
  %10 = load double, double* %alpha.addr, align 8, !dbg !11454
  %mul = fmul double 6.553500e+04, %10, !dbg !11455
  %sub = fsub double 6.553500e+04, %mul, !dbg !11456
  %conv = fptrunc double %sub to float, !dbg !11457
  %call8 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !11458
  %call9 = call i32 @SetImageOpacity(%struct._Image* %9, i16 zeroext %call8), !dbg !11459
  store i32 %call9, i32* %status, align 4, !dbg !11460
  %11 = load i32, i32* %status, align 4, !dbg !11461
  %cmp10 = icmp eq i32 %11, 0, !dbg !11463
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !11464

if.then12:                                        ; preds = %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11465
  %exception13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !11466
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception13, align 8, !dbg !11466
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11467
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !11468
  %15 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !11468
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !11469
  call void @InheritException(%struct._ExceptionInfo* %13, %struct._ExceptionInfo* %exception15), !dbg !11470
  br label %if.end16, !dbg !11470

if.end16:                                         ; preds = %if.then12, %if.end6
  %16 = load i32, i32* %status, align 4, !dbg !11471
  store i32 %16, i32* %retval, align 4, !dbg !11472
  br label %return, !dbg !11472

return:                                           ; preds = %if.end16, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !11473
  ret i32 %17, !dbg !11473
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !11474 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !11478, metadata !DIExpression()), !dbg !11479
  %0 = load float, float* %value.addr, align 4, !dbg !11480
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !11482
  br i1 %cmp, label %if.then, label %if.end, !dbg !11483

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !11484
  br label %return, !dbg !11484

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !11485
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !11487
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11488

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !11489
  br label %return, !dbg !11489

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !11490
  %add = fadd float %2, 5.000000e-01, !dbg !11491
  %conv = fptoui float %add to i16, !dbg !11492
  store i16 %conv, i16* %retval, align 2, !dbg !11493
  br label %return, !dbg !11493

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !11494
  ret i16 %3, !dbg !11494
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageOrientation(%struct._MagickWand* %wand, i32 %orientation) #0 !dbg !11495 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %orientation.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11499, metadata !DIExpression()), !dbg !11500
  store i32 %orientation, i32* %orientation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %orientation.addr, metadata !11501, metadata !DIExpression()), !dbg !11502
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11503
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11505
  %1 = load i32, i32* %debug, align 8, !dbg !11505
  %cmp = icmp ne i32 %1, 0, !dbg !11506
  br i1 %cmp, label %if.then, label %if.end, !dbg !11507

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11508
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11509
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11508
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10701, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11510
  br label %if.end, !dbg !11511

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11512
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11514
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11514
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11515
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11516

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11517
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11517
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11517
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11517
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11517
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11517
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10703, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11517
  store i32 0, i32* %retval, align 4, !dbg !11517
  br label %return, !dbg !11517

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %orientation.addr, align 4, !dbg !11519
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11520
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11521
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11521
  %orientation8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 4, !dbg !11522
  store i32 %8, i32* %orientation8, align 8, !dbg !11523
  store i32 1, i32* %retval, align 4, !dbg !11524
  br label %return, !dbg !11524

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11525
  ret i32 %11, !dbg !11525
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImagePage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y) #0 !dbg !11526 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11527, metadata !DIExpression()), !dbg !11528
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11529, metadata !DIExpression()), !dbg !11530
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11531, metadata !DIExpression()), !dbg !11532
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !11533, metadata !DIExpression()), !dbg !11534
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !11535, metadata !DIExpression()), !dbg !11536
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11537
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11539
  %1 = load i32, i32* %debug, align 8, !dbg !11539
  %cmp = icmp ne i32 %1, 0, !dbg !11540
  br i1 %cmp, label %if.then, label %if.end, !dbg !11541

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11542
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11543
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11542
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10746, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11544
  br label %if.end, !dbg !11545

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11546
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11548
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11548
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11549
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11550

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11551
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11551
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11551
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11551
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11551
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11551
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10748, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11551
  store i32 0, i32* %retval, align 4, !dbg !11551
  br label %return, !dbg !11551

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !11553
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11554
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11555
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11555
  %page = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 26, !dbg !11556
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page, i32 0, i32 0, !dbg !11557
  store i64 %8, i64* %width8, align 8, !dbg !11558
  %11 = load i64, i64* %height.addr, align 8, !dbg !11559
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11560
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !11561
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !11561
  %page10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 26, !dbg !11562
  %height11 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page10, i32 0, i32 1, !dbg !11563
  store i64 %11, i64* %height11, align 8, !dbg !11564
  %14 = load i64, i64* %x.addr, align 8, !dbg !11565
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11566
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !11567
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !11567
  %page13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 26, !dbg !11568
  %x14 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page13, i32 0, i32 2, !dbg !11569
  store i64 %14, i64* %x14, align 8, !dbg !11570
  %17 = load i64, i64* %y.addr, align 8, !dbg !11571
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11572
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !11573
  %19 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !11573
  %page16 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 26, !dbg !11574
  %y17 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page16, i32 0, i32 3, !dbg !11575
  store i64 %17, i64* %y17, align 8, !dbg !11576
  store i32 1, i32* %retval, align 4, !dbg !11577
  br label %return, !dbg !11577

return:                                           ; preds = %if.end6, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !11578
  ret i32 %20, !dbg !11578
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 (i8*, i64, i64, i8*)* @MagickSetImageProgressMonitor(%struct._MagickWand* %wand, i32 (i8*, i64, i64, i8*)* %progress_monitor, i8* %client_data) #0 !dbg !11579 {
entry:
  %retval = alloca i32 (i8*, i64, i64, i8*)*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %progress_monitor.addr = alloca i32 (i8*, i64, i64, i8*)*, align 8
  %client_data.addr = alloca i8*, align 8
  %previous_monitor = alloca i32 (i8*, i64, i64, i8*)*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i32 (i8*, i64, i64, i8*)* %progress_monitor, i32 (i8*, i64, i64, i8*)** %progress_monitor.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i64, i64, i8*)** %progress_monitor.addr, metadata !11585, metadata !DIExpression()), !dbg !11586
  store i8* %client_data, i8** %client_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %client_data.addr, metadata !11587, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.declare(metadata i32 (i8*, i64, i64, i8*)** %previous_monitor, metadata !11589, metadata !DIExpression()), !dbg !11590
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11591
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11593
  %1 = load i32, i32* %debug, align 8, !dbg !11593
  %cmp = icmp ne i32 %1, 0, !dbg !11594
  br i1 %cmp, label %if.then, label %if.end, !dbg !11595

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11596
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11597
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11596
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10802, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11598
  br label %if.end, !dbg !11599

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11600
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11602
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11602
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11603
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11604

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11605
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11607
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11607
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11608
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11609
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11608
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10805, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11610
  store i32 (i8*, i64, i64, i8*)* null, i32 (i8*, i64, i64, i8*)** %retval, align 8, !dbg !11611
  br label %return, !dbg !11611

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11612
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11613
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11613
  %10 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor.addr, align 8, !dbg !11614
  %11 = load i8*, i8** %client_data.addr, align 8, !dbg !11615
  %call8 = call i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image* %9, i32 (i8*, i64, i64, i8*)* %10, i8* %11), !dbg !11616
  store i32 (i8*, i64, i64, i8*)* %call8, i32 (i8*, i64, i64, i8*)** %previous_monitor, align 8, !dbg !11617
  %12 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %previous_monitor, align 8, !dbg !11618
  store i32 (i8*, i64, i64, i8*)* %12, i32 (i8*, i64, i64, i8*)** %retval, align 8, !dbg !11619
  br label %return, !dbg !11619

return:                                           ; preds = %if.end6, %if.then2
  %13 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %retval, align 8, !dbg !11620
  ret i32 (i8*, i64, i64, i8*)* %13, !dbg !11620
}

declare dso_local i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image*, i32 (i8*, i64, i64, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageRedPrimary(%struct._MagickWand* %wand, double %x, double %y) #0 !dbg !11621 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11622, metadata !DIExpression()), !dbg !11623
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !11624, metadata !DIExpression()), !dbg !11625
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11628
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11630
  %1 = load i32, i32* %debug, align 8, !dbg !11630
  %cmp = icmp ne i32 %1, 0, !dbg !11631
  br i1 %cmp, label %if.then, label %if.end, !dbg !11632

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11633
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11634
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11633
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10847, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11635
  br label %if.end, !dbg !11636

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11637
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11639
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11639
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11640
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11641

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11642
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11642
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11642
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11642
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11642
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11642
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10849, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11642
  store i32 0, i32* %retval, align 4, !dbg !11642
  br label %return, !dbg !11642

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %x.addr, align 8, !dbg !11644
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11645
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11646
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11646
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 16, !dbg !11647
  %red_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 0, !dbg !11648
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary, i32 0, i32 0, !dbg !11649
  store double %8, double* %x8, align 8, !dbg !11650
  %11 = load double, double* %y.addr, align 8, !dbg !11651
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11652
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !11653
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !11653
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !11654
  %red_primary11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 0, !dbg !11655
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary11, i32 0, i32 1, !dbg !11656
  store double %11, double* %y12, align 8, !dbg !11657
  store i32 1, i32* %retval, align 4, !dbg !11658
  br label %return, !dbg !11658

return:                                           ; preds = %if.end6, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !11659
  ret i32 %14, !dbg !11659
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageRenderingIntent(%struct._MagickWand* %wand, i32 %rendering_intent) #0 !dbg !11660 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %rendering_intent.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11664, metadata !DIExpression()), !dbg !11665
  store i32 %rendering_intent, i32* %rendering_intent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rendering_intent.addr, metadata !11666, metadata !DIExpression()), !dbg !11667
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11668
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11670
  %1 = load i32, i32* %debug, align 8, !dbg !11670
  %cmp = icmp ne i32 %1, 0, !dbg !11671
  br i1 %cmp, label %if.then, label %if.end, !dbg !11672

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11673
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11674
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11673
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10887, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11675
  br label %if.end, !dbg !11676

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11677
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11679
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11679
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11680
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11681

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11682
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11682
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11682
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11682
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11682
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11682
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10889, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11682
  store i32 0, i32* %retval, align 4, !dbg !11682
  br label %return, !dbg !11682

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %rendering_intent.addr, align 4, !dbg !11684
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11685
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11686
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11686
  %rendering_intent8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 17, !dbg !11687
  store i32 %8, i32* %rendering_intent8, align 8, !dbg !11688
  store i32 1, i32* %retval, align 4, !dbg !11689
  br label %return, !dbg !11689

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11690
  ret i32 %11, !dbg !11690
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageResolution(%struct._MagickWand* %wand, double %x_resolution, double %y_resolution) #0 !dbg !11691 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x_resolution.addr = alloca double, align 8
  %y_resolution.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11692, metadata !DIExpression()), !dbg !11693
  store double %x_resolution, double* %x_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_resolution.addr, metadata !11694, metadata !DIExpression()), !dbg !11695
  store double %y_resolution, double* %y_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y_resolution.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11698
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11700
  %1 = load i32, i32* %debug, align 8, !dbg !11700
  %cmp = icmp ne i32 %1, 0, !dbg !11701
  br i1 %cmp, label %if.then, label %if.end, !dbg !11702

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11703
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11704
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11703
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10927, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11705
  br label %if.end, !dbg !11706

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11707
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11709
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11709
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11710
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11711

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11712
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11712
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11712
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11712
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11712
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11712
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10929, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11712
  store i32 0, i32* %retval, align 4, !dbg !11712
  br label %return, !dbg !11712

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %x_resolution.addr, align 8, !dbg !11714
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11715
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11716
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11716
  %x_resolution8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 24, !dbg !11717
  store double %8, double* %x_resolution8, align 8, !dbg !11718
  %11 = load double, double* %y_resolution.addr, align 8, !dbg !11719
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11720
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !11721
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !11721
  %y_resolution10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 25, !dbg !11722
  store double %11, double* %y_resolution10, align 8, !dbg !11723
  store i32 1, i32* %retval, align 4, !dbg !11724
  br label %return, !dbg !11724

return:                                           ; preds = %if.end6, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !11725
  ret i32 %14, !dbg !11725
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageScene(%struct._MagickWand* %wand, i64 %scene) #0 !dbg !11726 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %scene.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11727, metadata !DIExpression()), !dbg !11728
  store i64 %scene, i64* %scene.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scene.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11731
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11733
  %1 = load i32, i32* %debug, align 8, !dbg !11733
  %cmp = icmp ne i32 %1, 0, !dbg !11734
  br i1 %cmp, label %if.then, label %if.end, !dbg !11735

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11736
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11737
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11736
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10966, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11738
  br label %if.end, !dbg !11739

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11740
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11742
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11742
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11743
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11744

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11745
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11745
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11745
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11745
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11745
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11745
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 10968, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11745
  store i32 0, i32* %retval, align 4, !dbg !11745
  br label %return, !dbg !11745

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %scene.addr, align 8, !dbg !11747
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11748
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11749
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11749
  %scene8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 39, !dbg !11750
  store i64 %8, i64* %scene8, align 8, !dbg !11751
  store i32 1, i32* %retval, align 4, !dbg !11752
  br label %return, !dbg !11752

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11753
  ret i32 %11, !dbg !11753
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageTicksPerSecond(%struct._MagickWand* %wand, i64 %ticks_per_second) #0 !dbg !11754 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %ticks_per_second.addr = alloca i64, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11755, metadata !DIExpression()), !dbg !11756
  store i64 %ticks_per_second, i64* %ticks_per_second.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ticks_per_second.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11759
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11761
  %1 = load i32, i32* %debug, align 8, !dbg !11761
  %cmp = icmp ne i32 %1, 0, !dbg !11762
  br i1 %cmp, label %if.then, label %if.end, !dbg !11763

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11764
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11765
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11764
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11004, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11766
  br label %if.end, !dbg !11767

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11768
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11770
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11770
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11771
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11772

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11773
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11773
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11773
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11773
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11773
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11773
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11006, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11773
  store i32 0, i32* %retval, align 4, !dbg !11773
  br label %return, !dbg !11773

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %ticks_per_second.addr, align 8, !dbg !11775
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11776
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11777
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11777
  %ticks_per_second8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 41, !dbg !11778
  store i64 %8, i64* %ticks_per_second8, align 8, !dbg !11779
  store i32 1, i32* %retval, align 4, !dbg !11780
  br label %return, !dbg !11780

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11781
  ret i32 %11, !dbg !11781
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageType(%struct._MagickWand* %wand, i32 %image_type) #0 !dbg !11782 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %image_type.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11786, metadata !DIExpression()), !dbg !11787
  store i32 %image_type, i32* %image_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %image_type.addr, metadata !11788, metadata !DIExpression()), !dbg !11789
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11790
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11792
  %1 = load i32, i32* %debug, align 8, !dbg !11792
  %cmp = icmp ne i32 %1, 0, !dbg !11793
  br i1 %cmp, label %if.then, label %if.end, !dbg !11794

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11795
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11796
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11795
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11045, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11797
  br label %if.end, !dbg !11798

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11799
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11801
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11801
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11802
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11803

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11804
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11804
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11804
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11804
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11804
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11804
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11047, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11804
  store i32 0, i32* %retval, align 4, !dbg !11804
  br label %return, !dbg !11804

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11806
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11807
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11807
  %10 = load i32, i32* %image_type.addr, align 4, !dbg !11808
  %call8 = call i32 @SetImageType(%struct._Image* %9, i32 %10), !dbg !11809
  store i32 %call8, i32* %retval, align 4, !dbg !11810
  br label %return, !dbg !11810

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11811
  ret i32 %11, !dbg !11811
}

declare dso_local i32 @SetImageType(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageUnits(%struct._MagickWand* %wand, i32 %units) #0 !dbg !11812 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %units.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  store i32 %units, i32* %units.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %units.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11820
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11822
  %1 = load i32, i32* %debug, align 8, !dbg !11822
  %cmp = icmp ne i32 %1, 0, !dbg !11823
  br i1 %cmp, label %if.then, label %if.end, !dbg !11824

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11825
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11826
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11825
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11083, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11827
  br label %if.end, !dbg !11828

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11829
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11831
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11831
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11832
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11833

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11834
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11834
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11834
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11834
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11834
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11834
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11085, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11834
  store i32 0, i32* %retval, align 4, !dbg !11834
  br label %return, !dbg !11834

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %units.addr, align 4, !dbg !11836
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11837
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11838
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11838
  %units8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 19, !dbg !11839
  store i32 %8, i32* %units8, align 8, !dbg !11840
  store i32 1, i32* %retval, align 4, !dbg !11841
  br label %return, !dbg !11841

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !11842
  ret i32 %11, !dbg !11842
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageVirtualPixelMethod(%struct._MagickWand* %wand, i32 %method) #0 !dbg !11843 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %method.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11847, metadata !DIExpression()), !dbg !11848
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11851
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11853
  %1 = load i32, i32* %debug, align 8, !dbg !11853
  %cmp = icmp ne i32 %1, 0, !dbg !11854
  br i1 %cmp, label %if.then, label %if.end, !dbg !11855

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11856
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11857
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11856
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11858
  br label %if.end, !dbg !11859

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11860
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11862
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11862
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11863
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11864

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11865
  br label %return, !dbg !11865

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11866
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !11867
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !11867
  %7 = load i32, i32* %method.addr, align 4, !dbg !11868
  %call5 = call i32 @SetImageVirtualPixelMethod(%struct._Image* %6, i32 %7), !dbg !11869
  store i32 %call5, i32* %retval, align 4, !dbg !11870
  br label %return, !dbg !11870

return:                                           ; preds = %if.end3, %if.then2
  %8 = load i32, i32* %retval, align 4, !dbg !11871
  ret i32 %8, !dbg !11871
}

declare dso_local i32 @SetImageVirtualPixelMethod(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSetImageWhitePoint(%struct._MagickWand* %wand, double %x, double %y) #0 !dbg !11872 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11873, metadata !DIExpression()), !dbg !11874
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !11875, metadata !DIExpression()), !dbg !11876
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !11877, metadata !DIExpression()), !dbg !11878
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11879
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11881
  %1 = load i32, i32* %debug, align 8, !dbg !11881
  %cmp = icmp ne i32 %1, 0, !dbg !11882
  br i1 %cmp, label %if.then, label %if.end, !dbg !11883

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11884
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11885
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11884
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11162, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11886
  br label %if.end, !dbg !11887

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11888
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11890
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11890
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11891
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11892

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11893
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11893
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11893
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11893
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11893
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11893
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11164, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11893
  store i32 0, i32* %retval, align 4, !dbg !11893
  br label %return, !dbg !11893

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %x.addr, align 8, !dbg !11895
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11896
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !11897
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11897
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 16, !dbg !11898
  %white_point = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity, i32 0, i32 3, !dbg !11899
  %x8 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point, i32 0, i32 0, !dbg !11900
  store double %8, double* %x8, align 8, !dbg !11901
  %11 = load double, double* %y.addr, align 8, !dbg !11902
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11903
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !11904
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !11904
  %chromaticity10 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 16, !dbg !11905
  %white_point11 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity10, i32 0, i32 3, !dbg !11906
  %y12 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point11, i32 0, i32 1, !dbg !11907
  store double %11, double* %y12, align 8, !dbg !11908
  store i32 1, i32* %retval, align 4, !dbg !11909
  br label %return, !dbg !11909

return:                                           ; preds = %if.end6, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !11910
  ret i32 %14, !dbg !11910
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickShadeImage(%struct._MagickWand* %wand, i32 %gray, double %asimuth, double %elevation) #0 !dbg !11911 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %gray.addr = alloca i32, align 4
  %asimuth.addr = alloca double, align 8
  %elevation.addr = alloca double, align 8
  %shade_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11914, metadata !DIExpression()), !dbg !11915
  store i32 %gray, i32* %gray.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gray.addr, metadata !11916, metadata !DIExpression()), !dbg !11917
  store double %asimuth, double* %asimuth.addr, align 8
  call void @llvm.dbg.declare(metadata double* %asimuth.addr, metadata !11918, metadata !DIExpression()), !dbg !11919
  store double %elevation, double* %elevation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %elevation.addr, metadata !11920, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.declare(metadata %struct._Image** %shade_image, metadata !11922, metadata !DIExpression()), !dbg !11923
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11924
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11926
  %1 = load i32, i32* %debug, align 8, !dbg !11926
  %cmp = icmp ne i32 %1, 0, !dbg !11927
  br i1 %cmp, label %if.then, label %if.end, !dbg !11928

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11929
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11930
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11929
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11210, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11931
  br label %if.end, !dbg !11932

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11933
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11935
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11935
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11936
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11937

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11938
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11938
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11938
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11938
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11938
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11938
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11212, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11938
  store i32 0, i32* %retval, align 4, !dbg !11938
  br label %return, !dbg !11938

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11940
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11941
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11941
  %10 = load i32, i32* %gray.addr, align 4, !dbg !11942
  %11 = load double, double* %asimuth.addr, align 8, !dbg !11943
  %12 = load double, double* %elevation.addr, align 8, !dbg !11944
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11945
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !11946
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !11946
  %call9 = call %struct._Image* @ShadeImage(%struct._Image* %9, i32 %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !11947
  store %struct._Image* %call9, %struct._Image** %shade_image, align 8, !dbg !11948
  %15 = load %struct._Image*, %struct._Image** %shade_image, align 8, !dbg !11949
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !11951
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11952

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !11953
  br label %return, !dbg !11953

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11954
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !11955
  %17 = load %struct._Image*, %struct._Image** %shade_image, align 8, !dbg !11956
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !11957
  store i32 1, i32* %retval, align 4, !dbg !11958
  br label %return, !dbg !11958

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !11959
  ret i32 %18, !dbg !11959
}

declare dso_local %struct._Image* @ShadeImage(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickShadowImage(%struct._MagickWand* %wand, double %opacity, double %sigma, i64 %x, i64 %y) #0 !dbg !11960 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %opacity.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %shadow_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !11963, metadata !DIExpression()), !dbg !11964
  store double %opacity, double* %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %opacity.addr, metadata !11965, metadata !DIExpression()), !dbg !11966
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !11967, metadata !DIExpression()), !dbg !11968
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !11969, metadata !DIExpression()), !dbg !11970
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !11971, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.declare(metadata %struct._Image** %shadow_image, metadata !11973, metadata !DIExpression()), !dbg !11974
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11975
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !11977
  %1 = load i32, i32* %debug, align 8, !dbg !11977
  %cmp = icmp ne i32 %1, 0, !dbg !11978
  br i1 %cmp, label %if.then, label %if.end, !dbg !11979

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11980
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !11981
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !11980
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11260, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !11982
  br label %if.end, !dbg !11983

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11984
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !11986
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !11986
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !11987
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !11988

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11989
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !11989
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11989
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11989
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !11989
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !11989
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11262, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !11989
  store i32 0, i32* %retval, align 4, !dbg !11989
  br label %return, !dbg !11989

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11991
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !11992
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !11992
  %10 = load double, double* %opacity.addr, align 8, !dbg !11993
  %11 = load double, double* %sigma.addr, align 8, !dbg !11994
  %12 = load i64, i64* %x.addr, align 8, !dbg !11995
  %13 = load i64, i64* %y.addr, align 8, !dbg !11996
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !11997
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !11998
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !11998
  %call9 = call %struct._Image* @ShadowImage(%struct._Image* %9, double %10, double %11, i64 %12, i64 %13, %struct._ExceptionInfo* %15), !dbg !11999
  store %struct._Image* %call9, %struct._Image** %shadow_image, align 8, !dbg !12000
  %16 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !12001
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !12003
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12004

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12005
  br label %return, !dbg !12005

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12006
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !12007
  %18 = load %struct._Image*, %struct._Image** %shadow_image, align 8, !dbg !12008
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !12009
  store i32 1, i32* %retval, align 4, !dbg !12010
  br label %return, !dbg !12010

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !12011
  ret i32 %19, !dbg !12011
}

declare dso_local %struct._Image* @ShadowImage(%struct._Image*, double, double, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSharpenImage(%struct._MagickWand* %wand, double %radius, double %sigma) #0 !dbg !12012 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12013, metadata !DIExpression()), !dbg !12014
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !12015, metadata !DIExpression()), !dbg !12016
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !12017, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12019, metadata !DIExpression()), !dbg !12020
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12021
  %1 = load double, double* %radius.addr, align 8, !dbg !12022
  %2 = load double, double* %sigma.addr, align 8, !dbg !12023
  %call = call i32 @MagickSharpenImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2), !dbg !12024
  store i32 %call, i32* %status, align 4, !dbg !12025
  %3 = load i32, i32* %status, align 4, !dbg !12026
  ret i32 %3, !dbg !12027
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSharpenImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma) #0 !dbg !12028 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %sharp_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12029, metadata !DIExpression()), !dbg !12030
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12031, metadata !DIExpression()), !dbg !12032
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !12033, metadata !DIExpression()), !dbg !12034
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !12035, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.declare(metadata %struct._Image** %sharp_image, metadata !12037, metadata !DIExpression()), !dbg !12038
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12039
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12041
  %1 = load i32, i32* %debug, align 8, !dbg !12041
  %cmp = icmp ne i32 %1, 0, !dbg !12042
  br i1 %cmp, label %if.then, label %if.end, !dbg !12043

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12044
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12045
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12044
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11325, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12046
  br label %if.end, !dbg !12047

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12048
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12050
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12050
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12051
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12052

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12053
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12053
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12053
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12053
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12053
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12053
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11327, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12053
  store i32 0, i32* %retval, align 4, !dbg !12053
  br label %return, !dbg !12053

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12055
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12056
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12056
  %10 = load i32, i32* %channel.addr, align 4, !dbg !12057
  %11 = load double, double* %radius.addr, align 8, !dbg !12058
  %12 = load double, double* %sigma.addr, align 8, !dbg !12059
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12060
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !12061
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12061
  %call9 = call %struct._Image* @SharpenImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !12062
  store %struct._Image* %call9, %struct._Image** %sharp_image, align 8, !dbg !12063
  %15 = load %struct._Image*, %struct._Image** %sharp_image, align 8, !dbg !12064
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !12066
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12067

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12068
  br label %return, !dbg !12068

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12069
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !12070
  %17 = load %struct._Image*, %struct._Image** %sharp_image, align 8, !dbg !12071
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !12072
  store i32 1, i32* %retval, align 4, !dbg !12073
  br label %return, !dbg !12073

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !12074
  ret i32 %18, !dbg !12074
}

declare dso_local %struct._Image* @SharpenImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickShaveImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows) #0 !dbg !12075 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %shave_image = alloca %struct._Image*, align 8
  %shave_info = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12076, metadata !DIExpression()), !dbg !12077
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !12078, metadata !DIExpression()), !dbg !12079
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !12080, metadata !DIExpression()), !dbg !12081
  call void @llvm.dbg.declare(metadata %struct._Image** %shave_image, metadata !12082, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %shave_info, metadata !12084, metadata !DIExpression()), !dbg !12085
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12086
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12088
  %1 = load i32, i32* %debug, align 8, !dbg !12088
  %cmp = icmp ne i32 %1, 0, !dbg !12089
  br i1 %cmp, label %if.then, label %if.end, !dbg !12090

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12091
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12092
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12091
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11378, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12093
  br label %if.end, !dbg !12094

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12095
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12097
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12097
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12098
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12099

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12100
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12100
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12100
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12100
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12100
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12100
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11380, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12100
  store i32 0, i32* %retval, align 4, !dbg !12100
  br label %return, !dbg !12100

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %columns.addr, align 8, !dbg !12102
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %shave_info, i32 0, i32 0, !dbg !12103
  store i64 %8, i64* %width, align 8, !dbg !12104
  %9 = load i64, i64* %rows.addr, align 8, !dbg !12105
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %shave_info, i32 0, i32 1, !dbg !12106
  store i64 %9, i64* %height, align 8, !dbg !12107
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %shave_info, i32 0, i32 2, !dbg !12108
  store i64 0, i64* %x, align 8, !dbg !12109
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %shave_info, i32 0, i32 3, !dbg !12110
  store i64 0, i64* %y, align 8, !dbg !12111
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12112
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !12113
  %11 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12113
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12114
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !12115
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12115
  %call9 = call %struct._Image* @ShaveImage(%struct._Image* %11, %struct._RectangleInfo* %shave_info, %struct._ExceptionInfo* %13), !dbg !12116
  store %struct._Image* %call9, %struct._Image** %shave_image, align 8, !dbg !12117
  %14 = load %struct._Image*, %struct._Image** %shave_image, align 8, !dbg !12118
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !12120
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12121

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12122
  br label %return, !dbg !12122

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12123
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !12124
  %16 = load %struct._Image*, %struct._Image** %shave_image, align 8, !dbg !12125
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !12126
  store i32 1, i32* %retval, align 4, !dbg !12127
  br label %return, !dbg !12127

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !12128
  ret i32 %17, !dbg !12128
}

declare dso_local %struct._Image* @ShaveImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickShearImage(%struct._MagickWand* %wand, %struct._PixelWand* %background, double %x_shear, double %y_shear) #0 !dbg !12129 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %background.addr = alloca %struct._PixelWand*, align 8
  %x_shear.addr = alloca double, align 8
  %y_shear.addr = alloca double, align 8
  %shear_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12132, metadata !DIExpression()), !dbg !12133
  store %struct._PixelWand* %background, %struct._PixelWand** %background.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %background.addr, metadata !12134, metadata !DIExpression()), !dbg !12135
  store double %x_shear, double* %x_shear.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_shear.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  store double %y_shear, double* %y_shear.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y_shear.addr, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata %struct._Image** %shear_image, metadata !12140, metadata !DIExpression()), !dbg !12141
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12142
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12144
  %1 = load i32, i32* %debug, align 8, !dbg !12144
  %cmp = icmp ne i32 %1, 0, !dbg !12145
  br i1 %cmp, label %if.then, label %if.end, !dbg !12146

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12147
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12148
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12147
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11436, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12149
  br label %if.end, !dbg !12150

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12151
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12153
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12153
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12154
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12155

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12156
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12156
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12156
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12156
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12156
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12156
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11438, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12156
  store i32 0, i32* %retval, align 4, !dbg !12156
  br label %return, !dbg !12156

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %background.addr, align 8, !dbg !12158
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12159
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !12160
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12160
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 12, !dbg !12161
  call void @PixelGetQuantumColor(%struct._PixelWand* %8, %struct._PixelPacket* %background_color), !dbg !12162
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12163
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !12164
  %12 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !12164
  %13 = load double, double* %x_shear.addr, align 8, !dbg !12165
  %14 = load double, double* %y_shear.addr, align 8, !dbg !12166
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12167
  %exception9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !12168
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !12168
  %call10 = call %struct._Image* @ShearImage(%struct._Image* %12, double %13, double %14, %struct._ExceptionInfo* %16), !dbg !12169
  store %struct._Image* %call10, %struct._Image** %shear_image, align 8, !dbg !12170
  %17 = load %struct._Image*, %struct._Image** %shear_image, align 8, !dbg !12171
  %cmp11 = icmp eq %struct._Image* %17, null, !dbg !12173
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !12174

if.then12:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12175
  br label %return, !dbg !12175

if.end13:                                         ; preds = %if.end6
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12176
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !12177
  %19 = load %struct._Image*, %struct._Image** %shear_image, align 8, !dbg !12178
  call void @ReplaceImageInList(%struct._Image** %images14, %struct._Image* %19), !dbg !12179
  store i32 1, i32* %retval, align 4, !dbg !12180
  br label %return, !dbg !12180

return:                                           ; preds = %if.end13, %if.then12, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !12181
  ret i32 %20, !dbg !12181
}

declare dso_local %struct._Image* @ShearImage(%struct._Image*, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSigmoidalContrastImage(%struct._MagickWand* %wand, i32 %sharpen, double %alpha, double %beta) #0 !dbg !12182 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %sharpen.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %beta.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12183, metadata !DIExpression()), !dbg !12184
  store i32 %sharpen, i32* %sharpen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sharpen.addr, metadata !12185, metadata !DIExpression()), !dbg !12186
  store double %alpha, double* %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double* %alpha.addr, metadata !12187, metadata !DIExpression()), !dbg !12188
  store double %beta, double* %beta.addr, align 8
  call void @llvm.dbg.declare(metadata double* %beta.addr, metadata !12189, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12191, metadata !DIExpression()), !dbg !12192
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12193
  %1 = load i32, i32* %sharpen.addr, align 4, !dbg !12194
  %2 = load double, double* %alpha.addr, align 8, !dbg !12195
  %3 = load double, double* %beta.addr, align 8, !dbg !12196
  %call = call i32 @MagickSigmoidalContrastImageChannel(%struct._MagickWand* %0, i32 134217719, i32 %1, double %2, double %3), !dbg !12197
  store i32 %call, i32* %status, align 4, !dbg !12198
  %4 = load i32, i32* %status, align 4, !dbg !12199
  ret i32 %4, !dbg !12200
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSigmoidalContrastImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %sharpen, double %alpha, double %beta) #0 !dbg !12201 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %sharpen.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %beta.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12204, metadata !DIExpression()), !dbg !12205
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12206, metadata !DIExpression()), !dbg !12207
  store i32 %sharpen, i32* %sharpen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sharpen.addr, metadata !12208, metadata !DIExpression()), !dbg !12209
  store double %alpha, double* %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double* %alpha.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  store double %beta, double* %beta.addr, align 8
  call void @llvm.dbg.declare(metadata double* %beta.addr, metadata !12212, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12214, metadata !DIExpression()), !dbg !12215
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12216
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12218
  %1 = load i32, i32* %debug, align 8, !dbg !12218
  %cmp = icmp ne i32 %1, 0, !dbg !12219
  br i1 %cmp, label %if.then, label %if.end, !dbg !12220

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12221
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12222
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12221
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11511, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12223
  br label %if.end, !dbg !12224

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12225
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12227
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12227
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12228
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12229

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12230
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12230
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12230
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12230
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12230
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12230
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11513, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12230
  store i32 0, i32* %retval, align 4, !dbg !12230
  br label %return, !dbg !12230

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12232
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12233
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12233
  %10 = load i32, i32* %channel.addr, align 4, !dbg !12234
  %11 = load i32, i32* %sharpen.addr, align 4, !dbg !12235
  %12 = load double, double* %alpha.addr, align 8, !dbg !12236
  %13 = load double, double* %beta.addr, align 8, !dbg !12237
  %call8 = call i32 @SigmoidalContrastImageChannel(%struct._Image* %9, i32 %10, i32 %11, double %12, double %13), !dbg !12238
  store i32 %call8, i32* %status, align 4, !dbg !12239
  %14 = load i32, i32* %status, align 4, !dbg !12240
  %cmp9 = icmp eq i32 %14, 0, !dbg !12242
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !12243

if.then10:                                        ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12244
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !12245
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !12245
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12246
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !12247
  %18 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !12247
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !12248
  call void @InheritException(%struct._ExceptionInfo* %16, %struct._ExceptionInfo* %exception13), !dbg !12249
  br label %if.end14, !dbg !12249

if.end14:                                         ; preds = %if.then10, %if.end6
  %19 = load i32, i32* %status, align 4, !dbg !12250
  store i32 %19, i32* %retval, align 4, !dbg !12251
  br label %return, !dbg !12251

return:                                           ; preds = %if.end14, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !12252
  ret i32 %20, !dbg !12252
}

declare dso_local i32 @SigmoidalContrastImageChannel(%struct._Image*, i32, i32, double, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickSimilarityImage(%struct._MagickWand* %wand, %struct._MagickWand* %reference, %struct._RectangleInfo* %offset, double* %similarity) #0 !dbg !12253 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %reference.addr = alloca %struct._MagickWand*, align 8
  %offset.addr = alloca %struct._RectangleInfo*, align 8
  %similarity.addr = alloca double*, align 8
  %similarity_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12257, metadata !DIExpression()), !dbg !12258
  store %struct._MagickWand* %reference, %struct._MagickWand** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %reference.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  store %struct._RectangleInfo* %offset, %struct._RectangleInfo** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %offset.addr, metadata !12261, metadata !DIExpression()), !dbg !12262
  store double* %similarity, double** %similarity.addr, align 8
  call void @llvm.dbg.declare(metadata double** %similarity.addr, metadata !12263, metadata !DIExpression()), !dbg !12264
  call void @llvm.dbg.declare(metadata %struct._Image** %similarity_image, metadata !12265, metadata !DIExpression()), !dbg !12266
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12267
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12269
  %1 = load i32, i32* %debug, align 8, !dbg !12269
  %cmp = icmp ne i32 %1, 0, !dbg !12270
  br i1 %cmp, label %if.then, label %if.end, !dbg !12271

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12272
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12273
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12272
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11561, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12274
  br label %if.end, !dbg !12275

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12276
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12278
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12278
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12279
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !12280

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !12281
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !12282
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !12282
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !12283
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !12284

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12285
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !12287
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12287
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12288
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !12289
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !12288
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11564, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !12290
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12291
  br label %return, !dbg !12291

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12292
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !12293
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !12293
  %12 = load %struct._MagickWand*, %struct._MagickWand** %reference.addr, align 8, !dbg !12294
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !12295
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !12295
  %14 = load %struct._RectangleInfo*, %struct._RectangleInfo** %offset.addr, align 8, !dbg !12296
  %15 = load double*, double** %similarity.addr, align 8, !dbg !12297
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12298
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !12299
  %17 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !12299
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !12300
  %call13 = call %struct._Image* @SimilarityImage(%struct._Image* %11, %struct._Image* %13, %struct._RectangleInfo* %14, double* %15, %struct._ExceptionInfo* %exception12), !dbg !12301
  store %struct._Image* %call13, %struct._Image** %similarity_image, align 8, !dbg !12302
  %18 = load %struct._Image*, %struct._Image** %similarity_image, align 8, !dbg !12303
  %cmp14 = icmp eq %struct._Image* %18, null, !dbg !12305
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !12306

if.then15:                                        ; preds = %if.end8
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12307
  br label %return, !dbg !12307

if.end16:                                         ; preds = %if.end8
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12308
  %20 = load %struct._Image*, %struct._Image** %similarity_image, align 8, !dbg !12309
  %call17 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %19, %struct._Image* %20), !dbg !12310
  store %struct._MagickWand* %call17, %struct._MagickWand** %retval, align 8, !dbg !12311
  br label %return, !dbg !12311

return:                                           ; preds = %if.end16, %if.then15, %if.then4
  %21 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !12312
  ret %struct._MagickWand* %21, !dbg !12312
}

declare dso_local %struct._Image* @SimilarityImage(%struct._Image*, %struct._Image*, %struct._RectangleInfo*, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSketchImage(%struct._MagickWand* %wand, double %radius, double %sigma, double %angle) #0 !dbg !12313 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %angle.addr = alloca double, align 8
  %sketch_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12314, metadata !DIExpression()), !dbg !12315
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !12316, metadata !DIExpression()), !dbg !12317
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !12318, metadata !DIExpression()), !dbg !12319
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !12320, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.declare(metadata %struct._Image** %sketch_image, metadata !12322, metadata !DIExpression()), !dbg !12323
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12324
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12326
  %1 = load i32, i32* %debug, align 8, !dbg !12326
  %cmp = icmp ne i32 %1, 0, !dbg !12327
  br i1 %cmp, label %if.then, label %if.end, !dbg !12328

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12329
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12330
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12329
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11618, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12331
  br label %if.end, !dbg !12332

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12333
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12335
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12335
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12336
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12337

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12338
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12338
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12338
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12338
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12338
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12338
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11620, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12338
  store i32 0, i32* %retval, align 4, !dbg !12338
  br label %return, !dbg !12338

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12340
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12341
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12341
  %10 = load double, double* %radius.addr, align 8, !dbg !12342
  %11 = load double, double* %sigma.addr, align 8, !dbg !12343
  %12 = load double, double* %angle.addr, align 8, !dbg !12344
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12345
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !12346
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12346
  %call9 = call %struct._Image* @SketchImage(%struct._Image* %9, double %10, double %11, double %12, %struct._ExceptionInfo* %14), !dbg !12347
  store %struct._Image* %call9, %struct._Image** %sketch_image, align 8, !dbg !12348
  %15 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !12349
  %cmp10 = icmp eq %struct._Image* %15, null, !dbg !12351
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12352

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12353
  br label %return, !dbg !12353

if.end12:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12354
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !12355
  %17 = load %struct._Image*, %struct._Image** %sketch_image, align 8, !dbg !12356
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %17), !dbg !12357
  store i32 1, i32* %retval, align 4, !dbg !12358
  br label %return, !dbg !12358

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !12359
  ret i32 %18, !dbg !12359
}

declare dso_local %struct._Image* @SketchImage(%struct._Image*, double, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickSmushImages(%struct._MagickWand* %wand, i32 %stack, i64 %offset) #0 !dbg !12360 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %stack.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %smush_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12363, metadata !DIExpression()), !dbg !12364
  store i32 %stack, i32* %stack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stack.addr, metadata !12365, metadata !DIExpression()), !dbg !12366
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !12367, metadata !DIExpression()), !dbg !12368
  call void @llvm.dbg.declare(metadata %struct._Image** %smush_image, metadata !12369, metadata !DIExpression()), !dbg !12370
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12371
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12373
  %1 = load i32, i32* %debug, align 8, !dbg !12373
  %cmp = icmp ne i32 %1, 0, !dbg !12374
  br i1 %cmp, label %if.then, label %if.end, !dbg !12375

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12376
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12377
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12376
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11667, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12378
  br label %if.end, !dbg !12379

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12380
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12382
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12382
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12383
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12384

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12385
  br label %return, !dbg !12385

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12386
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !12387
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !12387
  %7 = load i32, i32* %stack.addr, align 4, !dbg !12388
  %8 = load i64, i64* %offset.addr, align 8, !dbg !12389
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12390
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 2, !dbg !12391
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12391
  %call5 = call %struct._Image* @SmushImages(%struct._Image* %6, i32 %7, i64 %8, %struct._ExceptionInfo* %10), !dbg !12392
  store %struct._Image* %call5, %struct._Image** %smush_image, align 8, !dbg !12393
  %11 = load %struct._Image*, %struct._Image** %smush_image, align 8, !dbg !12394
  %cmp6 = icmp eq %struct._Image* %11, null, !dbg !12396
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !12397

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12398
  br label %return, !dbg !12398

if.end8:                                          ; preds = %if.end3
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12399
  %13 = load %struct._Image*, %struct._Image** %smush_image, align 8, !dbg !12400
  %call9 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %12, %struct._Image* %13), !dbg !12401
  store %struct._MagickWand* %call9, %struct._MagickWand** %retval, align 8, !dbg !12402
  br label %return, !dbg !12402

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %14 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !12403
  ret %struct._MagickWand* %14, !dbg !12403
}

declare dso_local %struct._Image* @SmushImages(%struct._Image*, i32, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSolarizeImage(%struct._MagickWand* %wand, double %threshold) #0 !dbg !12404 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12405, metadata !DIExpression()), !dbg !12406
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !12407, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12409, metadata !DIExpression()), !dbg !12410
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12411
  %1 = load double, double* %threshold.addr, align 8, !dbg !12412
  %call = call i32 @MagickSolarizeImageChannel(%struct._MagickWand* %0, i32 134217719, double %1), !dbg !12413
  store i32 %call, i32* %status, align 4, !dbg !12414
  %2 = load i32, i32* %status, align 4, !dbg !12415
  ret i32 %2, !dbg !12416
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSolarizeImageChannel(%struct._MagickWand* %wand, i32 %channel, double %threshold) #0 !dbg !12417 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12418, metadata !DIExpression()), !dbg !12419
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12420, metadata !DIExpression()), !dbg !12421
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !12422, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12424, metadata !DIExpression()), !dbg !12425
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12426
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12428
  %1 = load i32, i32* %debug, align 8, !dbg !12428
  %cmp = icmp ne i32 %1, 0, !dbg !12429
  br i1 %cmp, label %if.then, label %if.end, !dbg !12430

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12431
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12432
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12431
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11727, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12433
  br label %if.end, !dbg !12434

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12435
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12437
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12437
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12438
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12439

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12440
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12440
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12440
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12440
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12440
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12440
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11729, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12440
  store i32 0, i32* %retval, align 4, !dbg !12440
  br label %return, !dbg !12440

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12442
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12443
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12443
  %10 = load i32, i32* %channel.addr, align 4, !dbg !12444
  %11 = load double, double* %threshold.addr, align 8, !dbg !12445
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12446
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !12447
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12447
  %call9 = call i32 @SolarizeImageChannel(%struct._Image* %9, i32 %10, double %11, %struct._ExceptionInfo* %13), !dbg !12448
  store i32 %call9, i32* %status, align 4, !dbg !12449
  %14 = load i32, i32* %status, align 4, !dbg !12450
  store i32 %14, i32* %retval, align 4, !dbg !12451
  br label %return, !dbg !12451

return:                                           ; preds = %if.end6, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !12452
  ret i32 %15, !dbg !12452
}

declare dso_local i32 @SolarizeImageChannel(%struct._Image*, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSparseColorImage(%struct._MagickWand* %wand, i32 %channel, i32 %method, i64 %number_arguments, double* %arguments) #0 !dbg !12453 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %number_arguments.addr = alloca i64, align 8
  %arguments.addr = alloca double*, align 8
  %sparse_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12458, metadata !DIExpression()), !dbg !12459
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12460, metadata !DIExpression()), !dbg !12461
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !12462, metadata !DIExpression()), !dbg !12463
  store i64 %number_arguments, i64* %number_arguments.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_arguments.addr, metadata !12464, metadata !DIExpression()), !dbg !12465
  store double* %arguments, double** %arguments.addr, align 8
  call void @llvm.dbg.declare(metadata double** %arguments.addr, metadata !12466, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.declare(metadata %struct._Image** %sparse_image, metadata !12468, metadata !DIExpression()), !dbg !12469
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12470
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12472
  %1 = load i32, i32* %debug, align 8, !dbg !12472
  %cmp = icmp ne i32 %1, 0, !dbg !12473
  br i1 %cmp, label %if.then, label %if.end, !dbg !12474

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12475
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12476
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12475
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11795, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12477
  br label %if.end, !dbg !12478

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12479
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12481
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12481
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12482
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12483

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12484
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12484
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12484
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12484
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12484
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12484
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11797, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12484
  store i32 0, i32* %retval, align 4, !dbg !12484
  br label %return, !dbg !12484

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12486
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12487
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12487
  %10 = load i32, i32* %channel.addr, align 4, !dbg !12488
  %11 = load i32, i32* %method.addr, align 4, !dbg !12489
  %12 = load i64, i64* %number_arguments.addr, align 8, !dbg !12490
  %13 = load double*, double** %arguments.addr, align 8, !dbg !12491
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12492
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !12493
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12493
  %call9 = call %struct._Image* @SparseColorImage(%struct._Image* %9, i32 %10, i32 %11, i64 %12, double* %13, %struct._ExceptionInfo* %15), !dbg !12494
  store %struct._Image* %call9, %struct._Image** %sparse_image, align 8, !dbg !12495
  %16 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !12496
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !12498
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12499

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12500
  br label %return, !dbg !12500

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12501
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !12502
  %18 = load %struct._Image*, %struct._Image** %sparse_image, align 8, !dbg !12503
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !12504
  store i32 1, i32* %retval, align 4, !dbg !12505
  br label %return, !dbg !12505

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !12506
  ret i32 %19, !dbg !12506
}

declare dso_local %struct._Image* @SparseColorImage(%struct._Image*, i32, i32, i64, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSpliceImage(%struct._MagickWand* %wand, i64 %width, i64 %height, i64 %x, i64 %y) #0 !dbg !12507 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %splice_image = alloca %struct._Image*, align 8
  %splice = alloca %struct._RectangleInfo, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12508, metadata !DIExpression()), !dbg !12509
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12510, metadata !DIExpression()), !dbg !12511
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12512, metadata !DIExpression()), !dbg !12513
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !12514, metadata !DIExpression()), !dbg !12515
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !12516, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.declare(metadata %struct._Image** %splice_image, metadata !12518, metadata !DIExpression()), !dbg !12519
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %splice, metadata !12520, metadata !DIExpression()), !dbg !12521
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12522
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12524
  %1 = load i32, i32* %debug, align 8, !dbg !12524
  %cmp = icmp ne i32 %1, 0, !dbg !12525
  br i1 %cmp, label %if.then, label %if.end, !dbg !12526

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12527
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12528
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12527
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11851, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12529
  br label %if.end, !dbg !12530

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12531
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12533
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12533
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12534
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12535

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12536
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12536
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12536
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12536
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12536
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12536
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11853, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12536
  store i32 0, i32* %retval, align 4, !dbg !12536
  br label %return, !dbg !12536

if.end6:                                          ; preds = %if.end
  %8 = load i64, i64* %width.addr, align 8, !dbg !12538
  %width7 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %splice, i32 0, i32 0, !dbg !12539
  store i64 %8, i64* %width7, align 8, !dbg !12540
  %9 = load i64, i64* %height.addr, align 8, !dbg !12541
  %height8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %splice, i32 0, i32 1, !dbg !12542
  store i64 %9, i64* %height8, align 8, !dbg !12543
  %10 = load i64, i64* %x.addr, align 8, !dbg !12544
  %x9 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %splice, i32 0, i32 2, !dbg !12545
  store i64 %10, i64* %x9, align 8, !dbg !12546
  %11 = load i64, i64* %y.addr, align 8, !dbg !12547
  %y10 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %splice, i32 0, i32 3, !dbg !12548
  store i64 %11, i64* %y10, align 8, !dbg !12549
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12550
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !12551
  %13 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !12551
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12552
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !12553
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !12553
  %call13 = call %struct._Image* @SpliceImage(%struct._Image* %13, %struct._RectangleInfo* %splice, %struct._ExceptionInfo* %15), !dbg !12554
  store %struct._Image* %call13, %struct._Image** %splice_image, align 8, !dbg !12555
  %16 = load %struct._Image*, %struct._Image** %splice_image, align 8, !dbg !12556
  %cmp14 = icmp eq %struct._Image* %16, null, !dbg !12558
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !12559

if.then15:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12560
  br label %return, !dbg !12560

if.end16:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12561
  %images17 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !12562
  %18 = load %struct._Image*, %struct._Image** %splice_image, align 8, !dbg !12563
  call void @ReplaceImageInList(%struct._Image** %images17, %struct._Image* %18), !dbg !12564
  store i32 1, i32* %retval, align 4, !dbg !12565
  br label %return, !dbg !12565

return:                                           ; preds = %if.end16, %if.then15, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !12566
  ret i32 %19, !dbg !12566
}

declare dso_local %struct._Image* @SpliceImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSpreadImage(%struct._MagickWand* %wand, double %radius) #0 !dbg !12567 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %spread_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12568, metadata !DIExpression()), !dbg !12569
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.declare(metadata %struct._Image** %spread_image, metadata !12572, metadata !DIExpression()), !dbg !12573
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12574
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12576
  %1 = load i32, i32* %debug, align 8, !dbg !12576
  %cmp = icmp ne i32 %1, 0, !dbg !12577
  br i1 %cmp, label %if.then, label %if.end, !dbg !12578

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12579
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12580
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12579
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11899, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12581
  br label %if.end, !dbg !12582

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12583
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12585
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12585
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12586
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12587

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12588
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12588
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12588
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12588
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12588
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12588
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11901, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12588
  store i32 0, i32* %retval, align 4, !dbg !12588
  br label %return, !dbg !12588

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12590
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12591
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12591
  %10 = load double, double* %radius.addr, align 8, !dbg !12592
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12593
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !12594
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12594
  %call9 = call %struct._Image* @SpreadImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !12595
  store %struct._Image* %call9, %struct._Image** %spread_image, align 8, !dbg !12596
  %13 = load %struct._Image*, %struct._Image** %spread_image, align 8, !dbg !12597
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !12599
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12600

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12601
  br label %return, !dbg !12601

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12602
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !12603
  %15 = load %struct._Image*, %struct._Image** %spread_image, align 8, !dbg !12604
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !12605
  store i32 1, i32* %retval, align 4, !dbg !12606
  br label %return, !dbg !12606

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !12607
  ret i32 %16, !dbg !12607
}

declare dso_local %struct._Image* @SpreadImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickStatisticImage(%struct._MagickWand* %wand, i32 %type, i64 %width, i64 %height) #0 !dbg !12608 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %type.addr = alloca i32, align 4
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12613, metadata !DIExpression()), !dbg !12614
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12615, metadata !DIExpression()), !dbg !12616
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12617, metadata !DIExpression()), !dbg !12618
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12619, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12621, metadata !DIExpression()), !dbg !12622
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12623
  %1 = load i32, i32* %type.addr, align 4, !dbg !12624
  %2 = load i64, i64* %width.addr, align 8, !dbg !12625
  %3 = load i64, i64* %height.addr, align 8, !dbg !12626
  %call = call i32 @MagickStatisticImageChannel(%struct._MagickWand* %0, i32 134217719, i32 %1, i64 %2, i64 %3), !dbg !12627
  store i32 %call, i32* %status, align 4, !dbg !12628
  %4 = load i32, i32* %status, align 4, !dbg !12629
  ret i32 %4, !dbg !12630
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickStatisticImageChannel(%struct._MagickWand* %wand, i32 %channel, i32 %type, i64 %width, i64 %height) #0 !dbg !12631 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %statistic_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12634, metadata !DIExpression()), !dbg !12635
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12636, metadata !DIExpression()), !dbg !12637
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12638, metadata !DIExpression()), !dbg !12639
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12640, metadata !DIExpression()), !dbg !12641
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12642, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.declare(metadata %struct._Image** %statistic_image, metadata !12644, metadata !DIExpression()), !dbg !12645
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12646
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12648
  %1 = load i32, i32* %debug, align 8, !dbg !12648
  %cmp = icmp ne i32 %1, 0, !dbg !12649
  br i1 %cmp, label %if.then, label %if.end, !dbg !12650

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12651
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12652
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12651
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11965, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12653
  br label %if.end, !dbg !12654

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12655
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12657
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12657
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12658
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12659

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12660
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12660
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12660
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12660
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12660
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12660
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 11967, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12660
  store i32 0, i32* %retval, align 4, !dbg !12660
  br label %return, !dbg !12660

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12662
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12663
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12663
  %10 = load i32, i32* %channel.addr, align 4, !dbg !12664
  %11 = load i32, i32* %type.addr, align 4, !dbg !12665
  %12 = load i64, i64* %width.addr, align 8, !dbg !12666
  %13 = load i64, i64* %height.addr, align 8, !dbg !12667
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12668
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !12669
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12669
  %call9 = call %struct._Image* @StatisticImageChannel(%struct._Image* %9, i32 %10, i32 %11, i64 %12, i64 %13, %struct._ExceptionInfo* %15), !dbg !12670
  store %struct._Image* %call9, %struct._Image** %statistic_image, align 8, !dbg !12671
  %16 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !12672
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !12674
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12675

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12676
  br label %return, !dbg !12676

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12677
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !12678
  %18 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !12679
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !12680
  store i32 1, i32* %retval, align 4, !dbg !12681
  br label %return, !dbg !12681

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !12682
  ret i32 %19, !dbg !12682
}

declare dso_local %struct._Image* @StatisticImageChannel(%struct._Image*, i32, i32, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickSteganoImage(%struct._MagickWand* %wand, %struct._MagickWand* %watermark_wand, i64 %offset) #0 !dbg !12683 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %watermark_wand.addr = alloca %struct._MagickWand*, align 8
  %offset.addr = alloca i64, align 8
  %stegano_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12686, metadata !DIExpression()), !dbg !12687
  store %struct._MagickWand* %watermark_wand, %struct._MagickWand** %watermark_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %watermark_wand.addr, metadata !12688, metadata !DIExpression()), !dbg !12689
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !12690, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.declare(metadata %struct._Image** %stegano_image, metadata !12692, metadata !DIExpression()), !dbg !12693
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12694
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12696
  %1 = load i32, i32* %debug, align 8, !dbg !12696
  %cmp = icmp ne i32 %1, 0, !dbg !12697
  br i1 %cmp, label %if.then, label %if.end, !dbg !12698

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12699
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12700
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12699
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12015, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12701
  br label %if.end, !dbg !12702

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12703
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12705
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12705
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12706
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !12707

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %watermark_wand.addr, align 8, !dbg !12708
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !12709
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !12709
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !12710
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !12711

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12712
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !12714
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12714
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12715
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !12716
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !12715
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12019, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !12717
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12718
  br label %return, !dbg !12718

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load i64, i64* %offset.addr, align 8, !dbg !12719
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12720
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !12721
  %12 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !12721
  %offset10 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 23, !dbg !12722
  store i64 %10, i64* %offset10, align 8, !dbg !12723
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12724
  %images11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !12725
  %14 = load %struct._Image*, %struct._Image** %images11, align 8, !dbg !12725
  %15 = load %struct._MagickWand*, %struct._MagickWand** %watermark_wand.addr, align 8, !dbg !12726
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !12727
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !12727
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12728
  %exception13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 2, !dbg !12729
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception13, align 8, !dbg !12729
  %call14 = call %struct._Image* @SteganoImage(%struct._Image* %14, %struct._Image* %16, %struct._ExceptionInfo* %18), !dbg !12730
  store %struct._Image* %call14, %struct._Image** %stegano_image, align 8, !dbg !12731
  %19 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !12732
  %cmp15 = icmp eq %struct._Image* %19, null, !dbg !12734
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !12735

if.then16:                                        ; preds = %if.end8
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12736
  br label %return, !dbg !12736

if.end17:                                         ; preds = %if.end8
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12737
  %21 = load %struct._Image*, %struct._Image** %stegano_image, align 8, !dbg !12738
  %call18 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %20, %struct._Image* %21), !dbg !12739
  store %struct._MagickWand* %call18, %struct._MagickWand** %retval, align 8, !dbg !12740
  br label %return, !dbg !12740

return:                                           ; preds = %if.end17, %if.then16, %if.then4
  %22 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !12741
  ret %struct._MagickWand* %22, !dbg !12741
}

declare dso_local %struct._Image* @SteganoImage(%struct._Image*, %struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickStereoImage(%struct._MagickWand* %wand, %struct._MagickWand* %offset_wand) #0 !dbg !12742 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %offset_wand.addr = alloca %struct._MagickWand*, align 8
  %stereo_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12745, metadata !DIExpression()), !dbg !12746
  store %struct._MagickWand* %offset_wand, %struct._MagickWand** %offset_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %offset_wand.addr, metadata !12747, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.declare(metadata %struct._Image** %stereo_image, metadata !12749, metadata !DIExpression()), !dbg !12750
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12751
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12753
  %1 = load i32, i32* %debug, align 8, !dbg !12753
  %cmp = icmp ne i32 %1, 0, !dbg !12754
  br i1 %cmp, label %if.then, label %if.end, !dbg !12755

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12756
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12757
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12756
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12066, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12758
  br label %if.end, !dbg !12759

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12760
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12762
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12762
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12763
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !12764

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %offset_wand.addr, align 8, !dbg !12765
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !12766
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !12766
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !12767
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !12768

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12769
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !12771
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12771
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12772
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !12773
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !12772
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12070, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !12774
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12775
  br label %return, !dbg !12775

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12776
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !12777
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !12777
  %12 = load %struct._MagickWand*, %struct._MagickWand** %offset_wand.addr, align 8, !dbg !12778
  %images10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !12779
  %13 = load %struct._Image*, %struct._Image** %images10, align 8, !dbg !12779
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12780
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !12781
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !12781
  %call12 = call %struct._Image* @StereoImage(%struct._Image* %11, %struct._Image* %13, %struct._ExceptionInfo* %15), !dbg !12782
  store %struct._Image* %call12, %struct._Image** %stereo_image, align 8, !dbg !12783
  %16 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !12784
  %cmp13 = icmp eq %struct._Image* %16, null, !dbg !12786
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !12787

if.then14:                                        ; preds = %if.end8
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12788
  br label %return, !dbg !12788

if.end15:                                         ; preds = %if.end8
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12789
  %18 = load %struct._Image*, %struct._Image** %stereo_image, align 8, !dbg !12790
  %call16 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %17, %struct._Image* %18), !dbg !12791
  store %struct._MagickWand* %call16, %struct._MagickWand** %retval, align 8, !dbg !12792
  br label %return, !dbg !12792

return:                                           ; preds = %if.end15, %if.then14, %if.then4
  %19 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !12793
  ret %struct._MagickWand* %19, !dbg !12793
}

declare dso_local %struct._Image* @StereoImage(%struct._Image*, %struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickStripImage(%struct._MagickWand* %wand) #0 !dbg !12794 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12795, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12797, metadata !DIExpression()), !dbg !12798
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12799
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12801
  %1 = load i32, i32* %debug, align 8, !dbg !12801
  %cmp = icmp ne i32 %1, 0, !dbg !12802
  br i1 %cmp, label %if.then, label %if.end, !dbg !12803

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12804
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12805
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12804
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12110, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12806
  br label %if.end, !dbg !12807

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12808
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12810
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12810
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12811
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12812

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12813
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12813
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12813
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12813
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12813
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12813
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12112, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12813
  store i32 0, i32* %retval, align 4, !dbg !12813
  br label %return, !dbg !12813

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12815
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12816
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12816
  %call8 = call i32 @StripImage(%struct._Image* %9), !dbg !12817
  store i32 %call8, i32* %status, align 4, !dbg !12818
  %10 = load i32, i32* %status, align 4, !dbg !12819
  %cmp9 = icmp eq i32 %10, 0, !dbg !12821
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !12822

if.then10:                                        ; preds = %if.end6
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12823
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !12824
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !12824
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12825
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !12826
  %14 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !12826
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !12827
  call void @InheritException(%struct._ExceptionInfo* %12, %struct._ExceptionInfo* %exception13), !dbg !12828
  br label %if.end14, !dbg !12828

if.end14:                                         ; preds = %if.then10, %if.end6
  %15 = load i32, i32* %status, align 4, !dbg !12829
  store i32 %15, i32* %retval, align 4, !dbg !12830
  br label %return, !dbg !12830

return:                                           ; preds = %if.end14, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !12831
  ret i32 %16, !dbg !12831
}

declare dso_local i32 @StripImage(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickSwirlImage(%struct._MagickWand* %wand, double %degrees) #0 !dbg !12832 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %degrees.addr = alloca double, align 8
  %swirl_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12833, metadata !DIExpression()), !dbg !12834
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !12835, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.declare(metadata %struct._Image** %swirl_image, metadata !12837, metadata !DIExpression()), !dbg !12838
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12839
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12841
  %1 = load i32, i32* %debug, align 8, !dbg !12841
  %cmp = icmp ne i32 %1, 0, !dbg !12842
  br i1 %cmp, label %if.then, label %if.end, !dbg !12843

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12844
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12845
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12844
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12154, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12846
  br label %if.end, !dbg !12847

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12848
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12850
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12850
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12851
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12852

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12853
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12853
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12853
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12853
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12853
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12853
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12156, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12853
  store i32 0, i32* %retval, align 4, !dbg !12853
  br label %return, !dbg !12853

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12855
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12856
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12856
  %10 = load double, double* %degrees.addr, align 8, !dbg !12857
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12858
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 2, !dbg !12859
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !12859
  %call9 = call %struct._Image* @SwirlImage(%struct._Image* %9, double %10, %struct._ExceptionInfo* %12), !dbg !12860
  store %struct._Image* %call9, %struct._Image** %swirl_image, align 8, !dbg !12861
  %13 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !12862
  %cmp10 = icmp eq %struct._Image* %13, null, !dbg !12864
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12865

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12866
  br label %return, !dbg !12866

if.end12:                                         ; preds = %if.end6
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12867
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !12868
  %15 = load %struct._Image*, %struct._Image** %swirl_image, align 8, !dbg !12869
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %15), !dbg !12870
  store i32 1, i32* %retval, align 4, !dbg !12871
  br label %return, !dbg !12871

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !12872
  ret i32 %16, !dbg !12872
}

declare dso_local %struct._Image* @SwirlImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickTextureImage(%struct._MagickWand* %wand, %struct._MagickWand* %texture_wand) #0 !dbg !12873 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %texture_wand.addr = alloca %struct._MagickWand*, align 8
  %texture_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12874, metadata !DIExpression()), !dbg !12875
  store %struct._MagickWand* %texture_wand, %struct._MagickWand** %texture_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %texture_wand.addr, metadata !12876, metadata !DIExpression()), !dbg !12877
  call void @llvm.dbg.declare(metadata %struct._Image** %texture_image, metadata !12878, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12880, metadata !DIExpression()), !dbg !12881
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12882
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12884
  %1 = load i32, i32* %debug, align 8, !dbg !12884
  %cmp = icmp ne i32 %1, 0, !dbg !12885
  br i1 %cmp, label %if.then, label %if.end, !dbg !12886

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12887
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12888
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12887
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12202, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12889
  br label %if.end, !dbg !12890

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12891
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12893
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12893
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12894
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !12895

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %texture_wand.addr, align 8, !dbg !12896
  %images2 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !12897
  %6 = load %struct._Image*, %struct._Image** %images2, align 8, !dbg !12897
  %cmp3 = icmp eq %struct._Image* %6, null, !dbg !12898
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !12899

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12900
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !12902
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12902
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12903
  %name5 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 1, !dbg !12904
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name5, i64 0, i64 0, !dbg !12903
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12206, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay6), !dbg !12905
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12906
  br label %return, !dbg !12906

if.end8:                                          ; preds = %lor.lhs.false
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12907
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !12908
  %11 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !12908
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12909
  %exception10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !12910
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception10, align 8, !dbg !12910
  %call11 = call %struct._Image* @CloneImage(%struct._Image* %11, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %13), !dbg !12911
  store %struct._Image* %call11, %struct._Image** %texture_image, align 8, !dbg !12912
  %14 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !12913
  %cmp12 = icmp eq %struct._Image* %14, null, !dbg !12915
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !12916

if.then13:                                        ; preds = %if.end8
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12917
  br label %return, !dbg !12917

if.end14:                                         ; preds = %if.end8
  %15 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !12918
  %16 = load %struct._MagickWand*, %struct._MagickWand** %texture_wand.addr, align 8, !dbg !12919
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !12920
  %17 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !12920
  %call16 = call i32 @TextureImage(%struct._Image* %15, %struct._Image* %17), !dbg !12921
  store i32 %call16, i32* %status, align 4, !dbg !12922
  %18 = load i32, i32* %status, align 4, !dbg !12923
  %cmp17 = icmp eq i32 %18, 0, !dbg !12925
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !12926

if.then18:                                        ; preds = %if.end14
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12927
  %exception19 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 2, !dbg !12929
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception19, align 8, !dbg !12929
  %21 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !12930
  %exception20 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !12931
  call void @InheritException(%struct._ExceptionInfo* %20, %struct._ExceptionInfo* %exception20), !dbg !12932
  %22 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !12933
  %call21 = call %struct._Image* @DestroyImage(%struct._Image* %22), !dbg !12934
  store %struct._Image* %call21, %struct._Image** %texture_image, align 8, !dbg !12935
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !12936
  br label %return, !dbg !12936

if.end22:                                         ; preds = %if.end14
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12937
  %24 = load %struct._Image*, %struct._Image** %texture_image, align 8, !dbg !12938
  %call23 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %23, %struct._Image* %24), !dbg !12939
  store %struct._MagickWand* %call23, %struct._MagickWand** %retval, align 8, !dbg !12940
  br label %return, !dbg !12940

return:                                           ; preds = %if.end22, %if.then18, %if.then13, %if.then4
  %25 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !12941
  ret %struct._MagickWand* %25, !dbg !12941
}

declare dso_local i32 @TextureImage(%struct._Image*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickThresholdImage(%struct._MagickWand* %wand, double %threshold) #0 !dbg !12942 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !12945, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12947, metadata !DIExpression()), !dbg !12948
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12949
  %1 = load double, double* %threshold.addr, align 8, !dbg !12950
  %call = call i32 @MagickThresholdImageChannel(%struct._MagickWand* %0, i32 134217719, double %1), !dbg !12951
  store i32 %call, i32* %status, align 4, !dbg !12952
  %2 = load i32, i32* %status, align 4, !dbg !12953
  ret i32 %2, !dbg !12954
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickThresholdImageChannel(%struct._MagickWand* %wand, i32 %channel, double %threshold) #0 !dbg !12955 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !12956, metadata !DIExpression()), !dbg !12957
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12958, metadata !DIExpression()), !dbg !12959
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !12960, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12962, metadata !DIExpression()), !dbg !12963
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12964
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !12966
  %1 = load i32, i32* %debug, align 8, !dbg !12966
  %cmp = icmp ne i32 %1, 0, !dbg !12967
  br i1 %cmp, label %if.then, label %if.end, !dbg !12968

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12969
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !12970
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !12969
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !12971
  br label %if.end, !dbg !12972

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12973
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !12975
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !12975
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !12976
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !12977

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12978
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !12978
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !12978
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12978
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !12978
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !12978
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12275, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !12978
  store i32 0, i32* %retval, align 4, !dbg !12978
  br label %return, !dbg !12978

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12980
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !12981
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !12981
  %10 = load i32, i32* %channel.addr, align 4, !dbg !12982
  %11 = load double, double* %threshold.addr, align 8, !dbg !12983
  %call8 = call i32 @BilevelImageChannel(%struct._Image* %9, i32 %10, double %11), !dbg !12984
  store i32 %call8, i32* %status, align 4, !dbg !12985
  %12 = load i32, i32* %status, align 4, !dbg !12986
  %cmp9 = icmp eq i32 %12, 0, !dbg !12988
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !12989

if.then10:                                        ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12990
  %exception11 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !12991
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !12991
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !12992
  %images12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !12993
  %16 = load %struct._Image*, %struct._Image** %images12, align 8, !dbg !12993
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !12994
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !12995
  br label %if.end14, !dbg !12995

if.end14:                                         ; preds = %if.then10, %if.end6
  %17 = load i32, i32* %status, align 4, !dbg !12996
  store i32 %17, i32* %retval, align 4, !dbg !12997
  br label %return, !dbg !12997

return:                                           ; preds = %if.end14, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !12998
  ret i32 %18, !dbg !12998
}

declare dso_local i32 @BilevelImageChannel(%struct._Image*, i32, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickThumbnailImage(%struct._MagickWand* %wand, i64 %columns, i64 %rows) #0 !dbg !12999 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %thumbnail_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13000, metadata !DIExpression()), !dbg !13001
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.declare(metadata %struct._Image** %thumbnail_image, metadata !13006, metadata !DIExpression()), !dbg !13007
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13008
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13010
  %1 = load i32, i32* %debug, align 8, !dbg !13010
  %cmp = icmp ne i32 %1, 0, !dbg !13011
  br i1 %cmp, label %if.then, label %if.end, !dbg !13012

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13013
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13014
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13013
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12320, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13015
  br label %if.end, !dbg !13016

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13017
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13019
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13019
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13020
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13021

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13022
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13022
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13022
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13022
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13022
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13022
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12322, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13022
  store i32 0, i32* %retval, align 4, !dbg !13022
  br label %return, !dbg !13022

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13024
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13025
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13025
  %10 = load i64, i64* %columns.addr, align 8, !dbg !13026
  %11 = load i64, i64* %rows.addr, align 8, !dbg !13027
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13028
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !13029
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13029
  %call9 = call %struct._Image* @ThumbnailImage(%struct._Image* %9, i64 %10, i64 %11, %struct._ExceptionInfo* %13), !dbg !13030
  store %struct._Image* %call9, %struct._Image** %thumbnail_image, align 8, !dbg !13031
  %14 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !13032
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !13034
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13035

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13036
  br label %return, !dbg !13036

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13037
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !13038
  %16 = load %struct._Image*, %struct._Image** %thumbnail_image, align 8, !dbg !13039
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !13040
  store i32 1, i32* %retval, align 4, !dbg !13041
  br label %return, !dbg !13041

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !13042
  ret i32 %17, !dbg !13042
}

declare dso_local %struct._Image* @ThumbnailImage(%struct._Image*, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickTintImage(%struct._MagickWand* %wand, %struct._PixelWand* %tint, %struct._PixelWand* %opacity) #0 !dbg !13043 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %tint.addr = alloca %struct._PixelWand*, align 8
  %opacity.addr = alloca %struct._PixelWand*, align 8
  %percent_opaque = alloca [4096 x i8], align 16
  %tint_image = alloca %struct._Image*, align 8
  %target = alloca %struct._PixelPacket, align 2
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13044, metadata !DIExpression()), !dbg !13045
  store %struct._PixelWand* %tint, %struct._PixelWand** %tint.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %tint.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  store %struct._PixelWand* %opacity, %struct._PixelWand** %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %opacity.addr, metadata !13048, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.declare(metadata [4096 x i8]* %percent_opaque, metadata !13050, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.declare(metadata %struct._Image** %tint_image, metadata !13052, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !13054, metadata !DIExpression()), !dbg !13055
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13056
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13058
  %1 = load i32, i32* %debug, align 8, !dbg !13058
  %cmp = icmp ne i32 %1, 0, !dbg !13059
  br i1 %cmp, label %if.then, label %if.end, !dbg !13060

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13061
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13062
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13061
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12375, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13063
  br label %if.end, !dbg !13064

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13065
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13067
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13067
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13068
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13069

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13070
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13070
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13070
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13070
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13070
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13070
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12377, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13070
  store i32 0, i32* %retval, align 4, !dbg !13070
  br label %return, !dbg !13070

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %percent_opaque, i64 0, i64 0, !dbg !13072
  %8 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !13073
  %call8 = call zeroext i16 @PixelGetRedQuantum(%struct._PixelWand* %8), !dbg !13074
  %conv = zext i16 %call8 to i32, !dbg !13074
  %conv9 = sitofp i32 %conv to double, !dbg !13074
  %mul = fmul double 0x3F59001900190019, %conv9, !dbg !13075
  %9 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !13076
  %call10 = call zeroext i16 @PixelGetGreenQuantum(%struct._PixelWand* %9), !dbg !13077
  %conv11 = zext i16 %call10 to i32, !dbg !13077
  %conv12 = sitofp i32 %conv11 to double, !dbg !13077
  %mul13 = fmul double 0x3F59001900190019, %conv12, !dbg !13078
  %10 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !13079
  %call14 = call zeroext i16 @PixelGetBlueQuantum(%struct._PixelWand* %10), !dbg !13080
  %conv15 = zext i16 %call14 to i32, !dbg !13080
  %conv16 = sitofp i32 %conv15 to double, !dbg !13080
  %mul17 = fmul double 0x3F59001900190019, %conv16, !dbg !13081
  %11 = load %struct._PixelWand*, %struct._PixelWand** %opacity.addr, align 8, !dbg !13082
  %call18 = call zeroext i16 @PixelGetOpacityQuantum(%struct._PixelWand* %11), !dbg !13083
  %conv19 = zext i16 %call18 to i32, !dbg !13083
  %conv20 = sitofp i32 %conv19 to double, !dbg !13083
  %mul21 = fmul double 0x3F59001900190019, %conv20, !dbg !13084
  %call22 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay7, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), double %mul, double %mul13, double %mul17, double %mul21), !dbg !13085
  %12 = load %struct._PixelWand*, %struct._PixelWand** %tint.addr, align 8, !dbg !13086
  call void @PixelGetQuantumColor(%struct._PixelWand* %12, %struct._PixelPacket* %target), !dbg !13087
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13088
  %images23 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !13089
  %14 = load %struct._Image*, %struct._Image** %images23, align 8, !dbg !13089
  %arraydecay24 = getelementptr inbounds [4096 x i8], [4096 x i8]* %percent_opaque, i64 0, i64 0, !dbg !13090
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13091
  %exception25 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !13092
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception25, align 8, !dbg !13092
  %17 = bitcast %struct._PixelPacket* %target to i64*, !dbg !13093
  %18 = load i64, i64* %17, align 2, !dbg !13093
  %call26 = call %struct._Image* @TintImage(%struct._Image* %14, i8* %arraydecay24, i64 %18, %struct._ExceptionInfo* %16), !dbg !13093
  store %struct._Image* %call26, %struct._Image** %tint_image, align 8, !dbg !13094
  %19 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !13095
  %cmp27 = icmp eq %struct._Image* %19, null, !dbg !13097
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13098

if.then29:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13099
  br label %return, !dbg !13099

if.end30:                                         ; preds = %if.end6
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13100
  %images31 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 5, !dbg !13101
  %21 = load %struct._Image*, %struct._Image** %tint_image, align 8, !dbg !13102
  call void @ReplaceImageInList(%struct._Image** %images31, %struct._Image* %21), !dbg !13103
  store i32 1, i32* %retval, align 4, !dbg !13104
  br label %return, !dbg !13104

return:                                           ; preds = %if.end30, %if.then29, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !13105
  ret i32 %22, !dbg !13105
}

declare dso_local %struct._Image* @TintImage(%struct._Image*, i8*, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickWand* @MagickTransformImage(%struct._MagickWand* %wand, i8* %crop, i8* %geometry) #0 !dbg !13106 {
entry:
  %retval = alloca %struct._MagickWand*, align 8
  %wand.addr = alloca %struct._MagickWand*, align 8
  %crop.addr = alloca i8*, align 8
  %geometry.addr = alloca i8*, align 8
  %transform_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13109, metadata !DIExpression()), !dbg !13110
  store i8* %crop, i8** %crop.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %crop.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata %struct._Image** %transform_image, metadata !13115, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13117, metadata !DIExpression()), !dbg !13118
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13119
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13121
  %1 = load i32, i32* %debug, align 8, !dbg !13121
  %cmp = icmp ne i32 %1, 0, !dbg !13122
  br i1 %cmp, label %if.then, label %if.end, !dbg !13123

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13124
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13125
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13124
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12436, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13126
  br label %if.end, !dbg !13127

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13128
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13130
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13130
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13131
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !13132

if.then2:                                         ; preds = %if.end
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !13133
  br label %return, !dbg !13133

if.end3:                                          ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13134
  %images4 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 5, !dbg !13135
  %6 = load %struct._Image*, %struct._Image** %images4, align 8, !dbg !13135
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13136
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 2, !dbg !13137
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13137
  %call5 = call %struct._Image* @CloneImage(%struct._Image* %6, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %8), !dbg !13138
  store %struct._Image* %call5, %struct._Image** %transform_image, align 8, !dbg !13139
  %9 = load %struct._Image*, %struct._Image** %transform_image, align 8, !dbg !13140
  %cmp6 = icmp eq %struct._Image* %9, null, !dbg !13142
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !13143

if.then7:                                         ; preds = %if.end3
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !13144
  br label %return, !dbg !13144

if.end8:                                          ; preds = %if.end3
  %10 = load i8*, i8** %crop.addr, align 8, !dbg !13145
  %11 = load i8*, i8** %geometry.addr, align 8, !dbg !13146
  %call9 = call i32 @TransformImage(%struct._Image** %transform_image, i8* %10, i8* %11), !dbg !13147
  store i32 %call9, i32* %status, align 4, !dbg !13148
  %12 = load i32, i32* %status, align 4, !dbg !13149
  %cmp10 = icmp eq i32 %12, 0, !dbg !13151
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !13152

if.then11:                                        ; preds = %if.end8
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13153
  %exception12 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !13155
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !13155
  %15 = load %struct._Image*, %struct._Image** %transform_image, align 8, !dbg !13156
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !13157
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %exception13), !dbg !13158
  %16 = load %struct._Image*, %struct._Image** %transform_image, align 8, !dbg !13159
  %call14 = call %struct._Image* @DestroyImage(%struct._Image* %16), !dbg !13160
  store %struct._Image* %call14, %struct._Image** %transform_image, align 8, !dbg !13161
  store %struct._MagickWand* null, %struct._MagickWand** %retval, align 8, !dbg !13162
  br label %return, !dbg !13162

if.end15:                                         ; preds = %if.end8
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13163
  %18 = load %struct._Image*, %struct._Image** %transform_image, align 8, !dbg !13164
  %call16 = call %struct._MagickWand* @CloneMagickWandFromImages(%struct._MagickWand* %17, %struct._Image* %18), !dbg !13165
  store %struct._MagickWand* %call16, %struct._MagickWand** %retval, align 8, !dbg !13166
  br label %return, !dbg !13166

return:                                           ; preds = %if.end15, %if.then11, %if.then7, %if.then2
  %19 = load %struct._MagickWand*, %struct._MagickWand** %retval, align 8, !dbg !13167
  ret %struct._MagickWand* %19, !dbg !13167
}

declare dso_local i32 @TransformImage(%struct._Image**, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickTransformImageColorspace(%struct._MagickWand* %wand, i32 %colorspace) #0 !dbg !13168 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %colorspace.addr = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13173
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13175
  %1 = load i32, i32* %debug, align 8, !dbg !13175
  %cmp = icmp ne i32 %1, 0, !dbg !13176
  br i1 %cmp, label %if.then, label %if.end, !dbg !13177

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13178
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13179
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13178
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12490, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13180
  br label %if.end, !dbg !13181

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13182
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13184
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13184
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13185
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13186

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13187
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13187
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13187
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13187
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13187
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13187
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12492, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13187
  store i32 0, i32* %retval, align 4, !dbg !13187
  br label %return, !dbg !13187

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13189
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13190
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13190
  %10 = load i32, i32* %colorspace.addr, align 4, !dbg !13191
  %call8 = call i32 @TransformImageColorspace(%struct._Image* %9, i32 %10), !dbg !13192
  store i32 %call8, i32* %retval, align 4, !dbg !13193
  br label %return, !dbg !13193

return:                                           ; preds = %if.end6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !13194
  ret i32 %11, !dbg !13194
}

declare dso_local i32 @TransformImageColorspace(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickTransparentPaintImage(%struct._MagickWand* %wand, %struct._PixelWand* %target, double %alpha, double %fuzz, i32 %invert) #0 !dbg !13195 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %target.addr = alloca %struct._PixelWand*, align 8
  %alpha.addr = alloca double, align 8
  %fuzz.addr = alloca double, align 8
  %invert.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %target_pixel = alloca %struct._MagickPixelPacket, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13198, metadata !DIExpression()), !dbg !13199
  store %struct._PixelWand* %target, %struct._PixelWand** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %target.addr, metadata !13200, metadata !DIExpression()), !dbg !13201
  store double %alpha, double* %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata double* %alpha.addr, metadata !13202, metadata !DIExpression()), !dbg !13203
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !13206, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13208, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %target_pixel, metadata !13210, metadata !DIExpression()), !dbg !13211
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13212
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13214
  %1 = load i32, i32* %debug, align 8, !dbg !13214
  %cmp = icmp ne i32 %1, 0, !dbg !13215
  br i1 %cmp, label %if.then, label %if.end, !dbg !13216

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13217
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13218
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13217
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12549, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13219
  br label %if.end, !dbg !13220

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13221
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13223
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13223
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13224
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13225

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13226
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13226
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13226
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13226
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13226
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13226
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12551, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13226
  store i32 0, i32* %retval, align 4, !dbg !13226
  br label %return, !dbg !13226

if.end6:                                          ; preds = %if.end
  %8 = load %struct._PixelWand*, %struct._PixelWand** %target.addr, align 8, !dbg !13228
  call void @PixelGetMagickColor(%struct._PixelWand* %8, %struct._MagickPixelPacket* %target_pixel), !dbg !13229
  %9 = load double, double* %fuzz.addr, align 8, !dbg !13230
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13231
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 5, !dbg !13232
  %11 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13232
  %fuzz8 = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 31, !dbg !13233
  store double %9, double* %fuzz8, align 8, !dbg !13234
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13235
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !13236
  %13 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !13236
  %14 = load double, double* %alpha.addr, align 8, !dbg !13237
  %mul = fmul double 6.553500e+04, %14, !dbg !13238
  %sub = fsub double 6.553500e+04, %mul, !dbg !13239
  %conv = fptrunc double %sub to float, !dbg !13240
  %call10 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !13241
  %15 = load i32, i32* %invert.addr, align 4, !dbg !13242
  %call11 = call i32 @TransparentPaintImage(%struct._Image* %13, %struct._MagickPixelPacket* %target_pixel, i16 zeroext %call10, i32 %15), !dbg !13243
  store i32 %call11, i32* %status, align 4, !dbg !13244
  %16 = load i32, i32* %status, align 4, !dbg !13245
  %cmp12 = icmp eq i32 %16, 0, !dbg !13247
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !13248

if.then14:                                        ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13249
  %exception15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 2, !dbg !13250
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception15, align 8, !dbg !13250
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13251
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 5, !dbg !13252
  %20 = load %struct._Image*, %struct._Image** %images16, align 8, !dbg !13252
  %exception17 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 58, !dbg !13253
  call void @InheritException(%struct._ExceptionInfo* %18, %struct._ExceptionInfo* %exception17), !dbg !13254
  br label %if.end18, !dbg !13254

if.end18:                                         ; preds = %if.then14, %if.end6
  %21 = load i32, i32* %status, align 4, !dbg !13255
  store i32 %21, i32* %retval, align 4, !dbg !13256
  br label %return, !dbg !13256

return:                                           ; preds = %if.end18, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !13257
  ret i32 %22, !dbg !13257
}

declare dso_local i32 @TransparentPaintImage(%struct._Image*, %struct._MagickPixelPacket*, i16 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickTransposeImage(%struct._MagickWand* %wand) #0 !dbg !13258 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %transpose_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13259, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.declare(metadata %struct._Image** %transpose_image, metadata !13261, metadata !DIExpression()), !dbg !13262
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13263
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13265
  %1 = load i32, i32* %debug, align 8, !dbg !13265
  %cmp = icmp ne i32 %1, 0, !dbg !13266
  br i1 %cmp, label %if.then, label %if.end, !dbg !13267

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13268
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13269
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13268
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12592, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13270
  br label %if.end, !dbg !13271

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13272
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13274
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13274
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13275
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13276

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13277
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13277
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13277
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13277
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13277
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13277
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12594, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13277
  store i32 0, i32* %retval, align 4, !dbg !13277
  br label %return, !dbg !13277

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13279
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13280
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13280
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13281
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !13282
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13282
  %call9 = call %struct._Image* @TransposeImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !13283
  store %struct._Image* %call9, %struct._Image** %transpose_image, align 8, !dbg !13284
  %12 = load %struct._Image*, %struct._Image** %transpose_image, align 8, !dbg !13285
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !13287
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13288

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13289
  br label %return, !dbg !13289

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13290
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !13291
  %14 = load %struct._Image*, %struct._Image** %transpose_image, align 8, !dbg !13292
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !13293
  store i32 1, i32* %retval, align 4, !dbg !13294
  br label %return, !dbg !13294

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !13295
  ret i32 %15, !dbg !13295
}

declare dso_local %struct._Image* @TransposeImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickTransverseImage(%struct._MagickWand* %wand) #0 !dbg !13296 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %transverse_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13297, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.declare(metadata %struct._Image** %transverse_image, metadata !13299, metadata !DIExpression()), !dbg !13300
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13301
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13303
  %1 = load i32, i32* %debug, align 8, !dbg !13303
  %cmp = icmp ne i32 %1, 0, !dbg !13304
  br i1 %cmp, label %if.then, label %if.end, !dbg !13305

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13306
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13307
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13306
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13308
  br label %if.end, !dbg !13309

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13310
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13312
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13312
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13313
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13314

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13315
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13315
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13315
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13315
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13315
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13315
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12635, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13315
  store i32 0, i32* %retval, align 4, !dbg !13315
  br label %return, !dbg !13315

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13317
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13318
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13318
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13319
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !13320
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13320
  %call9 = call %struct._Image* @TransverseImage(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !13321
  store %struct._Image* %call9, %struct._Image** %transverse_image, align 8, !dbg !13322
  %12 = load %struct._Image*, %struct._Image** %transverse_image, align 8, !dbg !13323
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !13325
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13326

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13327
  br label %return, !dbg !13327

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13328
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !13329
  %14 = load %struct._Image*, %struct._Image** %transverse_image, align 8, !dbg !13330
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !13331
  store i32 1, i32* %retval, align 4, !dbg !13332
  br label %return, !dbg !13332

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !13333
  ret i32 %15, !dbg !13333
}

declare dso_local %struct._Image* @TransverseImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickTrimImage(%struct._MagickWand* %wand, double %fuzz) #0 !dbg !13334 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %fuzz.addr = alloca double, align 8
  %trim_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13335, metadata !DIExpression()), !dbg !13336
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !13337, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.declare(metadata %struct._Image** %trim_image, metadata !13339, metadata !DIExpression()), !dbg !13340
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13341
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13343
  %1 = load i32, i32* %debug, align 8, !dbg !13343
  %cmp = icmp ne i32 %1, 0, !dbg !13344
  br i1 %cmp, label %if.then, label %if.end, !dbg !13345

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13346
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13347
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13346
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12680, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13348
  br label %if.end, !dbg !13349

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13350
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13352
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13352
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13353
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13354

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13355
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13355
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13355
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13355
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13355
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13355
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12682, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13355
  store i32 0, i32* %retval, align 4, !dbg !13355
  br label %return, !dbg !13355

if.end6:                                          ; preds = %if.end
  %8 = load double, double* %fuzz.addr, align 8, !dbg !13357
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13358
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !13359
  %10 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13359
  %fuzz8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 31, !dbg !13360
  store double %8, double* %fuzz8, align 8, !dbg !13361
  %11 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13362
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %11, i32 0, i32 5, !dbg !13363
  %12 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !13363
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13364
  %exception10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 2, !dbg !13365
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception10, align 8, !dbg !13365
  %call11 = call %struct._Image* @TrimImage(%struct._Image* %12, %struct._ExceptionInfo* %14), !dbg !13366
  store %struct._Image* %call11, %struct._Image** %trim_image, align 8, !dbg !13367
  %15 = load %struct._Image*, %struct._Image** %trim_image, align 8, !dbg !13368
  %cmp12 = icmp eq %struct._Image* %15, null, !dbg !13370
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !13371

if.then13:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13372
  br label %return, !dbg !13372

if.end14:                                         ; preds = %if.end6
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13373
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 5, !dbg !13374
  %17 = load %struct._Image*, %struct._Image** %trim_image, align 8, !dbg !13375
  call void @ReplaceImageInList(%struct._Image** %images15, %struct._Image* %17), !dbg !13376
  store i32 1, i32* %retval, align 4, !dbg !13377
  br label %return, !dbg !13377

return:                                           ; preds = %if.end14, %if.then13, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !13378
  ret i32 %18, !dbg !13378
}

declare dso_local %struct._Image* @TrimImage(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickUniqueImageColors(%struct._MagickWand* %wand) #0 !dbg !13379 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %unique_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13380, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.declare(metadata %struct._Image** %unique_image, metadata !13382, metadata !DIExpression()), !dbg !13383
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13384
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13386
  %1 = load i32, i32* %debug, align 8, !dbg !13386
  %cmp = icmp ne i32 %1, 0, !dbg !13387
  br i1 %cmp, label %if.then, label %if.end, !dbg !13388

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13389
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13390
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13389
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12721, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13391
  br label %if.end, !dbg !13392

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13393
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13395
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13395
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13396
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13397

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13398
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13398
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13398
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13398
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13398
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13398
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12723, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13398
  store i32 0, i32* %retval, align 4, !dbg !13398
  br label %return, !dbg !13398

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13400
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13401
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13401
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13402
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !13403
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13403
  %call9 = call %struct._Image* @UniqueImageColors(%struct._Image* %9, %struct._ExceptionInfo* %11), !dbg !13404
  store %struct._Image* %call9, %struct._Image** %unique_image, align 8, !dbg !13405
  %12 = load %struct._Image*, %struct._Image** %unique_image, align 8, !dbg !13406
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !13408
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13409

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13410
  br label %return, !dbg !13410

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13411
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !13412
  %14 = load %struct._Image*, %struct._Image** %unique_image, align 8, !dbg !13413
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %14), !dbg !13414
  store i32 1, i32* %retval, align 4, !dbg !13415
  br label %return, !dbg !13415

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !13416
  ret i32 %15, !dbg !13416
}

declare dso_local %struct._Image* @UniqueImageColors(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickUnsharpMaskImage(%struct._MagickWand* %wand, double %radius, double %sigma, double %amount, double %threshold) #0 !dbg !13417 {
entry:
  %wand.addr = alloca %struct._MagickWand*, align 8
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %amount.addr = alloca double, align 8
  %threshold.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13420, metadata !DIExpression()), !dbg !13421
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !13424, metadata !DIExpression()), !dbg !13425
  store double %amount, double* %amount.addr, align 8
  call void @llvm.dbg.declare(metadata double* %amount.addr, metadata !13426, metadata !DIExpression()), !dbg !13427
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13430, metadata !DIExpression()), !dbg !13431
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13432
  %1 = load double, double* %radius.addr, align 8, !dbg !13433
  %2 = load double, double* %sigma.addr, align 8, !dbg !13434
  %3 = load double, double* %amount.addr, align 8, !dbg !13435
  %4 = load double, double* %threshold.addr, align 8, !dbg !13436
  %call = call i32 @MagickUnsharpMaskImageChannel(%struct._MagickWand* %0, i32 134217719, double %1, double %2, double %3, double %4), !dbg !13437
  store i32 %call, i32* %status, align 4, !dbg !13438
  %5 = load i32, i32* %status, align 4, !dbg !13439
  ret i32 %5, !dbg !13440
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickUnsharpMaskImageChannel(%struct._MagickWand* %wand, i32 %channel, double %radius, double %sigma, double %amount, double %threshold) #0 !dbg !13441 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %channel.addr = alloca i32, align 4
  %radius.addr = alloca double, align 8
  %sigma.addr = alloca double, align 8
  %amount.addr = alloca double, align 8
  %threshold.addr = alloca double, align 8
  %unsharp_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13444, metadata !DIExpression()), !dbg !13445
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !13446, metadata !DIExpression()), !dbg !13447
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !13448, metadata !DIExpression()), !dbg !13449
  store double %sigma, double* %sigma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sigma.addr, metadata !13450, metadata !DIExpression()), !dbg !13451
  store double %amount, double* %amount.addr, align 8
  call void @llvm.dbg.declare(metadata double* %amount.addr, metadata !13452, metadata !DIExpression()), !dbg !13453
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !13454, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.declare(metadata %struct._Image** %unsharp_image, metadata !13456, metadata !DIExpression()), !dbg !13457
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13458
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13460
  %1 = load i32, i32* %debug, align 8, !dbg !13460
  %cmp = icmp ne i32 %1, 0, !dbg !13461
  br i1 %cmp, label %if.then, label %if.end, !dbg !13462

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13463
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13464
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13463
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12796, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13465
  br label %if.end, !dbg !13466

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13467
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13469
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13469
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13470
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13471

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13472
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13472
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13472
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13472
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13472
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13472
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12798, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13472
  store i32 0, i32* %retval, align 4, !dbg !13472
  br label %return, !dbg !13472

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13474
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13475
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13475
  %10 = load i32, i32* %channel.addr, align 4, !dbg !13476
  %11 = load double, double* %radius.addr, align 8, !dbg !13477
  %12 = load double, double* %sigma.addr, align 8, !dbg !13478
  %13 = load double, double* %amount.addr, align 8, !dbg !13479
  %14 = load double, double* %threshold.addr, align 8, !dbg !13480
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13481
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !13482
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13482
  %call9 = call %struct._Image* @UnsharpMaskImageChannel(%struct._Image* %9, i32 %10, double %11, double %12, double %13, double %14, %struct._ExceptionInfo* %16), !dbg !13483
  store %struct._Image* %call9, %struct._Image** %unsharp_image, align 8, !dbg !13484
  %17 = load %struct._Image*, %struct._Image** %unsharp_image, align 8, !dbg !13485
  %cmp10 = icmp eq %struct._Image* %17, null, !dbg !13487
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13488

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13489
  br label %return, !dbg !13489

if.end12:                                         ; preds = %if.end6
  %18 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13490
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %18, i32 0, i32 5, !dbg !13491
  %19 = load %struct._Image*, %struct._Image** %unsharp_image, align 8, !dbg !13492
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %19), !dbg !13493
  store i32 1, i32* %retval, align 4, !dbg !13494
  br label %return, !dbg !13494

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !13495
  ret i32 %20, !dbg !13495
}

declare dso_local %struct._Image* @UnsharpMaskImageChannel(%struct._Image*, i32, double, double, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickVignetteImage(%struct._MagickWand* %wand, double %black_point, double %white_point, i64 %x, i64 %y) #0 !dbg !13496 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %vignette_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13497, metadata !DIExpression()), !dbg !13498
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !13499, metadata !DIExpression()), !dbg !13500
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !13501, metadata !DIExpression()), !dbg !13502
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !13503, metadata !DIExpression()), !dbg !13504
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !13505, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.declare(metadata %struct._Image** %vignette_image, metadata !13507, metadata !DIExpression()), !dbg !13508
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13509
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13511
  %1 = load i32, i32* %debug, align 8, !dbg !13511
  %cmp = icmp ne i32 %1, 0, !dbg !13512
  br i1 %cmp, label %if.then, label %if.end, !dbg !13513

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13514
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13515
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13514
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12846, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13516
  br label %if.end, !dbg !13517

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13518
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13520
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13520
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13521
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13522

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13523
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13523
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13523
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13523
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13523
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13523
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12848, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13523
  store i32 0, i32* %retval, align 4, !dbg !13523
  br label %return, !dbg !13523

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13525
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13526
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13526
  %10 = load double, double* %black_point.addr, align 8, !dbg !13527
  %11 = load double, double* %white_point.addr, align 8, !dbg !13528
  %12 = load i64, i64* %x.addr, align 8, !dbg !13529
  %13 = load i64, i64* %y.addr, align 8, !dbg !13530
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13531
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !13532
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13532
  %call9 = call %struct._Image* @VignetteImage(%struct._Image* %9, double %10, double %11, i64 %12, i64 %13, %struct._ExceptionInfo* %15), !dbg !13533
  store %struct._Image* %call9, %struct._Image** %vignette_image, align 8, !dbg !13534
  %16 = load %struct._Image*, %struct._Image** %vignette_image, align 8, !dbg !13535
  %cmp10 = icmp eq %struct._Image* %16, null, !dbg !13537
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13538

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13539
  br label %return, !dbg !13539

if.end12:                                         ; preds = %if.end6
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13540
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !13541
  %18 = load %struct._Image*, %struct._Image** %vignette_image, align 8, !dbg !13542
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %18), !dbg !13543
  store i32 1, i32* %retval, align 4, !dbg !13544
  br label %return, !dbg !13544

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !13545
  ret i32 %19, !dbg !13545
}

declare dso_local %struct._Image* @VignetteImage(%struct._Image*, double, double, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickWaveImage(%struct._MagickWand* %wand, double %amplitude, double %wave_length) #0 !dbg !13546 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %amplitude.addr = alloca double, align 8
  %wave_length.addr = alloca double, align 8
  %wave_image = alloca %struct._Image*, align 8
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  store double %amplitude, double* %amplitude.addr, align 8
  call void @llvm.dbg.declare(metadata double* %amplitude.addr, metadata !13549, metadata !DIExpression()), !dbg !13550
  store double %wave_length, double* %wave_length.addr, align 8
  call void @llvm.dbg.declare(metadata double* %wave_length.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.declare(metadata %struct._Image** %wave_image, metadata !13553, metadata !DIExpression()), !dbg !13554
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13555
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13557
  %1 = load i32, i32* %debug, align 8, !dbg !13557
  %cmp = icmp ne i32 %1, 0, !dbg !13558
  br i1 %cmp, label %if.then, label %if.end, !dbg !13559

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13560
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13561
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13560
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12894, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13562
  br label %if.end, !dbg !13563

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13564
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13566
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13566
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13567
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13568

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13569
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13569
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13569
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13569
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13569
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13569
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12896, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13569
  store i32 0, i32* %retval, align 4, !dbg !13569
  br label %return, !dbg !13569

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13571
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13572
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13572
  %10 = load double, double* %amplitude.addr, align 8, !dbg !13573
  %11 = load double, double* %wave_length.addr, align 8, !dbg !13574
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13575
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 2, !dbg !13576
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13576
  %call9 = call %struct._Image* @WaveImage(%struct._Image* %9, double %10, double %11, %struct._ExceptionInfo* %13), !dbg !13577
  store %struct._Image* %call9, %struct._Image** %wave_image, align 8, !dbg !13578
  %14 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !13579
  %cmp10 = icmp eq %struct._Image* %14, null, !dbg !13581
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13582

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13583
  br label %return, !dbg !13583

if.end12:                                         ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13584
  %images13 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 5, !dbg !13585
  %16 = load %struct._Image*, %struct._Image** %wave_image, align 8, !dbg !13586
  call void @ReplaceImageInList(%struct._Image** %images13, %struct._Image* %16), !dbg !13587
  store i32 1, i32* %retval, align 4, !dbg !13588
  br label %return, !dbg !13588

return:                                           ; preds = %if.end12, %if.then11, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !13589
  ret i32 %17, !dbg !13589
}

declare dso_local %struct._Image* @WaveImage(%struct._Image*, double, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickWhiteThresholdImage(%struct._MagickWand* %wand, %struct._PixelWand* %threshold) #0 !dbg !13590 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %threshold.addr = alloca %struct._PixelWand*, align 8
  %thresholds = alloca [4096 x i8], align 16
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13591, metadata !DIExpression()), !dbg !13592
  store %struct._PixelWand* %threshold, %struct._PixelWand** %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %threshold.addr, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.declare(metadata [4096 x i8]* %thresholds, metadata !13595, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13597, metadata !DIExpression()), !dbg !13598
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13599
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13601
  %1 = load i32, i32* %debug, align 8, !dbg !13601
  %cmp = icmp ne i32 %1, 0, !dbg !13602
  br i1 %cmp, label %if.then, label %if.end, !dbg !13603

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13604
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13605
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13604
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12943, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13606
  br label %if.end, !dbg !13607

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13608
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13610
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13610
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13611
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13612

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13613
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13613
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13613
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13613
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13613
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13613
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12945, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13613
  store i32 0, i32* %retval, align 4, !dbg !13613
  br label %return, !dbg !13613

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %thresholds, i64 0, i64 0, !dbg !13615
  %8 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !13616
  %call8 = call zeroext i16 @PixelGetRedQuantum(%struct._PixelWand* %8), !dbg !13617
  %conv = zext i16 %call8 to i32, !dbg !13617
  %9 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !13618
  %call9 = call zeroext i16 @PixelGetGreenQuantum(%struct._PixelWand* %9), !dbg !13619
  %conv10 = zext i16 %call9 to i32, !dbg !13619
  %10 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !13620
  %call11 = call zeroext i16 @PixelGetBlueQuantum(%struct._PixelWand* %10), !dbg !13621
  %conv12 = zext i16 %call11 to i32, !dbg !13621
  %11 = load %struct._PixelWand*, %struct._PixelWand** %threshold.addr, align 8, !dbg !13622
  %call13 = call zeroext i16 @PixelGetOpacityQuantum(%struct._PixelWand* %11), !dbg !13623
  %conv14 = zext i16 %call13 to i32, !dbg !13623
  %call15 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay7, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 %conv, i32 %conv10, i32 %conv12, i32 %conv14), !dbg !13624
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13625
  %images16 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !13626
  %13 = load %struct._Image*, %struct._Image** %images16, align 8, !dbg !13626
  %arraydecay17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %thresholds, i64 0, i64 0, !dbg !13627
  %call18 = call i32 @WhiteThresholdImage(%struct._Image* %13, i8* %arraydecay17), !dbg !13628
  store i32 %call18, i32* %status, align 4, !dbg !13629
  %14 = load i32, i32* %status, align 4, !dbg !13630
  %cmp19 = icmp eq i32 %14, 0, !dbg !13632
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !13633

if.then21:                                        ; preds = %if.end6
  %15 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13634
  %exception22 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %15, i32 0, i32 2, !dbg !13635
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception22, align 8, !dbg !13635
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13636
  %images23 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 5, !dbg !13637
  %18 = load %struct._Image*, %struct._Image** %images23, align 8, !dbg !13637
  %exception24 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 58, !dbg !13638
  call void @InheritException(%struct._ExceptionInfo* %16, %struct._ExceptionInfo* %exception24), !dbg !13639
  br label %if.end25, !dbg !13639

if.end25:                                         ; preds = %if.then21, %if.end6
  %19 = load i32, i32* %status, align 4, !dbg !13640
  store i32 %19, i32* %retval, align 4, !dbg !13641
  br label %return, !dbg !13641

return:                                           ; preds = %if.end25, %if.then2
  %20 = load i32, i32* %retval, align 4, !dbg !13642
  ret i32 %20, !dbg !13642
}

declare dso_local i32 @WhiteThresholdImage(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickWriteImage(%struct._MagickWand* %wand, i8* %filename) #0 !dbg !13643 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %filename.addr = alloca i8*, align 8
  %image = alloca %struct._Image*, align 8
  %write_info = alloca %struct._ImageInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13644, metadata !DIExpression()), !dbg !13645
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !13646, metadata !DIExpression()), !dbg !13647
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !13648, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %write_info, metadata !13650, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13652, metadata !DIExpression()), !dbg !13653
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13654
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13656
  %1 = load i32, i32* %debug, align 8, !dbg !13656
  %cmp = icmp ne i32 %1, 0, !dbg !13657
  br i1 %cmp, label %if.then, label %if.end, !dbg !13658

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13659
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13660
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13659
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 12999, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13661
  br label %if.end, !dbg !13662

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13663
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13665
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13665
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13666
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13667

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13668
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13668
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13668
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13668
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13668
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13668
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13001, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13668
  store i32 0, i32* %retval, align 4, !dbg !13668
  br label %return, !dbg !13668

if.end6:                                          ; preds = %if.end
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !13670
  %cmp7 = icmp ne i8* %8, null, !dbg !13672
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !13673

if.then8:                                         ; preds = %if.end6
  %9 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13674
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %9, i32 0, i32 5, !dbg !13675
  %10 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !13675
  %filename10 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 53, !dbg !13676
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename10, i64 0, i64 0, !dbg !13674
  %11 = load i8*, i8** %filename.addr, align 8, !dbg !13677
  %call12 = call i64 @CopyMagickString(i8* %arraydecay11, i8* %11, i64 4096), !dbg !13678
  br label %if.end13, !dbg !13679

if.end13:                                         ; preds = %if.then8, %if.end6
  %12 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13680
  %images14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %12, i32 0, i32 5, !dbg !13681
  %13 = load %struct._Image*, %struct._Image** %images14, align 8, !dbg !13681
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13682
  %exception15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 2, !dbg !13683
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception15, align 8, !dbg !13683
  %call16 = call %struct._Image* @CloneImage(%struct._Image* %13, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %15), !dbg !13684
  store %struct._Image* %call16, %struct._Image** %image, align 8, !dbg !13685
  %16 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13686
  %cmp17 = icmp eq %struct._Image* %16, null, !dbg !13688
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !13689

if.then18:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !13690
  br label %return, !dbg !13690

if.end19:                                         ; preds = %if.end13
  %17 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13691
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %17, i32 0, i32 3, !dbg !13692
  %18 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !13692
  %call20 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %18), !dbg !13693
  store %struct._ImageInfo* %call20, %struct._ImageInfo** %write_info, align 8, !dbg !13694
  %19 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13695
  %adjoin = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %19, i32 0, i32 3, !dbg !13696
  store i32 1, i32* %adjoin, align 4, !dbg !13697
  %20 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13698
  %21 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13699
  %call21 = call i32 @WriteImage(%struct._ImageInfo* %20, %struct._Image* %21), !dbg !13700
  store i32 %call21, i32* %status, align 4, !dbg !13701
  %22 = load i32, i32* %status, align 4, !dbg !13702
  %cmp22 = icmp eq i32 %22, 0, !dbg !13704
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !13705

if.then23:                                        ; preds = %if.end19
  %23 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13706
  %exception24 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %23, i32 0, i32 2, !dbg !13707
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception24, align 8, !dbg !13707
  %25 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13708
  %exception25 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 58, !dbg !13709
  call void @InheritException(%struct._ExceptionInfo* %24, %struct._ExceptionInfo* %exception25), !dbg !13710
  br label %if.end26, !dbg !13710

if.end26:                                         ; preds = %if.then23, %if.end19
  %26 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13711
  %call27 = call %struct._Image* @DestroyImage(%struct._Image* %26), !dbg !13712
  store %struct._Image* %call27, %struct._Image** %image, align 8, !dbg !13713
  %27 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13714
  %call28 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %27), !dbg !13715
  store %struct._ImageInfo* %call28, %struct._ImageInfo** %write_info, align 8, !dbg !13716
  %28 = load i32, i32* %status, align 4, !dbg !13717
  store i32 %28, i32* %retval, align 4, !dbg !13718
  br label %return, !dbg !13718

return:                                           ; preds = %if.end26, %if.then18, %if.then2
  %29 = load i32, i32* %retval, align 4, !dbg !13719
  ret i32 %29, !dbg !13719
}

declare dso_local i32 @WriteImage(%struct._ImageInfo*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickWriteImageFile(%struct._MagickWand* %wand, %struct._IO_FILE* %file) #0 !dbg !13720 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %image = alloca %struct._Image*, align 8
  %write_info = alloca %struct._ImageInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !13725, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %write_info, metadata !13727, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13729, metadata !DIExpression()), !dbg !13730
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13731
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13733
  %1 = load i32, i32* %debug, align 8, !dbg !13733
  %cmp = icmp ne i32 %1, 0, !dbg !13734
  br i1 %cmp, label %if.then, label %if.end, !dbg !13735

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13736
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13737
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13736
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13056, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13738
  br label %if.end, !dbg !13739

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13740
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13742
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13742
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13743
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13744

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13745
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13745
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13745
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13745
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13745
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13745
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13058, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13745
  store i32 0, i32* %retval, align 4, !dbg !13745
  br label %return, !dbg !13745

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13747
  %images7 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 5, !dbg !13748
  %9 = load %struct._Image*, %struct._Image** %images7, align 8, !dbg !13748
  %10 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13749
  %exception8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %10, i32 0, i32 2, !dbg !13750
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !13750
  %call9 = call %struct._Image* @CloneImage(%struct._Image* %9, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %11), !dbg !13751
  store %struct._Image* %call9, %struct._Image** %image, align 8, !dbg !13752
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13753
  %cmp10 = icmp eq %struct._Image* %12, null, !dbg !13755
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13756

if.then11:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !13757
  br label %return, !dbg !13757

if.end12:                                         ; preds = %if.end6
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13758
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 3, !dbg !13759
  %14 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !13759
  %call13 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %14), !dbg !13760
  store %struct._ImageInfo* %call13, %struct._ImageInfo** %write_info, align 8, !dbg !13761
  %15 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13762
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !13763
  call void @SetImageInfoFile(%struct._ImageInfo* %15, %struct._IO_FILE* %16), !dbg !13764
  %17 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13765
  %adjoin = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %17, i32 0, i32 3, !dbg !13766
  store i32 1, i32* %adjoin, align 4, !dbg !13767
  %18 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13768
  %19 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13769
  %call14 = call i32 @WriteImage(%struct._ImageInfo* %18, %struct._Image* %19), !dbg !13770
  store i32 %call14, i32* %status, align 4, !dbg !13771
  %20 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13772
  %call15 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %20), !dbg !13773
  store %struct._ImageInfo* %call15, %struct._ImageInfo** %write_info, align 8, !dbg !13774
  %21 = load i32, i32* %status, align 4, !dbg !13775
  %cmp16 = icmp eq i32 %21, 0, !dbg !13777
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !13778

if.then17:                                        ; preds = %if.end12
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13779
  %exception18 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 2, !dbg !13780
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception18, align 8, !dbg !13780
  %24 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13781
  %exception19 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 58, !dbg !13782
  call void @InheritException(%struct._ExceptionInfo* %23, %struct._ExceptionInfo* %exception19), !dbg !13783
  br label %if.end20, !dbg !13783

if.end20:                                         ; preds = %if.then17, %if.end12
  %25 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !13784
  %call21 = call %struct._Image* @DestroyImage(%struct._Image* %25), !dbg !13785
  store %struct._Image* %call21, %struct._Image** %image, align 8, !dbg !13786
  %26 = load i32, i32* %status, align 4, !dbg !13787
  store i32 %26, i32* %retval, align 4, !dbg !13788
  br label %return, !dbg !13788

return:                                           ; preds = %if.end20, %if.then11, %if.then2
  %27 = load i32, i32* %retval, align 4, !dbg !13789
  ret i32 %27, !dbg !13789
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickWriteImages(%struct._MagickWand* %wand, i8* %filename, i32 %adjoin) #0 !dbg !13790 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %filename.addr = alloca i8*, align 8
  %adjoin.addr = alloca i32, align 4
  %write_info = alloca %struct._ImageInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13791, metadata !DIExpression()), !dbg !13792
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !13793, metadata !DIExpression()), !dbg !13794
  store i32 %adjoin, i32* %adjoin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %adjoin.addr, metadata !13795, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %write_info, metadata !13797, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13799, metadata !DIExpression()), !dbg !13800
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13801
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13803
  %1 = load i32, i32* %debug, align 8, !dbg !13803
  %cmp = icmp ne i32 %1, 0, !dbg !13804
  br i1 %cmp, label %if.then, label %if.end, !dbg !13805

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13806
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13807
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13806
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13808
  br label %if.end, !dbg !13809

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13810
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13812
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13812
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13813
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13814

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13815
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13815
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13815
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13815
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13815
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13815
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13114, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13815
  store i32 0, i32* %retval, align 4, !dbg !13815
  br label %return, !dbg !13815

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13817
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 3, !dbg !13818
  %9 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !13818
  %call7 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %9), !dbg !13819
  store %struct._ImageInfo* %call7, %struct._ImageInfo** %write_info, align 8, !dbg !13820
  %10 = load i32, i32* %adjoin.addr, align 4, !dbg !13821
  %11 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13822
  %adjoin8 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %11, i32 0, i32 3, !dbg !13823
  store i32 %10, i32* %adjoin8, align 4, !dbg !13824
  %12 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13825
  %13 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13826
  %images9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %13, i32 0, i32 5, !dbg !13827
  %14 = load %struct._Image*, %struct._Image** %images9, align 8, !dbg !13827
  %15 = load i8*, i8** %filename.addr, align 8, !dbg !13828
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13829
  %exception10 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !13830
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception10, align 8, !dbg !13830
  %call11 = call i32 @WriteImages(%struct._ImageInfo* %12, %struct._Image* %14, i8* %15, %struct._ExceptionInfo* %17), !dbg !13831
  store i32 %call11, i32* %status, align 4, !dbg !13832
  %18 = load i32, i32* %status, align 4, !dbg !13833
  %cmp12 = icmp eq i32 %18, 0, !dbg !13835
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !13836

if.then13:                                        ; preds = %if.end6
  %19 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13837
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %19, i32 0, i32 2, !dbg !13838
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !13838
  %21 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13839
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %21, i32 0, i32 5, !dbg !13840
  %22 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !13840
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 58, !dbg !13841
  call void @InheritException(%struct._ExceptionInfo* %20, %struct._ExceptionInfo* %exception16), !dbg !13842
  br label %if.end17, !dbg !13842

if.end17:                                         ; preds = %if.then13, %if.end6
  %23 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13843
  %call18 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %23), !dbg !13844
  store %struct._ImageInfo* %call18, %struct._ImageInfo** %write_info, align 8, !dbg !13845
  %24 = load i32, i32* %status, align 4, !dbg !13846
  store i32 %24, i32* %retval, align 4, !dbg !13847
  br label %return, !dbg !13847

return:                                           ; preds = %if.end17, %if.then2
  %25 = load i32, i32* %retval, align 4, !dbg !13848
  ret i32 %25, !dbg !13848
}

declare dso_local i32 @WriteImages(%struct._ImageInfo*, %struct._Image*, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickWriteImagesFile(%struct._MagickWand* %wand, %struct._IO_FILE* %file) #0 !dbg !13849 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._MagickWand*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %write_info = alloca %struct._ImageInfo*, align 8
  %status = alloca i32, align 4
  store %struct._MagickWand* %wand, %struct._MagickWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %wand.addr, metadata !13850, metadata !DIExpression()), !dbg !13851
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !13852, metadata !DIExpression()), !dbg !13853
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %write_info, metadata !13854, metadata !DIExpression()), !dbg !13855
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13856, metadata !DIExpression()), !dbg !13857
  %0 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13858
  %debug = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %0, i32 0, i32 8, !dbg !13860
  %1 = load i32, i32* %debug, align 8, !dbg !13860
  %cmp = icmp ne i32 %1, 0, !dbg !13861
  br i1 %cmp, label %if.then, label %if.end, !dbg !13862

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13863
  %name = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %2, i32 0, i32 1, !dbg !13864
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !13863
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13159, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !13865
  br label %if.end, !dbg !13866

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13867
  %images = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %3, i32 0, i32 5, !dbg !13869
  %4 = load %struct._Image*, %struct._Image** %images, align 8, !dbg !13869
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !13870
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !13871

if.then2:                                         ; preds = %if.end
  %5 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13872
  %exception = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %5, i32 0, i32 2, !dbg !13872
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !13872
  %7 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13872
  %name3 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %7, i32 0, i32 1, !dbg !13872
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !13872
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 13161, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !13872
  store i32 0, i32* %retval, align 4, !dbg !13872
  br label %return, !dbg !13872

if.end6:                                          ; preds = %if.end
  %8 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13874
  %image_info = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %8, i32 0, i32 3, !dbg !13875
  %9 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !13875
  %call7 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %9), !dbg !13876
  store %struct._ImageInfo* %call7, %struct._ImageInfo** %write_info, align 8, !dbg !13877
  %10 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13878
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !13879
  call void @SetImageInfoFile(%struct._ImageInfo* %10, %struct._IO_FILE* %11), !dbg !13880
  %12 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13881
  %adjoin = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %12, i32 0, i32 3, !dbg !13882
  store i32 1, i32* %adjoin, align 4, !dbg !13883
  %13 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13884
  %14 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13885
  %images8 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %14, i32 0, i32 5, !dbg !13886
  %15 = load %struct._Image*, %struct._Image** %images8, align 8, !dbg !13886
  %16 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13887
  %exception9 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %16, i32 0, i32 2, !dbg !13888
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !13888
  %call10 = call i32 @WriteImages(%struct._ImageInfo* %13, %struct._Image* %15, i8* null, %struct._ExceptionInfo* %17), !dbg !13889
  store i32 %call10, i32* %status, align 4, !dbg !13890
  %18 = load %struct._ImageInfo*, %struct._ImageInfo** %write_info, align 8, !dbg !13891
  %call11 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %18), !dbg !13892
  store %struct._ImageInfo* %call11, %struct._ImageInfo** %write_info, align 8, !dbg !13893
  %19 = load i32, i32* %status, align 4, !dbg !13894
  %cmp12 = icmp eq i32 %19, 0, !dbg !13896
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !13897

if.then13:                                        ; preds = %if.end6
  %20 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13898
  %exception14 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %20, i32 0, i32 2, !dbg !13899
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !13899
  %22 = load %struct._MagickWand*, %struct._MagickWand** %wand.addr, align 8, !dbg !13900
  %images15 = getelementptr inbounds %struct._MagickWand, %struct._MagickWand* %22, i32 0, i32 5, !dbg !13901
  %23 = load %struct._Image*, %struct._Image** %images15, align 8, !dbg !13901
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 58, !dbg !13902
  call void @InheritException(%struct._ExceptionInfo* %21, %struct._ExceptionInfo* %exception16), !dbg !13903
  br label %if.end17, !dbg !13903

if.end17:                                         ; preds = %if.then13, %if.end6
  %24 = load i32, i32* %status, align 4, !dbg !13904
  store i32 %24, i32* %retval, align 4, !dbg !13905
  br label %return, !dbg !13905

return:                                           ; preds = %if.end17, %if.then2
  %25 = load i32, i32* %retval, align 4, !dbg !13906
  ret i32 %25, !dbg !13906
}

declare dso_local %struct._Image* @GetLastImageInList(%struct._Image*) #2

declare dso_local void @PrependImageToList(%struct._Image**, %struct._Image*) #2

declare dso_local void @InsertImageInList(%struct._Image**, %struct._Image*) #2

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #4

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local void @CatchException(%struct._ExceptionInfo*) #2

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local void @MagickWandTerminus() #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

declare dso_local i64 @AcquireWandId() #2

declare dso_local %struct._ExceptionInfo* @AcquireExceptionInfo() #2

declare dso_local i32 @IsEventLogging() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { allocsize(0) }
attributes #8 = { noreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1449, !1450, !1451}
!llvm.ident = !{!1452}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !789, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "wand/magick-image.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !47, !72, !84, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !401, !423, !444, !451, !476, !487, !493, !499, !504, !510, !516, !523, !531, !544, !550, !556, !560, !565, !606, !621, !640, !651, !674, !709, !716, !723, !748, !763, !769, !778}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 25, baseType: !5, size: 32, elements: !12)
!11 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!13 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!33 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!34 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!35 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!36 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!37 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!38 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!39 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!41 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!42 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!43 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!46 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 25, baseType: !5, size: 32, elements: !49)
!48 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!50 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 75, baseType: !5, size: 32, elements: !74)
!73 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83}
!75 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !85)
!85 = !{!86, !87}
!86 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 27, baseType: !5, size: 32, elements: !370)
!369 = !DIFile(filename: "./magick/effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!370 = !{!371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400}
!371 = !DIEnumerator(name: "UndefinedPreview", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "RotatePreview", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "ShearPreview", value: 2, isUnsigned: true)
!374 = !DIEnumerator(name: "RollPreview", value: 3, isUnsigned: true)
!375 = !DIEnumerator(name: "HuePreview", value: 4, isUnsigned: true)
!376 = !DIEnumerator(name: "SaturationPreview", value: 5, isUnsigned: true)
!377 = !DIEnumerator(name: "BrightnessPreview", value: 6, isUnsigned: true)
!378 = !DIEnumerator(name: "GammaPreview", value: 7, isUnsigned: true)
!379 = !DIEnumerator(name: "SpiffPreview", value: 8, isUnsigned: true)
!380 = !DIEnumerator(name: "DullPreview", value: 9, isUnsigned: true)
!381 = !DIEnumerator(name: "GrayscalePreview", value: 10, isUnsigned: true)
!382 = !DIEnumerator(name: "QuantizePreview", value: 11, isUnsigned: true)
!383 = !DIEnumerator(name: "DespecklePreview", value: 12, isUnsigned: true)
!384 = !DIEnumerator(name: "ReduceNoisePreview", value: 13, isUnsigned: true)
!385 = !DIEnumerator(name: "AddNoisePreview", value: 14, isUnsigned: true)
!386 = !DIEnumerator(name: "SharpenPreview", value: 15, isUnsigned: true)
!387 = !DIEnumerator(name: "BlurPreview", value: 16, isUnsigned: true)
!388 = !DIEnumerator(name: "ThresholdPreview", value: 17, isUnsigned: true)
!389 = !DIEnumerator(name: "EdgeDetectPreview", value: 18, isUnsigned: true)
!390 = !DIEnumerator(name: "SpreadPreview", value: 19, isUnsigned: true)
!391 = !DIEnumerator(name: "SolarizePreview", value: 20, isUnsigned: true)
!392 = !DIEnumerator(name: "ShadePreview", value: 21, isUnsigned: true)
!393 = !DIEnumerator(name: "RaisePreview", value: 22, isUnsigned: true)
!394 = !DIEnumerator(name: "SegmentPreview", value: 23, isUnsigned: true)
!395 = !DIEnumerator(name: "SwirlPreview", value: 24, isUnsigned: true)
!396 = !DIEnumerator(name: "ImplodePreview", value: 25, isUnsigned: true)
!397 = !DIEnumerator(name: "WavePreview", value: 26, isUnsigned: true)
!398 = !DIEnumerator(name: "OilPaintPreview", value: 27, isUnsigned: true)
!399 = !DIEnumerator(name: "CharcoalDrawingPreview", value: 28, isUnsigned: true)
!400 = !DIEnumerator(name: "JPEGPreview", value: 29, isUnsigned: true)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !402)
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422}
!403 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!404 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!405 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!406 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!408 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!409 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!410 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!411 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!412 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!413 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!414 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!415 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!416 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!417 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!418 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!419 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!420 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!421 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!422 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!423 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !424, line: 27, baseType: !5, size: 32, elements: !425)
!424 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443}
!426 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!427 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!428 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!429 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!430 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!431 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!432 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!433 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!434 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!435 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!436 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!437 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!438 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!439 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!440 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!441 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!442 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!443 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!444 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !445, line: 27, baseType: !5, size: 32, elements: !446)
!445 = !DIFile(filename: "./magick/quantize.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!446 = !{!447, !448, !449, !450}
!447 = !DIEnumerator(name: "UndefinedDitherMethod", value: 0, isUnsigned: true)
!448 = !DIEnumerator(name: "NoDitherMethod", value: 1, isUnsigned: true)
!449 = !DIEnumerator(name: "RiemersmaDitherMethod", value: 2, isUnsigned: true)
!450 = !DIEnumerator(name: "FloydSteinbergDitherMethod", value: 3, isUnsigned: true)
!451 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !452, line: 34, baseType: !5, size: 32, elements: !453)
!452 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!453 = !{!454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475}
!454 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!455 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!456 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!457 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!458 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!459 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!460 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!461 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!462 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!463 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!464 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!465 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!466 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!467 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!468 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!469 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!470 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!471 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!472 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!473 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!474 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!475 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !477, line: 27, baseType: !5, size: 32, elements: !478)
!477 = !DIFile(filename: "./magick/fx.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!478 = !{!479, !480, !481, !482, !483, !484, !485, !486}
!479 = !DIEnumerator(name: "UndefinedNoise", value: 0, isUnsigned: true)
!480 = !DIEnumerator(name: "UniformNoise", value: 1, isUnsigned: true)
!481 = !DIEnumerator(name: "GaussianNoise", value: 2, isUnsigned: true)
!482 = !DIEnumerator(name: "MultiplicativeGaussianNoise", value: 3, isUnsigned: true)
!483 = !DIEnumerator(name: "ImpulseNoise", value: 4, isUnsigned: true)
!484 = !DIEnumerator(name: "LaplacianNoise", value: 5, isUnsigned: true)
!485 = !DIEnumerator(name: "PoissonNoise", value: 6, isUnsigned: true)
!486 = !DIEnumerator(name: "RandomNoise", value: 7, isUnsigned: true)
!487 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 70, baseType: !5, size: 32, elements: !489)
!488 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!489 = !{!490, !491, !492}
!490 = !DIEnumerator(name: "UndefinedGradient", value: 0, isUnsigned: true)
!491 = !DIEnumerator(name: "LinearGradient", value: 1, isUnsigned: true)
!492 = !DIEnumerator(name: "RadialGradient", value: 2, isUnsigned: true)
!493 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 129, baseType: !5, size: 32, elements: !494)
!494 = !{!495, !496, !497, !498}
!495 = !DIEnumerator(name: "UndefinedSpread", value: 0, isUnsigned: true)
!496 = !DIEnumerator(name: "PadSpread", value: 1, isUnsigned: true)
!497 = !DIEnumerator(name: "ReflectSpread", value: 2, isUnsigned: true)
!498 = !DIEnumerator(name: "RepeatSpread", value: 3, isUnsigned: true)
!499 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 62, baseType: !5, size: 32, elements: !500)
!500 = !{!501, !502, !503}
!501 = !DIEnumerator(name: "UndefinedRule", value: 0, isUnsigned: true)
!502 = !DIEnumerator(name: "EvenOddRule", value: 1, isUnsigned: true)
!503 = !DIEnumerator(name: "NonZeroRule", value: 2, isUnsigned: true)
!504 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 77, baseType: !5, size: 32, elements: !505)
!505 = !{!506, !507, !508, !509}
!506 = !DIEnumerator(name: "UndefinedCap", value: 0, isUnsigned: true)
!507 = !DIEnumerator(name: "ButtCap", value: 1, isUnsigned: true)
!508 = !DIEnumerator(name: "RoundCap", value: 2, isUnsigned: true)
!509 = !DIEnumerator(name: "SquareCap", value: 3, isUnsigned: true)
!510 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 85, baseType: !5, size: 32, elements: !511)
!511 = !{!512, !513, !514, !515}
!512 = !DIEnumerator(name: "UndefinedJoin", value: 0, isUnsigned: true)
!513 = !DIEnumerator(name: "MiterJoin", value: 1, isUnsigned: true)
!514 = !DIEnumerator(name: "RoundJoin", value: 2, isUnsigned: true)
!515 = !DIEnumerator(name: "BevelJoin", value: 3, isUnsigned: true)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 46, baseType: !5, size: 32, elements: !517)
!517 = !{!518, !519, !520, !521, !522}
!518 = !DIEnumerator(name: "UndefinedDecoration", value: 0, isUnsigned: true)
!519 = !DIEnumerator(name: "NoDecoration", value: 1, isUnsigned: true)
!520 = !DIEnumerator(name: "UnderlineDecoration", value: 2, isUnsigned: true)
!521 = !DIEnumerator(name: "OverlineDecoration", value: 3, isUnsigned: true)
!522 = !DIEnumerator(name: "LineThroughDecoration", value: 4, isUnsigned: true)
!523 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !524, line: 40, baseType: !5, size: 32, elements: !525)
!524 = !DIFile(filename: "./magick/type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!525 = !{!526, !527, !528, !529, !530}
!526 = !DIEnumerator(name: "UndefinedStyle", value: 0, isUnsigned: true)
!527 = !DIEnumerator(name: "NormalStyle", value: 1, isUnsigned: true)
!528 = !DIEnumerator(name: "ItalicStyle", value: 2, isUnsigned: true)
!529 = !DIEnumerator(name: "ObliqueStyle", value: 3, isUnsigned: true)
!530 = !DIEnumerator(name: "AnyStyle", value: 4, isUnsigned: true)
!531 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !524, line: 25, baseType: !5, size: 32, elements: !532)
!532 = !{!533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!533 = !DIEnumerator(name: "UndefinedStretch", value: 0, isUnsigned: true)
!534 = !DIEnumerator(name: "NormalStretch", value: 1, isUnsigned: true)
!535 = !DIEnumerator(name: "UltraCondensedStretch", value: 2, isUnsigned: true)
!536 = !DIEnumerator(name: "ExtraCondensedStretch", value: 3, isUnsigned: true)
!537 = !DIEnumerator(name: "CondensedStretch", value: 4, isUnsigned: true)
!538 = !DIEnumerator(name: "SemiCondensedStretch", value: 5, isUnsigned: true)
!539 = !DIEnumerator(name: "SemiExpandedStretch", value: 6, isUnsigned: true)
!540 = !DIEnumerator(name: "ExpandedStretch", value: 7, isUnsigned: true)
!541 = !DIEnumerator(name: "ExtraExpandedStretch", value: 8, isUnsigned: true)
!542 = !DIEnumerator(name: "UltraExpandedStretch", value: 9, isUnsigned: true)
!543 = !DIEnumerator(name: "AnyStretch", value: 10, isUnsigned: true)
!544 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 30, baseType: !5, size: 32, elements: !545)
!545 = !{!546, !547, !548, !549}
!546 = !DIEnumerator(name: "UndefinedAlign", value: 0, isUnsigned: true)
!547 = !DIEnumerator(name: "LeftAlign", value: 1, isUnsigned: true)
!548 = !DIEnumerator(name: "CenterAlign", value: 2, isUnsigned: true)
!549 = !DIEnumerator(name: "RightAlign", value: 3, isUnsigned: true)
!550 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 38, baseType: !5, size: 32, elements: !551)
!551 = !{!552, !553, !554, !555}
!552 = !DIEnumerator(name: "UndefinedPathUnits", value: 0, isUnsigned: true)
!553 = !DIEnumerator(name: "UserSpace", value: 1, isUnsigned: true)
!554 = !DIEnumerator(name: "UserSpaceOnUse", value: 2, isUnsigned: true)
!555 = !DIEnumerator(name: "ObjectBoundingBox", value: 3, isUnsigned: true)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 123, baseType: !5, size: 32, elements: !557)
!557 = !{!558, !559}
!558 = !DIEnumerator(name: "UndefinedReference", value: 0, isUnsigned: true)
!559 = !DIEnumerator(name: "GradientReference", value: 1, isUnsigned: true)
!560 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !488, line: 55, baseType: !5, size: 32, elements: !561)
!561 = !{!562, !563, !564}
!562 = !DIEnumerator(name: "UndefinedDirection", value: 0, isUnsigned: true)
!563 = !DIEnumerator(name: "RightToLeftDirection", value: 1, isUnsigned: true)
!564 = !DIEnumerator(name: "LeftToRightDirection", value: 2, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !566, line: 27, baseType: !5, size: 32, elements: !567)
!566 = !DIFile(filename: "./magick/morphology.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!568 = !DIEnumerator(name: "UndefinedKernel", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "UnityKernel", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "GaussianKernel", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "DoGKernel", value: 3, isUnsigned: true)
!572 = !DIEnumerator(name: "LoGKernel", value: 4, isUnsigned: true)
!573 = !DIEnumerator(name: "BlurKernel", value: 5, isUnsigned: true)
!574 = !DIEnumerator(name: "CometKernel", value: 6, isUnsigned: true)
!575 = !DIEnumerator(name: "LaplacianKernel", value: 7, isUnsigned: true)
!576 = !DIEnumerator(name: "SobelKernel", value: 8, isUnsigned: true)
!577 = !DIEnumerator(name: "FreiChenKernel", value: 9, isUnsigned: true)
!578 = !DIEnumerator(name: "RobertsKernel", value: 10, isUnsigned: true)
!579 = !DIEnumerator(name: "PrewittKernel", value: 11, isUnsigned: true)
!580 = !DIEnumerator(name: "CompassKernel", value: 12, isUnsigned: true)
!581 = !DIEnumerator(name: "KirschKernel", value: 13, isUnsigned: true)
!582 = !DIEnumerator(name: "DiamondKernel", value: 14, isUnsigned: true)
!583 = !DIEnumerator(name: "SquareKernel", value: 15, isUnsigned: true)
!584 = !DIEnumerator(name: "RectangleKernel", value: 16, isUnsigned: true)
!585 = !DIEnumerator(name: "OctagonKernel", value: 17, isUnsigned: true)
!586 = !DIEnumerator(name: "DiskKernel", value: 18, isUnsigned: true)
!587 = !DIEnumerator(name: "PlusKernel", value: 19, isUnsigned: true)
!588 = !DIEnumerator(name: "CrossKernel", value: 20, isUnsigned: true)
!589 = !DIEnumerator(name: "RingKernel", value: 21, isUnsigned: true)
!590 = !DIEnumerator(name: "PeaksKernel", value: 22, isUnsigned: true)
!591 = !DIEnumerator(name: "EdgesKernel", value: 23, isUnsigned: true)
!592 = !DIEnumerator(name: "CornersKernel", value: 24, isUnsigned: true)
!593 = !DIEnumerator(name: "DiagonalsKernel", value: 25, isUnsigned: true)
!594 = !DIEnumerator(name: "LineEndsKernel", value: 26, isUnsigned: true)
!595 = !DIEnumerator(name: "LineJunctionsKernel", value: 27, isUnsigned: true)
!596 = !DIEnumerator(name: "RidgesKernel", value: 28, isUnsigned: true)
!597 = !DIEnumerator(name: "ConvexHullKernel", value: 29, isUnsigned: true)
!598 = !DIEnumerator(name: "ThinSEKernel", value: 30, isUnsigned: true)
!599 = !DIEnumerator(name: "SkeletonKernel", value: 31, isUnsigned: true)
!600 = !DIEnumerator(name: "ChebyshevKernel", value: 32, isUnsigned: true)
!601 = !DIEnumerator(name: "ManhattanKernel", value: 33, isUnsigned: true)
!602 = !DIEnumerator(name: "OctagonalKernel", value: 34, isUnsigned: true)
!603 = !DIEnumerator(name: "EuclideanKernel", value: 35, isUnsigned: true)
!604 = !DIEnumerator(name: "UserDefinedKernel", value: 36, isUnsigned: true)
!605 = !DIEnumerator(name: "BinomialKernel", value: 37, isUnsigned: true)
!606 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !607, line: 27, baseType: !5, size: 32, elements: !608)
!607 = !DIFile(filename: "./magick/compare.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!608 = !{!609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620}
!609 = !DIEnumerator(name: "UndefinedMetric", value: 0, isUnsigned: true)
!610 = !DIEnumerator(name: "AbsoluteErrorMetric", value: 1, isUnsigned: true)
!611 = !DIEnumerator(name: "MeanAbsoluteErrorMetric", value: 2, isUnsigned: true)
!612 = !DIEnumerator(name: "MeanErrorPerPixelMetric", value: 3, isUnsigned: true)
!613 = !DIEnumerator(name: "MeanSquaredErrorMetric", value: 4, isUnsigned: true)
!614 = !DIEnumerator(name: "PeakAbsoluteErrorMetric", value: 5, isUnsigned: true)
!615 = !DIEnumerator(name: "PeakSignalToNoiseRatioMetric", value: 6, isUnsigned: true)
!616 = !DIEnumerator(name: "RootMeanSquaredErrorMetric", value: 7, isUnsigned: true)
!617 = !DIEnumerator(name: "NormalizedCrossCorrelationErrorMetric", value: 8, isUnsigned: true)
!618 = !DIEnumerator(name: "FuzzErrorMetric", value: 9, isUnsigned: true)
!619 = !DIEnumerator(name: "UndefinedErrorMetric", value: 0, isUnsigned: true)
!620 = !DIEnumerator(name: "PerceptualHashErrorMetric", value: 255, isUnsigned: true)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 34, baseType: !5, size: 32, elements: !622)
!622 = !{!623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639}
!623 = !DIEnumerator(name: "UndefinedLayer", value: 0, isUnsigned: true)
!624 = !DIEnumerator(name: "CoalesceLayer", value: 1, isUnsigned: true)
!625 = !DIEnumerator(name: "CompareAnyLayer", value: 2, isUnsigned: true)
!626 = !DIEnumerator(name: "CompareClearLayer", value: 3, isUnsigned: true)
!627 = !DIEnumerator(name: "CompareOverlayLayer", value: 4, isUnsigned: true)
!628 = !DIEnumerator(name: "DisposeLayer", value: 5, isUnsigned: true)
!629 = !DIEnumerator(name: "OptimizeLayer", value: 6, isUnsigned: true)
!630 = !DIEnumerator(name: "OptimizeImageLayer", value: 7, isUnsigned: true)
!631 = !DIEnumerator(name: "OptimizePlusLayer", value: 8, isUnsigned: true)
!632 = !DIEnumerator(name: "OptimizeTransLayer", value: 9, isUnsigned: true)
!633 = !DIEnumerator(name: "RemoveDupsLayer", value: 10, isUnsigned: true)
!634 = !DIEnumerator(name: "RemoveZeroLayer", value: 11, isUnsigned: true)
!635 = !DIEnumerator(name: "CompositeLayer", value: 12, isUnsigned: true)
!636 = !DIEnumerator(name: "MergeLayer", value: 13, isUnsigned: true)
!637 = !DIEnumerator(name: "FlattenLayer", value: 14, isUnsigned: true)
!638 = !DIEnumerator(name: "MosaicLayer", value: 15, isUnsigned: true)
!639 = !DIEnumerator(name: "TrimBoundsLayer", value: 16, isUnsigned: true)
!640 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !641, line: 25, baseType: !5, size: 32, elements: !642)
!641 = !DIFile(filename: "./magick/constitute.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!642 = !{!643, !644, !645, !646, !647, !648, !649, !650}
!643 = !DIEnumerator(name: "UndefinedPixel", value: 0, isUnsigned: true)
!644 = !DIEnumerator(name: "CharPixel", value: 1, isUnsigned: true)
!645 = !DIEnumerator(name: "DoublePixel", value: 2, isUnsigned: true)
!646 = !DIEnumerator(name: "FloatPixel", value: 3, isUnsigned: true)
!647 = !DIEnumerator(name: "IntegerPixel", value: 4, isUnsigned: true)
!648 = !DIEnumerator(name: "LongPixel", value: 5, isUnsigned: true)
!649 = !DIEnumerator(name: "QuantumPixel", value: 6, isUnsigned: true)
!650 = !DIEnumerator(name: "ShortPixel", value: 7, isUnsigned: true)
!651 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !652, line: 34, baseType: !5, size: 32, elements: !653)
!652 = !DIFile(filename: "./magick/distort.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!653 = !{!654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673}
!654 = !DIEnumerator(name: "UndefinedDistortion", value: 0, isUnsigned: true)
!655 = !DIEnumerator(name: "AffineDistortion", value: 1, isUnsigned: true)
!656 = !DIEnumerator(name: "AffineProjectionDistortion", value: 2, isUnsigned: true)
!657 = !DIEnumerator(name: "ScaleRotateTranslateDistortion", value: 3, isUnsigned: true)
!658 = !DIEnumerator(name: "PerspectiveDistortion", value: 4, isUnsigned: true)
!659 = !DIEnumerator(name: "PerspectiveProjectionDistortion", value: 5, isUnsigned: true)
!660 = !DIEnumerator(name: "BilinearForwardDistortion", value: 6, isUnsigned: true)
!661 = !DIEnumerator(name: "BilinearDistortion", value: 6, isUnsigned: true)
!662 = !DIEnumerator(name: "BilinearReverseDistortion", value: 7, isUnsigned: true)
!663 = !DIEnumerator(name: "PolynomialDistortion", value: 8, isUnsigned: true)
!664 = !DIEnumerator(name: "ArcDistortion", value: 9, isUnsigned: true)
!665 = !DIEnumerator(name: "PolarDistortion", value: 10, isUnsigned: true)
!666 = !DIEnumerator(name: "DePolarDistortion", value: 11, isUnsigned: true)
!667 = !DIEnumerator(name: "Cylinder2PlaneDistortion", value: 12, isUnsigned: true)
!668 = !DIEnumerator(name: "Plane2CylinderDistortion", value: 13, isUnsigned: true)
!669 = !DIEnumerator(name: "BarrelDistortion", value: 14, isUnsigned: true)
!670 = !DIEnumerator(name: "BarrelInverseDistortion", value: 15, isUnsigned: true)
!671 = !DIEnumerator(name: "ShepardsDistortion", value: 16, isUnsigned: true)
!672 = !DIEnumerator(name: "ResizeDistortion", value: 17, isUnsigned: true)
!673 = !DIEnumerator(name: "SentinelDistortion", value: 18, isUnsigned: true)
!674 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !675, line: 68, baseType: !5, size: 32, elements: !676)
!675 = !DIFile(filename: "./magick/statistic.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!676 = !{!677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708}
!677 = !DIEnumerator(name: "UndefinedEvaluateOperator", value: 0, isUnsigned: true)
!678 = !DIEnumerator(name: "AddEvaluateOperator", value: 1, isUnsigned: true)
!679 = !DIEnumerator(name: "AndEvaluateOperator", value: 2, isUnsigned: true)
!680 = !DIEnumerator(name: "DivideEvaluateOperator", value: 3, isUnsigned: true)
!681 = !DIEnumerator(name: "LeftShiftEvaluateOperator", value: 4, isUnsigned: true)
!682 = !DIEnumerator(name: "MaxEvaluateOperator", value: 5, isUnsigned: true)
!683 = !DIEnumerator(name: "MinEvaluateOperator", value: 6, isUnsigned: true)
!684 = !DIEnumerator(name: "MultiplyEvaluateOperator", value: 7, isUnsigned: true)
!685 = !DIEnumerator(name: "OrEvaluateOperator", value: 8, isUnsigned: true)
!686 = !DIEnumerator(name: "RightShiftEvaluateOperator", value: 9, isUnsigned: true)
!687 = !DIEnumerator(name: "SetEvaluateOperator", value: 10, isUnsigned: true)
!688 = !DIEnumerator(name: "SubtractEvaluateOperator", value: 11, isUnsigned: true)
!689 = !DIEnumerator(name: "XorEvaluateOperator", value: 12, isUnsigned: true)
!690 = !DIEnumerator(name: "PowEvaluateOperator", value: 13, isUnsigned: true)
!691 = !DIEnumerator(name: "LogEvaluateOperator", value: 14, isUnsigned: true)
!692 = !DIEnumerator(name: "ThresholdEvaluateOperator", value: 15, isUnsigned: true)
!693 = !DIEnumerator(name: "ThresholdBlackEvaluateOperator", value: 16, isUnsigned: true)
!694 = !DIEnumerator(name: "ThresholdWhiteEvaluateOperator", value: 17, isUnsigned: true)
!695 = !DIEnumerator(name: "GaussianNoiseEvaluateOperator", value: 18, isUnsigned: true)
!696 = !DIEnumerator(name: "ImpulseNoiseEvaluateOperator", value: 19, isUnsigned: true)
!697 = !DIEnumerator(name: "LaplacianNoiseEvaluateOperator", value: 20, isUnsigned: true)
!698 = !DIEnumerator(name: "MultiplicativeNoiseEvaluateOperator", value: 21, isUnsigned: true)
!699 = !DIEnumerator(name: "PoissonNoiseEvaluateOperator", value: 22, isUnsigned: true)
!700 = !DIEnumerator(name: "UniformNoiseEvaluateOperator", value: 23, isUnsigned: true)
!701 = !DIEnumerator(name: "CosineEvaluateOperator", value: 24, isUnsigned: true)
!702 = !DIEnumerator(name: "SineEvaluateOperator", value: 25, isUnsigned: true)
!703 = !DIEnumerator(name: "AddModulusEvaluateOperator", value: 26, isUnsigned: true)
!704 = !DIEnumerator(name: "MeanEvaluateOperator", value: 27, isUnsigned: true)
!705 = !DIEnumerator(name: "AbsEvaluateOperator", value: 28, isUnsigned: true)
!706 = !DIEnumerator(name: "ExponentialEvaluateOperator", value: 29, isUnsigned: true)
!707 = !DIEnumerator(name: "MedianEvaluateOperator", value: 30, isUnsigned: true)
!708 = !DIEnumerator(name: "SumEvaluateOperator", value: 31, isUnsigned: true)
!709 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !675, line: 104, baseType: !5, size: 32, elements: !710)
!710 = !{!711, !712, !713, !714, !715}
!711 = !DIEnumerator(name: "UndefinedFunction", value: 0, isUnsigned: true)
!712 = !DIEnumerator(name: "PolynomialFunction", value: 1, isUnsigned: true)
!713 = !DIEnumerator(name: "SinusoidFunction", value: 2, isUnsigned: true)
!714 = !DIEnumerator(name: "ArcsinFunction", value: 3, isUnsigned: true)
!715 = !DIEnumerator(name: "ArctanFunction", value: 4, isUnsigned: true)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 25, baseType: !5, size: 32, elements: !718)
!717 = !DIFile(filename: "./magick/montage.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!718 = !{!719, !720, !721, !722}
!719 = !DIEnumerator(name: "UndefinedMode", value: 0, isUnsigned: true)
!720 = !DIEnumerator(name: "FrameMode", value: 1, isUnsigned: true)
!721 = !DIEnumerator(name: "UnframeMode", value: 2, isUnsigned: true)
!722 = !DIEnumerator(name: "ConcatenateMode", value: 3, isUnsigned: true)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !566, line: 69, baseType: !5, size: 32, elements: !724)
!724 = !{!725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747}
!725 = !DIEnumerator(name: "UndefinedMorphology", value: 0, isUnsigned: true)
!726 = !DIEnumerator(name: "ConvolveMorphology", value: 1, isUnsigned: true)
!727 = !DIEnumerator(name: "CorrelateMorphology", value: 2, isUnsigned: true)
!728 = !DIEnumerator(name: "ErodeMorphology", value: 3, isUnsigned: true)
!729 = !DIEnumerator(name: "DilateMorphology", value: 4, isUnsigned: true)
!730 = !DIEnumerator(name: "ErodeIntensityMorphology", value: 5, isUnsigned: true)
!731 = !DIEnumerator(name: "DilateIntensityMorphology", value: 6, isUnsigned: true)
!732 = !DIEnumerator(name: "DistanceMorphology", value: 7, isUnsigned: true)
!733 = !DIEnumerator(name: "OpenMorphology", value: 8, isUnsigned: true)
!734 = !DIEnumerator(name: "CloseMorphology", value: 9, isUnsigned: true)
!735 = !DIEnumerator(name: "OpenIntensityMorphology", value: 10, isUnsigned: true)
!736 = !DIEnumerator(name: "CloseIntensityMorphology", value: 11, isUnsigned: true)
!737 = !DIEnumerator(name: "SmoothMorphology", value: 12, isUnsigned: true)
!738 = !DIEnumerator(name: "EdgeInMorphology", value: 13, isUnsigned: true)
!739 = !DIEnumerator(name: "EdgeOutMorphology", value: 14, isUnsigned: true)
!740 = !DIEnumerator(name: "EdgeMorphology", value: 15, isUnsigned: true)
!741 = !DIEnumerator(name: "TopHatMorphology", value: 16, isUnsigned: true)
!742 = !DIEnumerator(name: "BottomHatMorphology", value: 17, isUnsigned: true)
!743 = !DIEnumerator(name: "HitAndMissMorphology", value: 18, isUnsigned: true)
!744 = !DIEnumerator(name: "ThinningMorphology", value: 19, isUnsigned: true)
!745 = !DIEnumerator(name: "ThickenMorphology", value: 20, isUnsigned: true)
!746 = !DIEnumerator(name: "VoronoiMorphology", value: 21, isUnsigned: true)
!747 = !DIEnumerator(name: "IterativeDistanceMorphology", value: 22, isUnsigned: true)
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 30, baseType: !5, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762}
!750 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!751 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!752 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!753 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!754 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!755 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!756 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!757 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!758 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!759 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!760 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!761 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!762 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!763 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !764, line: 28, baseType: !5, size: 32, elements: !765)
!764 = !DIFile(filename: "./magick/magick.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!765 = !{!766, !767, !768}
!766 = !DIEnumerator(name: "UndefinedFormatType", value: 0, isUnsigned: true)
!767 = !DIEnumerator(name: "ImplicitFormatType", value: 1, isUnsigned: true)
!768 = !DIEnumerator(name: "ExplicitFormatType", value: 2, isUnsigned: true)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !652, line: 58, baseType: !5, size: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777}
!771 = !DIEnumerator(name: "UndefinedColorInterpolate", value: 0, isUnsigned: true)
!772 = !DIEnumerator(name: "BarycentricColorInterpolate", value: 1, isUnsigned: true)
!773 = !DIEnumerator(name: "BilinearColorInterpolate", value: 7, isUnsigned: true)
!774 = !DIEnumerator(name: "PolynomialColorInterpolate", value: 8, isUnsigned: true)
!775 = !DIEnumerator(name: "ShepardsColorInterpolate", value: 16, isUnsigned: true)
!776 = !DIEnumerator(name: "VoronoiColorInterpolate", value: 18, isUnsigned: true)
!777 = !DIEnumerator(name: "InverseColorInterpolate", value: 19, isUnsigned: true)
!778 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !675, line: 113, baseType: !5, size: 32, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787, !788}
!780 = !DIEnumerator(name: "UndefinedStatistic", value: 0, isUnsigned: true)
!781 = !DIEnumerator(name: "GradientStatistic", value: 1, isUnsigned: true)
!782 = !DIEnumerator(name: "MaximumStatistic", value: 2, isUnsigned: true)
!783 = !DIEnumerator(name: "MeanStatistic", value: 3, isUnsigned: true)
!784 = !DIEnumerator(name: "MedianStatistic", value: 4, isUnsigned: true)
!785 = !DIEnumerator(name: "MinimumStatistic", value: 5, isUnsigned: true)
!786 = !DIEnumerator(name: "ModeStatistic", value: 6, isUnsigned: true)
!787 = !DIEnumerator(name: "NonpeakStatistic", value: 7, isUnsigned: true)
!788 = !DIEnumerator(name: "StandardDeviationStatistic", value: 8, isUnsigned: true)
!789 = !{!790, !791, !846, !1012, !1143, !828, !819, !1304, !1324, !850, !1326, !855, !980, !1117, !1330, !1352, !814, !1216, !886, !1368, !1369, !802, !1378, !844, !924, !1380, !1287, !1402, !1063, !919, !958}
!790 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !73, line: 150, size: 105920, elements: !794)
!794 = !{!795, !797, !799, !801, !804, !806, !808, !809, !810, !811, !812, !813, !824, !825, !826, !827, !829, !843, !845, !847, !849, !852, !853, !854, !860, !861, !862, !870, !871, !872, !873, !874, !875, !877, !879, !881, !883, !885, !887, !889, !890, !891, !892, !893, !894, !895, !903, !918, !932, !933, !934, !935, !939, !943, !947, !948, !949, !950, !951, !969, !970, !972, !973, !983, !984, !986, !987, !988, !989, !990, !991, !993, !994, !995, !996, !997, !998, !999, !1001, !1002, !1003, !1004, !1005, !1009, !1011}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !793, file: !73, line: 153, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !3)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !793, file: !73, line: 156, baseType: !798, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !11, line: 61, baseType: !10)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !793, file: !73, line: 159, baseType: !800, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !48, line: 49, baseType: !47)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !793, file: !73, line: 162, baseType: !802, size: 64, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !803, line: 46, baseType: !790)
!803 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!804 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !793, file: !73, line: 165, baseType: !805, size: 32, offset: 192)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !73, line: 86, baseType: !72)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !793, file: !73, line: 168, baseType: !807, size: 32, offset: 224)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !84)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !793, file: !73, line: 169, baseType: !807, size: 32, offset: 256)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !793, file: !73, line: 172, baseType: !802, size: 64, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !793, file: !73, line: 173, baseType: !802, size: 64, offset: 384)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !793, file: !73, line: 174, baseType: !802, size: 64, offset: 448)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !793, file: !73, line: 175, baseType: !802, size: 64, offset: 512)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !793, file: !73, line: 178, baseType: !814, size: 64, offset: 576)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !817)
!817 = !{!818, !821, !822, !823}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !816, file: !326, line: 143, baseType: !819, size: 16)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !820)
!820 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !816, file: !326, line: 144, baseType: !819, size: 16, offset: 16)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !816, file: !326, line: 145, baseType: !819, size: 16, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !816, file: !326, line: 146, baseType: !819, size: 16, offset: 48)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !793, file: !73, line: 179, baseType: !815, size: 64, offset: 640)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !793, file: !73, line: 180, baseType: !815, size: 64, offset: 704)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !793, file: !73, line: 181, baseType: !815, size: 64, offset: 768)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !793, file: !73, line: 184, baseType: !828, size: 64, offset: 832)
!828 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !793, file: !73, line: 187, baseType: !830, size: 768, offset: 896)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !73, line: 128, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !73, line: 121, size: 768, elements: !832)
!832 = !{!833, !840, !841, !842}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !831, file: !73, line: 124, baseType: !834, size: 192)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !73, line: 101, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !73, line: 95, size: 192, elements: !836)
!836 = !{!837, !838, !839}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !835, file: !73, line: 98, baseType: !828, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !835, file: !73, line: 99, baseType: !828, size: 64, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !835, file: !73, line: 100, baseType: !828, size: 64, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !831, file: !73, line: 125, baseType: !834, size: 192, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !831, file: !73, line: 126, baseType: !834, size: 192, offset: 384)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !831, file: !73, line: 127, baseType: !834, size: 192, offset: 576)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !793, file: !73, line: 190, baseType: !844, size: 32, offset: 1664)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !793, file: !73, line: 193, baseType: !846, size: 64, offset: 1728)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !793, file: !73, line: 196, baseType: !848, size: 32, offset: 1792)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !73, line: 93, baseType: !96)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !793, file: !73, line: 199, baseType: !850, size: 64, offset: 1856)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !793, file: !73, line: 200, baseType: !850, size: 64, offset: 1920)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !793, file: !73, line: 201, baseType: !850, size: 64, offset: 1984)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !793, file: !73, line: 204, baseType: !855, size: 64, offset: 2048)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !856, line: 77, baseType: !857)
!856 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !858, line: 193, baseType: !859)
!858 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!859 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !793, file: !73, line: 207, baseType: !828, size: 64, offset: 2112)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !793, file: !73, line: 208, baseType: !828, size: 64, offset: 2176)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !793, file: !73, line: 211, baseType: !863, size: 256, offset: 2240)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !864)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !865)
!865 = !{!866, !867, !868, !869}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !864, file: !153, line: 124, baseType: !802, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !864, file: !153, line: 125, baseType: !802, size: 64, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !864, file: !153, line: 128, baseType: !855, size: 64, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !864, file: !153, line: 129, baseType: !855, size: 64, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !793, file: !73, line: 212, baseType: !863, size: 256, offset: 2496)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !793, file: !73, line: 213, baseType: !863, size: 256, offset: 2752)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !793, file: !73, line: 216, baseType: !828, size: 64, offset: 3008)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !793, file: !73, line: 217, baseType: !828, size: 64, offset: 3072)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !793, file: !73, line: 218, baseType: !828, size: 64, offset: 3136)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !793, file: !73, line: 221, baseType: !876, size: 32, offset: 3200)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !793, file: !73, line: 224, baseType: !878, size: 32, offset: 3232)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !73, line: 73, baseType: !136)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !793, file: !73, line: 227, baseType: !880, size: 32, offset: 3264)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !793, file: !73, line: 230, baseType: !882, size: 32, offset: 3296)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !793, file: !73, line: 233, baseType: !884, size: 32, offset: 3328)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !793, file: !73, line: 236, baseType: !886, size: 32, offset: 3360)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !793, file: !73, line: 239, baseType: !888, size: 64, offset: 3392)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !793, file: !73, line: 242, baseType: !802, size: 64, offset: 3456)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !793, file: !73, line: 243, baseType: !802, size: 64, offset: 3520)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !793, file: !73, line: 246, baseType: !855, size: 64, offset: 3584)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !793, file: !73, line: 249, baseType: !802, size: 64, offset: 3648)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !793, file: !73, line: 250, baseType: !802, size: 64, offset: 3712)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !793, file: !73, line: 253, baseType: !855, size: 64, offset: 3776)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !793, file: !73, line: 256, baseType: !896, size: 192, offset: 3840)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !897, line: 68, baseType: !898)
!897 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !897, line: 62, size: 192, elements: !899)
!899 = !{!900, !901, !902}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !898, file: !897, line: 65, baseType: !828, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !898, file: !897, line: 66, baseType: !828, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !898, file: !897, line: 67, baseType: !828, size: 64, offset: 128)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !793, file: !73, line: 259, baseType: !904, size: 512, offset: 4032)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !905)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !906)
!906 = !{!907, !914, !915, !917}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !905, file: !247, line: 43, baseType: !908, size: 192)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !910)
!910 = !{!911, !912, !913}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !909, file: !247, line: 35, baseType: !828, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !909, file: !247, line: 36, baseType: !828, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !909, file: !247, line: 37, baseType: !828, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !905, file: !247, line: 44, baseType: !908, size: 192, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !905, file: !247, line: 47, baseType: !916, size: 32, offset: 384)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !905, file: !247, line: 50, baseType: !802, size: 64, offset: 448)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !793, file: !73, line: 262, baseType: !919, size: 64, offset: 4544)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !920, line: 26, baseType: !921)
!920 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!807, !924, !926, !929, !846}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !928)
!928 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !931)
!931 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !793, file: !73, line: 265, baseType: !846, size: 64, offset: 4608)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !793, file: !73, line: 266, baseType: !846, size: 64, offset: 4672)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !793, file: !73, line: 267, baseType: !846, size: 64, offset: 4736)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !793, file: !73, line: 270, baseType: !936, size: 64, offset: 4800)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !48, line: 52, baseType: !938)
!938 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !48, line: 51, flags: DIFlagFwdDecl)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !793, file: !73, line: 273, baseType: !940, size: 64, offset: 4864)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !942)
!942 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !793, file: !73, line: 276, baseType: !944, size: 32768, offset: 4928)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 32768, elements: !945)
!945 = !{!946}
!946 = !DISubrange(count: 4096)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !793, file: !73, line: 277, baseType: !944, size: 32768, offset: 37696)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !793, file: !73, line: 278, baseType: !944, size: 32768, offset: 70464)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !793, file: !73, line: 281, baseType: !802, size: 64, offset: 103232)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !793, file: !73, line: 282, baseType: !802, size: 64, offset: 103296)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !793, file: !73, line: 285, baseType: !952, size: 448, offset: 103360)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !954)
!954 = !{!955, !957, !959, !960, !961, !962, !963, !968}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !953, file: !253, line: 105, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !953, file: !253, line: 108, baseType: !958, size: 32, offset: 32)
!958 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !953, file: !253, line: 111, baseType: !850, size: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !953, file: !253, line: 112, baseType: !850, size: 64, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !953, file: !253, line: 115, baseType: !846, size: 64, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !953, file: !253, line: 118, baseType: !807, size: 32, offset: 256)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !953, file: !253, line: 121, baseType: !964, size: 64, offset: 320)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !966, line: 26, baseType: !967)
!966 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !966, line: 25, flags: DIFlagFwdDecl)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !953, file: !253, line: 124, baseType: !802, size: 64, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !793, file: !73, line: 288, baseType: !807, size: 32, offset: 103808)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !793, file: !73, line: 291, baseType: !971, size: 64, offset: 103872)
!971 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !855)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !793, file: !73, line: 294, baseType: !964, size: 64, offset: 103936)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !793, file: !73, line: 297, baseType: !974, size: 256, offset: 104000)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !976)
!976 = !{!977, !978, !979, !982}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !975, file: !89, line: 30, baseType: !850, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !975, file: !89, line: 33, baseType: !802, size: 64, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !975, file: !89, line: 36, baseType: !980, size: 64, offset: 128)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !975, file: !89, line: 39, baseType: !802, size: 64, offset: 192)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !793, file: !73, line: 298, baseType: !974, size: 256, offset: 104256)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !793, file: !73, line: 299, baseType: !985, size: 64, offset: 104512)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !793, file: !73, line: 302, baseType: !802, size: 64, offset: 104576)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !793, file: !73, line: 305, baseType: !802, size: 64, offset: 104640)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !793, file: !73, line: 308, baseType: !888, size: 64, offset: 104704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !793, file: !73, line: 309, baseType: !888, size: 64, offset: 104768)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !793, file: !73, line: 310, baseType: !888, size: 64, offset: 104832)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !793, file: !73, line: 313, baseType: !992, size: 32, offset: 104896)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !793, file: !73, line: 316, baseType: !807, size: 32, offset: 104928)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !793, file: !73, line: 319, baseType: !815, size: 64, offset: 104960)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !793, file: !73, line: 322, baseType: !888, size: 64, offset: 105024)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !793, file: !73, line: 325, baseType: !863, size: 256, offset: 105088)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !793, file: !73, line: 328, baseType: !846, size: 64, offset: 105344)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !793, file: !73, line: 329, baseType: !846, size: 64, offset: 105408)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !793, file: !73, line: 332, baseType: !1000, size: 32, offset: 105472)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !73, line: 61, baseType: !342)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !793, file: !73, line: 335, baseType: !807, size: 32, offset: 105504)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !793, file: !73, line: 338, baseType: !930, size: 64, offset: 105536)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !793, file: !73, line: 341, baseType: !807, size: 32, offset: 105600)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !793, file: !73, line: 344, baseType: !802, size: 64, offset: 105664)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !793, file: !73, line: 347, baseType: !1006, size: 64, offset: 105728)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1007, line: 7, baseType: !1008)
!1007 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !858, line: 160, baseType: !859)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !793, file: !73, line: 350, baseType: !1010, size: 32, offset: 105792)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !793, file: !73, line: 353, baseType: !802, size: 64, offset: 105856)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawInfo", file: !488, line: 333, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawInfo", file: !488, line: 205, size: 5760, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1029, !1030, !1031, !1032, !1033, !1082, !1083, !1084, !1085, !1086, !1087, !1089, !1091, !1093, !1094, !1095, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1105, !1107, !1108, !1109, !1110, !1111, !1113, !1114, !1115, !1116, !1118, !1119, !1120, !1122, !1123, !1124, !1136, !1137, !1138, !1139, !1140, !1141}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "primitive", scope: !1014, file: !488, line: 208, baseType: !850, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !1014, file: !488, line: 209, baseType: !850, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "viewbox", scope: !1014, file: !488, line: 212, baseType: !863, size: 256, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "affine", scope: !1014, file: !488, line: 215, baseType: !1020, size: 384, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AffineMatrix", file: !153, line: 102, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_AffineMatrix", file: !153, line: 93, size: 384, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1021, file: !153, line: 96, baseType: !828, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !1021, file: !153, line: 97, baseType: !828, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !1021, file: !153, line: 98, baseType: !828, size: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1021, file: !153, line: 99, baseType: !828, size: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !1021, file: !153, line: 100, baseType: !828, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !1021, file: !153, line: 101, baseType: !828, size: 64, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1014, file: !488, line: 218, baseType: !882, size: 32, offset: 768)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1014, file: !488, line: 221, baseType: !815, size: 64, offset: 800)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !1014, file: !488, line: 222, baseType: !815, size: 64, offset: 864)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_width", scope: !1014, file: !488, line: 225, baseType: !828, size: 64, offset: 960)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1014, file: !488, line: 228, baseType: !1034, size: 1024, offset: 1024)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientInfo", file: !488, line: 184, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GradientInfo", file: !488, line: 153, size: 1024, elements: !1036)
!1036 = !{!1037, !1039, !1040, !1048, !1070, !1071, !1073, !1074, !1075, !1081}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1035, file: !488, line: 156, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientType", file: !488, line: 75, baseType: !487)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "bounding_box", scope: !1035, file: !488, line: 159, baseType: !863, size: 256, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_vector", scope: !1035, file: !488, line: 162, baseType: !1041, size: 256, offset: 320)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "SegmentInfo", file: !73, line: 110, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SegmentInfo", file: !73, line: 103, size: 256, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !1042, file: !73, line: 106, baseType: !828, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !1042, file: !73, line: 107, baseType: !828, size: 64, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !1042, file: !73, line: 108, baseType: !828, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !1042, file: !73, line: 109, baseType: !828, size: 64, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "stops", scope: !1035, file: !488, line: 165, baseType: !1049, size: 64, offset: 576)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "StopInfo", file: !488, line: 151, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_StopInfo", file: !488, line: 144, size: 512, elements: !1052)
!1052 = !{!1053, !1069}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1051, file: !488, line: 147, baseType: !1054, size: 448)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !1055)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !1056)
!1056 = !{!1057, !1058, !1059, !1060, !1061, !1062, !1065, !1066, !1067, !1068}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1055, file: !326, line: 107, baseType: !796, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1055, file: !326, line: 110, baseType: !798, size: 32, offset: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !1055, file: !326, line: 113, baseType: !807, size: 32, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1055, file: !326, line: 116, baseType: !828, size: 64, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1055, file: !326, line: 119, baseType: !802, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !1055, file: !326, line: 122, baseType: !1063, size: 32, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !1064)
!1064 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !1055, file: !326, line: 123, baseType: !1063, size: 32, offset: 288)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !1055, file: !326, line: 124, baseType: !1063, size: 32, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !1055, file: !326, line: 125, baseType: !1063, size: 32, offset: 352)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1055, file: !326, line: 126, baseType: !1063, size: 32, offset: 384)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1051, file: !488, line: 150, baseType: !1063, size: 32, offset: 448)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "number_stops", scope: !1035, file: !488, line: 168, baseType: !802, size: 64, offset: 640)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !1035, file: !488, line: 171, baseType: !1072, size: 32, offset: 704)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpreadMethod", file: !488, line: 135, baseType: !493)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1035, file: !488, line: 174, baseType: !807, size: 32, offset: 736)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1035, file: !488, line: 177, baseType: !802, size: 64, offset: 768)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !1035, file: !488, line: 180, baseType: !1076, size: 128, offset: 832)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !488, line: 142, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !488, line: 137, size: 128, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1077, file: !488, line: 140, baseType: !828, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1077, file: !488, line: 141, baseType: !828, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1035, file: !488, line: 183, baseType: !1063, size: 32, offset: 960)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "fill_pattern", scope: !1014, file: !488, line: 231, baseType: !791, size: 64, offset: 2048)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1014, file: !488, line: 232, baseType: !791, size: 64, offset: 2112)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_pattern", scope: !1014, file: !488, line: 233, baseType: !791, size: 64, offset: 2176)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_antialias", scope: !1014, file: !488, line: 236, baseType: !807, size: 32, offset: 2240)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "text_antialias", scope: !1014, file: !488, line: 237, baseType: !807, size: 32, offset: 2272)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fill_rule", scope: !1014, file: !488, line: 240, baseType: !1088, size: 32, offset: 2304)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "FillRule", file: !488, line: 68, baseType: !499)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "linecap", scope: !1014, file: !488, line: 243, baseType: !1090, size: 32, offset: 2336)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineCap", file: !488, line: 83, baseType: !504)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "linejoin", scope: !1014, file: !488, line: 246, baseType: !1092, size: 32, offset: 2368)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineJoin", file: !488, line: 91, baseType: !510)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "miterlimit", scope: !1014, file: !488, line: 249, baseType: !802, size: 64, offset: 2432)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "dash_offset", scope: !1014, file: !488, line: 252, baseType: !828, size: 64, offset: 2496)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "decorate", scope: !1014, file: !488, line: 255, baseType: !1096, size: 32, offset: 2560)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecorationType", file: !488, line: 53, baseType: !516)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !1014, file: !488, line: 258, baseType: !884, size: 32, offset: 2592)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1014, file: !488, line: 261, baseType: !850, size: 64, offset: 2624)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !1014, file: !488, line: 264, baseType: !802, size: 64, offset: 2688)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1014, file: !488, line: 267, baseType: !850, size: 64, offset: 2752)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !1014, file: !488, line: 268, baseType: !850, size: 64, offset: 2816)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1014, file: !488, line: 269, baseType: !850, size: 64, offset: 2880)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1014, file: !488, line: 272, baseType: !1104, size: 32, offset: 2944)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "StyleType", file: !524, line: 47, baseType: !523)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "stretch", scope: !1014, file: !488, line: 275, baseType: !1106, size: 32, offset: 2976)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "StretchType", file: !524, line: 38, baseType: !531)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1014, file: !488, line: 278, baseType: !802, size: 64, offset: 3008)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1014, file: !488, line: 281, baseType: !850, size: 64, offset: 3072)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1014, file: !488, line: 284, baseType: !828, size: 64, offset: 3136)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1014, file: !488, line: 287, baseType: !850, size: 64, offset: 3200)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1014, file: !488, line: 290, baseType: !1112, size: 32, offset: 3264)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "AlignType", file: !488, line: 36, baseType: !544)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "undercolor", scope: !1014, file: !488, line: 293, baseType: !815, size: 64, offset: 3296)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1014, file: !488, line: 294, baseType: !815, size: 64, offset: 3360)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1014, file: !488, line: 297, baseType: !850, size: 64, offset: 3456)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "dash_pattern", scope: !1014, file: !488, line: 300, baseType: !1117, size: 64, offset: 3520)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !1014, file: !488, line: 303, baseType: !850, size: 64, offset: 3584)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1014, file: !488, line: 306, baseType: !1041, size: 256, offset: 3648)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "clip_units", scope: !1014, file: !488, line: 309, baseType: !1121, size: 32, offset: 3904)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClipPathUnits", file: !488, line: 44, baseType: !550)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !1014, file: !488, line: 312, baseType: !819, size: 16, offset: 3936)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !1014, file: !488, line: 315, baseType: !807, size: 32, offset: 3968)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "element_reference", scope: !1014, file: !488, line: 318, baseType: !1125, size: 1344, offset: 4032)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementReference", file: !488, line: 203, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ElementReference", file: !488, line: 186, size: 1344, elements: !1127)
!1127 = !{!1128, !1129, !1131, !1132, !1133, !1135}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1126, file: !488, line: 189, baseType: !850, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1126, file: !488, line: 192, baseType: !1130, size: 32, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceType", file: !488, line: 127, baseType: !556)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1126, file: !488, line: 195, baseType: !1034, size: 1024, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1126, file: !488, line: 198, baseType: !802, size: 64, offset: 1152)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1126, file: !488, line: 201, baseType: !1134, size: 64, offset: 1216)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1126, file: !488, line: 202, baseType: !1134, size: 64, offset: 1280)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1014, file: !488, line: 321, baseType: !807, size: 32, offset: 5376)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1014, file: !488, line: 324, baseType: !802, size: 64, offset: 5440)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !1014, file: !488, line: 327, baseType: !828, size: 64, offset: 5504)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "interword_spacing", scope: !1014, file: !488, line: 328, baseType: !828, size: 64, offset: 5568)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "interline_spacing", scope: !1014, file: !488, line: 329, baseType: !828, size: 64, offset: 5632)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1014, file: !488, line: 332, baseType: !1142, size: 32, offset: 5696)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "DirectionType", file: !488, line: 60, baseType: !560)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickWand", file: !1145, line: 69, baseType: !1146)
!1145 = !DIFile(filename: "./wand/MagickWand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickWand", file: !1147, line: 50, size: 33280, elements: !1148)
!1147 = !DIFile(filename: "./wand/magick-wand-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1148 = !{!1149, !1150, !1151, !1153, !1286, !1299, !1300, !1301, !1302, !1303}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1146, file: !1147, line: 53, baseType: !802, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1146, file: !1147, line: 56, baseType: !944, size: 32768, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !1146, file: !1147, line: 59, baseType: !1152, size: 64, offset: 32832)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "image_info", scope: !1146, file: !1147, line: 62, baseType: !1154, size: 64, offset: 32896)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageInfo", file: !4, line: 223, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageInfo", file: !73, line: 356, size: 134336, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1192, !1193, !1194, !1195, !1196, !1197, !1199, !1200, !1201, !1202, !1203, !1204, !1215, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1283, !1284, !1285}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1156, file: !73, line: 359, baseType: !800, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !1156, file: !73, line: 362, baseType: !805, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !1156, file: !73, line: 365, baseType: !807, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !1156, file: !73, line: 366, baseType: !807, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "affirm", scope: !1156, file: !73, line: 367, baseType: !807, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "antialias", scope: !1156, file: !73, line: 368, baseType: !807, size: 32, offset: 160)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1156, file: !73, line: 371, baseType: !850, size: 64, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !1156, file: !73, line: 372, baseType: !850, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1156, file: !73, line: 373, baseType: !850, size: 64, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "scenes", scope: !1156, file: !73, line: 374, baseType: !850, size: 64, offset: 384)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1156, file: !73, line: 377, baseType: !802, size: 64, offset: 448)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "number_scenes", scope: !1156, file: !73, line: 378, baseType: !802, size: 64, offset: 512)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1156, file: !73, line: 379, baseType: !802, size: 64, offset: 576)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !1156, file: !73, line: 382, baseType: !878, size: 32, offset: 640)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !1156, file: !73, line: 385, baseType: !880, size: 32, offset: 672)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1156, file: !73, line: 388, baseType: !848, size: 32, offset: 704)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1156, file: !73, line: 391, baseType: !802, size: 64, offset: 768)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_factor", scope: !1156, file: !73, line: 394, baseType: !850, size: 64, offset: 832)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1156, file: !73, line: 395, baseType: !850, size: 64, offset: 896)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1156, file: !73, line: 396, baseType: !850, size: 64, offset: 960)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !1156, file: !73, line: 397, baseType: !850, size: 64, offset: 1024)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1156, file: !73, line: 398, baseType: !850, size: 64, offset: 1088)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1156, file: !73, line: 401, baseType: !828, size: 64, offset: 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1156, file: !73, line: 402, baseType: !828, size: 64, offset: 1216)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !1156, file: !73, line: 405, baseType: !815, size: 64, offset: 1280)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1156, file: !73, line: 406, baseType: !815, size: 64, offset: 1344)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !1156, file: !73, line: 407, baseType: !815, size: 64, offset: 1408)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1156, file: !73, line: 410, baseType: !807, size: 32, offset: 1472)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "monochrome", scope: !1156, file: !73, line: 411, baseType: !807, size: 32, offset: 1504)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1156, file: !73, line: 414, baseType: !802, size: 64, offset: 1536)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1156, file: !73, line: 417, baseType: !798, size: 32, offset: 1600)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1156, file: !73, line: 420, baseType: !1000, size: 32, offset: 1632)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "preview_type", scope: !1156, file: !73, line: 423, baseType: !1191, size: 32, offset: 1664)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewType", file: !369, line: 59, baseType: !368)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1156, file: !73, line: 426, baseType: !855, size: 64, offset: 1728)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !1156, file: !73, line: 429, baseType: !807, size: 32, offset: 1792)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1156, file: !73, line: 430, baseType: !807, size: 32, offset: 1824)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1156, file: !73, line: 433, baseType: !850, size: 64, offset: 1856)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "authenticate", scope: !1156, file: !73, line: 434, baseType: !850, size: 64, offset: 1920)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1156, file: !73, line: 437, baseType: !1198, size: 32, offset: 1984)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !401)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1156, file: !73, line: 440, baseType: !791, size: 64, offset: 2048)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1156, file: !73, line: 443, baseType: !846, size: 64, offset: 2112)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !1156, file: !73, line: 446, baseType: !919, size: 64, offset: 2176)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !1156, file: !73, line: 449, baseType: !846, size: 64, offset: 2240)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1156, file: !73, line: 450, baseType: !846, size: 64, offset: 2304)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1156, file: !73, line: 453, baseType: !1205, size: 64, offset: 2368)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamHandler", file: !1206, line: 26, baseType: !1207)
!1206 = !DIFile(filename: "./magick/stream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!802, !1210, !1212, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1156, file: !73, line: 456, baseType: !1216, size: 64, offset: 2432)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1218, line: 7, baseType: !1219)
!1218 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1220, line: 49, size: 1728, elements: !1221)
!1220 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1221 = !{!1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1237, !1239, !1240, !1241, !1243, !1244, !1246, !1250, !1253, !1255, !1258, !1261, !1262, !1263, !1264, !1265}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1219, file: !1220, line: 51, baseType: !958, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1219, file: !1220, line: 54, baseType: !850, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1219, file: !1220, line: 55, baseType: !850, size: 64, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1219, file: !1220, line: 56, baseType: !850, size: 64, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1219, file: !1220, line: 57, baseType: !850, size: 64, offset: 256)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1219, file: !1220, line: 58, baseType: !850, size: 64, offset: 320)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1219, file: !1220, line: 59, baseType: !850, size: 64, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1219, file: !1220, line: 60, baseType: !850, size: 64, offset: 448)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1219, file: !1220, line: 61, baseType: !850, size: 64, offset: 512)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1219, file: !1220, line: 64, baseType: !850, size: 64, offset: 576)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1219, file: !1220, line: 65, baseType: !850, size: 64, offset: 640)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1219, file: !1220, line: 66, baseType: !850, size: 64, offset: 704)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1219, file: !1220, line: 68, baseType: !1235, size: 64, offset: 768)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1220, line: 36, flags: DIFlagFwdDecl)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1219, file: !1220, line: 70, baseType: !1238, size: 64, offset: 832)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1219, file: !1220, line: 72, baseType: !958, size: 32, offset: 896)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1219, file: !1220, line: 73, baseType: !958, size: 32, offset: 928)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1219, file: !1220, line: 74, baseType: !1242, size: 64, offset: 960)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !858, line: 152, baseType: !859)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1219, file: !1220, line: 77, baseType: !820, size: 16, offset: 1024)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1219, file: !1220, line: 78, baseType: !1245, size: 8, offset: 1040)
!1245 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1219, file: !1220, line: 79, baseType: !1247, size: 8, offset: 1048)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 8, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 1)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1219, file: !1220, line: 81, baseType: !1251, size: 64, offset: 1088)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1220, line: 43, baseType: null)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1219, file: !1220, line: 89, baseType: !1254, size: 64, offset: 1152)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !858, line: 153, baseType: !859)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1219, file: !1220, line: 91, baseType: !1256, size: 64, offset: 1216)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1220, line: 37, flags: DIFlagFwdDecl)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1219, file: !1220, line: 92, baseType: !1259, size: 64, offset: 1280)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1220, line: 38, flags: DIFlagFwdDecl)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1219, file: !1220, line: 93, baseType: !1238, size: 64, offset: 1344)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1219, file: !1220, line: 94, baseType: !846, size: 64, offset: 1408)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1219, file: !1220, line: 95, baseType: !802, size: 64, offset: 1472)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1219, file: !1220, line: 96, baseType: !958, size: 32, offset: 1536)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1219, file: !1220, line: 98, baseType: !1266, size: 160, offset: 1568)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 160, elements: !1267)
!1267 = !{!1268}
!1268 = !DISubrange(count: 20)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !1156, file: !73, line: 459, baseType: !846, size: 64, offset: 2496)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1156, file: !73, line: 462, baseType: !802, size: 64, offset: 2560)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !1156, file: !73, line: 465, baseType: !944, size: 32768, offset: 2624)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1156, file: !73, line: 466, baseType: !944, size: 32768, offset: 35392)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1156, file: !73, line: 467, baseType: !944, size: 32768, offset: 68160)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1156, file: !73, line: 468, baseType: !944, size: 32768, offset: 100928)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1156, file: !73, line: 471, baseType: !807, size: 32, offset: 133696)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1156, file: !73, line: 474, baseType: !850, size: 64, offset: 133760)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "subimage", scope: !1156, file: !73, line: 477, baseType: !802, size: 64, offset: 133824)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "subrange", scope: !1156, file: !73, line: 478, baseType: !802, size: 64, offset: 133888)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pen", scope: !1156, file: !73, line: 481, baseType: !815, size: 64, offset: 133952)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1156, file: !73, line: 484, baseType: !802, size: 64, offset: 134016)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel_method", scope: !1156, file: !73, line: 487, baseType: !1282, size: 32, offset: 134080)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !424, line: 47, baseType: !423)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !1156, file: !73, line: 490, baseType: !815, size: 64, offset: 134112)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1156, file: !73, line: 493, baseType: !846, size: 64, offset: 134208)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "synchronize", scope: !1156, file: !73, line: 496, baseType: !807, size: 32, offset: 134272)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_info", scope: !1146, file: !1147, line: 65, baseType: !1287, size: 64, offset: 32960)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantizeInfo", file: !445, line: 57, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantizeInfo", file: !445, line: 35, size: 384, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294, !1295, !1296, !1297}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "number_colors", scope: !1289, file: !445, line: 38, baseType: !802, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "tree_depth", scope: !1289, file: !445, line: 41, baseType: !802, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1289, file: !445, line: 44, baseType: !807, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1289, file: !445, line: 47, baseType: !798, size: 32, offset: 160)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "measure_error", scope: !1289, file: !445, line: 50, baseType: !807, size: 32, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1289, file: !445, line: 53, baseType: !802, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dither_method", scope: !1289, file: !445, line: 56, baseType: !1298, size: 32, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "DitherMethod", file: !445, line: 33, baseType: !444)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1146, file: !1147, line: 68, baseType: !791, size: 64, offset: 33024)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "insert_before", scope: !1146, file: !1147, line: 71, baseType: !807, size: 32, offset: 33088)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "image_pending", scope: !1146, file: !1147, line: 72, baseType: !807, size: 32, offset: 33120)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1146, file: !1147, line: 73, baseType: !807, size: 32, offset: 33152)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1146, file: !1147, line: 76, baseType: !802, size: 64, offset: 33216)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfo", file: !566, line: 128, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KernelInfo", file: !566, line: 102, size: 832, elements: !1308)
!1308 = !{!1309, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1323}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1307, file: !566, line: 105, baseType: !1310, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfoType", file: !566, line: 67, baseType: !565)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1307, file: !566, line: 108, baseType: !802, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1307, file: !566, line: 109, baseType: !802, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1307, file: !566, line: 112, baseType: !855, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1307, file: !566, line: 113, baseType: !855, size: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1307, file: !566, line: 116, baseType: !1117, size: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !1307, file: !566, line: 117, baseType: !828, size: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !1307, file: !566, line: 118, baseType: !828, size: 64, offset: 448)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "negative_range", scope: !1307, file: !566, line: 119, baseType: !828, size: 64, offset: 512)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "positive_range", scope: !1307, file: !566, line: 120, baseType: !828, size: 64, offset: 576)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1307, file: !566, line: 121, baseType: !828, size: 64, offset: 640)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1307, file: !566, line: 124, baseType: !1322, size: 64, offset: 704)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1307, file: !566, line: 127, baseType: !802, size: 64, offset: 768)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !828)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelWand", file: !1328, line: 26, baseType: !1329)
!1328 = !DIFile(filename: "./wand/pixel-wand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1329 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelWand", file: !1328, line: 25, flags: DIFlagFwdDecl)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelFeatures", file: !1332, line: 45, baseType: !1333)
!1332 = !DIFile(filename: "./magick/feature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChannelFeatures", file: !1332, line: 28, size: 3584, elements: !1334)
!1334 = !{!1335, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "angular_second_moment", scope: !1333, file: !1332, line: 31, baseType: !1336, size: 256)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 256, elements: !1337)
!1337 = !{!1338}
!1338 = !DISubrange(count: 4)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1333, file: !1332, line: 32, baseType: !1336, size: 256, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "correlation", scope: !1333, file: !1332, line: 33, baseType: !1336, size: 256, offset: 512)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "variance_sum_of_squares", scope: !1333, file: !1332, line: 34, baseType: !1336, size: 256, offset: 768)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "inverse_difference_moment", scope: !1333, file: !1332, line: 35, baseType: !1336, size: 256, offset: 1024)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sum_average", scope: !1333, file: !1332, line: 36, baseType: !1336, size: 256, offset: 1280)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sum_variance", scope: !1333, file: !1332, line: 37, baseType: !1336, size: 256, offset: 1536)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "sum_entropy", scope: !1333, file: !1332, line: 38, baseType: !1336, size: 256, offset: 1792)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "entropy", scope: !1333, file: !1332, line: 39, baseType: !1336, size: 256, offset: 2048)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "difference_variance", scope: !1333, file: !1332, line: 40, baseType: !1336, size: 256, offset: 2304)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "difference_entropy", scope: !1333, file: !1332, line: 41, baseType: !1336, size: 256, offset: 2560)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "measure_of_correlation_1", scope: !1333, file: !1332, line: 42, baseType: !1336, size: 256, offset: 2816)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "measure_of_correlation_2", scope: !1333, file: !1332, line: 43, baseType: !1336, size: 256, offset: 3072)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "maximum_correlation_coefficient", scope: !1333, file: !1332, line: 44, baseType: !1336, size: 256, offset: 3328)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelStatistics", file: !675, line: 44, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChannelStatistics", file: !675, line: 27, size: 768, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1354, file: !675, line: 30, baseType: !802, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "minima", scope: !1354, file: !675, line: 33, baseType: !828, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "maxima", scope: !1354, file: !675, line: 34, baseType: !828, size: 64, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !1354, file: !675, line: 35, baseType: !828, size: 64, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sum_squared", scope: !1354, file: !675, line: 36, baseType: !828, size: 64, offset: 256)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "sum_cubed", scope: !1354, file: !675, line: 37, baseType: !828, size: 64, offset: 320)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "sum_fourth_power", scope: !1354, file: !675, line: 38, baseType: !828, size: 64, offset: 384)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !1354, file: !675, line: 39, baseType: !828, size: 64, offset: 448)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !1354, file: !675, line: 40, baseType: !828, size: 64, offset: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "standard_deviation", scope: !1354, file: !675, line: 41, baseType: !828, size: 64, offset: 576)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "kurtosis", scope: !1354, file: !675, line: 42, baseType: !828, size: 64, offset: 640)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "skewness", scope: !1354, file: !675, line: 43, baseType: !828, size: 64, offset: 704)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorPacket", file: !1371, line: 35, baseType: !1372)
!1371 = !DIFile(filename: "./magick/histogram.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ColorPacket", file: !1371, line: 25, size: 192, elements: !1373)
!1373 = !{!1374, !1375, !1377}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !1372, file: !1371, line: 28, baseType: !815, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1372, file: !1371, line: 31, baseType: !1376, size: 16, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !819)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1372, file: !1371, line: 34, baseType: !930, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "MontageInfo", file: !717, line: 70, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MontageInfo", file: !717, line: 33, size: 33792, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !1382, file: !717, line: 36, baseType: !850, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1382, file: !717, line: 37, baseType: !850, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !1382, file: !717, line: 38, baseType: !850, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1382, file: !717, line: 39, baseType: !850, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !1382, file: !717, line: 40, baseType: !850, size: 64, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1382, file: !717, line: 41, baseType: !850, size: 64, offset: 320)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1382, file: !717, line: 44, baseType: !828, size: 64, offset: 384)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "border_width", scope: !1382, file: !717, line: 47, baseType: !802, size: 64, offset: 448)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !1382, file: !717, line: 50, baseType: !807, size: 32, offset: 512)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1382, file: !717, line: 53, baseType: !815, size: 64, offset: 544)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !1382, file: !717, line: 54, baseType: !815, size: 64, offset: 608)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !1382, file: !717, line: 55, baseType: !815, size: 64, offset: 672)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1382, file: !717, line: 56, baseType: !815, size: 64, offset: 736)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !1382, file: !717, line: 57, baseType: !815, size: 64, offset: 800)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1382, file: !717, line: 60, baseType: !882, size: 32, offset: 864)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1382, file: !717, line: 63, baseType: !944, size: 32768, offset: 896)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1382, file: !717, line: 66, baseType: !807, size: 32, offset: 33664)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1382, file: !717, line: 69, baseType: !802, size: 64, offset: 33728)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickInfo", file: !764, line: 103, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickInfo", file: !764, line: 51, size: 1216, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411, !1412, !1413, !1420, !1425, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1440, !1442, !1443, !1445, !1446, !1447, !1448}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1405, file: !764, line: 54, baseType: !850, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1405, file: !764, line: 55, baseType: !850, size: 64, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1405, file: !764, line: 56, baseType: !850, size: 64, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "note", scope: !1405, file: !764, line: 57, baseType: !850, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1405, file: !764, line: 58, baseType: !850, size: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "image_info", scope: !1405, file: !764, line: 61, baseType: !1154, size: 64, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "decoder", scope: !1405, file: !764, line: 64, baseType: !1414, size: 64, offset: 384)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeImageHandler", file: !764, line: 43, baseType: !1416)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!791, !1418, !1152}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !1405, file: !764, line: 67, baseType: !1421, size: 64, offset: 448)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "EncodeImageHandler", file: !764, line: 46, baseType: !1423)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!807, !1418, !791}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !1405, file: !764, line: 70, baseType: !1426, size: 64, offset: 512)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "IsImageFormatHandler", file: !764, line: 49, baseType: !1428)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!807, !1430, !1214}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !1405, file: !764, line: 73, baseType: !846, size: 64, offset: 576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !1405, file: !764, line: 76, baseType: !807, size: 32, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !1405, file: !764, line: 77, baseType: !807, size: 32, offset: 672)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "endian_support", scope: !1405, file: !764, line: 78, baseType: !807, size: 32, offset: 704)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "blob_support", scope: !1405, file: !764, line: 79, baseType: !807, size: 32, offset: 736)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "seekable_stream", scope: !1405, file: !764, line: 80, baseType: !807, size: 32, offset: 768)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "format_type", scope: !1405, file: !764, line: 83, baseType: !1439, size: 32, offset: 800)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickFormatType", file: !764, line: 33, baseType: !763)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "thread_support", scope: !1405, file: !764, line: 86, baseType: !1441, size: 32, offset: 832)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !4, line: 147, baseType: !5)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "stealth", scope: !1405, file: !764, line: 89, baseType: !807, size: 32, offset: 864)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1405, file: !764, line: 92, baseType: !1444, size: 64, offset: 896)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1405, file: !764, line: 93, baseType: !1444, size: 64, offset: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1405, file: !764, line: 96, baseType: !802, size: 64, offset: 1024)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1405, file: !764, line: 99, baseType: !850, size: 64, offset: 1088)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !1405, file: !764, line: 102, baseType: !964, size: 64, offset: 1152)
!1449 = !{i32 7, !"Dwarf Version", i32 4}
!1450 = !{i32 2, !"Debug Info Version", i32 3}
!1451 = !{i32 1, !"wchar_size", i32 4}
!1452 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1453 = distinct !DISubprogram(name: "GetImageFromMagickWand", scope: !1, file: !1, line: 139, type: !1454, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!791, !1456}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1144)
!1458 = !{}
!1459 = !DILocalVariable(name: "wand", arg: 1, scope: !1453, file: !1, line: 139, type: !1456)
!1460 = !DILocation(line: 139, column: 60, scope: !1453)
!1461 = !DILocation(line: 143, column: 7, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1453, file: !1, line: 143, column: 7)
!1463 = !DILocation(line: 143, column: 13, scope: !1462)
!1464 = !DILocation(line: 143, column: 19, scope: !1462)
!1465 = !DILocation(line: 143, column: 7, scope: !1453)
!1466 = !DILocation(line: 144, column: 60, scope: !1462)
!1467 = !DILocation(line: 144, column: 66, scope: !1462)
!1468 = !DILocation(line: 144, column: 12, scope: !1462)
!1469 = !DILocation(line: 144, column: 5, scope: !1462)
!1470 = !DILocation(line: 145, column: 7, scope: !1471)
!1471 = distinct !DILexicalBlock(scope: !1453, file: !1, line: 145, column: 7)
!1472 = !DILocation(line: 145, column: 13, scope: !1471)
!1473 = !DILocation(line: 145, column: 20, scope: !1471)
!1474 = !DILocation(line: 145, column: 7, scope: !1453)
!1475 = !DILocation(line: 147, column: 35, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1471, file: !1, line: 146, column: 5)
!1477 = !DILocation(line: 147, column: 41, scope: !1476)
!1478 = !DILocation(line: 148, column: 35, scope: !1476)
!1479 = !DILocation(line: 148, column: 41, scope: !1476)
!1480 = !DILocation(line: 147, column: 14, scope: !1476)
!1481 = !DILocation(line: 149, column: 7, scope: !1476)
!1482 = !DILocation(line: 151, column: 10, scope: !1453)
!1483 = !DILocation(line: 151, column: 16, scope: !1453)
!1484 = !DILocation(line: 151, column: 3, scope: !1453)
!1485 = !DILocation(line: 152, column: 1, scope: !1453)
!1486 = distinct !DISubprogram(name: "MagickAdaptiveBlurImage", scope: !1, file: !1, line: 192, type: !1487, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!807, !1143, !1325, !1325}
!1489 = !DILocalVariable(name: "wand", arg: 1, scope: !1486, file: !1, line: 192, type: !1143)
!1490 = !DILocation(line: 192, column: 66, scope: !1486)
!1491 = !DILocalVariable(name: "radius", arg: 2, scope: !1486, file: !1, line: 193, type: !1325)
!1492 = !DILocation(line: 193, column: 16, scope: !1486)
!1493 = !DILocalVariable(name: "sigma", arg: 3, scope: !1486, file: !1, line: 193, type: !1325)
!1494 = !DILocation(line: 193, column: 36, scope: !1486)
!1495 = !DILocalVariable(name: "status", scope: !1486, file: !1, line: 196, type: !807)
!1496 = !DILocation(line: 196, column: 5, scope: !1486)
!1497 = !DILocation(line: 198, column: 41, scope: !1486)
!1498 = !DILocation(line: 198, column: 62, scope: !1486)
!1499 = !DILocation(line: 198, column: 69, scope: !1486)
!1500 = !DILocation(line: 198, column: 10, scope: !1486)
!1501 = !DILocation(line: 198, column: 9, scope: !1486)
!1502 = !DILocation(line: 199, column: 10, scope: !1486)
!1503 = !DILocation(line: 199, column: 3, scope: !1486)
!1504 = distinct !DISubprogram(name: "MagickAdaptiveBlurImageChannel", scope: !1, file: !1, line: 202, type: !1505, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!807, !1143, !1507, !1325, !1325}
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1508 = !DILocalVariable(name: "wand", arg: 1, scope: !1504, file: !1, line: 202, type: !1143)
!1509 = !DILocation(line: 202, column: 73, scope: !1504)
!1510 = !DILocalVariable(name: "channel", arg: 2, scope: !1504, file: !1, line: 203, type: !1507)
!1511 = !DILocation(line: 203, column: 21, scope: !1504)
!1512 = !DILocalVariable(name: "radius", arg: 3, scope: !1504, file: !1, line: 203, type: !1325)
!1513 = !DILocation(line: 203, column: 42, scope: !1504)
!1514 = !DILocalVariable(name: "sigma", arg: 4, scope: !1504, file: !1, line: 203, type: !1325)
!1515 = !DILocation(line: 203, column: 62, scope: !1504)
!1516 = !DILocalVariable(name: "sharp_image", scope: !1504, file: !1, line: 206, type: !791)
!1517 = !DILocation(line: 206, column: 6, scope: !1504)
!1518 = !DILocation(line: 210, column: 7, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1504, file: !1, line: 210, column: 7)
!1520 = !DILocation(line: 210, column: 13, scope: !1519)
!1521 = !DILocation(line: 210, column: 19, scope: !1519)
!1522 = !DILocation(line: 210, column: 7, scope: !1504)
!1523 = !DILocation(line: 211, column: 60, scope: !1519)
!1524 = !DILocation(line: 211, column: 66, scope: !1519)
!1525 = !DILocation(line: 211, column: 12, scope: !1519)
!1526 = !DILocation(line: 211, column: 5, scope: !1519)
!1527 = !DILocation(line: 212, column: 7, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1504, file: !1, line: 212, column: 7)
!1529 = !DILocation(line: 212, column: 13, scope: !1528)
!1530 = !DILocation(line: 212, column: 20, scope: !1528)
!1531 = !DILocation(line: 212, column: 7, scope: !1504)
!1532 = !DILocation(line: 213, column: 5, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1528, file: !1, line: 213, column: 5)
!1534 = !DILocation(line: 214, column: 40, scope: !1504)
!1535 = !DILocation(line: 214, column: 46, scope: !1504)
!1536 = !DILocation(line: 214, column: 53, scope: !1504)
!1537 = !DILocation(line: 214, column: 61, scope: !1504)
!1538 = !DILocation(line: 214, column: 68, scope: !1504)
!1539 = !DILocation(line: 215, column: 5, scope: !1504)
!1540 = !DILocation(line: 215, column: 11, scope: !1504)
!1541 = !DILocation(line: 214, column: 15, scope: !1504)
!1542 = !DILocation(line: 214, column: 14, scope: !1504)
!1543 = !DILocation(line: 216, column: 7, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1504, file: !1, line: 216, column: 7)
!1545 = !DILocation(line: 216, column: 19, scope: !1544)
!1546 = !DILocation(line: 216, column: 7, scope: !1504)
!1547 = !DILocation(line: 217, column: 5, scope: !1544)
!1548 = !DILocation(line: 218, column: 23, scope: !1504)
!1549 = !DILocation(line: 218, column: 29, scope: !1504)
!1550 = !DILocation(line: 218, column: 36, scope: !1504)
!1551 = !DILocation(line: 218, column: 3, scope: !1504)
!1552 = !DILocation(line: 219, column: 3, scope: !1504)
!1553 = !DILocation(line: 220, column: 1, scope: !1504)
!1554 = distinct !DISubprogram(name: "MagickAdaptiveResizeImage", scope: !1, file: !1, line: 248, type: !1555, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!807, !1143, !1214, !1214}
!1557 = !DILocalVariable(name: "wand", arg: 1, scope: !1554, file: !1, line: 248, type: !1143)
!1558 = !DILocation(line: 248, column: 68, scope: !1554)
!1559 = !DILocalVariable(name: "columns", arg: 2, scope: !1554, file: !1, line: 249, type: !1214)
!1560 = !DILocation(line: 249, column: 16, scope: !1554)
!1561 = !DILocalVariable(name: "rows", arg: 3, scope: !1554, file: !1, line: 249, type: !1214)
!1562 = !DILocation(line: 249, column: 37, scope: !1554)
!1563 = !DILocalVariable(name: "resize_image", scope: !1554, file: !1, line: 252, type: !791)
!1564 = !DILocation(line: 252, column: 6, scope: !1554)
!1565 = !DILocation(line: 256, column: 7, scope: !1566)
!1566 = distinct !DILexicalBlock(scope: !1554, file: !1, line: 256, column: 7)
!1567 = !DILocation(line: 256, column: 13, scope: !1566)
!1568 = !DILocation(line: 256, column: 19, scope: !1566)
!1569 = !DILocation(line: 256, column: 7, scope: !1554)
!1570 = !DILocation(line: 257, column: 60, scope: !1566)
!1571 = !DILocation(line: 257, column: 66, scope: !1566)
!1572 = !DILocation(line: 257, column: 12, scope: !1566)
!1573 = !DILocation(line: 257, column: 5, scope: !1566)
!1574 = !DILocation(line: 258, column: 7, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1554, file: !1, line: 258, column: 7)
!1576 = !DILocation(line: 258, column: 13, scope: !1575)
!1577 = !DILocation(line: 258, column: 20, scope: !1575)
!1578 = !DILocation(line: 258, column: 7, scope: !1554)
!1579 = !DILocation(line: 259, column: 5, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1575, file: !1, line: 259, column: 5)
!1581 = !DILocation(line: 260, column: 36, scope: !1554)
!1582 = !DILocation(line: 260, column: 42, scope: !1554)
!1583 = !DILocation(line: 260, column: 49, scope: !1554)
!1584 = !DILocation(line: 260, column: 57, scope: !1554)
!1585 = !DILocation(line: 260, column: 62, scope: !1554)
!1586 = !DILocation(line: 260, column: 68, scope: !1554)
!1587 = !DILocation(line: 260, column: 16, scope: !1554)
!1588 = !DILocation(line: 260, column: 15, scope: !1554)
!1589 = !DILocation(line: 261, column: 7, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !1554, file: !1, line: 261, column: 7)
!1591 = !DILocation(line: 261, column: 20, scope: !1590)
!1592 = !DILocation(line: 261, column: 7, scope: !1554)
!1593 = !DILocation(line: 262, column: 5, scope: !1590)
!1594 = !DILocation(line: 263, column: 23, scope: !1554)
!1595 = !DILocation(line: 263, column: 29, scope: !1554)
!1596 = !DILocation(line: 263, column: 36, scope: !1554)
!1597 = !DILocation(line: 263, column: 3, scope: !1554)
!1598 = !DILocation(line: 264, column: 3, scope: !1554)
!1599 = !DILocation(line: 265, column: 1, scope: !1554)
!1600 = distinct !DISubprogram(name: "MagickAdaptiveSharpenImage", scope: !1, file: !1, line: 305, type: !1487, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1601 = !DILocalVariable(name: "wand", arg: 1, scope: !1600, file: !1, line: 305, type: !1143)
!1602 = !DILocation(line: 305, column: 69, scope: !1600)
!1603 = !DILocalVariable(name: "radius", arg: 2, scope: !1600, file: !1, line: 306, type: !1325)
!1604 = !DILocation(line: 306, column: 16, scope: !1600)
!1605 = !DILocalVariable(name: "sigma", arg: 3, scope: !1600, file: !1, line: 306, type: !1325)
!1606 = !DILocation(line: 306, column: 36, scope: !1600)
!1607 = !DILocalVariable(name: "status", scope: !1600, file: !1, line: 309, type: !807)
!1608 = !DILocation(line: 309, column: 5, scope: !1600)
!1609 = !DILocation(line: 311, column: 44, scope: !1600)
!1610 = !DILocation(line: 311, column: 65, scope: !1600)
!1611 = !DILocation(line: 311, column: 72, scope: !1600)
!1612 = !DILocation(line: 311, column: 10, scope: !1600)
!1613 = !DILocation(line: 311, column: 9, scope: !1600)
!1614 = !DILocation(line: 312, column: 10, scope: !1600)
!1615 = !DILocation(line: 312, column: 3, scope: !1600)
!1616 = distinct !DISubprogram(name: "MagickAdaptiveSharpenImageChannel", scope: !1, file: !1, line: 315, type: !1505, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1617 = !DILocalVariable(name: "wand", arg: 1, scope: !1616, file: !1, line: 315, type: !1143)
!1618 = !DILocation(line: 315, column: 76, scope: !1616)
!1619 = !DILocalVariable(name: "channel", arg: 2, scope: !1616, file: !1, line: 316, type: !1507)
!1620 = !DILocation(line: 316, column: 21, scope: !1616)
!1621 = !DILocalVariable(name: "radius", arg: 3, scope: !1616, file: !1, line: 316, type: !1325)
!1622 = !DILocation(line: 316, column: 42, scope: !1616)
!1623 = !DILocalVariable(name: "sigma", arg: 4, scope: !1616, file: !1, line: 316, type: !1325)
!1624 = !DILocation(line: 316, column: 62, scope: !1616)
!1625 = !DILocalVariable(name: "sharp_image", scope: !1616, file: !1, line: 319, type: !791)
!1626 = !DILocation(line: 319, column: 6, scope: !1616)
!1627 = !DILocation(line: 323, column: 7, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1616, file: !1, line: 323, column: 7)
!1629 = !DILocation(line: 323, column: 13, scope: !1628)
!1630 = !DILocation(line: 323, column: 19, scope: !1628)
!1631 = !DILocation(line: 323, column: 7, scope: !1616)
!1632 = !DILocation(line: 324, column: 60, scope: !1628)
!1633 = !DILocation(line: 324, column: 66, scope: !1628)
!1634 = !DILocation(line: 324, column: 12, scope: !1628)
!1635 = !DILocation(line: 324, column: 5, scope: !1628)
!1636 = !DILocation(line: 325, column: 7, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1616, file: !1, line: 325, column: 7)
!1638 = !DILocation(line: 325, column: 13, scope: !1637)
!1639 = !DILocation(line: 325, column: 20, scope: !1637)
!1640 = !DILocation(line: 325, column: 7, scope: !1616)
!1641 = !DILocation(line: 326, column: 5, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 326, column: 5)
!1643 = !DILocation(line: 327, column: 43, scope: !1616)
!1644 = !DILocation(line: 327, column: 49, scope: !1616)
!1645 = !DILocation(line: 327, column: 56, scope: !1616)
!1646 = !DILocation(line: 327, column: 64, scope: !1616)
!1647 = !DILocation(line: 327, column: 71, scope: !1616)
!1648 = !DILocation(line: 328, column: 5, scope: !1616)
!1649 = !DILocation(line: 328, column: 11, scope: !1616)
!1650 = !DILocation(line: 327, column: 15, scope: !1616)
!1651 = !DILocation(line: 327, column: 14, scope: !1616)
!1652 = !DILocation(line: 329, column: 7, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1616, file: !1, line: 329, column: 7)
!1654 = !DILocation(line: 329, column: 19, scope: !1653)
!1655 = !DILocation(line: 329, column: 7, scope: !1616)
!1656 = !DILocation(line: 330, column: 5, scope: !1653)
!1657 = !DILocation(line: 331, column: 23, scope: !1616)
!1658 = !DILocation(line: 331, column: 29, scope: !1616)
!1659 = !DILocation(line: 331, column: 36, scope: !1616)
!1660 = !DILocation(line: 331, column: 3, scope: !1616)
!1661 = !DILocation(line: 332, column: 3, scope: !1616)
!1662 = !DILocation(line: 333, column: 1, scope: !1616)
!1663 = distinct !DISubprogram(name: "MagickAdaptiveThresholdImage", scope: !1, file: !1, line: 367, type: !1664, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!807, !1143, !1214, !1214, !1666}
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!1667 = !DILocalVariable(name: "wand", arg: 1, scope: !1663, file: !1, line: 367, type: !1143)
!1668 = !DILocation(line: 367, column: 71, scope: !1663)
!1669 = !DILocalVariable(name: "width", arg: 2, scope: !1663, file: !1, line: 368, type: !1214)
!1670 = !DILocation(line: 368, column: 16, scope: !1663)
!1671 = !DILocalVariable(name: "height", arg: 3, scope: !1663, file: !1, line: 368, type: !1214)
!1672 = !DILocation(line: 368, column: 35, scope: !1663)
!1673 = !DILocalVariable(name: "offset", arg: 4, scope: !1663, file: !1, line: 368, type: !1666)
!1674 = !DILocation(line: 368, column: 56, scope: !1663)
!1675 = !DILocalVariable(name: "threshold_image", scope: !1663, file: !1, line: 371, type: !791)
!1676 = !DILocation(line: 371, column: 6, scope: !1663)
!1677 = !DILocation(line: 375, column: 7, scope: !1678)
!1678 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 375, column: 7)
!1679 = !DILocation(line: 375, column: 13, scope: !1678)
!1680 = !DILocation(line: 375, column: 19, scope: !1678)
!1681 = !DILocation(line: 375, column: 7, scope: !1663)
!1682 = !DILocation(line: 376, column: 60, scope: !1678)
!1683 = !DILocation(line: 376, column: 66, scope: !1678)
!1684 = !DILocation(line: 376, column: 12, scope: !1678)
!1685 = !DILocation(line: 376, column: 5, scope: !1678)
!1686 = !DILocation(line: 377, column: 7, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 377, column: 7)
!1688 = !DILocation(line: 377, column: 13, scope: !1687)
!1689 = !DILocation(line: 377, column: 20, scope: !1687)
!1690 = !DILocation(line: 377, column: 7, scope: !1663)
!1691 = !DILocation(line: 378, column: 5, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1687, file: !1, line: 378, column: 5)
!1693 = !DILocation(line: 379, column: 42, scope: !1663)
!1694 = !DILocation(line: 379, column: 48, scope: !1663)
!1695 = !DILocation(line: 379, column: 55, scope: !1663)
!1696 = !DILocation(line: 379, column: 61, scope: !1663)
!1697 = !DILocation(line: 379, column: 68, scope: !1663)
!1698 = !DILocation(line: 380, column: 5, scope: !1663)
!1699 = !DILocation(line: 380, column: 11, scope: !1663)
!1700 = !DILocation(line: 379, column: 19, scope: !1663)
!1701 = !DILocation(line: 379, column: 18, scope: !1663)
!1702 = !DILocation(line: 381, column: 7, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1663, file: !1, line: 381, column: 7)
!1704 = !DILocation(line: 381, column: 23, scope: !1703)
!1705 = !DILocation(line: 381, column: 7, scope: !1663)
!1706 = !DILocation(line: 382, column: 5, scope: !1703)
!1707 = !DILocation(line: 383, column: 23, scope: !1663)
!1708 = !DILocation(line: 383, column: 29, scope: !1663)
!1709 = !DILocation(line: 383, column: 36, scope: !1663)
!1710 = !DILocation(line: 383, column: 3, scope: !1663)
!1711 = !DILocation(line: 384, column: 3, scope: !1663)
!1712 = !DILocation(line: 385, column: 1, scope: !1663)
!1713 = distinct !DISubprogram(name: "MagickAddImage", scope: !1, file: !1, line: 471, type: !1714, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!807, !1143, !1456}
!1716 = !DILocalVariable(name: "wand", arg: 1, scope: !1713, file: !1, line: 471, type: !1143)
!1717 = !DILocation(line: 471, column: 57, scope: !1713)
!1718 = !DILocalVariable(name: "add_wand", arg: 2, scope: !1713, file: !1, line: 472, type: !1456)
!1719 = !DILocation(line: 472, column: 21, scope: !1713)
!1720 = !DILocalVariable(name: "images", scope: !1713, file: !1, line: 475, type: !791)
!1721 = !DILocation(line: 475, column: 6, scope: !1713)
!1722 = !DILocation(line: 479, column: 7, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 479, column: 7)
!1724 = !DILocation(line: 479, column: 13, scope: !1723)
!1725 = !DILocation(line: 479, column: 19, scope: !1723)
!1726 = !DILocation(line: 479, column: 7, scope: !1713)
!1727 = !DILocation(line: 480, column: 60, scope: !1723)
!1728 = !DILocation(line: 480, column: 66, scope: !1723)
!1729 = !DILocation(line: 480, column: 12, scope: !1723)
!1730 = !DILocation(line: 480, column: 5, scope: !1723)
!1731 = !DILocation(line: 483, column: 7, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 483, column: 7)
!1733 = !DILocation(line: 483, column: 17, scope: !1732)
!1734 = !DILocation(line: 483, column: 24, scope: !1732)
!1735 = !DILocation(line: 483, column: 7, scope: !1713)
!1736 = !DILocation(line: 484, column: 5, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1732, file: !1, line: 484, column: 5)
!1738 = !DILocation(line: 488, column: 25, scope: !1713)
!1739 = !DILocation(line: 488, column: 35, scope: !1713)
!1740 = !DILocation(line: 488, column: 42, scope: !1713)
!1741 = !DILocation(line: 488, column: 48, scope: !1713)
!1742 = !DILocation(line: 488, column: 10, scope: !1713)
!1743 = !DILocation(line: 488, column: 9, scope: !1713)
!1744 = !DILocation(line: 489, column: 7, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 489, column: 7)
!1746 = !DILocation(line: 489, column: 14, scope: !1745)
!1747 = !DILocation(line: 489, column: 7, scope: !1713)
!1748 = !DILocation(line: 490, column: 5, scope: !1745)
!1749 = !DILocation(line: 491, column: 28, scope: !1713)
!1750 = !DILocation(line: 491, column: 33, scope: !1713)
!1751 = !DILocation(line: 491, column: 10, scope: !1713)
!1752 = !DILocation(line: 491, column: 3, scope: !1713)
!1753 = !DILocation(line: 492, column: 1, scope: !1713)
!1754 = distinct !DISubprogram(name: "InsertImageInWand", scope: !1, file: !1, line: 426, type: !1755, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!807, !1143, !791}
!1757 = !DILocalVariable(name: "wand", arg: 1, scope: !1754, file: !1, line: 426, type: !1143)
!1758 = !DILocation(line: 426, column: 63, scope: !1754)
!1759 = !DILocalVariable(name: "images", arg: 2, scope: !1754, file: !1, line: 427, type: !791)
!1760 = !DILocation(line: 427, column: 10, scope: !1754)
!1761 = !DILocation(line: 429, column: 7, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1754, file: !1, line: 429, column: 7)
!1763 = !DILocation(line: 429, column: 13, scope: !1762)
!1764 = !DILocation(line: 429, column: 20, scope: !1762)
!1765 = !DILocation(line: 429, column: 7, scope: !1754)
!1766 = !DILocation(line: 434, column: 11, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1768, file: !1, line: 434, column: 11)
!1768 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 430, column: 5)
!1769 = !DILocation(line: 434, column: 17, scope: !1767)
!1770 = !DILocation(line: 434, column: 31, scope: !1767)
!1771 = !DILocation(line: 434, column: 11, scope: !1768)
!1772 = !DILocation(line: 435, column: 42, scope: !1767)
!1773 = !DILocation(line: 435, column: 22, scope: !1767)
!1774 = !DILocation(line: 435, column: 9, scope: !1767)
!1775 = !DILocation(line: 435, column: 15, scope: !1767)
!1776 = !DILocation(line: 435, column: 21, scope: !1767)
!1777 = !DILocation(line: 437, column: 41, scope: !1767)
!1778 = !DILocation(line: 437, column: 22, scope: !1767)
!1779 = !DILocation(line: 437, column: 9, scope: !1767)
!1780 = !DILocation(line: 437, column: 15, scope: !1767)
!1781 = !DILocation(line: 437, column: 21, scope: !1767)
!1782 = !DILocation(line: 438, column: 7, scope: !1768)
!1783 = !DILocation(line: 440, column: 8, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1754, file: !1, line: 440, column: 7)
!1785 = !DILocation(line: 440, column: 14, scope: !1784)
!1786 = !DILocation(line: 440, column: 28, scope: !1784)
!1787 = !DILocation(line: 440, column: 44, scope: !1784)
!1788 = !DILocation(line: 441, column: 8, scope: !1784)
!1789 = !DILocation(line: 441, column: 14, scope: !1784)
!1790 = !DILocation(line: 441, column: 22, scope: !1784)
!1791 = !DILocation(line: 441, column: 31, scope: !1784)
!1792 = !DILocation(line: 440, column: 7, scope: !1754)
!1793 = !DILocation(line: 446, column: 27, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1784, file: !1, line: 442, column: 5)
!1795 = !DILocation(line: 446, column: 33, scope: !1794)
!1796 = !DILocation(line: 446, column: 40, scope: !1794)
!1797 = !DILocation(line: 446, column: 7, scope: !1794)
!1798 = !DILocation(line: 447, column: 40, scope: !1794)
!1799 = !DILocation(line: 447, column: 20, scope: !1794)
!1800 = !DILocation(line: 447, column: 7, scope: !1794)
!1801 = !DILocation(line: 447, column: 13, scope: !1794)
!1802 = !DILocation(line: 447, column: 19, scope: !1794)
!1803 = !DILocation(line: 448, column: 7, scope: !1794)
!1804 = !DILocation(line: 455, column: 7, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1754, file: !1, line: 455, column: 7)
!1806 = !DILocation(line: 455, column: 13, scope: !1805)
!1807 = !DILocation(line: 455, column: 21, scope: !1805)
!1808 = !DILocation(line: 455, column: 26, scope: !1805)
!1809 = !DILocation(line: 455, column: 7, scope: !1754)
!1810 = !DILocation(line: 460, column: 26, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1805, file: !1, line: 456, column: 5)
!1812 = !DILocation(line: 460, column: 32, scope: !1811)
!1813 = !DILocation(line: 460, column: 39, scope: !1811)
!1814 = !DILocation(line: 460, column: 7, scope: !1811)
!1815 = !DILocation(line: 461, column: 39, scope: !1811)
!1816 = !DILocation(line: 461, column: 20, scope: !1811)
!1817 = !DILocation(line: 461, column: 7, scope: !1811)
!1818 = !DILocation(line: 461, column: 13, scope: !1811)
!1819 = !DILocation(line: 461, column: 19, scope: !1811)
!1820 = !DILocation(line: 462, column: 7, scope: !1811)
!1821 = !DILocation(line: 467, column: 22, scope: !1754)
!1822 = !DILocation(line: 467, column: 28, scope: !1754)
!1823 = !DILocation(line: 467, column: 35, scope: !1754)
!1824 = !DILocation(line: 467, column: 3, scope: !1754)
!1825 = !DILocation(line: 468, column: 3, scope: !1754)
!1826 = !DILocation(line: 469, column: 1, scope: !1754)
!1827 = distinct !DISubprogram(name: "MagickAddNoiseImage", scope: !1, file: !1, line: 525, type: !1828, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!807, !1143, !1830}
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "NoiseType", file: !477, line: 37, baseType: !476)
!1832 = !DILocalVariable(name: "wand", arg: 1, scope: !1827, file: !1, line: 525, type: !1143)
!1833 = !DILocation(line: 525, column: 62, scope: !1827)
!1834 = !DILocalVariable(name: "noise_type", arg: 2, scope: !1827, file: !1, line: 526, type: !1830)
!1835 = !DILocation(line: 526, column: 19, scope: !1827)
!1836 = !DILocalVariable(name: "status", scope: !1827, file: !1, line: 529, type: !807)
!1837 = !DILocation(line: 529, column: 5, scope: !1827)
!1838 = !DILocation(line: 531, column: 37, scope: !1827)
!1839 = !DILocation(line: 531, column: 58, scope: !1827)
!1840 = !DILocation(line: 531, column: 10, scope: !1827)
!1841 = !DILocation(line: 531, column: 9, scope: !1827)
!1842 = !DILocation(line: 532, column: 10, scope: !1827)
!1843 = !DILocation(line: 532, column: 3, scope: !1827)
!1844 = distinct !DISubprogram(name: "MagickAddNoiseImageChannel", scope: !1, file: !1, line: 535, type: !1845, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!807, !1143, !1507, !1830}
!1847 = !DILocalVariable(name: "wand", arg: 1, scope: !1844, file: !1, line: 535, type: !1143)
!1848 = !DILocation(line: 535, column: 69, scope: !1844)
!1849 = !DILocalVariable(name: "channel", arg: 2, scope: !1844, file: !1, line: 536, type: !1507)
!1850 = !DILocation(line: 536, column: 21, scope: !1844)
!1851 = !DILocalVariable(name: "noise_type", arg: 3, scope: !1844, file: !1, line: 536, type: !1830)
!1852 = !DILocation(line: 536, column: 45, scope: !1844)
!1853 = !DILocalVariable(name: "noise_image", scope: !1844, file: !1, line: 539, type: !791)
!1854 = !DILocation(line: 539, column: 6, scope: !1844)
!1855 = !DILocation(line: 543, column: 7, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 543, column: 7)
!1857 = !DILocation(line: 543, column: 13, scope: !1856)
!1858 = !DILocation(line: 543, column: 19, scope: !1856)
!1859 = !DILocation(line: 543, column: 7, scope: !1844)
!1860 = !DILocation(line: 544, column: 60, scope: !1856)
!1861 = !DILocation(line: 544, column: 66, scope: !1856)
!1862 = !DILocation(line: 544, column: 12, scope: !1856)
!1863 = !DILocation(line: 544, column: 5, scope: !1856)
!1864 = !DILocation(line: 545, column: 7, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 545, column: 7)
!1866 = !DILocation(line: 545, column: 13, scope: !1865)
!1867 = !DILocation(line: 545, column: 20, scope: !1865)
!1868 = !DILocation(line: 545, column: 7, scope: !1844)
!1869 = !DILocation(line: 546, column: 5, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1865, file: !1, line: 546, column: 5)
!1871 = !DILocation(line: 547, column: 36, scope: !1844)
!1872 = !DILocation(line: 547, column: 42, scope: !1844)
!1873 = !DILocation(line: 547, column: 49, scope: !1844)
!1874 = !DILocation(line: 547, column: 57, scope: !1844)
!1875 = !DILocation(line: 548, column: 5, scope: !1844)
!1876 = !DILocation(line: 548, column: 11, scope: !1844)
!1877 = !DILocation(line: 547, column: 15, scope: !1844)
!1878 = !DILocation(line: 547, column: 14, scope: !1844)
!1879 = !DILocation(line: 549, column: 7, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 549, column: 7)
!1881 = !DILocation(line: 549, column: 19, scope: !1880)
!1882 = !DILocation(line: 549, column: 7, scope: !1844)
!1883 = !DILocation(line: 550, column: 5, scope: !1880)
!1884 = !DILocation(line: 551, column: 23, scope: !1844)
!1885 = !DILocation(line: 551, column: 29, scope: !1844)
!1886 = !DILocation(line: 551, column: 36, scope: !1844)
!1887 = !DILocation(line: 551, column: 3, scope: !1844)
!1888 = !DILocation(line: 552, column: 3, scope: !1844)
!1889 = !DILocation(line: 553, column: 1, scope: !1844)
!1890 = distinct !DISubprogram(name: "MagickAffineTransformImage", scope: !1, file: !1, line: 581, type: !1891, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!807, !1143, !1893}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1895)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawingWand", file: !1896, line: 28, baseType: !1897)
!1896 = !DIFile(filename: "./wand/drawing-wand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawingWand", file: !1896, line: 27, flags: DIFlagFwdDecl)
!1898 = !DILocalVariable(name: "wand", arg: 1, scope: !1890, file: !1, line: 581, type: !1143)
!1899 = !DILocation(line: 581, column: 69, scope: !1890)
!1900 = !DILocalVariable(name: "drawing_wand", arg: 2, scope: !1890, file: !1, line: 582, type: !1893)
!1901 = !DILocation(line: 582, column: 22, scope: !1890)
!1902 = !DILocalVariable(name: "draw_info", scope: !1890, file: !1, line: 585, type: !1012)
!1903 = !DILocation(line: 585, column: 6, scope: !1890)
!1904 = !DILocalVariable(name: "affine_image", scope: !1890, file: !1, line: 588, type: !791)
!1905 = !DILocation(line: 588, column: 6, scope: !1890)
!1906 = !DILocation(line: 592, column: 7, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 592, column: 7)
!1908 = !DILocation(line: 592, column: 13, scope: !1907)
!1909 = !DILocation(line: 592, column: 19, scope: !1907)
!1910 = !DILocation(line: 592, column: 7, scope: !1890)
!1911 = !DILocation(line: 593, column: 60, scope: !1907)
!1912 = !DILocation(line: 593, column: 66, scope: !1907)
!1913 = !DILocation(line: 593, column: 12, scope: !1907)
!1914 = !DILocation(line: 593, column: 5, scope: !1907)
!1915 = !DILocation(line: 594, column: 7, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 594, column: 7)
!1917 = !DILocation(line: 594, column: 13, scope: !1916)
!1918 = !DILocation(line: 594, column: 20, scope: !1916)
!1919 = !DILocation(line: 594, column: 7, scope: !1890)
!1920 = !DILocation(line: 595, column: 5, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1916, file: !1, line: 595, column: 5)
!1922 = !DILocation(line: 596, column: 29, scope: !1890)
!1923 = !DILocation(line: 596, column: 13, scope: !1890)
!1924 = !DILocation(line: 596, column: 12, scope: !1890)
!1925 = !DILocation(line: 597, column: 7, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 597, column: 7)
!1927 = !DILocation(line: 597, column: 17, scope: !1926)
!1928 = !DILocation(line: 597, column: 7, scope: !1890)
!1929 = !DILocation(line: 598, column: 5, scope: !1926)
!1930 = !DILocation(line: 599, column: 37, scope: !1890)
!1931 = !DILocation(line: 599, column: 43, scope: !1890)
!1932 = !DILocation(line: 599, column: 51, scope: !1890)
!1933 = !DILocation(line: 599, column: 62, scope: !1890)
!1934 = !DILocation(line: 600, column: 5, scope: !1890)
!1935 = !DILocation(line: 600, column: 11, scope: !1890)
!1936 = !DILocation(line: 599, column: 16, scope: !1890)
!1937 = !DILocation(line: 599, column: 15, scope: !1890)
!1938 = !DILocation(line: 601, column: 29, scope: !1890)
!1939 = !DILocation(line: 601, column: 13, scope: !1890)
!1940 = !DILocation(line: 601, column: 12, scope: !1890)
!1941 = !DILocation(line: 602, column: 7, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 602, column: 7)
!1943 = !DILocation(line: 602, column: 20, scope: !1942)
!1944 = !DILocation(line: 602, column: 7, scope: !1890)
!1945 = !DILocation(line: 603, column: 5, scope: !1942)
!1946 = !DILocation(line: 604, column: 23, scope: !1890)
!1947 = !DILocation(line: 604, column: 29, scope: !1890)
!1948 = !DILocation(line: 604, column: 36, scope: !1890)
!1949 = !DILocation(line: 604, column: 3, scope: !1890)
!1950 = !DILocation(line: 605, column: 3, scope: !1890)
!1951 = !DILocation(line: 606, column: 1, scope: !1890)
!1952 = distinct !DISubprogram(name: "MagickAnnotateImage", scope: !1, file: !1, line: 642, type: !1953, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!807, !1143, !1893, !1325, !1325, !1325, !924}
!1955 = !DILocalVariable(name: "wand", arg: 1, scope: !1952, file: !1, line: 642, type: !1143)
!1956 = !DILocation(line: 642, column: 62, scope: !1952)
!1957 = !DILocalVariable(name: "drawing_wand", arg: 2, scope: !1952, file: !1, line: 643, type: !1893)
!1958 = !DILocation(line: 643, column: 22, scope: !1952)
!1959 = !DILocalVariable(name: "x", arg: 3, scope: !1952, file: !1, line: 643, type: !1325)
!1960 = !DILocation(line: 643, column: 48, scope: !1952)
!1961 = !DILocalVariable(name: "y", arg: 4, scope: !1952, file: !1, line: 643, type: !1325)
!1962 = !DILocation(line: 643, column: 63, scope: !1952)
!1963 = !DILocalVariable(name: "angle", arg: 5, scope: !1952, file: !1, line: 644, type: !1325)
!1964 = !DILocation(line: 644, column: 16, scope: !1952)
!1965 = !DILocalVariable(name: "text", arg: 6, scope: !1952, file: !1, line: 644, type: !924)
!1966 = !DILocation(line: 644, column: 34, scope: !1952)
!1967 = !DILocalVariable(name: "geometry", scope: !1952, file: !1, line: 647, type: !944)
!1968 = !DILocation(line: 647, column: 5, scope: !1952)
!1969 = !DILocalVariable(name: "draw_info", scope: !1952, file: !1, line: 650, type: !1012)
!1970 = !DILocation(line: 650, column: 6, scope: !1952)
!1971 = !DILocalVariable(name: "status", scope: !1952, file: !1, line: 653, type: !807)
!1972 = !DILocation(line: 653, column: 5, scope: !1952)
!1973 = !DILocation(line: 657, column: 7, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1952, file: !1, line: 657, column: 7)
!1975 = !DILocation(line: 657, column: 13, scope: !1974)
!1976 = !DILocation(line: 657, column: 19, scope: !1974)
!1977 = !DILocation(line: 657, column: 7, scope: !1952)
!1978 = !DILocation(line: 658, column: 60, scope: !1974)
!1979 = !DILocation(line: 658, column: 66, scope: !1974)
!1980 = !DILocation(line: 658, column: 12, scope: !1974)
!1981 = !DILocation(line: 658, column: 5, scope: !1974)
!1982 = !DILocation(line: 659, column: 7, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1952, file: !1, line: 659, column: 7)
!1984 = !DILocation(line: 659, column: 13, scope: !1983)
!1985 = !DILocation(line: 659, column: 20, scope: !1983)
!1986 = !DILocation(line: 659, column: 7, scope: !1952)
!1987 = !DILocation(line: 660, column: 5, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 660, column: 5)
!1989 = !DILocation(line: 661, column: 29, scope: !1952)
!1990 = !DILocation(line: 661, column: 13, scope: !1952)
!1991 = !DILocation(line: 661, column: 12, scope: !1952)
!1992 = !DILocation(line: 662, column: 7, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1952, file: !1, line: 662, column: 7)
!1994 = !DILocation(line: 662, column: 17, scope: !1993)
!1995 = !DILocation(line: 662, column: 7, scope: !1952)
!1996 = !DILocation(line: 663, column: 5, scope: !1993)
!1997 = !DILocation(line: 664, column: 23, scope: !1952)
!1998 = !DILocation(line: 664, column: 34, scope: !1952)
!1999 = !DILocation(line: 664, column: 39, scope: !1952)
!2000 = !DILocation(line: 664, column: 10, scope: !1952)
!2001 = !DILocation(line: 665, column: 29, scope: !1952)
!2002 = !DILocation(line: 665, column: 61, scope: !1952)
!2003 = !DILocation(line: 665, column: 63, scope: !1952)
!2004 = !DILocation(line: 665, column: 10, scope: !1952)
!2005 = !DILocation(line: 666, column: 50, scope: !1952)
!2006 = !DILocation(line: 666, column: 45, scope: !1952)
!2007 = !DILocation(line: 666, column: 28, scope: !1952)
!2008 = !DILocation(line: 666, column: 24, scope: !1952)
!2009 = !DILocation(line: 666, column: 3, scope: !1952)
!2010 = !DILocation(line: 666, column: 14, scope: !1952)
!2011 = !DILocation(line: 666, column: 21, scope: !1952)
!2012 = !DILocation(line: 666, column: 23, scope: !1952)
!2013 = !DILocation(line: 667, column: 50, scope: !1952)
!2014 = !DILocation(line: 667, column: 45, scope: !1952)
!2015 = !DILocation(line: 667, column: 28, scope: !1952)
!2016 = !DILocation(line: 667, column: 24, scope: !1952)
!2017 = !DILocation(line: 667, column: 3, scope: !1952)
!2018 = !DILocation(line: 667, column: 14, scope: !1952)
!2019 = !DILocation(line: 667, column: 21, scope: !1952)
!2020 = !DILocation(line: 667, column: 23, scope: !1952)
!2021 = !DILocation(line: 668, column: 52, scope: !1952)
!2022 = !DILocation(line: 668, column: 47, scope: !1952)
!2023 = !DILocation(line: 668, column: 30, scope: !1952)
!2024 = !DILocation(line: 668, column: 26, scope: !1952)
!2025 = !DILocation(line: 668, column: 25, scope: !1952)
!2026 = !DILocation(line: 668, column: 3, scope: !1952)
!2027 = !DILocation(line: 668, column: 14, scope: !1952)
!2028 = !DILocation(line: 668, column: 21, scope: !1952)
!2029 = !DILocation(line: 668, column: 23, scope: !1952)
!2030 = !DILocation(line: 669, column: 50, scope: !1952)
!2031 = !DILocation(line: 669, column: 45, scope: !1952)
!2032 = !DILocation(line: 669, column: 28, scope: !1952)
!2033 = !DILocation(line: 669, column: 24, scope: !1952)
!2034 = !DILocation(line: 669, column: 3, scope: !1952)
!2035 = !DILocation(line: 669, column: 14, scope: !1952)
!2036 = !DILocation(line: 669, column: 21, scope: !1952)
!2037 = !DILocation(line: 669, column: 23, scope: !1952)
!2038 = !DILocation(line: 670, column: 23, scope: !1952)
!2039 = !DILocation(line: 670, column: 34, scope: !1952)
!2040 = !DILocation(line: 670, column: 43, scope: !1952)
!2041 = !DILocation(line: 670, column: 10, scope: !1952)
!2042 = !DILocation(line: 671, column: 24, scope: !1952)
!2043 = !DILocation(line: 671, column: 30, scope: !1952)
!2044 = !DILocation(line: 671, column: 37, scope: !1952)
!2045 = !DILocation(line: 671, column: 10, scope: !1952)
!2046 = !DILocation(line: 671, column: 9, scope: !1952)
!2047 = !DILocation(line: 672, column: 29, scope: !1952)
!2048 = !DILocation(line: 672, column: 13, scope: !1952)
!2049 = !DILocation(line: 672, column: 12, scope: !1952)
!2050 = !DILocation(line: 673, column: 7, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !1952, file: !1, line: 673, column: 7)
!2052 = !DILocation(line: 673, column: 14, scope: !2051)
!2053 = !DILocation(line: 673, column: 7, scope: !1952)
!2054 = !DILocation(line: 674, column: 22, scope: !2051)
!2055 = !DILocation(line: 674, column: 28, scope: !2051)
!2056 = !DILocation(line: 674, column: 39, scope: !2051)
!2057 = !DILocation(line: 674, column: 45, scope: !2051)
!2058 = !DILocation(line: 674, column: 53, scope: !2051)
!2059 = !DILocation(line: 674, column: 5, scope: !2051)
!2060 = !DILocation(line: 675, column: 10, scope: !1952)
!2061 = !DILocation(line: 675, column: 3, scope: !1952)
!2062 = !DILocation(line: 676, column: 1, scope: !1952)
!2063 = distinct !DISubprogram(name: "DegreesToRadians", scope: !2064, file: !2064, line: 54, type: !2065, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2064 = !DIFile(filename: "./magick/image-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!828, !1325}
!2067 = !DILocalVariable(name: "degrees", arg: 1, scope: !2063, file: !2064, line: 54, type: !1325)
!2068 = !DILocation(line: 54, column: 52, scope: !2063)
!2069 = !DILocation(line: 56, column: 29, scope: !2063)
!2070 = !DILocation(line: 56, column: 28, scope: !2063)
!2071 = !DILocation(line: 56, column: 36, scope: !2063)
!2072 = !DILocation(line: 56, column: 3, scope: !2063)
!2073 = distinct !DISubprogram(name: "MagickAnimateImages", scope: !1, file: !1, line: 703, type: !2074, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!807, !1143, !924}
!2076 = !DILocalVariable(name: "wand", arg: 1, scope: !2073, file: !1, line: 703, type: !1143)
!2077 = !DILocation(line: 703, column: 62, scope: !2073)
!2078 = !DILocalVariable(name: "server_name", arg: 2, scope: !2073, file: !1, line: 704, type: !924)
!2079 = !DILocation(line: 704, column: 15, scope: !2073)
!2080 = !DILocalVariable(name: "status", scope: !2073, file: !1, line: 707, type: !807)
!2081 = !DILocation(line: 707, column: 5, scope: !2073)
!2082 = !DILocation(line: 711, column: 7, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2073, file: !1, line: 711, column: 7)
!2084 = !DILocation(line: 711, column: 13, scope: !2083)
!2085 = !DILocation(line: 711, column: 19, scope: !2083)
!2086 = !DILocation(line: 711, column: 7, scope: !2073)
!2087 = !DILocation(line: 712, column: 60, scope: !2083)
!2088 = !DILocation(line: 712, column: 66, scope: !2083)
!2089 = !DILocation(line: 712, column: 12, scope: !2083)
!2090 = !DILocation(line: 712, column: 5, scope: !2083)
!2091 = !DILocation(line: 713, column: 23, scope: !2073)
!2092 = !DILocation(line: 713, column: 29, scope: !2073)
!2093 = !DILocation(line: 713, column: 41, scope: !2073)
!2094 = !DILocation(line: 713, column: 53, scope: !2073)
!2095 = !DILocation(line: 713, column: 10, scope: !2073)
!2096 = !DILocation(line: 714, column: 24, scope: !2073)
!2097 = !DILocation(line: 714, column: 30, scope: !2073)
!2098 = !DILocation(line: 714, column: 41, scope: !2073)
!2099 = !DILocation(line: 714, column: 47, scope: !2073)
!2100 = !DILocation(line: 714, column: 10, scope: !2073)
!2101 = !DILocation(line: 714, column: 9, scope: !2073)
!2102 = !DILocation(line: 715, column: 7, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2073, file: !1, line: 715, column: 7)
!2104 = !DILocation(line: 715, column: 14, scope: !2103)
!2105 = !DILocation(line: 715, column: 7, scope: !2073)
!2106 = !DILocation(line: 716, column: 22, scope: !2103)
!2107 = !DILocation(line: 716, column: 28, scope: !2103)
!2108 = !DILocation(line: 716, column: 39, scope: !2103)
!2109 = !DILocation(line: 716, column: 45, scope: !2103)
!2110 = !DILocation(line: 716, column: 53, scope: !2103)
!2111 = !DILocation(line: 716, column: 5, scope: !2103)
!2112 = !DILocation(line: 717, column: 10, scope: !2073)
!2113 = !DILocation(line: 717, column: 3, scope: !2073)
!2114 = distinct !DISubprogram(name: "MagickAppendImages", scope: !1, file: !1, line: 752, type: !2115, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2115 = !DISubroutineType(types: !2116)
!2116 = !{!1143, !1143, !2117}
!2117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!2118 = !DILocalVariable(name: "wand", arg: 1, scope: !2114, file: !1, line: 752, type: !1143)
!2119 = !DILocation(line: 752, column: 55, scope: !2114)
!2120 = !DILocalVariable(name: "stack", arg: 2, scope: !2114, file: !1, line: 753, type: !2117)
!2121 = !DILocation(line: 753, column: 27, scope: !2114)
!2122 = !DILocalVariable(name: "append_image", scope: !2114, file: !1, line: 756, type: !791)
!2123 = !DILocation(line: 756, column: 6, scope: !2114)
!2124 = !DILocation(line: 760, column: 7, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2114, file: !1, line: 760, column: 7)
!2126 = !DILocation(line: 760, column: 13, scope: !2125)
!2127 = !DILocation(line: 760, column: 19, scope: !2125)
!2128 = !DILocation(line: 760, column: 7, scope: !2114)
!2129 = !DILocation(line: 761, column: 60, scope: !2125)
!2130 = !DILocation(line: 761, column: 66, scope: !2125)
!2131 = !DILocation(line: 761, column: 12, scope: !2125)
!2132 = !DILocation(line: 761, column: 5, scope: !2125)
!2133 = !DILocation(line: 762, column: 7, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2114, file: !1, line: 762, column: 7)
!2135 = !DILocation(line: 762, column: 13, scope: !2134)
!2136 = !DILocation(line: 762, column: 20, scope: !2134)
!2137 = !DILocation(line: 762, column: 7, scope: !2114)
!2138 = !DILocation(line: 763, column: 5, scope: !2134)
!2139 = !DILocation(line: 764, column: 29, scope: !2114)
!2140 = !DILocation(line: 764, column: 35, scope: !2114)
!2141 = !DILocation(line: 764, column: 42, scope: !2114)
!2142 = !DILocation(line: 764, column: 48, scope: !2114)
!2143 = !DILocation(line: 764, column: 54, scope: !2114)
!2144 = !DILocation(line: 764, column: 16, scope: !2114)
!2145 = !DILocation(line: 764, column: 15, scope: !2114)
!2146 = !DILocation(line: 765, column: 7, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2114, file: !1, line: 765, column: 7)
!2148 = !DILocation(line: 765, column: 20, scope: !2147)
!2149 = !DILocation(line: 765, column: 7, scope: !2114)
!2150 = !DILocation(line: 766, column: 5, scope: !2147)
!2151 = !DILocation(line: 767, column: 36, scope: !2114)
!2152 = !DILocation(line: 767, column: 41, scope: !2114)
!2153 = !DILocation(line: 767, column: 10, scope: !2114)
!2154 = !DILocation(line: 767, column: 3, scope: !2114)
!2155 = !DILocation(line: 768, column: 1, scope: !2114)
!2156 = distinct !DISubprogram(name: "CloneMagickWandFromImages", scope: !1, file: !1, line: 87, type: !2157, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!1143, !1456, !791}
!2159 = !DILocalVariable(name: "wand", arg: 1, scope: !2156, file: !1, line: 87, type: !1456)
!2160 = !DILocation(line: 87, column: 64, scope: !2156)
!2161 = !DILocalVariable(name: "images", arg: 2, scope: !2156, file: !1, line: 88, type: !791)
!2162 = !DILocation(line: 88, column: 10, scope: !2156)
!2163 = !DILocalVariable(name: "clone_wand", scope: !2156, file: !1, line: 91, type: !1143)
!2164 = !DILocation(line: 91, column: 6, scope: !2156)
!2165 = !DILocation(line: 95, column: 7, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2156, file: !1, line: 95, column: 7)
!2167 = !DILocation(line: 95, column: 13, scope: !2166)
!2168 = !DILocation(line: 95, column: 19, scope: !2166)
!2169 = !DILocation(line: 95, column: 7, scope: !2156)
!2170 = !DILocation(line: 96, column: 60, scope: !2166)
!2171 = !DILocation(line: 96, column: 66, scope: !2166)
!2172 = !DILocation(line: 96, column: 12, scope: !2166)
!2173 = !DILocation(line: 96, column: 5, scope: !2166)
!2174 = !DILocation(line: 97, column: 29, scope: !2156)
!2175 = !DILocation(line: 97, column: 14, scope: !2156)
!2176 = !DILocation(line: 97, column: 13, scope: !2156)
!2177 = !DILocation(line: 98, column: 7, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2156, file: !1, line: 98, column: 7)
!2179 = !DILocation(line: 98, column: 18, scope: !2178)
!2180 = !DILocation(line: 98, column: 7, scope: !2156)
!2181 = !DILocalVariable(name: "exception", scope: !2182, file: !1, line: 99, type: !952)
!2182 = distinct !DILexicalBlock(scope: !2178, file: !1, line: 99, column: 5)
!2183 = !DILocation(line: 99, column: 5, scope: !2182)
!2184 = !DILocation(line: 101, column: 28, scope: !2156)
!2185 = !DILocation(line: 101, column: 10, scope: !2156)
!2186 = !DILocation(line: 102, column: 18, scope: !2156)
!2187 = !DILocation(line: 102, column: 3, scope: !2156)
!2188 = !DILocation(line: 102, column: 15, scope: !2156)
!2189 = !DILocation(line: 102, column: 17, scope: !2156)
!2190 = !DILocation(line: 103, column: 29, scope: !2156)
!2191 = !DILocation(line: 103, column: 41, scope: !2156)
!2192 = !DILocation(line: 104, column: 27, scope: !2156)
!2193 = !DILocation(line: 104, column: 39, scope: !2156)
!2194 = !DILocation(line: 104, column: 18, scope: !2156)
!2195 = !DILocation(line: 103, column: 10, scope: !2156)
!2196 = !DILocation(line: 105, column: 25, scope: !2156)
!2197 = !DILocation(line: 105, column: 3, scope: !2156)
!2198 = !DILocation(line: 105, column: 15, scope: !2156)
!2199 = !DILocation(line: 105, column: 24, scope: !2156)
!2200 = !DILocation(line: 106, column: 20, scope: !2156)
!2201 = !DILocation(line: 106, column: 32, scope: !2156)
!2202 = !DILocation(line: 106, column: 42, scope: !2156)
!2203 = !DILocation(line: 106, column: 48, scope: !2156)
!2204 = !DILocation(line: 106, column: 3, scope: !2156)
!2205 = !DILocation(line: 107, column: 41, scope: !2156)
!2206 = !DILocation(line: 107, column: 47, scope: !2156)
!2207 = !DILocation(line: 107, column: 26, scope: !2156)
!2208 = !DILocation(line: 107, column: 3, scope: !2156)
!2209 = !DILocation(line: 107, column: 15, scope: !2156)
!2210 = !DILocation(line: 107, column: 25, scope: !2156)
!2211 = !DILocation(line: 108, column: 47, scope: !2156)
!2212 = !DILocation(line: 108, column: 53, scope: !2156)
!2213 = !DILocation(line: 108, column: 29, scope: !2156)
!2214 = !DILocation(line: 108, column: 3, scope: !2156)
!2215 = !DILocation(line: 108, column: 15, scope: !2156)
!2216 = !DILocation(line: 108, column: 28, scope: !2156)
!2217 = !DILocation(line: 109, column: 22, scope: !2156)
!2218 = !DILocation(line: 109, column: 3, scope: !2156)
!2219 = !DILocation(line: 109, column: 15, scope: !2156)
!2220 = !DILocation(line: 109, column: 21, scope: !2156)
!2221 = !DILocation(line: 110, column: 21, scope: !2156)
!2222 = !DILocation(line: 110, column: 3, scope: !2156)
!2223 = !DILocation(line: 110, column: 15, scope: !2156)
!2224 = !DILocation(line: 110, column: 20, scope: !2156)
!2225 = !DILocation(line: 111, column: 7, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2156, file: !1, line: 111, column: 7)
!2227 = !DILocation(line: 111, column: 19, scope: !2226)
!2228 = !DILocation(line: 111, column: 25, scope: !2226)
!2229 = !DILocation(line: 111, column: 7, scope: !2156)
!2230 = !DILocation(line: 112, column: 60, scope: !2226)
!2231 = !DILocation(line: 112, column: 72, scope: !2226)
!2232 = !DILocation(line: 112, column: 12, scope: !2226)
!2233 = !DILocation(line: 112, column: 5, scope: !2226)
!2234 = !DILocation(line: 113, column: 3, scope: !2156)
!2235 = !DILocation(line: 113, column: 15, scope: !2156)
!2236 = !DILocation(line: 113, column: 24, scope: !2156)
!2237 = !DILocation(line: 114, column: 10, scope: !2156)
!2238 = !DILocation(line: 114, column: 3, scope: !2156)
!2239 = distinct !DISubprogram(name: "MagickAutoGammaImage", scope: !1, file: !1, line: 797, type: !2240, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!807, !1143}
!2242 = !DILocalVariable(name: "wand", arg: 1, scope: !2239, file: !1, line: 797, type: !1143)
!2243 = !DILocation(line: 797, column: 63, scope: !2239)
!2244 = !DILocalVariable(name: "status", scope: !2239, file: !1, line: 800, type: !807)
!2245 = !DILocation(line: 800, column: 5, scope: !2239)
!2246 = !DILocation(line: 802, column: 38, scope: !2239)
!2247 = !DILocation(line: 802, column: 10, scope: !2239)
!2248 = !DILocation(line: 802, column: 9, scope: !2239)
!2249 = !DILocation(line: 803, column: 10, scope: !2239)
!2250 = !DILocation(line: 803, column: 3, scope: !2239)
!2251 = distinct !DISubprogram(name: "MagickAutoGammaImageChannel", scope: !1, file: !1, line: 806, type: !2252, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{!807, !1143, !1507}
!2254 = !DILocalVariable(name: "wand", arg: 1, scope: !2251, file: !1, line: 806, type: !1143)
!2255 = !DILocation(line: 806, column: 70, scope: !2251)
!2256 = !DILocalVariable(name: "channel", arg: 2, scope: !2251, file: !1, line: 807, type: !1507)
!2257 = !DILocation(line: 807, column: 21, scope: !2251)
!2258 = !DILocalVariable(name: "status", scope: !2251, file: !1, line: 810, type: !807)
!2259 = !DILocation(line: 810, column: 5, scope: !2251)
!2260 = !DILocation(line: 814, column: 7, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 814, column: 7)
!2262 = !DILocation(line: 814, column: 13, scope: !2261)
!2263 = !DILocation(line: 814, column: 19, scope: !2261)
!2264 = !DILocation(line: 814, column: 7, scope: !2251)
!2265 = !DILocation(line: 815, column: 60, scope: !2261)
!2266 = !DILocation(line: 815, column: 66, scope: !2261)
!2267 = !DILocation(line: 815, column: 12, scope: !2261)
!2268 = !DILocation(line: 815, column: 5, scope: !2261)
!2269 = !DILocation(line: 816, column: 7, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 816, column: 7)
!2271 = !DILocation(line: 816, column: 13, scope: !2270)
!2272 = !DILocation(line: 816, column: 20, scope: !2270)
!2273 = !DILocation(line: 816, column: 7, scope: !2251)
!2274 = !DILocation(line: 817, column: 5, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2270, file: !1, line: 817, column: 5)
!2276 = !DILocation(line: 818, column: 32, scope: !2251)
!2277 = !DILocation(line: 818, column: 38, scope: !2251)
!2278 = !DILocation(line: 818, column: 45, scope: !2251)
!2279 = !DILocation(line: 818, column: 10, scope: !2251)
!2280 = !DILocation(line: 818, column: 9, scope: !2251)
!2281 = !DILocation(line: 819, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 819, column: 7)
!2283 = !DILocation(line: 819, column: 14, scope: !2282)
!2284 = !DILocation(line: 819, column: 7, scope: !2251)
!2285 = !DILocation(line: 820, column: 22, scope: !2282)
!2286 = !DILocation(line: 820, column: 28, scope: !2282)
!2287 = !DILocation(line: 820, column: 39, scope: !2282)
!2288 = !DILocation(line: 820, column: 45, scope: !2282)
!2289 = !DILocation(line: 820, column: 53, scope: !2282)
!2290 = !DILocation(line: 820, column: 5, scope: !2282)
!2291 = !DILocation(line: 821, column: 10, scope: !2251)
!2292 = !DILocation(line: 821, column: 3, scope: !2251)
!2293 = !DILocation(line: 822, column: 1, scope: !2251)
!2294 = distinct !DISubprogram(name: "MagickAutoLevelImage", scope: !1, file: !1, line: 851, type: !2240, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2295 = !DILocalVariable(name: "wand", arg: 1, scope: !2294, file: !1, line: 851, type: !1143)
!2296 = !DILocation(line: 851, column: 63, scope: !2294)
!2297 = !DILocalVariable(name: "status", scope: !2294, file: !1, line: 854, type: !807)
!2298 = !DILocation(line: 854, column: 5, scope: !2294)
!2299 = !DILocation(line: 856, column: 38, scope: !2294)
!2300 = !DILocation(line: 856, column: 10, scope: !2294)
!2301 = !DILocation(line: 856, column: 9, scope: !2294)
!2302 = !DILocation(line: 857, column: 10, scope: !2294)
!2303 = !DILocation(line: 857, column: 3, scope: !2294)
!2304 = distinct !DISubprogram(name: "MagickAutoLevelImageChannel", scope: !1, file: !1, line: 860, type: !2252, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2305 = !DILocalVariable(name: "wand", arg: 1, scope: !2304, file: !1, line: 860, type: !1143)
!2306 = !DILocation(line: 860, column: 70, scope: !2304)
!2307 = !DILocalVariable(name: "channel", arg: 2, scope: !2304, file: !1, line: 861, type: !1507)
!2308 = !DILocation(line: 861, column: 21, scope: !2304)
!2309 = !DILocalVariable(name: "status", scope: !2304, file: !1, line: 864, type: !807)
!2310 = !DILocation(line: 864, column: 5, scope: !2304)
!2311 = !DILocation(line: 868, column: 7, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2304, file: !1, line: 868, column: 7)
!2313 = !DILocation(line: 868, column: 13, scope: !2312)
!2314 = !DILocation(line: 868, column: 19, scope: !2312)
!2315 = !DILocation(line: 868, column: 7, scope: !2304)
!2316 = !DILocation(line: 869, column: 60, scope: !2312)
!2317 = !DILocation(line: 869, column: 66, scope: !2312)
!2318 = !DILocation(line: 869, column: 12, scope: !2312)
!2319 = !DILocation(line: 869, column: 5, scope: !2312)
!2320 = !DILocation(line: 870, column: 7, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2304, file: !1, line: 870, column: 7)
!2322 = !DILocation(line: 870, column: 13, scope: !2321)
!2323 = !DILocation(line: 870, column: 20, scope: !2321)
!2324 = !DILocation(line: 870, column: 7, scope: !2304)
!2325 = !DILocation(line: 871, column: 5, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2321, file: !1, line: 871, column: 5)
!2327 = !DILocation(line: 872, column: 32, scope: !2304)
!2328 = !DILocation(line: 872, column: 38, scope: !2304)
!2329 = !DILocation(line: 872, column: 45, scope: !2304)
!2330 = !DILocation(line: 872, column: 10, scope: !2304)
!2331 = !DILocation(line: 872, column: 9, scope: !2304)
!2332 = !DILocation(line: 873, column: 7, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2304, file: !1, line: 873, column: 7)
!2334 = !DILocation(line: 873, column: 14, scope: !2333)
!2335 = !DILocation(line: 873, column: 7, scope: !2304)
!2336 = !DILocation(line: 874, column: 22, scope: !2333)
!2337 = !DILocation(line: 874, column: 28, scope: !2333)
!2338 = !DILocation(line: 874, column: 39, scope: !2333)
!2339 = !DILocation(line: 874, column: 45, scope: !2333)
!2340 = !DILocation(line: 874, column: 53, scope: !2333)
!2341 = !DILocation(line: 874, column: 5, scope: !2333)
!2342 = !DILocation(line: 875, column: 10, scope: !2304)
!2343 = !DILocation(line: 875, column: 3, scope: !2304)
!2344 = !DILocation(line: 876, column: 1, scope: !2304)
!2345 = distinct !DISubprogram(name: "MagickBlackThresholdImage", scope: !1, file: !1, line: 905, type: !2346, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!807, !1143, !2348}
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!2350 = !DILocalVariable(name: "wand", arg: 1, scope: !2345, file: !1, line: 905, type: !1143)
!2351 = !DILocation(line: 905, column: 68, scope: !2345)
!2352 = !DILocalVariable(name: "threshold", arg: 2, scope: !2345, file: !1, line: 906, type: !2348)
!2353 = !DILocation(line: 906, column: 20, scope: !2345)
!2354 = !DILocalVariable(name: "thresholds", scope: !2345, file: !1, line: 909, type: !944)
!2355 = !DILocation(line: 909, column: 5, scope: !2345)
!2356 = !DILocalVariable(name: "status", scope: !2345, file: !1, line: 912, type: !807)
!2357 = !DILocation(line: 912, column: 5, scope: !2345)
!2358 = !DILocation(line: 916, column: 7, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 916, column: 7)
!2360 = !DILocation(line: 916, column: 13, scope: !2359)
!2361 = !DILocation(line: 916, column: 19, scope: !2359)
!2362 = !DILocation(line: 916, column: 7, scope: !2345)
!2363 = !DILocation(line: 917, column: 60, scope: !2359)
!2364 = !DILocation(line: 917, column: 66, scope: !2359)
!2365 = !DILocation(line: 917, column: 12, scope: !2359)
!2366 = !DILocation(line: 917, column: 5, scope: !2359)
!2367 = !DILocation(line: 918, column: 7, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 918, column: 7)
!2369 = !DILocation(line: 918, column: 13, scope: !2368)
!2370 = !DILocation(line: 918, column: 20, scope: !2368)
!2371 = !DILocation(line: 918, column: 7, scope: !2345)
!2372 = !DILocation(line: 919, column: 5, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 919, column: 5)
!2374 = !DILocation(line: 920, column: 29, scope: !2345)
!2375 = !DILocation(line: 922, column: 5, scope: !2345)
!2376 = !DILocation(line: 921, column: 55, scope: !2345)
!2377 = !DILocation(line: 922, column: 37, scope: !2345)
!2378 = !DILocation(line: 922, column: 16, scope: !2345)
!2379 = !DILocation(line: 922, column: 68, scope: !2345)
!2380 = !DILocation(line: 922, column: 48, scope: !2345)
!2381 = !DILocation(line: 923, column: 28, scope: !2345)
!2382 = !DILocation(line: 923, column: 5, scope: !2345)
!2383 = !DILocation(line: 920, column: 10, scope: !2345)
!2384 = !DILocation(line: 924, column: 30, scope: !2345)
!2385 = !DILocation(line: 924, column: 36, scope: !2345)
!2386 = !DILocation(line: 924, column: 43, scope: !2345)
!2387 = !DILocation(line: 924, column: 10, scope: !2345)
!2388 = !DILocation(line: 924, column: 9, scope: !2345)
!2389 = !DILocation(line: 925, column: 7, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 925, column: 7)
!2391 = !DILocation(line: 925, column: 14, scope: !2390)
!2392 = !DILocation(line: 925, column: 7, scope: !2345)
!2393 = !DILocation(line: 926, column: 22, scope: !2390)
!2394 = !DILocation(line: 926, column: 28, scope: !2390)
!2395 = !DILocation(line: 926, column: 39, scope: !2390)
!2396 = !DILocation(line: 926, column: 45, scope: !2390)
!2397 = !DILocation(line: 926, column: 53, scope: !2390)
!2398 = !DILocation(line: 926, column: 5, scope: !2390)
!2399 = !DILocation(line: 927, column: 10, scope: !2345)
!2400 = !DILocation(line: 927, column: 3, scope: !2345)
!2401 = !DILocation(line: 928, column: 1, scope: !2345)
!2402 = distinct !DISubprogram(name: "MagickBlueShiftImage", scope: !1, file: !1, line: 956, type: !2403, scopeLine: 958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!807, !1143, !1325}
!2405 = !DILocalVariable(name: "wand", arg: 1, scope: !2402, file: !1, line: 956, type: !1143)
!2406 = !DILocation(line: 956, column: 63, scope: !2402)
!2407 = !DILocalVariable(name: "factor", arg: 2, scope: !2402, file: !1, line: 957, type: !1325)
!2408 = !DILocation(line: 957, column: 16, scope: !2402)
!2409 = !DILocalVariable(name: "shift_image", scope: !2402, file: !1, line: 960, type: !791)
!2410 = !DILocation(line: 960, column: 6, scope: !2402)
!2411 = !DILocation(line: 964, column: 7, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 964, column: 7)
!2413 = !DILocation(line: 964, column: 13, scope: !2412)
!2414 = !DILocation(line: 964, column: 19, scope: !2412)
!2415 = !DILocation(line: 964, column: 7, scope: !2402)
!2416 = !DILocation(line: 965, column: 60, scope: !2412)
!2417 = !DILocation(line: 965, column: 66, scope: !2412)
!2418 = !DILocation(line: 965, column: 12, scope: !2412)
!2419 = !DILocation(line: 965, column: 5, scope: !2412)
!2420 = !DILocation(line: 966, column: 7, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 966, column: 7)
!2422 = !DILocation(line: 966, column: 13, scope: !2421)
!2423 = !DILocation(line: 966, column: 20, scope: !2421)
!2424 = !DILocation(line: 966, column: 7, scope: !2402)
!2425 = !DILocation(line: 967, column: 5, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 967, column: 5)
!2427 = !DILocation(line: 968, column: 30, scope: !2402)
!2428 = !DILocation(line: 968, column: 36, scope: !2402)
!2429 = !DILocation(line: 968, column: 43, scope: !2402)
!2430 = !DILocation(line: 968, column: 50, scope: !2402)
!2431 = !DILocation(line: 968, column: 56, scope: !2402)
!2432 = !DILocation(line: 968, column: 15, scope: !2402)
!2433 = !DILocation(line: 968, column: 14, scope: !2402)
!2434 = !DILocation(line: 969, column: 7, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 969, column: 7)
!2436 = !DILocation(line: 969, column: 19, scope: !2435)
!2437 = !DILocation(line: 969, column: 7, scope: !2402)
!2438 = !DILocation(line: 970, column: 5, scope: !2435)
!2439 = !DILocation(line: 971, column: 23, scope: !2402)
!2440 = !DILocation(line: 971, column: 29, scope: !2402)
!2441 = !DILocation(line: 971, column: 36, scope: !2402)
!2442 = !DILocation(line: 971, column: 3, scope: !2402)
!2443 = !DILocation(line: 972, column: 3, scope: !2402)
!2444 = !DILocation(line: 973, column: 1, scope: !2402)
!2445 = distinct !DISubprogram(name: "MagickBlurImage", scope: !1, file: !1, line: 1011, type: !1487, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2446 = !DILocalVariable(name: "wand", arg: 1, scope: !2445, file: !1, line: 1011, type: !1143)
!2447 = !DILocation(line: 1011, column: 58, scope: !2445)
!2448 = !DILocalVariable(name: "radius", arg: 2, scope: !2445, file: !1, line: 1012, type: !1325)
!2449 = !DILocation(line: 1012, column: 16, scope: !2445)
!2450 = !DILocalVariable(name: "sigma", arg: 3, scope: !2445, file: !1, line: 1012, type: !1325)
!2451 = !DILocation(line: 1012, column: 36, scope: !2445)
!2452 = !DILocalVariable(name: "status", scope: !2445, file: !1, line: 1015, type: !807)
!2453 = !DILocation(line: 1015, column: 5, scope: !2445)
!2454 = !DILocation(line: 1017, column: 33, scope: !2445)
!2455 = !DILocation(line: 1017, column: 54, scope: !2445)
!2456 = !DILocation(line: 1017, column: 61, scope: !2445)
!2457 = !DILocation(line: 1017, column: 10, scope: !2445)
!2458 = !DILocation(line: 1017, column: 9, scope: !2445)
!2459 = !DILocation(line: 1018, column: 10, scope: !2445)
!2460 = !DILocation(line: 1018, column: 3, scope: !2445)
!2461 = distinct !DISubprogram(name: "MagickBlurImageChannel", scope: !1, file: !1, line: 1021, type: !1505, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2462 = !DILocalVariable(name: "wand", arg: 1, scope: !2461, file: !1, line: 1021, type: !1143)
!2463 = !DILocation(line: 1021, column: 65, scope: !2461)
!2464 = !DILocalVariable(name: "channel", arg: 2, scope: !2461, file: !1, line: 1022, type: !1507)
!2465 = !DILocation(line: 1022, column: 21, scope: !2461)
!2466 = !DILocalVariable(name: "radius", arg: 3, scope: !2461, file: !1, line: 1022, type: !1325)
!2467 = !DILocation(line: 1022, column: 42, scope: !2461)
!2468 = !DILocalVariable(name: "sigma", arg: 4, scope: !2461, file: !1, line: 1022, type: !1325)
!2469 = !DILocation(line: 1022, column: 62, scope: !2461)
!2470 = !DILocalVariable(name: "blur_image", scope: !2461, file: !1, line: 1025, type: !791)
!2471 = !DILocation(line: 1025, column: 6, scope: !2461)
!2472 = !DILocation(line: 1029, column: 7, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2461, file: !1, line: 1029, column: 7)
!2474 = !DILocation(line: 1029, column: 13, scope: !2473)
!2475 = !DILocation(line: 1029, column: 19, scope: !2473)
!2476 = !DILocation(line: 1029, column: 7, scope: !2461)
!2477 = !DILocation(line: 1030, column: 60, scope: !2473)
!2478 = !DILocation(line: 1030, column: 66, scope: !2473)
!2479 = !DILocation(line: 1030, column: 12, scope: !2473)
!2480 = !DILocation(line: 1030, column: 5, scope: !2473)
!2481 = !DILocation(line: 1031, column: 7, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2461, file: !1, line: 1031, column: 7)
!2483 = !DILocation(line: 1031, column: 13, scope: !2482)
!2484 = !DILocation(line: 1031, column: 20, scope: !2482)
!2485 = !DILocation(line: 1031, column: 7, scope: !2461)
!2486 = !DILocation(line: 1032, column: 5, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2482, file: !1, line: 1032, column: 5)
!2488 = !DILocation(line: 1033, column: 31, scope: !2461)
!2489 = !DILocation(line: 1033, column: 37, scope: !2461)
!2490 = !DILocation(line: 1033, column: 44, scope: !2461)
!2491 = !DILocation(line: 1033, column: 52, scope: !2461)
!2492 = !DILocation(line: 1033, column: 59, scope: !2461)
!2493 = !DILocation(line: 1034, column: 5, scope: !2461)
!2494 = !DILocation(line: 1034, column: 11, scope: !2461)
!2495 = !DILocation(line: 1033, column: 14, scope: !2461)
!2496 = !DILocation(line: 1033, column: 13, scope: !2461)
!2497 = !DILocation(line: 1035, column: 7, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2461, file: !1, line: 1035, column: 7)
!2499 = !DILocation(line: 1035, column: 18, scope: !2498)
!2500 = !DILocation(line: 1035, column: 7, scope: !2461)
!2501 = !DILocation(line: 1036, column: 5, scope: !2498)
!2502 = !DILocation(line: 1037, column: 23, scope: !2461)
!2503 = !DILocation(line: 1037, column: 29, scope: !2461)
!2504 = !DILocation(line: 1037, column: 36, scope: !2461)
!2505 = !DILocation(line: 1037, column: 3, scope: !2461)
!2506 = !DILocation(line: 1038, column: 3, scope: !2461)
!2507 = !DILocation(line: 1039, column: 1, scope: !2461)
!2508 = distinct !DISubprogram(name: "MagickBorderImage", scope: !1, file: !1, line: 1072, type: !2509, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!807, !1143, !2348, !1214, !1214}
!2511 = !DILocalVariable(name: "wand", arg: 1, scope: !2508, file: !1, line: 1072, type: !1143)
!2512 = !DILocation(line: 1072, column: 60, scope: !2508)
!2513 = !DILocalVariable(name: "bordercolor", arg: 2, scope: !2508, file: !1, line: 1073, type: !2348)
!2514 = !DILocation(line: 1073, column: 20, scope: !2508)
!2515 = !DILocalVariable(name: "width", arg: 3, scope: !2508, file: !1, line: 1073, type: !1214)
!2516 = !DILocation(line: 1073, column: 45, scope: !2508)
!2517 = !DILocalVariable(name: "height", arg: 4, scope: !2508, file: !1, line: 1073, type: !1214)
!2518 = !DILocation(line: 1073, column: 64, scope: !2508)
!2519 = !DILocalVariable(name: "border_image", scope: !2508, file: !1, line: 1076, type: !791)
!2520 = !DILocation(line: 1076, column: 6, scope: !2508)
!2521 = !DILocalVariable(name: "border_info", scope: !2508, file: !1, line: 1079, type: !863)
!2522 = !DILocation(line: 1079, column: 5, scope: !2508)
!2523 = !DILocation(line: 1083, column: 7, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2508, file: !1, line: 1083, column: 7)
!2525 = !DILocation(line: 1083, column: 13, scope: !2524)
!2526 = !DILocation(line: 1083, column: 19, scope: !2524)
!2527 = !DILocation(line: 1083, column: 7, scope: !2508)
!2528 = !DILocation(line: 1084, column: 60, scope: !2524)
!2529 = !DILocation(line: 1084, column: 66, scope: !2524)
!2530 = !DILocation(line: 1084, column: 12, scope: !2524)
!2531 = !DILocation(line: 1084, column: 5, scope: !2524)
!2532 = !DILocation(line: 1085, column: 7, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2508, file: !1, line: 1085, column: 7)
!2534 = !DILocation(line: 1085, column: 13, scope: !2533)
!2535 = !DILocation(line: 1085, column: 20, scope: !2533)
!2536 = !DILocation(line: 1085, column: 7, scope: !2508)
!2537 = !DILocation(line: 1086, column: 5, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2533, file: !1, line: 1086, column: 5)
!2539 = !DILocation(line: 1087, column: 21, scope: !2508)
!2540 = !DILocation(line: 1087, column: 15, scope: !2508)
!2541 = !DILocation(line: 1087, column: 20, scope: !2508)
!2542 = !DILocation(line: 1088, column: 22, scope: !2508)
!2543 = !DILocation(line: 1088, column: 15, scope: !2508)
!2544 = !DILocation(line: 1088, column: 21, scope: !2508)
!2545 = !DILocation(line: 1089, column: 15, scope: !2508)
!2546 = !DILocation(line: 1089, column: 16, scope: !2508)
!2547 = !DILocation(line: 1090, column: 15, scope: !2508)
!2548 = !DILocation(line: 1090, column: 16, scope: !2508)
!2549 = !DILocation(line: 1091, column: 24, scope: !2508)
!2550 = !DILocation(line: 1091, column: 37, scope: !2508)
!2551 = !DILocation(line: 1091, column: 43, scope: !2508)
!2552 = !DILocation(line: 1091, column: 51, scope: !2508)
!2553 = !DILocation(line: 1091, column: 3, scope: !2508)
!2554 = !DILocation(line: 1092, column: 28, scope: !2508)
!2555 = !DILocation(line: 1092, column: 34, scope: !2508)
!2556 = !DILocation(line: 1092, column: 54, scope: !2508)
!2557 = !DILocation(line: 1092, column: 60, scope: !2508)
!2558 = !DILocation(line: 1092, column: 16, scope: !2508)
!2559 = !DILocation(line: 1092, column: 15, scope: !2508)
!2560 = !DILocation(line: 1093, column: 7, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2508, file: !1, line: 1093, column: 7)
!2562 = !DILocation(line: 1093, column: 20, scope: !2561)
!2563 = !DILocation(line: 1093, column: 7, scope: !2508)
!2564 = !DILocation(line: 1094, column: 5, scope: !2561)
!2565 = !DILocation(line: 1095, column: 23, scope: !2508)
!2566 = !DILocation(line: 1095, column: 29, scope: !2508)
!2567 = !DILocation(line: 1095, column: 36, scope: !2508)
!2568 = !DILocation(line: 1095, column: 3, scope: !2508)
!2569 = !DILocation(line: 1096, column: 3, scope: !2508)
!2570 = !DILocation(line: 1097, column: 1, scope: !2508)
!2571 = distinct !DISubprogram(name: "MagickBrightnessContrastImage", scope: !1, file: !1, line: 1134, type: !1487, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2572 = !DILocalVariable(name: "wand", arg: 1, scope: !2571, file: !1, line: 1134, type: !1143)
!2573 = !DILocation(line: 1134, column: 72, scope: !2571)
!2574 = !DILocalVariable(name: "brightness", arg: 2, scope: !2571, file: !1, line: 1135, type: !1325)
!2575 = !DILocation(line: 1135, column: 16, scope: !2571)
!2576 = !DILocalVariable(name: "contrast", arg: 3, scope: !2571, file: !1, line: 1135, type: !1325)
!2577 = !DILocation(line: 1135, column: 40, scope: !2571)
!2578 = !DILocalVariable(name: "status", scope: !2571, file: !1, line: 1138, type: !807)
!2579 = !DILocation(line: 1138, column: 5, scope: !2571)
!2580 = !DILocation(line: 1140, column: 47, scope: !2571)
!2581 = !DILocation(line: 1140, column: 68, scope: !2571)
!2582 = !DILocation(line: 1141, column: 5, scope: !2571)
!2583 = !DILocation(line: 1140, column: 10, scope: !2571)
!2584 = !DILocation(line: 1140, column: 9, scope: !2571)
!2585 = !DILocation(line: 1142, column: 10, scope: !2571)
!2586 = !DILocation(line: 1142, column: 3, scope: !2571)
!2587 = distinct !DISubprogram(name: "MagickBrightnessContrastImageChannel", scope: !1, file: !1, line: 1145, type: !1505, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2588 = !DILocalVariable(name: "wand", arg: 1, scope: !2587, file: !1, line: 1146, type: !1143)
!2589 = !DILocation(line: 1146, column: 15, scope: !2587)
!2590 = !DILocalVariable(name: "channel", arg: 2, scope: !2587, file: !1, line: 1146, type: !1507)
!2591 = !DILocation(line: 1146, column: 38, scope: !2587)
!2592 = !DILocalVariable(name: "brightness", arg: 3, scope: !2587, file: !1, line: 1146, type: !1325)
!2593 = !DILocation(line: 1146, column: 59, scope: !2587)
!2594 = !DILocalVariable(name: "contrast", arg: 4, scope: !2587, file: !1, line: 1147, type: !1325)
!2595 = !DILocation(line: 1147, column: 16, scope: !2587)
!2596 = !DILocalVariable(name: "status", scope: !2587, file: !1, line: 1150, type: !807)
!2597 = !DILocation(line: 1150, column: 5, scope: !2587)
!2598 = !DILocation(line: 1154, column: 7, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 1154, column: 7)
!2600 = !DILocation(line: 1154, column: 13, scope: !2599)
!2601 = !DILocation(line: 1154, column: 19, scope: !2599)
!2602 = !DILocation(line: 1154, column: 7, scope: !2587)
!2603 = !DILocation(line: 1155, column: 60, scope: !2599)
!2604 = !DILocation(line: 1155, column: 66, scope: !2599)
!2605 = !DILocation(line: 1155, column: 12, scope: !2599)
!2606 = !DILocation(line: 1155, column: 5, scope: !2599)
!2607 = !DILocation(line: 1156, column: 7, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 1156, column: 7)
!2609 = !DILocation(line: 1156, column: 13, scope: !2608)
!2610 = !DILocation(line: 1156, column: 20, scope: !2608)
!2611 = !DILocation(line: 1156, column: 7, scope: !2587)
!2612 = !DILocation(line: 1157, column: 5, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2608, file: !1, line: 1157, column: 5)
!2614 = !DILocation(line: 1158, column: 41, scope: !2587)
!2615 = !DILocation(line: 1158, column: 47, scope: !2587)
!2616 = !DILocation(line: 1158, column: 54, scope: !2587)
!2617 = !DILocation(line: 1158, column: 62, scope: !2587)
!2618 = !DILocation(line: 1159, column: 5, scope: !2587)
!2619 = !DILocation(line: 1158, column: 10, scope: !2587)
!2620 = !DILocation(line: 1158, column: 9, scope: !2587)
!2621 = !DILocation(line: 1160, column: 7, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 1160, column: 7)
!2623 = !DILocation(line: 1160, column: 14, scope: !2622)
!2624 = !DILocation(line: 1160, column: 7, scope: !2587)
!2625 = !DILocation(line: 1161, column: 22, scope: !2622)
!2626 = !DILocation(line: 1161, column: 28, scope: !2622)
!2627 = !DILocation(line: 1161, column: 39, scope: !2622)
!2628 = !DILocation(line: 1161, column: 45, scope: !2622)
!2629 = !DILocation(line: 1161, column: 53, scope: !2622)
!2630 = !DILocation(line: 1161, column: 5, scope: !2622)
!2631 = !DILocation(line: 1162, column: 10, scope: !2587)
!2632 = !DILocation(line: 1162, column: 3, scope: !2587)
!2633 = !DILocation(line: 1163, column: 1, scope: !2587)
!2634 = distinct !DISubprogram(name: "MagickCharcoalImage", scope: !1, file: !1, line: 1193, type: !1487, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2635 = !DILocalVariable(name: "wand", arg: 1, scope: !2634, file: !1, line: 1193, type: !1143)
!2636 = !DILocation(line: 1193, column: 62, scope: !2634)
!2637 = !DILocalVariable(name: "radius", arg: 2, scope: !2634, file: !1, line: 1194, type: !1325)
!2638 = !DILocation(line: 1194, column: 16, scope: !2634)
!2639 = !DILocalVariable(name: "sigma", arg: 3, scope: !2634, file: !1, line: 1194, type: !1325)
!2640 = !DILocation(line: 1194, column: 36, scope: !2634)
!2641 = !DILocalVariable(name: "charcoal_image", scope: !2634, file: !1, line: 1197, type: !791)
!2642 = !DILocation(line: 1197, column: 6, scope: !2634)
!2643 = !DILocation(line: 1201, column: 7, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2634, file: !1, line: 1201, column: 7)
!2645 = !DILocation(line: 1201, column: 13, scope: !2644)
!2646 = !DILocation(line: 1201, column: 19, scope: !2644)
!2647 = !DILocation(line: 1201, column: 7, scope: !2634)
!2648 = !DILocation(line: 1202, column: 60, scope: !2644)
!2649 = !DILocation(line: 1202, column: 66, scope: !2644)
!2650 = !DILocation(line: 1202, column: 12, scope: !2644)
!2651 = !DILocation(line: 1202, column: 5, scope: !2644)
!2652 = !DILocation(line: 1203, column: 7, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2634, file: !1, line: 1203, column: 7)
!2654 = !DILocation(line: 1203, column: 13, scope: !2653)
!2655 = !DILocation(line: 1203, column: 20, scope: !2653)
!2656 = !DILocation(line: 1203, column: 7, scope: !2634)
!2657 = !DILocation(line: 1204, column: 5, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2653, file: !1, line: 1204, column: 5)
!2659 = !DILocation(line: 1205, column: 32, scope: !2634)
!2660 = !DILocation(line: 1205, column: 38, scope: !2634)
!2661 = !DILocation(line: 1205, column: 45, scope: !2634)
!2662 = !DILocation(line: 1205, column: 52, scope: !2634)
!2663 = !DILocation(line: 1205, column: 58, scope: !2634)
!2664 = !DILocation(line: 1205, column: 64, scope: !2634)
!2665 = !DILocation(line: 1205, column: 18, scope: !2634)
!2666 = !DILocation(line: 1205, column: 17, scope: !2634)
!2667 = !DILocation(line: 1206, column: 7, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2634, file: !1, line: 1206, column: 7)
!2669 = !DILocation(line: 1206, column: 22, scope: !2668)
!2670 = !DILocation(line: 1206, column: 7, scope: !2634)
!2671 = !DILocation(line: 1207, column: 5, scope: !2668)
!2672 = !DILocation(line: 1208, column: 23, scope: !2634)
!2673 = !DILocation(line: 1208, column: 29, scope: !2634)
!2674 = !DILocation(line: 1208, column: 36, scope: !2634)
!2675 = !DILocation(line: 1208, column: 3, scope: !2634)
!2676 = !DILocation(line: 1209, column: 3, scope: !2634)
!2677 = !DILocation(line: 1210, column: 1, scope: !2634)
!2678 = distinct !DISubprogram(name: "MagickChopImage", scope: !1, file: !1, line: 1244, type: !2679, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!807, !1143, !1214, !1214, !1666, !1666}
!2681 = !DILocalVariable(name: "wand", arg: 1, scope: !2678, file: !1, line: 1244, type: !1143)
!2682 = !DILocation(line: 1244, column: 58, scope: !2678)
!2683 = !DILocalVariable(name: "width", arg: 2, scope: !2678, file: !1, line: 1245, type: !1214)
!2684 = !DILocation(line: 1245, column: 16, scope: !2678)
!2685 = !DILocalVariable(name: "height", arg: 3, scope: !2678, file: !1, line: 1245, type: !1214)
!2686 = !DILocation(line: 1245, column: 35, scope: !2678)
!2687 = !DILocalVariable(name: "x", arg: 4, scope: !2678, file: !1, line: 1245, type: !1666)
!2688 = !DILocation(line: 1245, column: 56, scope: !2678)
!2689 = !DILocalVariable(name: "y", arg: 5, scope: !2678, file: !1, line: 1245, type: !1666)
!2690 = !DILocation(line: 1245, column: 72, scope: !2678)
!2691 = !DILocalVariable(name: "chop_image", scope: !2678, file: !1, line: 1248, type: !791)
!2692 = !DILocation(line: 1248, column: 6, scope: !2678)
!2693 = !DILocalVariable(name: "chop", scope: !2678, file: !1, line: 1251, type: !863)
!2694 = !DILocation(line: 1251, column: 5, scope: !2678)
!2695 = !DILocation(line: 1255, column: 7, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 1255, column: 7)
!2697 = !DILocation(line: 1255, column: 13, scope: !2696)
!2698 = !DILocation(line: 1255, column: 19, scope: !2696)
!2699 = !DILocation(line: 1255, column: 7, scope: !2678)
!2700 = !DILocation(line: 1256, column: 60, scope: !2696)
!2701 = !DILocation(line: 1256, column: 66, scope: !2696)
!2702 = !DILocation(line: 1256, column: 12, scope: !2696)
!2703 = !DILocation(line: 1256, column: 5, scope: !2696)
!2704 = !DILocation(line: 1257, column: 7, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 1257, column: 7)
!2706 = !DILocation(line: 1257, column: 13, scope: !2705)
!2707 = !DILocation(line: 1257, column: 20, scope: !2705)
!2708 = !DILocation(line: 1257, column: 7, scope: !2678)
!2709 = !DILocation(line: 1258, column: 5, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2705, file: !1, line: 1258, column: 5)
!2711 = !DILocation(line: 1259, column: 14, scope: !2678)
!2712 = !DILocation(line: 1259, column: 8, scope: !2678)
!2713 = !DILocation(line: 1259, column: 13, scope: !2678)
!2714 = !DILocation(line: 1260, column: 15, scope: !2678)
!2715 = !DILocation(line: 1260, column: 8, scope: !2678)
!2716 = !DILocation(line: 1260, column: 14, scope: !2678)
!2717 = !DILocation(line: 1261, column: 10, scope: !2678)
!2718 = !DILocation(line: 1261, column: 8, scope: !2678)
!2719 = !DILocation(line: 1261, column: 9, scope: !2678)
!2720 = !DILocation(line: 1262, column: 10, scope: !2678)
!2721 = !DILocation(line: 1262, column: 8, scope: !2678)
!2722 = !DILocation(line: 1262, column: 9, scope: !2678)
!2723 = !DILocation(line: 1263, column: 24, scope: !2678)
!2724 = !DILocation(line: 1263, column: 30, scope: !2678)
!2725 = !DILocation(line: 1263, column: 43, scope: !2678)
!2726 = !DILocation(line: 1263, column: 49, scope: !2678)
!2727 = !DILocation(line: 1263, column: 14, scope: !2678)
!2728 = !DILocation(line: 1263, column: 13, scope: !2678)
!2729 = !DILocation(line: 1264, column: 7, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 1264, column: 7)
!2731 = !DILocation(line: 1264, column: 18, scope: !2730)
!2732 = !DILocation(line: 1264, column: 7, scope: !2678)
!2733 = !DILocation(line: 1265, column: 5, scope: !2730)
!2734 = !DILocation(line: 1266, column: 23, scope: !2678)
!2735 = !DILocation(line: 1266, column: 29, scope: !2678)
!2736 = !DILocation(line: 1266, column: 36, scope: !2678)
!2737 = !DILocation(line: 1266, column: 3, scope: !2678)
!2738 = !DILocation(line: 1267, column: 3, scope: !2678)
!2739 = !DILocation(line: 1268, column: 1, scope: !2678)
!2740 = distinct !DISubprogram(name: "MagickClampImage", scope: !1, file: !1, line: 1297, type: !2240, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2741 = !DILocalVariable(name: "wand", arg: 1, scope: !2740, file: !1, line: 1297, type: !1143)
!2742 = !DILocation(line: 1297, column: 59, scope: !2740)
!2743 = !DILocalVariable(name: "status", scope: !2740, file: !1, line: 1300, type: !807)
!2744 = !DILocation(line: 1300, column: 5, scope: !2740)
!2745 = !DILocation(line: 1302, column: 34, scope: !2740)
!2746 = !DILocation(line: 1302, column: 10, scope: !2740)
!2747 = !DILocation(line: 1302, column: 9, scope: !2740)
!2748 = !DILocation(line: 1303, column: 10, scope: !2740)
!2749 = !DILocation(line: 1303, column: 3, scope: !2740)
!2750 = distinct !DISubprogram(name: "MagickClampImageChannel", scope: !1, file: !1, line: 1306, type: !2252, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2751 = !DILocalVariable(name: "wand", arg: 1, scope: !2750, file: !1, line: 1306, type: !1143)
!2752 = !DILocation(line: 1306, column: 66, scope: !2750)
!2753 = !DILocalVariable(name: "channel", arg: 2, scope: !2750, file: !1, line: 1307, type: !1507)
!2754 = !DILocation(line: 1307, column: 21, scope: !2750)
!2755 = !DILocalVariable(name: "status", scope: !2750, file: !1, line: 1310, type: !807)
!2756 = !DILocation(line: 1310, column: 5, scope: !2750)
!2757 = !DILocation(line: 1314, column: 7, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2750, file: !1, line: 1314, column: 7)
!2759 = !DILocation(line: 1314, column: 13, scope: !2758)
!2760 = !DILocation(line: 1314, column: 19, scope: !2758)
!2761 = !DILocation(line: 1314, column: 7, scope: !2750)
!2762 = !DILocation(line: 1315, column: 60, scope: !2758)
!2763 = !DILocation(line: 1315, column: 66, scope: !2758)
!2764 = !DILocation(line: 1315, column: 12, scope: !2758)
!2765 = !DILocation(line: 1315, column: 5, scope: !2758)
!2766 = !DILocation(line: 1316, column: 7, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2750, file: !1, line: 1316, column: 7)
!2768 = !DILocation(line: 1316, column: 13, scope: !2767)
!2769 = !DILocation(line: 1316, column: 20, scope: !2767)
!2770 = !DILocation(line: 1316, column: 7, scope: !2750)
!2771 = !DILocation(line: 1317, column: 5, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2767, file: !1, line: 1317, column: 5)
!2773 = !DILocation(line: 1318, column: 28, scope: !2750)
!2774 = !DILocation(line: 1318, column: 34, scope: !2750)
!2775 = !DILocation(line: 1318, column: 41, scope: !2750)
!2776 = !DILocation(line: 1318, column: 10, scope: !2750)
!2777 = !DILocation(line: 1318, column: 9, scope: !2750)
!2778 = !DILocation(line: 1319, column: 7, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2750, file: !1, line: 1319, column: 7)
!2780 = !DILocation(line: 1319, column: 14, scope: !2779)
!2781 = !DILocation(line: 1319, column: 7, scope: !2750)
!2782 = !DILocation(line: 1320, column: 22, scope: !2779)
!2783 = !DILocation(line: 1320, column: 28, scope: !2779)
!2784 = !DILocation(line: 1320, column: 39, scope: !2779)
!2785 = !DILocation(line: 1320, column: 45, scope: !2779)
!2786 = !DILocation(line: 1320, column: 53, scope: !2779)
!2787 = !DILocation(line: 1320, column: 5, scope: !2779)
!2788 = !DILocation(line: 1321, column: 10, scope: !2750)
!2789 = !DILocation(line: 1321, column: 3, scope: !2750)
!2790 = !DILocation(line: 1322, column: 1, scope: !2750)
!2791 = distinct !DISubprogram(name: "MagickClipImage", scope: !1, file: !1, line: 1347, type: !2240, scopeLine: 1348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2792 = !DILocalVariable(name: "wand", arg: 1, scope: !2791, file: !1, line: 1347, type: !1143)
!2793 = !DILocation(line: 1347, column: 58, scope: !2791)
!2794 = !DILocalVariable(name: "status", scope: !2791, file: !1, line: 1350, type: !807)
!2795 = !DILocation(line: 1350, column: 5, scope: !2791)
!2796 = !DILocation(line: 1354, column: 7, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1354, column: 7)
!2798 = !DILocation(line: 1354, column: 13, scope: !2797)
!2799 = !DILocation(line: 1354, column: 19, scope: !2797)
!2800 = !DILocation(line: 1354, column: 7, scope: !2791)
!2801 = !DILocation(line: 1355, column: 60, scope: !2797)
!2802 = !DILocation(line: 1355, column: 66, scope: !2797)
!2803 = !DILocation(line: 1355, column: 12, scope: !2797)
!2804 = !DILocation(line: 1355, column: 5, scope: !2797)
!2805 = !DILocation(line: 1356, column: 7, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1356, column: 7)
!2807 = !DILocation(line: 1356, column: 13, scope: !2806)
!2808 = !DILocation(line: 1356, column: 20, scope: !2806)
!2809 = !DILocation(line: 1356, column: 7, scope: !2791)
!2810 = !DILocation(line: 1357, column: 5, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2806, file: !1, line: 1357, column: 5)
!2812 = !DILocation(line: 1358, column: 20, scope: !2791)
!2813 = !DILocation(line: 1358, column: 26, scope: !2791)
!2814 = !DILocation(line: 1358, column: 10, scope: !2791)
!2815 = !DILocation(line: 1358, column: 9, scope: !2791)
!2816 = !DILocation(line: 1359, column: 7, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1359, column: 7)
!2818 = !DILocation(line: 1359, column: 14, scope: !2817)
!2819 = !DILocation(line: 1359, column: 7, scope: !2791)
!2820 = !DILocation(line: 1360, column: 22, scope: !2817)
!2821 = !DILocation(line: 1360, column: 28, scope: !2817)
!2822 = !DILocation(line: 1360, column: 39, scope: !2817)
!2823 = !DILocation(line: 1360, column: 45, scope: !2817)
!2824 = !DILocation(line: 1360, column: 53, scope: !2817)
!2825 = !DILocation(line: 1360, column: 5, scope: !2817)
!2826 = !DILocation(line: 1361, column: 10, scope: !2791)
!2827 = !DILocation(line: 1361, column: 3, scope: !2791)
!2828 = !DILocation(line: 1362, column: 1, scope: !2791)
!2829 = distinct !DISubprogram(name: "MagickClipImagePath", scope: !1, file: !1, line: 1396, type: !2830, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!807, !1143, !924, !2117}
!2832 = !DILocalVariable(name: "wand", arg: 1, scope: !2829, file: !1, line: 1396, type: !1143)
!2833 = !DILocation(line: 1396, column: 62, scope: !2829)
!2834 = !DILocalVariable(name: "pathname", arg: 2, scope: !2829, file: !1, line: 1397, type: !924)
!2835 = !DILocation(line: 1397, column: 15, scope: !2829)
!2836 = !DILocalVariable(name: "inside", arg: 3, scope: !2829, file: !1, line: 1397, type: !2117)
!2837 = !DILocation(line: 1397, column: 48, scope: !2829)
!2838 = !DILocalVariable(name: "status", scope: !2829, file: !1, line: 1400, type: !807)
!2839 = !DILocation(line: 1400, column: 5, scope: !2829)
!2840 = !DILocation(line: 1404, column: 7, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2829, file: !1, line: 1404, column: 7)
!2842 = !DILocation(line: 1404, column: 13, scope: !2841)
!2843 = !DILocation(line: 1404, column: 19, scope: !2841)
!2844 = !DILocation(line: 1404, column: 7, scope: !2829)
!2845 = !DILocation(line: 1405, column: 60, scope: !2841)
!2846 = !DILocation(line: 1405, column: 66, scope: !2841)
!2847 = !DILocation(line: 1405, column: 12, scope: !2841)
!2848 = !DILocation(line: 1405, column: 5, scope: !2841)
!2849 = !DILocation(line: 1406, column: 7, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2829, file: !1, line: 1406, column: 7)
!2851 = !DILocation(line: 1406, column: 13, scope: !2850)
!2852 = !DILocation(line: 1406, column: 20, scope: !2850)
!2853 = !DILocation(line: 1406, column: 7, scope: !2829)
!2854 = !DILocation(line: 1407, column: 5, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 1407, column: 5)
!2856 = !DILocation(line: 1408, column: 24, scope: !2829)
!2857 = !DILocation(line: 1408, column: 30, scope: !2829)
!2858 = !DILocation(line: 1408, column: 37, scope: !2829)
!2859 = !DILocation(line: 1408, column: 46, scope: !2829)
!2860 = !DILocation(line: 1408, column: 10, scope: !2829)
!2861 = !DILocation(line: 1408, column: 9, scope: !2829)
!2862 = !DILocation(line: 1409, column: 7, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2829, file: !1, line: 1409, column: 7)
!2864 = !DILocation(line: 1409, column: 14, scope: !2863)
!2865 = !DILocation(line: 1409, column: 7, scope: !2829)
!2866 = !DILocation(line: 1410, column: 22, scope: !2863)
!2867 = !DILocation(line: 1410, column: 28, scope: !2863)
!2868 = !DILocation(line: 1410, column: 39, scope: !2863)
!2869 = !DILocation(line: 1410, column: 45, scope: !2863)
!2870 = !DILocation(line: 1410, column: 53, scope: !2863)
!2871 = !DILocation(line: 1410, column: 5, scope: !2863)
!2872 = !DILocation(line: 1411, column: 10, scope: !2829)
!2873 = !DILocation(line: 1411, column: 3, scope: !2829)
!2874 = !DILocation(line: 1412, column: 1, scope: !2829)
!2875 = distinct !DISubprogram(name: "MagickClutImage", scope: !1, file: !1, line: 1442, type: !1714, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2876 = !DILocalVariable(name: "wand", arg: 1, scope: !2875, file: !1, line: 1442, type: !1143)
!2877 = !DILocation(line: 1442, column: 58, scope: !2875)
!2878 = !DILocalVariable(name: "clut_wand", arg: 2, scope: !2875, file: !1, line: 1443, type: !1456)
!2879 = !DILocation(line: 1443, column: 21, scope: !2875)
!2880 = !DILocalVariable(name: "status", scope: !2875, file: !1, line: 1446, type: !807)
!2881 = !DILocation(line: 1446, column: 5, scope: !2875)
!2882 = !DILocation(line: 1448, column: 33, scope: !2875)
!2883 = !DILocation(line: 1448, column: 54, scope: !2875)
!2884 = !DILocation(line: 1448, column: 10, scope: !2875)
!2885 = !DILocation(line: 1448, column: 9, scope: !2875)
!2886 = !DILocation(line: 1449, column: 10, scope: !2875)
!2887 = !DILocation(line: 1449, column: 3, scope: !2875)
!2888 = distinct !DISubprogram(name: "MagickClutImageChannel", scope: !1, file: !1, line: 1452, type: !2889, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!807, !1143, !1507, !1456}
!2891 = !DILocalVariable(name: "wand", arg: 1, scope: !2888, file: !1, line: 1452, type: !1143)
!2892 = !DILocation(line: 1452, column: 65, scope: !2888)
!2893 = !DILocalVariable(name: "channel", arg: 2, scope: !2888, file: !1, line: 1453, type: !1507)
!2894 = !DILocation(line: 1453, column: 21, scope: !2888)
!2895 = !DILocalVariable(name: "clut_wand", arg: 3, scope: !2888, file: !1, line: 1453, type: !1456)
!2896 = !DILocation(line: 1453, column: 47, scope: !2888)
!2897 = !DILocalVariable(name: "status", scope: !2888, file: !1, line: 1456, type: !807)
!2898 = !DILocation(line: 1456, column: 5, scope: !2888)
!2899 = !DILocation(line: 1460, column: 7, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2888, file: !1, line: 1460, column: 7)
!2901 = !DILocation(line: 1460, column: 13, scope: !2900)
!2902 = !DILocation(line: 1460, column: 19, scope: !2900)
!2903 = !DILocation(line: 1460, column: 7, scope: !2888)
!2904 = !DILocation(line: 1461, column: 60, scope: !2900)
!2905 = !DILocation(line: 1461, column: 66, scope: !2900)
!2906 = !DILocation(line: 1461, column: 12, scope: !2900)
!2907 = !DILocation(line: 1461, column: 5, scope: !2900)
!2908 = !DILocation(line: 1462, column: 8, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2888, file: !1, line: 1462, column: 7)
!2910 = !DILocation(line: 1462, column: 14, scope: !2909)
!2911 = !DILocation(line: 1462, column: 21, scope: !2909)
!2912 = !DILocation(line: 1462, column: 40, scope: !2909)
!2913 = !DILocation(line: 1462, column: 44, scope: !2909)
!2914 = !DILocation(line: 1462, column: 55, scope: !2909)
!2915 = !DILocation(line: 1462, column: 62, scope: !2909)
!2916 = !DILocation(line: 1462, column: 7, scope: !2888)
!2917 = !DILocation(line: 1463, column: 5, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2909, file: !1, line: 1463, column: 5)
!2919 = !DILocation(line: 1464, column: 27, scope: !2888)
!2920 = !DILocation(line: 1464, column: 33, scope: !2888)
!2921 = !DILocation(line: 1464, column: 40, scope: !2888)
!2922 = !DILocation(line: 1464, column: 48, scope: !2888)
!2923 = !DILocation(line: 1464, column: 59, scope: !2888)
!2924 = !DILocation(line: 1464, column: 10, scope: !2888)
!2925 = !DILocation(line: 1464, column: 9, scope: !2888)
!2926 = !DILocation(line: 1465, column: 7, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2888, file: !1, line: 1465, column: 7)
!2928 = !DILocation(line: 1465, column: 14, scope: !2927)
!2929 = !DILocation(line: 1465, column: 7, scope: !2888)
!2930 = !DILocation(line: 1466, column: 22, scope: !2927)
!2931 = !DILocation(line: 1466, column: 28, scope: !2927)
!2932 = !DILocation(line: 1466, column: 39, scope: !2927)
!2933 = !DILocation(line: 1466, column: 45, scope: !2927)
!2934 = !DILocation(line: 1466, column: 53, scope: !2927)
!2935 = !DILocation(line: 1466, column: 5, scope: !2927)
!2936 = !DILocation(line: 1467, column: 10, scope: !2888)
!2937 = !DILocation(line: 1467, column: 3, scope: !2888)
!2938 = !DILocation(line: 1468, column: 1, scope: !2888)
!2939 = distinct !DISubprogram(name: "MagickCoalesceImages", scope: !1, file: !1, line: 1497, type: !2940, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!1143, !1143}
!2942 = !DILocalVariable(name: "wand", arg: 1, scope: !2939, file: !1, line: 1497, type: !1143)
!2943 = !DILocation(line: 1497, column: 57, scope: !2939)
!2944 = !DILocalVariable(name: "coalesce_image", scope: !2939, file: !1, line: 1500, type: !791)
!2945 = !DILocation(line: 1500, column: 6, scope: !2939)
!2946 = !DILocation(line: 1504, column: 7, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 1504, column: 7)
!2948 = !DILocation(line: 1504, column: 13, scope: !2947)
!2949 = !DILocation(line: 1504, column: 19, scope: !2947)
!2950 = !DILocation(line: 1504, column: 7, scope: !2939)
!2951 = !DILocation(line: 1505, column: 60, scope: !2947)
!2952 = !DILocation(line: 1505, column: 66, scope: !2947)
!2953 = !DILocation(line: 1505, column: 12, scope: !2947)
!2954 = !DILocation(line: 1505, column: 5, scope: !2947)
!2955 = !DILocation(line: 1506, column: 7, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 1506, column: 7)
!2957 = !DILocation(line: 1506, column: 13, scope: !2956)
!2958 = !DILocation(line: 1506, column: 20, scope: !2956)
!2959 = !DILocation(line: 1506, column: 7, scope: !2939)
!2960 = !DILocation(line: 1507, column: 5, scope: !2956)
!2961 = !DILocation(line: 1508, column: 33, scope: !2939)
!2962 = !DILocation(line: 1508, column: 39, scope: !2939)
!2963 = !DILocation(line: 1508, column: 46, scope: !2939)
!2964 = !DILocation(line: 1508, column: 52, scope: !2939)
!2965 = !DILocation(line: 1508, column: 18, scope: !2939)
!2966 = !DILocation(line: 1508, column: 17, scope: !2939)
!2967 = !DILocation(line: 1509, column: 7, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 1509, column: 7)
!2969 = !DILocation(line: 1509, column: 22, scope: !2968)
!2970 = !DILocation(line: 1509, column: 7, scope: !2939)
!2971 = !DILocation(line: 1510, column: 5, scope: !2968)
!2972 = !DILocation(line: 1511, column: 36, scope: !2939)
!2973 = !DILocation(line: 1511, column: 41, scope: !2939)
!2974 = !DILocation(line: 1511, column: 10, scope: !2939)
!2975 = !DILocation(line: 1511, column: 3, scope: !2939)
!2976 = !DILocation(line: 1512, column: 1, scope: !2939)
!2977 = distinct !DISubprogram(name: "MagickColorDecisionListImage", scope: !1, file: !1, line: 1557, type: !2074, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!2978 = !DILocalVariable(name: "wand", arg: 1, scope: !2977, file: !1, line: 1557, type: !1143)
!2979 = !DILocation(line: 1557, column: 71, scope: !2977)
!2980 = !DILocalVariable(name: "color_correction_collection", arg: 2, scope: !2977, file: !1, line: 1558, type: !924)
!2981 = !DILocation(line: 1558, column: 15, scope: !2977)
!2982 = !DILocalVariable(name: "status", scope: !2977, file: !1, line: 1561, type: !807)
!2983 = !DILocation(line: 1561, column: 5, scope: !2977)
!2984 = !DILocation(line: 1565, column: 7, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2977, file: !1, line: 1565, column: 7)
!2986 = !DILocation(line: 1565, column: 13, scope: !2985)
!2987 = !DILocation(line: 1565, column: 19, scope: !2985)
!2988 = !DILocation(line: 1565, column: 7, scope: !2977)
!2989 = !DILocation(line: 1566, column: 60, scope: !2985)
!2990 = !DILocation(line: 1566, column: 66, scope: !2985)
!2991 = !DILocation(line: 1566, column: 12, scope: !2985)
!2992 = !DILocation(line: 1566, column: 5, scope: !2985)
!2993 = !DILocation(line: 1567, column: 7, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2977, file: !1, line: 1567, column: 7)
!2995 = !DILocation(line: 1567, column: 13, scope: !2994)
!2996 = !DILocation(line: 1567, column: 20, scope: !2994)
!2997 = !DILocation(line: 1567, column: 7, scope: !2977)
!2998 = !DILocation(line: 1568, column: 5, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2994, file: !1, line: 1568, column: 5)
!3000 = !DILocation(line: 1569, column: 33, scope: !2977)
!3001 = !DILocation(line: 1569, column: 39, scope: !2977)
!3002 = !DILocation(line: 1569, column: 46, scope: !2977)
!3003 = !DILocation(line: 1569, column: 10, scope: !2977)
!3004 = !DILocation(line: 1569, column: 9, scope: !2977)
!3005 = !DILocation(line: 1570, column: 7, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2977, file: !1, line: 1570, column: 7)
!3007 = !DILocation(line: 1570, column: 14, scope: !3006)
!3008 = !DILocation(line: 1570, column: 7, scope: !2977)
!3009 = !DILocation(line: 1571, column: 22, scope: !3006)
!3010 = !DILocation(line: 1571, column: 28, scope: !3006)
!3011 = !DILocation(line: 1571, column: 39, scope: !3006)
!3012 = !DILocation(line: 1571, column: 45, scope: !3006)
!3013 = !DILocation(line: 1571, column: 53, scope: !3006)
!3014 = !DILocation(line: 1571, column: 5, scope: !3006)
!3015 = !DILocation(line: 1572, column: 10, scope: !2977)
!3016 = !DILocation(line: 1572, column: 3, scope: !2977)
!3017 = !DILocation(line: 1573, column: 1, scope: !2977)
!3018 = distinct !DISubprogram(name: "MagickColorizeImage", scope: !1, file: !1, line: 1602, type: !3019, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!807, !1143, !2348, !2348}
!3021 = !DILocalVariable(name: "wand", arg: 1, scope: !3018, file: !1, line: 1602, type: !1143)
!3022 = !DILocation(line: 1602, column: 62, scope: !3018)
!3023 = !DILocalVariable(name: "colorize", arg: 2, scope: !3018, file: !1, line: 1603, type: !2348)
!3024 = !DILocation(line: 1603, column: 20, scope: !3018)
!3025 = !DILocalVariable(name: "opacity", arg: 3, scope: !3018, file: !1, line: 1603, type: !2348)
!3026 = !DILocation(line: 1603, column: 46, scope: !3018)
!3027 = !DILocalVariable(name: "percent_opaque", scope: !3018, file: !1, line: 1606, type: !944)
!3028 = !DILocation(line: 1606, column: 5, scope: !3018)
!3029 = !DILocalVariable(name: "colorize_image", scope: !3018, file: !1, line: 1609, type: !791)
!3030 = !DILocation(line: 1609, column: 6, scope: !3018)
!3031 = !DILocalVariable(name: "target", scope: !3018, file: !1, line: 1612, type: !815)
!3032 = !DILocation(line: 1612, column: 5, scope: !3018)
!3033 = !DILocation(line: 1616, column: 7, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3018, file: !1, line: 1616, column: 7)
!3035 = !DILocation(line: 1616, column: 13, scope: !3034)
!3036 = !DILocation(line: 1616, column: 19, scope: !3034)
!3037 = !DILocation(line: 1616, column: 7, scope: !3018)
!3038 = !DILocation(line: 1617, column: 60, scope: !3034)
!3039 = !DILocation(line: 1617, column: 66, scope: !3034)
!3040 = !DILocation(line: 1617, column: 12, scope: !3034)
!3041 = !DILocation(line: 1617, column: 5, scope: !3034)
!3042 = !DILocation(line: 1618, column: 7, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3018, file: !1, line: 1618, column: 7)
!3044 = !DILocation(line: 1618, column: 13, scope: !3043)
!3045 = !DILocation(line: 1618, column: 20, scope: !3043)
!3046 = !DILocation(line: 1618, column: 7, scope: !3018)
!3047 = !DILocation(line: 1619, column: 5, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 1619, column: 5)
!3049 = !DILocation(line: 1620, column: 29, scope: !3018)
!3050 = !DILocation(line: 1621, column: 44, scope: !3018)
!3051 = !DILocation(line: 1621, column: 25, scope: !3018)
!3052 = !DILocation(line: 1621, column: 24, scope: !3018)
!3053 = !DILocation(line: 1622, column: 39, scope: !3018)
!3054 = !DILocation(line: 1622, column: 18, scope: !3018)
!3055 = !DILocation(line: 1622, column: 17, scope: !3018)
!3056 = !DILocation(line: 1623, column: 25, scope: !3018)
!3057 = !DILocation(line: 1623, column: 5, scope: !3018)
!3058 = !DILocation(line: 1622, column: 77, scope: !3018)
!3059 = !DILocation(line: 1624, column: 28, scope: !3018)
!3060 = !DILocation(line: 1624, column: 5, scope: !3018)
!3061 = !DILocation(line: 1623, column: 63, scope: !3018)
!3062 = !DILocation(line: 1620, column: 10, scope: !3018)
!3063 = !DILocation(line: 1625, column: 24, scope: !3018)
!3064 = !DILocation(line: 1625, column: 3, scope: !3018)
!3065 = !DILocation(line: 1626, column: 32, scope: !3018)
!3066 = !DILocation(line: 1626, column: 38, scope: !3018)
!3067 = !DILocation(line: 1626, column: 45, scope: !3018)
!3068 = !DILocation(line: 1627, column: 5, scope: !3018)
!3069 = !DILocation(line: 1627, column: 11, scope: !3018)
!3070 = !DILocation(line: 1626, column: 18, scope: !3018)
!3071 = !DILocation(line: 1626, column: 17, scope: !3018)
!3072 = !DILocation(line: 1628, column: 7, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3018, file: !1, line: 1628, column: 7)
!3074 = !DILocation(line: 1628, column: 22, scope: !3073)
!3075 = !DILocation(line: 1628, column: 7, scope: !3018)
!3076 = !DILocation(line: 1629, column: 5, scope: !3073)
!3077 = !DILocation(line: 1630, column: 23, scope: !3018)
!3078 = !DILocation(line: 1630, column: 29, scope: !3018)
!3079 = !DILocation(line: 1630, column: 36, scope: !3018)
!3080 = !DILocation(line: 1630, column: 3, scope: !3018)
!3081 = !DILocation(line: 1631, column: 3, scope: !3018)
!3082 = !DILocation(line: 1632, column: 1, scope: !3018)
!3083 = distinct !DISubprogram(name: "MagickColorMatrixImage", scope: !1, file: !1, line: 1665, type: !3084, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!807, !1143, !1304}
!3086 = !DILocalVariable(name: "wand", arg: 1, scope: !3083, file: !1, line: 1665, type: !1143)
!3087 = !DILocation(line: 1665, column: 65, scope: !3083)
!3088 = !DILocalVariable(name: "color_matrix", arg: 2, scope: !3083, file: !1, line: 1666, type: !1304)
!3089 = !DILocation(line: 1666, column: 21, scope: !3083)
!3090 = !DILocalVariable(name: "color_image", scope: !3083, file: !1, line: 1669, type: !791)
!3091 = !DILocation(line: 1669, column: 6, scope: !3083)
!3092 = !DILocation(line: 1673, column: 7, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 1673, column: 7)
!3094 = !DILocation(line: 1673, column: 13, scope: !3093)
!3095 = !DILocation(line: 1673, column: 19, scope: !3093)
!3096 = !DILocation(line: 1673, column: 7, scope: !3083)
!3097 = !DILocation(line: 1674, column: 60, scope: !3093)
!3098 = !DILocation(line: 1674, column: 66, scope: !3093)
!3099 = !DILocation(line: 1674, column: 12, scope: !3093)
!3100 = !DILocation(line: 1674, column: 5, scope: !3093)
!3101 = !DILocation(line: 1675, column: 7, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 1675, column: 7)
!3103 = !DILocation(line: 1675, column: 20, scope: !3102)
!3104 = !DILocation(line: 1675, column: 7, scope: !3083)
!3105 = !DILocation(line: 1676, column: 5, scope: !3102)
!3106 = !DILocation(line: 1677, column: 7, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 1677, column: 7)
!3108 = !DILocation(line: 1677, column: 13, scope: !3107)
!3109 = !DILocation(line: 1677, column: 20, scope: !3107)
!3110 = !DILocation(line: 1677, column: 7, scope: !3083)
!3111 = !DILocation(line: 1678, column: 5, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 1678, column: 5)
!3113 = !DILocation(line: 1679, column: 32, scope: !3083)
!3114 = !DILocation(line: 1679, column: 38, scope: !3083)
!3115 = !DILocation(line: 1679, column: 45, scope: !3083)
!3116 = !DILocation(line: 1679, column: 58, scope: !3083)
!3117 = !DILocation(line: 1679, column: 64, scope: !3083)
!3118 = !DILocation(line: 1679, column: 15, scope: !3083)
!3119 = !DILocation(line: 1679, column: 14, scope: !3083)
!3120 = !DILocation(line: 1680, column: 7, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 1680, column: 7)
!3122 = !DILocation(line: 1680, column: 19, scope: !3121)
!3123 = !DILocation(line: 1680, column: 7, scope: !3083)
!3124 = !DILocation(line: 1681, column: 5, scope: !3121)
!3125 = !DILocation(line: 1682, column: 23, scope: !3083)
!3126 = !DILocation(line: 1682, column: 29, scope: !3083)
!3127 = !DILocation(line: 1682, column: 36, scope: !3083)
!3128 = !DILocation(line: 1682, column: 3, scope: !3083)
!3129 = !DILocation(line: 1683, column: 3, scope: !3083)
!3130 = !DILocation(line: 1684, column: 1, scope: !3083)
!3131 = distinct !DISubprogram(name: "MagickCombineImages", scope: !1, file: !1, line: 1714, type: !3132, scopeLine: 1716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!1143, !1143, !1507}
!3134 = !DILocalVariable(name: "wand", arg: 1, scope: !3131, file: !1, line: 1714, type: !1143)
!3135 = !DILocation(line: 1714, column: 56, scope: !3131)
!3136 = !DILocalVariable(name: "channel", arg: 2, scope: !3131, file: !1, line: 1715, type: !1507)
!3137 = !DILocation(line: 1715, column: 21, scope: !3131)
!3138 = !DILocalVariable(name: "combine_image", scope: !3131, file: !1, line: 1718, type: !791)
!3139 = !DILocation(line: 1718, column: 6, scope: !3131)
!3140 = !DILocation(line: 1722, column: 7, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3131, file: !1, line: 1722, column: 7)
!3142 = !DILocation(line: 1722, column: 13, scope: !3141)
!3143 = !DILocation(line: 1722, column: 19, scope: !3141)
!3144 = !DILocation(line: 1722, column: 7, scope: !3131)
!3145 = !DILocation(line: 1723, column: 60, scope: !3141)
!3146 = !DILocation(line: 1723, column: 66, scope: !3141)
!3147 = !DILocation(line: 1723, column: 12, scope: !3141)
!3148 = !DILocation(line: 1723, column: 5, scope: !3141)
!3149 = !DILocation(line: 1724, column: 7, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3131, file: !1, line: 1724, column: 7)
!3151 = !DILocation(line: 1724, column: 13, scope: !3150)
!3152 = !DILocation(line: 1724, column: 20, scope: !3150)
!3153 = !DILocation(line: 1724, column: 7, scope: !3131)
!3154 = !DILocation(line: 1725, column: 5, scope: !3150)
!3155 = !DILocation(line: 1726, column: 31, scope: !3131)
!3156 = !DILocation(line: 1726, column: 37, scope: !3131)
!3157 = !DILocation(line: 1726, column: 44, scope: !3131)
!3158 = !DILocation(line: 1726, column: 52, scope: !3131)
!3159 = !DILocation(line: 1726, column: 58, scope: !3131)
!3160 = !DILocation(line: 1726, column: 17, scope: !3131)
!3161 = !DILocation(line: 1726, column: 16, scope: !3131)
!3162 = !DILocation(line: 1727, column: 7, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3131, file: !1, line: 1727, column: 7)
!3164 = !DILocation(line: 1727, column: 21, scope: !3163)
!3165 = !DILocation(line: 1727, column: 7, scope: !3131)
!3166 = !DILocation(line: 1728, column: 5, scope: !3163)
!3167 = !DILocation(line: 1729, column: 36, scope: !3131)
!3168 = !DILocation(line: 1729, column: 41, scope: !3131)
!3169 = !DILocation(line: 1729, column: 10, scope: !3131)
!3170 = !DILocation(line: 1729, column: 3, scope: !3131)
!3171 = !DILocation(line: 1730, column: 1, scope: !3131)
!3172 = distinct !DISubprogram(name: "MagickCommentImage", scope: !1, file: !1, line: 1757, type: !2074, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3173 = !DILocalVariable(name: "wand", arg: 1, scope: !3172, file: !1, line: 1757, type: !1143)
!3174 = !DILocation(line: 1757, column: 61, scope: !3172)
!3175 = !DILocalVariable(name: "comment", arg: 2, scope: !3172, file: !1, line: 1758, type: !924)
!3176 = !DILocation(line: 1758, column: 15, scope: !3172)
!3177 = !DILocalVariable(name: "status", scope: !3172, file: !1, line: 1761, type: !807)
!3178 = !DILocation(line: 1761, column: 5, scope: !3172)
!3179 = !DILocation(line: 1765, column: 7, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3172, file: !1, line: 1765, column: 7)
!3181 = !DILocation(line: 1765, column: 13, scope: !3180)
!3182 = !DILocation(line: 1765, column: 19, scope: !3180)
!3183 = !DILocation(line: 1765, column: 7, scope: !3172)
!3184 = !DILocation(line: 1766, column: 60, scope: !3180)
!3185 = !DILocation(line: 1766, column: 66, scope: !3180)
!3186 = !DILocation(line: 1766, column: 12, scope: !3180)
!3187 = !DILocation(line: 1766, column: 5, scope: !3180)
!3188 = !DILocation(line: 1767, column: 7, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3172, file: !1, line: 1767, column: 7)
!3190 = !DILocation(line: 1767, column: 13, scope: !3189)
!3191 = !DILocation(line: 1767, column: 20, scope: !3189)
!3192 = !DILocation(line: 1767, column: 7, scope: !3172)
!3193 = !DILocation(line: 1768, column: 5, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3189, file: !1, line: 1768, column: 5)
!3195 = !DILocation(line: 1769, column: 27, scope: !3172)
!3196 = !DILocation(line: 1769, column: 33, scope: !3172)
!3197 = !DILocation(line: 1769, column: 50, scope: !3172)
!3198 = !DILocation(line: 1769, column: 10, scope: !3172)
!3199 = !DILocation(line: 1769, column: 9, scope: !3172)
!3200 = !DILocation(line: 1770, column: 7, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3172, file: !1, line: 1770, column: 7)
!3202 = !DILocation(line: 1770, column: 14, scope: !3201)
!3203 = !DILocation(line: 1770, column: 7, scope: !3172)
!3204 = !DILocation(line: 1771, column: 22, scope: !3201)
!3205 = !DILocation(line: 1771, column: 28, scope: !3201)
!3206 = !DILocation(line: 1771, column: 39, scope: !3201)
!3207 = !DILocation(line: 1771, column: 45, scope: !3201)
!3208 = !DILocation(line: 1771, column: 53, scope: !3201)
!3209 = !DILocation(line: 1771, column: 5, scope: !3201)
!3210 = !DILocation(line: 1772, column: 10, scope: !3172)
!3211 = !DILocation(line: 1772, column: 3, scope: !3172)
!3212 = !DILocation(line: 1773, column: 1, scope: !3172)
!3213 = distinct !DISubprogram(name: "MagickCompareImageChannels", scope: !1, file: !1, line: 1808, type: !3214, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!1143, !1143, !1456, !1507, !3216, !1117}
!3216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3217)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetricType", file: !607, line: 41, baseType: !606)
!3218 = !DILocalVariable(name: "wand", arg: 1, scope: !3213, file: !1, line: 1808, type: !1143)
!3219 = !DILocation(line: 1808, column: 63, scope: !3213)
!3220 = !DILocalVariable(name: "reference", arg: 2, scope: !3213, file: !1, line: 1809, type: !1456)
!3221 = !DILocation(line: 1809, column: 21, scope: !3213)
!3222 = !DILocalVariable(name: "channel", arg: 3, scope: !3213, file: !1, line: 1809, type: !1507)
!3223 = !DILocation(line: 1809, column: 49, scope: !3213)
!3224 = !DILocalVariable(name: "metric", arg: 4, scope: !3213, file: !1, line: 1809, type: !3216)
!3225 = !DILocation(line: 1809, column: 74, scope: !3213)
!3226 = !DILocalVariable(name: "distortion", arg: 5, scope: !3213, file: !1, line: 1810, type: !1117)
!3227 = !DILocation(line: 1810, column: 11, scope: !3213)
!3228 = !DILocalVariable(name: "compare_image", scope: !3213, file: !1, line: 1813, type: !791)
!3229 = !DILocation(line: 1813, column: 6, scope: !3213)
!3230 = !DILocation(line: 1817, column: 7, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 1817, column: 7)
!3232 = !DILocation(line: 1817, column: 13, scope: !3231)
!3233 = !DILocation(line: 1817, column: 19, scope: !3231)
!3234 = !DILocation(line: 1817, column: 7, scope: !3213)
!3235 = !DILocation(line: 1818, column: 60, scope: !3231)
!3236 = !DILocation(line: 1818, column: 66, scope: !3231)
!3237 = !DILocation(line: 1818, column: 12, scope: !3231)
!3238 = !DILocation(line: 1818, column: 5, scope: !3231)
!3239 = !DILocation(line: 1819, column: 8, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 1819, column: 7)
!3241 = !DILocation(line: 1819, column: 14, scope: !3240)
!3242 = !DILocation(line: 1819, column: 21, scope: !3240)
!3243 = !DILocation(line: 1819, column: 40, scope: !3240)
!3244 = !DILocation(line: 1819, column: 44, scope: !3240)
!3245 = !DILocation(line: 1819, column: 55, scope: !3240)
!3246 = !DILocation(line: 1819, column: 62, scope: !3240)
!3247 = !DILocation(line: 1819, column: 7, scope: !3213)
!3248 = !DILocation(line: 1821, column: 35, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3240, file: !1, line: 1820, column: 5)
!3250 = !DILocation(line: 1821, column: 41, scope: !3249)
!3251 = !DILocation(line: 1822, column: 35, scope: !3249)
!3252 = !DILocation(line: 1822, column: 41, scope: !3249)
!3253 = !DILocation(line: 1821, column: 14, scope: !3249)
!3254 = !DILocation(line: 1823, column: 7, scope: !3249)
!3255 = !DILocation(line: 1825, column: 38, scope: !3213)
!3256 = !DILocation(line: 1825, column: 44, scope: !3213)
!3257 = !DILocation(line: 1825, column: 51, scope: !3213)
!3258 = !DILocation(line: 1825, column: 62, scope: !3213)
!3259 = !DILocation(line: 1825, column: 69, scope: !3213)
!3260 = !DILocation(line: 1826, column: 5, scope: !3213)
!3261 = !DILocation(line: 1826, column: 12, scope: !3213)
!3262 = !DILocation(line: 1826, column: 24, scope: !3213)
!3263 = !DILocation(line: 1826, column: 30, scope: !3213)
!3264 = !DILocation(line: 1826, column: 38, scope: !3213)
!3265 = !DILocation(line: 1825, column: 17, scope: !3213)
!3266 = !DILocation(line: 1825, column: 16, scope: !3213)
!3267 = !DILocation(line: 1827, column: 7, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 1827, column: 7)
!3269 = !DILocation(line: 1827, column: 21, scope: !3268)
!3270 = !DILocation(line: 1827, column: 7, scope: !3213)
!3271 = !DILocation(line: 1828, column: 5, scope: !3268)
!3272 = !DILocation(line: 1829, column: 36, scope: !3213)
!3273 = !DILocation(line: 1829, column: 41, scope: !3213)
!3274 = !DILocation(line: 1829, column: 10, scope: !3213)
!3275 = !DILocation(line: 1829, column: 3, scope: !3213)
!3276 = !DILocation(line: 1830, column: 1, scope: !3213)
!3277 = distinct !DISubprogram(name: "MagickCompareImageLayers", scope: !1, file: !1, line: 1859, type: !3278, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!1143, !1143, !3280}
!3280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3281)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageLayerMethod", file: !239, line: 53, baseType: !621)
!3282 = !DILocalVariable(name: "wand", arg: 1, scope: !3277, file: !1, line: 1859, type: !1143)
!3283 = !DILocation(line: 1859, column: 61, scope: !3277)
!3284 = !DILocalVariable(name: "method", arg: 2, scope: !3277, file: !1, line: 1860, type: !3280)
!3285 = !DILocation(line: 1860, column: 26, scope: !3277)
!3286 = !DILocalVariable(name: "layers_image", scope: !3277, file: !1, line: 1863, type: !791)
!3287 = !DILocation(line: 1863, column: 6, scope: !3277)
!3288 = !DILocation(line: 1867, column: 7, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3277, file: !1, line: 1867, column: 7)
!3290 = !DILocation(line: 1867, column: 13, scope: !3289)
!3291 = !DILocation(line: 1867, column: 19, scope: !3289)
!3292 = !DILocation(line: 1867, column: 7, scope: !3277)
!3293 = !DILocation(line: 1868, column: 60, scope: !3289)
!3294 = !DILocation(line: 1868, column: 66, scope: !3289)
!3295 = !DILocation(line: 1868, column: 12, scope: !3289)
!3296 = !DILocation(line: 1868, column: 5, scope: !3289)
!3297 = !DILocation(line: 1869, column: 7, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3277, file: !1, line: 1869, column: 7)
!3299 = !DILocation(line: 1869, column: 13, scope: !3298)
!3300 = !DILocation(line: 1869, column: 20, scope: !3298)
!3301 = !DILocation(line: 1869, column: 7, scope: !3277)
!3302 = !DILocation(line: 1870, column: 5, scope: !3298)
!3303 = !DILocation(line: 1871, column: 35, scope: !3277)
!3304 = !DILocation(line: 1871, column: 41, scope: !3277)
!3305 = !DILocation(line: 1871, column: 48, scope: !3277)
!3306 = !DILocation(line: 1871, column: 55, scope: !3277)
!3307 = !DILocation(line: 1871, column: 61, scope: !3277)
!3308 = !DILocation(line: 1871, column: 16, scope: !3277)
!3309 = !DILocation(line: 1871, column: 15, scope: !3277)
!3310 = !DILocation(line: 1872, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3277, file: !1, line: 1872, column: 7)
!3312 = !DILocation(line: 1872, column: 20, scope: !3311)
!3313 = !DILocation(line: 1872, column: 7, scope: !3277)
!3314 = !DILocation(line: 1873, column: 5, scope: !3311)
!3315 = !DILocation(line: 1874, column: 36, scope: !3277)
!3316 = !DILocation(line: 1874, column: 41, scope: !3277)
!3317 = !DILocation(line: 1874, column: 10, scope: !3277)
!3318 = !DILocation(line: 1874, column: 3, scope: !3277)
!3319 = !DILocation(line: 1875, column: 1, scope: !3277)
!3320 = distinct !DISubprogram(name: "MagickCompareImages", scope: !1, file: !1, line: 1907, type: !3321, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!1143, !1143, !1456, !3216, !1117}
!3323 = !DILocalVariable(name: "wand", arg: 1, scope: !3320, file: !1, line: 1907, type: !1143)
!3324 = !DILocation(line: 1907, column: 56, scope: !3320)
!3325 = !DILocalVariable(name: "reference", arg: 2, scope: !3320, file: !1, line: 1908, type: !1456)
!3326 = !DILocation(line: 1908, column: 21, scope: !3320)
!3327 = !DILocalVariable(name: "metric", arg: 3, scope: !3320, file: !1, line: 1908, type: !3216)
!3328 = !DILocation(line: 1908, column: 48, scope: !3320)
!3329 = !DILocalVariable(name: "distortion", arg: 4, scope: !3320, file: !1, line: 1908, type: !1117)
!3330 = !DILocation(line: 1908, column: 63, scope: !3320)
!3331 = !DILocalVariable(name: "compare_image", scope: !3320, file: !1, line: 1911, type: !791)
!3332 = !DILocation(line: 1911, column: 6, scope: !3320)
!3333 = !DILocation(line: 1916, column: 7, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3320, file: !1, line: 1916, column: 7)
!3335 = !DILocation(line: 1916, column: 13, scope: !3334)
!3336 = !DILocation(line: 1916, column: 19, scope: !3334)
!3337 = !DILocation(line: 1916, column: 7, scope: !3320)
!3338 = !DILocation(line: 1917, column: 60, scope: !3334)
!3339 = !DILocation(line: 1917, column: 66, scope: !3334)
!3340 = !DILocation(line: 1917, column: 12, scope: !3334)
!3341 = !DILocation(line: 1917, column: 5, scope: !3334)
!3342 = !DILocation(line: 1918, column: 8, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3320, file: !1, line: 1918, column: 7)
!3344 = !DILocation(line: 1918, column: 14, scope: !3343)
!3345 = !DILocation(line: 1918, column: 21, scope: !3343)
!3346 = !DILocation(line: 1918, column: 40, scope: !3343)
!3347 = !DILocation(line: 1918, column: 44, scope: !3343)
!3348 = !DILocation(line: 1918, column: 55, scope: !3343)
!3349 = !DILocation(line: 1918, column: 62, scope: !3343)
!3350 = !DILocation(line: 1918, column: 7, scope: !3320)
!3351 = !DILocation(line: 1920, column: 35, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3343, file: !1, line: 1919, column: 5)
!3353 = !DILocation(line: 1920, column: 41, scope: !3352)
!3354 = !DILocation(line: 1921, column: 35, scope: !3352)
!3355 = !DILocation(line: 1921, column: 41, scope: !3352)
!3356 = !DILocation(line: 1920, column: 14, scope: !3352)
!3357 = !DILocation(line: 1922, column: 7, scope: !3352)
!3358 = !DILocation(line: 1924, column: 31, scope: !3320)
!3359 = !DILocation(line: 1924, column: 37, scope: !3320)
!3360 = !DILocation(line: 1924, column: 44, scope: !3320)
!3361 = !DILocation(line: 1924, column: 55, scope: !3320)
!3362 = !DILocation(line: 1924, column: 62, scope: !3320)
!3363 = !DILocation(line: 1924, column: 69, scope: !3320)
!3364 = !DILocation(line: 1925, column: 6, scope: !3320)
!3365 = !DILocation(line: 1925, column: 12, scope: !3320)
!3366 = !DILocation(line: 1925, column: 20, scope: !3320)
!3367 = !DILocation(line: 1924, column: 17, scope: !3320)
!3368 = !DILocation(line: 1924, column: 16, scope: !3320)
!3369 = !DILocation(line: 1926, column: 7, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3320, file: !1, line: 1926, column: 7)
!3371 = !DILocation(line: 1926, column: 21, scope: !3370)
!3372 = !DILocation(line: 1926, column: 7, scope: !3320)
!3373 = !DILocation(line: 1927, column: 5, scope: !3370)
!3374 = !DILocation(line: 1928, column: 36, scope: !3320)
!3375 = !DILocation(line: 1928, column: 41, scope: !3320)
!3376 = !DILocation(line: 1928, column: 10, scope: !3320)
!3377 = !DILocation(line: 1928, column: 3, scope: !3320)
!3378 = !DILocation(line: 1929, column: 1, scope: !3320)
!3379 = distinct !DISubprogram(name: "MagickCompositeImage", scope: !1, file: !1, line: 1975, type: !3380, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!807, !1143, !1456, !3382, !1666, !1666}
!3382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!3383 = !DILocalVariable(name: "wand", arg: 1, scope: !3379, file: !1, line: 1975, type: !1143)
!3384 = !DILocation(line: 1975, column: 63, scope: !3379)
!3385 = !DILocalVariable(name: "source_wand", arg: 2, scope: !3379, file: !1, line: 1976, type: !1456)
!3386 = !DILocation(line: 1976, column: 21, scope: !3379)
!3387 = !DILocalVariable(name: "compose", arg: 3, scope: !3379, file: !1, line: 1976, type: !3382)
!3388 = !DILocation(line: 1976, column: 57, scope: !3379)
!3389 = !DILocalVariable(name: "x", arg: 4, scope: !3379, file: !1, line: 1976, type: !1666)
!3390 = !DILocation(line: 1976, column: 79, scope: !3379)
!3391 = !DILocalVariable(name: "y", arg: 5, scope: !3379, file: !1, line: 1977, type: !1666)
!3392 = !DILocation(line: 1977, column: 17, scope: !3379)
!3393 = !DILocalVariable(name: "status", scope: !3379, file: !1, line: 1980, type: !807)
!3394 = !DILocation(line: 1980, column: 5, scope: !3379)
!3395 = !DILocation(line: 1982, column: 38, scope: !3379)
!3396 = !DILocation(line: 1982, column: 59, scope: !3379)
!3397 = !DILocation(line: 1983, column: 5, scope: !3379)
!3398 = !DILocation(line: 1983, column: 13, scope: !3379)
!3399 = !DILocation(line: 1983, column: 15, scope: !3379)
!3400 = !DILocation(line: 1982, column: 10, scope: !3379)
!3401 = !DILocation(line: 1982, column: 9, scope: !3379)
!3402 = !DILocation(line: 1984, column: 10, scope: !3379)
!3403 = !DILocation(line: 1984, column: 3, scope: !3379)
!3404 = distinct !DISubprogram(name: "MagickCompositeImageChannel", scope: !1, file: !1, line: 1987, type: !3405, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!807, !1143, !1507, !1456, !3382, !1666, !1666}
!3407 = !DILocalVariable(name: "wand", arg: 1, scope: !3404, file: !1, line: 1987, type: !1143)
!3408 = !DILocation(line: 1987, column: 70, scope: !3404)
!3409 = !DILocalVariable(name: "channel", arg: 2, scope: !3404, file: !1, line: 1988, type: !1507)
!3410 = !DILocation(line: 1988, column: 21, scope: !3404)
!3411 = !DILocalVariable(name: "source_wand", arg: 3, scope: !3404, file: !1, line: 1988, type: !1456)
!3412 = !DILocation(line: 1988, column: 47, scope: !3404)
!3413 = !DILocalVariable(name: "compose", arg: 4, scope: !3404, file: !1, line: 1989, type: !3382)
!3414 = !DILocation(line: 1989, column: 27, scope: !3404)
!3415 = !DILocalVariable(name: "x", arg: 5, scope: !3404, file: !1, line: 1989, type: !1666)
!3416 = !DILocation(line: 1989, column: 49, scope: !3404)
!3417 = !DILocalVariable(name: "y", arg: 6, scope: !3404, file: !1, line: 1989, type: !1666)
!3418 = !DILocation(line: 1989, column: 65, scope: !3404)
!3419 = !DILocalVariable(name: "status", scope: !3404, file: !1, line: 1992, type: !807)
!3420 = !DILocation(line: 1992, column: 5, scope: !3404)
!3421 = !DILocation(line: 1996, column: 7, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 1996, column: 7)
!3423 = !DILocation(line: 1996, column: 13, scope: !3422)
!3424 = !DILocation(line: 1996, column: 19, scope: !3422)
!3425 = !DILocation(line: 1996, column: 7, scope: !3404)
!3426 = !DILocation(line: 1997, column: 60, scope: !3422)
!3427 = !DILocation(line: 1997, column: 66, scope: !3422)
!3428 = !DILocation(line: 1997, column: 12, scope: !3422)
!3429 = !DILocation(line: 1997, column: 5, scope: !3422)
!3430 = !DILocation(line: 1998, column: 8, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 1998, column: 7)
!3432 = !DILocation(line: 1998, column: 14, scope: !3431)
!3433 = !DILocation(line: 1998, column: 21, scope: !3431)
!3434 = !DILocation(line: 1998, column: 40, scope: !3431)
!3435 = !DILocation(line: 1999, column: 8, scope: !3431)
!3436 = !DILocation(line: 1999, column: 21, scope: !3431)
!3437 = !DILocation(line: 1999, column: 28, scope: !3431)
!3438 = !DILocation(line: 1998, column: 7, scope: !3404)
!3439 = !DILocation(line: 2000, column: 5, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3431, file: !1, line: 2000, column: 5)
!3441 = !DILocation(line: 2001, column: 32, scope: !3404)
!3442 = !DILocation(line: 2001, column: 38, scope: !3404)
!3443 = !DILocation(line: 2001, column: 45, scope: !3404)
!3444 = !DILocation(line: 2001, column: 53, scope: !3404)
!3445 = !DILocation(line: 2002, column: 5, scope: !3404)
!3446 = !DILocation(line: 2002, column: 18, scope: !3404)
!3447 = !DILocation(line: 2002, column: 25, scope: !3404)
!3448 = !DILocation(line: 2002, column: 27, scope: !3404)
!3449 = !DILocation(line: 2001, column: 10, scope: !3404)
!3450 = !DILocation(line: 2001, column: 9, scope: !3404)
!3451 = !DILocation(line: 2003, column: 7, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3404, file: !1, line: 2003, column: 7)
!3453 = !DILocation(line: 2003, column: 14, scope: !3452)
!3454 = !DILocation(line: 2003, column: 7, scope: !3404)
!3455 = !DILocation(line: 2004, column: 22, scope: !3452)
!3456 = !DILocation(line: 2004, column: 28, scope: !3452)
!3457 = !DILocation(line: 2004, column: 39, scope: !3452)
!3458 = !DILocation(line: 2004, column: 45, scope: !3452)
!3459 = !DILocation(line: 2004, column: 53, scope: !3452)
!3460 = !DILocation(line: 2004, column: 5, scope: !3452)
!3461 = !DILocation(line: 2005, column: 10, scope: !3404)
!3462 = !DILocation(line: 2005, column: 3, scope: !3404)
!3463 = !DILocation(line: 2006, column: 1, scope: !3404)
!3464 = distinct !DISubprogram(name: "MagickCompositeLayers", scope: !1, file: !1, line: 2061, type: !3380, scopeLine: 2064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3465 = !DILocalVariable(name: "wand", arg: 1, scope: !3464, file: !1, line: 2061, type: !1143)
!3466 = !DILocation(line: 2061, column: 64, scope: !3464)
!3467 = !DILocalVariable(name: "source_wand", arg: 2, scope: !3464, file: !1, line: 2062, type: !1456)
!3468 = !DILocation(line: 2062, column: 21, scope: !3464)
!3469 = !DILocalVariable(name: "compose", arg: 3, scope: !3464, file: !1, line: 2062, type: !3382)
!3470 = !DILocation(line: 2062, column: 57, scope: !3464)
!3471 = !DILocalVariable(name: "x", arg: 4, scope: !3464, file: !1, line: 2062, type: !1666)
!3472 = !DILocation(line: 2062, column: 79, scope: !3464)
!3473 = !DILocalVariable(name: "y", arg: 5, scope: !3464, file: !1, line: 2063, type: !1666)
!3474 = !DILocation(line: 2063, column: 17, scope: !3464)
!3475 = !DILocalVariable(name: "status", scope: !3464, file: !1, line: 2066, type: !807)
!3476 = !DILocation(line: 2066, column: 5, scope: !3464)
!3477 = !DILocation(line: 2070, column: 7, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3464, file: !1, line: 2070, column: 7)
!3479 = !DILocation(line: 2070, column: 13, scope: !3478)
!3480 = !DILocation(line: 2070, column: 19, scope: !3478)
!3481 = !DILocation(line: 2070, column: 7, scope: !3464)
!3482 = !DILocation(line: 2071, column: 60, scope: !3478)
!3483 = !DILocation(line: 2071, column: 66, scope: !3478)
!3484 = !DILocation(line: 2071, column: 12, scope: !3478)
!3485 = !DILocation(line: 2071, column: 5, scope: !3478)
!3486 = !DILocation(line: 2072, column: 8, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3464, file: !1, line: 2072, column: 7)
!3488 = !DILocation(line: 2072, column: 14, scope: !3487)
!3489 = !DILocation(line: 2072, column: 21, scope: !3487)
!3490 = !DILocation(line: 2072, column: 40, scope: !3487)
!3491 = !DILocation(line: 2073, column: 8, scope: !3487)
!3492 = !DILocation(line: 2073, column: 21, scope: !3487)
!3493 = !DILocation(line: 2073, column: 28, scope: !3487)
!3494 = !DILocation(line: 2072, column: 7, scope: !3464)
!3495 = !DILocation(line: 2074, column: 5, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3487, file: !1, line: 2074, column: 5)
!3497 = !DILocation(line: 2075, column: 19, scope: !3464)
!3498 = !DILocation(line: 2075, column: 25, scope: !3464)
!3499 = !DILocation(line: 2075, column: 32, scope: !3464)
!3500 = !DILocation(line: 2075, column: 40, scope: !3464)
!3501 = !DILocation(line: 2075, column: 53, scope: !3464)
!3502 = !DILocation(line: 2075, column: 60, scope: !3464)
!3503 = !DILocation(line: 2075, column: 62, scope: !3464)
!3504 = !DILocation(line: 2076, column: 6, scope: !3464)
!3505 = !DILocation(line: 2076, column: 12, scope: !3464)
!3506 = !DILocation(line: 2076, column: 20, scope: !3464)
!3507 = !DILocation(line: 2075, column: 3, scope: !3464)
!3508 = !DILocation(line: 2077, column: 9, scope: !3464)
!3509 = !DILocation(line: 2078, column: 10, scope: !3464)
!3510 = !DILocation(line: 2078, column: 3, scope: !3464)
!3511 = !DILocation(line: 2079, column: 1, scope: !3464)
!3512 = distinct !DISubprogram(name: "MagickContrastImage", scope: !1, file: !1, line: 2109, type: !3513, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!807, !1143, !2117}
!3515 = !DILocalVariable(name: "wand", arg: 1, scope: !3512, file: !1, line: 2109, type: !1143)
!3516 = !DILocation(line: 2109, column: 62, scope: !3512)
!3517 = !DILocalVariable(name: "sharpen", arg: 2, scope: !3512, file: !1, line: 2110, type: !2117)
!3518 = !DILocation(line: 2110, column: 27, scope: !3512)
!3519 = !DILocalVariable(name: "status", scope: !3512, file: !1, line: 2113, type: !807)
!3520 = !DILocation(line: 2113, column: 5, scope: !3512)
!3521 = !DILocation(line: 2117, column: 7, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 2117, column: 7)
!3523 = !DILocation(line: 2117, column: 13, scope: !3522)
!3524 = !DILocation(line: 2117, column: 19, scope: !3522)
!3525 = !DILocation(line: 2117, column: 7, scope: !3512)
!3526 = !DILocation(line: 2118, column: 60, scope: !3522)
!3527 = !DILocation(line: 2118, column: 66, scope: !3522)
!3528 = !DILocation(line: 2118, column: 12, scope: !3522)
!3529 = !DILocation(line: 2118, column: 5, scope: !3522)
!3530 = !DILocation(line: 2119, column: 7, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 2119, column: 7)
!3532 = !DILocation(line: 2119, column: 13, scope: !3531)
!3533 = !DILocation(line: 2119, column: 20, scope: !3531)
!3534 = !DILocation(line: 2119, column: 7, scope: !3512)
!3535 = !DILocation(line: 2120, column: 5, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 2120, column: 5)
!3537 = !DILocation(line: 2121, column: 24, scope: !3512)
!3538 = !DILocation(line: 2121, column: 30, scope: !3512)
!3539 = !DILocation(line: 2121, column: 37, scope: !3512)
!3540 = !DILocation(line: 2121, column: 10, scope: !3512)
!3541 = !DILocation(line: 2121, column: 9, scope: !3512)
!3542 = !DILocation(line: 2122, column: 7, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 2122, column: 7)
!3544 = !DILocation(line: 2122, column: 14, scope: !3543)
!3545 = !DILocation(line: 2122, column: 7, scope: !3512)
!3546 = !DILocation(line: 2123, column: 22, scope: !3543)
!3547 = !DILocation(line: 2123, column: 28, scope: !3543)
!3548 = !DILocation(line: 2123, column: 39, scope: !3543)
!3549 = !DILocation(line: 2123, column: 45, scope: !3543)
!3550 = !DILocation(line: 2123, column: 53, scope: !3543)
!3551 = !DILocation(line: 2123, column: 5, scope: !3543)
!3552 = !DILocation(line: 2124, column: 10, scope: !3512)
!3553 = !DILocation(line: 2124, column: 3, scope: !3512)
!3554 = !DILocation(line: 2125, column: 1, scope: !3512)
!3555 = distinct !DISubprogram(name: "MagickContrastStretchImage", scope: !1, file: !1, line: 2163, type: !1487, scopeLine: 2165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3556 = !DILocalVariable(name: "wand", arg: 1, scope: !3555, file: !1, line: 2163, type: !1143)
!3557 = !DILocation(line: 2163, column: 69, scope: !3555)
!3558 = !DILocalVariable(name: "black_point", arg: 2, scope: !3555, file: !1, line: 2164, type: !1325)
!3559 = !DILocation(line: 2164, column: 16, scope: !3555)
!3560 = !DILocalVariable(name: "white_point", arg: 3, scope: !3555, file: !1, line: 2164, type: !1325)
!3561 = !DILocation(line: 2164, column: 41, scope: !3555)
!3562 = !DILocalVariable(name: "status", scope: !3555, file: !1, line: 2167, type: !807)
!3563 = !DILocation(line: 2167, column: 5, scope: !3555)
!3564 = !DILocation(line: 2169, column: 44, scope: !3555)
!3565 = !DILocation(line: 2169, column: 65, scope: !3555)
!3566 = !DILocation(line: 2170, column: 5, scope: !3555)
!3567 = !DILocation(line: 2169, column: 10, scope: !3555)
!3568 = !DILocation(line: 2169, column: 9, scope: !3555)
!3569 = !DILocation(line: 2171, column: 10, scope: !3555)
!3570 = !DILocation(line: 2171, column: 3, scope: !3555)
!3571 = distinct !DISubprogram(name: "MagickContrastStretchImageChannel", scope: !1, file: !1, line: 2174, type: !1505, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3572 = !DILocalVariable(name: "wand", arg: 1, scope: !3571, file: !1, line: 2174, type: !1143)
!3573 = !DILocation(line: 2174, column: 76, scope: !3571)
!3574 = !DILocalVariable(name: "channel", arg: 2, scope: !3571, file: !1, line: 2175, type: !1507)
!3575 = !DILocation(line: 2175, column: 21, scope: !3571)
!3576 = !DILocalVariable(name: "black_point", arg: 3, scope: !3571, file: !1, line: 2175, type: !1325)
!3577 = !DILocation(line: 2175, column: 42, scope: !3571)
!3578 = !DILocalVariable(name: "white_point", arg: 4, scope: !3571, file: !1, line: 2175, type: !1325)
!3579 = !DILocation(line: 2175, column: 67, scope: !3571)
!3580 = !DILocalVariable(name: "status", scope: !3571, file: !1, line: 2178, type: !807)
!3581 = !DILocation(line: 2178, column: 5, scope: !3571)
!3582 = !DILocation(line: 2182, column: 7, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3571, file: !1, line: 2182, column: 7)
!3584 = !DILocation(line: 2182, column: 13, scope: !3583)
!3585 = !DILocation(line: 2182, column: 19, scope: !3583)
!3586 = !DILocation(line: 2182, column: 7, scope: !3571)
!3587 = !DILocation(line: 2183, column: 60, scope: !3583)
!3588 = !DILocation(line: 2183, column: 66, scope: !3583)
!3589 = !DILocation(line: 2183, column: 12, scope: !3583)
!3590 = !DILocation(line: 2183, column: 5, scope: !3583)
!3591 = !DILocation(line: 2184, column: 7, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3571, file: !1, line: 2184, column: 7)
!3593 = !DILocation(line: 2184, column: 13, scope: !3592)
!3594 = !DILocation(line: 2184, column: 20, scope: !3592)
!3595 = !DILocation(line: 2184, column: 7, scope: !3571)
!3596 = !DILocation(line: 2185, column: 5, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !1, line: 2185, column: 5)
!3598 = !DILocation(line: 2186, column: 38, scope: !3571)
!3599 = !DILocation(line: 2186, column: 44, scope: !3571)
!3600 = !DILocation(line: 2186, column: 51, scope: !3571)
!3601 = !DILocation(line: 2186, column: 59, scope: !3571)
!3602 = !DILocation(line: 2187, column: 5, scope: !3571)
!3603 = !DILocation(line: 2186, column: 10, scope: !3571)
!3604 = !DILocation(line: 2186, column: 9, scope: !3571)
!3605 = !DILocation(line: 2188, column: 7, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3571, file: !1, line: 2188, column: 7)
!3607 = !DILocation(line: 2188, column: 14, scope: !3606)
!3608 = !DILocation(line: 2188, column: 7, scope: !3571)
!3609 = !DILocation(line: 2189, column: 22, scope: !3606)
!3610 = !DILocation(line: 2189, column: 28, scope: !3606)
!3611 = !DILocation(line: 2189, column: 39, scope: !3606)
!3612 = !DILocation(line: 2189, column: 45, scope: !3606)
!3613 = !DILocation(line: 2189, column: 53, scope: !3606)
!3614 = !DILocation(line: 2189, column: 5, scope: !3606)
!3615 = !DILocation(line: 2190, column: 10, scope: !3571)
!3616 = !DILocation(line: 2190, column: 3, scope: !3571)
!3617 = !DILocation(line: 2191, column: 1, scope: !3571)
!3618 = distinct !DISubprogram(name: "MagickConvolveImage", scope: !1, file: !1, line: 2226, type: !3619, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!807, !1143, !1214, !1324}
!3621 = !DILocalVariable(name: "wand", arg: 1, scope: !3618, file: !1, line: 2226, type: !1143)
!3622 = !DILocation(line: 2226, column: 62, scope: !3618)
!3623 = !DILocalVariable(name: "order", arg: 2, scope: !3618, file: !1, line: 2227, type: !1214)
!3624 = !DILocation(line: 2227, column: 16, scope: !3618)
!3625 = !DILocalVariable(name: "kernel", arg: 3, scope: !3618, file: !1, line: 2227, type: !1324)
!3626 = !DILocation(line: 2227, column: 36, scope: !3618)
!3627 = !DILocalVariable(name: "status", scope: !3618, file: !1, line: 2230, type: !807)
!3628 = !DILocation(line: 2230, column: 5, scope: !3618)
!3629 = !DILocation(line: 2232, column: 37, scope: !3618)
!3630 = !DILocation(line: 2232, column: 58, scope: !3618)
!3631 = !DILocation(line: 2232, column: 64, scope: !3618)
!3632 = !DILocation(line: 2232, column: 10, scope: !3618)
!3633 = !DILocation(line: 2232, column: 9, scope: !3618)
!3634 = !DILocation(line: 2233, column: 10, scope: !3618)
!3635 = !DILocation(line: 2233, column: 3, scope: !3618)
!3636 = distinct !DISubprogram(name: "MagickConvolveImageChannel", scope: !1, file: !1, line: 2236, type: !3637, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!807, !1143, !1507, !1214, !1324}
!3639 = !DILocalVariable(name: "wand", arg: 1, scope: !3636, file: !1, line: 2236, type: !1143)
!3640 = !DILocation(line: 2236, column: 69, scope: !3636)
!3641 = !DILocalVariable(name: "channel", arg: 2, scope: !3636, file: !1, line: 2237, type: !1507)
!3642 = !DILocation(line: 2237, column: 21, scope: !3636)
!3643 = !DILocalVariable(name: "order", arg: 3, scope: !3636, file: !1, line: 2237, type: !1214)
!3644 = !DILocation(line: 2237, column: 42, scope: !3636)
!3645 = !DILocalVariable(name: "kernel", arg: 4, scope: !3636, file: !1, line: 2237, type: !1324)
!3646 = !DILocation(line: 2237, column: 62, scope: !3636)
!3647 = !DILocalVariable(name: "convolve_image", scope: !3636, file: !1, line: 2240, type: !791)
!3648 = !DILocation(line: 2240, column: 6, scope: !3636)
!3649 = !DILocation(line: 2244, column: 7, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3636, file: !1, line: 2244, column: 7)
!3651 = !DILocation(line: 2244, column: 13, scope: !3650)
!3652 = !DILocation(line: 2244, column: 19, scope: !3650)
!3653 = !DILocation(line: 2244, column: 7, scope: !3636)
!3654 = !DILocation(line: 2245, column: 60, scope: !3650)
!3655 = !DILocation(line: 2245, column: 66, scope: !3650)
!3656 = !DILocation(line: 2245, column: 12, scope: !3650)
!3657 = !DILocation(line: 2245, column: 5, scope: !3650)
!3658 = !DILocation(line: 2246, column: 7, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3636, file: !1, line: 2246, column: 7)
!3660 = !DILocation(line: 2246, column: 14, scope: !3659)
!3661 = !DILocation(line: 2246, column: 7, scope: !3636)
!3662 = !DILocation(line: 2247, column: 5, scope: !3659)
!3663 = !DILocation(line: 2248, column: 7, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3636, file: !1, line: 2248, column: 7)
!3665 = !DILocation(line: 2248, column: 13, scope: !3664)
!3666 = !DILocation(line: 2248, column: 20, scope: !3664)
!3667 = !DILocation(line: 2248, column: 7, scope: !3636)
!3668 = !DILocation(line: 2249, column: 5, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3664, file: !1, line: 2249, column: 5)
!3670 = !DILocation(line: 2250, column: 39, scope: !3636)
!3671 = !DILocation(line: 2250, column: 45, scope: !3636)
!3672 = !DILocation(line: 2250, column: 52, scope: !3636)
!3673 = !DILocation(line: 2250, column: 60, scope: !3636)
!3674 = !DILocation(line: 2250, column: 66, scope: !3636)
!3675 = !DILocation(line: 2251, column: 5, scope: !3636)
!3676 = !DILocation(line: 2251, column: 11, scope: !3636)
!3677 = !DILocation(line: 2250, column: 18, scope: !3636)
!3678 = !DILocation(line: 2250, column: 17, scope: !3636)
!3679 = !DILocation(line: 2252, column: 7, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3636, file: !1, line: 2252, column: 7)
!3681 = !DILocation(line: 2252, column: 22, scope: !3680)
!3682 = !DILocation(line: 2252, column: 7, scope: !3636)
!3683 = !DILocation(line: 2253, column: 5, scope: !3680)
!3684 = !DILocation(line: 2254, column: 23, scope: !3636)
!3685 = !DILocation(line: 2254, column: 29, scope: !3636)
!3686 = !DILocation(line: 2254, column: 36, scope: !3636)
!3687 = !DILocation(line: 2254, column: 3, scope: !3636)
!3688 = !DILocation(line: 2255, column: 3, scope: !3636)
!3689 = !DILocation(line: 2256, column: 1, scope: !3636)
!3690 = distinct !DISubprogram(name: "MagickCropImage", scope: !1, file: !1, line: 2289, type: !2679, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3691 = !DILocalVariable(name: "wand", arg: 1, scope: !3690, file: !1, line: 2289, type: !1143)
!3692 = !DILocation(line: 2289, column: 58, scope: !3690)
!3693 = !DILocalVariable(name: "width", arg: 2, scope: !3690, file: !1, line: 2290, type: !1214)
!3694 = !DILocation(line: 2290, column: 16, scope: !3690)
!3695 = !DILocalVariable(name: "height", arg: 3, scope: !3690, file: !1, line: 2290, type: !1214)
!3696 = !DILocation(line: 2290, column: 35, scope: !3690)
!3697 = !DILocalVariable(name: "x", arg: 4, scope: !3690, file: !1, line: 2290, type: !1666)
!3698 = !DILocation(line: 2290, column: 56, scope: !3690)
!3699 = !DILocalVariable(name: "y", arg: 5, scope: !3690, file: !1, line: 2290, type: !1666)
!3700 = !DILocation(line: 2290, column: 72, scope: !3690)
!3701 = !DILocalVariable(name: "crop_image", scope: !3690, file: !1, line: 2293, type: !791)
!3702 = !DILocation(line: 2293, column: 6, scope: !3690)
!3703 = !DILocalVariable(name: "crop", scope: !3690, file: !1, line: 2296, type: !863)
!3704 = !DILocation(line: 2296, column: 5, scope: !3690)
!3705 = !DILocation(line: 2300, column: 7, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3690, file: !1, line: 2300, column: 7)
!3707 = !DILocation(line: 2300, column: 13, scope: !3706)
!3708 = !DILocation(line: 2300, column: 19, scope: !3706)
!3709 = !DILocation(line: 2300, column: 7, scope: !3690)
!3710 = !DILocation(line: 2301, column: 60, scope: !3706)
!3711 = !DILocation(line: 2301, column: 66, scope: !3706)
!3712 = !DILocation(line: 2301, column: 12, scope: !3706)
!3713 = !DILocation(line: 2301, column: 5, scope: !3706)
!3714 = !DILocation(line: 2302, column: 7, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3690, file: !1, line: 2302, column: 7)
!3716 = !DILocation(line: 2302, column: 13, scope: !3715)
!3717 = !DILocation(line: 2302, column: 20, scope: !3715)
!3718 = !DILocation(line: 2302, column: 7, scope: !3690)
!3719 = !DILocation(line: 2303, column: 5, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 2303, column: 5)
!3721 = !DILocation(line: 2304, column: 14, scope: !3690)
!3722 = !DILocation(line: 2304, column: 8, scope: !3690)
!3723 = !DILocation(line: 2304, column: 13, scope: !3690)
!3724 = !DILocation(line: 2305, column: 15, scope: !3690)
!3725 = !DILocation(line: 2305, column: 8, scope: !3690)
!3726 = !DILocation(line: 2305, column: 14, scope: !3690)
!3727 = !DILocation(line: 2306, column: 10, scope: !3690)
!3728 = !DILocation(line: 2306, column: 8, scope: !3690)
!3729 = !DILocation(line: 2306, column: 9, scope: !3690)
!3730 = !DILocation(line: 2307, column: 10, scope: !3690)
!3731 = !DILocation(line: 2307, column: 8, scope: !3690)
!3732 = !DILocation(line: 2307, column: 9, scope: !3690)
!3733 = !DILocation(line: 2308, column: 24, scope: !3690)
!3734 = !DILocation(line: 2308, column: 30, scope: !3690)
!3735 = !DILocation(line: 2308, column: 43, scope: !3690)
!3736 = !DILocation(line: 2308, column: 49, scope: !3690)
!3737 = !DILocation(line: 2308, column: 14, scope: !3690)
!3738 = !DILocation(line: 2308, column: 13, scope: !3690)
!3739 = !DILocation(line: 2309, column: 7, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3690, file: !1, line: 2309, column: 7)
!3741 = !DILocation(line: 2309, column: 18, scope: !3740)
!3742 = !DILocation(line: 2309, column: 7, scope: !3690)
!3743 = !DILocation(line: 2310, column: 5, scope: !3740)
!3744 = !DILocation(line: 2311, column: 23, scope: !3690)
!3745 = !DILocation(line: 2311, column: 29, scope: !3690)
!3746 = !DILocation(line: 2311, column: 36, scope: !3690)
!3747 = !DILocation(line: 2311, column: 3, scope: !3690)
!3748 = !DILocation(line: 2312, column: 3, scope: !3690)
!3749 = !DILocation(line: 2313, column: 1, scope: !3690)
!3750 = distinct !DISubprogram(name: "MagickCycleColormapImage", scope: !1, file: !1, line: 2342, type: !3751, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!807, !1143, !1666}
!3753 = !DILocalVariable(name: "wand", arg: 1, scope: !3750, file: !1, line: 2342, type: !1143)
!3754 = !DILocation(line: 2342, column: 67, scope: !3750)
!3755 = !DILocalVariable(name: "displace", arg: 2, scope: !3750, file: !1, line: 2343, type: !1666)
!3756 = !DILocation(line: 2343, column: 17, scope: !3750)
!3757 = !DILocalVariable(name: "status", scope: !3750, file: !1, line: 2346, type: !807)
!3758 = !DILocation(line: 2346, column: 5, scope: !3750)
!3759 = !DILocation(line: 2350, column: 7, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3750, file: !1, line: 2350, column: 7)
!3761 = !DILocation(line: 2350, column: 13, scope: !3760)
!3762 = !DILocation(line: 2350, column: 19, scope: !3760)
!3763 = !DILocation(line: 2350, column: 7, scope: !3750)
!3764 = !DILocation(line: 2351, column: 60, scope: !3760)
!3765 = !DILocation(line: 2351, column: 66, scope: !3760)
!3766 = !DILocation(line: 2351, column: 12, scope: !3760)
!3767 = !DILocation(line: 2351, column: 5, scope: !3760)
!3768 = !DILocation(line: 2352, column: 7, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3750, file: !1, line: 2352, column: 7)
!3770 = !DILocation(line: 2352, column: 13, scope: !3769)
!3771 = !DILocation(line: 2352, column: 20, scope: !3769)
!3772 = !DILocation(line: 2352, column: 7, scope: !3750)
!3773 = !DILocation(line: 2353, column: 5, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3769, file: !1, line: 2353, column: 5)
!3775 = !DILocation(line: 2354, column: 29, scope: !3750)
!3776 = !DILocation(line: 2354, column: 35, scope: !3750)
!3777 = !DILocation(line: 2354, column: 42, scope: !3750)
!3778 = !DILocation(line: 2354, column: 10, scope: !3750)
!3779 = !DILocation(line: 2354, column: 9, scope: !3750)
!3780 = !DILocation(line: 2355, column: 7, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3750, file: !1, line: 2355, column: 7)
!3782 = !DILocation(line: 2355, column: 14, scope: !3781)
!3783 = !DILocation(line: 2355, column: 7, scope: !3750)
!3784 = !DILocation(line: 2356, column: 22, scope: !3781)
!3785 = !DILocation(line: 2356, column: 28, scope: !3781)
!3786 = !DILocation(line: 2356, column: 39, scope: !3781)
!3787 = !DILocation(line: 2356, column: 45, scope: !3781)
!3788 = !DILocation(line: 2356, column: 53, scope: !3781)
!3789 = !DILocation(line: 2356, column: 5, scope: !3781)
!3790 = !DILocation(line: 2357, column: 10, scope: !3750)
!3791 = !DILocation(line: 2357, column: 3, scope: !3750)
!3792 = !DILocation(line: 2358, column: 1, scope: !3750)
!3793 = distinct !DISubprogram(name: "MagickConstituteImage", scope: !1, file: !1, line: 2411, type: !3794, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!807, !1143, !1214, !1214, !924, !3796, !1212}
!3796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3797)
!3797 = !DIDerivedType(tag: DW_TAG_typedef, name: "StorageType", file: !641, line: 35, baseType: !640)
!3798 = !DILocalVariable(name: "wand", arg: 1, scope: !3793, file: !1, line: 2411, type: !1143)
!3799 = !DILocation(line: 2411, column: 64, scope: !3793)
!3800 = !DILocalVariable(name: "columns", arg: 2, scope: !3793, file: !1, line: 2412, type: !1214)
!3801 = !DILocation(line: 2412, column: 16, scope: !3793)
!3802 = !DILocalVariable(name: "rows", arg: 3, scope: !3793, file: !1, line: 2412, type: !1214)
!3803 = !DILocation(line: 2412, column: 37, scope: !3793)
!3804 = !DILocalVariable(name: "map", arg: 4, scope: !3793, file: !1, line: 2412, type: !924)
!3805 = !DILocation(line: 2412, column: 54, scope: !3793)
!3806 = !DILocalVariable(name: "storage", arg: 5, scope: !3793, file: !1, line: 2413, type: !3796)
!3807 = !DILocation(line: 2413, column: 21, scope: !3793)
!3808 = !DILocalVariable(name: "pixels", arg: 6, scope: !3793, file: !1, line: 2413, type: !1212)
!3809 = !DILocation(line: 2413, column: 41, scope: !3793)
!3810 = !DILocalVariable(name: "images", scope: !3793, file: !1, line: 2416, type: !791)
!3811 = !DILocation(line: 2416, column: 6, scope: !3793)
!3812 = !DILocation(line: 2420, column: 7, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3793, file: !1, line: 2420, column: 7)
!3814 = !DILocation(line: 2420, column: 13, scope: !3813)
!3815 = !DILocation(line: 2420, column: 19, scope: !3813)
!3816 = !DILocation(line: 2420, column: 7, scope: !3793)
!3817 = !DILocation(line: 2421, column: 60, scope: !3813)
!3818 = !DILocation(line: 2421, column: 66, scope: !3813)
!3819 = !DILocation(line: 2421, column: 12, scope: !3813)
!3820 = !DILocation(line: 2421, column: 5, scope: !3813)
!3821 = !DILocation(line: 2422, column: 26, scope: !3793)
!3822 = !DILocation(line: 2422, column: 34, scope: !3793)
!3823 = !DILocation(line: 2422, column: 39, scope: !3793)
!3824 = !DILocation(line: 2422, column: 43, scope: !3793)
!3825 = !DILocation(line: 2422, column: 51, scope: !3793)
!3826 = !DILocation(line: 2422, column: 58, scope: !3793)
!3827 = !DILocation(line: 2422, column: 64, scope: !3793)
!3828 = !DILocation(line: 2422, column: 10, scope: !3793)
!3829 = !DILocation(line: 2422, column: 9, scope: !3793)
!3830 = !DILocation(line: 2423, column: 7, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3793, file: !1, line: 2423, column: 7)
!3832 = !DILocation(line: 2423, column: 14, scope: !3831)
!3833 = !DILocation(line: 2423, column: 7, scope: !3793)
!3834 = !DILocation(line: 2424, column: 5, scope: !3831)
!3835 = !DILocation(line: 2425, column: 28, scope: !3793)
!3836 = !DILocation(line: 2425, column: 33, scope: !3793)
!3837 = !DILocation(line: 2425, column: 10, scope: !3793)
!3838 = !DILocation(line: 2425, column: 3, scope: !3793)
!3839 = !DILocation(line: 2426, column: 1, scope: !3793)
!3840 = distinct !DISubprogram(name: "MagickDecipherImage", scope: !1, file: !1, line: 2453, type: !2074, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3841 = !DILocalVariable(name: "wand", arg: 1, scope: !3840, file: !1, line: 2453, type: !1143)
!3842 = !DILocation(line: 2453, column: 62, scope: !3840)
!3843 = !DILocalVariable(name: "passphrase", arg: 2, scope: !3840, file: !1, line: 2454, type: !924)
!3844 = !DILocation(line: 2454, column: 15, scope: !3840)
!3845 = !DILocation(line: 2458, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3840, file: !1, line: 2458, column: 7)
!3847 = !DILocation(line: 2458, column: 13, scope: !3846)
!3848 = !DILocation(line: 2458, column: 19, scope: !3846)
!3849 = !DILocation(line: 2458, column: 7, scope: !3840)
!3850 = !DILocation(line: 2459, column: 60, scope: !3846)
!3851 = !DILocation(line: 2459, column: 66, scope: !3846)
!3852 = !DILocation(line: 2459, column: 12, scope: !3846)
!3853 = !DILocation(line: 2459, column: 5, scope: !3846)
!3854 = !DILocation(line: 2460, column: 7, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3840, file: !1, line: 2460, column: 7)
!3856 = !DILocation(line: 2460, column: 13, scope: !3855)
!3857 = !DILocation(line: 2460, column: 20, scope: !3855)
!3858 = !DILocation(line: 2460, column: 7, scope: !3840)
!3859 = !DILocation(line: 2461, column: 5, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3855, file: !1, line: 2461, column: 5)
!3861 = !DILocation(line: 2462, column: 24, scope: !3840)
!3862 = !DILocation(line: 2462, column: 30, scope: !3840)
!3863 = !DILocation(line: 2462, column: 37, scope: !3840)
!3864 = !DILocation(line: 2462, column: 49, scope: !3840)
!3865 = !DILocation(line: 2462, column: 55, scope: !3840)
!3866 = !DILocation(line: 2462, column: 63, scope: !3840)
!3867 = !DILocation(line: 2462, column: 10, scope: !3840)
!3868 = !DILocation(line: 2462, column: 3, scope: !3840)
!3869 = !DILocation(line: 2463, column: 1, scope: !3840)
!3870 = distinct !DISubprogram(name: "MagickDeconstructImages", scope: !1, file: !1, line: 2489, type: !2940, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3871 = !DILocalVariable(name: "wand", arg: 1, scope: !3870, file: !1, line: 2489, type: !1143)
!3872 = !DILocation(line: 2489, column: 60, scope: !3870)
!3873 = !DILocalVariable(name: "deconstruct_image", scope: !3870, file: !1, line: 2492, type: !791)
!3874 = !DILocation(line: 2492, column: 6, scope: !3870)
!3875 = !DILocation(line: 2496, column: 7, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3870, file: !1, line: 2496, column: 7)
!3877 = !DILocation(line: 2496, column: 13, scope: !3876)
!3878 = !DILocation(line: 2496, column: 19, scope: !3876)
!3879 = !DILocation(line: 2496, column: 7, scope: !3870)
!3880 = !DILocation(line: 2497, column: 60, scope: !3876)
!3881 = !DILocation(line: 2497, column: 66, scope: !3876)
!3882 = !DILocation(line: 2497, column: 12, scope: !3876)
!3883 = !DILocation(line: 2497, column: 5, scope: !3876)
!3884 = !DILocation(line: 2498, column: 7, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3870, file: !1, line: 2498, column: 7)
!3886 = !DILocation(line: 2498, column: 13, scope: !3885)
!3887 = !DILocation(line: 2498, column: 20, scope: !3885)
!3888 = !DILocation(line: 2498, column: 7, scope: !3870)
!3889 = !DILocation(line: 2499, column: 5, scope: !3885)
!3890 = !DILocation(line: 2500, column: 39, scope: !3870)
!3891 = !DILocation(line: 2500, column: 45, scope: !3870)
!3892 = !DILocation(line: 2500, column: 52, scope: !3870)
!3893 = !DILocation(line: 2500, column: 58, scope: !3870)
!3894 = !DILocation(line: 2500, column: 21, scope: !3870)
!3895 = !DILocation(line: 2500, column: 20, scope: !3870)
!3896 = !DILocation(line: 2501, column: 7, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3870, file: !1, line: 2501, column: 7)
!3898 = !DILocation(line: 2501, column: 25, scope: !3897)
!3899 = !DILocation(line: 2501, column: 7, scope: !3870)
!3900 = !DILocation(line: 2502, column: 5, scope: !3897)
!3901 = !DILocation(line: 2503, column: 36, scope: !3870)
!3902 = !DILocation(line: 2503, column: 41, scope: !3870)
!3903 = !DILocation(line: 2503, column: 10, scope: !3870)
!3904 = !DILocation(line: 2503, column: 3, scope: !3870)
!3905 = !DILocation(line: 2504, column: 1, scope: !3870)
!3906 = distinct !DISubprogram(name: "MagickDeskewImage", scope: !1, file: !1, line: 2534, type: !2403, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3907 = !DILocalVariable(name: "wand", arg: 1, scope: !3906, file: !1, line: 2534, type: !1143)
!3908 = !DILocation(line: 2534, column: 60, scope: !3906)
!3909 = !DILocalVariable(name: "threshold", arg: 2, scope: !3906, file: !1, line: 2535, type: !1325)
!3910 = !DILocation(line: 2535, column: 16, scope: !3906)
!3911 = !DILocalVariable(name: "sepia_image", scope: !3906, file: !1, line: 2538, type: !791)
!3912 = !DILocation(line: 2538, column: 6, scope: !3906)
!3913 = !DILocation(line: 2542, column: 7, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 2542, column: 7)
!3915 = !DILocation(line: 2542, column: 13, scope: !3914)
!3916 = !DILocation(line: 2542, column: 19, scope: !3914)
!3917 = !DILocation(line: 2542, column: 7, scope: !3906)
!3918 = !DILocation(line: 2543, column: 60, scope: !3914)
!3919 = !DILocation(line: 2543, column: 66, scope: !3914)
!3920 = !DILocation(line: 2543, column: 12, scope: !3914)
!3921 = !DILocation(line: 2543, column: 5, scope: !3914)
!3922 = !DILocation(line: 2544, column: 7, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 2544, column: 7)
!3924 = !DILocation(line: 2544, column: 13, scope: !3923)
!3925 = !DILocation(line: 2544, column: 20, scope: !3923)
!3926 = !DILocation(line: 2544, column: 7, scope: !3906)
!3927 = !DILocation(line: 2545, column: 5, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3923, file: !1, line: 2545, column: 5)
!3929 = !DILocation(line: 2546, column: 27, scope: !3906)
!3930 = !DILocation(line: 2546, column: 33, scope: !3906)
!3931 = !DILocation(line: 2546, column: 40, scope: !3906)
!3932 = !DILocation(line: 2546, column: 50, scope: !3906)
!3933 = !DILocation(line: 2546, column: 56, scope: !3906)
!3934 = !DILocation(line: 2546, column: 15, scope: !3906)
!3935 = !DILocation(line: 2546, column: 14, scope: !3906)
!3936 = !DILocation(line: 2547, column: 7, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 2547, column: 7)
!3938 = !DILocation(line: 2547, column: 19, scope: !3937)
!3939 = !DILocation(line: 2547, column: 7, scope: !3906)
!3940 = !DILocation(line: 2548, column: 5, scope: !3937)
!3941 = !DILocation(line: 2549, column: 23, scope: !3906)
!3942 = !DILocation(line: 2549, column: 29, scope: !3906)
!3943 = !DILocation(line: 2549, column: 36, scope: !3906)
!3944 = !DILocation(line: 2549, column: 3, scope: !3906)
!3945 = !DILocation(line: 2550, column: 3, scope: !3906)
!3946 = !DILocation(line: 2551, column: 1, scope: !3906)
!3947 = distinct !DISubprogram(name: "MagickDespeckleImage", scope: !1, file: !1, line: 2576, type: !2240, scopeLine: 2577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3948 = !DILocalVariable(name: "wand", arg: 1, scope: !3947, file: !1, line: 2576, type: !1143)
!3949 = !DILocation(line: 2576, column: 63, scope: !3947)
!3950 = !DILocalVariable(name: "despeckle_image", scope: !3947, file: !1, line: 2579, type: !791)
!3951 = !DILocation(line: 2579, column: 6, scope: !3947)
!3952 = !DILocation(line: 2583, column: 7, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3947, file: !1, line: 2583, column: 7)
!3954 = !DILocation(line: 2583, column: 13, scope: !3953)
!3955 = !DILocation(line: 2583, column: 19, scope: !3953)
!3956 = !DILocation(line: 2583, column: 7, scope: !3947)
!3957 = !DILocation(line: 2584, column: 60, scope: !3953)
!3958 = !DILocation(line: 2584, column: 66, scope: !3953)
!3959 = !DILocation(line: 2584, column: 12, scope: !3953)
!3960 = !DILocation(line: 2584, column: 5, scope: !3953)
!3961 = !DILocation(line: 2585, column: 7, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3947, file: !1, line: 2585, column: 7)
!3963 = !DILocation(line: 2585, column: 13, scope: !3962)
!3964 = !DILocation(line: 2585, column: 20, scope: !3962)
!3965 = !DILocation(line: 2585, column: 7, scope: !3947)
!3966 = !DILocation(line: 2586, column: 5, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3962, file: !1, line: 2586, column: 5)
!3968 = !DILocation(line: 2587, column: 34, scope: !3947)
!3969 = !DILocation(line: 2587, column: 40, scope: !3947)
!3970 = !DILocation(line: 2587, column: 47, scope: !3947)
!3971 = !DILocation(line: 2587, column: 53, scope: !3947)
!3972 = !DILocation(line: 2587, column: 19, scope: !3947)
!3973 = !DILocation(line: 2587, column: 18, scope: !3947)
!3974 = !DILocation(line: 2588, column: 7, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3947, file: !1, line: 2588, column: 7)
!3976 = !DILocation(line: 2588, column: 23, scope: !3975)
!3977 = !DILocation(line: 2588, column: 7, scope: !3947)
!3978 = !DILocation(line: 2589, column: 5, scope: !3975)
!3979 = !DILocation(line: 2590, column: 23, scope: !3947)
!3980 = !DILocation(line: 2590, column: 29, scope: !3947)
!3981 = !DILocation(line: 2590, column: 36, scope: !3947)
!3982 = !DILocation(line: 2590, column: 3, scope: !3947)
!3983 = !DILocation(line: 2591, column: 3, scope: !3947)
!3984 = !DILocation(line: 2592, column: 1, scope: !3947)
!3985 = distinct !DISubprogram(name: "MagickDestroyImage", scope: !1, file: !1, line: 2617, type: !3986, scopeLine: 2618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!791, !791}
!3988 = !DILocalVariable(name: "image", arg: 1, scope: !3985, file: !1, line: 2617, type: !791)
!3989 = !DILocation(line: 2617, column: 45, scope: !3985)
!3990 = !DILocation(line: 2619, column: 23, scope: !3985)
!3991 = !DILocation(line: 2619, column: 10, scope: !3985)
!3992 = !DILocation(line: 2619, column: 3, scope: !3985)
!3993 = distinct !DISubprogram(name: "MagickDisplayImage", scope: !1, file: !1, line: 2647, type: !2074, scopeLine: 2649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!3994 = !DILocalVariable(name: "wand", arg: 1, scope: !3993, file: !1, line: 2647, type: !1143)
!3995 = !DILocation(line: 2647, column: 61, scope: !3993)
!3996 = !DILocalVariable(name: "server_name", arg: 2, scope: !3993, file: !1, line: 2648, type: !924)
!3997 = !DILocation(line: 2648, column: 15, scope: !3993)
!3998 = !DILocalVariable(name: "image", scope: !3993, file: !1, line: 2651, type: !791)
!3999 = !DILocation(line: 2651, column: 6, scope: !3993)
!4000 = !DILocalVariable(name: "status", scope: !3993, file: !1, line: 2654, type: !807)
!4001 = !DILocation(line: 2654, column: 5, scope: !3993)
!4002 = !DILocation(line: 2658, column: 7, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 2658, column: 7)
!4004 = !DILocation(line: 2658, column: 13, scope: !4003)
!4005 = !DILocation(line: 2658, column: 19, scope: !4003)
!4006 = !DILocation(line: 2658, column: 7, scope: !3993)
!4007 = !DILocation(line: 2659, column: 60, scope: !4003)
!4008 = !DILocation(line: 2659, column: 66, scope: !4003)
!4009 = !DILocation(line: 2659, column: 12, scope: !4003)
!4010 = !DILocation(line: 2659, column: 5, scope: !4003)
!4011 = !DILocation(line: 2660, column: 7, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 2660, column: 7)
!4013 = !DILocation(line: 2660, column: 13, scope: !4012)
!4014 = !DILocation(line: 2660, column: 20, scope: !4012)
!4015 = !DILocation(line: 2660, column: 7, scope: !3993)
!4016 = !DILocation(line: 2661, column: 5, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4012, file: !1, line: 2661, column: 5)
!4018 = !DILocation(line: 2662, column: 20, scope: !3993)
!4019 = !DILocation(line: 2662, column: 26, scope: !3993)
!4020 = !DILocation(line: 2662, column: 48, scope: !3993)
!4021 = !DILocation(line: 2662, column: 54, scope: !3993)
!4022 = !DILocation(line: 2662, column: 9, scope: !3993)
!4023 = !DILocation(line: 2662, column: 8, scope: !3993)
!4024 = !DILocation(line: 2663, column: 7, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 2663, column: 7)
!4026 = !DILocation(line: 2663, column: 13, scope: !4025)
!4027 = !DILocation(line: 2663, column: 7, scope: !3993)
!4028 = !DILocation(line: 2664, column: 5, scope: !4025)
!4029 = !DILocation(line: 2665, column: 23, scope: !3993)
!4030 = !DILocation(line: 2665, column: 29, scope: !3993)
!4031 = !DILocation(line: 2665, column: 41, scope: !3993)
!4032 = !DILocation(line: 2665, column: 53, scope: !3993)
!4033 = !DILocation(line: 2665, column: 10, scope: !3993)
!4034 = !DILocation(line: 2666, column: 24, scope: !3993)
!4035 = !DILocation(line: 2666, column: 30, scope: !3993)
!4036 = !DILocation(line: 2666, column: 41, scope: !3993)
!4037 = !DILocation(line: 2666, column: 10, scope: !3993)
!4038 = !DILocation(line: 2666, column: 9, scope: !3993)
!4039 = !DILocation(line: 2667, column: 7, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 2667, column: 7)
!4041 = !DILocation(line: 2667, column: 14, scope: !4040)
!4042 = !DILocation(line: 2667, column: 7, scope: !3993)
!4043 = !DILocation(line: 2668, column: 22, scope: !4040)
!4044 = !DILocation(line: 2668, column: 28, scope: !4040)
!4045 = !DILocation(line: 2668, column: 39, scope: !4040)
!4046 = !DILocation(line: 2668, column: 46, scope: !4040)
!4047 = !DILocation(line: 2668, column: 5, scope: !4040)
!4048 = !DILocation(line: 2669, column: 22, scope: !3993)
!4049 = !DILocation(line: 2669, column: 9, scope: !3993)
!4050 = !DILocation(line: 2669, column: 8, scope: !3993)
!4051 = !DILocation(line: 2670, column: 10, scope: !3993)
!4052 = !DILocation(line: 2670, column: 3, scope: !3993)
!4053 = !DILocation(line: 2671, column: 1, scope: !3993)
!4054 = distinct !DISubprogram(name: "MagickDisplayImages", scope: !1, file: !1, line: 2698, type: !2074, scopeLine: 2700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4055 = !DILocalVariable(name: "wand", arg: 1, scope: !4054, file: !1, line: 2698, type: !1143)
!4056 = !DILocation(line: 2698, column: 62, scope: !4054)
!4057 = !DILocalVariable(name: "server_name", arg: 2, scope: !4054, file: !1, line: 2699, type: !924)
!4058 = !DILocation(line: 2699, column: 15, scope: !4054)
!4059 = !DILocalVariable(name: "status", scope: !4054, file: !1, line: 2702, type: !807)
!4060 = !DILocation(line: 2702, column: 5, scope: !4054)
!4061 = !DILocation(line: 2706, column: 7, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4054, file: !1, line: 2706, column: 7)
!4063 = !DILocation(line: 2706, column: 13, scope: !4062)
!4064 = !DILocation(line: 2706, column: 19, scope: !4062)
!4065 = !DILocation(line: 2706, column: 7, scope: !4054)
!4066 = !DILocation(line: 2707, column: 60, scope: !4062)
!4067 = !DILocation(line: 2707, column: 66, scope: !4062)
!4068 = !DILocation(line: 2707, column: 12, scope: !4062)
!4069 = !DILocation(line: 2707, column: 5, scope: !4062)
!4070 = !DILocation(line: 2708, column: 23, scope: !4054)
!4071 = !DILocation(line: 2708, column: 29, scope: !4054)
!4072 = !DILocation(line: 2708, column: 41, scope: !4054)
!4073 = !DILocation(line: 2708, column: 53, scope: !4054)
!4074 = !DILocation(line: 2708, column: 10, scope: !4054)
!4075 = !DILocation(line: 2709, column: 24, scope: !4054)
!4076 = !DILocation(line: 2709, column: 30, scope: !4054)
!4077 = !DILocation(line: 2709, column: 41, scope: !4054)
!4078 = !DILocation(line: 2709, column: 47, scope: !4054)
!4079 = !DILocation(line: 2709, column: 10, scope: !4054)
!4080 = !DILocation(line: 2709, column: 9, scope: !4054)
!4081 = !DILocation(line: 2710, column: 7, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4054, file: !1, line: 2710, column: 7)
!4083 = !DILocation(line: 2710, column: 14, scope: !4082)
!4084 = !DILocation(line: 2710, column: 7, scope: !4054)
!4085 = !DILocation(line: 2711, column: 22, scope: !4082)
!4086 = !DILocation(line: 2711, column: 28, scope: !4082)
!4087 = !DILocation(line: 2711, column: 39, scope: !4082)
!4088 = !DILocation(line: 2711, column: 45, scope: !4082)
!4089 = !DILocation(line: 2711, column: 53, scope: !4082)
!4090 = !DILocation(line: 2711, column: 5, scope: !4082)
!4091 = !DILocation(line: 2712, column: 10, scope: !4054)
!4092 = !DILocation(line: 2712, column: 3, scope: !4054)
!4093 = distinct !DISubprogram(name: "MagickDistortImage", scope: !1, file: !1, line: 2775, type: !4094, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!807, !1143, !4096, !1214, !1324, !2117}
!4096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4097)
!4097 = !DIDerivedType(tag: DW_TAG_typedef, name: "DistortImageMethod", file: !652, line: 56, baseType: !651)
!4098 = !DILocalVariable(name: "wand", arg: 1, scope: !4093, file: !1, line: 2775, type: !1143)
!4099 = !DILocation(line: 2775, column: 61, scope: !4093)
!4100 = !DILocalVariable(name: "method", arg: 2, scope: !4093, file: !1, line: 2776, type: !4096)
!4101 = !DILocation(line: 2776, column: 28, scope: !4093)
!4102 = !DILocalVariable(name: "number_arguments", arg: 3, scope: !4093, file: !1, line: 2776, type: !1214)
!4103 = !DILocation(line: 2776, column: 48, scope: !4093)
!4104 = !DILocalVariable(name: "arguments", arg: 4, scope: !4093, file: !1, line: 2777, type: !1324)
!4105 = !DILocation(line: 2777, column: 17, scope: !4093)
!4106 = !DILocalVariable(name: "bestfit", arg: 5, scope: !4093, file: !1, line: 2777, type: !2117)
!4107 = !DILocation(line: 2777, column: 51, scope: !4093)
!4108 = !DILocalVariable(name: "distort_image", scope: !4093, file: !1, line: 2780, type: !791)
!4109 = !DILocation(line: 2780, column: 6, scope: !4093)
!4110 = !DILocation(line: 2784, column: 7, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 2784, column: 7)
!4112 = !DILocation(line: 2784, column: 13, scope: !4111)
!4113 = !DILocation(line: 2784, column: 19, scope: !4111)
!4114 = !DILocation(line: 2784, column: 7, scope: !4093)
!4115 = !DILocation(line: 2785, column: 60, scope: !4111)
!4116 = !DILocation(line: 2785, column: 66, scope: !4111)
!4117 = !DILocation(line: 2785, column: 12, scope: !4111)
!4118 = !DILocation(line: 2785, column: 5, scope: !4111)
!4119 = !DILocation(line: 2786, column: 7, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 2786, column: 7)
!4121 = !DILocation(line: 2786, column: 13, scope: !4120)
!4122 = !DILocation(line: 2786, column: 20, scope: !4120)
!4123 = !DILocation(line: 2786, column: 7, scope: !4093)
!4124 = !DILocation(line: 2787, column: 5, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4120, file: !1, line: 2787, column: 5)
!4126 = !DILocation(line: 2788, column: 30, scope: !4093)
!4127 = !DILocation(line: 2788, column: 36, scope: !4093)
!4128 = !DILocation(line: 2788, column: 43, scope: !4093)
!4129 = !DILocation(line: 2788, column: 50, scope: !4093)
!4130 = !DILocation(line: 2788, column: 67, scope: !4093)
!4131 = !DILocation(line: 2789, column: 5, scope: !4093)
!4132 = !DILocation(line: 2789, column: 13, scope: !4093)
!4133 = !DILocation(line: 2789, column: 19, scope: !4093)
!4134 = !DILocation(line: 2788, column: 17, scope: !4093)
!4135 = !DILocation(line: 2788, column: 16, scope: !4093)
!4136 = !DILocation(line: 2790, column: 7, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 2790, column: 7)
!4138 = !DILocation(line: 2790, column: 21, scope: !4137)
!4139 = !DILocation(line: 2790, column: 7, scope: !4093)
!4140 = !DILocation(line: 2791, column: 5, scope: !4137)
!4141 = !DILocation(line: 2792, column: 23, scope: !4093)
!4142 = !DILocation(line: 2792, column: 29, scope: !4093)
!4143 = !DILocation(line: 2792, column: 36, scope: !4093)
!4144 = !DILocation(line: 2792, column: 3, scope: !4093)
!4145 = !DILocation(line: 2793, column: 3, scope: !4093)
!4146 = !DILocation(line: 2794, column: 1, scope: !4093)
!4147 = distinct !DISubprogram(name: "MagickDrawImage", scope: !1, file: !1, line: 2821, type: !1891, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4148 = !DILocalVariable(name: "wand", arg: 1, scope: !4147, file: !1, line: 2821, type: !1143)
!4149 = !DILocation(line: 2821, column: 58, scope: !4147)
!4150 = !DILocalVariable(name: "drawing_wand", arg: 2, scope: !4147, file: !1, line: 2822, type: !1893)
!4151 = !DILocation(line: 2822, column: 22, scope: !4147)
!4152 = !DILocalVariable(name: "primitive", scope: !4147, file: !1, line: 2825, type: !850)
!4153 = !DILocation(line: 2825, column: 6, scope: !4147)
!4154 = !DILocalVariable(name: "draw_info", scope: !4147, file: !1, line: 2828, type: !1012)
!4155 = !DILocation(line: 2828, column: 6, scope: !4147)
!4156 = !DILocalVariable(name: "status", scope: !4147, file: !1, line: 2831, type: !807)
!4157 = !DILocation(line: 2831, column: 5, scope: !4147)
!4158 = !DILocation(line: 2835, column: 7, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 2835, column: 7)
!4160 = !DILocation(line: 2835, column: 13, scope: !4159)
!4161 = !DILocation(line: 2835, column: 19, scope: !4159)
!4162 = !DILocation(line: 2835, column: 7, scope: !4147)
!4163 = !DILocation(line: 2836, column: 60, scope: !4159)
!4164 = !DILocation(line: 2836, column: 66, scope: !4159)
!4165 = !DILocation(line: 2836, column: 12, scope: !4159)
!4166 = !DILocation(line: 2836, column: 5, scope: !4159)
!4167 = !DILocation(line: 2837, column: 7, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 2837, column: 7)
!4169 = !DILocation(line: 2837, column: 13, scope: !4168)
!4170 = !DILocation(line: 2837, column: 20, scope: !4168)
!4171 = !DILocation(line: 2837, column: 7, scope: !4147)
!4172 = !DILocation(line: 2838, column: 5, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4168, file: !1, line: 2838, column: 5)
!4174 = !DILocation(line: 2839, column: 29, scope: !4147)
!4175 = !DILocation(line: 2839, column: 13, scope: !4147)
!4176 = !DILocation(line: 2839, column: 12, scope: !4147)
!4177 = !DILocation(line: 2840, column: 8, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 2840, column: 7)
!4179 = !DILocation(line: 2840, column: 18, scope: !4178)
!4180 = !DILocation(line: 2840, column: 40, scope: !4178)
!4181 = !DILocation(line: 2841, column: 8, scope: !4178)
!4182 = !DILocation(line: 2841, column: 19, scope: !4178)
!4183 = !DILocation(line: 2841, column: 29, scope: !4178)
!4184 = !DILocation(line: 2840, column: 7, scope: !4147)
!4185 = !DILocation(line: 2842, column: 5, scope: !4178)
!4186 = !DILocation(line: 2843, column: 27, scope: !4147)
!4187 = !DILocation(line: 2843, column: 38, scope: !4147)
!4188 = !DILocation(line: 2843, column: 13, scope: !4147)
!4189 = !DILocation(line: 2843, column: 12, scope: !4147)
!4190 = !DILocation(line: 2844, column: 29, scope: !4147)
!4191 = !DILocation(line: 2844, column: 13, scope: !4147)
!4192 = !DILocation(line: 2844, column: 12, scope: !4147)
!4193 = !DILocation(line: 2845, column: 27, scope: !4147)
!4194 = !DILocation(line: 2845, column: 33, scope: !4147)
!4195 = !DILocation(line: 2845, column: 13, scope: !4147)
!4196 = !DILocation(line: 2845, column: 12, scope: !4147)
!4197 = !DILocation(line: 2846, column: 24, scope: !4147)
!4198 = !DILocation(line: 2846, column: 3, scope: !4147)
!4199 = !DILocation(line: 2846, column: 14, scope: !4147)
!4200 = !DILocation(line: 2846, column: 23, scope: !4147)
!4201 = !DILocation(line: 2847, column: 20, scope: !4147)
!4202 = !DILocation(line: 2847, column: 26, scope: !4147)
!4203 = !DILocation(line: 2847, column: 33, scope: !4147)
!4204 = !DILocation(line: 2847, column: 10, scope: !4147)
!4205 = !DILocation(line: 2847, column: 9, scope: !4147)
!4206 = !DILocation(line: 2848, column: 7, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 2848, column: 7)
!4208 = !DILocation(line: 2848, column: 14, scope: !4207)
!4209 = !DILocation(line: 2848, column: 7, scope: !4147)
!4210 = !DILocation(line: 2849, column: 22, scope: !4207)
!4211 = !DILocation(line: 2849, column: 28, scope: !4207)
!4212 = !DILocation(line: 2849, column: 39, scope: !4207)
!4213 = !DILocation(line: 2849, column: 45, scope: !4207)
!4214 = !DILocation(line: 2849, column: 53, scope: !4207)
!4215 = !DILocation(line: 2849, column: 5, scope: !4207)
!4216 = !DILocation(line: 2850, column: 29, scope: !4147)
!4217 = !DILocation(line: 2850, column: 13, scope: !4147)
!4218 = !DILocation(line: 2850, column: 12, scope: !4147)
!4219 = !DILocation(line: 2851, column: 10, scope: !4147)
!4220 = !DILocation(line: 2851, column: 3, scope: !4147)
!4221 = !DILocation(line: 2852, column: 1, scope: !4147)
!4222 = distinct !DISubprogram(name: "MagickEdgeImage", scope: !1, file: !1, line: 2880, type: !2403, scopeLine: 2882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4223 = !DILocalVariable(name: "wand", arg: 1, scope: !4222, file: !1, line: 2880, type: !1143)
!4224 = !DILocation(line: 2880, column: 58, scope: !4222)
!4225 = !DILocalVariable(name: "radius", arg: 2, scope: !4222, file: !1, line: 2881, type: !1325)
!4226 = !DILocation(line: 2881, column: 16, scope: !4222)
!4227 = !DILocalVariable(name: "edge_image", scope: !4222, file: !1, line: 2884, type: !791)
!4228 = !DILocation(line: 2884, column: 6, scope: !4222)
!4229 = !DILocation(line: 2888, column: 7, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 2888, column: 7)
!4231 = !DILocation(line: 2888, column: 13, scope: !4230)
!4232 = !DILocation(line: 2888, column: 19, scope: !4230)
!4233 = !DILocation(line: 2888, column: 7, scope: !4222)
!4234 = !DILocation(line: 2889, column: 60, scope: !4230)
!4235 = !DILocation(line: 2889, column: 66, scope: !4230)
!4236 = !DILocation(line: 2889, column: 12, scope: !4230)
!4237 = !DILocation(line: 2889, column: 5, scope: !4230)
!4238 = !DILocation(line: 2890, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 2890, column: 7)
!4240 = !DILocation(line: 2890, column: 13, scope: !4239)
!4241 = !DILocation(line: 2890, column: 20, scope: !4239)
!4242 = !DILocation(line: 2890, column: 7, scope: !4222)
!4243 = !DILocation(line: 2891, column: 5, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4239, file: !1, line: 2891, column: 5)
!4245 = !DILocation(line: 2892, column: 24, scope: !4222)
!4246 = !DILocation(line: 2892, column: 30, scope: !4222)
!4247 = !DILocation(line: 2892, column: 37, scope: !4222)
!4248 = !DILocation(line: 2892, column: 44, scope: !4222)
!4249 = !DILocation(line: 2892, column: 50, scope: !4222)
!4250 = !DILocation(line: 2892, column: 14, scope: !4222)
!4251 = !DILocation(line: 2892, column: 13, scope: !4222)
!4252 = !DILocation(line: 2893, column: 7, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 2893, column: 7)
!4254 = !DILocation(line: 2893, column: 18, scope: !4253)
!4255 = !DILocation(line: 2893, column: 7, scope: !4222)
!4256 = !DILocation(line: 2894, column: 5, scope: !4253)
!4257 = !DILocation(line: 2895, column: 23, scope: !4222)
!4258 = !DILocation(line: 2895, column: 29, scope: !4222)
!4259 = !DILocation(line: 2895, column: 36, scope: !4222)
!4260 = !DILocation(line: 2895, column: 3, scope: !4222)
!4261 = !DILocation(line: 2896, column: 3, scope: !4222)
!4262 = !DILocation(line: 2897, column: 1, scope: !4222)
!4263 = distinct !DISubprogram(name: "MagickEmbossImage", scope: !1, file: !1, line: 2931, type: !1487, scopeLine: 2933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4264 = !DILocalVariable(name: "wand", arg: 1, scope: !4263, file: !1, line: 2931, type: !1143)
!4265 = !DILocation(line: 2931, column: 60, scope: !4263)
!4266 = !DILocalVariable(name: "radius", arg: 2, scope: !4263, file: !1, line: 2932, type: !1325)
!4267 = !DILocation(line: 2932, column: 16, scope: !4263)
!4268 = !DILocalVariable(name: "sigma", arg: 3, scope: !4263, file: !1, line: 2932, type: !1325)
!4269 = !DILocation(line: 2932, column: 36, scope: !4263)
!4270 = !DILocalVariable(name: "emboss_image", scope: !4263, file: !1, line: 2935, type: !791)
!4271 = !DILocation(line: 2935, column: 6, scope: !4263)
!4272 = !DILocation(line: 2939, column: 7, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 2939, column: 7)
!4274 = !DILocation(line: 2939, column: 13, scope: !4273)
!4275 = !DILocation(line: 2939, column: 19, scope: !4273)
!4276 = !DILocation(line: 2939, column: 7, scope: !4263)
!4277 = !DILocation(line: 2940, column: 60, scope: !4273)
!4278 = !DILocation(line: 2940, column: 66, scope: !4273)
!4279 = !DILocation(line: 2940, column: 12, scope: !4273)
!4280 = !DILocation(line: 2940, column: 5, scope: !4273)
!4281 = !DILocation(line: 2941, column: 7, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 2941, column: 7)
!4283 = !DILocation(line: 2941, column: 13, scope: !4282)
!4284 = !DILocation(line: 2941, column: 20, scope: !4282)
!4285 = !DILocation(line: 2941, column: 7, scope: !4263)
!4286 = !DILocation(line: 2942, column: 5, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4282, file: !1, line: 2942, column: 5)
!4288 = !DILocation(line: 2943, column: 28, scope: !4263)
!4289 = !DILocation(line: 2943, column: 34, scope: !4263)
!4290 = !DILocation(line: 2943, column: 41, scope: !4263)
!4291 = !DILocation(line: 2943, column: 48, scope: !4263)
!4292 = !DILocation(line: 2943, column: 54, scope: !4263)
!4293 = !DILocation(line: 2943, column: 60, scope: !4263)
!4294 = !DILocation(line: 2943, column: 16, scope: !4263)
!4295 = !DILocation(line: 2943, column: 15, scope: !4263)
!4296 = !DILocation(line: 2944, column: 7, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4263, file: !1, line: 2944, column: 7)
!4298 = !DILocation(line: 2944, column: 20, scope: !4297)
!4299 = !DILocation(line: 2944, column: 7, scope: !4263)
!4300 = !DILocation(line: 2945, column: 5, scope: !4297)
!4301 = !DILocation(line: 2946, column: 23, scope: !4263)
!4302 = !DILocation(line: 2946, column: 29, scope: !4263)
!4303 = !DILocation(line: 2946, column: 36, scope: !4263)
!4304 = !DILocation(line: 2946, column: 3, scope: !4263)
!4305 = !DILocation(line: 2947, column: 3, scope: !4263)
!4306 = !DILocation(line: 2948, column: 1, scope: !4263)
!4307 = distinct !DISubprogram(name: "MagickEncipherImage", scope: !1, file: !1, line: 2975, type: !2074, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4308 = !DILocalVariable(name: "wand", arg: 1, scope: !4307, file: !1, line: 2975, type: !1143)
!4309 = !DILocation(line: 2975, column: 62, scope: !4307)
!4310 = !DILocalVariable(name: "passphrase", arg: 2, scope: !4307, file: !1, line: 2976, type: !924)
!4311 = !DILocation(line: 2976, column: 15, scope: !4307)
!4312 = !DILocation(line: 2980, column: 7, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 2980, column: 7)
!4314 = !DILocation(line: 2980, column: 13, scope: !4313)
!4315 = !DILocation(line: 2980, column: 19, scope: !4313)
!4316 = !DILocation(line: 2980, column: 7, scope: !4307)
!4317 = !DILocation(line: 2981, column: 60, scope: !4313)
!4318 = !DILocation(line: 2981, column: 66, scope: !4313)
!4319 = !DILocation(line: 2981, column: 12, scope: !4313)
!4320 = !DILocation(line: 2981, column: 5, scope: !4313)
!4321 = !DILocation(line: 2982, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 2982, column: 7)
!4323 = !DILocation(line: 2982, column: 13, scope: !4322)
!4324 = !DILocation(line: 2982, column: 20, scope: !4322)
!4325 = !DILocation(line: 2982, column: 7, scope: !4307)
!4326 = !DILocation(line: 2983, column: 5, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4322, file: !1, line: 2983, column: 5)
!4328 = !DILocation(line: 2984, column: 24, scope: !4307)
!4329 = !DILocation(line: 2984, column: 30, scope: !4307)
!4330 = !DILocation(line: 2984, column: 37, scope: !4307)
!4331 = !DILocation(line: 2984, column: 49, scope: !4307)
!4332 = !DILocation(line: 2984, column: 55, scope: !4307)
!4333 = !DILocation(line: 2984, column: 63, scope: !4307)
!4334 = !DILocation(line: 2984, column: 10, scope: !4307)
!4335 = !DILocation(line: 2984, column: 3, scope: !4307)
!4336 = !DILocation(line: 2985, column: 1, scope: !4307)
!4337 = distinct !DISubprogram(name: "MagickEnhanceImage", scope: !1, file: !1, line: 3010, type: !2240, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4338 = !DILocalVariable(name: "wand", arg: 1, scope: !4337, file: !1, line: 3010, type: !1143)
!4339 = !DILocation(line: 3010, column: 61, scope: !4337)
!4340 = !DILocalVariable(name: "enhance_image", scope: !4337, file: !1, line: 3013, type: !791)
!4341 = !DILocation(line: 3013, column: 6, scope: !4337)
!4342 = !DILocation(line: 3017, column: 7, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 3017, column: 7)
!4344 = !DILocation(line: 3017, column: 13, scope: !4343)
!4345 = !DILocation(line: 3017, column: 19, scope: !4343)
!4346 = !DILocation(line: 3017, column: 7, scope: !4337)
!4347 = !DILocation(line: 3018, column: 60, scope: !4343)
!4348 = !DILocation(line: 3018, column: 66, scope: !4343)
!4349 = !DILocation(line: 3018, column: 12, scope: !4343)
!4350 = !DILocation(line: 3018, column: 5, scope: !4343)
!4351 = !DILocation(line: 3019, column: 7, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 3019, column: 7)
!4353 = !DILocation(line: 3019, column: 13, scope: !4352)
!4354 = !DILocation(line: 3019, column: 20, scope: !4352)
!4355 = !DILocation(line: 3019, column: 7, scope: !4337)
!4356 = !DILocation(line: 3020, column: 5, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4352, file: !1, line: 3020, column: 5)
!4358 = !DILocation(line: 3021, column: 30, scope: !4337)
!4359 = !DILocation(line: 3021, column: 36, scope: !4337)
!4360 = !DILocation(line: 3021, column: 43, scope: !4337)
!4361 = !DILocation(line: 3021, column: 49, scope: !4337)
!4362 = !DILocation(line: 3021, column: 17, scope: !4337)
!4363 = !DILocation(line: 3021, column: 16, scope: !4337)
!4364 = !DILocation(line: 3022, column: 7, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 3022, column: 7)
!4366 = !DILocation(line: 3022, column: 21, scope: !4365)
!4367 = !DILocation(line: 3022, column: 7, scope: !4337)
!4368 = !DILocation(line: 3023, column: 5, scope: !4365)
!4369 = !DILocation(line: 3024, column: 23, scope: !4337)
!4370 = !DILocation(line: 3024, column: 29, scope: !4337)
!4371 = !DILocation(line: 3024, column: 36, scope: !4337)
!4372 = !DILocation(line: 3024, column: 3, scope: !4337)
!4373 = !DILocation(line: 3025, column: 3, scope: !4337)
!4374 = !DILocation(line: 3026, column: 1, scope: !4337)
!4375 = distinct !DISubprogram(name: "MagickEqualizeImage", scope: !1, file: !1, line: 3055, type: !2240, scopeLine: 3056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4376 = !DILocalVariable(name: "wand", arg: 1, scope: !4375, file: !1, line: 3055, type: !1143)
!4377 = !DILocation(line: 3055, column: 62, scope: !4375)
!4378 = !DILocalVariable(name: "status", scope: !4375, file: !1, line: 3058, type: !807)
!4379 = !DILocation(line: 3058, column: 5, scope: !4375)
!4380 = !DILocation(line: 3060, column: 37, scope: !4375)
!4381 = !DILocation(line: 3060, column: 10, scope: !4375)
!4382 = !DILocation(line: 3060, column: 9, scope: !4375)
!4383 = !DILocation(line: 3061, column: 10, scope: !4375)
!4384 = !DILocation(line: 3061, column: 3, scope: !4375)
!4385 = distinct !DISubprogram(name: "MagickEqualizeImageChannel", scope: !1, file: !1, line: 3064, type: !2252, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4386 = !DILocalVariable(name: "wand", arg: 1, scope: !4385, file: !1, line: 3064, type: !1143)
!4387 = !DILocation(line: 3064, column: 69, scope: !4385)
!4388 = !DILocalVariable(name: "channel", arg: 2, scope: !4385, file: !1, line: 3065, type: !1507)
!4389 = !DILocation(line: 3065, column: 21, scope: !4385)
!4390 = !DILocalVariable(name: "status", scope: !4385, file: !1, line: 3068, type: !807)
!4391 = !DILocation(line: 3068, column: 5, scope: !4385)
!4392 = !DILocation(line: 3072, column: 7, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 3072, column: 7)
!4394 = !DILocation(line: 3072, column: 13, scope: !4393)
!4395 = !DILocation(line: 3072, column: 19, scope: !4393)
!4396 = !DILocation(line: 3072, column: 7, scope: !4385)
!4397 = !DILocation(line: 3073, column: 60, scope: !4393)
!4398 = !DILocation(line: 3073, column: 66, scope: !4393)
!4399 = !DILocation(line: 3073, column: 12, scope: !4393)
!4400 = !DILocation(line: 3073, column: 5, scope: !4393)
!4401 = !DILocation(line: 3074, column: 7, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 3074, column: 7)
!4403 = !DILocation(line: 3074, column: 13, scope: !4402)
!4404 = !DILocation(line: 3074, column: 20, scope: !4402)
!4405 = !DILocation(line: 3074, column: 7, scope: !4385)
!4406 = !DILocation(line: 3075, column: 5, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4402, file: !1, line: 3075, column: 5)
!4408 = !DILocation(line: 3076, column: 31, scope: !4385)
!4409 = !DILocation(line: 3076, column: 37, scope: !4385)
!4410 = !DILocation(line: 3076, column: 44, scope: !4385)
!4411 = !DILocation(line: 3076, column: 10, scope: !4385)
!4412 = !DILocation(line: 3076, column: 9, scope: !4385)
!4413 = !DILocation(line: 3077, column: 7, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 3077, column: 7)
!4415 = !DILocation(line: 3077, column: 14, scope: !4414)
!4416 = !DILocation(line: 3077, column: 7, scope: !4385)
!4417 = !DILocation(line: 3078, column: 22, scope: !4414)
!4418 = !DILocation(line: 3078, column: 28, scope: !4414)
!4419 = !DILocation(line: 3078, column: 39, scope: !4414)
!4420 = !DILocation(line: 3078, column: 45, scope: !4414)
!4421 = !DILocation(line: 3078, column: 53, scope: !4414)
!4422 = !DILocation(line: 3078, column: 5, scope: !4414)
!4423 = !DILocation(line: 3079, column: 10, scope: !4385)
!4424 = !DILocation(line: 3079, column: 3, scope: !4385)
!4425 = !DILocation(line: 3080, column: 1, scope: !4385)
!4426 = distinct !DISubprogram(name: "MagickEvaluateImage", scope: !1, file: !1, line: 3120, type: !4427, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!807, !1143, !4429, !1325}
!4429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4430)
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickEvaluateOperator", file: !675, line: 102, baseType: !674)
!4431 = !DILocalVariable(name: "wand", arg: 1, scope: !4426, file: !1, line: 3120, type: !1143)
!4432 = !DILocation(line: 3120, column: 62, scope: !4426)
!4433 = !DILocalVariable(name: "op", arg: 2, scope: !4426, file: !1, line: 3121, type: !4429)
!4434 = !DILocation(line: 3121, column: 32, scope: !4426)
!4435 = !DILocalVariable(name: "value", arg: 3, scope: !4426, file: !1, line: 3121, type: !1325)
!4436 = !DILocation(line: 3121, column: 48, scope: !4426)
!4437 = !DILocalVariable(name: "status", scope: !4426, file: !1, line: 3124, type: !807)
!4438 = !DILocation(line: 3124, column: 5, scope: !4426)
!4439 = !DILocation(line: 3128, column: 7, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 3128, column: 7)
!4441 = !DILocation(line: 3128, column: 13, scope: !4440)
!4442 = !DILocation(line: 3128, column: 19, scope: !4440)
!4443 = !DILocation(line: 3128, column: 7, scope: !4426)
!4444 = !DILocation(line: 3129, column: 60, scope: !4440)
!4445 = !DILocation(line: 3129, column: 66, scope: !4440)
!4446 = !DILocation(line: 3129, column: 12, scope: !4440)
!4447 = !DILocation(line: 3129, column: 5, scope: !4440)
!4448 = !DILocation(line: 3130, column: 7, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 3130, column: 7)
!4450 = !DILocation(line: 3130, column: 13, scope: !4449)
!4451 = !DILocation(line: 3130, column: 20, scope: !4449)
!4452 = !DILocation(line: 3130, column: 7, scope: !4426)
!4453 = !DILocation(line: 3131, column: 5, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4449, file: !1, line: 3131, column: 5)
!4455 = !DILocation(line: 3132, column: 24, scope: !4426)
!4456 = !DILocation(line: 3132, column: 30, scope: !4426)
!4457 = !DILocation(line: 3132, column: 37, scope: !4426)
!4458 = !DILocation(line: 3132, column: 40, scope: !4426)
!4459 = !DILocation(line: 3132, column: 47, scope: !4426)
!4460 = !DILocation(line: 3132, column: 53, scope: !4426)
!4461 = !DILocation(line: 3132, column: 61, scope: !4426)
!4462 = !DILocation(line: 3132, column: 10, scope: !4426)
!4463 = !DILocation(line: 3132, column: 9, scope: !4426)
!4464 = !DILocation(line: 3133, column: 7, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 3133, column: 7)
!4466 = !DILocation(line: 3133, column: 14, scope: !4465)
!4467 = !DILocation(line: 3133, column: 7, scope: !4426)
!4468 = !DILocation(line: 3134, column: 22, scope: !4465)
!4469 = !DILocation(line: 3134, column: 28, scope: !4465)
!4470 = !DILocation(line: 3134, column: 39, scope: !4465)
!4471 = !DILocation(line: 3134, column: 45, scope: !4465)
!4472 = !DILocation(line: 3134, column: 53, scope: !4465)
!4473 = !DILocation(line: 3134, column: 5, scope: !4465)
!4474 = !DILocation(line: 3135, column: 10, scope: !4426)
!4475 = !DILocation(line: 3135, column: 3, scope: !4426)
!4476 = !DILocation(line: 3136, column: 1, scope: !4426)
!4477 = distinct !DISubprogram(name: "MagickEvaluateImages", scope: !1, file: !1, line: 3138, type: !4478, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!1143, !1143, !4429}
!4480 = !DILocalVariable(name: "wand", arg: 1, scope: !4477, file: !1, line: 3138, type: !1143)
!4481 = !DILocation(line: 3138, column: 57, scope: !4477)
!4482 = !DILocalVariable(name: "op", arg: 2, scope: !4477, file: !1, line: 3139, type: !4429)
!4483 = !DILocation(line: 3139, column: 32, scope: !4477)
!4484 = !DILocalVariable(name: "evaluate_image", scope: !4477, file: !1, line: 3142, type: !791)
!4485 = !DILocation(line: 3142, column: 6, scope: !4477)
!4486 = !DILocation(line: 3146, column: 7, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 3146, column: 7)
!4488 = !DILocation(line: 3146, column: 13, scope: !4487)
!4489 = !DILocation(line: 3146, column: 19, scope: !4487)
!4490 = !DILocation(line: 3146, column: 7, scope: !4477)
!4491 = !DILocation(line: 3147, column: 60, scope: !4487)
!4492 = !DILocation(line: 3147, column: 66, scope: !4487)
!4493 = !DILocation(line: 3147, column: 12, scope: !4487)
!4494 = !DILocation(line: 3147, column: 5, scope: !4487)
!4495 = !DILocation(line: 3148, column: 7, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 3148, column: 7)
!4497 = !DILocation(line: 3148, column: 13, scope: !4496)
!4498 = !DILocation(line: 3148, column: 20, scope: !4496)
!4499 = !DILocation(line: 3148, column: 7, scope: !4477)
!4500 = !DILocation(line: 3149, column: 5, scope: !4496)
!4501 = !DILocation(line: 3150, column: 33, scope: !4477)
!4502 = !DILocation(line: 3150, column: 39, scope: !4477)
!4503 = !DILocation(line: 3150, column: 46, scope: !4477)
!4504 = !DILocation(line: 3150, column: 49, scope: !4477)
!4505 = !DILocation(line: 3150, column: 55, scope: !4477)
!4506 = !DILocation(line: 3150, column: 18, scope: !4477)
!4507 = !DILocation(line: 3150, column: 17, scope: !4477)
!4508 = !DILocation(line: 3151, column: 7, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 3151, column: 7)
!4510 = !DILocation(line: 3151, column: 22, scope: !4509)
!4511 = !DILocation(line: 3151, column: 7, scope: !4477)
!4512 = !DILocation(line: 3152, column: 5, scope: !4509)
!4513 = !DILocation(line: 3153, column: 36, scope: !4477)
!4514 = !DILocation(line: 3153, column: 41, scope: !4477)
!4515 = !DILocation(line: 3153, column: 10, scope: !4477)
!4516 = !DILocation(line: 3153, column: 3, scope: !4477)
!4517 = !DILocation(line: 3154, column: 1, scope: !4477)
!4518 = distinct !DISubprogram(name: "MagickEvaluateImageChannel", scope: !1, file: !1, line: 3156, type: !4519, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{!807, !1143, !1507, !4429, !1325}
!4521 = !DILocalVariable(name: "wand", arg: 1, scope: !4518, file: !1, line: 3156, type: !1143)
!4522 = !DILocation(line: 3156, column: 69, scope: !4518)
!4523 = !DILocalVariable(name: "channel", arg: 2, scope: !4518, file: !1, line: 3157, type: !1507)
!4524 = !DILocation(line: 3157, column: 21, scope: !4518)
!4525 = !DILocalVariable(name: "op", arg: 3, scope: !4518, file: !1, line: 3157, type: !4429)
!4526 = !DILocation(line: 3157, column: 58, scope: !4518)
!4527 = !DILocalVariable(name: "value", arg: 4, scope: !4518, file: !1, line: 3157, type: !1325)
!4528 = !DILocation(line: 3157, column: 74, scope: !4518)
!4529 = !DILocalVariable(name: "status", scope: !4518, file: !1, line: 3160, type: !807)
!4530 = !DILocation(line: 3160, column: 5, scope: !4518)
!4531 = !DILocation(line: 3164, column: 7, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 3164, column: 7)
!4533 = !DILocation(line: 3164, column: 13, scope: !4532)
!4534 = !DILocation(line: 3164, column: 19, scope: !4532)
!4535 = !DILocation(line: 3164, column: 7, scope: !4518)
!4536 = !DILocation(line: 3165, column: 60, scope: !4532)
!4537 = !DILocation(line: 3165, column: 66, scope: !4532)
!4538 = !DILocation(line: 3165, column: 12, scope: !4532)
!4539 = !DILocation(line: 3165, column: 5, scope: !4532)
!4540 = !DILocation(line: 3166, column: 7, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 3166, column: 7)
!4542 = !DILocation(line: 3166, column: 13, scope: !4541)
!4543 = !DILocation(line: 3166, column: 20, scope: !4541)
!4544 = !DILocation(line: 3166, column: 7, scope: !4518)
!4545 = !DILocation(line: 3167, column: 5, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4541, file: !1, line: 3167, column: 5)
!4547 = !DILocation(line: 3168, column: 31, scope: !4518)
!4548 = !DILocation(line: 3168, column: 37, scope: !4518)
!4549 = !DILocation(line: 3168, column: 44, scope: !4518)
!4550 = !DILocation(line: 3168, column: 52, scope: !4518)
!4551 = !DILocation(line: 3168, column: 55, scope: !4518)
!4552 = !DILocation(line: 3169, column: 6, scope: !4518)
!4553 = !DILocation(line: 3169, column: 12, scope: !4518)
!4554 = !DILocation(line: 3169, column: 20, scope: !4518)
!4555 = !DILocation(line: 3168, column: 10, scope: !4518)
!4556 = !DILocation(line: 3168, column: 9, scope: !4518)
!4557 = !DILocation(line: 3170, column: 10, scope: !4518)
!4558 = !DILocation(line: 3170, column: 3, scope: !4518)
!4559 = !DILocation(line: 3171, column: 1, scope: !4518)
!4560 = distinct !DISubprogram(name: "MagickExportImagePixels", scope: !1, file: !1, line: 3224, type: !4561, scopeLine: 3227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!807, !1143, !1666, !1666, !1214, !1214, !924, !3796, !846}
!4563 = !DILocalVariable(name: "wand", arg: 1, scope: !4560, file: !1, line: 3224, type: !1143)
!4564 = !DILocation(line: 3224, column: 66, scope: !4560)
!4565 = !DILocalVariable(name: "x", arg: 2, scope: !4560, file: !1, line: 3225, type: !1666)
!4566 = !DILocation(line: 3225, column: 17, scope: !4560)
!4567 = !DILocalVariable(name: "y", arg: 3, scope: !4560, file: !1, line: 3225, type: !1666)
!4568 = !DILocation(line: 3225, column: 33, scope: !4560)
!4569 = !DILocalVariable(name: "columns", arg: 4, scope: !4560, file: !1, line: 3225, type: !1214)
!4570 = !DILocation(line: 3225, column: 48, scope: !4560)
!4571 = !DILocalVariable(name: "rows", arg: 5, scope: !4560, file: !1, line: 3225, type: !1214)
!4572 = !DILocation(line: 3225, column: 69, scope: !4560)
!4573 = !DILocalVariable(name: "map", arg: 6, scope: !4560, file: !1, line: 3226, type: !924)
!4574 = !DILocation(line: 3226, column: 15, scope: !4560)
!4575 = !DILocalVariable(name: "storage", arg: 7, scope: !4560, file: !1, line: 3226, type: !3796)
!4576 = !DILocation(line: 3226, column: 37, scope: !4560)
!4577 = !DILocalVariable(name: "pixels", arg: 8, scope: !4560, file: !1, line: 3226, type: !846)
!4578 = !DILocation(line: 3226, column: 51, scope: !4560)
!4579 = !DILocalVariable(name: "status", scope: !4560, file: !1, line: 3229, type: !807)
!4580 = !DILocation(line: 3229, column: 5, scope: !4560)
!4581 = !DILocation(line: 3233, column: 7, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 3233, column: 7)
!4583 = !DILocation(line: 3233, column: 13, scope: !4582)
!4584 = !DILocation(line: 3233, column: 19, scope: !4582)
!4585 = !DILocation(line: 3233, column: 7, scope: !4560)
!4586 = !DILocation(line: 3234, column: 60, scope: !4582)
!4587 = !DILocation(line: 3234, column: 66, scope: !4582)
!4588 = !DILocation(line: 3234, column: 12, scope: !4582)
!4589 = !DILocation(line: 3234, column: 5, scope: !4582)
!4590 = !DILocation(line: 3235, column: 7, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 3235, column: 7)
!4592 = !DILocation(line: 3235, column: 13, scope: !4591)
!4593 = !DILocation(line: 3235, column: 20, scope: !4591)
!4594 = !DILocation(line: 3235, column: 7, scope: !4560)
!4595 = !DILocation(line: 3236, column: 5, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !1, line: 3236, column: 5)
!4597 = !DILocation(line: 3237, column: 28, scope: !4560)
!4598 = !DILocation(line: 3237, column: 34, scope: !4560)
!4599 = !DILocation(line: 3237, column: 41, scope: !4560)
!4600 = !DILocation(line: 3237, column: 43, scope: !4560)
!4601 = !DILocation(line: 3237, column: 45, scope: !4560)
!4602 = !DILocation(line: 3237, column: 53, scope: !4560)
!4603 = !DILocation(line: 3237, column: 58, scope: !4560)
!4604 = !DILocation(line: 3238, column: 5, scope: !4560)
!4605 = !DILocation(line: 3238, column: 13, scope: !4560)
!4606 = !DILocation(line: 3238, column: 20, scope: !4560)
!4607 = !DILocation(line: 3238, column: 26, scope: !4560)
!4608 = !DILocation(line: 3237, column: 10, scope: !4560)
!4609 = !DILocation(line: 3237, column: 9, scope: !4560)
!4610 = !DILocation(line: 3239, column: 7, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4560, file: !1, line: 3239, column: 7)
!4612 = !DILocation(line: 3239, column: 14, scope: !4611)
!4613 = !DILocation(line: 3239, column: 7, scope: !4560)
!4614 = !DILocation(line: 3240, column: 22, scope: !4611)
!4615 = !DILocation(line: 3240, column: 28, scope: !4611)
!4616 = !DILocation(line: 3240, column: 39, scope: !4611)
!4617 = !DILocation(line: 3240, column: 45, scope: !4611)
!4618 = !DILocation(line: 3240, column: 53, scope: !4611)
!4619 = !DILocation(line: 3240, column: 5, scope: !4611)
!4620 = !DILocation(line: 3241, column: 10, scope: !4560)
!4621 = !DILocation(line: 3241, column: 3, scope: !4560)
!4622 = !DILocation(line: 3242, column: 1, scope: !4560)
!4623 = distinct !DISubprogram(name: "MagickExtentImage", scope: !1, file: !1, line: 3277, type: !2679, scopeLine: 3279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4624 = !DILocalVariable(name: "wand", arg: 1, scope: !4623, file: !1, line: 3277, type: !1143)
!4625 = !DILocation(line: 3277, column: 60, scope: !4623)
!4626 = !DILocalVariable(name: "width", arg: 2, scope: !4623, file: !1, line: 3278, type: !1214)
!4627 = !DILocation(line: 3278, column: 16, scope: !4623)
!4628 = !DILocalVariable(name: "height", arg: 3, scope: !4623, file: !1, line: 3278, type: !1214)
!4629 = !DILocation(line: 3278, column: 35, scope: !4623)
!4630 = !DILocalVariable(name: "x", arg: 4, scope: !4623, file: !1, line: 3278, type: !1666)
!4631 = !DILocation(line: 3278, column: 56, scope: !4623)
!4632 = !DILocalVariable(name: "y", arg: 5, scope: !4623, file: !1, line: 3278, type: !1666)
!4633 = !DILocation(line: 3278, column: 72, scope: !4623)
!4634 = !DILocalVariable(name: "extent_image", scope: !4623, file: !1, line: 3281, type: !791)
!4635 = !DILocation(line: 3281, column: 6, scope: !4623)
!4636 = !DILocalVariable(name: "extent", scope: !4623, file: !1, line: 3284, type: !863)
!4637 = !DILocation(line: 3284, column: 5, scope: !4623)
!4638 = !DILocation(line: 3288, column: 7, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4623, file: !1, line: 3288, column: 7)
!4640 = !DILocation(line: 3288, column: 13, scope: !4639)
!4641 = !DILocation(line: 3288, column: 19, scope: !4639)
!4642 = !DILocation(line: 3288, column: 7, scope: !4623)
!4643 = !DILocation(line: 3289, column: 60, scope: !4639)
!4644 = !DILocation(line: 3289, column: 66, scope: !4639)
!4645 = !DILocation(line: 3289, column: 12, scope: !4639)
!4646 = !DILocation(line: 3289, column: 5, scope: !4639)
!4647 = !DILocation(line: 3290, column: 7, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4623, file: !1, line: 3290, column: 7)
!4649 = !DILocation(line: 3290, column: 13, scope: !4648)
!4650 = !DILocation(line: 3290, column: 20, scope: !4648)
!4651 = !DILocation(line: 3290, column: 7, scope: !4623)
!4652 = !DILocation(line: 3291, column: 5, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4648, file: !1, line: 3291, column: 5)
!4654 = !DILocation(line: 3292, column: 16, scope: !4623)
!4655 = !DILocation(line: 3292, column: 10, scope: !4623)
!4656 = !DILocation(line: 3292, column: 15, scope: !4623)
!4657 = !DILocation(line: 3293, column: 17, scope: !4623)
!4658 = !DILocation(line: 3293, column: 10, scope: !4623)
!4659 = !DILocation(line: 3293, column: 16, scope: !4623)
!4660 = !DILocation(line: 3294, column: 12, scope: !4623)
!4661 = !DILocation(line: 3294, column: 10, scope: !4623)
!4662 = !DILocation(line: 3294, column: 11, scope: !4623)
!4663 = !DILocation(line: 3295, column: 12, scope: !4623)
!4664 = !DILocation(line: 3295, column: 10, scope: !4623)
!4665 = !DILocation(line: 3295, column: 11, scope: !4623)
!4666 = !DILocation(line: 3296, column: 28, scope: !4623)
!4667 = !DILocation(line: 3296, column: 34, scope: !4623)
!4668 = !DILocation(line: 3296, column: 49, scope: !4623)
!4669 = !DILocation(line: 3296, column: 55, scope: !4623)
!4670 = !DILocation(line: 3296, column: 16, scope: !4623)
!4671 = !DILocation(line: 3296, column: 15, scope: !4623)
!4672 = !DILocation(line: 3297, column: 7, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4623, file: !1, line: 3297, column: 7)
!4674 = !DILocation(line: 3297, column: 20, scope: !4673)
!4675 = !DILocation(line: 3297, column: 7, scope: !4623)
!4676 = !DILocation(line: 3298, column: 5, scope: !4673)
!4677 = !DILocation(line: 3299, column: 23, scope: !4623)
!4678 = !DILocation(line: 3299, column: 29, scope: !4623)
!4679 = !DILocation(line: 3299, column: 36, scope: !4623)
!4680 = !DILocation(line: 3299, column: 3, scope: !4623)
!4681 = !DILocation(line: 3300, column: 3, scope: !4623)
!4682 = !DILocation(line: 3301, column: 1, scope: !4623)
!4683 = distinct !DISubprogram(name: "MagickFilterImage", scope: !1, file: !1, line: 3333, type: !3084, scopeLine: 3335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4684 = !DILocalVariable(name: "wand", arg: 1, scope: !4683, file: !1, line: 3333, type: !1143)
!4685 = !DILocation(line: 3333, column: 60, scope: !4683)
!4686 = !DILocalVariable(name: "kernel", arg: 2, scope: !4683, file: !1, line: 3334, type: !1304)
!4687 = !DILocation(line: 3334, column: 21, scope: !4683)
!4688 = !DILocalVariable(name: "status", scope: !4683, file: !1, line: 3337, type: !807)
!4689 = !DILocation(line: 3337, column: 5, scope: !4683)
!4690 = !DILocation(line: 3339, column: 35, scope: !4683)
!4691 = !DILocation(line: 3339, column: 56, scope: !4683)
!4692 = !DILocation(line: 3339, column: 10, scope: !4683)
!4693 = !DILocation(line: 3339, column: 9, scope: !4683)
!4694 = !DILocation(line: 3340, column: 10, scope: !4683)
!4695 = !DILocation(line: 3340, column: 3, scope: !4683)
!4696 = distinct !DISubprogram(name: "MagickFilterImageChannel", scope: !1, file: !1, line: 3343, type: !4697, scopeLine: 3345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!807, !1143, !1507, !1304}
!4699 = !DILocalVariable(name: "wand", arg: 1, scope: !4696, file: !1, line: 3343, type: !1143)
!4700 = !DILocation(line: 3343, column: 67, scope: !4696)
!4701 = !DILocalVariable(name: "channel", arg: 2, scope: !4696, file: !1, line: 3344, type: !1507)
!4702 = !DILocation(line: 3344, column: 21, scope: !4696)
!4703 = !DILocalVariable(name: "kernel", arg: 3, scope: !4696, file: !1, line: 3344, type: !1304)
!4704 = !DILocation(line: 3344, column: 47, scope: !4696)
!4705 = !DILocalVariable(name: "filter_image", scope: !4696, file: !1, line: 3347, type: !791)
!4706 = !DILocation(line: 3347, column: 6, scope: !4696)
!4707 = !DILocation(line: 3351, column: 7, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 3351, column: 7)
!4709 = !DILocation(line: 3351, column: 13, scope: !4708)
!4710 = !DILocation(line: 3351, column: 19, scope: !4708)
!4711 = !DILocation(line: 3351, column: 7, scope: !4696)
!4712 = !DILocation(line: 3352, column: 60, scope: !4708)
!4713 = !DILocation(line: 3352, column: 66, scope: !4708)
!4714 = !DILocation(line: 3352, column: 12, scope: !4708)
!4715 = !DILocation(line: 3352, column: 5, scope: !4708)
!4716 = !DILocation(line: 3353, column: 7, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 3353, column: 7)
!4718 = !DILocation(line: 3353, column: 14, scope: !4717)
!4719 = !DILocation(line: 3353, column: 7, scope: !4696)
!4720 = !DILocation(line: 3354, column: 5, scope: !4717)
!4721 = !DILocation(line: 3355, column: 7, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 3355, column: 7)
!4723 = !DILocation(line: 3355, column: 13, scope: !4722)
!4724 = !DILocation(line: 3355, column: 20, scope: !4722)
!4725 = !DILocation(line: 3355, column: 7, scope: !4696)
!4726 = !DILocation(line: 3356, column: 5, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !1, line: 3356, column: 5)
!4728 = !DILocation(line: 3357, column: 35, scope: !4696)
!4729 = !DILocation(line: 3357, column: 41, scope: !4696)
!4730 = !DILocation(line: 3357, column: 48, scope: !4696)
!4731 = !DILocation(line: 3357, column: 56, scope: !4696)
!4732 = !DILocation(line: 3357, column: 63, scope: !4696)
!4733 = !DILocation(line: 3357, column: 69, scope: !4696)
!4734 = !DILocation(line: 3357, column: 16, scope: !4696)
!4735 = !DILocation(line: 3357, column: 15, scope: !4696)
!4736 = !DILocation(line: 3358, column: 7, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 3358, column: 7)
!4738 = !DILocation(line: 3358, column: 20, scope: !4737)
!4739 = !DILocation(line: 3358, column: 7, scope: !4696)
!4740 = !DILocation(line: 3359, column: 5, scope: !4737)
!4741 = !DILocation(line: 3360, column: 23, scope: !4696)
!4742 = !DILocation(line: 3360, column: 29, scope: !4696)
!4743 = !DILocation(line: 3360, column: 36, scope: !4696)
!4744 = !DILocation(line: 3360, column: 3, scope: !4696)
!4745 = !DILocation(line: 3361, column: 3, scope: !4696)
!4746 = !DILocation(line: 3362, column: 1, scope: !4696)
!4747 = distinct !DISubprogram(name: "MagickFlipImage", scope: !1, file: !1, line: 3387, type: !2240, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4748 = !DILocalVariable(name: "wand", arg: 1, scope: !4747, file: !1, line: 3387, type: !1143)
!4749 = !DILocation(line: 3387, column: 58, scope: !4747)
!4750 = !DILocalVariable(name: "flip_image", scope: !4747, file: !1, line: 3390, type: !791)
!4751 = !DILocation(line: 3390, column: 6, scope: !4747)
!4752 = !DILocation(line: 3394, column: 7, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 3394, column: 7)
!4754 = !DILocation(line: 3394, column: 13, scope: !4753)
!4755 = !DILocation(line: 3394, column: 19, scope: !4753)
!4756 = !DILocation(line: 3394, column: 7, scope: !4747)
!4757 = !DILocation(line: 3395, column: 60, scope: !4753)
!4758 = !DILocation(line: 3395, column: 66, scope: !4753)
!4759 = !DILocation(line: 3395, column: 12, scope: !4753)
!4760 = !DILocation(line: 3395, column: 5, scope: !4753)
!4761 = !DILocation(line: 3396, column: 7, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 3396, column: 7)
!4763 = !DILocation(line: 3396, column: 13, scope: !4762)
!4764 = !DILocation(line: 3396, column: 20, scope: !4762)
!4765 = !DILocation(line: 3396, column: 7, scope: !4747)
!4766 = !DILocation(line: 3397, column: 5, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !1, line: 3397, column: 5)
!4768 = !DILocation(line: 3398, column: 24, scope: !4747)
!4769 = !DILocation(line: 3398, column: 30, scope: !4747)
!4770 = !DILocation(line: 3398, column: 37, scope: !4747)
!4771 = !DILocation(line: 3398, column: 43, scope: !4747)
!4772 = !DILocation(line: 3398, column: 14, scope: !4747)
!4773 = !DILocation(line: 3398, column: 13, scope: !4747)
!4774 = !DILocation(line: 3399, column: 7, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4747, file: !1, line: 3399, column: 7)
!4776 = !DILocation(line: 3399, column: 18, scope: !4775)
!4777 = !DILocation(line: 3399, column: 7, scope: !4747)
!4778 = !DILocation(line: 3400, column: 5, scope: !4775)
!4779 = !DILocation(line: 3401, column: 23, scope: !4747)
!4780 = !DILocation(line: 3401, column: 29, scope: !4747)
!4781 = !DILocation(line: 3401, column: 36, scope: !4747)
!4782 = !DILocation(line: 3401, column: 3, scope: !4747)
!4783 = !DILocation(line: 3402, column: 3, scope: !4747)
!4784 = !DILocation(line: 3403, column: 1, scope: !4747)
!4785 = distinct !DISubprogram(name: "MagickFloodfillPaintImage", scope: !1, file: !1, line: 3450, type: !4786, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{!807, !1143, !1507, !2348, !1325, !2348, !1666, !1666, !2117}
!4788 = !DILocalVariable(name: "wand", arg: 1, scope: !4785, file: !1, line: 3450, type: !1143)
!4789 = !DILocation(line: 3450, column: 68, scope: !4785)
!4790 = !DILocalVariable(name: "channel", arg: 2, scope: !4785, file: !1, line: 3451, type: !1507)
!4791 = !DILocation(line: 3451, column: 21, scope: !4785)
!4792 = !DILocalVariable(name: "fill", arg: 3, scope: !4785, file: !1, line: 3451, type: !2348)
!4793 = !DILocation(line: 3451, column: 46, scope: !4785)
!4794 = !DILocalVariable(name: "fuzz", arg: 4, scope: !4785, file: !1, line: 3451, type: !1325)
!4795 = !DILocation(line: 3451, column: 64, scope: !4785)
!4796 = !DILocalVariable(name: "bordercolor", arg: 5, scope: !4785, file: !1, line: 3452, type: !2348)
!4797 = !DILocation(line: 3452, column: 20, scope: !4785)
!4798 = !DILocalVariable(name: "x", arg: 6, scope: !4785, file: !1, line: 3452, type: !1666)
!4799 = !DILocation(line: 3452, column: 46, scope: !4785)
!4800 = !DILocalVariable(name: "y", arg: 7, scope: !4785, file: !1, line: 3452, type: !1666)
!4801 = !DILocation(line: 3452, column: 62, scope: !4785)
!4802 = !DILocalVariable(name: "invert", arg: 8, scope: !4785, file: !1, line: 3453, type: !2117)
!4803 = !DILocation(line: 3453, column: 27, scope: !4785)
!4804 = !DILocalVariable(name: "draw_info", scope: !4785, file: !1, line: 3456, type: !1012)
!4805 = !DILocation(line: 3456, column: 6, scope: !4785)
!4806 = !DILocalVariable(name: "status", scope: !4785, file: !1, line: 3459, type: !807)
!4807 = !DILocation(line: 3459, column: 5, scope: !4785)
!4808 = !DILocalVariable(name: "target", scope: !4785, file: !1, line: 3462, type: !1054)
!4809 = !DILocation(line: 3462, column: 5, scope: !4785)
!4810 = !DILocation(line: 3466, column: 7, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 3466, column: 7)
!4812 = !DILocation(line: 3466, column: 13, scope: !4811)
!4813 = !DILocation(line: 3466, column: 19, scope: !4811)
!4814 = !DILocation(line: 3466, column: 7, scope: !4785)
!4815 = !DILocation(line: 3467, column: 60, scope: !4811)
!4816 = !DILocation(line: 3467, column: 66, scope: !4811)
!4817 = !DILocation(line: 3467, column: 12, scope: !4811)
!4818 = !DILocation(line: 3467, column: 5, scope: !4811)
!4819 = !DILocation(line: 3468, column: 7, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 3468, column: 7)
!4821 = !DILocation(line: 3468, column: 13, scope: !4820)
!4822 = !DILocation(line: 3468, column: 20, scope: !4820)
!4823 = !DILocation(line: 3468, column: 7, scope: !4785)
!4824 = !DILocation(line: 3469, column: 5, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4820, file: !1, line: 3469, column: 5)
!4826 = !DILocation(line: 3470, column: 27, scope: !4785)
!4827 = !DILocation(line: 3470, column: 33, scope: !4785)
!4828 = !DILocation(line: 3470, column: 13, scope: !4785)
!4829 = !DILocation(line: 3470, column: 12, scope: !4785)
!4830 = !DILocation(line: 3471, column: 24, scope: !4785)
!4831 = !DILocation(line: 3471, column: 30, scope: !4785)
!4832 = !DILocation(line: 3471, column: 41, scope: !4785)
!4833 = !DILocation(line: 3471, column: 3, scope: !4785)
!4834 = !DILocation(line: 3472, column: 35, scope: !4785)
!4835 = !DILocation(line: 3472, column: 41, scope: !4785)
!4836 = !DILocation(line: 3472, column: 48, scope: !4785)
!4837 = !DILocation(line: 3472, column: 52, scope: !4785)
!4838 = !DILocation(line: 3472, column: 58, scope: !4785)
!4839 = !DILocation(line: 3472, column: 66, scope: !4785)
!4840 = !DILocation(line: 3472, column: 50, scope: !4785)
!4841 = !DILocation(line: 3473, column: 5, scope: !4785)
!4842 = !DILocation(line: 3473, column: 9, scope: !4785)
!4843 = !DILocation(line: 3473, column: 15, scope: !4785)
!4844 = !DILocation(line: 3473, column: 23, scope: !4785)
!4845 = !DILocation(line: 3473, column: 7, scope: !4785)
!4846 = !DILocation(line: 3473, column: 36, scope: !4785)
!4847 = !DILocation(line: 3473, column: 42, scope: !4785)
!4848 = !DILocation(line: 3472, column: 10, scope: !4785)
!4849 = !DILocation(line: 3474, column: 7, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 3474, column: 7)
!4851 = !DILocation(line: 3474, column: 19, scope: !4850)
!4852 = !DILocation(line: 3474, column: 7, scope: !4785)
!4853 = !DILocation(line: 3475, column: 25, scope: !4850)
!4854 = !DILocation(line: 3475, column: 5, scope: !4850)
!4855 = !DILocation(line: 3476, column: 22, scope: !4785)
!4856 = !DILocation(line: 3476, column: 3, scope: !4785)
!4857 = !DILocation(line: 3476, column: 9, scope: !4785)
!4858 = !DILocation(line: 3476, column: 17, scope: !4785)
!4859 = !DILocation(line: 3476, column: 21, scope: !4785)
!4860 = !DILocation(line: 3477, column: 30, scope: !4785)
!4861 = !DILocation(line: 3477, column: 36, scope: !4785)
!4862 = !DILocation(line: 3477, column: 43, scope: !4785)
!4863 = !DILocation(line: 3477, column: 51, scope: !4785)
!4864 = !DILocation(line: 3477, column: 69, scope: !4785)
!4865 = !DILocation(line: 3477, column: 71, scope: !4785)
!4866 = !DILocation(line: 3477, column: 73, scope: !4785)
!4867 = !DILocation(line: 3477, column: 10, scope: !4785)
!4868 = !DILocation(line: 3477, column: 9, scope: !4785)
!4869 = !DILocation(line: 3478, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 3478, column: 7)
!4871 = !DILocation(line: 3478, column: 14, scope: !4870)
!4872 = !DILocation(line: 3478, column: 7, scope: !4785)
!4873 = !DILocation(line: 3479, column: 22, scope: !4870)
!4874 = !DILocation(line: 3479, column: 28, scope: !4870)
!4875 = !DILocation(line: 3479, column: 39, scope: !4870)
!4876 = !DILocation(line: 3479, column: 45, scope: !4870)
!4877 = !DILocation(line: 3479, column: 53, scope: !4870)
!4878 = !DILocation(line: 3479, column: 5, scope: !4870)
!4879 = !DILocation(line: 3480, column: 29, scope: !4785)
!4880 = !DILocation(line: 3480, column: 13, scope: !4785)
!4881 = !DILocation(line: 3480, column: 12, scope: !4785)
!4882 = !DILocation(line: 3481, column: 10, scope: !4785)
!4883 = !DILocation(line: 3481, column: 3, scope: !4785)
!4884 = !DILocation(line: 3482, column: 1, scope: !4785)
!4885 = distinct !DISubprogram(name: "MagickFlopImage", scope: !1, file: !1, line: 3507, type: !2240, scopeLine: 3508, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4886 = !DILocalVariable(name: "wand", arg: 1, scope: !4885, file: !1, line: 3507, type: !1143)
!4887 = !DILocation(line: 3507, column: 58, scope: !4885)
!4888 = !DILocalVariable(name: "flop_image", scope: !4885, file: !1, line: 3510, type: !791)
!4889 = !DILocation(line: 3510, column: 6, scope: !4885)
!4890 = !DILocation(line: 3514, column: 7, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 3514, column: 7)
!4892 = !DILocation(line: 3514, column: 13, scope: !4891)
!4893 = !DILocation(line: 3514, column: 19, scope: !4891)
!4894 = !DILocation(line: 3514, column: 7, scope: !4885)
!4895 = !DILocation(line: 3515, column: 60, scope: !4891)
!4896 = !DILocation(line: 3515, column: 66, scope: !4891)
!4897 = !DILocation(line: 3515, column: 12, scope: !4891)
!4898 = !DILocation(line: 3515, column: 5, scope: !4891)
!4899 = !DILocation(line: 3516, column: 7, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 3516, column: 7)
!4901 = !DILocation(line: 3516, column: 13, scope: !4900)
!4902 = !DILocation(line: 3516, column: 20, scope: !4900)
!4903 = !DILocation(line: 3516, column: 7, scope: !4885)
!4904 = !DILocation(line: 3517, column: 5, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 3517, column: 5)
!4906 = !DILocation(line: 3518, column: 24, scope: !4885)
!4907 = !DILocation(line: 3518, column: 30, scope: !4885)
!4908 = !DILocation(line: 3518, column: 37, scope: !4885)
!4909 = !DILocation(line: 3518, column: 43, scope: !4885)
!4910 = !DILocation(line: 3518, column: 14, scope: !4885)
!4911 = !DILocation(line: 3518, column: 13, scope: !4885)
!4912 = !DILocation(line: 3519, column: 7, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 3519, column: 7)
!4914 = !DILocation(line: 3519, column: 18, scope: !4913)
!4915 = !DILocation(line: 3519, column: 7, scope: !4885)
!4916 = !DILocation(line: 3520, column: 5, scope: !4913)
!4917 = !DILocation(line: 3521, column: 23, scope: !4885)
!4918 = !DILocation(line: 3521, column: 29, scope: !4885)
!4919 = !DILocation(line: 3521, column: 36, scope: !4885)
!4920 = !DILocation(line: 3521, column: 3, scope: !4885)
!4921 = !DILocation(line: 3522, column: 3, scope: !4885)
!4922 = !DILocation(line: 3523, column: 1, scope: !4885)
!4923 = distinct !DISubprogram(name: "MagickForwardFourierTransformImage", scope: !1, file: !1, line: 3553, type: !3513, scopeLine: 3555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4924 = !DILocalVariable(name: "wand", arg: 1, scope: !4923, file: !1, line: 3554, type: !1143)
!4925 = !DILocation(line: 3554, column: 15, scope: !4923)
!4926 = !DILocalVariable(name: "magnitude", arg: 2, scope: !4923, file: !1, line: 3554, type: !2117)
!4927 = !DILocation(line: 3554, column: 44, scope: !4923)
!4928 = !DILocalVariable(name: "forward_image", scope: !4923, file: !1, line: 3557, type: !791)
!4929 = !DILocation(line: 3557, column: 6, scope: !4923)
!4930 = !DILocation(line: 3561, column: 7, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 3561, column: 7)
!4932 = !DILocation(line: 3561, column: 13, scope: !4931)
!4933 = !DILocation(line: 3561, column: 19, scope: !4931)
!4934 = !DILocation(line: 3561, column: 7, scope: !4923)
!4935 = !DILocation(line: 3562, column: 60, scope: !4931)
!4936 = !DILocation(line: 3562, column: 66, scope: !4931)
!4937 = !DILocation(line: 3562, column: 12, scope: !4931)
!4938 = !DILocation(line: 3562, column: 5, scope: !4931)
!4939 = !DILocation(line: 3563, column: 7, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 3563, column: 7)
!4941 = !DILocation(line: 3563, column: 13, scope: !4940)
!4942 = !DILocation(line: 3563, column: 20, scope: !4940)
!4943 = !DILocation(line: 3563, column: 7, scope: !4923)
!4944 = !DILocation(line: 3564, column: 5, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4940, file: !1, line: 3564, column: 5)
!4946 = !DILocation(line: 3565, column: 46, scope: !4923)
!4947 = !DILocation(line: 3565, column: 52, scope: !4923)
!4948 = !DILocation(line: 3565, column: 59, scope: !4923)
!4949 = !DILocation(line: 3566, column: 5, scope: !4923)
!4950 = !DILocation(line: 3566, column: 11, scope: !4923)
!4951 = !DILocation(line: 3565, column: 17, scope: !4923)
!4952 = !DILocation(line: 3565, column: 16, scope: !4923)
!4953 = !DILocation(line: 3567, column: 7, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 3567, column: 7)
!4955 = !DILocation(line: 3567, column: 21, scope: !4954)
!4956 = !DILocation(line: 3567, column: 7, scope: !4923)
!4957 = !DILocation(line: 3568, column: 5, scope: !4954)
!4958 = !DILocation(line: 3569, column: 23, scope: !4923)
!4959 = !DILocation(line: 3569, column: 29, scope: !4923)
!4960 = !DILocation(line: 3569, column: 36, scope: !4923)
!4961 = !DILocation(line: 3569, column: 3, scope: !4923)
!4962 = !DILocation(line: 3570, column: 3, scope: !4923)
!4963 = !DILocation(line: 3571, column: 1, scope: !4923)
!4964 = distinct !DISubprogram(name: "MagickFrameImage", scope: !1, file: !1, line: 3611, type: !4965, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!807, !1143, !2348, !1214, !1214, !1666, !1666}
!4967 = !DILocalVariable(name: "wand", arg: 1, scope: !4964, file: !1, line: 3611, type: !1143)
!4968 = !DILocation(line: 3611, column: 59, scope: !4964)
!4969 = !DILocalVariable(name: "matte_color", arg: 2, scope: !4964, file: !1, line: 3612, type: !2348)
!4970 = !DILocation(line: 3612, column: 20, scope: !4964)
!4971 = !DILocalVariable(name: "width", arg: 3, scope: !4964, file: !1, line: 3612, type: !1214)
!4972 = !DILocation(line: 3612, column: 45, scope: !4964)
!4973 = !DILocalVariable(name: "height", arg: 4, scope: !4964, file: !1, line: 3612, type: !1214)
!4974 = !DILocation(line: 3612, column: 64, scope: !4964)
!4975 = !DILocalVariable(name: "inner_bevel", arg: 5, scope: !4964, file: !1, line: 3613, type: !1666)
!4976 = !DILocation(line: 3613, column: 17, scope: !4964)
!4977 = !DILocalVariable(name: "outer_bevel", arg: 6, scope: !4964, file: !1, line: 3613, type: !1666)
!4978 = !DILocation(line: 3613, column: 43, scope: !4964)
!4979 = !DILocalVariable(name: "frame_image", scope: !4964, file: !1, line: 3616, type: !791)
!4980 = !DILocation(line: 3616, column: 6, scope: !4964)
!4981 = !DILocalVariable(name: "frame_info", scope: !4964, file: !1, line: 3619, type: !4982)
!4982 = !DIDerivedType(tag: DW_TAG_typedef, name: "FrameInfo", file: !4983, line: 36, baseType: !4984)
!4983 = !DIFile(filename: "./magick/decorate.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_FrameInfo", file: !4983, line: 25, size: 384, elements: !4985)
!4985 = !{!4986, !4987, !4988, !4989, !4990, !4991}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4984, file: !4983, line: 28, baseType: !802, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4984, file: !4983, line: 29, baseType: !802, size: 64, offset: 64)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4984, file: !4983, line: 32, baseType: !855, size: 64, offset: 128)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4984, file: !4983, line: 33, baseType: !855, size: 64, offset: 192)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "inner_bevel", scope: !4984, file: !4983, line: 34, baseType: !855, size: 64, offset: 256)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "outer_bevel", scope: !4984, file: !4983, line: 35, baseType: !855, size: 64, offset: 320)
!4992 = !DILocation(line: 3619, column: 5, scope: !4964)
!4993 = !DILocation(line: 3623, column: 7, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4964, file: !1, line: 3623, column: 7)
!4995 = !DILocation(line: 3623, column: 13, scope: !4994)
!4996 = !DILocation(line: 3623, column: 19, scope: !4994)
!4997 = !DILocation(line: 3623, column: 7, scope: !4964)
!4998 = !DILocation(line: 3624, column: 60, scope: !4994)
!4999 = !DILocation(line: 3624, column: 66, scope: !4994)
!5000 = !DILocation(line: 3624, column: 12, scope: !4994)
!5001 = !DILocation(line: 3624, column: 5, scope: !4994)
!5002 = !DILocation(line: 3625, column: 7, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4964, file: !1, line: 3625, column: 7)
!5004 = !DILocation(line: 3625, column: 13, scope: !5003)
!5005 = !DILocation(line: 3625, column: 20, scope: !5003)
!5006 = !DILocation(line: 3625, column: 7, scope: !4964)
!5007 = !DILocation(line: 3626, column: 5, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5003, file: !1, line: 3626, column: 5)
!5009 = !DILocation(line: 3627, column: 28, scope: !4964)
!5010 = !DILocation(line: 3627, column: 10, scope: !4964)
!5011 = !DILocation(line: 3628, column: 20, scope: !4964)
!5012 = !DILocation(line: 3628, column: 26, scope: !4964)
!5013 = !DILocation(line: 3628, column: 34, scope: !4964)
!5014 = !DILocation(line: 3628, column: 44, scope: !4964)
!5015 = !DILocation(line: 3628, column: 43, scope: !4964)
!5016 = !DILocation(line: 3628, column: 41, scope: !4964)
!5017 = !DILocation(line: 3628, column: 14, scope: !4964)
!5018 = !DILocation(line: 3628, column: 19, scope: !4964)
!5019 = !DILocation(line: 3629, column: 21, scope: !4964)
!5020 = !DILocation(line: 3629, column: 27, scope: !4964)
!5021 = !DILocation(line: 3629, column: 35, scope: !4964)
!5022 = !DILocation(line: 3629, column: 42, scope: !4964)
!5023 = !DILocation(line: 3629, column: 41, scope: !4964)
!5024 = !DILocation(line: 3629, column: 39, scope: !4964)
!5025 = !DILocation(line: 3629, column: 14, scope: !4964)
!5026 = !DILocation(line: 3629, column: 20, scope: !4964)
!5027 = !DILocation(line: 3630, column: 26, scope: !4964)
!5028 = !DILocation(line: 3630, column: 14, scope: !4964)
!5029 = !DILocation(line: 3630, column: 15, scope: !4964)
!5030 = !DILocation(line: 3631, column: 26, scope: !4964)
!5031 = !DILocation(line: 3631, column: 14, scope: !4964)
!5032 = !DILocation(line: 3631, column: 15, scope: !4964)
!5033 = !DILocation(line: 3632, column: 26, scope: !4964)
!5034 = !DILocation(line: 3632, column: 14, scope: !4964)
!5035 = !DILocation(line: 3632, column: 25, scope: !4964)
!5036 = !DILocation(line: 3633, column: 26, scope: !4964)
!5037 = !DILocation(line: 3633, column: 14, scope: !4964)
!5038 = !DILocation(line: 3633, column: 25, scope: !4964)
!5039 = !DILocation(line: 3634, column: 24, scope: !4964)
!5040 = !DILocation(line: 3634, column: 37, scope: !4964)
!5041 = !DILocation(line: 3634, column: 43, scope: !4964)
!5042 = !DILocation(line: 3634, column: 51, scope: !4964)
!5043 = !DILocation(line: 3634, column: 3, scope: !4964)
!5044 = !DILocation(line: 3635, column: 26, scope: !4964)
!5045 = !DILocation(line: 3635, column: 32, scope: !4964)
!5046 = !DILocation(line: 3635, column: 51, scope: !4964)
!5047 = !DILocation(line: 3635, column: 57, scope: !4964)
!5048 = !DILocation(line: 3635, column: 15, scope: !4964)
!5049 = !DILocation(line: 3635, column: 14, scope: !4964)
!5050 = !DILocation(line: 3636, column: 7, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !4964, file: !1, line: 3636, column: 7)
!5052 = !DILocation(line: 3636, column: 19, scope: !5051)
!5053 = !DILocation(line: 3636, column: 7, scope: !4964)
!5054 = !DILocation(line: 3637, column: 5, scope: !5051)
!5055 = !DILocation(line: 3638, column: 23, scope: !4964)
!5056 = !DILocation(line: 3638, column: 29, scope: !4964)
!5057 = !DILocation(line: 3638, column: 36, scope: !4964)
!5058 = !DILocation(line: 3638, column: 3, scope: !4964)
!5059 = !DILocation(line: 3639, column: 3, scope: !4964)
!5060 = !DILocation(line: 3640, column: 1, scope: !4964)
!5061 = distinct !DISubprogram(name: "MagickFunctionImage", scope: !1, file: !1, line: 3681, type: !5062, scopeLine: 3684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!807, !1143, !5064, !1214, !1324}
!5064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5065)
!5065 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickFunction", file: !675, line: 111, baseType: !709)
!5066 = !DILocalVariable(name: "wand", arg: 1, scope: !5061, file: !1, line: 3681, type: !1143)
!5067 = !DILocation(line: 3681, column: 62, scope: !5061)
!5068 = !DILocalVariable(name: "function", arg: 2, scope: !5061, file: !1, line: 3682, type: !5064)
!5069 = !DILocation(line: 3682, column: 24, scope: !5061)
!5070 = !DILocalVariable(name: "number_arguments", arg: 3, scope: !5061, file: !1, line: 3682, type: !1214)
!5071 = !DILocation(line: 3682, column: 46, scope: !5061)
!5072 = !DILocalVariable(name: "arguments", arg: 4, scope: !5061, file: !1, line: 3683, type: !1324)
!5073 = !DILocation(line: 3683, column: 17, scope: !5061)
!5074 = !DILocalVariable(name: "status", scope: !5061, file: !1, line: 3686, type: !807)
!5075 = !DILocation(line: 3686, column: 5, scope: !5061)
!5076 = !DILocation(line: 3690, column: 7, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 3690, column: 7)
!5078 = !DILocation(line: 3690, column: 13, scope: !5077)
!5079 = !DILocation(line: 3690, column: 19, scope: !5077)
!5080 = !DILocation(line: 3690, column: 7, scope: !5061)
!5081 = !DILocation(line: 3691, column: 60, scope: !5077)
!5082 = !DILocation(line: 3691, column: 66, scope: !5077)
!5083 = !DILocation(line: 3691, column: 12, scope: !5077)
!5084 = !DILocation(line: 3691, column: 5, scope: !5077)
!5085 = !DILocation(line: 3692, column: 7, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 3692, column: 7)
!5087 = !DILocation(line: 3692, column: 13, scope: !5086)
!5088 = !DILocation(line: 3692, column: 20, scope: !5086)
!5089 = !DILocation(line: 3692, column: 7, scope: !5061)
!5090 = !DILocation(line: 3693, column: 5, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5086, file: !1, line: 3693, column: 5)
!5092 = !DILocation(line: 3694, column: 24, scope: !5061)
!5093 = !DILocation(line: 3694, column: 30, scope: !5061)
!5094 = !DILocation(line: 3694, column: 37, scope: !5061)
!5095 = !DILocation(line: 3694, column: 46, scope: !5061)
!5096 = !DILocation(line: 3694, column: 63, scope: !5061)
!5097 = !DILocation(line: 3695, column: 6, scope: !5061)
!5098 = !DILocation(line: 3695, column: 12, scope: !5061)
!5099 = !DILocation(line: 3695, column: 20, scope: !5061)
!5100 = !DILocation(line: 3694, column: 10, scope: !5061)
!5101 = !DILocation(line: 3694, column: 9, scope: !5061)
!5102 = !DILocation(line: 3696, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 3696, column: 7)
!5104 = !DILocation(line: 3696, column: 14, scope: !5103)
!5105 = !DILocation(line: 3696, column: 7, scope: !5061)
!5106 = !DILocation(line: 3697, column: 22, scope: !5103)
!5107 = !DILocation(line: 3697, column: 28, scope: !5103)
!5108 = !DILocation(line: 3697, column: 39, scope: !5103)
!5109 = !DILocation(line: 3697, column: 45, scope: !5103)
!5110 = !DILocation(line: 3697, column: 53, scope: !5103)
!5111 = !DILocation(line: 3697, column: 5, scope: !5103)
!5112 = !DILocation(line: 3698, column: 10, scope: !5061)
!5113 = !DILocation(line: 3698, column: 3, scope: !5061)
!5114 = !DILocation(line: 3699, column: 1, scope: !5061)
!5115 = distinct !DISubprogram(name: "MagickFunctionImageChannel", scope: !1, file: !1, line: 3701, type: !5116, scopeLine: 3704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!807, !1143, !1507, !5064, !1214, !1324}
!5118 = !DILocalVariable(name: "wand", arg: 1, scope: !5115, file: !1, line: 3701, type: !1143)
!5119 = !DILocation(line: 3701, column: 69, scope: !5115)
!5120 = !DILocalVariable(name: "channel", arg: 2, scope: !5115, file: !1, line: 3702, type: !1507)
!5121 = !DILocation(line: 3702, column: 21, scope: !5115)
!5122 = !DILocalVariable(name: "function", arg: 3, scope: !5115, file: !1, line: 3702, type: !5064)
!5123 = !DILocation(line: 3702, column: 50, scope: !5115)
!5124 = !DILocalVariable(name: "number_arguments", arg: 4, scope: !5115, file: !1, line: 3703, type: !1214)
!5125 = !DILocation(line: 3703, column: 16, scope: !5115)
!5126 = !DILocalVariable(name: "arguments", arg: 5, scope: !5115, file: !1, line: 3703, type: !1324)
!5127 = !DILocation(line: 3703, column: 47, scope: !5115)
!5128 = !DILocalVariable(name: "status", scope: !5115, file: !1, line: 3706, type: !807)
!5129 = !DILocation(line: 3706, column: 5, scope: !5115)
!5130 = !DILocation(line: 3710, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5115, file: !1, line: 3710, column: 7)
!5132 = !DILocation(line: 3710, column: 13, scope: !5131)
!5133 = !DILocation(line: 3710, column: 19, scope: !5131)
!5134 = !DILocation(line: 3710, column: 7, scope: !5115)
!5135 = !DILocation(line: 3711, column: 60, scope: !5131)
!5136 = !DILocation(line: 3711, column: 66, scope: !5131)
!5137 = !DILocation(line: 3711, column: 12, scope: !5131)
!5138 = !DILocation(line: 3711, column: 5, scope: !5131)
!5139 = !DILocation(line: 3712, column: 7, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5115, file: !1, line: 3712, column: 7)
!5141 = !DILocation(line: 3712, column: 13, scope: !5140)
!5142 = !DILocation(line: 3712, column: 20, scope: !5140)
!5143 = !DILocation(line: 3712, column: 7, scope: !5115)
!5144 = !DILocation(line: 3713, column: 5, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 3713, column: 5)
!5146 = !DILocation(line: 3714, column: 31, scope: !5115)
!5147 = !DILocation(line: 3714, column: 37, scope: !5115)
!5148 = !DILocation(line: 3714, column: 44, scope: !5115)
!5149 = !DILocation(line: 3714, column: 52, scope: !5115)
!5150 = !DILocation(line: 3714, column: 61, scope: !5115)
!5151 = !DILocation(line: 3715, column: 5, scope: !5115)
!5152 = !DILocation(line: 3715, column: 16, scope: !5115)
!5153 = !DILocation(line: 3715, column: 22, scope: !5115)
!5154 = !DILocation(line: 3715, column: 30, scope: !5115)
!5155 = !DILocation(line: 3714, column: 10, scope: !5115)
!5156 = !DILocation(line: 3714, column: 9, scope: !5115)
!5157 = !DILocation(line: 3716, column: 10, scope: !5115)
!5158 = !DILocation(line: 3716, column: 3, scope: !5115)
!5159 = !DILocation(line: 3717, column: 1, scope: !5115)
!5160 = distinct !DISubprogram(name: "MagickFxImage", scope: !1, file: !1, line: 3748, type: !5161, scopeLine: 3749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{!1143, !1143, !924}
!5163 = !DILocalVariable(name: "wand", arg: 1, scope: !5160, file: !1, line: 3748, type: !1143)
!5164 = !DILocation(line: 3748, column: 50, scope: !5160)
!5165 = !DILocalVariable(name: "expression", arg: 2, scope: !5160, file: !1, line: 3748, type: !924)
!5166 = !DILocation(line: 3748, column: 67, scope: !5160)
!5167 = !DILocalVariable(name: "fx_wand", scope: !5160, file: !1, line: 3751, type: !1143)
!5168 = !DILocation(line: 3751, column: 6, scope: !5160)
!5169 = !DILocation(line: 3753, column: 32, scope: !5160)
!5170 = !DILocation(line: 3753, column: 53, scope: !5160)
!5171 = !DILocation(line: 3753, column: 11, scope: !5160)
!5172 = !DILocation(line: 3753, column: 10, scope: !5160)
!5173 = !DILocation(line: 3754, column: 10, scope: !5160)
!5174 = !DILocation(line: 3754, column: 3, scope: !5160)
!5175 = distinct !DISubprogram(name: "MagickFxImageChannel", scope: !1, file: !1, line: 3757, type: !5176, scopeLine: 3759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!1143, !1143, !1507, !924}
!5178 = !DILocalVariable(name: "wand", arg: 1, scope: !5175, file: !1, line: 3757, type: !1143)
!5179 = !DILocation(line: 3757, column: 57, scope: !5175)
!5180 = !DILocalVariable(name: "channel", arg: 2, scope: !5175, file: !1, line: 3758, type: !1507)
!5181 = !DILocation(line: 3758, column: 21, scope: !5175)
!5182 = !DILocalVariable(name: "expression", arg: 3, scope: !5175, file: !1, line: 3758, type: !924)
!5183 = !DILocation(line: 3758, column: 41, scope: !5175)
!5184 = !DILocalVariable(name: "fx_image", scope: !5175, file: !1, line: 3761, type: !791)
!5185 = !DILocation(line: 3761, column: 6, scope: !5175)
!5186 = !DILocation(line: 3765, column: 7, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5175, file: !1, line: 3765, column: 7)
!5188 = !DILocation(line: 3765, column: 13, scope: !5187)
!5189 = !DILocation(line: 3765, column: 19, scope: !5187)
!5190 = !DILocation(line: 3765, column: 7, scope: !5175)
!5191 = !DILocation(line: 3766, column: 60, scope: !5187)
!5192 = !DILocation(line: 3766, column: 66, scope: !5187)
!5193 = !DILocation(line: 3766, column: 12, scope: !5187)
!5194 = !DILocation(line: 3766, column: 5, scope: !5187)
!5195 = !DILocation(line: 3767, column: 7, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5175, file: !1, line: 3767, column: 7)
!5197 = !DILocation(line: 3767, column: 13, scope: !5196)
!5198 = !DILocation(line: 3767, column: 20, scope: !5196)
!5199 = !DILocation(line: 3767, column: 7, scope: !5175)
!5200 = !DILocation(line: 3768, column: 5, scope: !5196)
!5201 = !DILocation(line: 3769, column: 27, scope: !5175)
!5202 = !DILocation(line: 3769, column: 33, scope: !5175)
!5203 = !DILocation(line: 3769, column: 40, scope: !5175)
!5204 = !DILocation(line: 3769, column: 48, scope: !5175)
!5205 = !DILocation(line: 3769, column: 59, scope: !5175)
!5206 = !DILocation(line: 3769, column: 65, scope: !5175)
!5207 = !DILocation(line: 3769, column: 12, scope: !5175)
!5208 = !DILocation(line: 3769, column: 11, scope: !5175)
!5209 = !DILocation(line: 3770, column: 7, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5175, file: !1, line: 3770, column: 7)
!5211 = !DILocation(line: 3770, column: 16, scope: !5210)
!5212 = !DILocation(line: 3770, column: 7, scope: !5175)
!5213 = !DILocation(line: 3771, column: 5, scope: !5210)
!5214 = !DILocation(line: 3772, column: 36, scope: !5175)
!5215 = !DILocation(line: 3772, column: 41, scope: !5175)
!5216 = !DILocation(line: 3772, column: 10, scope: !5175)
!5217 = !DILocation(line: 3772, column: 3, scope: !5175)
!5218 = !DILocation(line: 3773, column: 1, scope: !5175)
!5219 = distinct !DISubprogram(name: "MagickGammaImage", scope: !1, file: !1, line: 3811, type: !2403, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5220 = !DILocalVariable(name: "wand", arg: 1, scope: !5219, file: !1, line: 3811, type: !1143)
!5221 = !DILocation(line: 3811, column: 59, scope: !5219)
!5222 = !DILocalVariable(name: "gamma", arg: 2, scope: !5219, file: !1, line: 3812, type: !1325)
!5223 = !DILocation(line: 3812, column: 16, scope: !5219)
!5224 = !DILocalVariable(name: "status", scope: !5219, file: !1, line: 3815, type: !807)
!5225 = !DILocation(line: 3815, column: 5, scope: !5219)
!5226 = !DILocation(line: 3817, column: 34, scope: !5219)
!5227 = !DILocation(line: 3817, column: 55, scope: !5219)
!5228 = !DILocation(line: 3817, column: 10, scope: !5219)
!5229 = !DILocation(line: 3817, column: 9, scope: !5219)
!5230 = !DILocation(line: 3818, column: 10, scope: !5219)
!5231 = !DILocation(line: 3818, column: 3, scope: !5219)
!5232 = distinct !DISubprogram(name: "MagickGammaImageChannel", scope: !1, file: !1, line: 3821, type: !5233, scopeLine: 3823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{!807, !1143, !1507, !1325}
!5235 = !DILocalVariable(name: "wand", arg: 1, scope: !5232, file: !1, line: 3821, type: !1143)
!5236 = !DILocation(line: 3821, column: 66, scope: !5232)
!5237 = !DILocalVariable(name: "channel", arg: 2, scope: !5232, file: !1, line: 3822, type: !1507)
!5238 = !DILocation(line: 3822, column: 21, scope: !5232)
!5239 = !DILocalVariable(name: "gamma", arg: 3, scope: !5232, file: !1, line: 3822, type: !1325)
!5240 = !DILocation(line: 3822, column: 42, scope: !5232)
!5241 = !DILocalVariable(name: "status", scope: !5232, file: !1, line: 3825, type: !807)
!5242 = !DILocation(line: 3825, column: 5, scope: !5232)
!5243 = !DILocation(line: 3829, column: 7, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5232, file: !1, line: 3829, column: 7)
!5245 = !DILocation(line: 3829, column: 13, scope: !5244)
!5246 = !DILocation(line: 3829, column: 19, scope: !5244)
!5247 = !DILocation(line: 3829, column: 7, scope: !5232)
!5248 = !DILocation(line: 3830, column: 60, scope: !5244)
!5249 = !DILocation(line: 3830, column: 66, scope: !5244)
!5250 = !DILocation(line: 3830, column: 12, scope: !5244)
!5251 = !DILocation(line: 3830, column: 5, scope: !5244)
!5252 = !DILocation(line: 3831, column: 7, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5232, file: !1, line: 3831, column: 7)
!5254 = !DILocation(line: 3831, column: 13, scope: !5253)
!5255 = !DILocation(line: 3831, column: 20, scope: !5253)
!5256 = !DILocation(line: 3831, column: 7, scope: !5232)
!5257 = !DILocation(line: 3832, column: 5, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5253, file: !1, line: 3832, column: 5)
!5259 = !DILocation(line: 3833, column: 28, scope: !5232)
!5260 = !DILocation(line: 3833, column: 34, scope: !5232)
!5261 = !DILocation(line: 3833, column: 41, scope: !5232)
!5262 = !DILocation(line: 3833, column: 49, scope: !5232)
!5263 = !DILocation(line: 3833, column: 10, scope: !5232)
!5264 = !DILocation(line: 3833, column: 9, scope: !5232)
!5265 = !DILocation(line: 3834, column: 7, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5232, file: !1, line: 3834, column: 7)
!5267 = !DILocation(line: 3834, column: 14, scope: !5266)
!5268 = !DILocation(line: 3834, column: 7, scope: !5232)
!5269 = !DILocation(line: 3835, column: 22, scope: !5266)
!5270 = !DILocation(line: 3835, column: 28, scope: !5266)
!5271 = !DILocation(line: 3835, column: 39, scope: !5266)
!5272 = !DILocation(line: 3835, column: 45, scope: !5266)
!5273 = !DILocation(line: 3835, column: 53, scope: !5266)
!5274 = !DILocation(line: 3835, column: 5, scope: !5266)
!5275 = !DILocation(line: 3836, column: 10, scope: !5232)
!5276 = !DILocation(line: 3836, column: 3, scope: !5232)
!5277 = !DILocation(line: 3837, column: 1, scope: !5232)
!5278 = distinct !DISubprogram(name: "MagickGaussianBlurImage", scope: !1, file: !1, line: 3875, type: !1487, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5279 = !DILocalVariable(name: "wand", arg: 1, scope: !5278, file: !1, line: 3875, type: !1143)
!5280 = !DILocation(line: 3875, column: 66, scope: !5278)
!5281 = !DILocalVariable(name: "radius", arg: 2, scope: !5278, file: !1, line: 3876, type: !1325)
!5282 = !DILocation(line: 3876, column: 16, scope: !5278)
!5283 = !DILocalVariable(name: "sigma", arg: 3, scope: !5278, file: !1, line: 3876, type: !1325)
!5284 = !DILocation(line: 3876, column: 36, scope: !5278)
!5285 = !DILocalVariable(name: "status", scope: !5278, file: !1, line: 3879, type: !807)
!5286 = !DILocation(line: 3879, column: 5, scope: !5278)
!5287 = !DILocation(line: 3881, column: 41, scope: !5278)
!5288 = !DILocation(line: 3881, column: 62, scope: !5278)
!5289 = !DILocation(line: 3881, column: 69, scope: !5278)
!5290 = !DILocation(line: 3881, column: 10, scope: !5278)
!5291 = !DILocation(line: 3881, column: 9, scope: !5278)
!5292 = !DILocation(line: 3882, column: 10, scope: !5278)
!5293 = !DILocation(line: 3882, column: 3, scope: !5278)
!5294 = distinct !DISubprogram(name: "MagickGaussianBlurImageChannel", scope: !1, file: !1, line: 3885, type: !1505, scopeLine: 3887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5295 = !DILocalVariable(name: "wand", arg: 1, scope: !5294, file: !1, line: 3885, type: !1143)
!5296 = !DILocation(line: 3885, column: 73, scope: !5294)
!5297 = !DILocalVariable(name: "channel", arg: 2, scope: !5294, file: !1, line: 3886, type: !1507)
!5298 = !DILocation(line: 3886, column: 21, scope: !5294)
!5299 = !DILocalVariable(name: "radius", arg: 3, scope: !5294, file: !1, line: 3886, type: !1325)
!5300 = !DILocation(line: 3886, column: 42, scope: !5294)
!5301 = !DILocalVariable(name: "sigma", arg: 4, scope: !5294, file: !1, line: 3886, type: !1325)
!5302 = !DILocation(line: 3886, column: 62, scope: !5294)
!5303 = !DILocalVariable(name: "blur_image", scope: !5294, file: !1, line: 3889, type: !791)
!5304 = !DILocation(line: 3889, column: 6, scope: !5294)
!5305 = !DILocation(line: 3893, column: 7, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5294, file: !1, line: 3893, column: 7)
!5307 = !DILocation(line: 3893, column: 13, scope: !5306)
!5308 = !DILocation(line: 3893, column: 19, scope: !5306)
!5309 = !DILocation(line: 3893, column: 7, scope: !5294)
!5310 = !DILocation(line: 3894, column: 60, scope: !5306)
!5311 = !DILocation(line: 3894, column: 66, scope: !5306)
!5312 = !DILocation(line: 3894, column: 12, scope: !5306)
!5313 = !DILocation(line: 3894, column: 5, scope: !5306)
!5314 = !DILocation(line: 3895, column: 7, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5294, file: !1, line: 3895, column: 7)
!5316 = !DILocation(line: 3895, column: 13, scope: !5315)
!5317 = !DILocation(line: 3895, column: 20, scope: !5315)
!5318 = !DILocation(line: 3895, column: 7, scope: !5294)
!5319 = !DILocation(line: 3896, column: 5, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5315, file: !1, line: 3896, column: 5)
!5321 = !DILocation(line: 3897, column: 39, scope: !5294)
!5322 = !DILocation(line: 3897, column: 45, scope: !5294)
!5323 = !DILocation(line: 3897, column: 52, scope: !5294)
!5324 = !DILocation(line: 3897, column: 60, scope: !5294)
!5325 = !DILocation(line: 3897, column: 67, scope: !5294)
!5326 = !DILocation(line: 3898, column: 5, scope: !5294)
!5327 = !DILocation(line: 3898, column: 11, scope: !5294)
!5328 = !DILocation(line: 3897, column: 14, scope: !5294)
!5329 = !DILocation(line: 3897, column: 13, scope: !5294)
!5330 = !DILocation(line: 3899, column: 7, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5294, file: !1, line: 3899, column: 7)
!5332 = !DILocation(line: 3899, column: 18, scope: !5331)
!5333 = !DILocation(line: 3899, column: 7, scope: !5294)
!5334 = !DILocation(line: 3900, column: 5, scope: !5331)
!5335 = !DILocation(line: 3901, column: 23, scope: !5294)
!5336 = !DILocation(line: 3901, column: 29, scope: !5294)
!5337 = !DILocation(line: 3901, column: 36, scope: !5294)
!5338 = !DILocation(line: 3901, column: 3, scope: !5294)
!5339 = !DILocation(line: 3902, column: 3, scope: !5294)
!5340 = !DILocation(line: 3903, column: 1, scope: !5294)
!5341 = distinct !DISubprogram(name: "MagickGetImage", scope: !1, file: !1, line: 3927, type: !2940, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5342 = !DILocalVariable(name: "wand", arg: 1, scope: !5341, file: !1, line: 3927, type: !1143)
!5343 = !DILocation(line: 3927, column: 51, scope: !5341)
!5344 = !DILocalVariable(name: "image", scope: !5341, file: !1, line: 3930, type: !791)
!5345 = !DILocation(line: 3930, column: 6, scope: !5341)
!5346 = !DILocation(line: 3934, column: 7, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !1, line: 3934, column: 7)
!5348 = !DILocation(line: 3934, column: 13, scope: !5347)
!5349 = !DILocation(line: 3934, column: 19, scope: !5347)
!5350 = !DILocation(line: 3934, column: 7, scope: !5341)
!5351 = !DILocation(line: 3935, column: 60, scope: !5347)
!5352 = !DILocation(line: 3935, column: 66, scope: !5347)
!5353 = !DILocation(line: 3935, column: 12, scope: !5347)
!5354 = !DILocation(line: 3935, column: 5, scope: !5347)
!5355 = !DILocation(line: 3936, column: 7, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5341, file: !1, line: 3936, column: 7)
!5357 = !DILocation(line: 3936, column: 13, scope: !5356)
!5358 = !DILocation(line: 3936, column: 20, scope: !5356)
!5359 = !DILocation(line: 3936, column: 7, scope: !5341)
!5360 = !DILocation(line: 3938, column: 35, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5356, file: !1, line: 3937, column: 5)
!5362 = !DILocation(line: 3938, column: 41, scope: !5361)
!5363 = !DILocation(line: 3939, column: 35, scope: !5361)
!5364 = !DILocation(line: 3939, column: 41, scope: !5361)
!5365 = !DILocation(line: 3938, column: 14, scope: !5361)
!5366 = !DILocation(line: 3940, column: 7, scope: !5361)
!5367 = !DILocation(line: 3942, column: 20, scope: !5341)
!5368 = !DILocation(line: 3942, column: 26, scope: !5341)
!5369 = !DILocation(line: 3942, column: 48, scope: !5341)
!5370 = !DILocation(line: 3942, column: 54, scope: !5341)
!5371 = !DILocation(line: 3942, column: 9, scope: !5341)
!5372 = !DILocation(line: 3942, column: 8, scope: !5341)
!5373 = !DILocation(line: 3943, column: 7, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5341, file: !1, line: 3943, column: 7)
!5375 = !DILocation(line: 3943, column: 13, scope: !5374)
!5376 = !DILocation(line: 3943, column: 7, scope: !5341)
!5377 = !DILocation(line: 3944, column: 5, scope: !5374)
!5378 = !DILocation(line: 3945, column: 36, scope: !5341)
!5379 = !DILocation(line: 3945, column: 41, scope: !5341)
!5380 = !DILocation(line: 3945, column: 10, scope: !5341)
!5381 = !DILocation(line: 3945, column: 3, scope: !5341)
!5382 = !DILocation(line: 3946, column: 1, scope: !5341)
!5383 = distinct !DISubprogram(name: "MagickGetImageAlphaChannel", scope: !1, file: !1, line: 3972, type: !2240, scopeLine: 3973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5384 = !DILocalVariable(name: "wand", arg: 1, scope: !5383, file: !1, line: 3972, type: !1143)
!5385 = !DILocation(line: 3972, column: 69, scope: !5383)
!5386 = !DILocation(line: 3976, column: 7, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5383, file: !1, line: 3976, column: 7)
!5388 = !DILocation(line: 3976, column: 13, scope: !5387)
!5389 = !DILocation(line: 3976, column: 19, scope: !5387)
!5390 = !DILocation(line: 3976, column: 7, scope: !5383)
!5391 = !DILocation(line: 3977, column: 60, scope: !5387)
!5392 = !DILocation(line: 3977, column: 66, scope: !5387)
!5393 = !DILocation(line: 3977, column: 12, scope: !5387)
!5394 = !DILocation(line: 3977, column: 5, scope: !5387)
!5395 = !DILocation(line: 3978, column: 7, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5383, file: !1, line: 3978, column: 7)
!5397 = !DILocation(line: 3978, column: 13, scope: !5396)
!5398 = !DILocation(line: 3978, column: 20, scope: !5396)
!5399 = !DILocation(line: 3978, column: 7, scope: !5383)
!5400 = !DILocation(line: 3979, column: 5, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5396, file: !1, line: 3979, column: 5)
!5402 = !DILocation(line: 3980, column: 31, scope: !5383)
!5403 = !DILocation(line: 3980, column: 37, scope: !5383)
!5404 = !DILocation(line: 3980, column: 10, scope: !5383)
!5405 = !DILocation(line: 3980, column: 3, scope: !5383)
!5406 = !DILocation(line: 3981, column: 1, scope: !5383)
!5407 = distinct !DISubprogram(name: "MagickGetImageClipMask", scope: !1, file: !1, line: 4005, type: !2940, scopeLine: 4006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5408 = !DILocalVariable(name: "wand", arg: 1, scope: !5407, file: !1, line: 4005, type: !1143)
!5409 = !DILocation(line: 4005, column: 59, scope: !5407)
!5410 = !DILocalVariable(name: "image", scope: !5407, file: !1, line: 4008, type: !791)
!5411 = !DILocation(line: 4008, column: 6, scope: !5407)
!5412 = !DILocation(line: 4012, column: 7, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5407, file: !1, line: 4012, column: 7)
!5414 = !DILocation(line: 4012, column: 13, scope: !5413)
!5415 = !DILocation(line: 4012, column: 19, scope: !5413)
!5416 = !DILocation(line: 4012, column: 7, scope: !5407)
!5417 = !DILocation(line: 4013, column: 60, scope: !5413)
!5418 = !DILocation(line: 4013, column: 66, scope: !5413)
!5419 = !DILocation(line: 4013, column: 12, scope: !5413)
!5420 = !DILocation(line: 4013, column: 5, scope: !5413)
!5421 = !DILocation(line: 4014, column: 7, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5407, file: !1, line: 4014, column: 7)
!5423 = !DILocation(line: 4014, column: 13, scope: !5422)
!5424 = !DILocation(line: 4014, column: 20, scope: !5422)
!5425 = !DILocation(line: 4014, column: 7, scope: !5407)
!5426 = !DILocation(line: 4016, column: 35, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5422, file: !1, line: 4015, column: 5)
!5428 = !DILocation(line: 4016, column: 41, scope: !5427)
!5429 = !DILocation(line: 4017, column: 35, scope: !5427)
!5430 = !DILocation(line: 4017, column: 41, scope: !5427)
!5431 = !DILocation(line: 4016, column: 14, scope: !5427)
!5432 = !DILocation(line: 4018, column: 7, scope: !5427)
!5433 = !DILocation(line: 4020, column: 26, scope: !5407)
!5434 = !DILocation(line: 4020, column: 32, scope: !5407)
!5435 = !DILocation(line: 4020, column: 39, scope: !5407)
!5436 = !DILocation(line: 4020, column: 45, scope: !5407)
!5437 = !DILocation(line: 4020, column: 9, scope: !5407)
!5438 = !DILocation(line: 4020, column: 8, scope: !5407)
!5439 = !DILocation(line: 4021, column: 7, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5407, file: !1, line: 4021, column: 7)
!5441 = !DILocation(line: 4021, column: 13, scope: !5440)
!5442 = !DILocation(line: 4021, column: 7, scope: !5407)
!5443 = !DILocation(line: 4022, column: 5, scope: !5440)
!5444 = !DILocation(line: 4023, column: 36, scope: !5407)
!5445 = !DILocation(line: 4023, column: 41, scope: !5407)
!5446 = !DILocation(line: 4023, column: 10, scope: !5407)
!5447 = !DILocation(line: 4023, column: 3, scope: !5407)
!5448 = !DILocation(line: 4024, column: 1, scope: !5407)
!5449 = distinct !DISubprogram(name: "MagickGetImageBackgroundColor", scope: !1, file: !1, line: 4051, type: !5450, scopeLine: 4053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!807, !1143, !1326}
!5452 = !DILocalVariable(name: "wand", arg: 1, scope: !5449, file: !1, line: 4051, type: !1143)
!5453 = !DILocation(line: 4051, column: 72, scope: !5449)
!5454 = !DILocalVariable(name: "background_color", arg: 2, scope: !5449, file: !1, line: 4052, type: !1326)
!5455 = !DILocation(line: 4052, column: 14, scope: !5449)
!5456 = !DILocation(line: 4056, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5449, file: !1, line: 4056, column: 7)
!5458 = !DILocation(line: 4056, column: 13, scope: !5457)
!5459 = !DILocation(line: 4056, column: 19, scope: !5457)
!5460 = !DILocation(line: 4056, column: 7, scope: !5449)
!5461 = !DILocation(line: 4057, column: 60, scope: !5457)
!5462 = !DILocation(line: 4057, column: 66, scope: !5457)
!5463 = !DILocation(line: 4057, column: 12, scope: !5457)
!5464 = !DILocation(line: 4057, column: 5, scope: !5457)
!5465 = !DILocation(line: 4058, column: 7, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5449, file: !1, line: 4058, column: 7)
!5467 = !DILocation(line: 4058, column: 13, scope: !5466)
!5468 = !DILocation(line: 4058, column: 20, scope: !5466)
!5469 = !DILocation(line: 4058, column: 7, scope: !5449)
!5470 = !DILocation(line: 4059, column: 5, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5466, file: !1, line: 4059, column: 5)
!5472 = !DILocation(line: 4060, column: 24, scope: !5449)
!5473 = !DILocation(line: 4060, column: 42, scope: !5449)
!5474 = !DILocation(line: 4060, column: 48, scope: !5449)
!5475 = !DILocation(line: 4060, column: 56, scope: !5449)
!5476 = !DILocation(line: 4060, column: 3, scope: !5449)
!5477 = !DILocation(line: 4061, column: 3, scope: !5449)
!5478 = !DILocation(line: 4062, column: 1, scope: !5449)
!5479 = distinct !DISubprogram(name: "MagickGetImageBlob", scope: !1, file: !1, line: 4096, type: !5480, scopeLine: 4097, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!980, !1143, !5482}
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!5483 = !DILocalVariable(name: "wand", arg: 1, scope: !5479, file: !1, line: 4096, type: !1143)
!5484 = !DILocation(line: 4096, column: 58, scope: !5479)
!5485 = !DILocalVariable(name: "length", arg: 2, scope: !5479, file: !1, line: 4096, type: !5482)
!5486 = !DILocation(line: 4096, column: 71, scope: !5479)
!5487 = !DILocation(line: 4100, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5479, file: !1, line: 4100, column: 7)
!5489 = !DILocation(line: 4100, column: 13, scope: !5488)
!5490 = !DILocation(line: 4100, column: 19, scope: !5488)
!5491 = !DILocation(line: 4100, column: 7, scope: !5479)
!5492 = !DILocation(line: 4101, column: 60, scope: !5488)
!5493 = !DILocation(line: 4101, column: 66, scope: !5488)
!5494 = !DILocation(line: 4101, column: 12, scope: !5488)
!5495 = !DILocation(line: 4101, column: 5, scope: !5488)
!5496 = !DILocation(line: 4102, column: 7, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5479, file: !1, line: 4102, column: 7)
!5498 = !DILocation(line: 4102, column: 13, scope: !5497)
!5499 = !DILocation(line: 4102, column: 20, scope: !5497)
!5500 = !DILocation(line: 4102, column: 7, scope: !5479)
!5501 = !DILocation(line: 4104, column: 35, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5497, file: !1, line: 4103, column: 5)
!5503 = !DILocation(line: 4104, column: 41, scope: !5502)
!5504 = !DILocation(line: 4105, column: 35, scope: !5502)
!5505 = !DILocation(line: 4105, column: 41, scope: !5502)
!5506 = !DILocation(line: 4104, column: 14, scope: !5502)
!5507 = !DILocation(line: 4106, column: 7, scope: !5502)
!5508 = !DILocation(line: 4108, column: 22, scope: !5479)
!5509 = !DILocation(line: 4108, column: 28, scope: !5479)
!5510 = !DILocation(line: 4108, column: 39, scope: !5479)
!5511 = !DILocation(line: 4108, column: 45, scope: !5479)
!5512 = !DILocation(line: 4108, column: 52, scope: !5479)
!5513 = !DILocation(line: 4108, column: 59, scope: !5479)
!5514 = !DILocation(line: 4108, column: 65, scope: !5479)
!5515 = !DILocation(line: 4108, column: 10, scope: !5479)
!5516 = !DILocation(line: 4108, column: 3, scope: !5479)
!5517 = !DILocation(line: 4109, column: 1, scope: !5479)
!5518 = distinct !DISubprogram(name: "MagickGetImagesBlob", scope: !1, file: !1, line: 4142, type: !5480, scopeLine: 4143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5519 = !DILocalVariable(name: "wand", arg: 1, scope: !5518, file: !1, line: 4142, type: !1143)
!5520 = !DILocation(line: 4142, column: 59, scope: !5518)
!5521 = !DILocalVariable(name: "length", arg: 2, scope: !5518, file: !1, line: 4142, type: !5482)
!5522 = !DILocation(line: 4142, column: 72, scope: !5518)
!5523 = !DILocalVariable(name: "blob", scope: !5518, file: !1, line: 4145, type: !980)
!5524 = !DILocation(line: 4145, column: 6, scope: !5518)
!5525 = !DILocation(line: 4149, column: 7, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5518, file: !1, line: 4149, column: 7)
!5527 = !DILocation(line: 4149, column: 13, scope: !5526)
!5528 = !DILocation(line: 4149, column: 19, scope: !5526)
!5529 = !DILocation(line: 4149, column: 7, scope: !5518)
!5530 = !DILocation(line: 4150, column: 60, scope: !5526)
!5531 = !DILocation(line: 4150, column: 66, scope: !5526)
!5532 = !DILocation(line: 4150, column: 12, scope: !5526)
!5533 = !DILocation(line: 4150, column: 5, scope: !5526)
!5534 = !DILocation(line: 4151, column: 7, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5518, file: !1, line: 4151, column: 7)
!5536 = !DILocation(line: 4151, column: 13, scope: !5535)
!5537 = !DILocation(line: 4151, column: 20, scope: !5535)
!5538 = !DILocation(line: 4151, column: 7, scope: !5518)
!5539 = !DILocation(line: 4153, column: 35, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5535, file: !1, line: 4152, column: 5)
!5541 = !DILocation(line: 4153, column: 41, scope: !5540)
!5542 = !DILocation(line: 4154, column: 35, scope: !5540)
!5543 = !DILocation(line: 4154, column: 41, scope: !5540)
!5544 = !DILocation(line: 4153, column: 14, scope: !5540)
!5545 = !DILocation(line: 4155, column: 7, scope: !5540)
!5546 = !DILocation(line: 4157, column: 21, scope: !5518)
!5547 = !DILocation(line: 4157, column: 27, scope: !5518)
!5548 = !DILocation(line: 4157, column: 58, scope: !5518)
!5549 = !DILocation(line: 4157, column: 64, scope: !5518)
!5550 = !DILocation(line: 4157, column: 38, scope: !5518)
!5551 = !DILocation(line: 4157, column: 72, scope: !5518)
!5552 = !DILocation(line: 4158, column: 5, scope: !5518)
!5553 = !DILocation(line: 4158, column: 11, scope: !5518)
!5554 = !DILocation(line: 4157, column: 8, scope: !5518)
!5555 = !DILocation(line: 4157, column: 7, scope: !5518)
!5556 = !DILocation(line: 4159, column: 10, scope: !5518)
!5557 = !DILocation(line: 4159, column: 3, scope: !5518)
!5558 = !DILocation(line: 4160, column: 1, scope: !5518)
!5559 = distinct !DISubprogram(name: "MagickGetImageBluePrimary", scope: !1, file: !1, line: 4190, type: !5560, scopeLine: 4192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!807, !1143, !1117, !1117}
!5562 = !DILocalVariable(name: "wand", arg: 1, scope: !5559, file: !1, line: 4190, type: !1143)
!5563 = !DILocation(line: 4190, column: 68, scope: !5559)
!5564 = !DILocalVariable(name: "x", arg: 2, scope: !5559, file: !1, line: 4191, type: !1117)
!5565 = !DILocation(line: 4191, column: 11, scope: !5559)
!5566 = !DILocalVariable(name: "y", arg: 3, scope: !5559, file: !1, line: 4191, type: !1117)
!5567 = !DILocation(line: 4191, column: 21, scope: !5559)
!5568 = !DILocation(line: 4195, column: 7, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 4195, column: 7)
!5570 = !DILocation(line: 4195, column: 13, scope: !5569)
!5571 = !DILocation(line: 4195, column: 19, scope: !5569)
!5572 = !DILocation(line: 4195, column: 7, scope: !5559)
!5573 = !DILocation(line: 4196, column: 60, scope: !5569)
!5574 = !DILocation(line: 4196, column: 66, scope: !5569)
!5575 = !DILocation(line: 4196, column: 12, scope: !5569)
!5576 = !DILocation(line: 4196, column: 5, scope: !5569)
!5577 = !DILocation(line: 4197, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 4197, column: 7)
!5579 = !DILocation(line: 4197, column: 13, scope: !5578)
!5580 = !DILocation(line: 4197, column: 20, scope: !5578)
!5581 = !DILocation(line: 4197, column: 7, scope: !5559)
!5582 = !DILocation(line: 4198, column: 5, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5578, file: !1, line: 4198, column: 5)
!5584 = !DILocation(line: 4199, column: 6, scope: !5559)
!5585 = !DILocation(line: 4199, column: 12, scope: !5559)
!5586 = !DILocation(line: 4199, column: 20, scope: !5559)
!5587 = !DILocation(line: 4199, column: 33, scope: !5559)
!5588 = !DILocation(line: 4199, column: 46, scope: !5559)
!5589 = !DILocation(line: 4199, column: 4, scope: !5559)
!5590 = !DILocation(line: 4199, column: 5, scope: !5559)
!5591 = !DILocation(line: 4200, column: 6, scope: !5559)
!5592 = !DILocation(line: 4200, column: 12, scope: !5559)
!5593 = !DILocation(line: 4200, column: 20, scope: !5559)
!5594 = !DILocation(line: 4200, column: 33, scope: !5559)
!5595 = !DILocation(line: 4200, column: 46, scope: !5559)
!5596 = !DILocation(line: 4200, column: 4, scope: !5559)
!5597 = !DILocation(line: 4200, column: 5, scope: !5559)
!5598 = !DILocation(line: 4201, column: 3, scope: !5559)
!5599 = !DILocation(line: 4202, column: 1, scope: !5559)
!5600 = distinct !DISubprogram(name: "MagickGetImageBorderColor", scope: !1, file: !1, line: 4229, type: !5450, scopeLine: 4231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5601 = !DILocalVariable(name: "wand", arg: 1, scope: !5600, file: !1, line: 4229, type: !1143)
!5602 = !DILocation(line: 4229, column: 68, scope: !5600)
!5603 = !DILocalVariable(name: "border_color", arg: 2, scope: !5600, file: !1, line: 4230, type: !1326)
!5604 = !DILocation(line: 4230, column: 14, scope: !5600)
!5605 = !DILocation(line: 4234, column: 7, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5600, file: !1, line: 4234, column: 7)
!5607 = !DILocation(line: 4234, column: 13, scope: !5606)
!5608 = !DILocation(line: 4234, column: 19, scope: !5606)
!5609 = !DILocation(line: 4234, column: 7, scope: !5600)
!5610 = !DILocation(line: 4235, column: 60, scope: !5606)
!5611 = !DILocation(line: 4235, column: 66, scope: !5606)
!5612 = !DILocation(line: 4235, column: 12, scope: !5606)
!5613 = !DILocation(line: 4235, column: 5, scope: !5606)
!5614 = !DILocation(line: 4236, column: 7, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5600, file: !1, line: 4236, column: 7)
!5616 = !DILocation(line: 4236, column: 13, scope: !5615)
!5617 = !DILocation(line: 4236, column: 20, scope: !5615)
!5618 = !DILocation(line: 4236, column: 7, scope: !5600)
!5619 = !DILocation(line: 4237, column: 5, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5615, file: !1, line: 4237, column: 5)
!5621 = !DILocation(line: 4238, column: 24, scope: !5600)
!5622 = !DILocation(line: 4238, column: 38, scope: !5600)
!5623 = !DILocation(line: 4238, column: 44, scope: !5600)
!5624 = !DILocation(line: 4238, column: 52, scope: !5600)
!5625 = !DILocation(line: 4238, column: 3, scope: !5600)
!5626 = !DILocation(line: 4239, column: 3, scope: !5600)
!5627 = !DILocation(line: 4240, column: 1, scope: !5600)
!5628 = distinct !DISubprogram(name: "MagickGetImageChannelDepth", scope: !1, file: !1, line: 4267, type: !5629, scopeLine: 4269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!802, !1143, !1507}
!5631 = !DILocalVariable(name: "wand", arg: 1, scope: !5628, file: !1, line: 4267, type: !1143)
!5632 = !DILocation(line: 4267, column: 58, scope: !5628)
!5633 = !DILocalVariable(name: "channel", arg: 2, scope: !5628, file: !1, line: 4268, type: !1507)
!5634 = !DILocation(line: 4268, column: 21, scope: !5628)
!5635 = !DILocation(line: 4272, column: 7, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5628, file: !1, line: 4272, column: 7)
!5637 = !DILocation(line: 4272, column: 13, scope: !5636)
!5638 = !DILocation(line: 4272, column: 19, scope: !5636)
!5639 = !DILocation(line: 4272, column: 7, scope: !5628)
!5640 = !DILocation(line: 4273, column: 60, scope: !5636)
!5641 = !DILocation(line: 4273, column: 66, scope: !5636)
!5642 = !DILocation(line: 4273, column: 12, scope: !5636)
!5643 = !DILocation(line: 4273, column: 5, scope: !5636)
!5644 = !DILocation(line: 4274, column: 7, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5628, file: !1, line: 4274, column: 7)
!5646 = !DILocation(line: 4274, column: 13, scope: !5645)
!5647 = !DILocation(line: 4274, column: 20, scope: !5645)
!5648 = !DILocation(line: 4274, column: 7, scope: !5628)
!5649 = !DILocation(line: 4275, column: 5, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 4275, column: 5)
!5651 = !DILocation(line: 4276, column: 31, scope: !5628)
!5652 = !DILocation(line: 4276, column: 37, scope: !5628)
!5653 = !DILocation(line: 4276, column: 44, scope: !5628)
!5654 = !DILocation(line: 4276, column: 52, scope: !5628)
!5655 = !DILocation(line: 4276, column: 58, scope: !5628)
!5656 = !DILocation(line: 4276, column: 10, scope: !5628)
!5657 = !DILocation(line: 4276, column: 3, scope: !5628)
!5658 = !DILocation(line: 4277, column: 1, scope: !5628)
!5659 = distinct !DISubprogram(name: "MagickGetImageChannelDistortion", scope: !1, file: !1, line: 4312, type: !5660, scopeLine: 4315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!807, !1143, !1456, !1507, !3216, !1117}
!5662 = !DILocalVariable(name: "wand", arg: 1, scope: !5659, file: !1, line: 4312, type: !1143)
!5663 = !DILocation(line: 4312, column: 74, scope: !5659)
!5664 = !DILocalVariable(name: "reference", arg: 2, scope: !5659, file: !1, line: 4313, type: !1456)
!5665 = !DILocation(line: 4313, column: 21, scope: !5659)
!5666 = !DILocalVariable(name: "channel", arg: 3, scope: !5659, file: !1, line: 4313, type: !1507)
!5667 = !DILocation(line: 4313, column: 49, scope: !5659)
!5668 = !DILocalVariable(name: "metric", arg: 4, scope: !5659, file: !1, line: 4313, type: !3216)
!5669 = !DILocation(line: 4313, column: 74, scope: !5659)
!5670 = !DILocalVariable(name: "distortion", arg: 5, scope: !5659, file: !1, line: 4314, type: !1117)
!5671 = !DILocation(line: 4314, column: 11, scope: !5659)
!5672 = !DILocalVariable(name: "status", scope: !5659, file: !1, line: 4317, type: !807)
!5673 = !DILocation(line: 4317, column: 5, scope: !5659)
!5674 = !DILocation(line: 4321, column: 7, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5659, file: !1, line: 4321, column: 7)
!5676 = !DILocation(line: 4321, column: 13, scope: !5675)
!5677 = !DILocation(line: 4321, column: 19, scope: !5675)
!5678 = !DILocation(line: 4321, column: 7, scope: !5659)
!5679 = !DILocation(line: 4322, column: 60, scope: !5675)
!5680 = !DILocation(line: 4322, column: 66, scope: !5675)
!5681 = !DILocation(line: 4322, column: 12, scope: !5675)
!5682 = !DILocation(line: 4322, column: 5, scope: !5675)
!5683 = !DILocation(line: 4325, column: 8, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5659, file: !1, line: 4325, column: 7)
!5685 = !DILocation(line: 4325, column: 14, scope: !5684)
!5686 = !DILocation(line: 4325, column: 21, scope: !5684)
!5687 = !DILocation(line: 4325, column: 40, scope: !5684)
!5688 = !DILocation(line: 4325, column: 44, scope: !5684)
!5689 = !DILocation(line: 4325, column: 55, scope: !5684)
!5690 = !DILocation(line: 4325, column: 62, scope: !5684)
!5691 = !DILocation(line: 4325, column: 7, scope: !5659)
!5692 = !DILocation(line: 4326, column: 5, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 4326, column: 5)
!5694 = !DILocation(line: 4327, column: 36, scope: !5659)
!5695 = !DILocation(line: 4327, column: 42, scope: !5659)
!5696 = !DILocation(line: 4327, column: 49, scope: !5659)
!5697 = !DILocation(line: 4327, column: 60, scope: !5659)
!5698 = !DILocation(line: 4327, column: 67, scope: !5659)
!5699 = !DILocation(line: 4328, column: 5, scope: !5659)
!5700 = !DILocation(line: 4328, column: 12, scope: !5659)
!5701 = !DILocation(line: 4328, column: 24, scope: !5659)
!5702 = !DILocation(line: 4328, column: 30, scope: !5659)
!5703 = !DILocation(line: 4328, column: 38, scope: !5659)
!5704 = !DILocation(line: 4327, column: 10, scope: !5659)
!5705 = !DILocation(line: 4327, column: 9, scope: !5659)
!5706 = !DILocation(line: 4329, column: 10, scope: !5659)
!5707 = !DILocation(line: 4329, column: 3, scope: !5659)
!5708 = !DILocation(line: 4330, column: 1, scope: !5659)
!5709 = distinct !DISubprogram(name: "MagickGetImageChannelDistortions", scope: !1, file: !1, line: 4362, type: !5710, scopeLine: 4364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!1117, !1143, !1456, !3216}
!5712 = !DILocalVariable(name: "wand", arg: 1, scope: !5709, file: !1, line: 4362, type: !1143)
!5713 = !DILocation(line: 4362, column: 65, scope: !5709)
!5714 = !DILocalVariable(name: "reference", arg: 2, scope: !5709, file: !1, line: 4363, type: !1456)
!5715 = !DILocation(line: 4363, column: 21, scope: !5709)
!5716 = !DILocalVariable(name: "metric", arg: 3, scope: !5709, file: !1, line: 4363, type: !3216)
!5717 = !DILocation(line: 4363, column: 48, scope: !5709)
!5718 = !DILocalVariable(name: "channel_distortion", scope: !5709, file: !1, line: 4366, type: !1117)
!5719 = !DILocation(line: 4366, column: 6, scope: !5709)
!5720 = !DILocation(line: 4370, column: 7, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 4370, column: 7)
!5722 = !DILocation(line: 4370, column: 13, scope: !5721)
!5723 = !DILocation(line: 4370, column: 19, scope: !5721)
!5724 = !DILocation(line: 4370, column: 7, scope: !5709)
!5725 = !DILocation(line: 4371, column: 60, scope: !5721)
!5726 = !DILocation(line: 4371, column: 66, scope: !5721)
!5727 = !DILocation(line: 4371, column: 12, scope: !5721)
!5728 = !DILocation(line: 4371, column: 5, scope: !5721)
!5729 = !DILocation(line: 4374, column: 8, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 4374, column: 7)
!5731 = !DILocation(line: 4374, column: 14, scope: !5730)
!5732 = !DILocation(line: 4374, column: 21, scope: !5730)
!5733 = !DILocation(line: 4374, column: 40, scope: !5730)
!5734 = !DILocation(line: 4374, column: 44, scope: !5730)
!5735 = !DILocation(line: 4374, column: 55, scope: !5730)
!5736 = !DILocation(line: 4374, column: 62, scope: !5730)
!5737 = !DILocation(line: 4374, column: 7, scope: !5709)
!5738 = !DILocation(line: 4376, column: 35, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5730, file: !1, line: 4375, column: 5)
!5740 = !DILocation(line: 4376, column: 41, scope: !5739)
!5741 = !DILocation(line: 4377, column: 35, scope: !5739)
!5742 = !DILocation(line: 4377, column: 41, scope: !5739)
!5743 = !DILocation(line: 4376, column: 14, scope: !5739)
!5744 = !DILocation(line: 4378, column: 7, scope: !5739)
!5745 = !DILocation(line: 4380, column: 49, scope: !5709)
!5746 = !DILocation(line: 4380, column: 55, scope: !5709)
!5747 = !DILocation(line: 4380, column: 62, scope: !5709)
!5748 = !DILocation(line: 4380, column: 73, scope: !5709)
!5749 = !DILocation(line: 4381, column: 5, scope: !5709)
!5750 = !DILocation(line: 4381, column: 13, scope: !5709)
!5751 = !DILocation(line: 4381, column: 19, scope: !5709)
!5752 = !DILocation(line: 4381, column: 27, scope: !5709)
!5753 = !DILocation(line: 4380, column: 22, scope: !5709)
!5754 = !DILocation(line: 4380, column: 21, scope: !5709)
!5755 = !DILocation(line: 4382, column: 10, scope: !5709)
!5756 = !DILocation(line: 4382, column: 3, scope: !5709)
!5757 = !DILocation(line: 4383, column: 1, scope: !5709)
!5758 = distinct !DISubprogram(name: "MagickGetImageChannelFeatures", scope: !1, file: !1, line: 4423, type: !5759, scopeLine: 4425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{!1330, !1143, !1214}
!5761 = !DILocalVariable(name: "wand", arg: 1, scope: !5758, file: !1, line: 4423, type: !1143)
!5762 = !DILocation(line: 4423, column: 71, scope: !5758)
!5763 = !DILocalVariable(name: "distance", arg: 2, scope: !5758, file: !1, line: 4424, type: !1214)
!5764 = !DILocation(line: 4424, column: 16, scope: !5758)
!5765 = !DILocation(line: 4428, column: 7, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5758, file: !1, line: 4428, column: 7)
!5767 = !DILocation(line: 4428, column: 13, scope: !5766)
!5768 = !DILocation(line: 4428, column: 19, scope: !5766)
!5769 = !DILocation(line: 4428, column: 7, scope: !5758)
!5770 = !DILocation(line: 4429, column: 60, scope: !5766)
!5771 = !DILocation(line: 4429, column: 66, scope: !5766)
!5772 = !DILocation(line: 4429, column: 12, scope: !5766)
!5773 = !DILocation(line: 4429, column: 5, scope: !5766)
!5774 = !DILocation(line: 4430, column: 7, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5758, file: !1, line: 4430, column: 7)
!5776 = !DILocation(line: 4430, column: 13, scope: !5775)
!5777 = !DILocation(line: 4430, column: 20, scope: !5775)
!5778 = !DILocation(line: 4430, column: 7, scope: !5758)
!5779 = !DILocation(line: 4432, column: 35, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !1, line: 4431, column: 5)
!5781 = !DILocation(line: 4432, column: 41, scope: !5780)
!5782 = !DILocation(line: 4433, column: 35, scope: !5780)
!5783 = !DILocation(line: 4433, column: 41, scope: !5780)
!5784 = !DILocation(line: 4432, column: 14, scope: !5780)
!5785 = !DILocation(line: 4434, column: 7, scope: !5780)
!5786 = !DILocation(line: 4436, column: 34, scope: !5758)
!5787 = !DILocation(line: 4436, column: 40, scope: !5758)
!5788 = !DILocation(line: 4436, column: 47, scope: !5758)
!5789 = !DILocation(line: 4436, column: 56, scope: !5758)
!5790 = !DILocation(line: 4436, column: 62, scope: !5758)
!5791 = !DILocation(line: 4436, column: 10, scope: !5758)
!5792 = !DILocation(line: 4436, column: 3, scope: !5758)
!5793 = !DILocation(line: 4437, column: 1, scope: !5758)
!5794 = distinct !DISubprogram(name: "MagickGetImageChannelKurtosis", scope: !1, file: !1, line: 4469, type: !5795, scopeLine: 4471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5795 = !DISubroutineType(types: !5796)
!5796 = !{!807, !1143, !1507, !1117, !1117}
!5797 = !DILocalVariable(name: "wand", arg: 1, scope: !5794, file: !1, line: 4469, type: !1143)
!5798 = !DILocation(line: 4469, column: 72, scope: !5794)
!5799 = !DILocalVariable(name: "channel", arg: 2, scope: !5794, file: !1, line: 4470, type: !1507)
!5800 = !DILocation(line: 4470, column: 21, scope: !5794)
!5801 = !DILocalVariable(name: "kurtosis", arg: 3, scope: !5794, file: !1, line: 4470, type: !1117)
!5802 = !DILocation(line: 4470, column: 37, scope: !5794)
!5803 = !DILocalVariable(name: "skewness", arg: 4, scope: !5794, file: !1, line: 4470, type: !1117)
!5804 = !DILocation(line: 4470, column: 54, scope: !5794)
!5805 = !DILocalVariable(name: "status", scope: !5794, file: !1, line: 4473, type: !807)
!5806 = !DILocation(line: 4473, column: 5, scope: !5794)
!5807 = !DILocation(line: 4477, column: 7, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5794, file: !1, line: 4477, column: 7)
!5809 = !DILocation(line: 4477, column: 13, scope: !5808)
!5810 = !DILocation(line: 4477, column: 19, scope: !5808)
!5811 = !DILocation(line: 4477, column: 7, scope: !5794)
!5812 = !DILocation(line: 4478, column: 60, scope: !5808)
!5813 = !DILocation(line: 4478, column: 66, scope: !5808)
!5814 = !DILocation(line: 4478, column: 12, scope: !5808)
!5815 = !DILocation(line: 4478, column: 5, scope: !5808)
!5816 = !DILocation(line: 4479, column: 7, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5794, file: !1, line: 4479, column: 7)
!5818 = !DILocation(line: 4479, column: 13, scope: !5817)
!5819 = !DILocation(line: 4479, column: 20, scope: !5817)
!5820 = !DILocation(line: 4479, column: 7, scope: !5794)
!5821 = !DILocation(line: 4480, column: 5, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5817, file: !1, line: 4480, column: 5)
!5823 = !DILocation(line: 4481, column: 34, scope: !5794)
!5824 = !DILocation(line: 4481, column: 40, scope: !5794)
!5825 = !DILocation(line: 4481, column: 47, scope: !5794)
!5826 = !DILocation(line: 4481, column: 55, scope: !5794)
!5827 = !DILocation(line: 4481, column: 64, scope: !5794)
!5828 = !DILocation(line: 4482, column: 5, scope: !5794)
!5829 = !DILocation(line: 4482, column: 11, scope: !5794)
!5830 = !DILocation(line: 4481, column: 10, scope: !5794)
!5831 = !DILocation(line: 4481, column: 9, scope: !5794)
!5832 = !DILocation(line: 4483, column: 10, scope: !5794)
!5833 = !DILocation(line: 4483, column: 3, scope: !5794)
!5834 = !DILocation(line: 4484, column: 1, scope: !5794)
!5835 = distinct !DISubprogram(name: "MagickGetImageChannelMean", scope: !1, file: !1, line: 4516, type: !5795, scopeLine: 4518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5836 = !DILocalVariable(name: "wand", arg: 1, scope: !5835, file: !1, line: 4516, type: !1143)
!5837 = !DILocation(line: 4516, column: 68, scope: !5835)
!5838 = !DILocalVariable(name: "channel", arg: 2, scope: !5835, file: !1, line: 4517, type: !1507)
!5839 = !DILocation(line: 4517, column: 21, scope: !5835)
!5840 = !DILocalVariable(name: "mean", arg: 3, scope: !5835, file: !1, line: 4517, type: !1117)
!5841 = !DILocation(line: 4517, column: 37, scope: !5835)
!5842 = !DILocalVariable(name: "standard_deviation", arg: 4, scope: !5835, file: !1, line: 4517, type: !1117)
!5843 = !DILocation(line: 4517, column: 50, scope: !5835)
!5844 = !DILocalVariable(name: "status", scope: !5835, file: !1, line: 4520, type: !807)
!5845 = !DILocation(line: 4520, column: 5, scope: !5835)
!5846 = !DILocation(line: 4524, column: 7, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5835, file: !1, line: 4524, column: 7)
!5848 = !DILocation(line: 4524, column: 13, scope: !5847)
!5849 = !DILocation(line: 4524, column: 19, scope: !5847)
!5850 = !DILocation(line: 4524, column: 7, scope: !5835)
!5851 = !DILocation(line: 4525, column: 60, scope: !5847)
!5852 = !DILocation(line: 4525, column: 66, scope: !5847)
!5853 = !DILocation(line: 4525, column: 12, scope: !5847)
!5854 = !DILocation(line: 4525, column: 5, scope: !5847)
!5855 = !DILocation(line: 4526, column: 7, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5835, file: !1, line: 4526, column: 7)
!5857 = !DILocation(line: 4526, column: 13, scope: !5856)
!5858 = !DILocation(line: 4526, column: 20, scope: !5856)
!5859 = !DILocation(line: 4526, column: 7, scope: !5835)
!5860 = !DILocation(line: 4527, column: 5, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5856, file: !1, line: 4527, column: 5)
!5862 = !DILocation(line: 4528, column: 30, scope: !5835)
!5863 = !DILocation(line: 4528, column: 36, scope: !5835)
!5864 = !DILocation(line: 4528, column: 43, scope: !5835)
!5865 = !DILocation(line: 4528, column: 51, scope: !5835)
!5866 = !DILocation(line: 4528, column: 56, scope: !5835)
!5867 = !DILocation(line: 4529, column: 5, scope: !5835)
!5868 = !DILocation(line: 4529, column: 11, scope: !5835)
!5869 = !DILocation(line: 4528, column: 10, scope: !5835)
!5870 = !DILocation(line: 4528, column: 9, scope: !5835)
!5871 = !DILocation(line: 4530, column: 10, scope: !5835)
!5872 = !DILocation(line: 4530, column: 3, scope: !5835)
!5873 = !DILocation(line: 4531, column: 1, scope: !5835)
!5874 = distinct !DISubprogram(name: "MagickGetImageChannelRange", scope: !1, file: !1, line: 4562, type: !5795, scopeLine: 4564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5875 = !DILocalVariable(name: "wand", arg: 1, scope: !5874, file: !1, line: 4562, type: !1143)
!5876 = !DILocation(line: 4562, column: 69, scope: !5874)
!5877 = !DILocalVariable(name: "channel", arg: 2, scope: !5874, file: !1, line: 4563, type: !1507)
!5878 = !DILocation(line: 4563, column: 21, scope: !5874)
!5879 = !DILocalVariable(name: "minima", arg: 3, scope: !5874, file: !1, line: 4563, type: !1117)
!5880 = !DILocation(line: 4563, column: 37, scope: !5874)
!5881 = !DILocalVariable(name: "maxima", arg: 4, scope: !5874, file: !1, line: 4563, type: !1117)
!5882 = !DILocation(line: 4563, column: 52, scope: !5874)
!5883 = !DILocalVariable(name: "status", scope: !5874, file: !1, line: 4566, type: !807)
!5884 = !DILocation(line: 4566, column: 5, scope: !5874)
!5885 = !DILocation(line: 4570, column: 7, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 4570, column: 7)
!5887 = !DILocation(line: 4570, column: 13, scope: !5886)
!5888 = !DILocation(line: 4570, column: 19, scope: !5886)
!5889 = !DILocation(line: 4570, column: 7, scope: !5874)
!5890 = !DILocation(line: 4571, column: 60, scope: !5886)
!5891 = !DILocation(line: 4571, column: 66, scope: !5886)
!5892 = !DILocation(line: 4571, column: 12, scope: !5886)
!5893 = !DILocation(line: 4571, column: 5, scope: !5886)
!5894 = !DILocation(line: 4572, column: 7, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 4572, column: 7)
!5896 = !DILocation(line: 4572, column: 13, scope: !5895)
!5897 = !DILocation(line: 4572, column: 20, scope: !5895)
!5898 = !DILocation(line: 4572, column: 7, scope: !5874)
!5899 = !DILocation(line: 4573, column: 5, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !1, line: 4573, column: 5)
!5901 = !DILocation(line: 4574, column: 31, scope: !5874)
!5902 = !DILocation(line: 4574, column: 37, scope: !5874)
!5903 = !DILocation(line: 4574, column: 44, scope: !5874)
!5904 = !DILocation(line: 4574, column: 52, scope: !5874)
!5905 = !DILocation(line: 4574, column: 59, scope: !5874)
!5906 = !DILocation(line: 4575, column: 5, scope: !5874)
!5907 = !DILocation(line: 4575, column: 11, scope: !5874)
!5908 = !DILocation(line: 4574, column: 10, scope: !5874)
!5909 = !DILocation(line: 4574, column: 9, scope: !5874)
!5910 = !DILocation(line: 4576, column: 10, scope: !5874)
!5911 = !DILocation(line: 4576, column: 3, scope: !5874)
!5912 = !DILocation(line: 4577, column: 1, scope: !5874)
!5913 = distinct !DISubprogram(name: "MagickGetImageChannelStatistics", scope: !1, file: !1, line: 4609, type: !5914, scopeLine: 4610, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!1352, !1143}
!5916 = !DILocalVariable(name: "wand", arg: 1, scope: !5913, file: !1, line: 4609, type: !1143)
!5917 = !DILocation(line: 4609, column: 75, scope: !5913)
!5918 = !DILocation(line: 4613, column: 7, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5913, file: !1, line: 4613, column: 7)
!5920 = !DILocation(line: 4613, column: 13, scope: !5919)
!5921 = !DILocation(line: 4613, column: 19, scope: !5919)
!5922 = !DILocation(line: 4613, column: 7, scope: !5913)
!5923 = !DILocation(line: 4614, column: 60, scope: !5919)
!5924 = !DILocation(line: 4614, column: 66, scope: !5919)
!5925 = !DILocation(line: 4614, column: 12, scope: !5919)
!5926 = !DILocation(line: 4614, column: 5, scope: !5919)
!5927 = !DILocation(line: 4615, column: 7, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5913, file: !1, line: 4615, column: 7)
!5929 = !DILocation(line: 4615, column: 13, scope: !5928)
!5930 = !DILocation(line: 4615, column: 20, scope: !5928)
!5931 = !DILocation(line: 4615, column: 7, scope: !5913)
!5932 = !DILocation(line: 4617, column: 35, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5928, file: !1, line: 4616, column: 5)
!5934 = !DILocation(line: 4617, column: 41, scope: !5933)
!5935 = !DILocation(line: 4618, column: 35, scope: !5933)
!5936 = !DILocation(line: 4618, column: 41, scope: !5933)
!5937 = !DILocation(line: 4617, column: 14, scope: !5933)
!5938 = !DILocation(line: 4619, column: 7, scope: !5933)
!5939 = !DILocation(line: 4621, column: 36, scope: !5913)
!5940 = !DILocation(line: 4621, column: 42, scope: !5913)
!5941 = !DILocation(line: 4621, column: 49, scope: !5913)
!5942 = !DILocation(line: 4621, column: 55, scope: !5913)
!5943 = !DILocation(line: 4621, column: 10, scope: !5913)
!5944 = !DILocation(line: 4621, column: 3, scope: !5913)
!5945 = !DILocation(line: 4622, column: 1, scope: !5913)
!5946 = distinct !DISubprogram(name: "MagickGetImageColormapColor", scope: !1, file: !1, line: 4652, type: !5947, scopeLine: 4654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!5947 = !DISubroutineType(types: !5948)
!5948 = !{!807, !1143, !1214, !1326}
!5949 = !DILocalVariable(name: "wand", arg: 1, scope: !5946, file: !1, line: 4652, type: !1143)
!5950 = !DILocation(line: 4652, column: 70, scope: !5946)
!5951 = !DILocalVariable(name: "index", arg: 2, scope: !5946, file: !1, line: 4653, type: !1214)
!5952 = !DILocation(line: 4653, column: 16, scope: !5946)
!5953 = !DILocalVariable(name: "color", arg: 3, scope: !5946, file: !1, line: 4653, type: !1326)
!5954 = !DILocation(line: 4653, column: 33, scope: !5946)
!5955 = !DILocation(line: 4657, column: 7, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5946, file: !1, line: 4657, column: 7)
!5957 = !DILocation(line: 4657, column: 13, scope: !5956)
!5958 = !DILocation(line: 4657, column: 19, scope: !5956)
!5959 = !DILocation(line: 4657, column: 7, scope: !5946)
!5960 = !DILocation(line: 4658, column: 60, scope: !5956)
!5961 = !DILocation(line: 4658, column: 66, scope: !5956)
!5962 = !DILocation(line: 4658, column: 12, scope: !5956)
!5963 = !DILocation(line: 4658, column: 5, scope: !5956)
!5964 = !DILocation(line: 4659, column: 7, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5946, file: !1, line: 4659, column: 7)
!5966 = !DILocation(line: 4659, column: 13, scope: !5965)
!5967 = !DILocation(line: 4659, column: 20, scope: !5965)
!5968 = !DILocation(line: 4659, column: 7, scope: !5946)
!5969 = !DILocation(line: 4660, column: 5, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5965, file: !1, line: 4660, column: 5)
!5971 = !DILocation(line: 4661, column: 8, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5946, file: !1, line: 4661, column: 7)
!5973 = !DILocation(line: 4661, column: 14, scope: !5972)
!5974 = !DILocation(line: 4661, column: 22, scope: !5972)
!5975 = !DILocation(line: 4661, column: 31, scope: !5972)
!5976 = !DILocation(line: 4661, column: 56, scope: !5972)
!5977 = !DILocation(line: 4662, column: 8, scope: !5972)
!5978 = !DILocation(line: 4662, column: 17, scope: !5972)
!5979 = !DILocation(line: 4662, column: 23, scope: !5972)
!5980 = !DILocation(line: 4662, column: 31, scope: !5972)
!5981 = !DILocation(line: 4662, column: 14, scope: !5972)
!5982 = !DILocation(line: 4661, column: 7, scope: !5946)
!5983 = !DILocation(line: 4664, column: 35, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5972, file: !1, line: 4663, column: 5)
!5985 = !DILocation(line: 4664, column: 41, scope: !5984)
!5986 = !DILocation(line: 4665, column: 39, scope: !5984)
!5987 = !DILocation(line: 4665, column: 45, scope: !5984)
!5988 = !DILocation(line: 4664, column: 14, scope: !5984)
!5989 = !DILocation(line: 4666, column: 7, scope: !5984)
!5990 = !DILocation(line: 4668, column: 24, scope: !5946)
!5991 = !DILocation(line: 4668, column: 30, scope: !5946)
!5992 = !DILocation(line: 4668, column: 36, scope: !5946)
!5993 = !DILocation(line: 4668, column: 44, scope: !5946)
!5994 = !DILocation(line: 4668, column: 53, scope: !5946)
!5995 = !DILocation(line: 4668, column: 52, scope: !5946)
!5996 = !DILocation(line: 4668, column: 3, scope: !5946)
!5997 = !DILocation(line: 4669, column: 3, scope: !5946)
!5998 = !DILocation(line: 4670, column: 1, scope: !5946)
!5999 = distinct !DISubprogram(name: "MagickGetImageColors", scope: !1, file: !1, line: 4694, type: !6000, scopeLine: 4695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!802, !1143}
!6002 = !DILocalVariable(name: "wand", arg: 1, scope: !5999, file: !1, line: 4694, type: !1143)
!6003 = !DILocation(line: 4694, column: 52, scope: !5999)
!6004 = !DILocation(line: 4698, column: 7, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5999, file: !1, line: 4698, column: 7)
!6006 = !DILocation(line: 4698, column: 13, scope: !6005)
!6007 = !DILocation(line: 4698, column: 19, scope: !6005)
!6008 = !DILocation(line: 4698, column: 7, scope: !5999)
!6009 = !DILocation(line: 4699, column: 60, scope: !6005)
!6010 = !DILocation(line: 4699, column: 66, scope: !6005)
!6011 = !DILocation(line: 4699, column: 12, scope: !6005)
!6012 = !DILocation(line: 4699, column: 5, scope: !6005)
!6013 = !DILocation(line: 4700, column: 7, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5999, file: !1, line: 4700, column: 7)
!6015 = !DILocation(line: 4700, column: 13, scope: !6014)
!6016 = !DILocation(line: 4700, column: 20, scope: !6014)
!6017 = !DILocation(line: 4700, column: 7, scope: !5999)
!6018 = !DILocation(line: 4702, column: 35, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !1, line: 4701, column: 5)
!6020 = !DILocation(line: 4702, column: 41, scope: !6019)
!6021 = !DILocation(line: 4703, column: 35, scope: !6019)
!6022 = !DILocation(line: 4703, column: 41, scope: !6019)
!6023 = !DILocation(line: 4702, column: 14, scope: !6019)
!6024 = !DILocation(line: 4704, column: 7, scope: !6019)
!6025 = !DILocation(line: 4706, column: 26, scope: !5999)
!6026 = !DILocation(line: 4706, column: 32, scope: !5999)
!6027 = !DILocation(line: 4706, column: 53, scope: !5999)
!6028 = !DILocation(line: 4706, column: 59, scope: !5999)
!6029 = !DILocation(line: 4706, column: 10, scope: !5999)
!6030 = !DILocation(line: 4706, column: 3, scope: !5999)
!6031 = !DILocation(line: 4707, column: 1, scope: !5999)
!6032 = distinct !DISubprogram(name: "MagickGetImageColorspace", scope: !1, file: !1, line: 4731, type: !6033, scopeLine: 4732, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!798, !1143}
!6035 = !DILocalVariable(name: "wand", arg: 1, scope: !6032, file: !1, line: 4731, type: !1143)
!6036 = !DILocation(line: 4731, column: 64, scope: !6032)
!6037 = !DILocation(line: 4735, column: 7, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6032, file: !1, line: 4735, column: 7)
!6039 = !DILocation(line: 4735, column: 13, scope: !6038)
!6040 = !DILocation(line: 4735, column: 19, scope: !6038)
!6041 = !DILocation(line: 4735, column: 7, scope: !6032)
!6042 = !DILocation(line: 4736, column: 60, scope: !6038)
!6043 = !DILocation(line: 4736, column: 66, scope: !6038)
!6044 = !DILocation(line: 4736, column: 12, scope: !6038)
!6045 = !DILocation(line: 4736, column: 5, scope: !6038)
!6046 = !DILocation(line: 4737, column: 7, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6032, file: !1, line: 4737, column: 7)
!6048 = !DILocation(line: 4737, column: 13, scope: !6047)
!6049 = !DILocation(line: 4737, column: 20, scope: !6047)
!6050 = !DILocation(line: 4737, column: 7, scope: !6032)
!6051 = !DILocation(line: 4739, column: 35, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6047, file: !1, line: 4738, column: 5)
!6053 = !DILocation(line: 4739, column: 41, scope: !6052)
!6054 = !DILocation(line: 4740, column: 35, scope: !6052)
!6055 = !DILocation(line: 4740, column: 41, scope: !6052)
!6056 = !DILocation(line: 4739, column: 14, scope: !6052)
!6057 = !DILocation(line: 4741, column: 7, scope: !6052)
!6058 = !DILocation(line: 4743, column: 10, scope: !6032)
!6059 = !DILocation(line: 4743, column: 16, scope: !6032)
!6060 = !DILocation(line: 4743, column: 24, scope: !6032)
!6061 = !DILocation(line: 4743, column: 3, scope: !6032)
!6062 = !DILocation(line: 4744, column: 1, scope: !6032)
!6063 = distinct !DISubprogram(name: "MagickGetImageCompose", scope: !1, file: !1, line: 4769, type: !6064, scopeLine: 4770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!884, !1143}
!6066 = !DILocalVariable(name: "wand", arg: 1, scope: !6063, file: !1, line: 4769, type: !1143)
!6067 = !DILocation(line: 4769, column: 64, scope: !6063)
!6068 = !DILocation(line: 4773, column: 7, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 4773, column: 7)
!6070 = !DILocation(line: 4773, column: 13, scope: !6069)
!6071 = !DILocation(line: 4773, column: 19, scope: !6069)
!6072 = !DILocation(line: 4773, column: 7, scope: !6063)
!6073 = !DILocation(line: 4774, column: 60, scope: !6069)
!6074 = !DILocation(line: 4774, column: 66, scope: !6069)
!6075 = !DILocation(line: 4774, column: 12, scope: !6069)
!6076 = !DILocation(line: 4774, column: 5, scope: !6069)
!6077 = !DILocation(line: 4775, column: 7, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 4775, column: 7)
!6079 = !DILocation(line: 4775, column: 13, scope: !6078)
!6080 = !DILocation(line: 4775, column: 20, scope: !6078)
!6081 = !DILocation(line: 4775, column: 7, scope: !6063)
!6082 = !DILocation(line: 4777, column: 35, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6078, file: !1, line: 4776, column: 5)
!6084 = !DILocation(line: 4777, column: 41, scope: !6083)
!6085 = !DILocation(line: 4778, column: 35, scope: !6083)
!6086 = !DILocation(line: 4778, column: 41, scope: !6083)
!6087 = !DILocation(line: 4777, column: 14, scope: !6083)
!6088 = !DILocation(line: 4779, column: 7, scope: !6083)
!6089 = !DILocation(line: 4781, column: 10, scope: !6063)
!6090 = !DILocation(line: 4781, column: 16, scope: !6063)
!6091 = !DILocation(line: 4781, column: 24, scope: !6063)
!6092 = !DILocation(line: 4781, column: 3, scope: !6063)
!6093 = !DILocation(line: 4782, column: 1, scope: !6063)
!6094 = distinct !DISubprogram(name: "MagickGetImageCompression", scope: !1, file: !1, line: 4806, type: !6095, scopeLine: 4807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{!800, !1143}
!6097 = !DILocalVariable(name: "wand", arg: 1, scope: !6094, file: !1, line: 4806, type: !1143)
!6098 = !DILocation(line: 4806, column: 66, scope: !6094)
!6099 = !DILocation(line: 4810, column: 7, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 4810, column: 7)
!6101 = !DILocation(line: 4810, column: 13, scope: !6100)
!6102 = !DILocation(line: 4810, column: 19, scope: !6100)
!6103 = !DILocation(line: 4810, column: 7, scope: !6094)
!6104 = !DILocation(line: 4811, column: 60, scope: !6100)
!6105 = !DILocation(line: 4811, column: 66, scope: !6100)
!6106 = !DILocation(line: 4811, column: 12, scope: !6100)
!6107 = !DILocation(line: 4811, column: 5, scope: !6100)
!6108 = !DILocation(line: 4812, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 4812, column: 7)
!6110 = !DILocation(line: 4812, column: 13, scope: !6109)
!6111 = !DILocation(line: 4812, column: 20, scope: !6109)
!6112 = !DILocation(line: 4812, column: 7, scope: !6094)
!6113 = !DILocation(line: 4814, column: 35, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !1, line: 4813, column: 5)
!6115 = !DILocation(line: 4814, column: 41, scope: !6114)
!6116 = !DILocation(line: 4815, column: 35, scope: !6114)
!6117 = !DILocation(line: 4815, column: 41, scope: !6114)
!6118 = !DILocation(line: 4814, column: 14, scope: !6114)
!6119 = !DILocation(line: 4816, column: 7, scope: !6114)
!6120 = !DILocation(line: 4818, column: 10, scope: !6094)
!6121 = !DILocation(line: 4818, column: 16, scope: !6094)
!6122 = !DILocation(line: 4818, column: 24, scope: !6094)
!6123 = !DILocation(line: 4818, column: 3, scope: !6094)
!6124 = !DILocation(line: 4819, column: 1, scope: !6094)
!6125 = distinct !DISubprogram(name: "MagickGetImageCompressionQuality", scope: !1, file: !1, line: 4843, type: !6000, scopeLine: 4844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6126 = !DILocalVariable(name: "wand", arg: 1, scope: !6125, file: !1, line: 4843, type: !1143)
!6127 = !DILocation(line: 4843, column: 64, scope: !6125)
!6128 = !DILocation(line: 4847, column: 7, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6125, file: !1, line: 4847, column: 7)
!6130 = !DILocation(line: 4847, column: 13, scope: !6129)
!6131 = !DILocation(line: 4847, column: 19, scope: !6129)
!6132 = !DILocation(line: 4847, column: 7, scope: !6125)
!6133 = !DILocation(line: 4848, column: 60, scope: !6129)
!6134 = !DILocation(line: 4848, column: 66, scope: !6129)
!6135 = !DILocation(line: 4848, column: 12, scope: !6129)
!6136 = !DILocation(line: 4848, column: 5, scope: !6129)
!6137 = !DILocation(line: 4849, column: 7, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6125, file: !1, line: 4849, column: 7)
!6139 = !DILocation(line: 4849, column: 13, scope: !6138)
!6140 = !DILocation(line: 4849, column: 20, scope: !6138)
!6141 = !DILocation(line: 4849, column: 7, scope: !6125)
!6142 = !DILocation(line: 4851, column: 35, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6138, file: !1, line: 4850, column: 5)
!6144 = !DILocation(line: 4851, column: 41, scope: !6143)
!6145 = !DILocation(line: 4852, column: 35, scope: !6143)
!6146 = !DILocation(line: 4852, column: 41, scope: !6143)
!6147 = !DILocation(line: 4851, column: 14, scope: !6143)
!6148 = !DILocation(line: 4853, column: 7, scope: !6143)
!6149 = !DILocation(line: 4855, column: 10, scope: !6125)
!6150 = !DILocation(line: 4855, column: 16, scope: !6125)
!6151 = !DILocation(line: 4855, column: 24, scope: !6125)
!6152 = !DILocation(line: 4855, column: 3, scope: !6125)
!6153 = !DILocation(line: 4856, column: 1, scope: !6125)
!6154 = distinct !DISubprogram(name: "MagickGetImageDelay", scope: !1, file: !1, line: 4880, type: !6000, scopeLine: 4881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6155 = !DILocalVariable(name: "wand", arg: 1, scope: !6154, file: !1, line: 4880, type: !1143)
!6156 = !DILocation(line: 4880, column: 51, scope: !6154)
!6157 = !DILocation(line: 4884, column: 7, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 4884, column: 7)
!6159 = !DILocation(line: 4884, column: 13, scope: !6158)
!6160 = !DILocation(line: 4884, column: 19, scope: !6158)
!6161 = !DILocation(line: 4884, column: 7, scope: !6154)
!6162 = !DILocation(line: 4885, column: 60, scope: !6158)
!6163 = !DILocation(line: 4885, column: 66, scope: !6158)
!6164 = !DILocation(line: 4885, column: 12, scope: !6158)
!6165 = !DILocation(line: 4885, column: 5, scope: !6158)
!6166 = !DILocation(line: 4886, column: 7, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 4886, column: 7)
!6168 = !DILocation(line: 4886, column: 13, scope: !6167)
!6169 = !DILocation(line: 4886, column: 20, scope: !6167)
!6170 = !DILocation(line: 4886, column: 7, scope: !6154)
!6171 = !DILocation(line: 4887, column: 5, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6167, file: !1, line: 4887, column: 5)
!6173 = !DILocation(line: 4888, column: 10, scope: !6154)
!6174 = !DILocation(line: 4888, column: 16, scope: !6154)
!6175 = !DILocation(line: 4888, column: 24, scope: !6154)
!6176 = !DILocation(line: 4888, column: 3, scope: !6154)
!6177 = !DILocation(line: 4889, column: 1, scope: !6154)
!6178 = distinct !DISubprogram(name: "MagickGetImageDepth", scope: !1, file: !1, line: 4913, type: !6000, scopeLine: 4914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6179 = !DILocalVariable(name: "wand", arg: 1, scope: !6178, file: !1, line: 4913, type: !1143)
!6180 = !DILocation(line: 4913, column: 51, scope: !6178)
!6181 = !DILocation(line: 4917, column: 7, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6178, file: !1, line: 4917, column: 7)
!6183 = !DILocation(line: 4917, column: 13, scope: !6182)
!6184 = !DILocation(line: 4917, column: 19, scope: !6182)
!6185 = !DILocation(line: 4917, column: 7, scope: !6178)
!6186 = !DILocation(line: 4918, column: 60, scope: !6182)
!6187 = !DILocation(line: 4918, column: 66, scope: !6182)
!6188 = !DILocation(line: 4918, column: 12, scope: !6182)
!6189 = !DILocation(line: 4918, column: 5, scope: !6182)
!6190 = !DILocation(line: 4919, column: 7, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6178, file: !1, line: 4919, column: 7)
!6192 = !DILocation(line: 4919, column: 13, scope: !6191)
!6193 = !DILocation(line: 4919, column: 20, scope: !6191)
!6194 = !DILocation(line: 4919, column: 7, scope: !6178)
!6195 = !DILocation(line: 4920, column: 5, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6191, file: !1, line: 4920, column: 5)
!6197 = !DILocation(line: 4921, column: 10, scope: !6178)
!6198 = !DILocation(line: 4921, column: 16, scope: !6178)
!6199 = !DILocation(line: 4921, column: 24, scope: !6178)
!6200 = !DILocation(line: 4921, column: 3, scope: !6178)
!6201 = !DILocation(line: 4922, column: 1, scope: !6178)
!6202 = distinct !DISubprogram(name: "MagickGetImageDistortion", scope: !1, file: !1, line: 4955, type: !6203, scopeLine: 4957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6203 = !DISubroutineType(types: !6204)
!6204 = !{!807, !1143, !1456, !3216, !1117}
!6205 = !DILocalVariable(name: "wand", arg: 1, scope: !6202, file: !1, line: 4955, type: !1143)
!6206 = !DILocation(line: 4955, column: 67, scope: !6202)
!6207 = !DILocalVariable(name: "reference", arg: 2, scope: !6202, file: !1, line: 4956, type: !1456)
!6208 = !DILocation(line: 4956, column: 21, scope: !6202)
!6209 = !DILocalVariable(name: "metric", arg: 3, scope: !6202, file: !1, line: 4956, type: !3216)
!6210 = !DILocation(line: 4956, column: 48, scope: !6202)
!6211 = !DILocalVariable(name: "distortion", arg: 4, scope: !6202, file: !1, line: 4956, type: !1117)
!6212 = !DILocation(line: 4956, column: 63, scope: !6202)
!6213 = !DILocalVariable(name: "status", scope: !6202, file: !1, line: 4959, type: !807)
!6214 = !DILocation(line: 4959, column: 5, scope: !6202)
!6215 = !DILocation(line: 4963, column: 7, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6202, file: !1, line: 4963, column: 7)
!6217 = !DILocation(line: 4963, column: 13, scope: !6216)
!6218 = !DILocation(line: 4963, column: 19, scope: !6216)
!6219 = !DILocation(line: 4963, column: 7, scope: !6202)
!6220 = !DILocation(line: 4964, column: 60, scope: !6216)
!6221 = !DILocation(line: 4964, column: 66, scope: !6216)
!6222 = !DILocation(line: 4964, column: 12, scope: !6216)
!6223 = !DILocation(line: 4964, column: 5, scope: !6216)
!6224 = !DILocation(line: 4965, column: 8, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6202, file: !1, line: 4965, column: 7)
!6226 = !DILocation(line: 4965, column: 14, scope: !6225)
!6227 = !DILocation(line: 4965, column: 21, scope: !6225)
!6228 = !DILocation(line: 4965, column: 40, scope: !6225)
!6229 = !DILocation(line: 4965, column: 44, scope: !6225)
!6230 = !DILocation(line: 4965, column: 55, scope: !6225)
!6231 = !DILocation(line: 4965, column: 62, scope: !6225)
!6232 = !DILocation(line: 4965, column: 7, scope: !6202)
!6233 = !DILocation(line: 4966, column: 5, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 4966, column: 5)
!6235 = !DILocation(line: 4967, column: 29, scope: !6202)
!6236 = !DILocation(line: 4967, column: 35, scope: !6202)
!6237 = !DILocation(line: 4967, column: 42, scope: !6202)
!6238 = !DILocation(line: 4967, column: 53, scope: !6202)
!6239 = !DILocation(line: 4967, column: 60, scope: !6202)
!6240 = !DILocation(line: 4967, column: 67, scope: !6202)
!6241 = !DILocation(line: 4968, column: 6, scope: !6202)
!6242 = !DILocation(line: 4968, column: 12, scope: !6202)
!6243 = !DILocation(line: 4968, column: 20, scope: !6202)
!6244 = !DILocation(line: 4967, column: 10, scope: !6202)
!6245 = !DILocation(line: 4967, column: 9, scope: !6202)
!6246 = !DILocation(line: 4969, column: 10, scope: !6202)
!6247 = !DILocation(line: 4969, column: 3, scope: !6202)
!6248 = !DILocation(line: 4970, column: 1, scope: !6202)
!6249 = distinct !DISubprogram(name: "MagickGetImageDispose", scope: !1, file: !1, line: 4994, type: !6250, scopeLine: 4995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!886, !1143}
!6252 = !DILocalVariable(name: "wand", arg: 1, scope: !6249, file: !1, line: 4994, type: !1143)
!6253 = !DILocation(line: 4994, column: 58, scope: !6249)
!6254 = !DILocation(line: 4998, column: 7, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6249, file: !1, line: 4998, column: 7)
!6256 = !DILocation(line: 4998, column: 13, scope: !6255)
!6257 = !DILocation(line: 4998, column: 19, scope: !6255)
!6258 = !DILocation(line: 4998, column: 7, scope: !6249)
!6259 = !DILocation(line: 4999, column: 60, scope: !6255)
!6260 = !DILocation(line: 4999, column: 66, scope: !6255)
!6261 = !DILocation(line: 4999, column: 12, scope: !6255)
!6262 = !DILocation(line: 4999, column: 5, scope: !6255)
!6263 = !DILocation(line: 5000, column: 7, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6249, file: !1, line: 5000, column: 7)
!6265 = !DILocation(line: 5000, column: 13, scope: !6264)
!6266 = !DILocation(line: 5000, column: 20, scope: !6264)
!6267 = !DILocation(line: 5000, column: 7, scope: !6249)
!6268 = !DILocation(line: 5002, column: 35, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6264, file: !1, line: 5001, column: 5)
!6270 = !DILocation(line: 5002, column: 41, scope: !6269)
!6271 = !DILocation(line: 5003, column: 35, scope: !6269)
!6272 = !DILocation(line: 5003, column: 41, scope: !6269)
!6273 = !DILocation(line: 5002, column: 14, scope: !6269)
!6274 = !DILocation(line: 5004, column: 7, scope: !6269)
!6275 = !DILocation(line: 5006, column: 24, scope: !6249)
!6276 = !DILocation(line: 5006, column: 30, scope: !6249)
!6277 = !DILocation(line: 5006, column: 38, scope: !6249)
!6278 = !DILocation(line: 5006, column: 3, scope: !6249)
!6279 = !DILocation(line: 5007, column: 1, scope: !6249)
!6280 = distinct !DISubprogram(name: "MagickGetImageEndian", scope: !1, file: !1, line: 5031, type: !6281, scopeLine: 5032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!880, !1143}
!6283 = !DILocalVariable(name: "wand", arg: 1, scope: !6280, file: !1, line: 5031, type: !1143)
!6284 = !DILocation(line: 5031, column: 56, scope: !6280)
!6285 = !DILocation(line: 5035, column: 7, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6280, file: !1, line: 5035, column: 7)
!6287 = !DILocation(line: 5035, column: 13, scope: !6286)
!6288 = !DILocation(line: 5035, column: 19, scope: !6286)
!6289 = !DILocation(line: 5035, column: 7, scope: !6280)
!6290 = !DILocation(line: 5036, column: 60, scope: !6286)
!6291 = !DILocation(line: 5036, column: 66, scope: !6286)
!6292 = !DILocation(line: 5036, column: 12, scope: !6286)
!6293 = !DILocation(line: 5036, column: 5, scope: !6286)
!6294 = !DILocation(line: 5037, column: 7, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6280, file: !1, line: 5037, column: 7)
!6296 = !DILocation(line: 5037, column: 13, scope: !6295)
!6297 = !DILocation(line: 5037, column: 20, scope: !6295)
!6298 = !DILocation(line: 5037, column: 7, scope: !6280)
!6299 = !DILocation(line: 5039, column: 35, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !1, line: 5038, column: 5)
!6301 = !DILocation(line: 5039, column: 41, scope: !6300)
!6302 = !DILocation(line: 5040, column: 35, scope: !6300)
!6303 = !DILocation(line: 5040, column: 41, scope: !6300)
!6304 = !DILocation(line: 5039, column: 14, scope: !6300)
!6305 = !DILocation(line: 5041, column: 7, scope: !6300)
!6306 = !DILocation(line: 5043, column: 10, scope: !6280)
!6307 = !DILocation(line: 5043, column: 16, scope: !6280)
!6308 = !DILocation(line: 5043, column: 24, scope: !6280)
!6309 = !DILocation(line: 5043, column: 3, scope: !6280)
!6310 = !DILocation(line: 5044, column: 1, scope: !6280)
!6311 = distinct !DISubprogram(name: "MagickGetImageFilename", scope: !1, file: !1, line: 5069, type: !6312, scopeLine: 5070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6312 = !DISubroutineType(types: !6313)
!6313 = !{!850, !1143}
!6314 = !DILocalVariable(name: "wand", arg: 1, scope: !6311, file: !1, line: 5069, type: !1143)
!6315 = !DILocation(line: 5069, column: 53, scope: !6311)
!6316 = !DILocation(line: 5073, column: 7, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6311, file: !1, line: 5073, column: 7)
!6318 = !DILocation(line: 5073, column: 13, scope: !6317)
!6319 = !DILocation(line: 5073, column: 19, scope: !6317)
!6320 = !DILocation(line: 5073, column: 7, scope: !6311)
!6321 = !DILocation(line: 5074, column: 60, scope: !6317)
!6322 = !DILocation(line: 5074, column: 66, scope: !6317)
!6323 = !DILocation(line: 5074, column: 12, scope: !6317)
!6324 = !DILocation(line: 5074, column: 5, scope: !6317)
!6325 = !DILocation(line: 5075, column: 7, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6311, file: !1, line: 5075, column: 7)
!6327 = !DILocation(line: 5075, column: 13, scope: !6326)
!6328 = !DILocation(line: 5075, column: 20, scope: !6326)
!6329 = !DILocation(line: 5075, column: 7, scope: !6311)
!6330 = !DILocation(line: 5077, column: 35, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6326, file: !1, line: 5076, column: 5)
!6332 = !DILocation(line: 5077, column: 41, scope: !6331)
!6333 = !DILocation(line: 5078, column: 35, scope: !6331)
!6334 = !DILocation(line: 5078, column: 41, scope: !6331)
!6335 = !DILocation(line: 5077, column: 14, scope: !6331)
!6336 = !DILocation(line: 5079, column: 7, scope: !6331)
!6337 = !DILocation(line: 5081, column: 24, scope: !6311)
!6338 = !DILocation(line: 5081, column: 30, scope: !6311)
!6339 = !DILocation(line: 5081, column: 38, scope: !6311)
!6340 = !DILocation(line: 5081, column: 10, scope: !6311)
!6341 = !DILocation(line: 5081, column: 3, scope: !6311)
!6342 = !DILocation(line: 5082, column: 1, scope: !6311)
!6343 = distinct !DISubprogram(name: "MagickGetImageFormat", scope: !1, file: !1, line: 5107, type: !6312, scopeLine: 5108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6344 = !DILocalVariable(name: "wand", arg: 1, scope: !6343, file: !1, line: 5107, type: !1143)
!6345 = !DILocation(line: 5107, column: 51, scope: !6343)
!6346 = !DILocation(line: 5111, column: 7, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !1, line: 5111, column: 7)
!6348 = !DILocation(line: 5111, column: 13, scope: !6347)
!6349 = !DILocation(line: 5111, column: 19, scope: !6347)
!6350 = !DILocation(line: 5111, column: 7, scope: !6343)
!6351 = !DILocation(line: 5112, column: 60, scope: !6347)
!6352 = !DILocation(line: 5112, column: 66, scope: !6347)
!6353 = !DILocation(line: 5112, column: 12, scope: !6347)
!6354 = !DILocation(line: 5112, column: 5, scope: !6347)
!6355 = !DILocation(line: 5113, column: 7, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6343, file: !1, line: 5113, column: 7)
!6357 = !DILocation(line: 5113, column: 13, scope: !6356)
!6358 = !DILocation(line: 5113, column: 20, scope: !6356)
!6359 = !DILocation(line: 5113, column: 7, scope: !6343)
!6360 = !DILocation(line: 5115, column: 35, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 5114, column: 5)
!6362 = !DILocation(line: 5115, column: 41, scope: !6361)
!6363 = !DILocation(line: 5116, column: 35, scope: !6361)
!6364 = !DILocation(line: 5116, column: 41, scope: !6361)
!6365 = !DILocation(line: 5115, column: 14, scope: !6361)
!6366 = !DILocation(line: 5117, column: 7, scope: !6361)
!6367 = !DILocation(line: 5119, column: 24, scope: !6343)
!6368 = !DILocation(line: 5119, column: 30, scope: !6343)
!6369 = !DILocation(line: 5119, column: 38, scope: !6343)
!6370 = !DILocation(line: 5119, column: 10, scope: !6343)
!6371 = !DILocation(line: 5119, column: 3, scope: !6343)
!6372 = !DILocation(line: 5120, column: 1, scope: !6343)
!6373 = distinct !DISubprogram(name: "MagickGetImageFuzz", scope: !1, file: !1, line: 5144, type: !6374, scopeLine: 5145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{!828, !1143}
!6376 = !DILocalVariable(name: "wand", arg: 1, scope: !6373, file: !1, line: 5144, type: !1143)
!6377 = !DILocation(line: 5144, column: 50, scope: !6373)
!6378 = !DILocation(line: 5148, column: 7, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 5148, column: 7)
!6380 = !DILocation(line: 5148, column: 13, scope: !6379)
!6381 = !DILocation(line: 5148, column: 19, scope: !6379)
!6382 = !DILocation(line: 5148, column: 7, scope: !6373)
!6383 = !DILocation(line: 5149, column: 60, scope: !6379)
!6384 = !DILocation(line: 5149, column: 66, scope: !6379)
!6385 = !DILocation(line: 5149, column: 12, scope: !6379)
!6386 = !DILocation(line: 5149, column: 5, scope: !6379)
!6387 = !DILocation(line: 5150, column: 7, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 5150, column: 7)
!6389 = !DILocation(line: 5150, column: 13, scope: !6388)
!6390 = !DILocation(line: 5150, column: 20, scope: !6388)
!6391 = !DILocation(line: 5150, column: 7, scope: !6373)
!6392 = !DILocation(line: 5152, column: 35, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6388, file: !1, line: 5151, column: 5)
!6394 = !DILocation(line: 5152, column: 41, scope: !6393)
!6395 = !DILocation(line: 5153, column: 35, scope: !6393)
!6396 = !DILocation(line: 5153, column: 41, scope: !6393)
!6397 = !DILocation(line: 5152, column: 14, scope: !6393)
!6398 = !DILocation(line: 5154, column: 7, scope: !6393)
!6399 = !DILocation(line: 5156, column: 10, scope: !6373)
!6400 = !DILocation(line: 5156, column: 16, scope: !6373)
!6401 = !DILocation(line: 5156, column: 24, scope: !6373)
!6402 = !DILocation(line: 5156, column: 3, scope: !6373)
!6403 = !DILocation(line: 5157, column: 1, scope: !6373)
!6404 = distinct !DISubprogram(name: "MagickGetImageGamma", scope: !1, file: !1, line: 5181, type: !6374, scopeLine: 5182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6405 = !DILocalVariable(name: "wand", arg: 1, scope: !6404, file: !1, line: 5181, type: !1143)
!6406 = !DILocation(line: 5181, column: 51, scope: !6404)
!6407 = !DILocation(line: 5185, column: 7, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !1, line: 5185, column: 7)
!6409 = !DILocation(line: 5185, column: 13, scope: !6408)
!6410 = !DILocation(line: 5185, column: 19, scope: !6408)
!6411 = !DILocation(line: 5185, column: 7, scope: !6404)
!6412 = !DILocation(line: 5186, column: 60, scope: !6408)
!6413 = !DILocation(line: 5186, column: 66, scope: !6408)
!6414 = !DILocation(line: 5186, column: 12, scope: !6408)
!6415 = !DILocation(line: 5186, column: 5, scope: !6408)
!6416 = !DILocation(line: 5187, column: 7, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6404, file: !1, line: 5187, column: 7)
!6418 = !DILocation(line: 5187, column: 13, scope: !6417)
!6419 = !DILocation(line: 5187, column: 20, scope: !6417)
!6420 = !DILocation(line: 5187, column: 7, scope: !6404)
!6421 = !DILocation(line: 5189, column: 35, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6417, file: !1, line: 5188, column: 5)
!6423 = !DILocation(line: 5189, column: 41, scope: !6422)
!6424 = !DILocation(line: 5190, column: 35, scope: !6422)
!6425 = !DILocation(line: 5190, column: 41, scope: !6422)
!6426 = !DILocation(line: 5189, column: 14, scope: !6422)
!6427 = !DILocation(line: 5191, column: 7, scope: !6422)
!6428 = !DILocation(line: 5193, column: 10, scope: !6404)
!6429 = !DILocation(line: 5193, column: 16, scope: !6404)
!6430 = !DILocation(line: 5193, column: 24, scope: !6404)
!6431 = !DILocation(line: 5193, column: 3, scope: !6404)
!6432 = !DILocation(line: 5194, column: 1, scope: !6404)
!6433 = distinct !DISubprogram(name: "MagickGetImageGravity", scope: !1, file: !1, line: 5218, type: !6434, scopeLine: 5219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6434 = !DISubroutineType(types: !6435)
!6435 = !{!882, !1143}
!6436 = !DILocalVariable(name: "wand", arg: 1, scope: !6433, file: !1, line: 5218, type: !1143)
!6437 = !DILocation(line: 5218, column: 58, scope: !6433)
!6438 = !DILocation(line: 5222, column: 7, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6433, file: !1, line: 5222, column: 7)
!6440 = !DILocation(line: 5222, column: 13, scope: !6439)
!6441 = !DILocation(line: 5222, column: 19, scope: !6439)
!6442 = !DILocation(line: 5222, column: 7, scope: !6433)
!6443 = !DILocation(line: 5223, column: 60, scope: !6439)
!6444 = !DILocation(line: 5223, column: 66, scope: !6439)
!6445 = !DILocation(line: 5223, column: 12, scope: !6439)
!6446 = !DILocation(line: 5223, column: 5, scope: !6439)
!6447 = !DILocation(line: 5224, column: 7, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6433, file: !1, line: 5224, column: 7)
!6449 = !DILocation(line: 5224, column: 13, scope: !6448)
!6450 = !DILocation(line: 5224, column: 20, scope: !6448)
!6451 = !DILocation(line: 5224, column: 7, scope: !6433)
!6452 = !DILocation(line: 5226, column: 35, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !1, line: 5225, column: 5)
!6454 = !DILocation(line: 5226, column: 41, scope: !6453)
!6455 = !DILocation(line: 5227, column: 35, scope: !6453)
!6456 = !DILocation(line: 5227, column: 41, scope: !6453)
!6457 = !DILocation(line: 5226, column: 14, scope: !6453)
!6458 = !DILocation(line: 5228, column: 7, scope: !6453)
!6459 = !DILocation(line: 5230, column: 10, scope: !6433)
!6460 = !DILocation(line: 5230, column: 16, scope: !6433)
!6461 = !DILocation(line: 5230, column: 24, scope: !6433)
!6462 = !DILocation(line: 5230, column: 3, scope: !6433)
!6463 = !DILocation(line: 5231, column: 1, scope: !6433)
!6464 = distinct !DISubprogram(name: "MagickGetImageGreenPrimary", scope: !1, file: !1, line: 5260, type: !5560, scopeLine: 5262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6465 = !DILocalVariable(name: "wand", arg: 1, scope: !6464, file: !1, line: 5260, type: !1143)
!6466 = !DILocation(line: 5260, column: 69, scope: !6464)
!6467 = !DILocalVariable(name: "x", arg: 2, scope: !6464, file: !1, line: 5261, type: !1117)
!6468 = !DILocation(line: 5261, column: 11, scope: !6464)
!6469 = !DILocalVariable(name: "y", arg: 3, scope: !6464, file: !1, line: 5261, type: !1117)
!6470 = !DILocation(line: 5261, column: 21, scope: !6464)
!6471 = !DILocation(line: 5265, column: 7, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6464, file: !1, line: 5265, column: 7)
!6473 = !DILocation(line: 5265, column: 13, scope: !6472)
!6474 = !DILocation(line: 5265, column: 19, scope: !6472)
!6475 = !DILocation(line: 5265, column: 7, scope: !6464)
!6476 = !DILocation(line: 5266, column: 60, scope: !6472)
!6477 = !DILocation(line: 5266, column: 66, scope: !6472)
!6478 = !DILocation(line: 5266, column: 12, scope: !6472)
!6479 = !DILocation(line: 5266, column: 5, scope: !6472)
!6480 = !DILocation(line: 5267, column: 7, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6464, file: !1, line: 5267, column: 7)
!6482 = !DILocation(line: 5267, column: 13, scope: !6481)
!6483 = !DILocation(line: 5267, column: 20, scope: !6481)
!6484 = !DILocation(line: 5267, column: 7, scope: !6464)
!6485 = !DILocation(line: 5268, column: 5, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6481, file: !1, line: 5268, column: 5)
!6487 = !DILocation(line: 5269, column: 6, scope: !6464)
!6488 = !DILocation(line: 5269, column: 12, scope: !6464)
!6489 = !DILocation(line: 5269, column: 20, scope: !6464)
!6490 = !DILocation(line: 5269, column: 33, scope: !6464)
!6491 = !DILocation(line: 5269, column: 47, scope: !6464)
!6492 = !DILocation(line: 5269, column: 4, scope: !6464)
!6493 = !DILocation(line: 5269, column: 5, scope: !6464)
!6494 = !DILocation(line: 5270, column: 6, scope: !6464)
!6495 = !DILocation(line: 5270, column: 12, scope: !6464)
!6496 = !DILocation(line: 5270, column: 20, scope: !6464)
!6497 = !DILocation(line: 5270, column: 33, scope: !6464)
!6498 = !DILocation(line: 5270, column: 47, scope: !6464)
!6499 = !DILocation(line: 5270, column: 4, scope: !6464)
!6500 = !DILocation(line: 5270, column: 5, scope: !6464)
!6501 = !DILocation(line: 5271, column: 3, scope: !6464)
!6502 = !DILocation(line: 5272, column: 1, scope: !6464)
!6503 = distinct !DISubprogram(name: "MagickGetImageHeight", scope: !1, file: !1, line: 5296, type: !6000, scopeLine: 5297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6504 = !DILocalVariable(name: "wand", arg: 1, scope: !6503, file: !1, line: 5296, type: !1143)
!6505 = !DILocation(line: 5296, column: 52, scope: !6503)
!6506 = !DILocation(line: 5300, column: 7, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !1, line: 5300, column: 7)
!6508 = !DILocation(line: 5300, column: 13, scope: !6507)
!6509 = !DILocation(line: 5300, column: 19, scope: !6507)
!6510 = !DILocation(line: 5300, column: 7, scope: !6503)
!6511 = !DILocation(line: 5301, column: 60, scope: !6507)
!6512 = !DILocation(line: 5301, column: 66, scope: !6507)
!6513 = !DILocation(line: 5301, column: 12, scope: !6507)
!6514 = !DILocation(line: 5301, column: 5, scope: !6507)
!6515 = !DILocation(line: 5302, column: 7, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6503, file: !1, line: 5302, column: 7)
!6517 = !DILocation(line: 5302, column: 13, scope: !6516)
!6518 = !DILocation(line: 5302, column: 20, scope: !6516)
!6519 = !DILocation(line: 5302, column: 7, scope: !6503)
!6520 = !DILocation(line: 5303, column: 5, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6516, file: !1, line: 5303, column: 5)
!6522 = !DILocation(line: 5304, column: 10, scope: !6503)
!6523 = !DILocation(line: 5304, column: 16, scope: !6503)
!6524 = !DILocation(line: 5304, column: 24, scope: !6503)
!6525 = !DILocation(line: 5304, column: 3, scope: !6503)
!6526 = !DILocation(line: 5305, column: 1, scope: !6503)
!6527 = distinct !DISubprogram(name: "MagickGetImageHistogram", scope: !1, file: !1, line: 5334, type: !6528, scopeLine: 5336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!1368, !1143, !5482}
!6530 = !DILocalVariable(name: "wand", arg: 1, scope: !6527, file: !1, line: 5334, type: !1143)
!6531 = !DILocation(line: 5334, column: 60, scope: !6527)
!6532 = !DILocalVariable(name: "number_colors", arg: 2, scope: !6527, file: !1, line: 5335, type: !5482)
!6533 = !DILocation(line: 5335, column: 11, scope: !6527)
!6534 = !DILocalVariable(name: "histogram", scope: !6527, file: !1, line: 5338, type: !1369)
!6535 = !DILocation(line: 5338, column: 6, scope: !6527)
!6536 = !DILocalVariable(name: "pixel_wands", scope: !6527, file: !1, line: 5341, type: !1368)
!6537 = !DILocation(line: 5341, column: 7, scope: !6527)
!6538 = !DILocalVariable(name: "i", scope: !6527, file: !1, line: 5344, type: !855)
!6539 = !DILocation(line: 5344, column: 5, scope: !6527)
!6540 = !DILocation(line: 5348, column: 7, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6527, file: !1, line: 5348, column: 7)
!6542 = !DILocation(line: 5348, column: 13, scope: !6541)
!6543 = !DILocation(line: 5348, column: 19, scope: !6541)
!6544 = !DILocation(line: 5348, column: 7, scope: !6527)
!6545 = !DILocation(line: 5349, column: 60, scope: !6541)
!6546 = !DILocation(line: 5349, column: 66, scope: !6541)
!6547 = !DILocation(line: 5349, column: 12, scope: !6541)
!6548 = !DILocation(line: 5349, column: 5, scope: !6541)
!6549 = !DILocation(line: 5350, column: 7, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6527, file: !1, line: 5350, column: 7)
!6551 = !DILocation(line: 5350, column: 13, scope: !6550)
!6552 = !DILocation(line: 5350, column: 20, scope: !6550)
!6553 = !DILocation(line: 5350, column: 7, scope: !6527)
!6554 = !DILocation(line: 5352, column: 35, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6550, file: !1, line: 5351, column: 5)
!6556 = !DILocation(line: 5352, column: 41, scope: !6555)
!6557 = !DILocation(line: 5353, column: 35, scope: !6555)
!6558 = !DILocation(line: 5353, column: 41, scope: !6555)
!6559 = !DILocation(line: 5352, column: 14, scope: !6555)
!6560 = !DILocation(line: 5354, column: 7, scope: !6555)
!6561 = !DILocation(line: 5356, column: 31, scope: !6527)
!6562 = !DILocation(line: 5356, column: 37, scope: !6527)
!6563 = !DILocation(line: 5356, column: 44, scope: !6527)
!6564 = !DILocation(line: 5356, column: 58, scope: !6527)
!6565 = !DILocation(line: 5356, column: 64, scope: !6527)
!6566 = !DILocation(line: 5356, column: 13, scope: !6527)
!6567 = !DILocation(line: 5356, column: 12, scope: !6527)
!6568 = !DILocation(line: 5357, column: 7, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6527, file: !1, line: 5357, column: 7)
!6570 = !DILocation(line: 5357, column: 17, scope: !6569)
!6571 = !DILocation(line: 5357, column: 7, scope: !6527)
!6572 = !DILocation(line: 5358, column: 5, scope: !6569)
!6573 = !DILocation(line: 5359, column: 30, scope: !6527)
!6574 = !DILocation(line: 5359, column: 29, scope: !6527)
!6575 = !DILocation(line: 5359, column: 15, scope: !6527)
!6576 = !DILocation(line: 5359, column: 14, scope: !6527)
!6577 = !DILocation(line: 5360, column: 9, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6527, file: !1, line: 5360, column: 3)
!6579 = !DILocation(line: 5360, column: 8, scope: !6578)
!6580 = !DILocation(line: 5360, column: 13, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6578, file: !1, line: 5360, column: 3)
!6582 = !DILocation(line: 5360, column: 28, scope: !6581)
!6583 = !DILocation(line: 5360, column: 27, scope: !6581)
!6584 = !DILocation(line: 5360, column: 15, scope: !6581)
!6585 = !DILocation(line: 5360, column: 3, scope: !6578)
!6586 = !DILocation(line: 5362, column: 26, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 5361, column: 3)
!6588 = !DILocation(line: 5362, column: 38, scope: !6587)
!6589 = !DILocation(line: 5362, column: 42, scope: !6587)
!6590 = !DILocation(line: 5362, column: 52, scope: !6587)
!6591 = !DILocation(line: 5362, column: 55, scope: !6587)
!6592 = !DILocation(line: 5362, column: 5, scope: !6587)
!6593 = !DILocation(line: 5363, column: 19, scope: !6587)
!6594 = !DILocation(line: 5363, column: 31, scope: !6587)
!6595 = !DILocation(line: 5363, column: 34, scope: !6587)
!6596 = !DILocation(line: 5363, column: 44, scope: !6587)
!6597 = !DILocation(line: 5363, column: 47, scope: !6587)
!6598 = !DILocation(line: 5363, column: 5, scope: !6587)
!6599 = !DILocation(line: 5364, column: 24, scope: !6587)
!6600 = !DILocation(line: 5364, column: 36, scope: !6587)
!6601 = !DILocation(line: 5364, column: 48, scope: !6587)
!6602 = !DILocation(line: 5364, column: 58, scope: !6587)
!6603 = !DILocation(line: 5364, column: 61, scope: !6587)
!6604 = !DILocation(line: 5364, column: 5, scope: !6587)
!6605 = !DILocation(line: 5365, column: 3, scope: !6587)
!6606 = !DILocation(line: 5360, column: 44, scope: !6581)
!6607 = !DILocation(line: 5360, column: 3, scope: !6581)
!6608 = distinct !{!6608, !6585, !6609}
!6609 = !DILocation(line: 5365, column: 3, scope: !6578)
!6610 = !DILocation(line: 5366, column: 52, scope: !6527)
!6611 = !DILocation(line: 5366, column: 29, scope: !6527)
!6612 = !DILocation(line: 5366, column: 13, scope: !6527)
!6613 = !DILocation(line: 5366, column: 12, scope: !6527)
!6614 = !DILocation(line: 5367, column: 10, scope: !6527)
!6615 = !DILocation(line: 5367, column: 3, scope: !6527)
!6616 = !DILocation(line: 5368, column: 1, scope: !6527)
!6617 = distinct !DISubprogram(name: "MagickGetImageInterlaceScheme", scope: !1, file: !1, line: 5392, type: !6618, scopeLine: 5393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{!878, !1143}
!6620 = !DILocalVariable(name: "wand", arg: 1, scope: !6617, file: !1, line: 5392, type: !1143)
!6621 = !DILocation(line: 5392, column: 68, scope: !6617)
!6622 = !DILocation(line: 5396, column: 7, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6617, file: !1, line: 5396, column: 7)
!6624 = !DILocation(line: 5396, column: 13, scope: !6623)
!6625 = !DILocation(line: 5396, column: 19, scope: !6623)
!6626 = !DILocation(line: 5396, column: 7, scope: !6617)
!6627 = !DILocation(line: 5397, column: 60, scope: !6623)
!6628 = !DILocation(line: 5397, column: 66, scope: !6623)
!6629 = !DILocation(line: 5397, column: 12, scope: !6623)
!6630 = !DILocation(line: 5397, column: 5, scope: !6623)
!6631 = !DILocation(line: 5398, column: 7, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6617, file: !1, line: 5398, column: 7)
!6633 = !DILocation(line: 5398, column: 13, scope: !6632)
!6634 = !DILocation(line: 5398, column: 20, scope: !6632)
!6635 = !DILocation(line: 5398, column: 7, scope: !6617)
!6636 = !DILocation(line: 5400, column: 35, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6632, file: !1, line: 5399, column: 5)
!6638 = !DILocation(line: 5400, column: 41, scope: !6637)
!6639 = !DILocation(line: 5401, column: 35, scope: !6637)
!6640 = !DILocation(line: 5401, column: 41, scope: !6637)
!6641 = !DILocation(line: 5400, column: 14, scope: !6637)
!6642 = !DILocation(line: 5402, column: 7, scope: !6637)
!6643 = !DILocation(line: 5404, column: 10, scope: !6617)
!6644 = !DILocation(line: 5404, column: 16, scope: !6617)
!6645 = !DILocation(line: 5404, column: 24, scope: !6617)
!6646 = !DILocation(line: 5404, column: 3, scope: !6617)
!6647 = !DILocation(line: 5405, column: 1, scope: !6617)
!6648 = distinct !DISubprogram(name: "MagickGetImageInterpolateMethod", scope: !1, file: !1, line: 5430, type: !6649, scopeLine: 5432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6649 = !DISubroutineType(types: !6650)
!6650 = !{!992, !1143}
!6651 = !DILocalVariable(name: "wand", arg: 1, scope: !6648, file: !1, line: 5431, type: !1143)
!6652 = !DILocation(line: 5431, column: 15, scope: !6648)
!6653 = !DILocation(line: 5435, column: 7, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6648, file: !1, line: 5435, column: 7)
!6655 = !DILocation(line: 5435, column: 13, scope: !6654)
!6656 = !DILocation(line: 5435, column: 19, scope: !6654)
!6657 = !DILocation(line: 5435, column: 7, scope: !6648)
!6658 = !DILocation(line: 5436, column: 60, scope: !6654)
!6659 = !DILocation(line: 5436, column: 66, scope: !6654)
!6660 = !DILocation(line: 5436, column: 12, scope: !6654)
!6661 = !DILocation(line: 5436, column: 5, scope: !6654)
!6662 = !DILocation(line: 5437, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6648, file: !1, line: 5437, column: 7)
!6664 = !DILocation(line: 5437, column: 13, scope: !6663)
!6665 = !DILocation(line: 5437, column: 20, scope: !6663)
!6666 = !DILocation(line: 5437, column: 7, scope: !6648)
!6667 = !DILocation(line: 5439, column: 35, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 5438, column: 5)
!6669 = !DILocation(line: 5439, column: 41, scope: !6668)
!6670 = !DILocation(line: 5440, column: 35, scope: !6668)
!6671 = !DILocation(line: 5440, column: 41, scope: !6668)
!6672 = !DILocation(line: 5439, column: 14, scope: !6668)
!6673 = !DILocation(line: 5441, column: 7, scope: !6668)
!6674 = !DILocation(line: 5443, column: 10, scope: !6648)
!6675 = !DILocation(line: 5443, column: 16, scope: !6648)
!6676 = !DILocation(line: 5443, column: 24, scope: !6648)
!6677 = !DILocation(line: 5443, column: 3, scope: !6648)
!6678 = !DILocation(line: 5444, column: 1, scope: !6648)
!6679 = distinct !DISubprogram(name: "MagickGetImageIterations", scope: !1, file: !1, line: 5468, type: !6000, scopeLine: 5469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6680 = !DILocalVariable(name: "wand", arg: 1, scope: !6679, file: !1, line: 5468, type: !1143)
!6681 = !DILocation(line: 5468, column: 56, scope: !6679)
!6682 = !DILocation(line: 5472, column: 7, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6679, file: !1, line: 5472, column: 7)
!6684 = !DILocation(line: 5472, column: 13, scope: !6683)
!6685 = !DILocation(line: 5472, column: 19, scope: !6683)
!6686 = !DILocation(line: 5472, column: 7, scope: !6679)
!6687 = !DILocation(line: 5473, column: 60, scope: !6683)
!6688 = !DILocation(line: 5473, column: 66, scope: !6683)
!6689 = !DILocation(line: 5473, column: 12, scope: !6683)
!6690 = !DILocation(line: 5473, column: 5, scope: !6683)
!6691 = !DILocation(line: 5474, column: 7, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6679, file: !1, line: 5474, column: 7)
!6693 = !DILocation(line: 5474, column: 13, scope: !6692)
!6694 = !DILocation(line: 5474, column: 20, scope: !6692)
!6695 = !DILocation(line: 5474, column: 7, scope: !6679)
!6696 = !DILocation(line: 5475, column: 5, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !1, line: 5475, column: 5)
!6698 = !DILocation(line: 5476, column: 10, scope: !6679)
!6699 = !DILocation(line: 5476, column: 16, scope: !6679)
!6700 = !DILocation(line: 5476, column: 24, scope: !6679)
!6701 = !DILocation(line: 5476, column: 3, scope: !6679)
!6702 = !DILocation(line: 5477, column: 1, scope: !6679)
!6703 = distinct !DISubprogram(name: "MagickGetImageLength", scope: !1, file: !1, line: 5504, type: !6704, scopeLine: 5506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!807, !1143, !6706}
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!6707 = !DILocalVariable(name: "wand", arg: 1, scope: !6703, file: !1, line: 5504, type: !1143)
!6708 = !DILocation(line: 5504, column: 63, scope: !6703)
!6709 = !DILocalVariable(name: "length", arg: 2, scope: !6703, file: !1, line: 5505, type: !6706)
!6710 = !DILocation(line: 5505, column: 19, scope: !6703)
!6711 = !DILocation(line: 5509, column: 7, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6703, file: !1, line: 5509, column: 7)
!6713 = !DILocation(line: 5509, column: 13, scope: !6712)
!6714 = !DILocation(line: 5509, column: 19, scope: !6712)
!6715 = !DILocation(line: 5509, column: 7, scope: !6703)
!6716 = !DILocation(line: 5510, column: 60, scope: !6712)
!6717 = !DILocation(line: 5510, column: 66, scope: !6712)
!6718 = !DILocation(line: 5510, column: 12, scope: !6712)
!6719 = !DILocation(line: 5510, column: 5, scope: !6712)
!6720 = !DILocation(line: 5511, column: 7, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6703, file: !1, line: 5511, column: 7)
!6722 = !DILocation(line: 5511, column: 13, scope: !6721)
!6723 = !DILocation(line: 5511, column: 20, scope: !6721)
!6724 = !DILocation(line: 5511, column: 7, scope: !6703)
!6725 = !DILocation(line: 5512, column: 5, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6721, file: !1, line: 5512, column: 5)
!6727 = !DILocation(line: 5513, column: 23, scope: !6703)
!6728 = !DILocation(line: 5513, column: 29, scope: !6703)
!6729 = !DILocation(line: 5513, column: 11, scope: !6703)
!6730 = !DILocation(line: 5513, column: 4, scope: !6703)
!6731 = !DILocation(line: 5513, column: 10, scope: !6703)
!6732 = !DILocation(line: 5514, column: 3, scope: !6703)
!6733 = !DILocation(line: 5515, column: 1, scope: !6703)
!6734 = distinct !DISubprogram(name: "MagickGetImageMatteColor", scope: !1, file: !1, line: 5542, type: !5450, scopeLine: 5544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6735 = !DILocalVariable(name: "wand", arg: 1, scope: !6734, file: !1, line: 5542, type: !1143)
!6736 = !DILocation(line: 5542, column: 67, scope: !6734)
!6737 = !DILocalVariable(name: "matte_color", arg: 2, scope: !6734, file: !1, line: 5543, type: !1326)
!6738 = !DILocation(line: 5543, column: 14, scope: !6734)
!6739 = !DILocation(line: 5547, column: 7, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !1, line: 5547, column: 7)
!6741 = !DILocation(line: 5547, column: 13, scope: !6740)
!6742 = !DILocation(line: 5547, column: 19, scope: !6740)
!6743 = !DILocation(line: 5547, column: 7, scope: !6734)
!6744 = !DILocation(line: 5548, column: 60, scope: !6740)
!6745 = !DILocation(line: 5548, column: 66, scope: !6740)
!6746 = !DILocation(line: 5548, column: 12, scope: !6740)
!6747 = !DILocation(line: 5548, column: 5, scope: !6740)
!6748 = !DILocation(line: 5549, column: 7, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6734, file: !1, line: 5549, column: 7)
!6750 = !DILocation(line: 5549, column: 13, scope: !6749)
!6751 = !DILocation(line: 5549, column: 20, scope: !6749)
!6752 = !DILocation(line: 5549, column: 7, scope: !6734)
!6753 = !DILocation(line: 5550, column: 5, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6749, file: !1, line: 5550, column: 5)
!6755 = !DILocation(line: 5551, column: 24, scope: !6734)
!6756 = !DILocation(line: 5551, column: 37, scope: !6734)
!6757 = !DILocation(line: 5551, column: 43, scope: !6734)
!6758 = !DILocation(line: 5551, column: 51, scope: !6734)
!6759 = !DILocation(line: 5551, column: 3, scope: !6734)
!6760 = !DILocation(line: 5552, column: 3, scope: !6734)
!6761 = !DILocation(line: 5553, column: 1, scope: !6734)
!6762 = distinct !DISubprogram(name: "MagickGetImageOrientation", scope: !1, file: !1, line: 5577, type: !6763, scopeLine: 5578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6763 = !DISubroutineType(types: !6764)
!6764 = !{!805, !1143}
!6765 = !DILocalVariable(name: "wand", arg: 1, scope: !6762, file: !1, line: 5577, type: !1143)
!6766 = !DILocation(line: 5577, column: 66, scope: !6762)
!6767 = !DILocation(line: 5581, column: 7, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6762, file: !1, line: 5581, column: 7)
!6769 = !DILocation(line: 5581, column: 13, scope: !6768)
!6770 = !DILocation(line: 5581, column: 19, scope: !6768)
!6771 = !DILocation(line: 5581, column: 7, scope: !6762)
!6772 = !DILocation(line: 5582, column: 60, scope: !6768)
!6773 = !DILocation(line: 5582, column: 66, scope: !6768)
!6774 = !DILocation(line: 5582, column: 12, scope: !6768)
!6775 = !DILocation(line: 5582, column: 5, scope: !6768)
!6776 = !DILocation(line: 5583, column: 7, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6762, file: !1, line: 5583, column: 7)
!6778 = !DILocation(line: 5583, column: 13, scope: !6777)
!6779 = !DILocation(line: 5583, column: 20, scope: !6777)
!6780 = !DILocation(line: 5583, column: 7, scope: !6762)
!6781 = !DILocation(line: 5585, column: 35, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6777, file: !1, line: 5584, column: 5)
!6783 = !DILocation(line: 5585, column: 41, scope: !6782)
!6784 = !DILocation(line: 5586, column: 35, scope: !6782)
!6785 = !DILocation(line: 5586, column: 41, scope: !6782)
!6786 = !DILocation(line: 5585, column: 14, scope: !6782)
!6787 = !DILocation(line: 5587, column: 7, scope: !6782)
!6788 = !DILocation(line: 5589, column: 10, scope: !6762)
!6789 = !DILocation(line: 5589, column: 16, scope: !6762)
!6790 = !DILocation(line: 5589, column: 24, scope: !6762)
!6791 = !DILocation(line: 5589, column: 3, scope: !6762)
!6792 = !DILocation(line: 5590, column: 1, scope: !6762)
!6793 = distinct !DISubprogram(name: "MagickGetImagePage", scope: !1, file: !1, line: 5623, type: !6794, scopeLine: 5625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{!807, !1143, !5482, !5482, !6796, !6796}
!6796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!6797 = !DILocalVariable(name: "wand", arg: 1, scope: !6793, file: !1, line: 5623, type: !1143)
!6798 = !DILocation(line: 5623, column: 61, scope: !6793)
!6799 = !DILocalVariable(name: "width", arg: 2, scope: !6793, file: !1, line: 5624, type: !5482)
!6800 = !DILocation(line: 5624, column: 11, scope: !6793)
!6801 = !DILocalVariable(name: "height", arg: 3, scope: !6793, file: !1, line: 5624, type: !5482)
!6802 = !DILocation(line: 5624, column: 25, scope: !6793)
!6803 = !DILocalVariable(name: "x", arg: 4, scope: !6793, file: !1, line: 5624, type: !6796)
!6804 = !DILocation(line: 5624, column: 41, scope: !6793)
!6805 = !DILocalVariable(name: "y", arg: 5, scope: !6793, file: !1, line: 5624, type: !6796)
!6806 = !DILocation(line: 5624, column: 52, scope: !6793)
!6807 = !DILocation(line: 5628, column: 7, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6793, file: !1, line: 5628, column: 7)
!6809 = !DILocation(line: 5628, column: 13, scope: !6808)
!6810 = !DILocation(line: 5628, column: 19, scope: !6808)
!6811 = !DILocation(line: 5628, column: 7, scope: !6793)
!6812 = !DILocation(line: 5629, column: 60, scope: !6808)
!6813 = !DILocation(line: 5629, column: 66, scope: !6808)
!6814 = !DILocation(line: 5629, column: 12, scope: !6808)
!6815 = !DILocation(line: 5629, column: 5, scope: !6808)
!6816 = !DILocation(line: 5630, column: 7, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6793, file: !1, line: 5630, column: 7)
!6818 = !DILocation(line: 5630, column: 13, scope: !6817)
!6819 = !DILocation(line: 5630, column: 20, scope: !6817)
!6820 = !DILocation(line: 5630, column: 7, scope: !6793)
!6821 = !DILocation(line: 5631, column: 5, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6817, file: !1, line: 5631, column: 5)
!6823 = !DILocation(line: 5632, column: 10, scope: !6793)
!6824 = !DILocation(line: 5632, column: 16, scope: !6793)
!6825 = !DILocation(line: 5632, column: 24, scope: !6793)
!6826 = !DILocation(line: 5632, column: 29, scope: !6793)
!6827 = !DILocation(line: 5632, column: 4, scope: !6793)
!6828 = !DILocation(line: 5632, column: 9, scope: !6793)
!6829 = !DILocation(line: 5633, column: 11, scope: !6793)
!6830 = !DILocation(line: 5633, column: 17, scope: !6793)
!6831 = !DILocation(line: 5633, column: 25, scope: !6793)
!6832 = !DILocation(line: 5633, column: 30, scope: !6793)
!6833 = !DILocation(line: 5633, column: 4, scope: !6793)
!6834 = !DILocation(line: 5633, column: 10, scope: !6793)
!6835 = !DILocation(line: 5634, column: 6, scope: !6793)
!6836 = !DILocation(line: 5634, column: 12, scope: !6793)
!6837 = !DILocation(line: 5634, column: 20, scope: !6793)
!6838 = !DILocation(line: 5634, column: 25, scope: !6793)
!6839 = !DILocation(line: 5634, column: 4, scope: !6793)
!6840 = !DILocation(line: 5634, column: 5, scope: !6793)
!6841 = !DILocation(line: 5635, column: 6, scope: !6793)
!6842 = !DILocation(line: 5635, column: 12, scope: !6793)
!6843 = !DILocation(line: 5635, column: 20, scope: !6793)
!6844 = !DILocation(line: 5635, column: 25, scope: !6793)
!6845 = !DILocation(line: 5635, column: 4, scope: !6793)
!6846 = !DILocation(line: 5635, column: 5, scope: !6793)
!6847 = !DILocation(line: 5636, column: 3, scope: !6793)
!6848 = !DILocation(line: 5637, column: 1, scope: !6793)
!6849 = distinct !DISubprogram(name: "MagickGetImagePixelColor", scope: !1, file: !1, line: 5666, type: !6850, scopeLine: 5668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6850 = !DISubroutineType(types: !6851)
!6851 = !{!807, !1143, !1666, !1666, !1326}
!6852 = !DILocalVariable(name: "wand", arg: 1, scope: !6849, file: !1, line: 5666, type: !1143)
!6853 = !DILocation(line: 5666, column: 67, scope: !6849)
!6854 = !DILocalVariable(name: "x", arg: 2, scope: !6849, file: !1, line: 5667, type: !1666)
!6855 = !DILocation(line: 5667, column: 17, scope: !6849)
!6856 = !DILocalVariable(name: "y", arg: 3, scope: !6849, file: !1, line: 5667, type: !1666)
!6857 = !DILocation(line: 5667, column: 33, scope: !6849)
!6858 = !DILocalVariable(name: "color", arg: 4, scope: !6849, file: !1, line: 5667, type: !1326)
!6859 = !DILocation(line: 5667, column: 46, scope: !6849)
!6860 = !DILocalVariable(name: "indexes", scope: !6849, file: !1, line: 5670, type: !6861)
!6861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!6862 = !DILocation(line: 5670, column: 6, scope: !6849)
!6863 = !DILocalVariable(name: "p", scope: !6849, file: !1, line: 5673, type: !1378)
!6864 = !DILocation(line: 5673, column: 6, scope: !6849)
!6865 = !DILocalVariable(name: "image_view", scope: !6849, file: !1, line: 5676, type: !6866)
!6866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6867, size: 64)
!6867 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !424, line: 50, baseType: !6868)
!6868 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!6869 = !DILocation(line: 5676, column: 6, scope: !6849)
!6870 = !DILocation(line: 5680, column: 7, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 5680, column: 7)
!6872 = !DILocation(line: 5680, column: 13, scope: !6871)
!6873 = !DILocation(line: 5680, column: 19, scope: !6871)
!6874 = !DILocation(line: 5680, column: 7, scope: !6849)
!6875 = !DILocation(line: 5681, column: 60, scope: !6871)
!6876 = !DILocation(line: 5681, column: 66, scope: !6871)
!6877 = !DILocation(line: 5681, column: 12, scope: !6871)
!6878 = !DILocation(line: 5681, column: 5, scope: !6871)
!6879 = !DILocation(line: 5682, column: 7, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 5682, column: 7)
!6881 = !DILocation(line: 5682, column: 13, scope: !6880)
!6882 = !DILocation(line: 5682, column: 20, scope: !6880)
!6883 = !DILocation(line: 5682, column: 7, scope: !6849)
!6884 = !DILocation(line: 5683, column: 5, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 5683, column: 5)
!6886 = !DILocation(line: 5684, column: 38, scope: !6849)
!6887 = !DILocation(line: 5684, column: 44, scope: !6849)
!6888 = !DILocation(line: 5684, column: 51, scope: !6849)
!6889 = !DILocation(line: 5684, column: 57, scope: !6849)
!6890 = !DILocation(line: 5684, column: 14, scope: !6849)
!6891 = !DILocation(line: 5684, column: 13, scope: !6849)
!6892 = !DILocation(line: 5685, column: 31, scope: !6849)
!6893 = !DILocation(line: 5685, column: 42, scope: !6849)
!6894 = !DILocation(line: 5685, column: 44, scope: !6849)
!6895 = !DILocation(line: 5685, column: 50, scope: !6849)
!6896 = !DILocation(line: 5685, column: 56, scope: !6849)
!6897 = !DILocation(line: 5685, column: 5, scope: !6849)
!6898 = !DILocation(line: 5685, column: 4, scope: !6849)
!6899 = !DILocation(line: 5686, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 5686, column: 7)
!6901 = !DILocation(line: 5686, column: 9, scope: !6900)
!6902 = !DILocation(line: 5686, column: 7, scope: !6849)
!6903 = !DILocation(line: 5688, column: 35, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6900, file: !1, line: 5687, column: 5)
!6905 = !DILocation(line: 5688, column: 18, scope: !6904)
!6906 = !DILocation(line: 5688, column: 17, scope: !6904)
!6907 = !DILocation(line: 5689, column: 7, scope: !6904)
!6908 = !DILocation(line: 5691, column: 43, scope: !6849)
!6909 = !DILocation(line: 5691, column: 11, scope: !6849)
!6910 = !DILocation(line: 5691, column: 10, scope: !6849)
!6911 = !DILocation(line: 5692, column: 24, scope: !6849)
!6912 = !DILocation(line: 5692, column: 30, scope: !6849)
!6913 = !DILocation(line: 5692, column: 3, scope: !6849)
!6914 = !DILocation(line: 5693, column: 30, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 5693, column: 7)
!6916 = !DILocation(line: 5693, column: 7, scope: !6915)
!6917 = !DILocation(line: 5693, column: 42, scope: !6915)
!6918 = !DILocation(line: 5693, column: 7, scope: !6849)
!6919 = !DILocation(line: 5694, column: 26, scope: !6915)
!6920 = !DILocation(line: 5694, column: 33, scope: !6915)
!6921 = !DILocation(line: 5694, column: 32, scope: !6915)
!6922 = !DILocation(line: 5694, column: 5, scope: !6915)
!6923 = !DILocation(line: 5696, column: 34, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6915, file: !1, line: 5696, column: 9)
!6925 = !DILocation(line: 5696, column: 9, scope: !6924)
!6926 = !DILocation(line: 5696, column: 46, scope: !6924)
!6927 = !DILocation(line: 5696, column: 9, scope: !6915)
!6928 = !DILocation(line: 5697, column: 21, scope: !6924)
!6929 = !DILocation(line: 5697, column: 28, scope: !6924)
!6930 = !DILocation(line: 5697, column: 27, scope: !6924)
!6931 = !DILocation(line: 5697, column: 7, scope: !6924)
!6932 = !DILocation(line: 5698, column: 31, scope: !6849)
!6933 = !DILocation(line: 5698, column: 14, scope: !6849)
!6934 = !DILocation(line: 5698, column: 13, scope: !6849)
!6935 = !DILocation(line: 5699, column: 3, scope: !6849)
!6936 = !DILocation(line: 5700, column: 1, scope: !6849)
!6937 = distinct !DISubprogram(name: "MagickGetImageRange", scope: !1, file: !1, line: 5729, type: !5560, scopeLine: 5731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6938 = !DILocalVariable(name: "wand", arg: 1, scope: !6937, file: !1, line: 5729, type: !1143)
!6939 = !DILocation(line: 5729, column: 62, scope: !6937)
!6940 = !DILocalVariable(name: "minima", arg: 2, scope: !6937, file: !1, line: 5730, type: !1117)
!6941 = !DILocation(line: 5730, column: 11, scope: !6937)
!6942 = !DILocalVariable(name: "maxima", arg: 3, scope: !6937, file: !1, line: 5730, type: !1117)
!6943 = !DILocation(line: 5730, column: 26, scope: !6937)
!6944 = !DILocalVariable(name: "status", scope: !6937, file: !1, line: 5733, type: !807)
!6945 = !DILocation(line: 5733, column: 5, scope: !6937)
!6946 = !DILocation(line: 5737, column: 7, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6937, file: !1, line: 5737, column: 7)
!6948 = !DILocation(line: 5737, column: 13, scope: !6947)
!6949 = !DILocation(line: 5737, column: 19, scope: !6947)
!6950 = !DILocation(line: 5737, column: 7, scope: !6937)
!6951 = !DILocation(line: 5738, column: 60, scope: !6947)
!6952 = !DILocation(line: 5738, column: 66, scope: !6947)
!6953 = !DILocation(line: 5738, column: 12, scope: !6947)
!6954 = !DILocation(line: 5738, column: 5, scope: !6947)
!6955 = !DILocation(line: 5739, column: 7, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6937, file: !1, line: 5739, column: 7)
!6957 = !DILocation(line: 5739, column: 13, scope: !6956)
!6958 = !DILocation(line: 5739, column: 20, scope: !6956)
!6959 = !DILocation(line: 5739, column: 7, scope: !6937)
!6960 = !DILocation(line: 5740, column: 5, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6956, file: !1, line: 5740, column: 5)
!6962 = !DILocation(line: 5741, column: 24, scope: !6937)
!6963 = !DILocation(line: 5741, column: 30, scope: !6937)
!6964 = !DILocation(line: 5741, column: 37, scope: !6937)
!6965 = !DILocation(line: 5741, column: 44, scope: !6937)
!6966 = !DILocation(line: 5741, column: 51, scope: !6937)
!6967 = !DILocation(line: 5741, column: 57, scope: !6937)
!6968 = !DILocation(line: 5741, column: 10, scope: !6937)
!6969 = !DILocation(line: 5741, column: 9, scope: !6937)
!6970 = !DILocation(line: 5742, column: 10, scope: !6937)
!6971 = !DILocation(line: 5742, column: 3, scope: !6937)
!6972 = !DILocation(line: 5743, column: 1, scope: !6937)
!6973 = distinct !DISubprogram(name: "MagickGetImageRedPrimary", scope: !1, file: !1, line: 5772, type: !5560, scopeLine: 5774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!6974 = !DILocalVariable(name: "wand", arg: 1, scope: !6973, file: !1, line: 5772, type: !1143)
!6975 = !DILocation(line: 5772, column: 67, scope: !6973)
!6976 = !DILocalVariable(name: "x", arg: 2, scope: !6973, file: !1, line: 5773, type: !1117)
!6977 = !DILocation(line: 5773, column: 11, scope: !6973)
!6978 = !DILocalVariable(name: "y", arg: 3, scope: !6973, file: !1, line: 5773, type: !1117)
!6979 = !DILocation(line: 5773, column: 21, scope: !6973)
!6980 = !DILocation(line: 5777, column: 7, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6973, file: !1, line: 5777, column: 7)
!6982 = !DILocation(line: 5777, column: 13, scope: !6981)
!6983 = !DILocation(line: 5777, column: 19, scope: !6981)
!6984 = !DILocation(line: 5777, column: 7, scope: !6973)
!6985 = !DILocation(line: 5778, column: 60, scope: !6981)
!6986 = !DILocation(line: 5778, column: 66, scope: !6981)
!6987 = !DILocation(line: 5778, column: 12, scope: !6981)
!6988 = !DILocation(line: 5778, column: 5, scope: !6981)
!6989 = !DILocation(line: 5779, column: 7, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6973, file: !1, line: 5779, column: 7)
!6991 = !DILocation(line: 5779, column: 13, scope: !6990)
!6992 = !DILocation(line: 5779, column: 20, scope: !6990)
!6993 = !DILocation(line: 5779, column: 7, scope: !6973)
!6994 = !DILocation(line: 5780, column: 5, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 5780, column: 5)
!6996 = !DILocation(line: 5781, column: 6, scope: !6973)
!6997 = !DILocation(line: 5781, column: 12, scope: !6973)
!6998 = !DILocation(line: 5781, column: 20, scope: !6973)
!6999 = !DILocation(line: 5781, column: 33, scope: !6973)
!7000 = !DILocation(line: 5781, column: 45, scope: !6973)
!7001 = !DILocation(line: 5781, column: 4, scope: !6973)
!7002 = !DILocation(line: 5781, column: 5, scope: !6973)
!7003 = !DILocation(line: 5782, column: 6, scope: !6973)
!7004 = !DILocation(line: 5782, column: 12, scope: !6973)
!7005 = !DILocation(line: 5782, column: 20, scope: !6973)
!7006 = !DILocation(line: 5782, column: 33, scope: !6973)
!7007 = !DILocation(line: 5782, column: 45, scope: !6973)
!7008 = !DILocation(line: 5782, column: 4, scope: !6973)
!7009 = !DILocation(line: 5782, column: 5, scope: !6973)
!7010 = !DILocation(line: 5783, column: 3, scope: !6973)
!7011 = !DILocation(line: 5784, column: 1, scope: !6973)
!7012 = distinct !DISubprogram(name: "MagickGetImageRegion", scope: !1, file: !1, line: 5819, type: !7013, scopeLine: 5821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7013 = !DISubroutineType(types: !7014)
!7014 = !{!1143, !1143, !1214, !1214, !1666, !1666}
!7015 = !DILocalVariable(name: "wand", arg: 1, scope: !7012, file: !1, line: 5819, type: !1143)
!7016 = !DILocation(line: 5819, column: 57, scope: !7012)
!7017 = !DILocalVariable(name: "width", arg: 2, scope: !7012, file: !1, line: 5819, type: !1214)
!7018 = !DILocation(line: 5819, column: 75, scope: !7012)
!7019 = !DILocalVariable(name: "height", arg: 3, scope: !7012, file: !1, line: 5820, type: !1214)
!7020 = !DILocation(line: 5820, column: 16, scope: !7012)
!7021 = !DILocalVariable(name: "x", arg: 4, scope: !7012, file: !1, line: 5820, type: !1666)
!7022 = !DILocation(line: 5820, column: 37, scope: !7012)
!7023 = !DILocalVariable(name: "y", arg: 5, scope: !7012, file: !1, line: 5820, type: !1666)
!7024 = !DILocation(line: 5820, column: 53, scope: !7012)
!7025 = !DILocalVariable(name: "region_image", scope: !7012, file: !1, line: 5823, type: !791)
!7026 = !DILocation(line: 5823, column: 6, scope: !7012)
!7027 = !DILocalVariable(name: "region", scope: !7012, file: !1, line: 5826, type: !863)
!7028 = !DILocation(line: 5826, column: 5, scope: !7012)
!7029 = !DILocation(line: 5830, column: 7, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 5830, column: 7)
!7031 = !DILocation(line: 5830, column: 13, scope: !7030)
!7032 = !DILocation(line: 5830, column: 19, scope: !7030)
!7033 = !DILocation(line: 5830, column: 7, scope: !7012)
!7034 = !DILocation(line: 5831, column: 60, scope: !7030)
!7035 = !DILocation(line: 5831, column: 66, scope: !7030)
!7036 = !DILocation(line: 5831, column: 12, scope: !7030)
!7037 = !DILocation(line: 5831, column: 5, scope: !7030)
!7038 = !DILocation(line: 5832, column: 7, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 5832, column: 7)
!7040 = !DILocation(line: 5832, column: 13, scope: !7039)
!7041 = !DILocation(line: 5832, column: 20, scope: !7039)
!7042 = !DILocation(line: 5832, column: 7, scope: !7012)
!7043 = !DILocation(line: 5833, column: 5, scope: !7039)
!7044 = !DILocation(line: 5834, column: 16, scope: !7012)
!7045 = !DILocation(line: 5834, column: 10, scope: !7012)
!7046 = !DILocation(line: 5834, column: 15, scope: !7012)
!7047 = !DILocation(line: 5835, column: 17, scope: !7012)
!7048 = !DILocation(line: 5835, column: 10, scope: !7012)
!7049 = !DILocation(line: 5835, column: 16, scope: !7012)
!7050 = !DILocation(line: 5836, column: 12, scope: !7012)
!7051 = !DILocation(line: 5836, column: 10, scope: !7012)
!7052 = !DILocation(line: 5836, column: 11, scope: !7012)
!7053 = !DILocation(line: 5837, column: 12, scope: !7012)
!7054 = !DILocation(line: 5837, column: 10, scope: !7012)
!7055 = !DILocation(line: 5837, column: 11, scope: !7012)
!7056 = !DILocation(line: 5838, column: 26, scope: !7012)
!7057 = !DILocation(line: 5838, column: 32, scope: !7012)
!7058 = !DILocation(line: 5838, column: 47, scope: !7012)
!7059 = !DILocation(line: 5838, column: 53, scope: !7012)
!7060 = !DILocation(line: 5838, column: 16, scope: !7012)
!7061 = !DILocation(line: 5838, column: 15, scope: !7012)
!7062 = !DILocation(line: 5839, column: 7, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7012, file: !1, line: 5839, column: 7)
!7064 = !DILocation(line: 5839, column: 20, scope: !7063)
!7065 = !DILocation(line: 5839, column: 7, scope: !7012)
!7066 = !DILocation(line: 5840, column: 5, scope: !7063)
!7067 = !DILocation(line: 5841, column: 36, scope: !7012)
!7068 = !DILocation(line: 5841, column: 41, scope: !7012)
!7069 = !DILocation(line: 5841, column: 10, scope: !7012)
!7070 = !DILocation(line: 5841, column: 3, scope: !7012)
!7071 = !DILocation(line: 5842, column: 1, scope: !7012)
!7072 = distinct !DISubprogram(name: "MagickGetImageRenderingIntent", scope: !1, file: !1, line: 5866, type: !7073, scopeLine: 5867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!844, !1143}
!7075 = !DILocalVariable(name: "wand", arg: 1, scope: !7072, file: !1, line: 5866, type: !1143)
!7076 = !DILocation(line: 5866, column: 70, scope: !7072)
!7077 = !DILocation(line: 5870, column: 7, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7072, file: !1, line: 5870, column: 7)
!7079 = !DILocation(line: 5870, column: 13, scope: !7078)
!7080 = !DILocation(line: 5870, column: 19, scope: !7078)
!7081 = !DILocation(line: 5870, column: 7, scope: !7072)
!7082 = !DILocation(line: 5871, column: 60, scope: !7078)
!7083 = !DILocation(line: 5871, column: 66, scope: !7078)
!7084 = !DILocation(line: 5871, column: 12, scope: !7078)
!7085 = !DILocation(line: 5871, column: 5, scope: !7078)
!7086 = !DILocation(line: 5872, column: 7, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7072, file: !1, line: 5872, column: 7)
!7088 = !DILocation(line: 5872, column: 13, scope: !7087)
!7089 = !DILocation(line: 5872, column: 20, scope: !7087)
!7090 = !DILocation(line: 5872, column: 7, scope: !7072)
!7091 = !DILocation(line: 5874, column: 35, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7087, file: !1, line: 5873, column: 5)
!7093 = !DILocation(line: 5874, column: 41, scope: !7092)
!7094 = !DILocation(line: 5875, column: 35, scope: !7092)
!7095 = !DILocation(line: 5875, column: 41, scope: !7092)
!7096 = !DILocation(line: 5874, column: 14, scope: !7092)
!7097 = !DILocation(line: 5876, column: 7, scope: !7092)
!7098 = !DILocation(line: 5878, column: 28, scope: !7072)
!7099 = !DILocation(line: 5878, column: 34, scope: !7072)
!7100 = !DILocation(line: 5878, column: 42, scope: !7072)
!7101 = !DILocation(line: 5878, column: 3, scope: !7072)
!7102 = !DILocation(line: 5879, column: 1, scope: !7072)
!7103 = distinct !DISubprogram(name: "MagickGetImageResolution", scope: !1, file: !1, line: 5908, type: !5560, scopeLine: 5910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7104 = !DILocalVariable(name: "wand", arg: 1, scope: !7103, file: !1, line: 5908, type: !1143)
!7105 = !DILocation(line: 5908, column: 67, scope: !7103)
!7106 = !DILocalVariable(name: "x", arg: 2, scope: !7103, file: !1, line: 5909, type: !1117)
!7107 = !DILocation(line: 5909, column: 11, scope: !7103)
!7108 = !DILocalVariable(name: "y", arg: 3, scope: !7103, file: !1, line: 5909, type: !1117)
!7109 = !DILocation(line: 5909, column: 21, scope: !7103)
!7110 = !DILocation(line: 5913, column: 7, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7103, file: !1, line: 5913, column: 7)
!7112 = !DILocation(line: 5913, column: 13, scope: !7111)
!7113 = !DILocation(line: 5913, column: 19, scope: !7111)
!7114 = !DILocation(line: 5913, column: 7, scope: !7103)
!7115 = !DILocation(line: 5914, column: 60, scope: !7111)
!7116 = !DILocation(line: 5914, column: 66, scope: !7111)
!7117 = !DILocation(line: 5914, column: 12, scope: !7111)
!7118 = !DILocation(line: 5914, column: 5, scope: !7111)
!7119 = !DILocation(line: 5915, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7103, file: !1, line: 5915, column: 7)
!7121 = !DILocation(line: 5915, column: 13, scope: !7120)
!7122 = !DILocation(line: 5915, column: 20, scope: !7120)
!7123 = !DILocation(line: 5915, column: 7, scope: !7103)
!7124 = !DILocation(line: 5916, column: 5, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7120, file: !1, line: 5916, column: 5)
!7126 = !DILocation(line: 5917, column: 6, scope: !7103)
!7127 = !DILocation(line: 5917, column: 12, scope: !7103)
!7128 = !DILocation(line: 5917, column: 20, scope: !7103)
!7129 = !DILocation(line: 5917, column: 4, scope: !7103)
!7130 = !DILocation(line: 5917, column: 5, scope: !7103)
!7131 = !DILocation(line: 5918, column: 6, scope: !7103)
!7132 = !DILocation(line: 5918, column: 12, scope: !7103)
!7133 = !DILocation(line: 5918, column: 20, scope: !7103)
!7134 = !DILocation(line: 5918, column: 4, scope: !7103)
!7135 = !DILocation(line: 5918, column: 5, scope: !7103)
!7136 = !DILocation(line: 5919, column: 3, scope: !7103)
!7137 = !DILocation(line: 5920, column: 1, scope: !7103)
!7138 = distinct !DISubprogram(name: "MagickGetImageScene", scope: !1, file: !1, line: 5944, type: !6000, scopeLine: 5945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7139 = !DILocalVariable(name: "wand", arg: 1, scope: !7138, file: !1, line: 5944, type: !1143)
!7140 = !DILocation(line: 5944, column: 51, scope: !7138)
!7141 = !DILocation(line: 5948, column: 7, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7138, file: !1, line: 5948, column: 7)
!7143 = !DILocation(line: 5948, column: 13, scope: !7142)
!7144 = !DILocation(line: 5948, column: 19, scope: !7142)
!7145 = !DILocation(line: 5948, column: 7, scope: !7138)
!7146 = !DILocation(line: 5949, column: 60, scope: !7142)
!7147 = !DILocation(line: 5949, column: 66, scope: !7142)
!7148 = !DILocation(line: 5949, column: 12, scope: !7142)
!7149 = !DILocation(line: 5949, column: 5, scope: !7142)
!7150 = !DILocation(line: 5950, column: 7, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7138, file: !1, line: 5950, column: 7)
!7152 = !DILocation(line: 5950, column: 13, scope: !7151)
!7153 = !DILocation(line: 5950, column: 20, scope: !7151)
!7154 = !DILocation(line: 5950, column: 7, scope: !7138)
!7155 = !DILocation(line: 5951, column: 5, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !1, line: 5951, column: 5)
!7157 = !DILocation(line: 5952, column: 10, scope: !7138)
!7158 = !DILocation(line: 5952, column: 16, scope: !7138)
!7159 = !DILocation(line: 5952, column: 24, scope: !7138)
!7160 = !DILocation(line: 5952, column: 3, scope: !7138)
!7161 = !DILocation(line: 5953, column: 1, scope: !7138)
!7162 = distinct !DISubprogram(name: "MagickGetImageSignature", scope: !1, file: !1, line: 5978, type: !6312, scopeLine: 5979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7163 = !DILocalVariable(name: "wand", arg: 1, scope: !7162, file: !1, line: 5978, type: !1143)
!7164 = !DILocation(line: 5978, column: 54, scope: !7162)
!7165 = !DILocalVariable(name: "value", scope: !7162, file: !1, line: 5981, type: !924)
!7166 = !DILocation(line: 5981, column: 6, scope: !7162)
!7167 = !DILocalVariable(name: "status", scope: !7162, file: !1, line: 5984, type: !807)
!7168 = !DILocation(line: 5984, column: 5, scope: !7162)
!7169 = !DILocation(line: 5988, column: 7, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 5988, column: 7)
!7171 = !DILocation(line: 5988, column: 13, scope: !7170)
!7172 = !DILocation(line: 5988, column: 19, scope: !7170)
!7173 = !DILocation(line: 5988, column: 7, scope: !7162)
!7174 = !DILocation(line: 5989, column: 60, scope: !7170)
!7175 = !DILocation(line: 5989, column: 66, scope: !7170)
!7176 = !DILocation(line: 5989, column: 12, scope: !7170)
!7177 = !DILocation(line: 5989, column: 5, scope: !7170)
!7178 = !DILocation(line: 5990, column: 7, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 5990, column: 7)
!7180 = !DILocation(line: 5990, column: 13, scope: !7179)
!7181 = !DILocation(line: 5990, column: 20, scope: !7179)
!7182 = !DILocation(line: 5990, column: 7, scope: !7162)
!7183 = !DILocation(line: 5992, column: 35, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7179, file: !1, line: 5991, column: 5)
!7185 = !DILocation(line: 5992, column: 41, scope: !7184)
!7186 = !DILocation(line: 5993, column: 35, scope: !7184)
!7187 = !DILocation(line: 5993, column: 41, scope: !7184)
!7188 = !DILocation(line: 5992, column: 14, scope: !7184)
!7189 = !DILocation(line: 5994, column: 7, scope: !7184)
!7190 = !DILocation(line: 5996, column: 25, scope: !7162)
!7191 = !DILocation(line: 5996, column: 31, scope: !7162)
!7192 = !DILocation(line: 5996, column: 10, scope: !7162)
!7193 = !DILocation(line: 5996, column: 9, scope: !7162)
!7194 = !DILocation(line: 5997, column: 7, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 5997, column: 7)
!7196 = !DILocation(line: 5997, column: 14, scope: !7195)
!7197 = !DILocation(line: 5997, column: 7, scope: !7162)
!7198 = !DILocation(line: 5998, column: 22, scope: !7195)
!7199 = !DILocation(line: 5998, column: 28, scope: !7195)
!7200 = !DILocation(line: 5998, column: 39, scope: !7195)
!7201 = !DILocation(line: 5998, column: 45, scope: !7195)
!7202 = !DILocation(line: 5998, column: 53, scope: !7195)
!7203 = !DILocation(line: 5998, column: 5, scope: !7195)
!7204 = !DILocation(line: 5999, column: 26, scope: !7162)
!7205 = !DILocation(line: 5999, column: 32, scope: !7162)
!7206 = !DILocation(line: 5999, column: 9, scope: !7162)
!7207 = !DILocation(line: 5999, column: 8, scope: !7162)
!7208 = !DILocation(line: 6000, column: 7, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 6000, column: 7)
!7210 = !DILocation(line: 6000, column: 13, scope: !7209)
!7211 = !DILocation(line: 6000, column: 7, scope: !7162)
!7212 = !DILocation(line: 6001, column: 26, scope: !7209)
!7213 = !DILocation(line: 6001, column: 12, scope: !7209)
!7214 = !DILocation(line: 6001, column: 5, scope: !7209)
!7215 = !DILocation(line: 6002, column: 20, scope: !7162)
!7216 = !DILocation(line: 6002, column: 26, scope: !7162)
!7217 = !DILocation(line: 6002, column: 37, scope: !7162)
!7218 = !DILocation(line: 6002, column: 43, scope: !7162)
!7219 = !DILocation(line: 6002, column: 51, scope: !7162)
!7220 = !DILocation(line: 6002, column: 3, scope: !7162)
!7221 = !DILocation(line: 6003, column: 3, scope: !7162)
!7222 = !DILocation(line: 6004, column: 1, scope: !7162)
!7223 = distinct !DISubprogram(name: "MagickGetImageTicksPerSecond", scope: !1, file: !1, line: 6028, type: !6000, scopeLine: 6029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7224 = !DILocalVariable(name: "wand", arg: 1, scope: !7223, file: !1, line: 6028, type: !1143)
!7225 = !DILocation(line: 6028, column: 60, scope: !7223)
!7226 = !DILocation(line: 6032, column: 7, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 6032, column: 7)
!7228 = !DILocation(line: 6032, column: 13, scope: !7227)
!7229 = !DILocation(line: 6032, column: 19, scope: !7227)
!7230 = !DILocation(line: 6032, column: 7, scope: !7223)
!7231 = !DILocation(line: 6033, column: 60, scope: !7227)
!7232 = !DILocation(line: 6033, column: 66, scope: !7227)
!7233 = !DILocation(line: 6033, column: 12, scope: !7227)
!7234 = !DILocation(line: 6033, column: 5, scope: !7227)
!7235 = !DILocation(line: 6034, column: 7, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7223, file: !1, line: 6034, column: 7)
!7237 = !DILocation(line: 6034, column: 13, scope: !7236)
!7238 = !DILocation(line: 6034, column: 20, scope: !7236)
!7239 = !DILocation(line: 6034, column: 7, scope: !7223)
!7240 = !DILocation(line: 6035, column: 5, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7236, file: !1, line: 6035, column: 5)
!7242 = !DILocation(line: 6036, column: 19, scope: !7223)
!7243 = !DILocation(line: 6036, column: 25, scope: !7223)
!7244 = !DILocation(line: 6036, column: 33, scope: !7223)
!7245 = !DILocation(line: 6036, column: 3, scope: !7223)
!7246 = !DILocation(line: 6037, column: 1, scope: !7223)
!7247 = distinct !DISubprogram(name: "MagickGetImageType", scope: !1, file: !1, line: 6069, type: !7248, scopeLine: 6070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!1000, !1143}
!7250 = !DILocalVariable(name: "wand", arg: 1, scope: !7247, file: !1, line: 6069, type: !1143)
!7251 = !DILocation(line: 6069, column: 53, scope: !7247)
!7252 = !DILocation(line: 6073, column: 7, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 6073, column: 7)
!7254 = !DILocation(line: 6073, column: 13, scope: !7253)
!7255 = !DILocation(line: 6073, column: 19, scope: !7253)
!7256 = !DILocation(line: 6073, column: 7, scope: !7247)
!7257 = !DILocation(line: 6074, column: 60, scope: !7253)
!7258 = !DILocation(line: 6074, column: 66, scope: !7253)
!7259 = !DILocation(line: 6074, column: 12, scope: !7253)
!7260 = !DILocation(line: 6074, column: 5, scope: !7253)
!7261 = !DILocation(line: 6075, column: 7, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 6075, column: 7)
!7263 = !DILocation(line: 6075, column: 13, scope: !7262)
!7264 = !DILocation(line: 6075, column: 20, scope: !7262)
!7265 = !DILocation(line: 6075, column: 7, scope: !7247)
!7266 = !DILocation(line: 6077, column: 35, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7262, file: !1, line: 6076, column: 5)
!7268 = !DILocation(line: 6077, column: 41, scope: !7267)
!7269 = !DILocation(line: 6078, column: 35, scope: !7267)
!7270 = !DILocation(line: 6078, column: 41, scope: !7267)
!7271 = !DILocation(line: 6077, column: 14, scope: !7267)
!7272 = !DILocation(line: 6079, column: 7, scope: !7267)
!7273 = !DILocation(line: 6081, column: 23, scope: !7247)
!7274 = !DILocation(line: 6081, column: 29, scope: !7247)
!7275 = !DILocation(line: 6081, column: 36, scope: !7247)
!7276 = !DILocation(line: 6081, column: 42, scope: !7247)
!7277 = !DILocation(line: 6081, column: 10, scope: !7247)
!7278 = !DILocation(line: 6081, column: 3, scope: !7247)
!7279 = !DILocation(line: 6082, column: 1, scope: !7247)
!7280 = distinct !DISubprogram(name: "MagickGetImageUnits", scope: !1, file: !1, line: 6106, type: !7281, scopeLine: 6107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{!848, !1143}
!7283 = !DILocalVariable(name: "wand", arg: 1, scope: !7280, file: !1, line: 6106, type: !1143)
!7284 = !DILocation(line: 6106, column: 59, scope: !7280)
!7285 = !DILocation(line: 6110, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7280, file: !1, line: 6110, column: 7)
!7287 = !DILocation(line: 6110, column: 13, scope: !7286)
!7288 = !DILocation(line: 6110, column: 19, scope: !7286)
!7289 = !DILocation(line: 6110, column: 7, scope: !7280)
!7290 = !DILocation(line: 6111, column: 60, scope: !7286)
!7291 = !DILocation(line: 6111, column: 66, scope: !7286)
!7292 = !DILocation(line: 6111, column: 12, scope: !7286)
!7293 = !DILocation(line: 6111, column: 5, scope: !7286)
!7294 = !DILocation(line: 6112, column: 7, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7280, file: !1, line: 6112, column: 7)
!7296 = !DILocation(line: 6112, column: 13, scope: !7295)
!7297 = !DILocation(line: 6112, column: 20, scope: !7295)
!7298 = !DILocation(line: 6112, column: 7, scope: !7280)
!7299 = !DILocation(line: 6114, column: 35, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7295, file: !1, line: 6113, column: 5)
!7301 = !DILocation(line: 6114, column: 41, scope: !7300)
!7302 = !DILocation(line: 6115, column: 35, scope: !7300)
!7303 = !DILocation(line: 6115, column: 41, scope: !7300)
!7304 = !DILocation(line: 6114, column: 14, scope: !7300)
!7305 = !DILocation(line: 6116, column: 7, scope: !7300)
!7306 = !DILocation(line: 6118, column: 10, scope: !7280)
!7307 = !DILocation(line: 6118, column: 16, scope: !7280)
!7308 = !DILocation(line: 6118, column: 24, scope: !7280)
!7309 = !DILocation(line: 6118, column: 3, scope: !7280)
!7310 = !DILocation(line: 6119, column: 1, scope: !7280)
!7311 = distinct !DISubprogram(name: "MagickGetImageVirtualPixelMethod", scope: !1, file: !1, line: 6144, type: !7312, scopeLine: 6145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!1282, !1143}
!7314 = !DILocalVariable(name: "wand", arg: 1, scope: !7311, file: !1, line: 6144, type: !1143)
!7315 = !DILocation(line: 6144, column: 76, scope: !7311)
!7316 = !DILocation(line: 6148, column: 7, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 6148, column: 7)
!7318 = !DILocation(line: 6148, column: 13, scope: !7317)
!7319 = !DILocation(line: 6148, column: 19, scope: !7317)
!7320 = !DILocation(line: 6148, column: 7, scope: !7311)
!7321 = !DILocation(line: 6149, column: 60, scope: !7317)
!7322 = !DILocation(line: 6149, column: 66, scope: !7317)
!7323 = !DILocation(line: 6149, column: 12, scope: !7317)
!7324 = !DILocation(line: 6149, column: 5, scope: !7317)
!7325 = !DILocation(line: 6150, column: 7, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 6150, column: 7)
!7327 = !DILocation(line: 6150, column: 13, scope: !7326)
!7328 = !DILocation(line: 6150, column: 20, scope: !7326)
!7329 = !DILocation(line: 6150, column: 7, scope: !7311)
!7330 = !DILocation(line: 6152, column: 35, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 6151, column: 5)
!7332 = !DILocation(line: 6152, column: 41, scope: !7331)
!7333 = !DILocation(line: 6153, column: 35, scope: !7331)
!7334 = !DILocation(line: 6153, column: 41, scope: !7331)
!7335 = !DILocation(line: 6152, column: 14, scope: !7331)
!7336 = !DILocation(line: 6154, column: 7, scope: !7331)
!7337 = !DILocation(line: 6156, column: 37, scope: !7311)
!7338 = !DILocation(line: 6156, column: 43, scope: !7311)
!7339 = !DILocation(line: 6156, column: 10, scope: !7311)
!7340 = !DILocation(line: 6156, column: 3, scope: !7311)
!7341 = !DILocation(line: 6157, column: 1, scope: !7311)
!7342 = distinct !DISubprogram(name: "MagickGetImageWhitePoint", scope: !1, file: !1, line: 6186, type: !5560, scopeLine: 6188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7343 = !DILocalVariable(name: "wand", arg: 1, scope: !7342, file: !1, line: 6186, type: !1143)
!7344 = !DILocation(line: 6186, column: 67, scope: !7342)
!7345 = !DILocalVariable(name: "x", arg: 2, scope: !7342, file: !1, line: 6187, type: !1117)
!7346 = !DILocation(line: 6187, column: 11, scope: !7342)
!7347 = !DILocalVariable(name: "y", arg: 3, scope: !7342, file: !1, line: 6187, type: !1117)
!7348 = !DILocation(line: 6187, column: 21, scope: !7342)
!7349 = !DILocation(line: 6191, column: 7, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 6191, column: 7)
!7351 = !DILocation(line: 6191, column: 13, scope: !7350)
!7352 = !DILocation(line: 6191, column: 19, scope: !7350)
!7353 = !DILocation(line: 6191, column: 7, scope: !7342)
!7354 = !DILocation(line: 6192, column: 60, scope: !7350)
!7355 = !DILocation(line: 6192, column: 66, scope: !7350)
!7356 = !DILocation(line: 6192, column: 12, scope: !7350)
!7357 = !DILocation(line: 6192, column: 5, scope: !7350)
!7358 = !DILocation(line: 6193, column: 7, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 6193, column: 7)
!7360 = !DILocation(line: 6193, column: 13, scope: !7359)
!7361 = !DILocation(line: 6193, column: 20, scope: !7359)
!7362 = !DILocation(line: 6193, column: 7, scope: !7342)
!7363 = !DILocation(line: 6194, column: 5, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7359, file: !1, line: 6194, column: 5)
!7365 = !DILocation(line: 6195, column: 6, scope: !7342)
!7366 = !DILocation(line: 6195, column: 12, scope: !7342)
!7367 = !DILocation(line: 6195, column: 20, scope: !7342)
!7368 = !DILocation(line: 6195, column: 33, scope: !7342)
!7369 = !DILocation(line: 6195, column: 45, scope: !7342)
!7370 = !DILocation(line: 6195, column: 4, scope: !7342)
!7371 = !DILocation(line: 6195, column: 5, scope: !7342)
!7372 = !DILocation(line: 6196, column: 6, scope: !7342)
!7373 = !DILocation(line: 6196, column: 12, scope: !7342)
!7374 = !DILocation(line: 6196, column: 20, scope: !7342)
!7375 = !DILocation(line: 6196, column: 33, scope: !7342)
!7376 = !DILocation(line: 6196, column: 45, scope: !7342)
!7377 = !DILocation(line: 6196, column: 4, scope: !7342)
!7378 = !DILocation(line: 6196, column: 5, scope: !7342)
!7379 = !DILocation(line: 6197, column: 3, scope: !7342)
!7380 = !DILocation(line: 6198, column: 1, scope: !7342)
!7381 = distinct !DISubprogram(name: "MagickGetImageWidth", scope: !1, file: !1, line: 6222, type: !6000, scopeLine: 6223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7382 = !DILocalVariable(name: "wand", arg: 1, scope: !7381, file: !1, line: 6222, type: !1143)
!7383 = !DILocation(line: 6222, column: 51, scope: !7381)
!7384 = !DILocation(line: 6226, column: 7, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7381, file: !1, line: 6226, column: 7)
!7386 = !DILocation(line: 6226, column: 13, scope: !7385)
!7387 = !DILocation(line: 6226, column: 19, scope: !7385)
!7388 = !DILocation(line: 6226, column: 7, scope: !7381)
!7389 = !DILocation(line: 6227, column: 60, scope: !7385)
!7390 = !DILocation(line: 6227, column: 66, scope: !7385)
!7391 = !DILocation(line: 6227, column: 12, scope: !7385)
!7392 = !DILocation(line: 6227, column: 5, scope: !7385)
!7393 = !DILocation(line: 6228, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7381, file: !1, line: 6228, column: 7)
!7395 = !DILocation(line: 6228, column: 13, scope: !7394)
!7396 = !DILocation(line: 6228, column: 20, scope: !7394)
!7397 = !DILocation(line: 6228, column: 7, scope: !7381)
!7398 = !DILocation(line: 6229, column: 5, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7394, file: !1, line: 6229, column: 5)
!7400 = !DILocation(line: 6230, column: 10, scope: !7381)
!7401 = !DILocation(line: 6230, column: 16, scope: !7381)
!7402 = !DILocation(line: 6230, column: 24, scope: !7381)
!7403 = !DILocation(line: 6230, column: 3, scope: !7381)
!7404 = !DILocation(line: 6231, column: 1, scope: !7381)
!7405 = distinct !DISubprogram(name: "MagickGetNumberImages", scope: !1, file: !1, line: 6256, type: !6000, scopeLine: 6257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7406 = !DILocalVariable(name: "wand", arg: 1, scope: !7405, file: !1, line: 6256, type: !1143)
!7407 = !DILocation(line: 6256, column: 53, scope: !7405)
!7408 = !DILocation(line: 6260, column: 7, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7405, file: !1, line: 6260, column: 7)
!7410 = !DILocation(line: 6260, column: 13, scope: !7409)
!7411 = !DILocation(line: 6260, column: 19, scope: !7409)
!7412 = !DILocation(line: 6260, column: 7, scope: !7405)
!7413 = !DILocation(line: 6261, column: 60, scope: !7409)
!7414 = !DILocation(line: 6261, column: 66, scope: !7409)
!7415 = !DILocation(line: 6261, column: 12, scope: !7409)
!7416 = !DILocation(line: 6261, column: 5, scope: !7409)
!7417 = !DILocation(line: 6262, column: 29, scope: !7405)
!7418 = !DILocation(line: 6262, column: 35, scope: !7405)
!7419 = !DILocation(line: 6262, column: 10, scope: !7405)
!7420 = !DILocation(line: 6262, column: 3, scope: !7405)
!7421 = distinct !DISubprogram(name: "MagickGetImageTotalInkDensity", scope: !1, file: !1, line: 6287, type: !6374, scopeLine: 6288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7422 = !DILocalVariable(name: "wand", arg: 1, scope: !7421, file: !1, line: 6287, type: !1143)
!7423 = !DILocation(line: 6287, column: 61, scope: !7421)
!7424 = !DILocation(line: 6291, column: 7, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7421, file: !1, line: 6291, column: 7)
!7426 = !DILocation(line: 6291, column: 13, scope: !7425)
!7427 = !DILocation(line: 6291, column: 19, scope: !7425)
!7428 = !DILocation(line: 6291, column: 7, scope: !7421)
!7429 = !DILocation(line: 6292, column: 60, scope: !7425)
!7430 = !DILocation(line: 6292, column: 66, scope: !7425)
!7431 = !DILocation(line: 6292, column: 12, scope: !7425)
!7432 = !DILocation(line: 6292, column: 5, scope: !7425)
!7433 = !DILocation(line: 6293, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7421, file: !1, line: 6293, column: 7)
!7435 = !DILocation(line: 6293, column: 13, scope: !7434)
!7436 = !DILocation(line: 6293, column: 20, scope: !7434)
!7437 = !DILocation(line: 6293, column: 7, scope: !7421)
!7438 = !DILocation(line: 6295, column: 35, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7434, file: !1, line: 6294, column: 5)
!7440 = !DILocation(line: 6295, column: 41, scope: !7439)
!7441 = !DILocation(line: 6296, column: 35, scope: !7439)
!7442 = !DILocation(line: 6296, column: 41, scope: !7439)
!7443 = !DILocation(line: 6295, column: 14, scope: !7439)
!7444 = !DILocation(line: 6297, column: 7, scope: !7439)
!7445 = !DILocation(line: 6299, column: 34, scope: !7421)
!7446 = !DILocation(line: 6299, column: 40, scope: !7421)
!7447 = !DILocation(line: 6299, column: 10, scope: !7421)
!7448 = !DILocation(line: 6299, column: 3, scope: !7421)
!7449 = !DILocation(line: 6300, column: 1, scope: !7421)
!7450 = distinct !DISubprogram(name: "MagickHaldClutImage", scope: !1, file: !1, line: 6334, type: !1714, scopeLine: 6336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7451 = !DILocalVariable(name: "wand", arg: 1, scope: !7450, file: !1, line: 6334, type: !1143)
!7452 = !DILocation(line: 6334, column: 62, scope: !7450)
!7453 = !DILocalVariable(name: "hald_wand", arg: 2, scope: !7450, file: !1, line: 6335, type: !1456)
!7454 = !DILocation(line: 6335, column: 21, scope: !7450)
!7455 = !DILocalVariable(name: "status", scope: !7450, file: !1, line: 6338, type: !807)
!7456 = !DILocation(line: 6338, column: 5, scope: !7450)
!7457 = !DILocation(line: 6340, column: 37, scope: !7450)
!7458 = !DILocation(line: 6340, column: 58, scope: !7450)
!7459 = !DILocation(line: 6340, column: 10, scope: !7450)
!7460 = !DILocation(line: 6340, column: 9, scope: !7450)
!7461 = !DILocation(line: 6341, column: 10, scope: !7450)
!7462 = !DILocation(line: 6341, column: 3, scope: !7450)
!7463 = distinct !DISubprogram(name: "MagickHaldClutImageChannel", scope: !1, file: !1, line: 6344, type: !2889, scopeLine: 6346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7464 = !DILocalVariable(name: "wand", arg: 1, scope: !7463, file: !1, line: 6344, type: !1143)
!7465 = !DILocation(line: 6344, column: 69, scope: !7463)
!7466 = !DILocalVariable(name: "channel", arg: 2, scope: !7463, file: !1, line: 6345, type: !1507)
!7467 = !DILocation(line: 6345, column: 21, scope: !7463)
!7468 = !DILocalVariable(name: "hald_wand", arg: 3, scope: !7463, file: !1, line: 6345, type: !1456)
!7469 = !DILocation(line: 6345, column: 47, scope: !7463)
!7470 = !DILocalVariable(name: "status", scope: !7463, file: !1, line: 6348, type: !807)
!7471 = !DILocation(line: 6348, column: 5, scope: !7463)
!7472 = !DILocation(line: 6352, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7463, file: !1, line: 6352, column: 7)
!7474 = !DILocation(line: 6352, column: 13, scope: !7473)
!7475 = !DILocation(line: 6352, column: 19, scope: !7473)
!7476 = !DILocation(line: 6352, column: 7, scope: !7463)
!7477 = !DILocation(line: 6353, column: 60, scope: !7473)
!7478 = !DILocation(line: 6353, column: 66, scope: !7473)
!7479 = !DILocation(line: 6353, column: 12, scope: !7473)
!7480 = !DILocation(line: 6353, column: 5, scope: !7473)
!7481 = !DILocation(line: 6354, column: 8, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7463, file: !1, line: 6354, column: 7)
!7483 = !DILocation(line: 6354, column: 14, scope: !7482)
!7484 = !DILocation(line: 6354, column: 21, scope: !7482)
!7485 = !DILocation(line: 6354, column: 40, scope: !7482)
!7486 = !DILocation(line: 6354, column: 44, scope: !7482)
!7487 = !DILocation(line: 6354, column: 55, scope: !7482)
!7488 = !DILocation(line: 6354, column: 62, scope: !7482)
!7489 = !DILocation(line: 6354, column: 7, scope: !7463)
!7490 = !DILocation(line: 6355, column: 5, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7482, file: !1, line: 6355, column: 5)
!7492 = !DILocation(line: 6356, column: 31, scope: !7463)
!7493 = !DILocation(line: 6356, column: 37, scope: !7463)
!7494 = !DILocation(line: 6356, column: 44, scope: !7463)
!7495 = !DILocation(line: 6356, column: 52, scope: !7463)
!7496 = !DILocation(line: 6356, column: 63, scope: !7463)
!7497 = !DILocation(line: 6356, column: 10, scope: !7463)
!7498 = !DILocation(line: 6356, column: 9, scope: !7463)
!7499 = !DILocation(line: 6357, column: 7, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7463, file: !1, line: 6357, column: 7)
!7501 = !DILocation(line: 6357, column: 14, scope: !7500)
!7502 = !DILocation(line: 6357, column: 7, scope: !7463)
!7503 = !DILocation(line: 6358, column: 22, scope: !7500)
!7504 = !DILocation(line: 6358, column: 28, scope: !7500)
!7505 = !DILocation(line: 6358, column: 39, scope: !7500)
!7506 = !DILocation(line: 6358, column: 45, scope: !7500)
!7507 = !DILocation(line: 6358, column: 53, scope: !7500)
!7508 = !DILocation(line: 6358, column: 5, scope: !7500)
!7509 = !DILocation(line: 6359, column: 10, scope: !7463)
!7510 = !DILocation(line: 6359, column: 3, scope: !7463)
!7511 = !DILocation(line: 6360, column: 1, scope: !7463)
!7512 = distinct !DISubprogram(name: "MagickHasNextImage", scope: !1, file: !1, line: 6385, type: !2240, scopeLine: 6386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7513 = !DILocalVariable(name: "wand", arg: 1, scope: !7512, file: !1, line: 6385, type: !1143)
!7514 = !DILocation(line: 6385, column: 61, scope: !7512)
!7515 = !DILocation(line: 6389, column: 7, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !1, line: 6389, column: 7)
!7517 = !DILocation(line: 6389, column: 13, scope: !7516)
!7518 = !DILocation(line: 6389, column: 19, scope: !7516)
!7519 = !DILocation(line: 6389, column: 7, scope: !7512)
!7520 = !DILocation(line: 6390, column: 60, scope: !7516)
!7521 = !DILocation(line: 6390, column: 66, scope: !7516)
!7522 = !DILocation(line: 6390, column: 12, scope: !7516)
!7523 = !DILocation(line: 6390, column: 5, scope: !7516)
!7524 = !DILocation(line: 6391, column: 7, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7512, file: !1, line: 6391, column: 7)
!7526 = !DILocation(line: 6391, column: 13, scope: !7525)
!7527 = !DILocation(line: 6391, column: 20, scope: !7525)
!7528 = !DILocation(line: 6391, column: 7, scope: !7512)
!7529 = !DILocation(line: 6392, column: 5, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7525, file: !1, line: 6392, column: 5)
!7531 = !DILocation(line: 6393, column: 26, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7512, file: !1, line: 6393, column: 7)
!7533 = !DILocation(line: 6393, column: 32, scope: !7532)
!7534 = !DILocation(line: 6393, column: 7, scope: !7532)
!7535 = !DILocation(line: 6393, column: 40, scope: !7532)
!7536 = !DILocation(line: 6393, column: 7, scope: !7512)
!7537 = !DILocation(line: 6394, column: 5, scope: !7532)
!7538 = !DILocation(line: 6395, column: 3, scope: !7512)
!7539 = !DILocation(line: 6396, column: 1, scope: !7512)
!7540 = distinct !DISubprogram(name: "MagickHasPreviousImage", scope: !1, file: !1, line: 6421, type: !2240, scopeLine: 6422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7541 = !DILocalVariable(name: "wand", arg: 1, scope: !7540, file: !1, line: 6421, type: !1143)
!7542 = !DILocation(line: 6421, column: 65, scope: !7540)
!7543 = !DILocation(line: 6425, column: 7, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7540, file: !1, line: 6425, column: 7)
!7545 = !DILocation(line: 6425, column: 13, scope: !7544)
!7546 = !DILocation(line: 6425, column: 19, scope: !7544)
!7547 = !DILocation(line: 6425, column: 7, scope: !7540)
!7548 = !DILocation(line: 6426, column: 60, scope: !7544)
!7549 = !DILocation(line: 6426, column: 66, scope: !7544)
!7550 = !DILocation(line: 6426, column: 12, scope: !7544)
!7551 = !DILocation(line: 6426, column: 5, scope: !7544)
!7552 = !DILocation(line: 6427, column: 7, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7540, file: !1, line: 6427, column: 7)
!7554 = !DILocation(line: 6427, column: 13, scope: !7553)
!7555 = !DILocation(line: 6427, column: 20, scope: !7553)
!7556 = !DILocation(line: 6427, column: 7, scope: !7540)
!7557 = !DILocation(line: 6428, column: 5, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7553, file: !1, line: 6428, column: 5)
!7559 = !DILocation(line: 6429, column: 30, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7540, file: !1, line: 6429, column: 7)
!7561 = !DILocation(line: 6429, column: 36, scope: !7560)
!7562 = !DILocation(line: 6429, column: 7, scope: !7560)
!7563 = !DILocation(line: 6429, column: 44, scope: !7560)
!7564 = !DILocation(line: 6429, column: 7, scope: !7540)
!7565 = !DILocation(line: 6430, column: 5, scope: !7560)
!7566 = !DILocation(line: 6431, column: 3, scope: !7540)
!7567 = !DILocation(line: 6432, column: 1, scope: !7540)
!7568 = distinct !DISubprogram(name: "MagickIdentifyImage", scope: !1, file: !1, line: 6457, type: !6312, scopeLine: 6458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7569 = !DILocalVariable(name: "wand", arg: 1, scope: !7568, file: !1, line: 6457, type: !1143)
!7570 = !DILocation(line: 6457, column: 50, scope: !7568)
!7571 = !DILocalVariable(name: "description", scope: !7568, file: !1, line: 6460, type: !850)
!7572 = !DILocation(line: 6460, column: 6, scope: !7568)
!7573 = !DILocalVariable(name: "filename", scope: !7568, file: !1, line: 6461, type: !944)
!7574 = !DILocation(line: 6461, column: 5, scope: !7568)
!7575 = !DILocalVariable(name: "file", scope: !7568, file: !1, line: 6464, type: !1216)
!7576 = !DILocation(line: 6464, column: 6, scope: !7568)
!7577 = !DILocalVariable(name: "unique_file", scope: !7568, file: !1, line: 6467, type: !958)
!7578 = !DILocation(line: 6467, column: 5, scope: !7568)
!7579 = !DILocation(line: 6471, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7568, file: !1, line: 6471, column: 7)
!7581 = !DILocation(line: 6471, column: 13, scope: !7580)
!7582 = !DILocation(line: 6471, column: 19, scope: !7580)
!7583 = !DILocation(line: 6471, column: 7, scope: !7568)
!7584 = !DILocation(line: 6472, column: 60, scope: !7580)
!7585 = !DILocation(line: 6472, column: 66, scope: !7580)
!7586 = !DILocation(line: 6472, column: 12, scope: !7580)
!7587 = !DILocation(line: 6472, column: 5, scope: !7580)
!7588 = !DILocation(line: 6473, column: 7, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7568, file: !1, line: 6473, column: 7)
!7590 = !DILocation(line: 6473, column: 13, scope: !7589)
!7591 = !DILocation(line: 6473, column: 20, scope: !7589)
!7592 = !DILocation(line: 6473, column: 7, scope: !7568)
!7593 = !DILocation(line: 6475, column: 35, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7589, file: !1, line: 6474, column: 5)
!7595 = !DILocation(line: 6475, column: 41, scope: !7594)
!7596 = !DILocation(line: 6476, column: 35, scope: !7594)
!7597 = !DILocation(line: 6476, column: 41, scope: !7594)
!7598 = !DILocation(line: 6475, column: 14, scope: !7594)
!7599 = !DILocation(line: 6477, column: 7, scope: !7594)
!7600 = !DILocation(line: 6479, column: 14, scope: !7568)
!7601 = !DILocation(line: 6480, column: 41, scope: !7568)
!7602 = !DILocation(line: 6480, column: 15, scope: !7568)
!7603 = !DILocation(line: 6480, column: 14, scope: !7568)
!7604 = !DILocation(line: 6481, column: 7, scope: !7568)
!7605 = !DILocation(line: 6482, column: 7, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7568, file: !1, line: 6482, column: 7)
!7607 = !DILocation(line: 6482, column: 19, scope: !7606)
!7608 = !DILocation(line: 6482, column: 7, scope: !7568)
!7609 = !DILocation(line: 6483, column: 17, scope: !7606)
!7610 = !DILocation(line: 6483, column: 10, scope: !7606)
!7611 = !DILocation(line: 6483, column: 9, scope: !7606)
!7612 = !DILocation(line: 6483, column: 5, scope: !7606)
!7613 = !DILocation(line: 6484, column: 8, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7568, file: !1, line: 6484, column: 7)
!7615 = !DILocation(line: 6484, column: 20, scope: !7614)
!7616 = !DILocation(line: 6484, column: 27, scope: !7614)
!7617 = !DILocation(line: 6484, column: 31, scope: !7614)
!7618 = !DILocation(line: 6484, column: 36, scope: !7614)
!7619 = !DILocation(line: 6484, column: 7, scope: !7568)
!7620 = !DILocation(line: 6486, column: 35, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7614, file: !1, line: 6485, column: 5)
!7622 = !DILocation(line: 6486, column: 41, scope: !7621)
!7623 = !DILocation(line: 6487, column: 46, scope: !7621)
!7624 = !DILocation(line: 6487, column: 52, scope: !7621)
!7625 = !DILocation(line: 6486, column: 14, scope: !7621)
!7626 = !DILocation(line: 6488, column: 7, scope: !7621)
!7627 = !DILocation(line: 6490, column: 24, scope: !7568)
!7628 = !DILocation(line: 6490, column: 30, scope: !7568)
!7629 = !DILocation(line: 6490, column: 37, scope: !7568)
!7630 = !DILocation(line: 6490, column: 10, scope: !7568)
!7631 = !DILocation(line: 6491, column: 17, scope: !7568)
!7632 = !DILocation(line: 6491, column: 10, scope: !7568)
!7633 = !DILocation(line: 6492, column: 28, scope: !7568)
!7634 = !DILocation(line: 6492, column: 42, scope: !7568)
!7635 = !DILocation(line: 6492, column: 48, scope: !7568)
!7636 = !DILocation(line: 6492, column: 15, scope: !7568)
!7637 = !DILocation(line: 6492, column: 14, scope: !7568)
!7638 = !DILocation(line: 6493, column: 39, scope: !7568)
!7639 = !DILocation(line: 6493, column: 10, scope: !7568)
!7640 = !DILocation(line: 6494, column: 10, scope: !7568)
!7641 = !DILocation(line: 6494, column: 3, scope: !7568)
!7642 = !DILocation(line: 6495, column: 1, scope: !7568)
!7643 = distinct !DISubprogram(name: "MagickImplodeImage", scope: !1, file: !1, line: 6525, type: !2403, scopeLine: 6527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7644 = !DILocalVariable(name: "wand", arg: 1, scope: !7643, file: !1, line: 6525, type: !1143)
!7645 = !DILocation(line: 6525, column: 61, scope: !7643)
!7646 = !DILocalVariable(name: "amount", arg: 2, scope: !7643, file: !1, line: 6526, type: !1325)
!7647 = !DILocation(line: 6526, column: 16, scope: !7643)
!7648 = !DILocalVariable(name: "implode_image", scope: !7643, file: !1, line: 6529, type: !791)
!7649 = !DILocation(line: 6529, column: 6, scope: !7643)
!7650 = !DILocation(line: 6533, column: 7, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 6533, column: 7)
!7652 = !DILocation(line: 6533, column: 13, scope: !7651)
!7653 = !DILocation(line: 6533, column: 19, scope: !7651)
!7654 = !DILocation(line: 6533, column: 7, scope: !7643)
!7655 = !DILocation(line: 6534, column: 60, scope: !7651)
!7656 = !DILocation(line: 6534, column: 66, scope: !7651)
!7657 = !DILocation(line: 6534, column: 12, scope: !7651)
!7658 = !DILocation(line: 6534, column: 5, scope: !7651)
!7659 = !DILocation(line: 6535, column: 7, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 6535, column: 7)
!7661 = !DILocation(line: 6535, column: 13, scope: !7660)
!7662 = !DILocation(line: 6535, column: 20, scope: !7660)
!7663 = !DILocation(line: 6535, column: 7, scope: !7643)
!7664 = !DILocation(line: 6536, column: 5, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7660, file: !1, line: 6536, column: 5)
!7666 = !DILocation(line: 6537, column: 30, scope: !7643)
!7667 = !DILocation(line: 6537, column: 36, scope: !7643)
!7668 = !DILocation(line: 6537, column: 43, scope: !7643)
!7669 = !DILocation(line: 6537, column: 50, scope: !7643)
!7670 = !DILocation(line: 6537, column: 56, scope: !7643)
!7671 = !DILocation(line: 6537, column: 17, scope: !7643)
!7672 = !DILocation(line: 6537, column: 16, scope: !7643)
!7673 = !DILocation(line: 6538, column: 7, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 6538, column: 7)
!7675 = !DILocation(line: 6538, column: 21, scope: !7674)
!7676 = !DILocation(line: 6538, column: 7, scope: !7643)
!7677 = !DILocation(line: 6539, column: 5, scope: !7674)
!7678 = !DILocation(line: 6540, column: 23, scope: !7643)
!7679 = !DILocation(line: 6540, column: 29, scope: !7643)
!7680 = !DILocation(line: 6540, column: 36, scope: !7643)
!7681 = !DILocation(line: 6540, column: 3, scope: !7643)
!7682 = !DILocation(line: 6541, column: 3, scope: !7643)
!7683 = !DILocation(line: 6542, column: 1, scope: !7643)
!7684 = distinct !DISubprogram(name: "MagickImportImagePixels", scope: !1, file: !1, line: 6595, type: !7685, scopeLine: 6598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{!807, !1143, !1666, !1666, !1214, !1214, !924, !3796, !1212}
!7687 = !DILocalVariable(name: "wand", arg: 1, scope: !7684, file: !1, line: 6595, type: !1143)
!7688 = !DILocation(line: 6595, column: 66, scope: !7684)
!7689 = !DILocalVariable(name: "x", arg: 2, scope: !7684, file: !1, line: 6596, type: !1666)
!7690 = !DILocation(line: 6596, column: 17, scope: !7684)
!7691 = !DILocalVariable(name: "y", arg: 3, scope: !7684, file: !1, line: 6596, type: !1666)
!7692 = !DILocation(line: 6596, column: 33, scope: !7684)
!7693 = !DILocalVariable(name: "columns", arg: 4, scope: !7684, file: !1, line: 6596, type: !1214)
!7694 = !DILocation(line: 6596, column: 48, scope: !7684)
!7695 = !DILocalVariable(name: "rows", arg: 5, scope: !7684, file: !1, line: 6596, type: !1214)
!7696 = !DILocation(line: 6596, column: 69, scope: !7684)
!7697 = !DILocalVariable(name: "map", arg: 6, scope: !7684, file: !1, line: 6597, type: !924)
!7698 = !DILocation(line: 6597, column: 15, scope: !7684)
!7699 = !DILocalVariable(name: "storage", arg: 7, scope: !7684, file: !1, line: 6597, type: !3796)
!7700 = !DILocation(line: 6597, column: 37, scope: !7684)
!7701 = !DILocalVariable(name: "pixels", arg: 8, scope: !7684, file: !1, line: 6597, type: !1212)
!7702 = !DILocation(line: 6597, column: 57, scope: !7684)
!7703 = !DILocalVariable(name: "status", scope: !7684, file: !1, line: 6600, type: !807)
!7704 = !DILocation(line: 6600, column: 5, scope: !7684)
!7705 = !DILocation(line: 6604, column: 7, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 6604, column: 7)
!7707 = !DILocation(line: 6604, column: 13, scope: !7706)
!7708 = !DILocation(line: 6604, column: 19, scope: !7706)
!7709 = !DILocation(line: 6604, column: 7, scope: !7684)
!7710 = !DILocation(line: 6605, column: 60, scope: !7706)
!7711 = !DILocation(line: 6605, column: 66, scope: !7706)
!7712 = !DILocation(line: 6605, column: 12, scope: !7706)
!7713 = !DILocation(line: 6605, column: 5, scope: !7706)
!7714 = !DILocation(line: 6606, column: 7, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 6606, column: 7)
!7716 = !DILocation(line: 6606, column: 13, scope: !7715)
!7717 = !DILocation(line: 6606, column: 20, scope: !7715)
!7718 = !DILocation(line: 6606, column: 7, scope: !7684)
!7719 = !DILocation(line: 6607, column: 5, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7715, file: !1, line: 6607, column: 5)
!7721 = !DILocation(line: 6608, column: 28, scope: !7684)
!7722 = !DILocation(line: 6608, column: 34, scope: !7684)
!7723 = !DILocation(line: 6608, column: 41, scope: !7684)
!7724 = !DILocation(line: 6608, column: 43, scope: !7684)
!7725 = !DILocation(line: 6608, column: 45, scope: !7684)
!7726 = !DILocation(line: 6608, column: 53, scope: !7684)
!7727 = !DILocation(line: 6608, column: 58, scope: !7684)
!7728 = !DILocation(line: 6608, column: 62, scope: !7684)
!7729 = !DILocation(line: 6608, column: 70, scope: !7684)
!7730 = !DILocation(line: 6608, column: 10, scope: !7684)
!7731 = !DILocation(line: 6608, column: 9, scope: !7684)
!7732 = !DILocation(line: 6609, column: 7, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 6609, column: 7)
!7734 = !DILocation(line: 6609, column: 14, scope: !7733)
!7735 = !DILocation(line: 6609, column: 7, scope: !7684)
!7736 = !DILocation(line: 6610, column: 22, scope: !7733)
!7737 = !DILocation(line: 6610, column: 28, scope: !7733)
!7738 = !DILocation(line: 6610, column: 39, scope: !7733)
!7739 = !DILocation(line: 6610, column: 45, scope: !7733)
!7740 = !DILocation(line: 6610, column: 53, scope: !7733)
!7741 = !DILocation(line: 6610, column: 5, scope: !7733)
!7742 = !DILocation(line: 6611, column: 10, scope: !7684)
!7743 = !DILocation(line: 6611, column: 3, scope: !7684)
!7744 = !DILocation(line: 6612, column: 1, scope: !7684)
!7745 = distinct !DISubprogram(name: "MagickInverseFourierTransformImage", scope: !1, file: !1, line: 6645, type: !7746, scopeLine: 6648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!807, !1143, !1143, !2117}
!7748 = !DILocalVariable(name: "magnitude_wand", arg: 1, scope: !7745, file: !1, line: 6646, type: !1143)
!7749 = !DILocation(line: 6646, column: 15, scope: !7745)
!7750 = !DILocalVariable(name: "phase_wand", arg: 2, scope: !7745, file: !1, line: 6646, type: !1143)
!7751 = !DILocation(line: 6646, column: 42, scope: !7745)
!7752 = !DILocalVariable(name: "magnitude", arg: 3, scope: !7745, file: !1, line: 6647, type: !2117)
!7753 = !DILocation(line: 6647, column: 27, scope: !7745)
!7754 = !DILocalVariable(name: "inverse_image", scope: !7745, file: !1, line: 6650, type: !791)
!7755 = !DILocation(line: 6650, column: 6, scope: !7745)
!7756 = !DILocalVariable(name: "wand", scope: !7745, file: !1, line: 6653, type: !1143)
!7757 = !DILocation(line: 6653, column: 6, scope: !7745)
!7758 = !DILocation(line: 6657, column: 7, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7745, file: !1, line: 6657, column: 7)
!7760 = !DILocation(line: 6657, column: 23, scope: !7759)
!7761 = !DILocation(line: 6657, column: 29, scope: !7759)
!7762 = !DILocation(line: 6657, column: 7, scope: !7745)
!7763 = !DILocation(line: 6659, column: 7, scope: !7759)
!7764 = !DILocation(line: 6659, column: 23, scope: !7759)
!7765 = !DILocation(line: 6658, column: 12, scope: !7759)
!7766 = !DILocation(line: 6658, column: 5, scope: !7759)
!7767 = !DILocation(line: 6660, column: 8, scope: !7745)
!7768 = !DILocation(line: 6660, column: 7, scope: !7745)
!7769 = !DILocation(line: 6661, column: 7, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7745, file: !1, line: 6661, column: 7)
!7771 = !DILocation(line: 6661, column: 23, scope: !7770)
!7772 = !DILocation(line: 6661, column: 30, scope: !7770)
!7773 = !DILocation(line: 6661, column: 7, scope: !7745)
!7774 = !DILocation(line: 6662, column: 5, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7770, file: !1, line: 6662, column: 5)
!7776 = !DILocation(line: 6666, column: 46, scope: !7745)
!7777 = !DILocation(line: 6666, column: 62, scope: !7745)
!7778 = !DILocation(line: 6667, column: 5, scope: !7745)
!7779 = !DILocation(line: 6667, column: 17, scope: !7745)
!7780 = !DILocation(line: 6667, column: 24, scope: !7745)
!7781 = !DILocation(line: 6667, column: 34, scope: !7745)
!7782 = !DILocation(line: 6667, column: 40, scope: !7745)
!7783 = !DILocation(line: 6666, column: 17, scope: !7745)
!7784 = !DILocation(line: 6666, column: 16, scope: !7745)
!7785 = !DILocation(line: 6668, column: 7, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7745, file: !1, line: 6668, column: 7)
!7787 = !DILocation(line: 6668, column: 21, scope: !7786)
!7788 = !DILocation(line: 6668, column: 7, scope: !7745)
!7789 = !DILocation(line: 6669, column: 5, scope: !7786)
!7790 = !DILocation(line: 6670, column: 23, scope: !7745)
!7791 = !DILocation(line: 6670, column: 29, scope: !7745)
!7792 = !DILocation(line: 6670, column: 36, scope: !7745)
!7793 = !DILocation(line: 6670, column: 3, scope: !7745)
!7794 = !DILocation(line: 6671, column: 3, scope: !7745)
!7795 = !DILocation(line: 6672, column: 1, scope: !7745)
!7796 = distinct !DISubprogram(name: "MagickLabelImage", scope: !1, file: !1, line: 6698, type: !2074, scopeLine: 6700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7797 = !DILocalVariable(name: "wand", arg: 1, scope: !7796, file: !1, line: 6698, type: !1143)
!7798 = !DILocation(line: 6698, column: 59, scope: !7796)
!7799 = !DILocalVariable(name: "label", arg: 2, scope: !7796, file: !1, line: 6699, type: !924)
!7800 = !DILocation(line: 6699, column: 15, scope: !7796)
!7801 = !DILocalVariable(name: "status", scope: !7796, file: !1, line: 6702, type: !807)
!7802 = !DILocation(line: 6702, column: 5, scope: !7796)
!7803 = !DILocation(line: 6706, column: 7, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7796, file: !1, line: 6706, column: 7)
!7805 = !DILocation(line: 6706, column: 13, scope: !7804)
!7806 = !DILocation(line: 6706, column: 19, scope: !7804)
!7807 = !DILocation(line: 6706, column: 7, scope: !7796)
!7808 = !DILocation(line: 6707, column: 60, scope: !7804)
!7809 = !DILocation(line: 6707, column: 66, scope: !7804)
!7810 = !DILocation(line: 6707, column: 12, scope: !7804)
!7811 = !DILocation(line: 6707, column: 5, scope: !7804)
!7812 = !DILocation(line: 6708, column: 7, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7796, file: !1, line: 6708, column: 7)
!7814 = !DILocation(line: 6708, column: 13, scope: !7813)
!7815 = !DILocation(line: 6708, column: 20, scope: !7813)
!7816 = !DILocation(line: 6708, column: 7, scope: !7796)
!7817 = !DILocation(line: 6709, column: 5, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7813, file: !1, line: 6709, column: 5)
!7819 = !DILocation(line: 6710, column: 27, scope: !7796)
!7820 = !DILocation(line: 6710, column: 33, scope: !7796)
!7821 = !DILocation(line: 6710, column: 48, scope: !7796)
!7822 = !DILocation(line: 6710, column: 10, scope: !7796)
!7823 = !DILocation(line: 6710, column: 9, scope: !7796)
!7824 = !DILocation(line: 6711, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7796, file: !1, line: 6711, column: 7)
!7826 = !DILocation(line: 6711, column: 14, scope: !7825)
!7827 = !DILocation(line: 6711, column: 7, scope: !7796)
!7828 = !DILocation(line: 6712, column: 22, scope: !7825)
!7829 = !DILocation(line: 6712, column: 28, scope: !7825)
!7830 = !DILocation(line: 6712, column: 39, scope: !7825)
!7831 = !DILocation(line: 6712, column: 45, scope: !7825)
!7832 = !DILocation(line: 6712, column: 53, scope: !7825)
!7833 = !DILocation(line: 6712, column: 5, scope: !7825)
!7834 = !DILocation(line: 6713, column: 10, scope: !7796)
!7835 = !DILocation(line: 6713, column: 3, scope: !7796)
!7836 = !DILocation(line: 6714, column: 1, scope: !7796)
!7837 = distinct !DISubprogram(name: "MagickLevelImage", scope: !1, file: !1, line: 6758, type: !7838, scopeLine: 6760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{!807, !1143, !1325, !1325, !1325}
!7840 = !DILocalVariable(name: "wand", arg: 1, scope: !7837, file: !1, line: 6758, type: !1143)
!7841 = !DILocation(line: 6758, column: 59, scope: !7837)
!7842 = !DILocalVariable(name: "black_point", arg: 2, scope: !7837, file: !1, line: 6759, type: !1325)
!7843 = !DILocation(line: 6759, column: 16, scope: !7837)
!7844 = !DILocalVariable(name: "gamma", arg: 3, scope: !7837, file: !1, line: 6759, type: !1325)
!7845 = !DILocation(line: 6759, column: 41, scope: !7837)
!7846 = !DILocalVariable(name: "white_point", arg: 4, scope: !7837, file: !1, line: 6759, type: !1325)
!7847 = !DILocation(line: 6759, column: 60, scope: !7837)
!7848 = !DILocalVariable(name: "status", scope: !7837, file: !1, line: 6762, type: !807)
!7849 = !DILocation(line: 6762, column: 5, scope: !7837)
!7850 = !DILocation(line: 6764, column: 34, scope: !7837)
!7851 = !DILocation(line: 6764, column: 55, scope: !7837)
!7852 = !DILocation(line: 6764, column: 67, scope: !7837)
!7853 = !DILocation(line: 6765, column: 5, scope: !7837)
!7854 = !DILocation(line: 6764, column: 10, scope: !7837)
!7855 = !DILocation(line: 6764, column: 9, scope: !7837)
!7856 = !DILocation(line: 6766, column: 10, scope: !7837)
!7857 = !DILocation(line: 6766, column: 3, scope: !7837)
!7858 = distinct !DISubprogram(name: "MagickLevelImageChannel", scope: !1, file: !1, line: 6769, type: !7859, scopeLine: 6772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7859 = !DISubroutineType(types: !7860)
!7860 = !{!807, !1143, !1507, !1325, !1325, !1325}
!7861 = !DILocalVariable(name: "wand", arg: 1, scope: !7858, file: !1, line: 6769, type: !1143)
!7862 = !DILocation(line: 6769, column: 66, scope: !7858)
!7863 = !DILocalVariable(name: "channel", arg: 2, scope: !7858, file: !1, line: 6770, type: !1507)
!7864 = !DILocation(line: 6770, column: 21, scope: !7858)
!7865 = !DILocalVariable(name: "black_point", arg: 3, scope: !7858, file: !1, line: 6770, type: !1325)
!7866 = !DILocation(line: 6770, column: 42, scope: !7858)
!7867 = !DILocalVariable(name: "gamma", arg: 4, scope: !7858, file: !1, line: 6770, type: !1325)
!7868 = !DILocation(line: 6770, column: 67, scope: !7858)
!7869 = !DILocalVariable(name: "white_point", arg: 5, scope: !7858, file: !1, line: 6771, type: !1325)
!7870 = !DILocation(line: 6771, column: 16, scope: !7858)
!7871 = !DILocalVariable(name: "status", scope: !7858, file: !1, line: 6774, type: !807)
!7872 = !DILocation(line: 6774, column: 5, scope: !7858)
!7873 = !DILocation(line: 6778, column: 7, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7858, file: !1, line: 6778, column: 7)
!7875 = !DILocation(line: 6778, column: 13, scope: !7874)
!7876 = !DILocation(line: 6778, column: 19, scope: !7874)
!7877 = !DILocation(line: 6778, column: 7, scope: !7858)
!7878 = !DILocation(line: 6779, column: 60, scope: !7874)
!7879 = !DILocation(line: 6779, column: 66, scope: !7874)
!7880 = !DILocation(line: 6779, column: 12, scope: !7874)
!7881 = !DILocation(line: 6779, column: 5, scope: !7874)
!7882 = !DILocation(line: 6780, column: 7, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7858, file: !1, line: 6780, column: 7)
!7884 = !DILocation(line: 6780, column: 13, scope: !7883)
!7885 = !DILocation(line: 6780, column: 20, scope: !7883)
!7886 = !DILocation(line: 6780, column: 7, scope: !7858)
!7887 = !DILocation(line: 6781, column: 5, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7883, file: !1, line: 6781, column: 5)
!7889 = !DILocation(line: 6782, column: 28, scope: !7858)
!7890 = !DILocation(line: 6782, column: 34, scope: !7858)
!7891 = !DILocation(line: 6782, column: 41, scope: !7858)
!7892 = !DILocation(line: 6782, column: 49, scope: !7858)
!7893 = !DILocation(line: 6782, column: 61, scope: !7858)
!7894 = !DILocation(line: 6782, column: 73, scope: !7858)
!7895 = !DILocation(line: 6782, column: 10, scope: !7858)
!7896 = !DILocation(line: 6782, column: 9, scope: !7858)
!7897 = !DILocation(line: 6783, column: 7, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7858, file: !1, line: 6783, column: 7)
!7899 = !DILocation(line: 6783, column: 14, scope: !7898)
!7900 = !DILocation(line: 6783, column: 7, scope: !7858)
!7901 = !DILocation(line: 6784, column: 22, scope: !7898)
!7902 = !DILocation(line: 6784, column: 28, scope: !7898)
!7903 = !DILocation(line: 6784, column: 39, scope: !7898)
!7904 = !DILocation(line: 6784, column: 45, scope: !7898)
!7905 = !DILocation(line: 6784, column: 53, scope: !7898)
!7906 = !DILocation(line: 6784, column: 5, scope: !7898)
!7907 = !DILocation(line: 6785, column: 10, scope: !7858)
!7908 = !DILocation(line: 6785, column: 3, scope: !7858)
!7909 = !DILocation(line: 6786, column: 1, scope: !7858)
!7910 = distinct !DISubprogram(name: "MagickLinearStretchImage", scope: !1, file: !1, line: 6818, type: !1487, scopeLine: 6820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7911 = !DILocalVariable(name: "wand", arg: 1, scope: !7910, file: !1, line: 6818, type: !1143)
!7912 = !DILocation(line: 6818, column: 67, scope: !7910)
!7913 = !DILocalVariable(name: "black_point", arg: 2, scope: !7910, file: !1, line: 6819, type: !1325)
!7914 = !DILocation(line: 6819, column: 16, scope: !7910)
!7915 = !DILocalVariable(name: "white_point", arg: 3, scope: !7910, file: !1, line: 6819, type: !1325)
!7916 = !DILocation(line: 6819, column: 41, scope: !7910)
!7917 = !DILocalVariable(name: "status", scope: !7910, file: !1, line: 6822, type: !807)
!7918 = !DILocation(line: 6822, column: 5, scope: !7910)
!7919 = !DILocation(line: 6826, column: 7, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7910, file: !1, line: 6826, column: 7)
!7921 = !DILocation(line: 6826, column: 13, scope: !7920)
!7922 = !DILocation(line: 6826, column: 19, scope: !7920)
!7923 = !DILocation(line: 6826, column: 7, scope: !7910)
!7924 = !DILocation(line: 6827, column: 60, scope: !7920)
!7925 = !DILocation(line: 6827, column: 66, scope: !7920)
!7926 = !DILocation(line: 6827, column: 12, scope: !7920)
!7927 = !DILocation(line: 6827, column: 5, scope: !7920)
!7928 = !DILocation(line: 6828, column: 7, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7910, file: !1, line: 6828, column: 7)
!7930 = !DILocation(line: 6828, column: 13, scope: !7929)
!7931 = !DILocation(line: 6828, column: 20, scope: !7929)
!7932 = !DILocation(line: 6828, column: 7, scope: !7910)
!7933 = !DILocation(line: 6829, column: 5, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7929, file: !1, line: 6829, column: 5)
!7935 = !DILocation(line: 6830, column: 29, scope: !7910)
!7936 = !DILocation(line: 6830, column: 35, scope: !7910)
!7937 = !DILocation(line: 6830, column: 42, scope: !7910)
!7938 = !DILocation(line: 6830, column: 54, scope: !7910)
!7939 = !DILocation(line: 6830, column: 10, scope: !7910)
!7940 = !DILocation(line: 6830, column: 9, scope: !7910)
!7941 = !DILocation(line: 6831, column: 7, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7910, file: !1, line: 6831, column: 7)
!7943 = !DILocation(line: 6831, column: 14, scope: !7942)
!7944 = !DILocation(line: 6831, column: 7, scope: !7910)
!7945 = !DILocation(line: 6832, column: 22, scope: !7942)
!7946 = !DILocation(line: 6832, column: 28, scope: !7942)
!7947 = !DILocation(line: 6832, column: 39, scope: !7942)
!7948 = !DILocation(line: 6832, column: 45, scope: !7942)
!7949 = !DILocation(line: 6832, column: 53, scope: !7942)
!7950 = !DILocation(line: 6832, column: 5, scope: !7942)
!7951 = !DILocation(line: 6833, column: 10, scope: !7910)
!7952 = !DILocation(line: 6833, column: 3, scope: !7910)
!7953 = !DILocation(line: 6834, column: 1, scope: !7910)
!7954 = distinct !DISubprogram(name: "MagickLiquidRescaleImage", scope: !1, file: !1, line: 6866, type: !7955, scopeLine: 6869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!7955 = !DISubroutineType(types: !7956)
!7956 = !{!807, !1143, !1214, !1214, !1325, !1325}
!7957 = !DILocalVariable(name: "wand", arg: 1, scope: !7954, file: !1, line: 6866, type: !1143)
!7958 = !DILocation(line: 6866, column: 67, scope: !7954)
!7959 = !DILocalVariable(name: "columns", arg: 2, scope: !7954, file: !1, line: 6867, type: !1214)
!7960 = !DILocation(line: 6867, column: 16, scope: !7954)
!7961 = !DILocalVariable(name: "rows", arg: 3, scope: !7954, file: !1, line: 6867, type: !1214)
!7962 = !DILocation(line: 6867, column: 37, scope: !7954)
!7963 = !DILocalVariable(name: "delta_x", arg: 4, scope: !7954, file: !1, line: 6867, type: !1325)
!7964 = !DILocation(line: 6867, column: 55, scope: !7954)
!7965 = !DILocalVariable(name: "rigidity", arg: 5, scope: !7954, file: !1, line: 6868, type: !1325)
!7966 = !DILocation(line: 6868, column: 16, scope: !7954)
!7967 = !DILocalVariable(name: "rescale_image", scope: !7954, file: !1, line: 6871, type: !791)
!7968 = !DILocation(line: 6871, column: 6, scope: !7954)
!7969 = !DILocation(line: 6875, column: 7, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 6875, column: 7)
!7971 = !DILocation(line: 6875, column: 13, scope: !7970)
!7972 = !DILocation(line: 6875, column: 19, scope: !7970)
!7973 = !DILocation(line: 6875, column: 7, scope: !7954)
!7974 = !DILocation(line: 6876, column: 60, scope: !7970)
!7975 = !DILocation(line: 6876, column: 66, scope: !7970)
!7976 = !DILocation(line: 6876, column: 12, scope: !7970)
!7977 = !DILocation(line: 6876, column: 5, scope: !7970)
!7978 = !DILocation(line: 6877, column: 7, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 6877, column: 7)
!7980 = !DILocation(line: 6877, column: 13, scope: !7979)
!7981 = !DILocation(line: 6877, column: 20, scope: !7979)
!7982 = !DILocation(line: 6877, column: 7, scope: !7954)
!7983 = !DILocation(line: 6878, column: 5, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !1, line: 6878, column: 5)
!7985 = !DILocation(line: 6879, column: 36, scope: !7954)
!7986 = !DILocation(line: 6879, column: 42, scope: !7954)
!7987 = !DILocation(line: 6879, column: 49, scope: !7954)
!7988 = !DILocation(line: 6879, column: 57, scope: !7954)
!7989 = !DILocation(line: 6879, column: 62, scope: !7954)
!7990 = !DILocation(line: 6880, column: 5, scope: !7954)
!7991 = !DILocation(line: 6880, column: 14, scope: !7954)
!7992 = !DILocation(line: 6880, column: 20, scope: !7954)
!7993 = !DILocation(line: 6879, column: 17, scope: !7954)
!7994 = !DILocation(line: 6879, column: 16, scope: !7954)
!7995 = !DILocation(line: 6881, column: 7, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 6881, column: 7)
!7997 = !DILocation(line: 6881, column: 21, scope: !7996)
!7998 = !DILocation(line: 6881, column: 7, scope: !7954)
!7999 = !DILocation(line: 6882, column: 5, scope: !7996)
!8000 = !DILocation(line: 6883, column: 23, scope: !7954)
!8001 = !DILocation(line: 6883, column: 29, scope: !7954)
!8002 = !DILocation(line: 6883, column: 36, scope: !7954)
!8003 = !DILocation(line: 6883, column: 3, scope: !7954)
!8004 = !DILocation(line: 6884, column: 3, scope: !7954)
!8005 = !DILocation(line: 6885, column: 1, scope: !7954)
!8006 = distinct !DISubprogram(name: "MagickMagnifyImage", scope: !1, file: !1, line: 6910, type: !2240, scopeLine: 6911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8007 = !DILocalVariable(name: "wand", arg: 1, scope: !8006, file: !1, line: 6910, type: !1143)
!8008 = !DILocation(line: 6910, column: 61, scope: !8006)
!8009 = !DILocalVariable(name: "magnify_image", scope: !8006, file: !1, line: 6913, type: !791)
!8010 = !DILocation(line: 6913, column: 6, scope: !8006)
!8011 = !DILocation(line: 6917, column: 7, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8006, file: !1, line: 6917, column: 7)
!8013 = !DILocation(line: 6917, column: 13, scope: !8012)
!8014 = !DILocation(line: 6917, column: 19, scope: !8012)
!8015 = !DILocation(line: 6917, column: 7, scope: !8006)
!8016 = !DILocation(line: 6918, column: 60, scope: !8012)
!8017 = !DILocation(line: 6918, column: 66, scope: !8012)
!8018 = !DILocation(line: 6918, column: 12, scope: !8012)
!8019 = !DILocation(line: 6918, column: 5, scope: !8012)
!8020 = !DILocation(line: 6919, column: 7, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8006, file: !1, line: 6919, column: 7)
!8022 = !DILocation(line: 6919, column: 13, scope: !8021)
!8023 = !DILocation(line: 6919, column: 20, scope: !8021)
!8024 = !DILocation(line: 6919, column: 7, scope: !8006)
!8025 = !DILocation(line: 6920, column: 5, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8021, file: !1, line: 6920, column: 5)
!8027 = !DILocation(line: 6921, column: 30, scope: !8006)
!8028 = !DILocation(line: 6921, column: 36, scope: !8006)
!8029 = !DILocation(line: 6921, column: 43, scope: !8006)
!8030 = !DILocation(line: 6921, column: 49, scope: !8006)
!8031 = !DILocation(line: 6921, column: 17, scope: !8006)
!8032 = !DILocation(line: 6921, column: 16, scope: !8006)
!8033 = !DILocation(line: 6922, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8006, file: !1, line: 6922, column: 7)
!8035 = !DILocation(line: 6922, column: 21, scope: !8034)
!8036 = !DILocation(line: 6922, column: 7, scope: !8006)
!8037 = !DILocation(line: 6923, column: 5, scope: !8034)
!8038 = !DILocation(line: 6924, column: 23, scope: !8006)
!8039 = !DILocation(line: 6924, column: 29, scope: !8006)
!8040 = !DILocation(line: 6924, column: 36, scope: !8006)
!8041 = !DILocation(line: 6924, column: 3, scope: !8006)
!8042 = !DILocation(line: 6925, column: 3, scope: !8006)
!8043 = !DILocation(line: 6926, column: 1, scope: !8006)
!8044 = distinct !DISubprogram(name: "MagickMergeImageLayers", scope: !1, file: !1, line: 6971, type: !3278, scopeLine: 6973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8045 = !DILocalVariable(name: "wand", arg: 1, scope: !8044, file: !1, line: 6971, type: !1143)
!8046 = !DILocation(line: 6971, column: 59, scope: !8044)
!8047 = !DILocalVariable(name: "method", arg: 2, scope: !8044, file: !1, line: 6972, type: !3280)
!8048 = !DILocation(line: 6972, column: 26, scope: !8044)
!8049 = !DILocalVariable(name: "mosaic_image", scope: !8044, file: !1, line: 6975, type: !791)
!8050 = !DILocation(line: 6975, column: 6, scope: !8044)
!8051 = !DILocation(line: 6979, column: 7, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8044, file: !1, line: 6979, column: 7)
!8053 = !DILocation(line: 6979, column: 13, scope: !8052)
!8054 = !DILocation(line: 6979, column: 19, scope: !8052)
!8055 = !DILocation(line: 6979, column: 7, scope: !8044)
!8056 = !DILocation(line: 6980, column: 60, scope: !8052)
!8057 = !DILocation(line: 6980, column: 66, scope: !8052)
!8058 = !DILocation(line: 6980, column: 12, scope: !8052)
!8059 = !DILocation(line: 6980, column: 5, scope: !8052)
!8060 = !DILocation(line: 6981, column: 7, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8044, file: !1, line: 6981, column: 7)
!8062 = !DILocation(line: 6981, column: 13, scope: !8061)
!8063 = !DILocation(line: 6981, column: 20, scope: !8061)
!8064 = !DILocation(line: 6981, column: 7, scope: !8044)
!8065 = !DILocation(line: 6982, column: 5, scope: !8061)
!8066 = !DILocation(line: 6983, column: 33, scope: !8044)
!8067 = !DILocation(line: 6983, column: 39, scope: !8044)
!8068 = !DILocation(line: 6983, column: 46, scope: !8044)
!8069 = !DILocation(line: 6983, column: 53, scope: !8044)
!8070 = !DILocation(line: 6983, column: 59, scope: !8044)
!8071 = !DILocation(line: 6983, column: 16, scope: !8044)
!8072 = !DILocation(line: 6983, column: 15, scope: !8044)
!8073 = !DILocation(line: 6984, column: 7, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8044, file: !1, line: 6984, column: 7)
!8075 = !DILocation(line: 6984, column: 20, scope: !8074)
!8076 = !DILocation(line: 6984, column: 7, scope: !8044)
!8077 = !DILocation(line: 6985, column: 5, scope: !8074)
!8078 = !DILocation(line: 6986, column: 36, scope: !8044)
!8079 = !DILocation(line: 6986, column: 41, scope: !8044)
!8080 = !DILocation(line: 6986, column: 10, scope: !8044)
!8081 = !DILocation(line: 6986, column: 3, scope: !8044)
!8082 = !DILocation(line: 6987, column: 1, scope: !8044)
!8083 = distinct !DISubprogram(name: "MagickMinifyImage", scope: !1, file: !1, line: 7012, type: !2240, scopeLine: 7013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8084 = !DILocalVariable(name: "wand", arg: 1, scope: !8083, file: !1, line: 7012, type: !1143)
!8085 = !DILocation(line: 7012, column: 60, scope: !8083)
!8086 = !DILocalVariable(name: "minify_image", scope: !8083, file: !1, line: 7015, type: !791)
!8087 = !DILocation(line: 7015, column: 6, scope: !8083)
!8088 = !DILocation(line: 7019, column: 7, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8083, file: !1, line: 7019, column: 7)
!8090 = !DILocation(line: 7019, column: 13, scope: !8089)
!8091 = !DILocation(line: 7019, column: 19, scope: !8089)
!8092 = !DILocation(line: 7019, column: 7, scope: !8083)
!8093 = !DILocation(line: 7020, column: 60, scope: !8089)
!8094 = !DILocation(line: 7020, column: 66, scope: !8089)
!8095 = !DILocation(line: 7020, column: 12, scope: !8089)
!8096 = !DILocation(line: 7020, column: 5, scope: !8089)
!8097 = !DILocation(line: 7021, column: 7, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8083, file: !1, line: 7021, column: 7)
!8099 = !DILocation(line: 7021, column: 13, scope: !8098)
!8100 = !DILocation(line: 7021, column: 20, scope: !8098)
!8101 = !DILocation(line: 7021, column: 7, scope: !8083)
!8102 = !DILocation(line: 7022, column: 5, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8098, file: !1, line: 7022, column: 5)
!8104 = !DILocation(line: 7023, column: 28, scope: !8083)
!8105 = !DILocation(line: 7023, column: 34, scope: !8083)
!8106 = !DILocation(line: 7023, column: 41, scope: !8083)
!8107 = !DILocation(line: 7023, column: 47, scope: !8083)
!8108 = !DILocation(line: 7023, column: 16, scope: !8083)
!8109 = !DILocation(line: 7023, column: 15, scope: !8083)
!8110 = !DILocation(line: 7024, column: 7, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8083, file: !1, line: 7024, column: 7)
!8112 = !DILocation(line: 7024, column: 20, scope: !8111)
!8113 = !DILocation(line: 7024, column: 7, scope: !8083)
!8114 = !DILocation(line: 7025, column: 5, scope: !8111)
!8115 = !DILocation(line: 7026, column: 23, scope: !8083)
!8116 = !DILocation(line: 7026, column: 29, scope: !8083)
!8117 = !DILocation(line: 7026, column: 36, scope: !8083)
!8118 = !DILocation(line: 7026, column: 3, scope: !8083)
!8119 = !DILocation(line: 7027, column: 3, scope: !8083)
!8120 = !DILocation(line: 7028, column: 1, scope: !8083)
!8121 = distinct !DISubprogram(name: "MagickModulateImage", scope: !1, file: !1, line: 7066, type: !7838, scopeLine: 7068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8122 = !DILocalVariable(name: "wand", arg: 1, scope: !8121, file: !1, line: 7066, type: !1143)
!8123 = !DILocation(line: 7066, column: 62, scope: !8121)
!8124 = !DILocalVariable(name: "brightness", arg: 2, scope: !8121, file: !1, line: 7067, type: !1325)
!8125 = !DILocation(line: 7067, column: 16, scope: !8121)
!8126 = !DILocalVariable(name: "saturation", arg: 3, scope: !8121, file: !1, line: 7067, type: !1325)
!8127 = !DILocation(line: 7067, column: 40, scope: !8121)
!8128 = !DILocalVariable(name: "hue", arg: 4, scope: !8121, file: !1, line: 7067, type: !1325)
!8129 = !DILocation(line: 7067, column: 64, scope: !8121)
!8130 = !DILocalVariable(name: "modulate", scope: !8121, file: !1, line: 7070, type: !944)
!8131 = !DILocation(line: 7070, column: 5, scope: !8121)
!8132 = !DILocalVariable(name: "status", scope: !8121, file: !1, line: 7073, type: !807)
!8133 = !DILocation(line: 7073, column: 5, scope: !8121)
!8134 = !DILocation(line: 7077, column: 7, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8121, file: !1, line: 7077, column: 7)
!8136 = !DILocation(line: 7077, column: 13, scope: !8135)
!8137 = !DILocation(line: 7077, column: 19, scope: !8135)
!8138 = !DILocation(line: 7077, column: 7, scope: !8121)
!8139 = !DILocation(line: 7078, column: 60, scope: !8135)
!8140 = !DILocation(line: 7078, column: 66, scope: !8135)
!8141 = !DILocation(line: 7078, column: 12, scope: !8135)
!8142 = !DILocation(line: 7078, column: 5, scope: !8135)
!8143 = !DILocation(line: 7079, column: 7, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8121, file: !1, line: 7079, column: 7)
!8145 = !DILocation(line: 7079, column: 13, scope: !8144)
!8146 = !DILocation(line: 7079, column: 20, scope: !8144)
!8147 = !DILocation(line: 7079, column: 7, scope: !8121)
!8148 = !DILocation(line: 7080, column: 5, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8144, file: !1, line: 7080, column: 5)
!8150 = !DILocation(line: 7081, column: 29, scope: !8121)
!8151 = !DILocation(line: 7082, column: 5, scope: !8121)
!8152 = !DILocation(line: 7082, column: 16, scope: !8121)
!8153 = !DILocation(line: 7082, column: 27, scope: !8121)
!8154 = !DILocation(line: 7081, column: 10, scope: !8121)
!8155 = !DILocation(line: 7083, column: 24, scope: !8121)
!8156 = !DILocation(line: 7083, column: 30, scope: !8121)
!8157 = !DILocation(line: 7083, column: 37, scope: !8121)
!8158 = !DILocation(line: 7083, column: 10, scope: !8121)
!8159 = !DILocation(line: 7083, column: 9, scope: !8121)
!8160 = !DILocation(line: 7084, column: 7, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8121, file: !1, line: 7084, column: 7)
!8162 = !DILocation(line: 7084, column: 14, scope: !8161)
!8163 = !DILocation(line: 7084, column: 7, scope: !8121)
!8164 = !DILocation(line: 7085, column: 22, scope: !8161)
!8165 = !DILocation(line: 7085, column: 28, scope: !8161)
!8166 = !DILocation(line: 7085, column: 39, scope: !8161)
!8167 = !DILocation(line: 7085, column: 45, scope: !8161)
!8168 = !DILocation(line: 7085, column: 53, scope: !8161)
!8169 = !DILocation(line: 7085, column: 5, scope: !8161)
!8170 = !DILocation(line: 7086, column: 10, scope: !8121)
!8171 = !DILocation(line: 7086, column: 3, scope: !8121)
!8172 = !DILocation(line: 7087, column: 1, scope: !8121)
!8173 = distinct !DISubprogram(name: "MagickMontageImage", scope: !1, file: !1, line: 7129, type: !8174, scopeLine: 7132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{!1143, !1143, !1893, !924, !924, !8176, !924}
!8176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8177)
!8177 = !DIDerivedType(tag: DW_TAG_typedef, name: "MontageMode", file: !717, line: 31, baseType: !716)
!8178 = !DILocalVariable(name: "wand", arg: 1, scope: !8173, file: !1, line: 7129, type: !1143)
!8179 = !DILocation(line: 7129, column: 55, scope: !8173)
!8180 = !DILocalVariable(name: "drawing_wand", arg: 2, scope: !8173, file: !1, line: 7130, type: !1893)
!8181 = !DILocation(line: 7130, column: 22, scope: !8173)
!8182 = !DILocalVariable(name: "tile_geometry", arg: 3, scope: !8173, file: !1, line: 7130, type: !924)
!8183 = !DILocation(line: 7130, column: 47, scope: !8173)
!8184 = !DILocalVariable(name: "thumbnail_geometry", arg: 4, scope: !8173, file: !1, line: 7131, type: !924)
!8185 = !DILocation(line: 7131, column: 15, scope: !8173)
!8186 = !DILocalVariable(name: "mode", arg: 5, scope: !8173, file: !1, line: 7131, type: !8176)
!8187 = !DILocation(line: 7131, column: 52, scope: !8173)
!8188 = !DILocalVariable(name: "frame", arg: 6, scope: !8173, file: !1, line: 7131, type: !924)
!8189 = !DILocation(line: 7131, column: 69, scope: !8173)
!8190 = !DILocalVariable(name: "font", scope: !8173, file: !1, line: 7134, type: !850)
!8191 = !DILocation(line: 7134, column: 6, scope: !8173)
!8192 = !DILocalVariable(name: "montage_image", scope: !8173, file: !1, line: 7137, type: !791)
!8193 = !DILocation(line: 7137, column: 6, scope: !8173)
!8194 = !DILocalVariable(name: "montage_info", scope: !8173, file: !1, line: 7140, type: !1380)
!8195 = !DILocation(line: 7140, column: 6, scope: !8173)
!8196 = !DILocalVariable(name: "pixel_wand", scope: !8173, file: !1, line: 7143, type: !1326)
!8197 = !DILocation(line: 7143, column: 6, scope: !8173)
!8198 = !DILocation(line: 7147, column: 7, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7147, column: 7)
!8200 = !DILocation(line: 7147, column: 13, scope: !8199)
!8201 = !DILocation(line: 7147, column: 19, scope: !8199)
!8202 = !DILocation(line: 7147, column: 7, scope: !8173)
!8203 = !DILocation(line: 7148, column: 60, scope: !8199)
!8204 = !DILocation(line: 7148, column: 66, scope: !8199)
!8205 = !DILocation(line: 7148, column: 12, scope: !8199)
!8206 = !DILocation(line: 7148, column: 5, scope: !8199)
!8207 = !DILocation(line: 7149, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7149, column: 7)
!8209 = !DILocation(line: 7149, column: 13, scope: !8208)
!8210 = !DILocation(line: 7149, column: 20, scope: !8208)
!8211 = !DILocation(line: 7149, column: 7, scope: !8173)
!8212 = !DILocation(line: 7150, column: 5, scope: !8208)
!8213 = !DILocation(line: 7151, column: 33, scope: !8173)
!8214 = !DILocation(line: 7151, column: 39, scope: !8173)
!8215 = !DILocation(line: 7151, column: 16, scope: !8173)
!8216 = !DILocation(line: 7151, column: 15, scope: !8173)
!8217 = !DILocation(line: 7152, column: 11, scope: !8173)
!8218 = !DILocation(line: 7152, column: 3, scope: !8173)
!8219 = !DILocation(line: 7156, column: 27, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !1, line: 7155, column: 5)
!8221 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7153, column: 3)
!8222 = !DILocation(line: 7156, column: 41, scope: !8220)
!8223 = !DILocation(line: 7156, column: 14, scope: !8220)
!8224 = !DILocation(line: 7157, column: 7, scope: !8220)
!8225 = !DILocation(line: 7157, column: 21, scope: !8220)
!8226 = !DILocation(line: 7157, column: 27, scope: !8220)
!8227 = !DILocation(line: 7158, column: 7, scope: !8220)
!8228 = !DILocation(line: 7162, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8221, file: !1, line: 7161, column: 5)
!8230 = !DILocation(line: 7162, column: 21, scope: !8229)
!8231 = !DILocation(line: 7162, column: 26, scope: !8229)
!8232 = !DILocation(line: 7163, column: 7, scope: !8229)
!8233 = !DILocation(line: 7163, column: 21, scope: !8229)
!8234 = !DILocation(line: 7163, column: 27, scope: !8229)
!8235 = !DILocation(line: 7164, column: 7, scope: !8229)
!8236 = !DILocation(line: 7164, column: 21, scope: !8229)
!8237 = !DILocation(line: 7164, column: 33, scope: !8229)
!8238 = !DILocation(line: 7165, column: 7, scope: !8229)
!8239 = !DILocation(line: 7169, column: 7, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8221, file: !1, line: 7168, column: 5)
!8241 = !DILocation(line: 7169, column: 21, scope: !8240)
!8242 = !DILocation(line: 7169, column: 26, scope: !8240)
!8243 = !DILocation(line: 7170, column: 7, scope: !8240)
!8244 = !DILocation(line: 7170, column: 21, scope: !8240)
!8245 = !DILocation(line: 7170, column: 27, scope: !8240)
!8246 = !DILocation(line: 7171, column: 27, scope: !8240)
!8247 = !DILocation(line: 7171, column: 41, scope: !8240)
!8248 = !DILocation(line: 7171, column: 14, scope: !8240)
!8249 = !DILocation(line: 7172, column: 7, scope: !8240)
!8250 = !DILocation(line: 7172, column: 21, scope: !8240)
!8251 = !DILocation(line: 7172, column: 33, scope: !8240)
!8252 = !DILocation(line: 7173, column: 7, scope: !8240)
!8253 = !DILocation(line: 7176, column: 7, scope: !8221)
!8254 = !DILocation(line: 7178, column: 20, scope: !8173)
!8255 = !DILocation(line: 7178, column: 8, scope: !8173)
!8256 = !DILocation(line: 7178, column: 7, scope: !8173)
!8257 = !DILocation(line: 7179, column: 7, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7179, column: 7)
!8259 = !DILocation(line: 7179, column: 12, scope: !8258)
!8260 = !DILocation(line: 7179, column: 7, scope: !8173)
!8261 = !DILocation(line: 7180, column: 25, scope: !8258)
!8262 = !DILocation(line: 7180, column: 39, scope: !8258)
!8263 = !DILocation(line: 7180, column: 44, scope: !8258)
!8264 = !DILocation(line: 7180, column: 12, scope: !8258)
!8265 = !DILocation(line: 7180, column: 5, scope: !8258)
!8266 = !DILocation(line: 7181, column: 7, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7181, column: 7)
!8268 = !DILocation(line: 7181, column: 13, scope: !8267)
!8269 = !DILocation(line: 7181, column: 7, scope: !8173)
!8270 = !DILocation(line: 7182, column: 25, scope: !8267)
!8271 = !DILocation(line: 7182, column: 39, scope: !8267)
!8272 = !DILocation(line: 7182, column: 45, scope: !8267)
!8273 = !DILocation(line: 7182, column: 12, scope: !8267)
!8274 = !DILocation(line: 7182, column: 5, scope: !8267)
!8275 = !DILocation(line: 7183, column: 43, scope: !8173)
!8276 = !DILocation(line: 7183, column: 27, scope: !8173)
!8277 = !DILocation(line: 7183, column: 3, scope: !8173)
!8278 = !DILocation(line: 7183, column: 17, scope: !8173)
!8279 = !DILocation(line: 7183, column: 26, scope: !8173)
!8280 = !DILocation(line: 7184, column: 14, scope: !8173)
!8281 = !DILocation(line: 7184, column: 13, scope: !8173)
!8282 = !DILocation(line: 7185, column: 20, scope: !8173)
!8283 = !DILocation(line: 7185, column: 33, scope: !8173)
!8284 = !DILocation(line: 7185, column: 3, scope: !8173)
!8285 = !DILocation(line: 7186, column: 24, scope: !8173)
!8286 = !DILocation(line: 7186, column: 36, scope: !8173)
!8287 = !DILocation(line: 7186, column: 50, scope: !8173)
!8288 = !DILocation(line: 7186, column: 3, scope: !8173)
!8289 = !DILocation(line: 7187, column: 22, scope: !8173)
!8290 = !DILocation(line: 7187, column: 35, scope: !8173)
!8291 = !DILocation(line: 7187, column: 3, scope: !8173)
!8292 = !DILocation(line: 7188, column: 24, scope: !8173)
!8293 = !DILocation(line: 7188, column: 36, scope: !8173)
!8294 = !DILocation(line: 7188, column: 50, scope: !8173)
!8295 = !DILocation(line: 7188, column: 3, scope: !8173)
!8296 = !DILocation(line: 7189, column: 31, scope: !8173)
!8297 = !DILocation(line: 7189, column: 14, scope: !8173)
!8298 = !DILocation(line: 7189, column: 13, scope: !8173)
!8299 = !DILocation(line: 7190, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7190, column: 7)
!8301 = !DILocation(line: 7190, column: 26, scope: !8300)
!8302 = !DILocation(line: 7190, column: 7, scope: !8173)
!8303 = !DILocation(line: 7191, column: 25, scope: !8300)
!8304 = !DILocation(line: 7191, column: 39, scope: !8300)
!8305 = !DILocation(line: 7191, column: 48, scope: !8300)
!8306 = !DILocation(line: 7191, column: 12, scope: !8300)
!8307 = !DILocation(line: 7191, column: 5, scope: !8300)
!8308 = !DILocation(line: 7192, column: 7, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7192, column: 7)
!8310 = !DILocation(line: 7192, column: 21, scope: !8309)
!8311 = !DILocation(line: 7192, column: 7, scope: !8173)
!8312 = !DILocation(line: 7193, column: 25, scope: !8309)
!8313 = !DILocation(line: 7193, column: 39, scope: !8309)
!8314 = !DILocation(line: 7193, column: 44, scope: !8309)
!8315 = !DILocation(line: 7193, column: 12, scope: !8309)
!8316 = !DILocation(line: 7193, column: 5, scope: !8309)
!8317 = !DILocation(line: 7194, column: 34, scope: !8173)
!8318 = !DILocation(line: 7194, column: 40, scope: !8173)
!8319 = !DILocation(line: 7194, column: 51, scope: !8173)
!8320 = !DILocation(line: 7194, column: 64, scope: !8173)
!8321 = !DILocation(line: 7194, column: 70, scope: !8173)
!8322 = !DILocation(line: 7195, column: 5, scope: !8173)
!8323 = !DILocation(line: 7195, column: 11, scope: !8173)
!8324 = !DILocation(line: 7194, column: 17, scope: !8173)
!8325 = !DILocation(line: 7194, column: 16, scope: !8173)
!8326 = !DILocation(line: 7196, column: 35, scope: !8173)
!8327 = !DILocation(line: 7196, column: 16, scope: !8173)
!8328 = !DILocation(line: 7196, column: 15, scope: !8173)
!8329 = !DILocation(line: 7197, column: 7, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 7197, column: 7)
!8331 = !DILocation(line: 7197, column: 21, scope: !8330)
!8332 = !DILocation(line: 7197, column: 7, scope: !8173)
!8333 = !DILocation(line: 7198, column: 5, scope: !8330)
!8334 = !DILocation(line: 7199, column: 36, scope: !8173)
!8335 = !DILocation(line: 7199, column: 41, scope: !8173)
!8336 = !DILocation(line: 7199, column: 10, scope: !8173)
!8337 = !DILocation(line: 7199, column: 3, scope: !8173)
!8338 = !DILocation(line: 7200, column: 1, scope: !8173)
!8339 = distinct !DISubprogram(name: "MagickMorphImages", scope: !1, file: !1, line: 7229, type: !8340, scopeLine: 7231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!1143, !1143, !1214}
!8342 = !DILocalVariable(name: "wand", arg: 1, scope: !8339, file: !1, line: 7229, type: !1143)
!8343 = !DILocation(line: 7229, column: 54, scope: !8339)
!8344 = !DILocalVariable(name: "number_frames", arg: 2, scope: !8339, file: !1, line: 7230, type: !1214)
!8345 = !DILocation(line: 7230, column: 16, scope: !8339)
!8346 = !DILocalVariable(name: "morph_image", scope: !8339, file: !1, line: 7233, type: !791)
!8347 = !DILocation(line: 7233, column: 6, scope: !8339)
!8348 = !DILocation(line: 7237, column: 7, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8339, file: !1, line: 7237, column: 7)
!8350 = !DILocation(line: 7237, column: 13, scope: !8349)
!8351 = !DILocation(line: 7237, column: 19, scope: !8349)
!8352 = !DILocation(line: 7237, column: 7, scope: !8339)
!8353 = !DILocation(line: 7238, column: 60, scope: !8349)
!8354 = !DILocation(line: 7238, column: 66, scope: !8349)
!8355 = !DILocation(line: 7238, column: 12, scope: !8349)
!8356 = !DILocation(line: 7238, column: 5, scope: !8349)
!8357 = !DILocation(line: 7239, column: 7, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8339, file: !1, line: 7239, column: 7)
!8359 = !DILocation(line: 7239, column: 13, scope: !8358)
!8360 = !DILocation(line: 7239, column: 20, scope: !8358)
!8361 = !DILocation(line: 7239, column: 7, scope: !8339)
!8362 = !DILocation(line: 7240, column: 5, scope: !8358)
!8363 = !DILocation(line: 7241, column: 27, scope: !8339)
!8364 = !DILocation(line: 7241, column: 33, scope: !8339)
!8365 = !DILocation(line: 7241, column: 40, scope: !8339)
!8366 = !DILocation(line: 7241, column: 54, scope: !8339)
!8367 = !DILocation(line: 7241, column: 60, scope: !8339)
!8368 = !DILocation(line: 7241, column: 15, scope: !8339)
!8369 = !DILocation(line: 7241, column: 14, scope: !8339)
!8370 = !DILocation(line: 7242, column: 7, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8339, file: !1, line: 7242, column: 7)
!8372 = !DILocation(line: 7242, column: 19, scope: !8371)
!8373 = !DILocation(line: 7242, column: 7, scope: !8339)
!8374 = !DILocation(line: 7243, column: 5, scope: !8371)
!8375 = !DILocation(line: 7244, column: 36, scope: !8339)
!8376 = !DILocation(line: 7244, column: 41, scope: !8339)
!8377 = !DILocation(line: 7244, column: 10, scope: !8339)
!8378 = !DILocation(line: 7244, column: 3, scope: !8339)
!8379 = !DILocation(line: 7245, column: 1, scope: !8339)
!8380 = distinct !DISubprogram(name: "MagickMorphologyImage", scope: !1, file: !1, line: 7285, type: !8381, scopeLine: 7287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8381 = !DISubroutineType(types: !8382)
!8382 = !{!807, !1143, !8383, !1666, !8384}
!8383 = !DIDerivedType(tag: DW_TAG_typedef, name: "MorphologyMethod", file: !566, line: 100, baseType: !723)
!8384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!8385 = !DILocalVariable(name: "wand", arg: 1, scope: !8380, file: !1, line: 7285, type: !1143)
!8386 = !DILocation(line: 7285, column: 64, scope: !8380)
!8387 = !DILocalVariable(name: "method", arg: 2, scope: !8380, file: !1, line: 7286, type: !8383)
!8388 = !DILocation(line: 7286, column: 20, scope: !8380)
!8389 = !DILocalVariable(name: "iterations", arg: 3, scope: !8380, file: !1, line: 7286, type: !1666)
!8390 = !DILocation(line: 7286, column: 41, scope: !8380)
!8391 = !DILocalVariable(name: "kernel", arg: 4, scope: !8380, file: !1, line: 7286, type: !8384)
!8392 = !DILocation(line: 7286, column: 64, scope: !8380)
!8393 = !DILocalVariable(name: "status", scope: !8380, file: !1, line: 7289, type: !807)
!8394 = !DILocation(line: 7289, column: 5, scope: !8380)
!8395 = !DILocation(line: 7291, column: 39, scope: !8380)
!8396 = !DILocation(line: 7291, column: 60, scope: !8380)
!8397 = !DILocation(line: 7291, column: 67, scope: !8380)
!8398 = !DILocation(line: 7292, column: 5, scope: !8380)
!8399 = !DILocation(line: 7291, column: 10, scope: !8380)
!8400 = !DILocation(line: 7291, column: 9, scope: !8380)
!8401 = !DILocation(line: 7293, column: 10, scope: !8380)
!8402 = !DILocation(line: 7293, column: 3, scope: !8380)
!8403 = distinct !DISubprogram(name: "MagickMorphologyImageChannel", scope: !1, file: !1, line: 7296, type: !8404, scopeLine: 7299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8404 = !DISubroutineType(types: !8405)
!8405 = !{!807, !1143, !1507, !8383, !1666, !8384}
!8406 = !DILocalVariable(name: "wand", arg: 1, scope: !8403, file: !1, line: 7296, type: !1143)
!8407 = !DILocation(line: 7296, column: 71, scope: !8403)
!8408 = !DILocalVariable(name: "channel", arg: 2, scope: !8403, file: !1, line: 7297, type: !1507)
!8409 = !DILocation(line: 7297, column: 21, scope: !8403)
!8410 = !DILocalVariable(name: "method", arg: 3, scope: !8403, file: !1, line: 7297, type: !8383)
!8411 = !DILocation(line: 7297, column: 46, scope: !8403)
!8412 = !DILocalVariable(name: "iterations", arg: 4, scope: !8403, file: !1, line: 7297, type: !1666)
!8413 = !DILocation(line: 7297, column: 67, scope: !8403)
!8414 = !DILocalVariable(name: "kernel", arg: 5, scope: !8403, file: !1, line: 7298, type: !8384)
!8415 = !DILocation(line: 7298, column: 15, scope: !8403)
!8416 = !DILocalVariable(name: "morphology_image", scope: !8403, file: !1, line: 7301, type: !791)
!8417 = !DILocation(line: 7301, column: 6, scope: !8403)
!8418 = !DILocation(line: 7305, column: 7, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8403, file: !1, line: 7305, column: 7)
!8420 = !DILocation(line: 7305, column: 13, scope: !8419)
!8421 = !DILocation(line: 7305, column: 19, scope: !8419)
!8422 = !DILocation(line: 7305, column: 7, scope: !8403)
!8423 = !DILocation(line: 7306, column: 60, scope: !8419)
!8424 = !DILocation(line: 7306, column: 66, scope: !8419)
!8425 = !DILocation(line: 7306, column: 12, scope: !8419)
!8426 = !DILocation(line: 7306, column: 5, scope: !8419)
!8427 = !DILocation(line: 7307, column: 7, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8403, file: !1, line: 7307, column: 7)
!8429 = !DILocation(line: 7307, column: 14, scope: !8428)
!8430 = !DILocation(line: 7307, column: 7, scope: !8403)
!8431 = !DILocation(line: 7308, column: 5, scope: !8428)
!8432 = !DILocation(line: 7309, column: 7, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8403, file: !1, line: 7309, column: 7)
!8434 = !DILocation(line: 7309, column: 13, scope: !8433)
!8435 = !DILocation(line: 7309, column: 20, scope: !8433)
!8436 = !DILocation(line: 7309, column: 7, scope: !8403)
!8437 = !DILocation(line: 7310, column: 5, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8433, file: !1, line: 7310, column: 5)
!8439 = !DILocation(line: 7311, column: 43, scope: !8403)
!8440 = !DILocation(line: 7311, column: 49, scope: !8403)
!8441 = !DILocation(line: 7311, column: 56, scope: !8403)
!8442 = !DILocation(line: 7311, column: 64, scope: !8403)
!8443 = !DILocation(line: 7312, column: 5, scope: !8403)
!8444 = !DILocation(line: 7312, column: 16, scope: !8403)
!8445 = !DILocation(line: 7312, column: 23, scope: !8403)
!8446 = !DILocation(line: 7312, column: 29, scope: !8403)
!8447 = !DILocation(line: 7311, column: 20, scope: !8403)
!8448 = !DILocation(line: 7311, column: 19, scope: !8403)
!8449 = !DILocation(line: 7313, column: 7, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8403, file: !1, line: 7313, column: 7)
!8451 = !DILocation(line: 7313, column: 24, scope: !8450)
!8452 = !DILocation(line: 7313, column: 7, scope: !8403)
!8453 = !DILocation(line: 7314, column: 5, scope: !8450)
!8454 = !DILocation(line: 7315, column: 23, scope: !8403)
!8455 = !DILocation(line: 7315, column: 29, scope: !8403)
!8456 = !DILocation(line: 7315, column: 36, scope: !8403)
!8457 = !DILocation(line: 7315, column: 3, scope: !8403)
!8458 = !DILocation(line: 7316, column: 3, scope: !8403)
!8459 = !DILocation(line: 7317, column: 1, scope: !8403)
!8460 = distinct !DISubprogram(name: "MagickMotionBlurImage", scope: !1, file: !1, line: 7359, type: !7838, scopeLine: 7361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8461 = !DILocalVariable(name: "wand", arg: 1, scope: !8460, file: !1, line: 7359, type: !1143)
!8462 = !DILocation(line: 7359, column: 64, scope: !8460)
!8463 = !DILocalVariable(name: "radius", arg: 2, scope: !8460, file: !1, line: 7360, type: !1325)
!8464 = !DILocation(line: 7360, column: 16, scope: !8460)
!8465 = !DILocalVariable(name: "sigma", arg: 3, scope: !8460, file: !1, line: 7360, type: !1325)
!8466 = !DILocation(line: 7360, column: 36, scope: !8460)
!8467 = !DILocalVariable(name: "angle", arg: 4, scope: !8460, file: !1, line: 7360, type: !1325)
!8468 = !DILocation(line: 7360, column: 55, scope: !8460)
!8469 = !DILocalVariable(name: "status", scope: !8460, file: !1, line: 7363, type: !807)
!8470 = !DILocation(line: 7363, column: 5, scope: !8460)
!8471 = !DILocation(line: 7365, column: 39, scope: !8460)
!8472 = !DILocation(line: 7365, column: 60, scope: !8460)
!8473 = !DILocation(line: 7365, column: 67, scope: !8460)
!8474 = !DILocation(line: 7365, column: 73, scope: !8460)
!8475 = !DILocation(line: 7365, column: 10, scope: !8460)
!8476 = !DILocation(line: 7365, column: 9, scope: !8460)
!8477 = !DILocation(line: 7366, column: 10, scope: !8460)
!8478 = !DILocation(line: 7366, column: 3, scope: !8460)
!8479 = distinct !DISubprogram(name: "MagickMotionBlurImageChannel", scope: !1, file: !1, line: 7369, type: !7859, scopeLine: 7372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8480 = !DILocalVariable(name: "wand", arg: 1, scope: !8479, file: !1, line: 7369, type: !1143)
!8481 = !DILocation(line: 7369, column: 71, scope: !8479)
!8482 = !DILocalVariable(name: "channel", arg: 2, scope: !8479, file: !1, line: 7370, type: !1507)
!8483 = !DILocation(line: 7370, column: 21, scope: !8479)
!8484 = !DILocalVariable(name: "radius", arg: 3, scope: !8479, file: !1, line: 7370, type: !1325)
!8485 = !DILocation(line: 7370, column: 42, scope: !8479)
!8486 = !DILocalVariable(name: "sigma", arg: 4, scope: !8479, file: !1, line: 7370, type: !1325)
!8487 = !DILocation(line: 7370, column: 62, scope: !8479)
!8488 = !DILocalVariable(name: "angle", arg: 5, scope: !8479, file: !1, line: 7371, type: !1325)
!8489 = !DILocation(line: 7371, column: 16, scope: !8479)
!8490 = !DILocalVariable(name: "blur_image", scope: !8479, file: !1, line: 7374, type: !791)
!8491 = !DILocation(line: 7374, column: 6, scope: !8479)
!8492 = !DILocation(line: 7378, column: 7, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8479, file: !1, line: 7378, column: 7)
!8494 = !DILocation(line: 7378, column: 13, scope: !8493)
!8495 = !DILocation(line: 7378, column: 19, scope: !8493)
!8496 = !DILocation(line: 7378, column: 7, scope: !8479)
!8497 = !DILocation(line: 7379, column: 60, scope: !8493)
!8498 = !DILocation(line: 7379, column: 66, scope: !8493)
!8499 = !DILocation(line: 7379, column: 12, scope: !8493)
!8500 = !DILocation(line: 7379, column: 5, scope: !8493)
!8501 = !DILocation(line: 7380, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8479, file: !1, line: 7380, column: 7)
!8503 = !DILocation(line: 7380, column: 13, scope: !8502)
!8504 = !DILocation(line: 7380, column: 20, scope: !8502)
!8505 = !DILocation(line: 7380, column: 7, scope: !8479)
!8506 = !DILocation(line: 7381, column: 5, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8502, file: !1, line: 7381, column: 5)
!8508 = !DILocation(line: 7382, column: 37, scope: !8479)
!8509 = !DILocation(line: 7382, column: 43, scope: !8479)
!8510 = !DILocation(line: 7382, column: 50, scope: !8479)
!8511 = !DILocation(line: 7382, column: 58, scope: !8479)
!8512 = !DILocation(line: 7382, column: 65, scope: !8479)
!8513 = !DILocation(line: 7382, column: 71, scope: !8479)
!8514 = !DILocation(line: 7383, column: 5, scope: !8479)
!8515 = !DILocation(line: 7383, column: 11, scope: !8479)
!8516 = !DILocation(line: 7382, column: 14, scope: !8479)
!8517 = !DILocation(line: 7382, column: 13, scope: !8479)
!8518 = !DILocation(line: 7384, column: 7, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8479, file: !1, line: 7384, column: 7)
!8520 = !DILocation(line: 7384, column: 18, scope: !8519)
!8521 = !DILocation(line: 7384, column: 7, scope: !8479)
!8522 = !DILocation(line: 7385, column: 5, scope: !8519)
!8523 = !DILocation(line: 7386, column: 23, scope: !8479)
!8524 = !DILocation(line: 7386, column: 29, scope: !8479)
!8525 = !DILocation(line: 7386, column: 36, scope: !8479)
!8526 = !DILocation(line: 7386, column: 3, scope: !8479)
!8527 = !DILocation(line: 7387, column: 3, scope: !8479)
!8528 = !DILocation(line: 7388, column: 1, scope: !8479)
!8529 = distinct !DISubprogram(name: "MagickNegateImage", scope: !1, file: !1, line: 7425, type: !3513, scopeLine: 7427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8530 = !DILocalVariable(name: "wand", arg: 1, scope: !8529, file: !1, line: 7425, type: !1143)
!8531 = !DILocation(line: 7425, column: 60, scope: !8529)
!8532 = !DILocalVariable(name: "gray", arg: 2, scope: !8529, file: !1, line: 7426, type: !2117)
!8533 = !DILocation(line: 7426, column: 27, scope: !8529)
!8534 = !DILocalVariable(name: "status", scope: !8529, file: !1, line: 7429, type: !807)
!8535 = !DILocation(line: 7429, column: 5, scope: !8529)
!8536 = !DILocation(line: 7431, column: 35, scope: !8529)
!8537 = !DILocation(line: 7431, column: 56, scope: !8529)
!8538 = !DILocation(line: 7431, column: 10, scope: !8529)
!8539 = !DILocation(line: 7431, column: 9, scope: !8529)
!8540 = !DILocation(line: 7432, column: 10, scope: !8529)
!8541 = !DILocation(line: 7432, column: 3, scope: !8529)
!8542 = distinct !DISubprogram(name: "MagickNegateImageChannel", scope: !1, file: !1, line: 7435, type: !8543, scopeLine: 7437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!807, !1143, !1507, !2117}
!8545 = !DILocalVariable(name: "wand", arg: 1, scope: !8542, file: !1, line: 7435, type: !1143)
!8546 = !DILocation(line: 7435, column: 67, scope: !8542)
!8547 = !DILocalVariable(name: "channel", arg: 2, scope: !8542, file: !1, line: 7436, type: !1507)
!8548 = !DILocation(line: 7436, column: 21, scope: !8542)
!8549 = !DILocalVariable(name: "gray", arg: 3, scope: !8542, file: !1, line: 7436, type: !2117)
!8550 = !DILocation(line: 7436, column: 53, scope: !8542)
!8551 = !DILocalVariable(name: "status", scope: !8542, file: !1, line: 7439, type: !807)
!8552 = !DILocation(line: 7439, column: 5, scope: !8542)
!8553 = !DILocation(line: 7443, column: 7, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8542, file: !1, line: 7443, column: 7)
!8555 = !DILocation(line: 7443, column: 13, scope: !8554)
!8556 = !DILocation(line: 7443, column: 19, scope: !8554)
!8557 = !DILocation(line: 7443, column: 7, scope: !8542)
!8558 = !DILocation(line: 7444, column: 60, scope: !8554)
!8559 = !DILocation(line: 7444, column: 66, scope: !8554)
!8560 = !DILocation(line: 7444, column: 12, scope: !8554)
!8561 = !DILocation(line: 7444, column: 5, scope: !8554)
!8562 = !DILocation(line: 7445, column: 7, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8542, file: !1, line: 7445, column: 7)
!8564 = !DILocation(line: 7445, column: 13, scope: !8563)
!8565 = !DILocation(line: 7445, column: 20, scope: !8563)
!8566 = !DILocation(line: 7445, column: 7, scope: !8542)
!8567 = !DILocation(line: 7446, column: 5, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8563, file: !1, line: 7446, column: 5)
!8569 = !DILocation(line: 7447, column: 29, scope: !8542)
!8570 = !DILocation(line: 7447, column: 35, scope: !8542)
!8571 = !DILocation(line: 7447, column: 42, scope: !8542)
!8572 = !DILocation(line: 7447, column: 50, scope: !8542)
!8573 = !DILocation(line: 7447, column: 10, scope: !8542)
!8574 = !DILocation(line: 7447, column: 9, scope: !8542)
!8575 = !DILocation(line: 7448, column: 7, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8542, file: !1, line: 7448, column: 7)
!8577 = !DILocation(line: 7448, column: 14, scope: !8576)
!8578 = !DILocation(line: 7448, column: 7, scope: !8542)
!8579 = !DILocation(line: 7449, column: 22, scope: !8576)
!8580 = !DILocation(line: 7449, column: 28, scope: !8576)
!8581 = !DILocation(line: 7449, column: 39, scope: !8576)
!8582 = !DILocation(line: 7449, column: 45, scope: !8576)
!8583 = !DILocation(line: 7449, column: 53, scope: !8576)
!8584 = !DILocation(line: 7449, column: 5, scope: !8576)
!8585 = !DILocation(line: 7450, column: 10, scope: !8542)
!8586 = !DILocation(line: 7450, column: 3, scope: !8542)
!8587 = !DILocation(line: 7451, column: 1, scope: !8542)
!8588 = distinct !DISubprogram(name: "MagickNewImage", scope: !1, file: !1, line: 7484, type: !8589, scopeLine: 7486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8589 = !DISubroutineType(types: !8590)
!8590 = !{!807, !1143, !1214, !1214, !2348}
!8591 = !DILocalVariable(name: "wand", arg: 1, scope: !8588, file: !1, line: 7484, type: !1143)
!8592 = !DILocation(line: 7484, column: 57, scope: !8588)
!8593 = !DILocalVariable(name: "width", arg: 2, scope: !8588, file: !1, line: 7484, type: !1214)
!8594 = !DILocation(line: 7484, column: 75, scope: !8588)
!8595 = !DILocalVariable(name: "height", arg: 3, scope: !8588, file: !1, line: 7485, type: !1214)
!8596 = !DILocation(line: 7485, column: 16, scope: !8588)
!8597 = !DILocalVariable(name: "background", arg: 4, scope: !8588, file: !1, line: 7485, type: !2348)
!8598 = !DILocation(line: 7485, column: 40, scope: !8588)
!8599 = !DILocalVariable(name: "images", scope: !8588, file: !1, line: 7488, type: !791)
!8600 = !DILocation(line: 7488, column: 6, scope: !8588)
!8601 = !DILocalVariable(name: "pixel", scope: !8588, file: !1, line: 7491, type: !1054)
!8602 = !DILocation(line: 7491, column: 5, scope: !8588)
!8603 = !DILocation(line: 7495, column: 7, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8588, file: !1, line: 7495, column: 7)
!8605 = !DILocation(line: 7495, column: 13, scope: !8604)
!8606 = !DILocation(line: 7495, column: 19, scope: !8604)
!8607 = !DILocation(line: 7495, column: 7, scope: !8588)
!8608 = !DILocation(line: 7496, column: 60, scope: !8604)
!8609 = !DILocation(line: 7496, column: 66, scope: !8604)
!8610 = !DILocation(line: 7496, column: 12, scope: !8604)
!8611 = !DILocation(line: 7496, column: 5, scope: !8604)
!8612 = !DILocation(line: 7497, column: 23, scope: !8588)
!8613 = !DILocation(line: 7497, column: 3, scope: !8588)
!8614 = !DILocation(line: 7498, column: 25, scope: !8588)
!8615 = !DILocation(line: 7498, column: 31, scope: !8588)
!8616 = !DILocation(line: 7498, column: 42, scope: !8588)
!8617 = !DILocation(line: 7498, column: 48, scope: !8588)
!8618 = !DILocation(line: 7498, column: 10, scope: !8588)
!8619 = !DILocation(line: 7498, column: 9, scope: !8588)
!8620 = !DILocation(line: 7499, column: 7, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8588, file: !1, line: 7499, column: 7)
!8622 = !DILocation(line: 7499, column: 14, scope: !8621)
!8623 = !DILocation(line: 7499, column: 7, scope: !8588)
!8624 = !DILocation(line: 7500, column: 5, scope: !8621)
!8625 = !DILocation(line: 7501, column: 7, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8588, file: !1, line: 7501, column: 7)
!8627 = !DILocation(line: 7501, column: 15, scope: !8626)
!8628 = !DILocation(line: 7501, column: 25, scope: !8626)
!8629 = !DILocation(line: 7501, column: 34, scope: !8626)
!8630 = !DILocation(line: 7501, column: 7, scope: !8588)
!8631 = !DILocation(line: 7502, column: 22, scope: !8626)
!8632 = !DILocation(line: 7502, column: 28, scope: !8626)
!8633 = !DILocation(line: 7502, column: 39, scope: !8626)
!8634 = !DILocation(line: 7502, column: 47, scope: !8626)
!8635 = !DILocation(line: 7502, column: 5, scope: !8626)
!8636 = !DILocation(line: 7503, column: 28, scope: !8588)
!8637 = !DILocation(line: 7503, column: 33, scope: !8588)
!8638 = !DILocation(line: 7503, column: 10, scope: !8588)
!8639 = !DILocation(line: 7503, column: 3, scope: !8588)
!8640 = !DILocation(line: 7504, column: 1, scope: !8588)
!8641 = distinct !DISubprogram(name: "MagickNextImage", scope: !1, file: !1, line: 7541, type: !2240, scopeLine: 7542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8642 = !DILocalVariable(name: "wand", arg: 1, scope: !8641, file: !1, line: 7541, type: !1143)
!8643 = !DILocation(line: 7541, column: 58, scope: !8641)
!8644 = !DILocation(line: 7545, column: 7, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8641, file: !1, line: 7545, column: 7)
!8646 = !DILocation(line: 7545, column: 13, scope: !8645)
!8647 = !DILocation(line: 7545, column: 19, scope: !8645)
!8648 = !DILocation(line: 7545, column: 7, scope: !8641)
!8649 = !DILocation(line: 7546, column: 60, scope: !8645)
!8650 = !DILocation(line: 7546, column: 66, scope: !8645)
!8651 = !DILocation(line: 7546, column: 12, scope: !8645)
!8652 = !DILocation(line: 7546, column: 5, scope: !8645)
!8653 = !DILocation(line: 7547, column: 7, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8641, file: !1, line: 7547, column: 7)
!8655 = !DILocation(line: 7547, column: 13, scope: !8654)
!8656 = !DILocation(line: 7547, column: 20, scope: !8654)
!8657 = !DILocation(line: 7547, column: 7, scope: !8641)
!8658 = !DILocation(line: 7548, column: 5, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8654, file: !1, line: 7548, column: 5)
!8660 = !DILocation(line: 7549, column: 3, scope: !8641)
!8661 = !DILocation(line: 7549, column: 9, scope: !8641)
!8662 = !DILocation(line: 7549, column: 22, scope: !8641)
!8663 = !DILocation(line: 7550, column: 7, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8641, file: !1, line: 7550, column: 7)
!8665 = !DILocation(line: 7550, column: 13, scope: !8664)
!8666 = !DILocation(line: 7550, column: 27, scope: !8664)
!8667 = !DILocation(line: 7550, column: 7, scope: !8641)
!8668 = !DILocation(line: 7552, column: 7, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8664, file: !1, line: 7551, column: 5)
!8670 = !DILocation(line: 7552, column: 13, scope: !8669)
!8671 = !DILocation(line: 7552, column: 26, scope: !8669)
!8672 = !DILocation(line: 7553, column: 7, scope: !8669)
!8673 = !DILocation(line: 7555, column: 26, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8641, file: !1, line: 7555, column: 7)
!8675 = !DILocation(line: 7555, column: 32, scope: !8674)
!8676 = !DILocation(line: 7555, column: 7, scope: !8674)
!8677 = !DILocation(line: 7555, column: 40, scope: !8674)
!8678 = !DILocation(line: 7555, column: 7, scope: !8641)
!8679 = !DILocation(line: 7557, column: 7, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8674, file: !1, line: 7556, column: 5)
!8681 = !DILocation(line: 7557, column: 13, scope: !8680)
!8682 = !DILocation(line: 7557, column: 26, scope: !8680)
!8683 = !DILocation(line: 7558, column: 7, scope: !8680)
!8684 = !DILocation(line: 7560, column: 35, scope: !8641)
!8685 = !DILocation(line: 7560, column: 41, scope: !8641)
!8686 = !DILocation(line: 7560, column: 16, scope: !8641)
!8687 = !DILocation(line: 7560, column: 3, scope: !8641)
!8688 = !DILocation(line: 7560, column: 9, scope: !8641)
!8689 = !DILocation(line: 7560, column: 15, scope: !8641)
!8690 = !DILocation(line: 7561, column: 3, scope: !8641)
!8691 = !DILocation(line: 7562, column: 1, scope: !8641)
!8692 = distinct !DISubprogram(name: "MagickNormalizeImage", scope: !1, file: !1, line: 7595, type: !2240, scopeLine: 7596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8693 = !DILocalVariable(name: "wand", arg: 1, scope: !8692, file: !1, line: 7595, type: !1143)
!8694 = !DILocation(line: 7595, column: 63, scope: !8692)
!8695 = !DILocalVariable(name: "status", scope: !8692, file: !1, line: 7598, type: !807)
!8696 = !DILocation(line: 7598, column: 5, scope: !8692)
!8697 = !DILocation(line: 7600, column: 38, scope: !8692)
!8698 = !DILocation(line: 7600, column: 10, scope: !8692)
!8699 = !DILocation(line: 7600, column: 9, scope: !8692)
!8700 = !DILocation(line: 7601, column: 10, scope: !8692)
!8701 = !DILocation(line: 7601, column: 3, scope: !8692)
!8702 = distinct !DISubprogram(name: "MagickNormalizeImageChannel", scope: !1, file: !1, line: 7604, type: !2252, scopeLine: 7606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8703 = !DILocalVariable(name: "wand", arg: 1, scope: !8702, file: !1, line: 7604, type: !1143)
!8704 = !DILocation(line: 7604, column: 70, scope: !8702)
!8705 = !DILocalVariable(name: "channel", arg: 2, scope: !8702, file: !1, line: 7605, type: !1507)
!8706 = !DILocation(line: 7605, column: 21, scope: !8702)
!8707 = !DILocalVariable(name: "status", scope: !8702, file: !1, line: 7608, type: !807)
!8708 = !DILocation(line: 7608, column: 5, scope: !8702)
!8709 = !DILocation(line: 7612, column: 7, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8702, file: !1, line: 7612, column: 7)
!8711 = !DILocation(line: 7612, column: 13, scope: !8710)
!8712 = !DILocation(line: 7612, column: 19, scope: !8710)
!8713 = !DILocation(line: 7612, column: 7, scope: !8702)
!8714 = !DILocation(line: 7613, column: 60, scope: !8710)
!8715 = !DILocation(line: 7613, column: 66, scope: !8710)
!8716 = !DILocation(line: 7613, column: 12, scope: !8710)
!8717 = !DILocation(line: 7613, column: 5, scope: !8710)
!8718 = !DILocation(line: 7614, column: 7, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8702, file: !1, line: 7614, column: 7)
!8720 = !DILocation(line: 7614, column: 13, scope: !8719)
!8721 = !DILocation(line: 7614, column: 20, scope: !8719)
!8722 = !DILocation(line: 7614, column: 7, scope: !8702)
!8723 = !DILocation(line: 7615, column: 5, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8719, file: !1, line: 7615, column: 5)
!8725 = !DILocation(line: 7616, column: 32, scope: !8702)
!8726 = !DILocation(line: 7616, column: 38, scope: !8702)
!8727 = !DILocation(line: 7616, column: 45, scope: !8702)
!8728 = !DILocation(line: 7616, column: 10, scope: !8702)
!8729 = !DILocation(line: 7616, column: 9, scope: !8702)
!8730 = !DILocation(line: 7617, column: 7, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8702, file: !1, line: 7617, column: 7)
!8732 = !DILocation(line: 7617, column: 14, scope: !8731)
!8733 = !DILocation(line: 7617, column: 7, scope: !8702)
!8734 = !DILocation(line: 7618, column: 22, scope: !8731)
!8735 = !DILocation(line: 7618, column: 28, scope: !8731)
!8736 = !DILocation(line: 7618, column: 39, scope: !8731)
!8737 = !DILocation(line: 7618, column: 45, scope: !8731)
!8738 = !DILocation(line: 7618, column: 53, scope: !8731)
!8739 = !DILocation(line: 7618, column: 5, scope: !8731)
!8740 = !DILocation(line: 7619, column: 10, scope: !8702)
!8741 = !DILocation(line: 7619, column: 3, scope: !8702)
!8742 = !DILocation(line: 7620, column: 1, scope: !8702)
!8743 = distinct !DISubprogram(name: "MagickOilPaintImage", scope: !1, file: !1, line: 7649, type: !2403, scopeLine: 7651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8744 = !DILocalVariable(name: "wand", arg: 1, scope: !8743, file: !1, line: 7649, type: !1143)
!8745 = !DILocation(line: 7649, column: 62, scope: !8743)
!8746 = !DILocalVariable(name: "radius", arg: 2, scope: !8743, file: !1, line: 7650, type: !1325)
!8747 = !DILocation(line: 7650, column: 16, scope: !8743)
!8748 = !DILocalVariable(name: "paint_image", scope: !8743, file: !1, line: 7653, type: !791)
!8749 = !DILocation(line: 7653, column: 6, scope: !8743)
!8750 = !DILocation(line: 7657, column: 7, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8743, file: !1, line: 7657, column: 7)
!8752 = !DILocation(line: 7657, column: 13, scope: !8751)
!8753 = !DILocation(line: 7657, column: 19, scope: !8751)
!8754 = !DILocation(line: 7657, column: 7, scope: !8743)
!8755 = !DILocation(line: 7658, column: 60, scope: !8751)
!8756 = !DILocation(line: 7658, column: 66, scope: !8751)
!8757 = !DILocation(line: 7658, column: 12, scope: !8751)
!8758 = !DILocation(line: 7658, column: 5, scope: !8751)
!8759 = !DILocation(line: 7659, column: 7, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8743, file: !1, line: 7659, column: 7)
!8761 = !DILocation(line: 7659, column: 13, scope: !8760)
!8762 = !DILocation(line: 7659, column: 20, scope: !8760)
!8763 = !DILocation(line: 7659, column: 7, scope: !8743)
!8764 = !DILocation(line: 7660, column: 5, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8760, file: !1, line: 7660, column: 5)
!8766 = !DILocation(line: 7661, column: 29, scope: !8743)
!8767 = !DILocation(line: 7661, column: 35, scope: !8743)
!8768 = !DILocation(line: 7661, column: 42, scope: !8743)
!8769 = !DILocation(line: 7661, column: 49, scope: !8743)
!8770 = !DILocation(line: 7661, column: 55, scope: !8743)
!8771 = !DILocation(line: 7661, column: 15, scope: !8743)
!8772 = !DILocation(line: 7661, column: 14, scope: !8743)
!8773 = !DILocation(line: 7662, column: 7, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8743, file: !1, line: 7662, column: 7)
!8775 = !DILocation(line: 7662, column: 19, scope: !8774)
!8776 = !DILocation(line: 7662, column: 7, scope: !8743)
!8777 = !DILocation(line: 7663, column: 5, scope: !8774)
!8778 = !DILocation(line: 7664, column: 23, scope: !8743)
!8779 = !DILocation(line: 7664, column: 29, scope: !8743)
!8780 = !DILocation(line: 7664, column: 36, scope: !8743)
!8781 = !DILocation(line: 7664, column: 3, scope: !8743)
!8782 = !DILocation(line: 7665, column: 3, scope: !8743)
!8783 = !DILocation(line: 7666, column: 1, scope: !8743)
!8784 = distinct !DISubprogram(name: "MagickOpaquePaintImage", scope: !1, file: !1, line: 7712, type: !8785, scopeLine: 7715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!807, !1143, !2348, !2348, !1325, !2117}
!8787 = !DILocalVariable(name: "wand", arg: 1, scope: !8784, file: !1, line: 7712, type: !1143)
!8788 = !DILocation(line: 7712, column: 65, scope: !8784)
!8789 = !DILocalVariable(name: "target", arg: 2, scope: !8784, file: !1, line: 7713, type: !2348)
!8790 = !DILocation(line: 7713, column: 20, scope: !8784)
!8791 = !DILocalVariable(name: "fill", arg: 3, scope: !8784, file: !1, line: 7713, type: !2348)
!8792 = !DILocation(line: 7713, column: 44, scope: !8784)
!8793 = !DILocalVariable(name: "fuzz", arg: 4, scope: !8784, file: !1, line: 7713, type: !1325)
!8794 = !DILocation(line: 7713, column: 62, scope: !8784)
!8795 = !DILocalVariable(name: "invert", arg: 5, scope: !8784, file: !1, line: 7714, type: !2117)
!8796 = !DILocation(line: 7714, column: 27, scope: !8784)
!8797 = !DILocalVariable(name: "status", scope: !8784, file: !1, line: 7717, type: !807)
!8798 = !DILocation(line: 7717, column: 5, scope: !8784)
!8799 = !DILocation(line: 7719, column: 40, scope: !8784)
!8800 = !DILocation(line: 7719, column: 61, scope: !8784)
!8801 = !DILocation(line: 7719, column: 68, scope: !8784)
!8802 = !DILocation(line: 7719, column: 73, scope: !8784)
!8803 = !DILocation(line: 7720, column: 5, scope: !8784)
!8804 = !DILocation(line: 7719, column: 10, scope: !8784)
!8805 = !DILocation(line: 7719, column: 9, scope: !8784)
!8806 = !DILocation(line: 7721, column: 10, scope: !8784)
!8807 = !DILocation(line: 7721, column: 3, scope: !8784)
!8808 = distinct !DISubprogram(name: "MagickOpaquePaintImageChannel", scope: !1, file: !1, line: 7724, type: !8809, scopeLine: 7727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!807, !1143, !1507, !2348, !2348, !1325, !2117}
!8811 = !DILocalVariable(name: "wand", arg: 1, scope: !8808, file: !1, line: 7724, type: !1143)
!8812 = !DILocation(line: 7724, column: 72, scope: !8808)
!8813 = !DILocalVariable(name: "channel", arg: 2, scope: !8808, file: !1, line: 7725, type: !1507)
!8814 = !DILocation(line: 7725, column: 21, scope: !8808)
!8815 = !DILocalVariable(name: "target", arg: 3, scope: !8808, file: !1, line: 7725, type: !2348)
!8816 = !DILocation(line: 7725, column: 46, scope: !8808)
!8817 = !DILocalVariable(name: "fill", arg: 4, scope: !8808, file: !1, line: 7725, type: !2348)
!8818 = !DILocation(line: 7725, column: 70, scope: !8808)
!8819 = !DILocalVariable(name: "fuzz", arg: 5, scope: !8808, file: !1, line: 7726, type: !1325)
!8820 = !DILocation(line: 7726, column: 16, scope: !8808)
!8821 = !DILocalVariable(name: "invert", arg: 6, scope: !8808, file: !1, line: 7726, type: !2117)
!8822 = !DILocation(line: 7726, column: 45, scope: !8808)
!8823 = !DILocalVariable(name: "status", scope: !8808, file: !1, line: 7729, type: !807)
!8824 = !DILocation(line: 7729, column: 5, scope: !8808)
!8825 = !DILocalVariable(name: "fill_pixel", scope: !8808, file: !1, line: 7732, type: !1054)
!8826 = !DILocation(line: 7732, column: 5, scope: !8808)
!8827 = !DILocalVariable(name: "target_pixel", scope: !8808, file: !1, line: 7733, type: !1054)
!8828 = !DILocation(line: 7733, column: 5, scope: !8808)
!8829 = !DILocation(line: 7737, column: 7, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 7737, column: 7)
!8831 = !DILocation(line: 7737, column: 13, scope: !8830)
!8832 = !DILocation(line: 7737, column: 19, scope: !8830)
!8833 = !DILocation(line: 7737, column: 7, scope: !8808)
!8834 = !DILocation(line: 7738, column: 60, scope: !8830)
!8835 = !DILocation(line: 7738, column: 66, scope: !8830)
!8836 = !DILocation(line: 7738, column: 12, scope: !8830)
!8837 = !DILocation(line: 7738, column: 5, scope: !8830)
!8838 = !DILocation(line: 7739, column: 7, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 7739, column: 7)
!8840 = !DILocation(line: 7739, column: 13, scope: !8839)
!8841 = !DILocation(line: 7739, column: 20, scope: !8839)
!8842 = !DILocation(line: 7739, column: 7, scope: !8808)
!8843 = !DILocation(line: 7740, column: 5, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8839, file: !1, line: 7740, column: 5)
!8845 = !DILocation(line: 7741, column: 23, scope: !8808)
!8846 = !DILocation(line: 7741, column: 3, scope: !8808)
!8847 = !DILocation(line: 7742, column: 23, scope: !8808)
!8848 = !DILocation(line: 7742, column: 3, scope: !8808)
!8849 = !DILocation(line: 7743, column: 22, scope: !8808)
!8850 = !DILocation(line: 7743, column: 3, scope: !8808)
!8851 = !DILocation(line: 7743, column: 9, scope: !8808)
!8852 = !DILocation(line: 7743, column: 17, scope: !8808)
!8853 = !DILocation(line: 7743, column: 21, scope: !8808)
!8854 = !DILocation(line: 7744, column: 34, scope: !8808)
!8855 = !DILocation(line: 7744, column: 40, scope: !8808)
!8856 = !DILocation(line: 7744, column: 47, scope: !8808)
!8857 = !DILocation(line: 7745, column: 17, scope: !8808)
!8858 = !DILocation(line: 7744, column: 10, scope: !8808)
!8859 = !DILocation(line: 7744, column: 9, scope: !8808)
!8860 = !DILocation(line: 7746, column: 7, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 7746, column: 7)
!8862 = !DILocation(line: 7746, column: 14, scope: !8861)
!8863 = !DILocation(line: 7746, column: 7, scope: !8808)
!8864 = !DILocation(line: 7747, column: 22, scope: !8861)
!8865 = !DILocation(line: 7747, column: 28, scope: !8861)
!8866 = !DILocation(line: 7747, column: 39, scope: !8861)
!8867 = !DILocation(line: 7747, column: 45, scope: !8861)
!8868 = !DILocation(line: 7747, column: 53, scope: !8861)
!8869 = !DILocation(line: 7747, column: 5, scope: !8861)
!8870 = !DILocation(line: 7748, column: 10, scope: !8808)
!8871 = !DILocation(line: 7748, column: 3, scope: !8808)
!8872 = !DILocation(line: 7749, column: 1, scope: !8808)
!8873 = distinct !DISubprogram(name: "MagickOptimizeImageLayers", scope: !1, file: !1, line: 7776, type: !2940, scopeLine: 7777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8874 = !DILocalVariable(name: "wand", arg: 1, scope: !8873, file: !1, line: 7776, type: !1143)
!8875 = !DILocation(line: 7776, column: 62, scope: !8873)
!8876 = !DILocalVariable(name: "optimize_image", scope: !8873, file: !1, line: 7779, type: !791)
!8877 = !DILocation(line: 7779, column: 6, scope: !8873)
!8878 = !DILocation(line: 7783, column: 7, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8873, file: !1, line: 7783, column: 7)
!8880 = !DILocation(line: 7783, column: 13, scope: !8879)
!8881 = !DILocation(line: 7783, column: 19, scope: !8879)
!8882 = !DILocation(line: 7783, column: 7, scope: !8873)
!8883 = !DILocation(line: 7784, column: 60, scope: !8879)
!8884 = !DILocation(line: 7784, column: 66, scope: !8879)
!8885 = !DILocation(line: 7784, column: 12, scope: !8879)
!8886 = !DILocation(line: 7784, column: 5, scope: !8879)
!8887 = !DILocation(line: 7785, column: 7, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8873, file: !1, line: 7785, column: 7)
!8889 = !DILocation(line: 7785, column: 13, scope: !8888)
!8890 = !DILocation(line: 7785, column: 20, scope: !8888)
!8891 = !DILocation(line: 7785, column: 7, scope: !8873)
!8892 = !DILocation(line: 7786, column: 5, scope: !8888)
!8893 = !DILocation(line: 7787, column: 38, scope: !8873)
!8894 = !DILocation(line: 7787, column: 44, scope: !8873)
!8895 = !DILocation(line: 7787, column: 51, scope: !8873)
!8896 = !DILocation(line: 7787, column: 57, scope: !8873)
!8897 = !DILocation(line: 7787, column: 18, scope: !8873)
!8898 = !DILocation(line: 7787, column: 17, scope: !8873)
!8899 = !DILocation(line: 7788, column: 7, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8873, file: !1, line: 7788, column: 7)
!8901 = !DILocation(line: 7788, column: 22, scope: !8900)
!8902 = !DILocation(line: 7788, column: 7, scope: !8873)
!8903 = !DILocation(line: 7789, column: 5, scope: !8900)
!8904 = !DILocation(line: 7790, column: 36, scope: !8873)
!8905 = !DILocation(line: 7790, column: 41, scope: !8873)
!8906 = !DILocation(line: 7790, column: 10, scope: !8873)
!8907 = !DILocation(line: 7790, column: 3, scope: !8873)
!8908 = !DILocation(line: 7791, column: 1, scope: !8873)
!8909 = distinct !DISubprogram(name: "MagickOptimizeImageTransparency", scope: !1, file: !1, line: 7821, type: !2240, scopeLine: 7822, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8910 = !DILocalVariable(name: "wand", arg: 1, scope: !8909, file: !1, line: 7821, type: !1143)
!8911 = !DILocation(line: 7821, column: 74, scope: !8909)
!8912 = !DILocation(line: 7825, column: 6, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8909, file: !1, line: 7825, column: 6)
!8914 = !DILocation(line: 7825, column: 12, scope: !8913)
!8915 = !DILocation(line: 7825, column: 18, scope: !8913)
!8916 = !DILocation(line: 7825, column: 6, scope: !8909)
!8917 = !DILocation(line: 7826, column: 60, scope: !8913)
!8918 = !DILocation(line: 7826, column: 66, scope: !8913)
!8919 = !DILocation(line: 7826, column: 12, scope: !8913)
!8920 = !DILocation(line: 7826, column: 5, scope: !8913)
!8921 = !DILocation(line: 7827, column: 7, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8909, file: !1, line: 7827, column: 7)
!8923 = !DILocation(line: 7827, column: 13, scope: !8922)
!8924 = !DILocation(line: 7827, column: 20, scope: !8922)
!8925 = !DILocation(line: 7827, column: 7, scope: !8909)
!8926 = !DILocation(line: 7828, column: 5, scope: !8922)
!8927 = !DILocation(line: 7829, column: 29, scope: !8909)
!8928 = !DILocation(line: 7829, column: 35, scope: !8909)
!8929 = !DILocation(line: 7829, column: 42, scope: !8909)
!8930 = !DILocation(line: 7829, column: 48, scope: !8909)
!8931 = !DILocation(line: 7829, column: 3, scope: !8909)
!8932 = !DILocation(line: 7830, column: 3, scope: !8909)
!8933 = !DILocation(line: 7831, column: 1, scope: !8909)
!8934 = distinct !DISubprogram(name: "MagickOrderedPosterizeImage", scope: !1, file: !1, line: 7883, type: !2074, scopeLine: 7885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8935 = !DILocalVariable(name: "wand", arg: 1, scope: !8934, file: !1, line: 7883, type: !1143)
!8936 = !DILocation(line: 7883, column: 70, scope: !8934)
!8937 = !DILocalVariable(name: "threshold_map", arg: 2, scope: !8934, file: !1, line: 7884, type: !924)
!8938 = !DILocation(line: 7884, column: 15, scope: !8934)
!8939 = !DILocalVariable(name: "status", scope: !8934, file: !1, line: 7887, type: !807)
!8940 = !DILocation(line: 7887, column: 5, scope: !8934)
!8941 = !DILocation(line: 7889, column: 45, scope: !8934)
!8942 = !DILocation(line: 7889, column: 66, scope: !8934)
!8943 = !DILocation(line: 7889, column: 10, scope: !8934)
!8944 = !DILocation(line: 7889, column: 9, scope: !8934)
!8945 = !DILocation(line: 7890, column: 10, scope: !8934)
!8946 = !DILocation(line: 7890, column: 3, scope: !8934)
!8947 = distinct !DISubprogram(name: "MagickOrderedPosterizeImageChannel", scope: !1, file: !1, line: 7893, type: !8948, scopeLine: 7895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!807, !1143, !1507, !924}
!8950 = !DILocalVariable(name: "wand", arg: 1, scope: !8947, file: !1, line: 7894, type: !1143)
!8951 = !DILocation(line: 7894, column: 15, scope: !8947)
!8952 = !DILocalVariable(name: "channel", arg: 2, scope: !8947, file: !1, line: 7894, type: !1507)
!8953 = !DILocation(line: 7894, column: 38, scope: !8947)
!8954 = !DILocalVariable(name: "threshold_map", arg: 3, scope: !8947, file: !1, line: 7894, type: !924)
!8955 = !DILocation(line: 7894, column: 58, scope: !8947)
!8956 = !DILocalVariable(name: "status", scope: !8947, file: !1, line: 7897, type: !807)
!8957 = !DILocation(line: 7897, column: 5, scope: !8947)
!8958 = !DILocation(line: 7901, column: 7, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 7901, column: 7)
!8960 = !DILocation(line: 7901, column: 13, scope: !8959)
!8961 = !DILocation(line: 7901, column: 19, scope: !8959)
!8962 = !DILocation(line: 7901, column: 7, scope: !8947)
!8963 = !DILocation(line: 7902, column: 60, scope: !8959)
!8964 = !DILocation(line: 7902, column: 66, scope: !8959)
!8965 = !DILocation(line: 7902, column: 12, scope: !8959)
!8966 = !DILocation(line: 7902, column: 5, scope: !8959)
!8967 = !DILocation(line: 7903, column: 7, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 7903, column: 7)
!8969 = !DILocation(line: 7903, column: 13, scope: !8968)
!8970 = !DILocation(line: 7903, column: 20, scope: !8968)
!8971 = !DILocation(line: 7903, column: 7, scope: !8947)
!8972 = !DILocation(line: 7904, column: 5, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !1, line: 7904, column: 5)
!8974 = !DILocation(line: 7905, column: 39, scope: !8947)
!8975 = !DILocation(line: 7905, column: 45, scope: !8947)
!8976 = !DILocation(line: 7905, column: 52, scope: !8947)
!8977 = !DILocation(line: 7905, column: 60, scope: !8947)
!8978 = !DILocation(line: 7906, column: 5, scope: !8947)
!8979 = !DILocation(line: 7906, column: 11, scope: !8947)
!8980 = !DILocation(line: 7905, column: 10, scope: !8947)
!8981 = !DILocation(line: 7905, column: 9, scope: !8947)
!8982 = !DILocation(line: 7907, column: 10, scope: !8947)
!8983 = !DILocation(line: 7907, column: 3, scope: !8947)
!8984 = !DILocation(line: 7908, column: 1, scope: !8947)
!8985 = distinct !DISubprogram(name: "MagickPingImage", scope: !1, file: !1, line: 7937, type: !2074, scopeLine: 7939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!8986 = !DILocalVariable(name: "wand", arg: 1, scope: !8985, file: !1, line: 7937, type: !1143)
!8987 = !DILocation(line: 7937, column: 58, scope: !8985)
!8988 = !DILocalVariable(name: "filename", arg: 2, scope: !8985, file: !1, line: 7938, type: !924)
!8989 = !DILocation(line: 7938, column: 15, scope: !8985)
!8990 = !DILocalVariable(name: "images", scope: !8985, file: !1, line: 7941, type: !791)
!8991 = !DILocation(line: 7941, column: 6, scope: !8985)
!8992 = !DILocalVariable(name: "ping_info", scope: !8985, file: !1, line: 7944, type: !1154)
!8993 = !DILocation(line: 7944, column: 6, scope: !8985)
!8994 = !DILocation(line: 7948, column: 7, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8985, file: !1, line: 7948, column: 7)
!8996 = !DILocation(line: 7948, column: 13, scope: !8995)
!8997 = !DILocation(line: 7948, column: 19, scope: !8995)
!8998 = !DILocation(line: 7948, column: 7, scope: !8985)
!8999 = !DILocation(line: 7949, column: 60, scope: !8995)
!9000 = !DILocation(line: 7949, column: 66, scope: !8995)
!9001 = !DILocation(line: 7949, column: 12, scope: !8995)
!9002 = !DILocation(line: 7949, column: 5, scope: !8995)
!9003 = !DILocation(line: 7950, column: 28, scope: !8985)
!9004 = !DILocation(line: 7950, column: 34, scope: !8985)
!9005 = !DILocation(line: 7950, column: 13, scope: !8985)
!9006 = !DILocation(line: 7950, column: 12, scope: !8985)
!9007 = !DILocation(line: 7951, column: 7, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8985, file: !1, line: 7951, column: 7)
!9009 = !DILocation(line: 7951, column: 16, scope: !9008)
!9010 = !DILocation(line: 7951, column: 7, scope: !8985)
!9011 = !DILocation(line: 7952, column: 29, scope: !9008)
!9012 = !DILocation(line: 7952, column: 40, scope: !9008)
!9013 = !DILocation(line: 7952, column: 49, scope: !9008)
!9014 = !DILocation(line: 7952, column: 12, scope: !9008)
!9015 = !DILocation(line: 7952, column: 5, scope: !9008)
!9016 = !DILocation(line: 7953, column: 20, scope: !8985)
!9017 = !DILocation(line: 7953, column: 30, scope: !8985)
!9018 = !DILocation(line: 7953, column: 36, scope: !8985)
!9019 = !DILocation(line: 7953, column: 10, scope: !8985)
!9020 = !DILocation(line: 7953, column: 9, scope: !8985)
!9021 = !DILocation(line: 7954, column: 30, scope: !8985)
!9022 = !DILocation(line: 7954, column: 13, scope: !8985)
!9023 = !DILocation(line: 7954, column: 12, scope: !8985)
!9024 = !DILocation(line: 7955, column: 7, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !8985, file: !1, line: 7955, column: 7)
!9026 = !DILocation(line: 7955, column: 14, scope: !9025)
!9027 = !DILocation(line: 7955, column: 7, scope: !8985)
!9028 = !DILocation(line: 7956, column: 5, scope: !9025)
!9029 = !DILocation(line: 7957, column: 28, scope: !8985)
!9030 = !DILocation(line: 7957, column: 33, scope: !8985)
!9031 = !DILocation(line: 7957, column: 10, scope: !8985)
!9032 = !DILocation(line: 7957, column: 3, scope: !8985)
!9033 = !DILocation(line: 7958, column: 1, scope: !8985)
!9034 = distinct !DISubprogram(name: "MagickPingImageBlob", scope: !1, file: !1, line: 7987, type: !9035, scopeLine: 7989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9035 = !DISubroutineType(types: !9036)
!9036 = !{!807, !1143, !1212, !1214}
!9037 = !DILocalVariable(name: "wand", arg: 1, scope: !9034, file: !1, line: 7987, type: !1143)
!9038 = !DILocation(line: 7987, column: 62, scope: !9034)
!9039 = !DILocalVariable(name: "blob", arg: 2, scope: !9034, file: !1, line: 7988, type: !1212)
!9040 = !DILocation(line: 7988, column: 15, scope: !9034)
!9041 = !DILocalVariable(name: "length", arg: 3, scope: !9034, file: !1, line: 7988, type: !1214)
!9042 = !DILocation(line: 7988, column: 33, scope: !9034)
!9043 = !DILocalVariable(name: "images", scope: !9034, file: !1, line: 7991, type: !791)
!9044 = !DILocation(line: 7991, column: 6, scope: !9034)
!9045 = !DILocalVariable(name: "read_info", scope: !9034, file: !1, line: 7994, type: !1154)
!9046 = !DILocation(line: 7994, column: 6, scope: !9034)
!9047 = !DILocation(line: 7998, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9034, file: !1, line: 7998, column: 7)
!9049 = !DILocation(line: 7998, column: 13, scope: !9048)
!9050 = !DILocation(line: 7998, column: 19, scope: !9048)
!9051 = !DILocation(line: 7998, column: 7, scope: !9034)
!9052 = !DILocation(line: 7999, column: 60, scope: !9048)
!9053 = !DILocation(line: 7999, column: 66, scope: !9048)
!9054 = !DILocation(line: 7999, column: 12, scope: !9048)
!9055 = !DILocation(line: 7999, column: 5, scope: !9048)
!9056 = !DILocation(line: 8000, column: 28, scope: !9034)
!9057 = !DILocation(line: 8000, column: 34, scope: !9034)
!9058 = !DILocation(line: 8000, column: 13, scope: !9034)
!9059 = !DILocation(line: 8000, column: 12, scope: !9034)
!9060 = !DILocation(line: 8001, column: 20, scope: !9034)
!9061 = !DILocation(line: 8001, column: 30, scope: !9034)
!9062 = !DILocation(line: 8001, column: 35, scope: !9034)
!9063 = !DILocation(line: 8001, column: 3, scope: !9034)
!9064 = !DILocation(line: 8002, column: 20, scope: !9034)
!9065 = !DILocation(line: 8002, column: 30, scope: !9034)
!9066 = !DILocation(line: 8002, column: 36, scope: !9034)
!9067 = !DILocation(line: 8002, column: 10, scope: !9034)
!9068 = !DILocation(line: 8002, column: 9, scope: !9034)
!9069 = !DILocation(line: 8003, column: 30, scope: !9034)
!9070 = !DILocation(line: 8003, column: 13, scope: !9034)
!9071 = !DILocation(line: 8003, column: 12, scope: !9034)
!9072 = !DILocation(line: 8004, column: 7, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9034, file: !1, line: 8004, column: 7)
!9074 = !DILocation(line: 8004, column: 14, scope: !9073)
!9075 = !DILocation(line: 8004, column: 7, scope: !9034)
!9076 = !DILocation(line: 8005, column: 5, scope: !9073)
!9077 = !DILocation(line: 8006, column: 28, scope: !9034)
!9078 = !DILocation(line: 8006, column: 33, scope: !9034)
!9079 = !DILocation(line: 8006, column: 10, scope: !9034)
!9080 = !DILocation(line: 8006, column: 3, scope: !9034)
!9081 = !DILocation(line: 8007, column: 1, scope: !9034)
!9082 = distinct !DISubprogram(name: "MagickPingImageFile", scope: !1, file: !1, line: 8034, type: !9083, scopeLine: 8035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{!807, !1143, !1216}
!9085 = !DILocalVariable(name: "wand", arg: 1, scope: !9082, file: !1, line: 8034, type: !1143)
!9086 = !DILocation(line: 8034, column: 62, scope: !9082)
!9087 = !DILocalVariable(name: "file", arg: 2, scope: !9082, file: !1, line: 8034, type: !1216)
!9088 = !DILocation(line: 8034, column: 73, scope: !9082)
!9089 = !DILocalVariable(name: "images", scope: !9082, file: !1, line: 8037, type: !791)
!9090 = !DILocation(line: 8037, column: 6, scope: !9082)
!9091 = !DILocalVariable(name: "read_info", scope: !9082, file: !1, line: 8040, type: !1154)
!9092 = !DILocation(line: 8040, column: 6, scope: !9082)
!9093 = !DILocation(line: 8045, column: 7, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9082, file: !1, line: 8045, column: 7)
!9095 = !DILocation(line: 8045, column: 13, scope: !9094)
!9096 = !DILocation(line: 8045, column: 19, scope: !9094)
!9097 = !DILocation(line: 8045, column: 7, scope: !9082)
!9098 = !DILocation(line: 8046, column: 60, scope: !9094)
!9099 = !DILocation(line: 8046, column: 66, scope: !9094)
!9100 = !DILocation(line: 8046, column: 12, scope: !9094)
!9101 = !DILocation(line: 8046, column: 5, scope: !9094)
!9102 = !DILocation(line: 8047, column: 28, scope: !9082)
!9103 = !DILocation(line: 8047, column: 34, scope: !9082)
!9104 = !DILocation(line: 8047, column: 13, scope: !9082)
!9105 = !DILocation(line: 8047, column: 12, scope: !9082)
!9106 = !DILocation(line: 8048, column: 20, scope: !9082)
!9107 = !DILocation(line: 8048, column: 30, scope: !9082)
!9108 = !DILocation(line: 8048, column: 3, scope: !9082)
!9109 = !DILocation(line: 8049, column: 20, scope: !9082)
!9110 = !DILocation(line: 8049, column: 30, scope: !9082)
!9111 = !DILocation(line: 8049, column: 36, scope: !9082)
!9112 = !DILocation(line: 8049, column: 10, scope: !9082)
!9113 = !DILocation(line: 8049, column: 9, scope: !9082)
!9114 = !DILocation(line: 8050, column: 30, scope: !9082)
!9115 = !DILocation(line: 8050, column: 13, scope: !9082)
!9116 = !DILocation(line: 8050, column: 12, scope: !9082)
!9117 = !DILocation(line: 8051, column: 7, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9082, file: !1, line: 8051, column: 7)
!9119 = !DILocation(line: 8051, column: 14, scope: !9118)
!9120 = !DILocation(line: 8051, column: 7, scope: !9082)
!9121 = !DILocation(line: 8052, column: 5, scope: !9118)
!9122 = !DILocation(line: 8053, column: 28, scope: !9082)
!9123 = !DILocation(line: 8053, column: 33, scope: !9082)
!9124 = !DILocation(line: 8053, column: 10, scope: !9082)
!9125 = !DILocation(line: 8053, column: 3, scope: !9082)
!9126 = !DILocation(line: 8054, column: 1, scope: !9082)
!9127 = distinct !DISubprogram(name: "MagickPolaroidImage", scope: !1, file: !1, line: 8083, type: !9128, scopeLine: 8085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{!807, !1143, !1893, !1325}
!9130 = !DILocalVariable(name: "wand", arg: 1, scope: !9127, file: !1, line: 8083, type: !1143)
!9131 = !DILocation(line: 8083, column: 62, scope: !9127)
!9132 = !DILocalVariable(name: "drawing_wand", arg: 2, scope: !9127, file: !1, line: 8084, type: !1893)
!9133 = !DILocation(line: 8084, column: 22, scope: !9127)
!9134 = !DILocalVariable(name: "angle", arg: 3, scope: !9127, file: !1, line: 8084, type: !1325)
!9135 = !DILocation(line: 8084, column: 48, scope: !9127)
!9136 = !DILocalVariable(name: "draw_info", scope: !9127, file: !1, line: 8087, type: !1012)
!9137 = !DILocation(line: 8087, column: 6, scope: !9127)
!9138 = !DILocalVariable(name: "polaroid_image", scope: !9127, file: !1, line: 8090, type: !791)
!9139 = !DILocation(line: 8090, column: 6, scope: !9127)
!9140 = !DILocation(line: 8094, column: 7, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9127, file: !1, line: 8094, column: 7)
!9142 = !DILocation(line: 8094, column: 13, scope: !9141)
!9143 = !DILocation(line: 8094, column: 19, scope: !9141)
!9144 = !DILocation(line: 8094, column: 7, scope: !9127)
!9145 = !DILocation(line: 8095, column: 60, scope: !9141)
!9146 = !DILocation(line: 8095, column: 66, scope: !9141)
!9147 = !DILocation(line: 8095, column: 12, scope: !9141)
!9148 = !DILocation(line: 8095, column: 5, scope: !9141)
!9149 = !DILocation(line: 8096, column: 7, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9127, file: !1, line: 8096, column: 7)
!9151 = !DILocation(line: 8096, column: 13, scope: !9150)
!9152 = !DILocation(line: 8096, column: 20, scope: !9150)
!9153 = !DILocation(line: 8096, column: 7, scope: !9127)
!9154 = !DILocation(line: 8097, column: 5, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9150, file: !1, line: 8097, column: 5)
!9156 = !DILocation(line: 8098, column: 29, scope: !9127)
!9157 = !DILocation(line: 8098, column: 13, scope: !9127)
!9158 = !DILocation(line: 8098, column: 12, scope: !9127)
!9159 = !DILocation(line: 8099, column: 7, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9127, file: !1, line: 8099, column: 7)
!9161 = !DILocation(line: 8099, column: 17, scope: !9160)
!9162 = !DILocation(line: 8099, column: 7, scope: !9127)
!9163 = !DILocation(line: 8100, column: 5, scope: !9160)
!9164 = !DILocation(line: 8101, column: 32, scope: !9127)
!9165 = !DILocation(line: 8101, column: 38, scope: !9127)
!9166 = !DILocation(line: 8101, column: 45, scope: !9127)
!9167 = !DILocation(line: 8101, column: 55, scope: !9127)
!9168 = !DILocation(line: 8101, column: 61, scope: !9127)
!9169 = !DILocation(line: 8101, column: 67, scope: !9127)
!9170 = !DILocation(line: 8101, column: 18, scope: !9127)
!9171 = !DILocation(line: 8101, column: 17, scope: !9127)
!9172 = !DILocation(line: 8102, column: 7, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9127, file: !1, line: 8102, column: 7)
!9174 = !DILocation(line: 8102, column: 22, scope: !9173)
!9175 = !DILocation(line: 8102, column: 7, scope: !9127)
!9176 = !DILocation(line: 8103, column: 5, scope: !9173)
!9177 = !DILocation(line: 8104, column: 23, scope: !9127)
!9178 = !DILocation(line: 8104, column: 29, scope: !9127)
!9179 = !DILocation(line: 8104, column: 36, scope: !9127)
!9180 = !DILocation(line: 8104, column: 3, scope: !9127)
!9181 = !DILocation(line: 8105, column: 3, scope: !9127)
!9182 = !DILocation(line: 8106, column: 1, scope: !9127)
!9183 = distinct !DISubprogram(name: "MagickPosterizeImage", scope: !1, file: !1, line: 8137, type: !9184, scopeLine: 8139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{!807, !1143, !1214, !2117}
!9186 = !DILocalVariable(name: "wand", arg: 1, scope: !9183, file: !1, line: 8137, type: !1143)
!9187 = !DILocation(line: 8137, column: 63, scope: !9183)
!9188 = !DILocalVariable(name: "levels", arg: 2, scope: !9183, file: !1, line: 8138, type: !1214)
!9189 = !DILocation(line: 8138, column: 16, scope: !9183)
!9190 = !DILocalVariable(name: "dither", arg: 3, scope: !9183, file: !1, line: 8138, type: !2117)
!9191 = !DILocation(line: 8138, column: 47, scope: !9183)
!9192 = !DILocalVariable(name: "status", scope: !9183, file: !1, line: 8141, type: !807)
!9193 = !DILocation(line: 8141, column: 5, scope: !9183)
!9194 = !DILocation(line: 8145, column: 7, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9183, file: !1, line: 8145, column: 7)
!9196 = !DILocation(line: 8145, column: 13, scope: !9195)
!9197 = !DILocation(line: 8145, column: 19, scope: !9195)
!9198 = !DILocation(line: 8145, column: 7, scope: !9183)
!9199 = !DILocation(line: 8146, column: 60, scope: !9195)
!9200 = !DILocation(line: 8146, column: 66, scope: !9195)
!9201 = !DILocation(line: 8146, column: 12, scope: !9195)
!9202 = !DILocation(line: 8146, column: 5, scope: !9195)
!9203 = !DILocation(line: 8147, column: 7, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9183, file: !1, line: 8147, column: 7)
!9205 = !DILocation(line: 8147, column: 13, scope: !9204)
!9206 = !DILocation(line: 8147, column: 20, scope: !9204)
!9207 = !DILocation(line: 8147, column: 7, scope: !9183)
!9208 = !DILocation(line: 8148, column: 5, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9204, file: !1, line: 8148, column: 5)
!9210 = !DILocation(line: 8149, column: 25, scope: !9183)
!9211 = !DILocation(line: 8149, column: 31, scope: !9183)
!9212 = !DILocation(line: 8149, column: 38, scope: !9183)
!9213 = !DILocation(line: 8149, column: 45, scope: !9183)
!9214 = !DILocation(line: 8149, column: 10, scope: !9183)
!9215 = !DILocation(line: 8149, column: 9, scope: !9183)
!9216 = !DILocation(line: 8150, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9183, file: !1, line: 8150, column: 7)
!9218 = !DILocation(line: 8150, column: 14, scope: !9217)
!9219 = !DILocation(line: 8150, column: 7, scope: !9183)
!9220 = !DILocation(line: 8151, column: 22, scope: !9217)
!9221 = !DILocation(line: 8151, column: 28, scope: !9217)
!9222 = !DILocation(line: 8151, column: 39, scope: !9217)
!9223 = !DILocation(line: 8151, column: 45, scope: !9217)
!9224 = !DILocation(line: 8151, column: 53, scope: !9217)
!9225 = !DILocation(line: 8151, column: 5, scope: !9217)
!9226 = !DILocation(line: 8152, column: 10, scope: !9183)
!9227 = !DILocation(line: 8152, column: 3, scope: !9183)
!9228 = !DILocation(line: 8153, column: 1, scope: !9183)
!9229 = distinct !DISubprogram(name: "MagickPreviewImages", scope: !1, file: !1, line: 8183, type: !9230, scopeLine: 8185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!1143, !1143, !9232}
!9232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1191)
!9233 = !DILocalVariable(name: "wand", arg: 1, scope: !9229, file: !1, line: 8183, type: !1143)
!9234 = !DILocation(line: 8183, column: 56, scope: !9229)
!9235 = !DILocalVariable(name: "preview", arg: 2, scope: !9229, file: !1, line: 8184, type: !9232)
!9236 = !DILocation(line: 8184, column: 21, scope: !9229)
!9237 = !DILocalVariable(name: "preview_image", scope: !9229, file: !1, line: 8187, type: !791)
!9238 = !DILocation(line: 8187, column: 6, scope: !9229)
!9239 = !DILocation(line: 8191, column: 7, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9229, file: !1, line: 8191, column: 7)
!9241 = !DILocation(line: 8191, column: 13, scope: !9240)
!9242 = !DILocation(line: 8191, column: 19, scope: !9240)
!9243 = !DILocation(line: 8191, column: 7, scope: !9229)
!9244 = !DILocation(line: 8192, column: 60, scope: !9240)
!9245 = !DILocation(line: 8192, column: 66, scope: !9240)
!9246 = !DILocation(line: 8192, column: 12, scope: !9240)
!9247 = !DILocation(line: 8192, column: 5, scope: !9240)
!9248 = !DILocation(line: 8193, column: 7, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9229, file: !1, line: 8193, column: 7)
!9250 = !DILocation(line: 8193, column: 13, scope: !9249)
!9251 = !DILocation(line: 8193, column: 20, scope: !9249)
!9252 = !DILocation(line: 8193, column: 7, scope: !9229)
!9253 = !DILocation(line: 8194, column: 5, scope: !9249)
!9254 = !DILocation(line: 8195, column: 30, scope: !9229)
!9255 = !DILocation(line: 8195, column: 36, scope: !9229)
!9256 = !DILocation(line: 8195, column: 43, scope: !9229)
!9257 = !DILocation(line: 8195, column: 51, scope: !9229)
!9258 = !DILocation(line: 8195, column: 57, scope: !9229)
!9259 = !DILocation(line: 8195, column: 17, scope: !9229)
!9260 = !DILocation(line: 8195, column: 16, scope: !9229)
!9261 = !DILocation(line: 8196, column: 7, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9229, file: !1, line: 8196, column: 7)
!9263 = !DILocation(line: 8196, column: 21, scope: !9262)
!9264 = !DILocation(line: 8196, column: 7, scope: !9229)
!9265 = !DILocation(line: 8197, column: 5, scope: !9262)
!9266 = !DILocation(line: 8198, column: 36, scope: !9229)
!9267 = !DILocation(line: 8198, column: 41, scope: !9229)
!9268 = !DILocation(line: 8198, column: 10, scope: !9229)
!9269 = !DILocation(line: 8198, column: 3, scope: !9229)
!9270 = !DILocation(line: 8199, column: 1, scope: !9229)
!9271 = distinct !DISubprogram(name: "MagickPreviousImage", scope: !1, file: !1, line: 8237, type: !2240, scopeLine: 8238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9272 = !DILocalVariable(name: "wand", arg: 1, scope: !9271, file: !1, line: 8237, type: !1143)
!9273 = !DILocation(line: 8237, column: 62, scope: !9271)
!9274 = !DILocation(line: 8241, column: 7, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9271, file: !1, line: 8241, column: 7)
!9276 = !DILocation(line: 8241, column: 13, scope: !9275)
!9277 = !DILocation(line: 8241, column: 19, scope: !9275)
!9278 = !DILocation(line: 8241, column: 7, scope: !9271)
!9279 = !DILocation(line: 8242, column: 60, scope: !9275)
!9280 = !DILocation(line: 8242, column: 66, scope: !9275)
!9281 = !DILocation(line: 8242, column: 12, scope: !9275)
!9282 = !DILocation(line: 8242, column: 5, scope: !9275)
!9283 = !DILocation(line: 8243, column: 7, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9271, file: !1, line: 8243, column: 7)
!9285 = !DILocation(line: 8243, column: 13, scope: !9284)
!9286 = !DILocation(line: 8243, column: 20, scope: !9284)
!9287 = !DILocation(line: 8243, column: 7, scope: !9271)
!9288 = !DILocation(line: 8244, column: 5, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9284, file: !1, line: 8244, column: 5)
!9290 = !DILocation(line: 8245, column: 7, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9271, file: !1, line: 8245, column: 7)
!9292 = !DILocation(line: 8245, column: 13, scope: !9291)
!9293 = !DILocation(line: 8245, column: 27, scope: !9291)
!9294 = !DILocation(line: 8245, column: 7, scope: !9271)
!9295 = !DILocation(line: 8247, column: 7, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9291, file: !1, line: 8246, column: 5)
!9297 = !DILocation(line: 8247, column: 13, scope: !9296)
!9298 = !DILocation(line: 8247, column: 26, scope: !9296)
!9299 = !DILocation(line: 8248, column: 7, scope: !9296)
!9300 = !DILocation(line: 8250, column: 30, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9271, file: !1, line: 8250, column: 7)
!9302 = !DILocation(line: 8250, column: 36, scope: !9301)
!9303 = !DILocation(line: 8250, column: 7, scope: !9301)
!9304 = !DILocation(line: 8250, column: 44, scope: !9301)
!9305 = !DILocation(line: 8250, column: 7, scope: !9271)
!9306 = !DILocation(line: 8252, column: 7, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9301, file: !1, line: 8251, column: 5)
!9308 = !DILocation(line: 8252, column: 13, scope: !9307)
!9309 = !DILocation(line: 8252, column: 26, scope: !9307)
!9310 = !DILocation(line: 8253, column: 7, scope: !9307)
!9311 = !DILocation(line: 8253, column: 13, scope: !9307)
!9312 = !DILocation(line: 8253, column: 26, scope: !9307)
!9313 = !DILocation(line: 8254, column: 7, scope: !9307)
!9314 = !DILocation(line: 8256, column: 39, scope: !9271)
!9315 = !DILocation(line: 8256, column: 45, scope: !9271)
!9316 = !DILocation(line: 8256, column: 16, scope: !9271)
!9317 = !DILocation(line: 8256, column: 3, scope: !9271)
!9318 = !DILocation(line: 8256, column: 9, scope: !9271)
!9319 = !DILocation(line: 8256, column: 15, scope: !9271)
!9320 = !DILocation(line: 8257, column: 3, scope: !9271)
!9321 = !DILocation(line: 8258, column: 1, scope: !9271)
!9322 = distinct !DISubprogram(name: "MagickQuantizeImage", scope: !1, file: !1, line: 8311, type: !9323, scopeLine: 8315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!807, !1143, !1214, !9325, !1214, !2117, !2117}
!9325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!9326 = !DILocalVariable(name: "wand", arg: 1, scope: !9322, file: !1, line: 8311, type: !1143)
!9327 = !DILocation(line: 8311, column: 62, scope: !9322)
!9328 = !DILocalVariable(name: "number_colors", arg: 2, scope: !9322, file: !1, line: 8312, type: !1214)
!9329 = !DILocation(line: 8312, column: 16, scope: !9322)
!9330 = !DILocalVariable(name: "colorspace", arg: 3, scope: !9322, file: !1, line: 8312, type: !9325)
!9331 = !DILocation(line: 8312, column: 51, scope: !9322)
!9332 = !DILocalVariable(name: "treedepth", arg: 4, scope: !9322, file: !1, line: 8313, type: !1214)
!9333 = !DILocation(line: 8313, column: 16, scope: !9322)
!9334 = !DILocalVariable(name: "dither", arg: 5, scope: !9322, file: !1, line: 8313, type: !2117)
!9335 = !DILocation(line: 8313, column: 50, scope: !9322)
!9336 = !DILocalVariable(name: "measure_error", arg: 6, scope: !9322, file: !1, line: 8314, type: !2117)
!9337 = !DILocation(line: 8314, column: 27, scope: !9322)
!9338 = !DILocalVariable(name: "status", scope: !9322, file: !1, line: 8317, type: !807)
!9339 = !DILocation(line: 8317, column: 5, scope: !9322)
!9340 = !DILocalVariable(name: "quantize_info", scope: !9322, file: !1, line: 8320, type: !1287)
!9341 = !DILocation(line: 8320, column: 6, scope: !9322)
!9342 = !DILocation(line: 8324, column: 7, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9322, file: !1, line: 8324, column: 7)
!9344 = !DILocation(line: 8324, column: 13, scope: !9343)
!9345 = !DILocation(line: 8324, column: 19, scope: !9343)
!9346 = !DILocation(line: 8324, column: 7, scope: !9322)
!9347 = !DILocation(line: 8325, column: 60, scope: !9343)
!9348 = !DILocation(line: 8325, column: 66, scope: !9343)
!9349 = !DILocation(line: 8325, column: 12, scope: !9343)
!9350 = !DILocation(line: 8325, column: 5, scope: !9343)
!9351 = !DILocation(line: 8326, column: 7, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9322, file: !1, line: 8326, column: 7)
!9353 = !DILocation(line: 8326, column: 13, scope: !9352)
!9354 = !DILocation(line: 8326, column: 20, scope: !9352)
!9355 = !DILocation(line: 8326, column: 7, scope: !9322)
!9356 = !DILocation(line: 8327, column: 5, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9352, file: !1, line: 8327, column: 5)
!9358 = !DILocation(line: 8328, column: 17, scope: !9322)
!9359 = !DILocation(line: 8328, column: 16, scope: !9322)
!9360 = !DILocation(line: 8329, column: 32, scope: !9322)
!9361 = !DILocation(line: 8329, column: 3, scope: !9322)
!9362 = !DILocation(line: 8329, column: 18, scope: !9322)
!9363 = !DILocation(line: 8329, column: 31, scope: !9322)
!9364 = !DILocation(line: 8330, column: 25, scope: !9322)
!9365 = !DILocation(line: 8330, column: 3, scope: !9322)
!9366 = !DILocation(line: 8330, column: 18, scope: !9322)
!9367 = !DILocation(line: 8330, column: 24, scope: !9322)
!9368 = !DILocation(line: 8331, column: 29, scope: !9322)
!9369 = !DILocation(line: 8331, column: 3, scope: !9322)
!9370 = !DILocation(line: 8331, column: 18, scope: !9322)
!9371 = !DILocation(line: 8331, column: 28, scope: !9322)
!9372 = !DILocation(line: 8332, column: 29, scope: !9322)
!9373 = !DILocation(line: 8332, column: 3, scope: !9322)
!9374 = !DILocation(line: 8332, column: 18, scope: !9322)
!9375 = !DILocation(line: 8332, column: 28, scope: !9322)
!9376 = !DILocation(line: 8333, column: 32, scope: !9322)
!9377 = !DILocation(line: 8333, column: 3, scope: !9322)
!9378 = !DILocation(line: 8333, column: 18, scope: !9322)
!9379 = !DILocation(line: 8333, column: 31, scope: !9322)
!9380 = !DILocation(line: 8334, column: 24, scope: !9322)
!9381 = !DILocation(line: 8334, column: 38, scope: !9322)
!9382 = !DILocation(line: 8334, column: 44, scope: !9322)
!9383 = !DILocation(line: 8334, column: 10, scope: !9322)
!9384 = !DILocation(line: 8334, column: 9, scope: !9322)
!9385 = !DILocation(line: 8335, column: 7, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9322, file: !1, line: 8335, column: 7)
!9387 = !DILocation(line: 8335, column: 14, scope: !9386)
!9388 = !DILocation(line: 8335, column: 7, scope: !9322)
!9389 = !DILocation(line: 8336, column: 22, scope: !9386)
!9390 = !DILocation(line: 8336, column: 28, scope: !9386)
!9391 = !DILocation(line: 8336, column: 39, scope: !9386)
!9392 = !DILocation(line: 8336, column: 45, scope: !9386)
!9393 = !DILocation(line: 8336, column: 53, scope: !9386)
!9394 = !DILocation(line: 8336, column: 5, scope: !9386)
!9395 = !DILocation(line: 8337, column: 37, scope: !9322)
!9396 = !DILocation(line: 8337, column: 17, scope: !9322)
!9397 = !DILocation(line: 8337, column: 16, scope: !9322)
!9398 = !DILocation(line: 8338, column: 10, scope: !9322)
!9399 = !DILocation(line: 8338, column: 3, scope: !9322)
!9400 = !DILocation(line: 8339, column: 1, scope: !9322)
!9401 = distinct !DISubprogram(name: "MagickQuantizeImages", scope: !1, file: !1, line: 8392, type: !9323, scopeLine: 8396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9402 = !DILocalVariable(name: "wand", arg: 1, scope: !9401, file: !1, line: 8392, type: !1143)
!9403 = !DILocation(line: 8392, column: 63, scope: !9401)
!9404 = !DILocalVariable(name: "number_colors", arg: 2, scope: !9401, file: !1, line: 8393, type: !1214)
!9405 = !DILocation(line: 8393, column: 16, scope: !9401)
!9406 = !DILocalVariable(name: "colorspace", arg: 3, scope: !9401, file: !1, line: 8393, type: !9325)
!9407 = !DILocation(line: 8393, column: 51, scope: !9401)
!9408 = !DILocalVariable(name: "treedepth", arg: 4, scope: !9401, file: !1, line: 8394, type: !1214)
!9409 = !DILocation(line: 8394, column: 16, scope: !9401)
!9410 = !DILocalVariable(name: "dither", arg: 5, scope: !9401, file: !1, line: 8394, type: !2117)
!9411 = !DILocation(line: 8394, column: 50, scope: !9401)
!9412 = !DILocalVariable(name: "measure_error", arg: 6, scope: !9401, file: !1, line: 8395, type: !2117)
!9413 = !DILocation(line: 8395, column: 27, scope: !9401)
!9414 = !DILocalVariable(name: "status", scope: !9401, file: !1, line: 8398, type: !807)
!9415 = !DILocation(line: 8398, column: 5, scope: !9401)
!9416 = !DILocalVariable(name: "quantize_info", scope: !9401, file: !1, line: 8401, type: !1287)
!9417 = !DILocation(line: 8401, column: 6, scope: !9401)
!9418 = !DILocation(line: 8405, column: 7, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9401, file: !1, line: 8405, column: 7)
!9420 = !DILocation(line: 8405, column: 13, scope: !9419)
!9421 = !DILocation(line: 8405, column: 19, scope: !9419)
!9422 = !DILocation(line: 8405, column: 7, scope: !9401)
!9423 = !DILocation(line: 8406, column: 60, scope: !9419)
!9424 = !DILocation(line: 8406, column: 66, scope: !9419)
!9425 = !DILocation(line: 8406, column: 12, scope: !9419)
!9426 = !DILocation(line: 8406, column: 5, scope: !9419)
!9427 = !DILocation(line: 8407, column: 7, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9401, file: !1, line: 8407, column: 7)
!9429 = !DILocation(line: 8407, column: 13, scope: !9428)
!9430 = !DILocation(line: 8407, column: 20, scope: !9428)
!9431 = !DILocation(line: 8407, column: 7, scope: !9401)
!9432 = !DILocation(line: 8408, column: 5, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9428, file: !1, line: 8408, column: 5)
!9434 = !DILocation(line: 8409, column: 17, scope: !9401)
!9435 = !DILocation(line: 8409, column: 16, scope: !9401)
!9436 = !DILocation(line: 8410, column: 32, scope: !9401)
!9437 = !DILocation(line: 8410, column: 3, scope: !9401)
!9438 = !DILocation(line: 8410, column: 18, scope: !9401)
!9439 = !DILocation(line: 8410, column: 31, scope: !9401)
!9440 = !DILocation(line: 8411, column: 25, scope: !9401)
!9441 = !DILocation(line: 8411, column: 3, scope: !9401)
!9442 = !DILocation(line: 8411, column: 18, scope: !9401)
!9443 = !DILocation(line: 8411, column: 24, scope: !9401)
!9444 = !DILocation(line: 8412, column: 29, scope: !9401)
!9445 = !DILocation(line: 8412, column: 3, scope: !9401)
!9446 = !DILocation(line: 8412, column: 18, scope: !9401)
!9447 = !DILocation(line: 8412, column: 28, scope: !9401)
!9448 = !DILocation(line: 8413, column: 29, scope: !9401)
!9449 = !DILocation(line: 8413, column: 3, scope: !9401)
!9450 = !DILocation(line: 8413, column: 18, scope: !9401)
!9451 = !DILocation(line: 8413, column: 28, scope: !9401)
!9452 = !DILocation(line: 8414, column: 32, scope: !9401)
!9453 = !DILocation(line: 8414, column: 3, scope: !9401)
!9454 = !DILocation(line: 8414, column: 18, scope: !9401)
!9455 = !DILocation(line: 8414, column: 31, scope: !9401)
!9456 = !DILocation(line: 8415, column: 25, scope: !9401)
!9457 = !DILocation(line: 8415, column: 39, scope: !9401)
!9458 = !DILocation(line: 8415, column: 45, scope: !9401)
!9459 = !DILocation(line: 8415, column: 10, scope: !9401)
!9460 = !DILocation(line: 8415, column: 9, scope: !9401)
!9461 = !DILocation(line: 8416, column: 7, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9401, file: !1, line: 8416, column: 7)
!9463 = !DILocation(line: 8416, column: 14, scope: !9462)
!9464 = !DILocation(line: 8416, column: 7, scope: !9401)
!9465 = !DILocation(line: 8417, column: 22, scope: !9462)
!9466 = !DILocation(line: 8417, column: 28, scope: !9462)
!9467 = !DILocation(line: 8417, column: 39, scope: !9462)
!9468 = !DILocation(line: 8417, column: 45, scope: !9462)
!9469 = !DILocation(line: 8417, column: 53, scope: !9462)
!9470 = !DILocation(line: 8417, column: 5, scope: !9462)
!9471 = !DILocation(line: 8418, column: 37, scope: !9401)
!9472 = !DILocation(line: 8418, column: 17, scope: !9401)
!9473 = !DILocation(line: 8418, column: 16, scope: !9401)
!9474 = !DILocation(line: 8419, column: 10, scope: !9401)
!9475 = !DILocation(line: 8419, column: 3, scope: !9401)
!9476 = !DILocation(line: 8420, column: 1, scope: !9401)
!9477 = distinct !DISubprogram(name: "MagickRaiseImage", scope: !1, file: !1, line: 8454, type: !9478, scopeLine: 8457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9478 = !DISubroutineType(types: !9479)
!9479 = !{!807, !1143, !1214, !1214, !1666, !1666, !2117}
!9480 = !DILocalVariable(name: "wand", arg: 1, scope: !9477, file: !1, line: 8454, type: !1143)
!9481 = !DILocation(line: 8454, column: 59, scope: !9477)
!9482 = !DILocalVariable(name: "width", arg: 2, scope: !9477, file: !1, line: 8455, type: !1214)
!9483 = !DILocation(line: 8455, column: 16, scope: !9477)
!9484 = !DILocalVariable(name: "height", arg: 3, scope: !9477, file: !1, line: 8455, type: !1214)
!9485 = !DILocation(line: 8455, column: 35, scope: !9477)
!9486 = !DILocalVariable(name: "x", arg: 4, scope: !9477, file: !1, line: 8455, type: !1666)
!9487 = !DILocation(line: 8455, column: 56, scope: !9477)
!9488 = !DILocalVariable(name: "y", arg: 5, scope: !9477, file: !1, line: 8455, type: !1666)
!9489 = !DILocation(line: 8455, column: 72, scope: !9477)
!9490 = !DILocalVariable(name: "raise", arg: 6, scope: !9477, file: !1, line: 8456, type: !2117)
!9491 = !DILocation(line: 8456, column: 27, scope: !9477)
!9492 = !DILocalVariable(name: "status", scope: !9477, file: !1, line: 8459, type: !807)
!9493 = !DILocation(line: 8459, column: 5, scope: !9477)
!9494 = !DILocalVariable(name: "raise_info", scope: !9477, file: !1, line: 8462, type: !863)
!9495 = !DILocation(line: 8462, column: 5, scope: !9477)
!9496 = !DILocation(line: 8466, column: 7, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9477, file: !1, line: 8466, column: 7)
!9498 = !DILocation(line: 8466, column: 13, scope: !9497)
!9499 = !DILocation(line: 8466, column: 19, scope: !9497)
!9500 = !DILocation(line: 8466, column: 7, scope: !9477)
!9501 = !DILocation(line: 8467, column: 60, scope: !9497)
!9502 = !DILocation(line: 8467, column: 66, scope: !9497)
!9503 = !DILocation(line: 8467, column: 12, scope: !9497)
!9504 = !DILocation(line: 8467, column: 5, scope: !9497)
!9505 = !DILocation(line: 8468, column: 7, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9477, file: !1, line: 8468, column: 7)
!9507 = !DILocation(line: 8468, column: 13, scope: !9506)
!9508 = !DILocation(line: 8468, column: 20, scope: !9506)
!9509 = !DILocation(line: 8468, column: 7, scope: !9477)
!9510 = !DILocation(line: 8469, column: 5, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9506, file: !1, line: 8469, column: 5)
!9512 = !DILocation(line: 8470, column: 20, scope: !9477)
!9513 = !DILocation(line: 8470, column: 14, scope: !9477)
!9514 = !DILocation(line: 8470, column: 19, scope: !9477)
!9515 = !DILocation(line: 8471, column: 21, scope: !9477)
!9516 = !DILocation(line: 8471, column: 14, scope: !9477)
!9517 = !DILocation(line: 8471, column: 20, scope: !9477)
!9518 = !DILocation(line: 8472, column: 16, scope: !9477)
!9519 = !DILocation(line: 8472, column: 14, scope: !9477)
!9520 = !DILocation(line: 8472, column: 15, scope: !9477)
!9521 = !DILocation(line: 8473, column: 16, scope: !9477)
!9522 = !DILocation(line: 8473, column: 14, scope: !9477)
!9523 = !DILocation(line: 8473, column: 15, scope: !9477)
!9524 = !DILocation(line: 8474, column: 21, scope: !9477)
!9525 = !DILocation(line: 8474, column: 27, scope: !9477)
!9526 = !DILocation(line: 8474, column: 46, scope: !9477)
!9527 = !DILocation(line: 8474, column: 10, scope: !9477)
!9528 = !DILocation(line: 8474, column: 9, scope: !9477)
!9529 = !DILocation(line: 8475, column: 7, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9477, file: !1, line: 8475, column: 7)
!9531 = !DILocation(line: 8475, column: 14, scope: !9530)
!9532 = !DILocation(line: 8475, column: 7, scope: !9477)
!9533 = !DILocation(line: 8476, column: 22, scope: !9530)
!9534 = !DILocation(line: 8476, column: 28, scope: !9530)
!9535 = !DILocation(line: 8476, column: 39, scope: !9530)
!9536 = !DILocation(line: 8476, column: 45, scope: !9530)
!9537 = !DILocation(line: 8476, column: 53, scope: !9530)
!9538 = !DILocation(line: 8476, column: 5, scope: !9530)
!9539 = !DILocation(line: 8477, column: 10, scope: !9477)
!9540 = !DILocation(line: 8477, column: 3, scope: !9477)
!9541 = !DILocation(line: 8478, column: 1, scope: !9477)
!9542 = distinct !DISubprogram(name: "MagickRandomThresholdImage", scope: !1, file: !1, line: 8513, type: !1487, scopeLine: 8515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9543 = !DILocalVariable(name: "wand", arg: 1, scope: !9542, file: !1, line: 8513, type: !1143)
!9544 = !DILocation(line: 8513, column: 69, scope: !9542)
!9545 = !DILocalVariable(name: "low", arg: 2, scope: !9542, file: !1, line: 8514, type: !1325)
!9546 = !DILocation(line: 8514, column: 16, scope: !9542)
!9547 = !DILocalVariable(name: "high", arg: 3, scope: !9542, file: !1, line: 8514, type: !1325)
!9548 = !DILocation(line: 8514, column: 33, scope: !9542)
!9549 = !DILocalVariable(name: "status", scope: !9542, file: !1, line: 8517, type: !807)
!9550 = !DILocation(line: 8517, column: 5, scope: !9542)
!9551 = !DILocation(line: 8519, column: 44, scope: !9542)
!9552 = !DILocation(line: 8519, column: 65, scope: !9542)
!9553 = !DILocation(line: 8519, column: 69, scope: !9542)
!9554 = !DILocation(line: 8519, column: 10, scope: !9542)
!9555 = !DILocation(line: 8519, column: 9, scope: !9542)
!9556 = !DILocation(line: 8520, column: 10, scope: !9542)
!9557 = !DILocation(line: 8520, column: 3, scope: !9542)
!9558 = distinct !DISubprogram(name: "MagickRandomThresholdImageChannel", scope: !1, file: !1, line: 8523, type: !1505, scopeLine: 8525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9559 = !DILocalVariable(name: "wand", arg: 1, scope: !9558, file: !1, line: 8523, type: !1143)
!9560 = !DILocation(line: 8523, column: 76, scope: !9558)
!9561 = !DILocalVariable(name: "channel", arg: 2, scope: !9558, file: !1, line: 8524, type: !1507)
!9562 = !DILocation(line: 8524, column: 21, scope: !9558)
!9563 = !DILocalVariable(name: "low", arg: 3, scope: !9558, file: !1, line: 8524, type: !1325)
!9564 = !DILocation(line: 8524, column: 42, scope: !9558)
!9565 = !DILocalVariable(name: "high", arg: 4, scope: !9558, file: !1, line: 8524, type: !1325)
!9566 = !DILocation(line: 8524, column: 59, scope: !9558)
!9567 = !DILocalVariable(name: "threshold", scope: !9558, file: !1, line: 8527, type: !944)
!9568 = !DILocation(line: 8527, column: 5, scope: !9558)
!9569 = !DILocalVariable(name: "status", scope: !9558, file: !1, line: 8530, type: !807)
!9570 = !DILocation(line: 8530, column: 5, scope: !9558)
!9571 = !DILocation(line: 8534, column: 7, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9558, file: !1, line: 8534, column: 7)
!9573 = !DILocation(line: 8534, column: 13, scope: !9572)
!9574 = !DILocation(line: 8534, column: 19, scope: !9572)
!9575 = !DILocation(line: 8534, column: 7, scope: !9558)
!9576 = !DILocation(line: 8535, column: 60, scope: !9572)
!9577 = !DILocation(line: 8535, column: 66, scope: !9572)
!9578 = !DILocation(line: 8535, column: 12, scope: !9572)
!9579 = !DILocation(line: 8535, column: 5, scope: !9572)
!9580 = !DILocation(line: 8536, column: 7, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9558, file: !1, line: 8536, column: 7)
!9582 = !DILocation(line: 8536, column: 13, scope: !9581)
!9583 = !DILocation(line: 8536, column: 20, scope: !9581)
!9584 = !DILocation(line: 8536, column: 7, scope: !9558)
!9585 = !DILocation(line: 8537, column: 5, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9581, file: !1, line: 8537, column: 5)
!9587 = !DILocation(line: 8538, column: 29, scope: !9558)
!9588 = !DILocation(line: 8538, column: 61, scope: !9558)
!9589 = !DILocation(line: 8538, column: 65, scope: !9558)
!9590 = !DILocation(line: 8538, column: 10, scope: !9558)
!9591 = !DILocation(line: 8539, column: 38, scope: !9558)
!9592 = !DILocation(line: 8539, column: 44, scope: !9558)
!9593 = !DILocation(line: 8539, column: 51, scope: !9558)
!9594 = !DILocation(line: 8539, column: 59, scope: !9558)
!9595 = !DILocation(line: 8540, column: 5, scope: !9558)
!9596 = !DILocation(line: 8540, column: 11, scope: !9558)
!9597 = !DILocation(line: 8539, column: 10, scope: !9558)
!9598 = !DILocation(line: 8539, column: 9, scope: !9558)
!9599 = !DILocation(line: 8541, column: 7, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9558, file: !1, line: 8541, column: 7)
!9601 = !DILocation(line: 8541, column: 14, scope: !9600)
!9602 = !DILocation(line: 8541, column: 7, scope: !9558)
!9603 = !DILocation(line: 8542, column: 22, scope: !9600)
!9604 = !DILocation(line: 8542, column: 28, scope: !9600)
!9605 = !DILocation(line: 8542, column: 39, scope: !9600)
!9606 = !DILocation(line: 8542, column: 45, scope: !9600)
!9607 = !DILocation(line: 8542, column: 53, scope: !9600)
!9608 = !DILocation(line: 8542, column: 5, scope: !9600)
!9609 = !DILocation(line: 8543, column: 10, scope: !9558)
!9610 = !DILocation(line: 8543, column: 3, scope: !9558)
!9611 = !DILocation(line: 8544, column: 1, scope: !9558)
!9612 = distinct !DISubprogram(name: "MagickReadImage", scope: !1, file: !1, line: 8574, type: !2074, scopeLine: 8576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9613 = !DILocalVariable(name: "wand", arg: 1, scope: !9612, file: !1, line: 8574, type: !1143)
!9614 = !DILocation(line: 8574, column: 58, scope: !9612)
!9615 = !DILocalVariable(name: "filename", arg: 2, scope: !9612, file: !1, line: 8575, type: !924)
!9616 = !DILocation(line: 8575, column: 15, scope: !9612)
!9617 = !DILocalVariable(name: "images", scope: !9612, file: !1, line: 8578, type: !791)
!9618 = !DILocation(line: 8578, column: 6, scope: !9612)
!9619 = !DILocalVariable(name: "read_info", scope: !9612, file: !1, line: 8581, type: !1154)
!9620 = !DILocation(line: 8581, column: 6, scope: !9612)
!9621 = !DILocation(line: 8585, column: 7, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9612, file: !1, line: 8585, column: 7)
!9623 = !DILocation(line: 8585, column: 13, scope: !9622)
!9624 = !DILocation(line: 8585, column: 19, scope: !9622)
!9625 = !DILocation(line: 8585, column: 7, scope: !9612)
!9626 = !DILocation(line: 8586, column: 60, scope: !9622)
!9627 = !DILocation(line: 8586, column: 66, scope: !9622)
!9628 = !DILocation(line: 8586, column: 12, scope: !9622)
!9629 = !DILocation(line: 8586, column: 5, scope: !9622)
!9630 = !DILocation(line: 8587, column: 28, scope: !9612)
!9631 = !DILocation(line: 8587, column: 34, scope: !9612)
!9632 = !DILocation(line: 8587, column: 13, scope: !9612)
!9633 = !DILocation(line: 8587, column: 12, scope: !9612)
!9634 = !DILocation(line: 8588, column: 7, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9612, file: !1, line: 8588, column: 7)
!9636 = !DILocation(line: 8588, column: 16, scope: !9635)
!9637 = !DILocation(line: 8588, column: 7, scope: !9612)
!9638 = !DILocation(line: 8589, column: 29, scope: !9635)
!9639 = !DILocation(line: 8589, column: 40, scope: !9635)
!9640 = !DILocation(line: 8589, column: 49, scope: !9635)
!9641 = !DILocation(line: 8589, column: 12, scope: !9635)
!9642 = !DILocation(line: 8589, column: 5, scope: !9635)
!9643 = !DILocation(line: 8590, column: 20, scope: !9612)
!9644 = !DILocation(line: 8590, column: 30, scope: !9612)
!9645 = !DILocation(line: 8590, column: 36, scope: !9612)
!9646 = !DILocation(line: 8590, column: 10, scope: !9612)
!9647 = !DILocation(line: 8590, column: 9, scope: !9612)
!9648 = !DILocation(line: 8591, column: 30, scope: !9612)
!9649 = !DILocation(line: 8591, column: 13, scope: !9612)
!9650 = !DILocation(line: 8591, column: 12, scope: !9612)
!9651 = !DILocation(line: 8592, column: 7, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9612, file: !1, line: 8592, column: 7)
!9653 = !DILocation(line: 8592, column: 14, scope: !9652)
!9654 = !DILocation(line: 8592, column: 7, scope: !9612)
!9655 = !DILocation(line: 8593, column: 5, scope: !9652)
!9656 = !DILocation(line: 8594, column: 28, scope: !9612)
!9657 = !DILocation(line: 8594, column: 33, scope: !9612)
!9658 = !DILocation(line: 8594, column: 10, scope: !9612)
!9659 = !DILocation(line: 8594, column: 3, scope: !9612)
!9660 = !DILocation(line: 8595, column: 1, scope: !9612)
!9661 = distinct !DISubprogram(name: "MagickReadImageBlob", scope: !1, file: !1, line: 8624, type: !9035, scopeLine: 8626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9662 = !DILocalVariable(name: "wand", arg: 1, scope: !9661, file: !1, line: 8624, type: !1143)
!9663 = !DILocation(line: 8624, column: 62, scope: !9661)
!9664 = !DILocalVariable(name: "blob", arg: 2, scope: !9661, file: !1, line: 8625, type: !1212)
!9665 = !DILocation(line: 8625, column: 15, scope: !9661)
!9666 = !DILocalVariable(name: "length", arg: 3, scope: !9661, file: !1, line: 8625, type: !1214)
!9667 = !DILocation(line: 8625, column: 33, scope: !9661)
!9668 = !DILocalVariable(name: "images", scope: !9661, file: !1, line: 8628, type: !791)
!9669 = !DILocation(line: 8628, column: 6, scope: !9661)
!9670 = !DILocation(line: 8632, column: 7, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9661, file: !1, line: 8632, column: 7)
!9672 = !DILocation(line: 8632, column: 13, scope: !9671)
!9673 = !DILocation(line: 8632, column: 19, scope: !9671)
!9674 = !DILocation(line: 8632, column: 7, scope: !9661)
!9675 = !DILocation(line: 8633, column: 60, scope: !9671)
!9676 = !DILocation(line: 8633, column: 66, scope: !9671)
!9677 = !DILocation(line: 8633, column: 12, scope: !9671)
!9678 = !DILocation(line: 8633, column: 5, scope: !9671)
!9679 = !DILocation(line: 8634, column: 22, scope: !9661)
!9680 = !DILocation(line: 8634, column: 28, scope: !9661)
!9681 = !DILocation(line: 8634, column: 39, scope: !9661)
!9682 = !DILocation(line: 8634, column: 44, scope: !9661)
!9683 = !DILocation(line: 8634, column: 51, scope: !9661)
!9684 = !DILocation(line: 8634, column: 57, scope: !9661)
!9685 = !DILocation(line: 8634, column: 10, scope: !9661)
!9686 = !DILocation(line: 8634, column: 9, scope: !9661)
!9687 = !DILocation(line: 8635, column: 7, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9661, file: !1, line: 8635, column: 7)
!9689 = !DILocation(line: 8635, column: 14, scope: !9688)
!9690 = !DILocation(line: 8635, column: 7, scope: !9661)
!9691 = !DILocation(line: 8636, column: 5, scope: !9688)
!9692 = !DILocation(line: 8637, column: 28, scope: !9661)
!9693 = !DILocation(line: 8637, column: 33, scope: !9661)
!9694 = !DILocation(line: 8637, column: 10, scope: !9661)
!9695 = !DILocation(line: 8637, column: 3, scope: !9661)
!9696 = !DILocation(line: 8638, column: 1, scope: !9661)
!9697 = distinct !DISubprogram(name: "MagickReadImageFile", scope: !1, file: !1, line: 8665, type: !9083, scopeLine: 8666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9698 = !DILocalVariable(name: "wand", arg: 1, scope: !9697, file: !1, line: 8665, type: !1143)
!9699 = !DILocation(line: 8665, column: 62, scope: !9697)
!9700 = !DILocalVariable(name: "file", arg: 2, scope: !9697, file: !1, line: 8665, type: !1216)
!9701 = !DILocation(line: 8665, column: 73, scope: !9697)
!9702 = !DILocalVariable(name: "images", scope: !9697, file: !1, line: 8668, type: !791)
!9703 = !DILocation(line: 8668, column: 6, scope: !9697)
!9704 = !DILocalVariable(name: "read_info", scope: !9697, file: !1, line: 8671, type: !1154)
!9705 = !DILocation(line: 8671, column: 6, scope: !9697)
!9706 = !DILocation(line: 8676, column: 7, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9697, file: !1, line: 8676, column: 7)
!9708 = !DILocation(line: 8676, column: 13, scope: !9707)
!9709 = !DILocation(line: 8676, column: 19, scope: !9707)
!9710 = !DILocation(line: 8676, column: 7, scope: !9697)
!9711 = !DILocation(line: 8677, column: 60, scope: !9707)
!9712 = !DILocation(line: 8677, column: 66, scope: !9707)
!9713 = !DILocation(line: 8677, column: 12, scope: !9707)
!9714 = !DILocation(line: 8677, column: 5, scope: !9707)
!9715 = !DILocation(line: 8678, column: 28, scope: !9697)
!9716 = !DILocation(line: 8678, column: 34, scope: !9697)
!9717 = !DILocation(line: 8678, column: 13, scope: !9697)
!9718 = !DILocation(line: 8678, column: 12, scope: !9697)
!9719 = !DILocation(line: 8679, column: 20, scope: !9697)
!9720 = !DILocation(line: 8679, column: 30, scope: !9697)
!9721 = !DILocation(line: 8679, column: 3, scope: !9697)
!9722 = !DILocation(line: 8680, column: 20, scope: !9697)
!9723 = !DILocation(line: 8680, column: 30, scope: !9697)
!9724 = !DILocation(line: 8680, column: 36, scope: !9697)
!9725 = !DILocation(line: 8680, column: 10, scope: !9697)
!9726 = !DILocation(line: 8680, column: 9, scope: !9697)
!9727 = !DILocation(line: 8681, column: 30, scope: !9697)
!9728 = !DILocation(line: 8681, column: 13, scope: !9697)
!9729 = !DILocation(line: 8681, column: 12, scope: !9697)
!9730 = !DILocation(line: 8682, column: 7, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9697, file: !1, line: 8682, column: 7)
!9732 = !DILocation(line: 8682, column: 14, scope: !9731)
!9733 = !DILocation(line: 8682, column: 7, scope: !9697)
!9734 = !DILocation(line: 8683, column: 5, scope: !9731)
!9735 = !DILocation(line: 8684, column: 28, scope: !9697)
!9736 = !DILocation(line: 8684, column: 33, scope: !9697)
!9737 = !DILocation(line: 8684, column: 10, scope: !9697)
!9738 = !DILocation(line: 8684, column: 3, scope: !9697)
!9739 = !DILocation(line: 8685, column: 1, scope: !9697)
!9740 = distinct !DISubprogram(name: "MagickRemapImage", scope: !1, file: !1, line: 8716, type: !9741, scopeLine: 8718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{!807, !1143, !1456, !9743}
!9743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1298)
!9744 = !DILocalVariable(name: "wand", arg: 1, scope: !9740, file: !1, line: 8716, type: !1143)
!9745 = !DILocation(line: 8716, column: 59, scope: !9740)
!9746 = !DILocalVariable(name: "remap_wand", arg: 2, scope: !9740, file: !1, line: 8717, type: !1456)
!9747 = !DILocation(line: 8717, column: 21, scope: !9740)
!9748 = !DILocalVariable(name: "method", arg: 3, scope: !9740, file: !1, line: 8717, type: !9743)
!9749 = !DILocation(line: 8717, column: 51, scope: !9740)
!9750 = !DILocalVariable(name: "status", scope: !9740, file: !1, line: 8720, type: !807)
!9751 = !DILocation(line: 8720, column: 5, scope: !9740)
!9752 = !DILocalVariable(name: "quantize_info", scope: !9740, file: !1, line: 8723, type: !1287)
!9753 = !DILocation(line: 8723, column: 6, scope: !9740)
!9754 = !DILocation(line: 8727, column: 7, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9740, file: !1, line: 8727, column: 7)
!9756 = !DILocation(line: 8727, column: 13, scope: !9755)
!9757 = !DILocation(line: 8727, column: 19, scope: !9755)
!9758 = !DILocation(line: 8727, column: 7, scope: !9740)
!9759 = !DILocation(line: 8728, column: 60, scope: !9755)
!9760 = !DILocation(line: 8728, column: 66, scope: !9755)
!9761 = !DILocation(line: 8728, column: 12, scope: !9755)
!9762 = !DILocation(line: 8728, column: 5, scope: !9755)
!9763 = !DILocation(line: 8729, column: 8, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9740, file: !1, line: 8729, column: 7)
!9765 = !DILocation(line: 8729, column: 14, scope: !9764)
!9766 = !DILocation(line: 8729, column: 21, scope: !9764)
!9767 = !DILocation(line: 8729, column: 40, scope: !9764)
!9768 = !DILocation(line: 8730, column: 8, scope: !9764)
!9769 = !DILocation(line: 8730, column: 20, scope: !9764)
!9770 = !DILocation(line: 8730, column: 27, scope: !9764)
!9771 = !DILocation(line: 8729, column: 7, scope: !9740)
!9772 = !DILocation(line: 8731, column: 5, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9764, file: !1, line: 8731, column: 5)
!9774 = !DILocation(line: 8732, column: 37, scope: !9740)
!9775 = !DILocation(line: 8732, column: 43, scope: !9740)
!9776 = !DILocation(line: 8732, column: 17, scope: !9740)
!9777 = !DILocation(line: 8732, column: 16, scope: !9740)
!9778 = !DILocation(line: 8733, column: 32, scope: !9740)
!9779 = !DILocation(line: 8733, column: 3, scope: !9740)
!9780 = !DILocation(line: 8733, column: 18, scope: !9740)
!9781 = !DILocation(line: 8733, column: 31, scope: !9740)
!9782 = !DILocation(line: 8734, column: 7, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9740, file: !1, line: 8734, column: 7)
!9784 = !DILocation(line: 8734, column: 14, scope: !9783)
!9785 = !DILocation(line: 8734, column: 7, scope: !9740)
!9786 = !DILocation(line: 8735, column: 5, scope: !9783)
!9787 = !DILocation(line: 8735, column: 20, scope: !9783)
!9788 = !DILocation(line: 8735, column: 26, scope: !9783)
!9789 = !DILocation(line: 8736, column: 21, scope: !9740)
!9790 = !DILocation(line: 8736, column: 35, scope: !9740)
!9791 = !DILocation(line: 8736, column: 41, scope: !9740)
!9792 = !DILocation(line: 8736, column: 48, scope: !9740)
!9793 = !DILocation(line: 8736, column: 60, scope: !9740)
!9794 = !DILocation(line: 8736, column: 10, scope: !9740)
!9795 = !DILocation(line: 8736, column: 9, scope: !9740)
!9796 = !DILocation(line: 8737, column: 37, scope: !9740)
!9797 = !DILocation(line: 8737, column: 17, scope: !9740)
!9798 = !DILocation(line: 8737, column: 16, scope: !9740)
!9799 = !DILocation(line: 8738, column: 7, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9740, file: !1, line: 8738, column: 7)
!9801 = !DILocation(line: 8738, column: 14, scope: !9800)
!9802 = !DILocation(line: 8738, column: 7, scope: !9740)
!9803 = !DILocation(line: 8739, column: 22, scope: !9800)
!9804 = !DILocation(line: 8739, column: 28, scope: !9800)
!9805 = !DILocation(line: 8739, column: 39, scope: !9800)
!9806 = !DILocation(line: 8739, column: 45, scope: !9800)
!9807 = !DILocation(line: 8739, column: 53, scope: !9800)
!9808 = !DILocation(line: 8739, column: 5, scope: !9800)
!9809 = !DILocation(line: 8740, column: 10, scope: !9740)
!9810 = !DILocation(line: 8740, column: 3, scope: !9740)
!9811 = !DILocation(line: 8741, column: 1, scope: !9740)
!9812 = distinct !DISubprogram(name: "MagickRemoveImage", scope: !1, file: !1, line: 8767, type: !2240, scopeLine: 8768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9813 = !DILocalVariable(name: "wand", arg: 1, scope: !9812, file: !1, line: 8767, type: !1143)
!9814 = !DILocation(line: 8767, column: 60, scope: !9812)
!9815 = !DILocation(line: 8771, column: 7, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9812, file: !1, line: 8771, column: 7)
!9817 = !DILocation(line: 8771, column: 13, scope: !9816)
!9818 = !DILocation(line: 8771, column: 19, scope: !9816)
!9819 = !DILocation(line: 8771, column: 7, scope: !9812)
!9820 = !DILocation(line: 8772, column: 60, scope: !9816)
!9821 = !DILocation(line: 8772, column: 66, scope: !9816)
!9822 = !DILocation(line: 8772, column: 12, scope: !9816)
!9823 = !DILocation(line: 8772, column: 5, scope: !9816)
!9824 = !DILocation(line: 8773, column: 7, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9812, file: !1, line: 8773, column: 7)
!9826 = !DILocation(line: 8773, column: 13, scope: !9825)
!9827 = !DILocation(line: 8773, column: 20, scope: !9825)
!9828 = !DILocation(line: 8773, column: 7, scope: !9812)
!9829 = !DILocation(line: 8774, column: 5, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9825, file: !1, line: 8774, column: 5)
!9831 = !DILocation(line: 8775, column: 24, scope: !9812)
!9832 = !DILocation(line: 8775, column: 30, scope: !9812)
!9833 = !DILocation(line: 8775, column: 3, scope: !9812)
!9834 = !DILocation(line: 8776, column: 3, scope: !9812)
!9835 = !DILocation(line: 8777, column: 1, scope: !9812)
!9836 = distinct !DISubprogram(name: "MagickResampleImage", scope: !1, file: !1, line: 8821, type: !9837, scopeLine: 8824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{!807, !1143, !1325, !1325, !9839, !1325}
!9839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !876)
!9840 = !DILocalVariable(name: "wand", arg: 1, scope: !9836, file: !1, line: 8821, type: !1143)
!9841 = !DILocation(line: 8821, column: 62, scope: !9836)
!9842 = !DILocalVariable(name: "x_resolution", arg: 2, scope: !9836, file: !1, line: 8822, type: !1325)
!9843 = !DILocation(line: 8822, column: 16, scope: !9836)
!9844 = !DILocalVariable(name: "y_resolution", arg: 3, scope: !9836, file: !1, line: 8822, type: !1325)
!9845 = !DILocation(line: 8822, column: 42, scope: !9836)
!9846 = !DILocalVariable(name: "filter", arg: 4, scope: !9836, file: !1, line: 8822, type: !9839)
!9847 = !DILocation(line: 8822, column: 73, scope: !9836)
!9848 = !DILocalVariable(name: "blur", arg: 5, scope: !9836, file: !1, line: 8823, type: !1325)
!9849 = !DILocation(line: 8823, column: 16, scope: !9836)
!9850 = !DILocalVariable(name: "resample_image", scope: !9836, file: !1, line: 8826, type: !791)
!9851 = !DILocation(line: 8826, column: 6, scope: !9836)
!9852 = !DILocation(line: 8830, column: 7, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9836, file: !1, line: 8830, column: 7)
!9854 = !DILocation(line: 8830, column: 13, scope: !9853)
!9855 = !DILocation(line: 8830, column: 19, scope: !9853)
!9856 = !DILocation(line: 8830, column: 7, scope: !9836)
!9857 = !DILocation(line: 8831, column: 60, scope: !9853)
!9858 = !DILocation(line: 8831, column: 66, scope: !9853)
!9859 = !DILocation(line: 8831, column: 12, scope: !9853)
!9860 = !DILocation(line: 8831, column: 5, scope: !9853)
!9861 = !DILocation(line: 8832, column: 7, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9836, file: !1, line: 8832, column: 7)
!9863 = !DILocation(line: 8832, column: 13, scope: !9862)
!9864 = !DILocation(line: 8832, column: 20, scope: !9862)
!9865 = !DILocation(line: 8832, column: 7, scope: !9836)
!9866 = !DILocation(line: 8833, column: 5, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9862, file: !1, line: 8833, column: 5)
!9868 = !DILocation(line: 8834, column: 32, scope: !9836)
!9869 = !DILocation(line: 8834, column: 38, scope: !9836)
!9870 = !DILocation(line: 8834, column: 45, scope: !9836)
!9871 = !DILocation(line: 8834, column: 58, scope: !9836)
!9872 = !DILocation(line: 8834, column: 71, scope: !9836)
!9873 = !DILocation(line: 8835, column: 5, scope: !9836)
!9874 = !DILocation(line: 8835, column: 10, scope: !9836)
!9875 = !DILocation(line: 8835, column: 16, scope: !9836)
!9876 = !DILocation(line: 8834, column: 18, scope: !9836)
!9877 = !DILocation(line: 8834, column: 17, scope: !9836)
!9878 = !DILocation(line: 8836, column: 7, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9836, file: !1, line: 8836, column: 7)
!9880 = !DILocation(line: 8836, column: 22, scope: !9879)
!9881 = !DILocation(line: 8836, column: 7, scope: !9836)
!9882 = !DILocation(line: 8837, column: 5, scope: !9879)
!9883 = !DILocation(line: 8838, column: 23, scope: !9836)
!9884 = !DILocation(line: 8838, column: 29, scope: !9836)
!9885 = !DILocation(line: 8838, column: 36, scope: !9836)
!9886 = !DILocation(line: 8838, column: 3, scope: !9836)
!9887 = !DILocation(line: 8839, column: 3, scope: !9836)
!9888 = !DILocation(line: 8840, column: 1, scope: !9836)
!9889 = distinct !DISubprogram(name: "MagickResetImagePage", scope: !1, file: !1, line: 8867, type: !2074, scopeLine: 8869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9890 = !DILocalVariable(name: "wand", arg: 1, scope: !9889, file: !1, line: 8867, type: !1143)
!9891 = !DILocation(line: 8867, column: 63, scope: !9889)
!9892 = !DILocalVariable(name: "page", arg: 2, scope: !9889, file: !1, line: 8868, type: !924)
!9893 = !DILocation(line: 8868, column: 15, scope: !9889)
!9894 = !DILocation(line: 8872, column: 7, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9889, file: !1, line: 8872, column: 7)
!9896 = !DILocation(line: 8872, column: 13, scope: !9895)
!9897 = !DILocation(line: 8872, column: 19, scope: !9895)
!9898 = !DILocation(line: 8872, column: 7, scope: !9889)
!9899 = !DILocation(line: 8873, column: 60, scope: !9895)
!9900 = !DILocation(line: 8873, column: 66, scope: !9895)
!9901 = !DILocation(line: 8873, column: 12, scope: !9895)
!9902 = !DILocation(line: 8873, column: 5, scope: !9895)
!9903 = !DILocation(line: 8874, column: 7, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9889, file: !1, line: 8874, column: 7)
!9905 = !DILocation(line: 8874, column: 13, scope: !9904)
!9906 = !DILocation(line: 8874, column: 20, scope: !9904)
!9907 = !DILocation(line: 8874, column: 7, scope: !9889)
!9908 = !DILocation(line: 8875, column: 5, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9904, file: !1, line: 8875, column: 5)
!9910 = !DILocation(line: 8876, column: 8, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9889, file: !1, line: 8876, column: 7)
!9912 = !DILocation(line: 8876, column: 13, scope: !9911)
!9913 = !DILocation(line: 8876, column: 31, scope: !9911)
!9914 = !DILocation(line: 8876, column: 36, scope: !9911)
!9915 = !DILocation(line: 8876, column: 35, scope: !9911)
!9916 = !DILocation(line: 8876, column: 41, scope: !9911)
!9917 = !DILocation(line: 8876, column: 7, scope: !9889)
!9918 = !DILocation(line: 8878, column: 47, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9911, file: !1, line: 8877, column: 5)
!9920 = !DILocation(line: 8878, column: 53, scope: !9919)
!9921 = !DILocation(line: 8878, column: 61, scope: !9919)
!9922 = !DILocation(line: 8878, column: 14, scope: !9919)
!9923 = !DILocation(line: 8879, column: 7, scope: !9919)
!9924 = !DILocation(line: 8881, column: 25, scope: !9889)
!9925 = !DILocation(line: 8881, column: 31, scope: !9889)
!9926 = !DILocation(line: 8881, column: 38, scope: !9889)
!9927 = !DILocation(line: 8881, column: 10, scope: !9889)
!9928 = !DILocation(line: 8881, column: 3, scope: !9889)
!9929 = !DILocation(line: 8882, column: 1, scope: !9889)
!9930 = distinct !DISubprogram(name: "MagickResizeImage", scope: !1, file: !1, line: 8927, type: !9931, scopeLine: 8930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{!807, !1143, !1214, !1214, !9839, !1325}
!9933 = !DILocalVariable(name: "wand", arg: 1, scope: !9930, file: !1, line: 8927, type: !1143)
!9934 = !DILocation(line: 8927, column: 60, scope: !9930)
!9935 = !DILocalVariable(name: "columns", arg: 2, scope: !9930, file: !1, line: 8928, type: !1214)
!9936 = !DILocation(line: 8928, column: 16, scope: !9930)
!9937 = !DILocalVariable(name: "rows", arg: 3, scope: !9930, file: !1, line: 8928, type: !1214)
!9938 = !DILocation(line: 8928, column: 37, scope: !9930)
!9939 = !DILocalVariable(name: "filter", arg: 4, scope: !9930, file: !1, line: 8928, type: !9839)
!9940 = !DILocation(line: 8928, column: 60, scope: !9930)
!9941 = !DILocalVariable(name: "blur", arg: 5, scope: !9930, file: !1, line: 8929, type: !1325)
!9942 = !DILocation(line: 8929, column: 16, scope: !9930)
!9943 = !DILocalVariable(name: "resize_image", scope: !9930, file: !1, line: 8932, type: !791)
!9944 = !DILocation(line: 8932, column: 6, scope: !9930)
!9945 = !DILocation(line: 8936, column: 7, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9930, file: !1, line: 8936, column: 7)
!9947 = !DILocation(line: 8936, column: 13, scope: !9946)
!9948 = !DILocation(line: 8936, column: 19, scope: !9946)
!9949 = !DILocation(line: 8936, column: 7, scope: !9930)
!9950 = !DILocation(line: 8937, column: 60, scope: !9946)
!9951 = !DILocation(line: 8937, column: 66, scope: !9946)
!9952 = !DILocation(line: 8937, column: 12, scope: !9946)
!9953 = !DILocation(line: 8937, column: 5, scope: !9946)
!9954 = !DILocation(line: 8938, column: 7, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9930, file: !1, line: 8938, column: 7)
!9956 = !DILocation(line: 8938, column: 13, scope: !9955)
!9957 = !DILocation(line: 8938, column: 20, scope: !9955)
!9958 = !DILocation(line: 8938, column: 7, scope: !9930)
!9959 = !DILocation(line: 8939, column: 5, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9955, file: !1, line: 8939, column: 5)
!9961 = !DILocation(line: 8940, column: 28, scope: !9930)
!9962 = !DILocation(line: 8940, column: 34, scope: !9930)
!9963 = !DILocation(line: 8940, column: 41, scope: !9930)
!9964 = !DILocation(line: 8940, column: 49, scope: !9930)
!9965 = !DILocation(line: 8940, column: 54, scope: !9930)
!9966 = !DILocation(line: 8940, column: 61, scope: !9930)
!9967 = !DILocation(line: 8941, column: 5, scope: !9930)
!9968 = !DILocation(line: 8941, column: 11, scope: !9930)
!9969 = !DILocation(line: 8940, column: 16, scope: !9930)
!9970 = !DILocation(line: 8940, column: 15, scope: !9930)
!9971 = !DILocation(line: 8942, column: 7, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9930, file: !1, line: 8942, column: 7)
!9973 = !DILocation(line: 8942, column: 20, scope: !9972)
!9974 = !DILocation(line: 8942, column: 7, scope: !9930)
!9975 = !DILocation(line: 8943, column: 5, scope: !9972)
!9976 = !DILocation(line: 8944, column: 23, scope: !9930)
!9977 = !DILocation(line: 8944, column: 29, scope: !9930)
!9978 = !DILocation(line: 8944, column: 36, scope: !9930)
!9979 = !DILocation(line: 8944, column: 3, scope: !9930)
!9980 = !DILocation(line: 8945, column: 3, scope: !9930)
!9981 = !DILocation(line: 8946, column: 1, scope: !9930)
!9982 = distinct !DISubprogram(name: "MagickRollImage", scope: !1, file: !1, line: 8975, type: !9983, scopeLine: 8977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{!807, !1143, !1666, !1666}
!9985 = !DILocalVariable(name: "wand", arg: 1, scope: !9982, file: !1, line: 8975, type: !1143)
!9986 = !DILocation(line: 8975, column: 58, scope: !9982)
!9987 = !DILocalVariable(name: "x", arg: 2, scope: !9982, file: !1, line: 8975, type: !1666)
!9988 = !DILocation(line: 8975, column: 77, scope: !9982)
!9989 = !DILocalVariable(name: "y", arg: 3, scope: !9982, file: !1, line: 8976, type: !1666)
!9990 = !DILocation(line: 8976, column: 17, scope: !9982)
!9991 = !DILocalVariable(name: "roll_image", scope: !9982, file: !1, line: 8979, type: !791)
!9992 = !DILocation(line: 8979, column: 6, scope: !9982)
!9993 = !DILocation(line: 8983, column: 7, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9982, file: !1, line: 8983, column: 7)
!9995 = !DILocation(line: 8983, column: 13, scope: !9994)
!9996 = !DILocation(line: 8983, column: 19, scope: !9994)
!9997 = !DILocation(line: 8983, column: 7, scope: !9982)
!9998 = !DILocation(line: 8984, column: 60, scope: !9994)
!9999 = !DILocation(line: 8984, column: 66, scope: !9994)
!10000 = !DILocation(line: 8984, column: 12, scope: !9994)
!10001 = !DILocation(line: 8984, column: 5, scope: !9994)
!10002 = !DILocation(line: 8985, column: 7, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9982, file: !1, line: 8985, column: 7)
!10004 = !DILocation(line: 8985, column: 13, scope: !10003)
!10005 = !DILocation(line: 8985, column: 20, scope: !10003)
!10006 = !DILocation(line: 8985, column: 7, scope: !9982)
!10007 = !DILocation(line: 8986, column: 5, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10003, file: !1, line: 8986, column: 5)
!10009 = !DILocation(line: 8987, column: 24, scope: !9982)
!10010 = !DILocation(line: 8987, column: 30, scope: !9982)
!10011 = !DILocation(line: 8987, column: 37, scope: !9982)
!10012 = !DILocation(line: 8987, column: 39, scope: !9982)
!10013 = !DILocation(line: 8987, column: 41, scope: !9982)
!10014 = !DILocation(line: 8987, column: 47, scope: !9982)
!10015 = !DILocation(line: 8987, column: 14, scope: !9982)
!10016 = !DILocation(line: 8987, column: 13, scope: !9982)
!10017 = !DILocation(line: 8988, column: 7, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !9982, file: !1, line: 8988, column: 7)
!10019 = !DILocation(line: 8988, column: 18, scope: !10018)
!10020 = !DILocation(line: 8988, column: 7, scope: !9982)
!10021 = !DILocation(line: 8989, column: 5, scope: !10018)
!10022 = !DILocation(line: 8990, column: 23, scope: !9982)
!10023 = !DILocation(line: 8990, column: 29, scope: !9982)
!10024 = !DILocation(line: 8990, column: 36, scope: !9982)
!10025 = !DILocation(line: 8990, column: 3, scope: !9982)
!10026 = !DILocation(line: 8991, column: 3, scope: !9982)
!10027 = !DILocation(line: 8992, column: 1, scope: !9982)
!10028 = distinct !DISubprogram(name: "MagickRotateImage", scope: !1, file: !1, line: 9024, type: !10029, scopeLine: 9026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{!807, !1143, !2348, !1325}
!10031 = !DILocalVariable(name: "wand", arg: 1, scope: !10028, file: !1, line: 9024, type: !1143)
!10032 = !DILocation(line: 9024, column: 60, scope: !10028)
!10033 = !DILocalVariable(name: "background", arg: 2, scope: !10028, file: !1, line: 9025, type: !2348)
!10034 = !DILocation(line: 9025, column: 20, scope: !10028)
!10035 = !DILocalVariable(name: "degrees", arg: 3, scope: !10028, file: !1, line: 9025, type: !1325)
!10036 = !DILocation(line: 9025, column: 44, scope: !10028)
!10037 = !DILocalVariable(name: "rotate_image", scope: !10028, file: !1, line: 9028, type: !791)
!10038 = !DILocation(line: 9028, column: 6, scope: !10028)
!10039 = !DILocation(line: 9032, column: 7, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10028, file: !1, line: 9032, column: 7)
!10041 = !DILocation(line: 9032, column: 13, scope: !10040)
!10042 = !DILocation(line: 9032, column: 19, scope: !10040)
!10043 = !DILocation(line: 9032, column: 7, scope: !10028)
!10044 = !DILocation(line: 9033, column: 60, scope: !10040)
!10045 = !DILocation(line: 9033, column: 66, scope: !10040)
!10046 = !DILocation(line: 9033, column: 12, scope: !10040)
!10047 = !DILocation(line: 9033, column: 5, scope: !10040)
!10048 = !DILocation(line: 9034, column: 7, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10028, file: !1, line: 9034, column: 7)
!10050 = !DILocation(line: 9034, column: 13, scope: !10049)
!10051 = !DILocation(line: 9034, column: 20, scope: !10049)
!10052 = !DILocation(line: 9034, column: 7, scope: !10028)
!10053 = !DILocation(line: 9035, column: 5, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10049, file: !1, line: 9035, column: 5)
!10055 = !DILocation(line: 9036, column: 24, scope: !10028)
!10056 = !DILocation(line: 9036, column: 36, scope: !10028)
!10057 = !DILocation(line: 9036, column: 42, scope: !10028)
!10058 = !DILocation(line: 9036, column: 50, scope: !10028)
!10059 = !DILocation(line: 9036, column: 3, scope: !10028)
!10060 = !DILocation(line: 9037, column: 28, scope: !10028)
!10061 = !DILocation(line: 9037, column: 34, scope: !10028)
!10062 = !DILocation(line: 9037, column: 41, scope: !10028)
!10063 = !DILocation(line: 9037, column: 49, scope: !10028)
!10064 = !DILocation(line: 9037, column: 55, scope: !10028)
!10065 = !DILocation(line: 9037, column: 16, scope: !10028)
!10066 = !DILocation(line: 9037, column: 15, scope: !10028)
!10067 = !DILocation(line: 9038, column: 7, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10028, file: !1, line: 9038, column: 7)
!10069 = !DILocation(line: 9038, column: 20, scope: !10068)
!10070 = !DILocation(line: 9038, column: 7, scope: !10028)
!10071 = !DILocation(line: 9039, column: 5, scope: !10068)
!10072 = !DILocation(line: 9040, column: 23, scope: !10028)
!10073 = !DILocation(line: 9040, column: 29, scope: !10028)
!10074 = !DILocation(line: 9040, column: 36, scope: !10028)
!10075 = !DILocation(line: 9040, column: 3, scope: !10028)
!10076 = !DILocation(line: 9041, column: 3, scope: !10028)
!10077 = !DILocation(line: 9042, column: 1, scope: !10028)
!10078 = distinct !DISubprogram(name: "MagickRotationalBlurImage", scope: !1, file: !1, line: 9073, type: !2403, scopeLine: 9075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10079 = !DILocalVariable(name: "wand", arg: 1, scope: !10078, file: !1, line: 9073, type: !1143)
!10080 = !DILocation(line: 9073, column: 68, scope: !10078)
!10081 = !DILocalVariable(name: "angle", arg: 2, scope: !10078, file: !1, line: 9074, type: !1325)
!10082 = !DILocation(line: 9074, column: 16, scope: !10078)
!10083 = !DILocalVariable(name: "status", scope: !10078, file: !1, line: 9077, type: !807)
!10084 = !DILocation(line: 9077, column: 5, scope: !10078)
!10085 = !DILocation(line: 9079, column: 43, scope: !10078)
!10086 = !DILocation(line: 9079, column: 64, scope: !10078)
!10087 = !DILocation(line: 9079, column: 10, scope: !10078)
!10088 = !DILocation(line: 9079, column: 9, scope: !10078)
!10089 = !DILocation(line: 9080, column: 10, scope: !10078)
!10090 = !DILocation(line: 9080, column: 3, scope: !10078)
!10091 = distinct !DISubprogram(name: "MagickRotationalBlurImageChannel", scope: !1, file: !1, line: 9083, type: !5233, scopeLine: 9085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10092 = !DILocalVariable(name: "wand", arg: 1, scope: !10091, file: !1, line: 9083, type: !1143)
!10093 = !DILocation(line: 9083, column: 75, scope: !10091)
!10094 = !DILocalVariable(name: "channel", arg: 2, scope: !10091, file: !1, line: 9084, type: !1507)
!10095 = !DILocation(line: 9084, column: 21, scope: !10091)
!10096 = !DILocalVariable(name: "angle", arg: 3, scope: !10091, file: !1, line: 9084, type: !1325)
!10097 = !DILocation(line: 9084, column: 42, scope: !10091)
!10098 = !DILocalVariable(name: "blur_image", scope: !10091, file: !1, line: 9087, type: !791)
!10099 = !DILocation(line: 9087, column: 6, scope: !10091)
!10100 = !DILocation(line: 9091, column: 7, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10091, file: !1, line: 9091, column: 7)
!10102 = !DILocation(line: 9091, column: 13, scope: !10101)
!10103 = !DILocation(line: 9091, column: 19, scope: !10101)
!10104 = !DILocation(line: 9091, column: 7, scope: !10091)
!10105 = !DILocation(line: 9092, column: 60, scope: !10101)
!10106 = !DILocation(line: 9092, column: 66, scope: !10101)
!10107 = !DILocation(line: 9092, column: 12, scope: !10101)
!10108 = !DILocation(line: 9092, column: 5, scope: !10101)
!10109 = !DILocation(line: 9093, column: 7, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10091, file: !1, line: 9093, column: 7)
!10111 = !DILocation(line: 9093, column: 13, scope: !10110)
!10112 = !DILocation(line: 9093, column: 20, scope: !10110)
!10113 = !DILocation(line: 9093, column: 7, scope: !10091)
!10114 = !DILocation(line: 9094, column: 5, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10110, file: !1, line: 9094, column: 5)
!10116 = !DILocation(line: 9095, column: 41, scope: !10091)
!10117 = !DILocation(line: 9095, column: 47, scope: !10091)
!10118 = !DILocation(line: 9095, column: 54, scope: !10091)
!10119 = !DILocation(line: 9095, column: 62, scope: !10091)
!10120 = !DILocation(line: 9096, column: 5, scope: !10091)
!10121 = !DILocation(line: 9096, column: 11, scope: !10091)
!10122 = !DILocation(line: 9095, column: 14, scope: !10091)
!10123 = !DILocation(line: 9095, column: 13, scope: !10091)
!10124 = !DILocation(line: 9097, column: 7, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10091, file: !1, line: 9097, column: 7)
!10126 = !DILocation(line: 9097, column: 18, scope: !10125)
!10127 = !DILocation(line: 9097, column: 7, scope: !10091)
!10128 = !DILocation(line: 9098, column: 5, scope: !10125)
!10129 = !DILocation(line: 9099, column: 23, scope: !10091)
!10130 = !DILocation(line: 9099, column: 29, scope: !10091)
!10131 = !DILocation(line: 9099, column: 36, scope: !10091)
!10132 = !DILocation(line: 9099, column: 3, scope: !10091)
!10133 = !DILocation(line: 9100, column: 3, scope: !10091)
!10134 = !DILocation(line: 9101, column: 1, scope: !10091)
!10135 = distinct !DISubprogram(name: "MagickSampleImage", scope: !1, file: !1, line: 9132, type: !1555, scopeLine: 9134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10136 = !DILocalVariable(name: "wand", arg: 1, scope: !10135, file: !1, line: 9132, type: !1143)
!10137 = !DILocation(line: 9132, column: 60, scope: !10135)
!10138 = !DILocalVariable(name: "columns", arg: 2, scope: !10135, file: !1, line: 9133, type: !1214)
!10139 = !DILocation(line: 9133, column: 16, scope: !10135)
!10140 = !DILocalVariable(name: "rows", arg: 3, scope: !10135, file: !1, line: 9133, type: !1214)
!10141 = !DILocation(line: 9133, column: 37, scope: !10135)
!10142 = !DILocalVariable(name: "sample_image", scope: !10135, file: !1, line: 9136, type: !791)
!10143 = !DILocation(line: 9136, column: 6, scope: !10135)
!10144 = !DILocation(line: 9140, column: 7, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10135, file: !1, line: 9140, column: 7)
!10146 = !DILocation(line: 9140, column: 13, scope: !10145)
!10147 = !DILocation(line: 9140, column: 19, scope: !10145)
!10148 = !DILocation(line: 9140, column: 7, scope: !10135)
!10149 = !DILocation(line: 9141, column: 60, scope: !10145)
!10150 = !DILocation(line: 9141, column: 66, scope: !10145)
!10151 = !DILocation(line: 9141, column: 12, scope: !10145)
!10152 = !DILocation(line: 9141, column: 5, scope: !10145)
!10153 = !DILocation(line: 9142, column: 7, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10135, file: !1, line: 9142, column: 7)
!10155 = !DILocation(line: 9142, column: 13, scope: !10154)
!10156 = !DILocation(line: 9142, column: 20, scope: !10154)
!10157 = !DILocation(line: 9142, column: 7, scope: !10135)
!10158 = !DILocation(line: 9143, column: 5, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10154, file: !1, line: 9143, column: 5)
!10160 = !DILocation(line: 9144, column: 28, scope: !10135)
!10161 = !DILocation(line: 9144, column: 34, scope: !10135)
!10162 = !DILocation(line: 9144, column: 41, scope: !10135)
!10163 = !DILocation(line: 9144, column: 49, scope: !10135)
!10164 = !DILocation(line: 9144, column: 54, scope: !10135)
!10165 = !DILocation(line: 9144, column: 60, scope: !10135)
!10166 = !DILocation(line: 9144, column: 16, scope: !10135)
!10167 = !DILocation(line: 9144, column: 15, scope: !10135)
!10168 = !DILocation(line: 9145, column: 7, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10135, file: !1, line: 9145, column: 7)
!10170 = !DILocation(line: 9145, column: 20, scope: !10169)
!10171 = !DILocation(line: 9145, column: 7, scope: !10135)
!10172 = !DILocation(line: 9146, column: 5, scope: !10169)
!10173 = !DILocation(line: 9147, column: 23, scope: !10135)
!10174 = !DILocation(line: 9147, column: 29, scope: !10135)
!10175 = !DILocation(line: 9147, column: 36, scope: !10135)
!10176 = !DILocation(line: 9147, column: 3, scope: !10135)
!10177 = !DILocation(line: 9148, column: 3, scope: !10135)
!10178 = !DILocation(line: 9149, column: 1, scope: !10135)
!10179 = distinct !DISubprogram(name: "MagickScaleImage", scope: !1, file: !1, line: 9178, type: !1555, scopeLine: 9180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10180 = !DILocalVariable(name: "wand", arg: 1, scope: !10179, file: !1, line: 9178, type: !1143)
!10181 = !DILocation(line: 9178, column: 59, scope: !10179)
!10182 = !DILocalVariable(name: "columns", arg: 2, scope: !10179, file: !1, line: 9179, type: !1214)
!10183 = !DILocation(line: 9179, column: 16, scope: !10179)
!10184 = !DILocalVariable(name: "rows", arg: 3, scope: !10179, file: !1, line: 9179, type: !1214)
!10185 = !DILocation(line: 9179, column: 37, scope: !10179)
!10186 = !DILocalVariable(name: "scale_image", scope: !10179, file: !1, line: 9182, type: !791)
!10187 = !DILocation(line: 9182, column: 6, scope: !10179)
!10188 = !DILocation(line: 9186, column: 7, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10179, file: !1, line: 9186, column: 7)
!10190 = !DILocation(line: 9186, column: 13, scope: !10189)
!10191 = !DILocation(line: 9186, column: 19, scope: !10189)
!10192 = !DILocation(line: 9186, column: 7, scope: !10179)
!10193 = !DILocation(line: 9187, column: 60, scope: !10189)
!10194 = !DILocation(line: 9187, column: 66, scope: !10189)
!10195 = !DILocation(line: 9187, column: 12, scope: !10189)
!10196 = !DILocation(line: 9187, column: 5, scope: !10189)
!10197 = !DILocation(line: 9188, column: 7, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10179, file: !1, line: 9188, column: 7)
!10199 = !DILocation(line: 9188, column: 13, scope: !10198)
!10200 = !DILocation(line: 9188, column: 20, scope: !10198)
!10201 = !DILocation(line: 9188, column: 7, scope: !10179)
!10202 = !DILocation(line: 9189, column: 5, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10198, file: !1, line: 9189, column: 5)
!10204 = !DILocation(line: 9190, column: 26, scope: !10179)
!10205 = !DILocation(line: 9190, column: 32, scope: !10179)
!10206 = !DILocation(line: 9190, column: 39, scope: !10179)
!10207 = !DILocation(line: 9190, column: 47, scope: !10179)
!10208 = !DILocation(line: 9190, column: 52, scope: !10179)
!10209 = !DILocation(line: 9190, column: 58, scope: !10179)
!10210 = !DILocation(line: 9190, column: 15, scope: !10179)
!10211 = !DILocation(line: 9190, column: 14, scope: !10179)
!10212 = !DILocation(line: 9191, column: 7, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10179, file: !1, line: 9191, column: 7)
!10214 = !DILocation(line: 9191, column: 19, scope: !10213)
!10215 = !DILocation(line: 9191, column: 7, scope: !10179)
!10216 = !DILocation(line: 9192, column: 5, scope: !10213)
!10217 = !DILocation(line: 9193, column: 23, scope: !10179)
!10218 = !DILocation(line: 9193, column: 29, scope: !10179)
!10219 = !DILocation(line: 9193, column: 36, scope: !10179)
!10220 = !DILocation(line: 9193, column: 3, scope: !10179)
!10221 = !DILocation(line: 9194, column: 3, scope: !10179)
!10222 = !DILocation(line: 9195, column: 1, scope: !10179)
!10223 = distinct !DISubprogram(name: "MagickSegmentImage", scope: !1, file: !1, line: 9236, type: !10224, scopeLine: 9239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{!807, !1143, !9325, !2117, !1325, !1325}
!10226 = !DILocalVariable(name: "wand", arg: 1, scope: !10223, file: !1, line: 9236, type: !1143)
!10227 = !DILocation(line: 9236, column: 63, scope: !10223)
!10228 = !DILocalVariable(name: "colorspace", arg: 2, scope: !10223, file: !1, line: 9237, type: !9325)
!10229 = !DILocation(line: 9237, column: 24, scope: !10223)
!10230 = !DILocalVariable(name: "verbose", arg: 3, scope: !10223, file: !1, line: 9237, type: !2117)
!10231 = !DILocation(line: 9237, column: 59, scope: !10223)
!10232 = !DILocalVariable(name: "cluster_threshold", arg: 4, scope: !10223, file: !1, line: 9238, type: !1325)
!10233 = !DILocation(line: 9238, column: 16, scope: !10223)
!10234 = !DILocalVariable(name: "smooth_threshold", arg: 5, scope: !10223, file: !1, line: 9238, type: !1325)
!10235 = !DILocation(line: 9238, column: 47, scope: !10223)
!10236 = !DILocalVariable(name: "status", scope: !10223, file: !1, line: 9241, type: !807)
!10237 = !DILocation(line: 9241, column: 5, scope: !10223)
!10238 = !DILocation(line: 9245, column: 7, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10223, file: !1, line: 9245, column: 7)
!10240 = !DILocation(line: 9245, column: 13, scope: !10239)
!10241 = !DILocation(line: 9245, column: 19, scope: !10239)
!10242 = !DILocation(line: 9245, column: 7, scope: !10223)
!10243 = !DILocation(line: 9246, column: 60, scope: !10239)
!10244 = !DILocation(line: 9246, column: 66, scope: !10239)
!10245 = !DILocation(line: 9246, column: 12, scope: !10239)
!10246 = !DILocation(line: 9246, column: 5, scope: !10239)
!10247 = !DILocation(line: 9247, column: 7, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10223, file: !1, line: 9247, column: 7)
!10249 = !DILocation(line: 9247, column: 13, scope: !10248)
!10250 = !DILocation(line: 9247, column: 20, scope: !10248)
!10251 = !DILocation(line: 9247, column: 7, scope: !10223)
!10252 = !DILocation(line: 9248, column: 5, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10248, file: !1, line: 9248, column: 5)
!10254 = !DILocation(line: 9249, column: 23, scope: !10223)
!10255 = !DILocation(line: 9249, column: 29, scope: !10223)
!10256 = !DILocation(line: 9249, column: 36, scope: !10223)
!10257 = !DILocation(line: 9249, column: 47, scope: !10223)
!10258 = !DILocation(line: 9249, column: 55, scope: !10223)
!10259 = !DILocation(line: 9250, column: 5, scope: !10223)
!10260 = !DILocation(line: 9249, column: 10, scope: !10223)
!10261 = !DILocation(line: 9249, column: 9, scope: !10223)
!10262 = !DILocation(line: 9251, column: 7, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10223, file: !1, line: 9251, column: 7)
!10264 = !DILocation(line: 9251, column: 14, scope: !10263)
!10265 = !DILocation(line: 9251, column: 7, scope: !10223)
!10266 = !DILocation(line: 9252, column: 22, scope: !10263)
!10267 = !DILocation(line: 9252, column: 28, scope: !10263)
!10268 = !DILocation(line: 9252, column: 39, scope: !10263)
!10269 = !DILocation(line: 9252, column: 45, scope: !10263)
!10270 = !DILocation(line: 9252, column: 53, scope: !10263)
!10271 = !DILocation(line: 9252, column: 5, scope: !10263)
!10272 = !DILocation(line: 9253, column: 10, scope: !10223)
!10273 = !DILocation(line: 9253, column: 3, scope: !10223)
!10274 = !DILocation(line: 9254, column: 1, scope: !10223)
!10275 = distinct !DISubprogram(name: "MagickSelectiveBlurImage", scope: !1, file: !1, line: 9295, type: !7838, scopeLine: 9297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10276 = !DILocalVariable(name: "wand", arg: 1, scope: !10275, file: !1, line: 9295, type: !1143)
!10277 = !DILocation(line: 9295, column: 67, scope: !10275)
!10278 = !DILocalVariable(name: "radius", arg: 2, scope: !10275, file: !1, line: 9296, type: !1325)
!10279 = !DILocation(line: 9296, column: 16, scope: !10275)
!10280 = !DILocalVariable(name: "sigma", arg: 3, scope: !10275, file: !1, line: 9296, type: !1325)
!10281 = !DILocation(line: 9296, column: 36, scope: !10275)
!10282 = !DILocalVariable(name: "threshold", arg: 4, scope: !10275, file: !1, line: 9296, type: !1325)
!10283 = !DILocation(line: 9296, column: 55, scope: !10275)
!10284 = !DILocalVariable(name: "status", scope: !10275, file: !1, line: 9299, type: !807)
!10285 = !DILocation(line: 9299, column: 5, scope: !10275)
!10286 = !DILocation(line: 9301, column: 42, scope: !10275)
!10287 = !DILocation(line: 9301, column: 63, scope: !10275)
!10288 = !DILocation(line: 9301, column: 70, scope: !10275)
!10289 = !DILocation(line: 9302, column: 5, scope: !10275)
!10290 = !DILocation(line: 9301, column: 10, scope: !10275)
!10291 = !DILocation(line: 9301, column: 9, scope: !10275)
!10292 = !DILocation(line: 9303, column: 10, scope: !10275)
!10293 = !DILocation(line: 9303, column: 3, scope: !10275)
!10294 = distinct !DISubprogram(name: "MagickSelectiveBlurImageChannel", scope: !1, file: !1, line: 9306, type: !7859, scopeLine: 9309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10295 = !DILocalVariable(name: "wand", arg: 1, scope: !10294, file: !1, line: 9306, type: !1143)
!10296 = !DILocation(line: 9306, column: 74, scope: !10294)
!10297 = !DILocalVariable(name: "channel", arg: 2, scope: !10294, file: !1, line: 9307, type: !1507)
!10298 = !DILocation(line: 9307, column: 21, scope: !10294)
!10299 = !DILocalVariable(name: "radius", arg: 3, scope: !10294, file: !1, line: 9307, type: !1325)
!10300 = !DILocation(line: 9307, column: 42, scope: !10294)
!10301 = !DILocalVariable(name: "sigma", arg: 4, scope: !10294, file: !1, line: 9307, type: !1325)
!10302 = !DILocation(line: 9307, column: 62, scope: !10294)
!10303 = !DILocalVariable(name: "threshold", arg: 5, scope: !10294, file: !1, line: 9308, type: !1325)
!10304 = !DILocation(line: 9308, column: 16, scope: !10294)
!10305 = !DILocalVariable(name: "blur_image", scope: !10294, file: !1, line: 9311, type: !791)
!10306 = !DILocation(line: 9311, column: 6, scope: !10294)
!10307 = !DILocation(line: 9315, column: 7, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10294, file: !1, line: 9315, column: 7)
!10309 = !DILocation(line: 9315, column: 13, scope: !10308)
!10310 = !DILocation(line: 9315, column: 19, scope: !10308)
!10311 = !DILocation(line: 9315, column: 7, scope: !10294)
!10312 = !DILocation(line: 9316, column: 60, scope: !10308)
!10313 = !DILocation(line: 9316, column: 66, scope: !10308)
!10314 = !DILocation(line: 9316, column: 12, scope: !10308)
!10315 = !DILocation(line: 9316, column: 5, scope: !10308)
!10316 = !DILocation(line: 9317, column: 7, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10294, file: !1, line: 9317, column: 7)
!10318 = !DILocation(line: 9317, column: 13, scope: !10317)
!10319 = !DILocation(line: 9317, column: 20, scope: !10317)
!10320 = !DILocation(line: 9317, column: 7, scope: !10294)
!10321 = !DILocation(line: 9318, column: 5, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10317, file: !1, line: 9318, column: 5)
!10323 = !DILocation(line: 9319, column: 40, scope: !10294)
!10324 = !DILocation(line: 9319, column: 46, scope: !10294)
!10325 = !DILocation(line: 9319, column: 53, scope: !10294)
!10326 = !DILocation(line: 9319, column: 61, scope: !10294)
!10327 = !DILocation(line: 9319, column: 68, scope: !10294)
!10328 = !DILocation(line: 9320, column: 5, scope: !10294)
!10329 = !DILocation(line: 9320, column: 15, scope: !10294)
!10330 = !DILocation(line: 9320, column: 21, scope: !10294)
!10331 = !DILocation(line: 9319, column: 14, scope: !10294)
!10332 = !DILocation(line: 9319, column: 13, scope: !10294)
!10333 = !DILocation(line: 9321, column: 7, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10294, file: !1, line: 9321, column: 7)
!10335 = !DILocation(line: 9321, column: 18, scope: !10334)
!10336 = !DILocation(line: 9321, column: 7, scope: !10294)
!10337 = !DILocation(line: 9322, column: 5, scope: !10334)
!10338 = !DILocation(line: 9323, column: 23, scope: !10294)
!10339 = !DILocation(line: 9323, column: 29, scope: !10294)
!10340 = !DILocation(line: 9323, column: 36, scope: !10294)
!10341 = !DILocation(line: 9323, column: 3, scope: !10294)
!10342 = !DILocation(line: 9324, column: 3, scope: !10294)
!10343 = !DILocation(line: 9325, column: 1, scope: !10294)
!10344 = distinct !DISubprogram(name: "MagickSeparateImageChannel", scope: !1, file: !1, line: 9354, type: !2252, scopeLine: 9356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10345 = !DILocalVariable(name: "wand", arg: 1, scope: !10344, file: !1, line: 9354, type: !1143)
!10346 = !DILocation(line: 9354, column: 69, scope: !10344)
!10347 = !DILocalVariable(name: "channel", arg: 2, scope: !10344, file: !1, line: 9355, type: !1507)
!10348 = !DILocation(line: 9355, column: 21, scope: !10344)
!10349 = !DILocalVariable(name: "status", scope: !10344, file: !1, line: 9358, type: !807)
!10350 = !DILocation(line: 9358, column: 5, scope: !10344)
!10351 = !DILocation(line: 9362, column: 7, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10344, file: !1, line: 9362, column: 7)
!10353 = !DILocation(line: 9362, column: 13, scope: !10352)
!10354 = !DILocation(line: 9362, column: 19, scope: !10352)
!10355 = !DILocation(line: 9362, column: 7, scope: !10344)
!10356 = !DILocation(line: 9363, column: 60, scope: !10352)
!10357 = !DILocation(line: 9363, column: 66, scope: !10352)
!10358 = !DILocation(line: 9363, column: 12, scope: !10352)
!10359 = !DILocation(line: 9363, column: 5, scope: !10352)
!10360 = !DILocation(line: 9364, column: 7, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10344, file: !1, line: 9364, column: 7)
!10362 = !DILocation(line: 9364, column: 13, scope: !10361)
!10363 = !DILocation(line: 9364, column: 20, scope: !10361)
!10364 = !DILocation(line: 9364, column: 7, scope: !10344)
!10365 = !DILocation(line: 9365, column: 5, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10361, file: !1, line: 9365, column: 5)
!10367 = !DILocation(line: 9366, column: 31, scope: !10344)
!10368 = !DILocation(line: 9366, column: 37, scope: !10344)
!10369 = !DILocation(line: 9366, column: 44, scope: !10344)
!10370 = !DILocation(line: 9366, column: 10, scope: !10344)
!10371 = !DILocation(line: 9366, column: 9, scope: !10344)
!10372 = !DILocation(line: 9367, column: 7, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10344, file: !1, line: 9367, column: 7)
!10374 = !DILocation(line: 9367, column: 14, scope: !10373)
!10375 = !DILocation(line: 9367, column: 7, scope: !10344)
!10376 = !DILocation(line: 9368, column: 22, scope: !10373)
!10377 = !DILocation(line: 9368, column: 28, scope: !10373)
!10378 = !DILocation(line: 9368, column: 39, scope: !10373)
!10379 = !DILocation(line: 9368, column: 45, scope: !10373)
!10380 = !DILocation(line: 9368, column: 53, scope: !10373)
!10381 = !DILocation(line: 9368, column: 5, scope: !10373)
!10382 = !DILocation(line: 9369, column: 10, scope: !10344)
!10383 = !DILocation(line: 9369, column: 3, scope: !10344)
!10384 = !DILocation(line: 9370, column: 1, scope: !10344)
!10385 = distinct !DISubprogram(name: "MagickSepiaToneImage", scope: !1, file: !1, line: 9400, type: !2403, scopeLine: 9402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10386 = !DILocalVariable(name: "wand", arg: 1, scope: !10385, file: !1, line: 9400, type: !1143)
!10387 = !DILocation(line: 9400, column: 63, scope: !10385)
!10388 = !DILocalVariable(name: "threshold", arg: 2, scope: !10385, file: !1, line: 9401, type: !1325)
!10389 = !DILocation(line: 9401, column: 16, scope: !10385)
!10390 = !DILocalVariable(name: "sepia_image", scope: !10385, file: !1, line: 9404, type: !791)
!10391 = !DILocation(line: 9404, column: 6, scope: !10385)
!10392 = !DILocation(line: 9408, column: 7, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10385, file: !1, line: 9408, column: 7)
!10394 = !DILocation(line: 9408, column: 13, scope: !10393)
!10395 = !DILocation(line: 9408, column: 19, scope: !10393)
!10396 = !DILocation(line: 9408, column: 7, scope: !10385)
!10397 = !DILocation(line: 9409, column: 60, scope: !10393)
!10398 = !DILocation(line: 9409, column: 66, scope: !10393)
!10399 = !DILocation(line: 9409, column: 12, scope: !10393)
!10400 = !DILocation(line: 9409, column: 5, scope: !10393)
!10401 = !DILocation(line: 9410, column: 7, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10385, file: !1, line: 9410, column: 7)
!10403 = !DILocation(line: 9410, column: 13, scope: !10402)
!10404 = !DILocation(line: 9410, column: 20, scope: !10402)
!10405 = !DILocation(line: 9410, column: 7, scope: !10385)
!10406 = !DILocation(line: 9411, column: 5, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10402, file: !1, line: 9411, column: 5)
!10408 = !DILocation(line: 9412, column: 30, scope: !10385)
!10409 = !DILocation(line: 9412, column: 36, scope: !10385)
!10410 = !DILocation(line: 9412, column: 43, scope: !10385)
!10411 = !DILocation(line: 9412, column: 53, scope: !10385)
!10412 = !DILocation(line: 9412, column: 59, scope: !10385)
!10413 = !DILocation(line: 9412, column: 15, scope: !10385)
!10414 = !DILocation(line: 9412, column: 14, scope: !10385)
!10415 = !DILocation(line: 9413, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10385, file: !1, line: 9413, column: 7)
!10417 = !DILocation(line: 9413, column: 19, scope: !10416)
!10418 = !DILocation(line: 9413, column: 7, scope: !10385)
!10419 = !DILocation(line: 9414, column: 5, scope: !10416)
!10420 = !DILocation(line: 9415, column: 23, scope: !10385)
!10421 = !DILocation(line: 9415, column: 29, scope: !10385)
!10422 = !DILocation(line: 9415, column: 36, scope: !10385)
!10423 = !DILocation(line: 9415, column: 3, scope: !10385)
!10424 = !DILocation(line: 9416, column: 3, scope: !10385)
!10425 = !DILocation(line: 9417, column: 1, scope: !10385)
!10426 = distinct !DISubprogram(name: "MagickSetImage", scope: !1, file: !1, line: 9446, type: !1714, scopeLine: 9448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10427 = !DILocalVariable(name: "wand", arg: 1, scope: !10426, file: !1, line: 9446, type: !1143)
!10428 = !DILocation(line: 9446, column: 57, scope: !10426)
!10429 = !DILocalVariable(name: "set_wand", arg: 2, scope: !10426, file: !1, line: 9447, type: !1456)
!10430 = !DILocation(line: 9447, column: 21, scope: !10426)
!10431 = !DILocalVariable(name: "images", scope: !10426, file: !1, line: 9450, type: !791)
!10432 = !DILocation(line: 9450, column: 6, scope: !10426)
!10433 = !DILocation(line: 9454, column: 7, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10426, file: !1, line: 9454, column: 7)
!10435 = !DILocation(line: 9454, column: 13, scope: !10434)
!10436 = !DILocation(line: 9454, column: 19, scope: !10434)
!10437 = !DILocation(line: 9454, column: 7, scope: !10426)
!10438 = !DILocation(line: 9455, column: 60, scope: !10434)
!10439 = !DILocation(line: 9455, column: 66, scope: !10434)
!10440 = !DILocation(line: 9455, column: 12, scope: !10434)
!10441 = !DILocation(line: 9455, column: 5, scope: !10434)
!10442 = !DILocation(line: 9458, column: 7, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10426, file: !1, line: 9458, column: 7)
!10444 = !DILocation(line: 9458, column: 13, scope: !10443)
!10445 = !DILocation(line: 9458, column: 19, scope: !10443)
!10446 = !DILocation(line: 9458, column: 7, scope: !10426)
!10447 = !DILocation(line: 9459, column: 60, scope: !10443)
!10448 = !DILocation(line: 9459, column: 70, scope: !10443)
!10449 = !DILocation(line: 9459, column: 12, scope: !10443)
!10450 = !DILocation(line: 9459, column: 5, scope: !10443)
!10451 = !DILocation(line: 9460, column: 7, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10426, file: !1, line: 9460, column: 7)
!10453 = !DILocation(line: 9460, column: 17, scope: !10452)
!10454 = !DILocation(line: 9460, column: 24, scope: !10452)
!10455 = !DILocation(line: 9460, column: 7, scope: !10426)
!10456 = !DILocation(line: 9461, column: 5, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10452, file: !1, line: 9461, column: 5)
!10458 = !DILocation(line: 9462, column: 25, scope: !10426)
!10459 = !DILocation(line: 9462, column: 35, scope: !10426)
!10460 = !DILocation(line: 9462, column: 42, scope: !10426)
!10461 = !DILocation(line: 9462, column: 48, scope: !10426)
!10462 = !DILocation(line: 9462, column: 10, scope: !10426)
!10463 = !DILocation(line: 9462, column: 9, scope: !10426)
!10464 = !DILocation(line: 9463, column: 7, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10426, file: !1, line: 9463, column: 7)
!10466 = !DILocation(line: 9463, column: 14, scope: !10465)
!10467 = !DILocation(line: 9463, column: 7, scope: !10426)
!10468 = !DILocation(line: 9464, column: 5, scope: !10465)
!10469 = !DILocation(line: 9465, column: 23, scope: !10426)
!10470 = !DILocation(line: 9465, column: 29, scope: !10426)
!10471 = !DILocation(line: 9465, column: 36, scope: !10426)
!10472 = !DILocation(line: 9465, column: 3, scope: !10426)
!10473 = !DILocation(line: 9466, column: 3, scope: !10426)
!10474 = !DILocation(line: 9467, column: 1, scope: !10426)
!10475 = distinct !DISubprogram(name: "MagickSetImageAlphaChannel", scope: !1, file: !1, line: 9496, type: !10476, scopeLine: 9498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10476 = !DISubroutineType(types: !10477)
!10477 = !{!807, !1143, !10478}
!10478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10479)
!10479 = !DIDerivedType(tag: DW_TAG_typedef, name: "AlphaChannelType", file: !73, line: 45, baseType: !748)
!10480 = !DILocalVariable(name: "wand", arg: 1, scope: !10475, file: !1, line: 9496, type: !1143)
!10481 = !DILocation(line: 9496, column: 69, scope: !10475)
!10482 = !DILocalVariable(name: "alpha_type", arg: 2, scope: !10475, file: !1, line: 9497, type: !10478)
!10483 = !DILocation(line: 9497, column: 26, scope: !10475)
!10484 = !DILocation(line: 9501, column: 7, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10475, file: !1, line: 9501, column: 7)
!10486 = !DILocation(line: 9501, column: 13, scope: !10485)
!10487 = !DILocation(line: 9501, column: 19, scope: !10485)
!10488 = !DILocation(line: 9501, column: 7, scope: !10475)
!10489 = !DILocation(line: 9502, column: 60, scope: !10485)
!10490 = !DILocation(line: 9502, column: 66, scope: !10485)
!10491 = !DILocation(line: 9502, column: 12, scope: !10485)
!10492 = !DILocation(line: 9502, column: 5, scope: !10485)
!10493 = !DILocation(line: 9503, column: 7, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10475, file: !1, line: 9503, column: 7)
!10495 = !DILocation(line: 9503, column: 13, scope: !10494)
!10496 = !DILocation(line: 9503, column: 20, scope: !10494)
!10497 = !DILocation(line: 9503, column: 7, scope: !10475)
!10498 = !DILocation(line: 9504, column: 5, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10494, file: !1, line: 9504, column: 5)
!10500 = !DILocation(line: 9505, column: 31, scope: !10475)
!10501 = !DILocation(line: 9505, column: 37, scope: !10475)
!10502 = !DILocation(line: 9505, column: 44, scope: !10475)
!10503 = !DILocation(line: 9505, column: 10, scope: !10475)
!10504 = !DILocation(line: 9505, column: 3, scope: !10475)
!10505 = !DILocation(line: 9506, column: 1, scope: !10475)
!10506 = distinct !DISubprogram(name: "MagickSetImageBackgroundColor", scope: !1, file: !1, line: 9533, type: !2346, scopeLine: 9535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10507 = !DILocalVariable(name: "wand", arg: 1, scope: !10506, file: !1, line: 9533, type: !1143)
!10508 = !DILocation(line: 9533, column: 72, scope: !10506)
!10509 = !DILocalVariable(name: "background", arg: 2, scope: !10506, file: !1, line: 9534, type: !2348)
!10510 = !DILocation(line: 9534, column: 20, scope: !10506)
!10511 = !DILocation(line: 9538, column: 7, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10506, file: !1, line: 9538, column: 7)
!10513 = !DILocation(line: 9538, column: 13, scope: !10512)
!10514 = !DILocation(line: 9538, column: 19, scope: !10512)
!10515 = !DILocation(line: 9538, column: 7, scope: !10506)
!10516 = !DILocation(line: 9539, column: 60, scope: !10512)
!10517 = !DILocation(line: 9539, column: 66, scope: !10512)
!10518 = !DILocation(line: 9539, column: 12, scope: !10512)
!10519 = !DILocation(line: 9539, column: 5, scope: !10512)
!10520 = !DILocation(line: 9540, column: 7, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10506, file: !1, line: 9540, column: 7)
!10522 = !DILocation(line: 9540, column: 13, scope: !10521)
!10523 = !DILocation(line: 9540, column: 20, scope: !10521)
!10524 = !DILocation(line: 9540, column: 7, scope: !10506)
!10525 = !DILocation(line: 9541, column: 5, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !1, line: 9541, column: 5)
!10527 = !DILocation(line: 9542, column: 24, scope: !10506)
!10528 = !DILocation(line: 9542, column: 36, scope: !10506)
!10529 = !DILocation(line: 9542, column: 42, scope: !10506)
!10530 = !DILocation(line: 9542, column: 50, scope: !10506)
!10531 = !DILocation(line: 9542, column: 3, scope: !10506)
!10532 = !DILocation(line: 9543, column: 3, scope: !10506)
!10533 = !DILocation(line: 9544, column: 1, scope: !10506)
!10534 = distinct !DISubprogram(name: "MagickSetImageBias", scope: !1, file: !1, line: 9572, type: !2403, scopeLine: 9574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10535 = !DILocalVariable(name: "wand", arg: 1, scope: !10534, file: !1, line: 9572, type: !1143)
!10536 = !DILocation(line: 9572, column: 61, scope: !10534)
!10537 = !DILocalVariable(name: "bias", arg: 2, scope: !10534, file: !1, line: 9573, type: !1325)
!10538 = !DILocation(line: 9573, column: 16, scope: !10534)
!10539 = !DILocation(line: 9577, column: 7, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10534, file: !1, line: 9577, column: 7)
!10541 = !DILocation(line: 9577, column: 13, scope: !10540)
!10542 = !DILocation(line: 9577, column: 19, scope: !10540)
!10543 = !DILocation(line: 9577, column: 7, scope: !10534)
!10544 = !DILocation(line: 9578, column: 60, scope: !10540)
!10545 = !DILocation(line: 9578, column: 66, scope: !10540)
!10546 = !DILocation(line: 9578, column: 12, scope: !10540)
!10547 = !DILocation(line: 9578, column: 5, scope: !10540)
!10548 = !DILocation(line: 9579, column: 7, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10534, file: !1, line: 9579, column: 7)
!10550 = !DILocation(line: 9579, column: 13, scope: !10549)
!10551 = !DILocation(line: 9579, column: 20, scope: !10549)
!10552 = !DILocation(line: 9579, column: 7, scope: !10534)
!10553 = !DILocation(line: 9580, column: 5, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10549, file: !1, line: 9580, column: 5)
!10555 = !DILocation(line: 9581, column: 22, scope: !10534)
!10556 = !DILocation(line: 9581, column: 3, scope: !10534)
!10557 = !DILocation(line: 9581, column: 9, scope: !10534)
!10558 = !DILocation(line: 9581, column: 17, scope: !10534)
!10559 = !DILocation(line: 9581, column: 21, scope: !10534)
!10560 = !DILocation(line: 9582, column: 3, scope: !10534)
!10561 = !DILocation(line: 9583, column: 1, scope: !10534)
!10562 = distinct !DISubprogram(name: "MagickSetImageBluePrimary", scope: !1, file: !1, line: 9612, type: !1487, scopeLine: 9614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10563 = !DILocalVariable(name: "wand", arg: 1, scope: !10562, file: !1, line: 9612, type: !1143)
!10564 = !DILocation(line: 9612, column: 68, scope: !10562)
!10565 = !DILocalVariable(name: "x", arg: 2, scope: !10562, file: !1, line: 9613, type: !1325)
!10566 = !DILocation(line: 9613, column: 16, scope: !10562)
!10567 = !DILocalVariable(name: "y", arg: 3, scope: !10562, file: !1, line: 9613, type: !1325)
!10568 = !DILocation(line: 9613, column: 31, scope: !10562)
!10569 = !DILocation(line: 9617, column: 7, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10562, file: !1, line: 9617, column: 7)
!10571 = !DILocation(line: 9617, column: 13, scope: !10570)
!10572 = !DILocation(line: 9617, column: 19, scope: !10570)
!10573 = !DILocation(line: 9617, column: 7, scope: !10562)
!10574 = !DILocation(line: 9618, column: 60, scope: !10570)
!10575 = !DILocation(line: 9618, column: 66, scope: !10570)
!10576 = !DILocation(line: 9618, column: 12, scope: !10570)
!10577 = !DILocation(line: 9618, column: 5, scope: !10570)
!10578 = !DILocation(line: 9619, column: 7, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10562, file: !1, line: 9619, column: 7)
!10580 = !DILocation(line: 9619, column: 13, scope: !10579)
!10581 = !DILocation(line: 9619, column: 20, scope: !10579)
!10582 = !DILocation(line: 9619, column: 7, scope: !10562)
!10583 = !DILocation(line: 9620, column: 5, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10579, file: !1, line: 9620, column: 5)
!10585 = !DILocation(line: 9621, column: 45, scope: !10562)
!10586 = !DILocation(line: 9621, column: 3, scope: !10562)
!10587 = !DILocation(line: 9621, column: 9, scope: !10562)
!10588 = !DILocation(line: 9621, column: 17, scope: !10562)
!10589 = !DILocation(line: 9621, column: 30, scope: !10562)
!10590 = !DILocation(line: 9621, column: 43, scope: !10562)
!10591 = !DILocation(line: 9621, column: 44, scope: !10562)
!10592 = !DILocation(line: 9622, column: 45, scope: !10562)
!10593 = !DILocation(line: 9622, column: 3, scope: !10562)
!10594 = !DILocation(line: 9622, column: 9, scope: !10562)
!10595 = !DILocation(line: 9622, column: 17, scope: !10562)
!10596 = !DILocation(line: 9622, column: 30, scope: !10562)
!10597 = !DILocation(line: 9622, column: 43, scope: !10562)
!10598 = !DILocation(line: 9622, column: 44, scope: !10562)
!10599 = !DILocation(line: 9623, column: 3, scope: !10562)
!10600 = !DILocation(line: 9624, column: 1, scope: !10562)
!10601 = distinct !DISubprogram(name: "MagickSetImageBorderColor", scope: !1, file: !1, line: 9651, type: !2346, scopeLine: 9653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10602 = !DILocalVariable(name: "wand", arg: 1, scope: !10601, file: !1, line: 9651, type: !1143)
!10603 = !DILocation(line: 9651, column: 68, scope: !10601)
!10604 = !DILocalVariable(name: "border", arg: 2, scope: !10601, file: !1, line: 9652, type: !2348)
!10605 = !DILocation(line: 9652, column: 20, scope: !10601)
!10606 = !DILocation(line: 9656, column: 7, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10601, file: !1, line: 9656, column: 7)
!10608 = !DILocation(line: 9656, column: 13, scope: !10607)
!10609 = !DILocation(line: 9656, column: 19, scope: !10607)
!10610 = !DILocation(line: 9656, column: 7, scope: !10601)
!10611 = !DILocation(line: 9657, column: 60, scope: !10607)
!10612 = !DILocation(line: 9657, column: 66, scope: !10607)
!10613 = !DILocation(line: 9657, column: 12, scope: !10607)
!10614 = !DILocation(line: 9657, column: 5, scope: !10607)
!10615 = !DILocation(line: 9658, column: 7, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10601, file: !1, line: 9658, column: 7)
!10617 = !DILocation(line: 9658, column: 13, scope: !10616)
!10618 = !DILocation(line: 9658, column: 20, scope: !10616)
!10619 = !DILocation(line: 9658, column: 7, scope: !10601)
!10620 = !DILocation(line: 9659, column: 5, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10616, file: !1, line: 9659, column: 5)
!10622 = !DILocation(line: 9660, column: 24, scope: !10601)
!10623 = !DILocation(line: 9660, column: 32, scope: !10601)
!10624 = !DILocation(line: 9660, column: 38, scope: !10601)
!10625 = !DILocation(line: 9660, column: 46, scope: !10601)
!10626 = !DILocation(line: 9660, column: 3, scope: !10601)
!10627 = !DILocation(line: 9661, column: 3, scope: !10601)
!10628 = !DILocation(line: 9662, column: 1, scope: !10601)
!10629 = distinct !DISubprogram(name: "MagickSetImageChannelDepth", scope: !1, file: !1, line: 9691, type: !10630, scopeLine: 9693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{!807, !1143, !1507, !1214}
!10632 = !DILocalVariable(name: "wand", arg: 1, scope: !10629, file: !1, line: 9691, type: !1143)
!10633 = !DILocation(line: 9691, column: 69, scope: !10629)
!10634 = !DILocalVariable(name: "channel", arg: 2, scope: !10629, file: !1, line: 9692, type: !1507)
!10635 = !DILocation(line: 9692, column: 21, scope: !10629)
!10636 = !DILocalVariable(name: "depth", arg: 3, scope: !10629, file: !1, line: 9692, type: !1214)
!10637 = !DILocation(line: 9692, column: 42, scope: !10629)
!10638 = !DILocation(line: 9696, column: 7, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10629, file: !1, line: 9696, column: 7)
!10640 = !DILocation(line: 9696, column: 13, scope: !10639)
!10641 = !DILocation(line: 9696, column: 19, scope: !10639)
!10642 = !DILocation(line: 9696, column: 7, scope: !10629)
!10643 = !DILocation(line: 9697, column: 60, scope: !10639)
!10644 = !DILocation(line: 9697, column: 66, scope: !10639)
!10645 = !DILocation(line: 9697, column: 12, scope: !10639)
!10646 = !DILocation(line: 9697, column: 5, scope: !10639)
!10647 = !DILocation(line: 9698, column: 7, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10629, file: !1, line: 9698, column: 7)
!10649 = !DILocation(line: 9698, column: 13, scope: !10648)
!10650 = !DILocation(line: 9698, column: 20, scope: !10648)
!10651 = !DILocation(line: 9698, column: 7, scope: !10629)
!10652 = !DILocation(line: 9699, column: 5, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10648, file: !1, line: 9699, column: 5)
!10654 = !DILocation(line: 9700, column: 31, scope: !10629)
!10655 = !DILocation(line: 9700, column: 37, scope: !10629)
!10656 = !DILocation(line: 9700, column: 44, scope: !10629)
!10657 = !DILocation(line: 9700, column: 52, scope: !10629)
!10658 = !DILocation(line: 9700, column: 10, scope: !10629)
!10659 = !DILocation(line: 9700, column: 3, scope: !10629)
!10660 = !DILocation(line: 9701, column: 1, scope: !10629)
!10661 = distinct !DISubprogram(name: "MagickSetImageClipMask", scope: !1, file: !1, line: 9728, type: !1714, scopeLine: 9730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10662 = !DILocalVariable(name: "wand", arg: 1, scope: !10661, file: !1, line: 9728, type: !1143)
!10663 = !DILocation(line: 9728, column: 65, scope: !10661)
!10664 = !DILocalVariable(name: "clip_mask", arg: 2, scope: !10661, file: !1, line: 9729, type: !1456)
!10665 = !DILocation(line: 9729, column: 21, scope: !10661)
!10666 = !DILocation(line: 9733, column: 7, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10661, file: !1, line: 9733, column: 7)
!10668 = !DILocation(line: 9733, column: 13, scope: !10667)
!10669 = !DILocation(line: 9733, column: 19, scope: !10667)
!10670 = !DILocation(line: 9733, column: 7, scope: !10661)
!10671 = !DILocation(line: 9734, column: 60, scope: !10667)
!10672 = !DILocation(line: 9734, column: 66, scope: !10667)
!10673 = !DILocation(line: 9734, column: 12, scope: !10667)
!10674 = !DILocation(line: 9734, column: 5, scope: !10667)
!10675 = !DILocation(line: 9737, column: 7, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10661, file: !1, line: 9737, column: 7)
!10677 = !DILocation(line: 9737, column: 18, scope: !10676)
!10678 = !DILocation(line: 9737, column: 24, scope: !10676)
!10679 = !DILocation(line: 9737, column: 7, scope: !10661)
!10680 = !DILocation(line: 9738, column: 60, scope: !10676)
!10681 = !DILocation(line: 9738, column: 71, scope: !10676)
!10682 = !DILocation(line: 9738, column: 12, scope: !10676)
!10683 = !DILocation(line: 9738, column: 5, scope: !10676)
!10684 = !DILocation(line: 9739, column: 7, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10661, file: !1, line: 9739, column: 7)
!10686 = !DILocation(line: 9739, column: 18, scope: !10685)
!10687 = !DILocation(line: 9739, column: 25, scope: !10685)
!10688 = !DILocation(line: 9739, column: 7, scope: !10661)
!10689 = !DILocation(line: 9740, column: 5, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10685, file: !1, line: 9740, column: 5)
!10691 = !DILocation(line: 9741, column: 27, scope: !10661)
!10692 = !DILocation(line: 9741, column: 33, scope: !10661)
!10693 = !DILocation(line: 9741, column: 40, scope: !10661)
!10694 = !DILocation(line: 9741, column: 51, scope: !10661)
!10695 = !DILocation(line: 9741, column: 10, scope: !10661)
!10696 = !DILocation(line: 9741, column: 3, scope: !10661)
!10697 = !DILocation(line: 9742, column: 1, scope: !10661)
!10698 = distinct !DISubprogram(name: "MagickSetImageColor", scope: !1, file: !1, line: 9769, type: !2346, scopeLine: 9771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10699 = !DILocalVariable(name: "wand", arg: 1, scope: !10698, file: !1, line: 9769, type: !1143)
!10700 = !DILocation(line: 9769, column: 62, scope: !10698)
!10701 = !DILocalVariable(name: "color", arg: 2, scope: !10698, file: !1, line: 9770, type: !2348)
!10702 = !DILocation(line: 9770, column: 20, scope: !10698)
!10703 = !DILocalVariable(name: "status", scope: !10698, file: !1, line: 9773, type: !807)
!10704 = !DILocation(line: 9773, column: 5, scope: !10698)
!10705 = !DILocalVariable(name: "pixel", scope: !10698, file: !1, line: 9776, type: !1054)
!10706 = !DILocation(line: 9776, column: 5, scope: !10698)
!10707 = !DILocation(line: 9780, column: 7, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10698, file: !1, line: 9780, column: 7)
!10709 = !DILocation(line: 9780, column: 13, scope: !10708)
!10710 = !DILocation(line: 9780, column: 19, scope: !10708)
!10711 = !DILocation(line: 9780, column: 7, scope: !10698)
!10712 = !DILocation(line: 9781, column: 60, scope: !10708)
!10713 = !DILocation(line: 9781, column: 66, scope: !10708)
!10714 = !DILocation(line: 9781, column: 12, scope: !10708)
!10715 = !DILocation(line: 9781, column: 5, scope: !10708)
!10716 = !DILocation(line: 9782, column: 23, scope: !10698)
!10717 = !DILocation(line: 9782, column: 3, scope: !10698)
!10718 = !DILocation(line: 9783, column: 24, scope: !10698)
!10719 = !DILocation(line: 9783, column: 30, scope: !10698)
!10720 = !DILocation(line: 9783, column: 10, scope: !10698)
!10721 = !DILocation(line: 9783, column: 9, scope: !10698)
!10722 = !DILocation(line: 9784, column: 7, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10698, file: !1, line: 9784, column: 7)
!10724 = !DILocation(line: 9784, column: 14, scope: !10723)
!10725 = !DILocation(line: 9784, column: 7, scope: !10698)
!10726 = !DILocation(line: 9785, column: 22, scope: !10723)
!10727 = !DILocation(line: 9785, column: 28, scope: !10723)
!10728 = !DILocation(line: 9785, column: 39, scope: !10723)
!10729 = !DILocation(line: 9785, column: 45, scope: !10723)
!10730 = !DILocation(line: 9785, column: 53, scope: !10723)
!10731 = !DILocation(line: 9785, column: 5, scope: !10723)
!10732 = !DILocation(line: 9786, column: 10, scope: !10698)
!10733 = !DILocation(line: 9786, column: 3, scope: !10698)
!10734 = distinct !DISubprogram(name: "MagickSetImageColormapColor", scope: !1, file: !1, line: 9817, type: !10735, scopeLine: 9819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10735 = !DISubroutineType(types: !10736)
!10736 = !{!807, !1143, !1214, !2348}
!10737 = !DILocalVariable(name: "wand", arg: 1, scope: !10734, file: !1, line: 9817, type: !1143)
!10738 = !DILocation(line: 9817, column: 70, scope: !10734)
!10739 = !DILocalVariable(name: "index", arg: 2, scope: !10734, file: !1, line: 9818, type: !1214)
!10740 = !DILocation(line: 9818, column: 16, scope: !10734)
!10741 = !DILocalVariable(name: "color", arg: 3, scope: !10734, file: !1, line: 9818, type: !2348)
!10742 = !DILocation(line: 9818, column: 39, scope: !10734)
!10743 = !DILocation(line: 9822, column: 7, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10734, file: !1, line: 9822, column: 7)
!10745 = !DILocation(line: 9822, column: 13, scope: !10744)
!10746 = !DILocation(line: 9822, column: 19, scope: !10744)
!10747 = !DILocation(line: 9822, column: 7, scope: !10734)
!10748 = !DILocation(line: 9823, column: 60, scope: !10744)
!10749 = !DILocation(line: 9823, column: 66, scope: !10744)
!10750 = !DILocation(line: 9823, column: 12, scope: !10744)
!10751 = !DILocation(line: 9823, column: 5, scope: !10744)
!10752 = !DILocation(line: 9824, column: 7, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10734, file: !1, line: 9824, column: 7)
!10754 = !DILocation(line: 9824, column: 13, scope: !10753)
!10755 = !DILocation(line: 9824, column: 20, scope: !10753)
!10756 = !DILocation(line: 9824, column: 7, scope: !10734)
!10757 = !DILocation(line: 9825, column: 5, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10753, file: !1, line: 9825, column: 5)
!10759 = !DILocation(line: 9826, column: 8, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10734, file: !1, line: 9826, column: 7)
!10761 = !DILocation(line: 9826, column: 14, scope: !10760)
!10762 = !DILocation(line: 9826, column: 22, scope: !10760)
!10763 = !DILocation(line: 9826, column: 31, scope: !10760)
!10764 = !DILocation(line: 9826, column: 56, scope: !10760)
!10765 = !DILocation(line: 9827, column: 8, scope: !10760)
!10766 = !DILocation(line: 9827, column: 17, scope: !10760)
!10767 = !DILocation(line: 9827, column: 23, scope: !10760)
!10768 = !DILocation(line: 9827, column: 31, scope: !10760)
!10769 = !DILocation(line: 9827, column: 14, scope: !10760)
!10770 = !DILocation(line: 9826, column: 7, scope: !10734)
!10771 = !DILocation(line: 9828, column: 5, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10760, file: !1, line: 9828, column: 5)
!10773 = !DILocation(line: 9829, column: 24, scope: !10734)
!10774 = !DILocation(line: 9829, column: 30, scope: !10734)
!10775 = !DILocation(line: 9829, column: 36, scope: !10734)
!10776 = !DILocation(line: 9829, column: 44, scope: !10734)
!10777 = !DILocation(line: 9829, column: 53, scope: !10734)
!10778 = !DILocation(line: 9829, column: 52, scope: !10734)
!10779 = !DILocation(line: 9829, column: 3, scope: !10734)
!10780 = !DILocation(line: 9830, column: 20, scope: !10734)
!10781 = !DILocation(line: 9830, column: 26, scope: !10734)
!10782 = !DILocation(line: 9830, column: 10, scope: !10734)
!10783 = !DILocation(line: 9830, column: 3, scope: !10734)
!10784 = !DILocation(line: 9831, column: 1, scope: !10734)
!10785 = distinct !DISubprogram(name: "MagickSetImageColorspace", scope: !1, file: !1, line: 9862, type: !10786, scopeLine: 9864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10786 = !DISubroutineType(types: !10787)
!10787 = !{!807, !1143, !9325}
!10788 = !DILocalVariable(name: "wand", arg: 1, scope: !10785, file: !1, line: 9862, type: !1143)
!10789 = !DILocation(line: 9862, column: 67, scope: !10785)
!10790 = !DILocalVariable(name: "colorspace", arg: 2, scope: !10785, file: !1, line: 9863, type: !9325)
!10791 = !DILocation(line: 9863, column: 24, scope: !10785)
!10792 = !DILocation(line: 9867, column: 7, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10785, file: !1, line: 9867, column: 7)
!10794 = !DILocation(line: 9867, column: 13, scope: !10793)
!10795 = !DILocation(line: 9867, column: 19, scope: !10793)
!10796 = !DILocation(line: 9867, column: 7, scope: !10785)
!10797 = !DILocation(line: 9868, column: 60, scope: !10793)
!10798 = !DILocation(line: 9868, column: 66, scope: !10793)
!10799 = !DILocation(line: 9868, column: 12, scope: !10793)
!10800 = !DILocation(line: 9868, column: 5, scope: !10793)
!10801 = !DILocation(line: 9869, column: 7, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10785, file: !1, line: 9869, column: 7)
!10803 = !DILocation(line: 9869, column: 13, scope: !10802)
!10804 = !DILocation(line: 9869, column: 20, scope: !10802)
!10805 = !DILocation(line: 9869, column: 7, scope: !10785)
!10806 = !DILocation(line: 9870, column: 5, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10802, file: !1, line: 9870, column: 5)
!10808 = !DILocation(line: 9871, column: 29, scope: !10785)
!10809 = !DILocation(line: 9871, column: 35, scope: !10785)
!10810 = !DILocation(line: 9871, column: 42, scope: !10785)
!10811 = !DILocation(line: 9871, column: 10, scope: !10785)
!10812 = !DILocation(line: 9871, column: 3, scope: !10785)
!10813 = !DILocation(line: 9872, column: 1, scope: !10785)
!10814 = distinct !DISubprogram(name: "MagickSetImageCompose", scope: !1, file: !1, line: 9901, type: !10815, scopeLine: 9903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10815 = !DISubroutineType(types: !10816)
!10816 = !{!807, !1143, !3382}
!10817 = !DILocalVariable(name: "wand", arg: 1, scope: !10814, file: !1, line: 9901, type: !1143)
!10818 = !DILocation(line: 9901, column: 64, scope: !10814)
!10819 = !DILocalVariable(name: "compose", arg: 2, scope: !10814, file: !1, line: 9902, type: !3382)
!10820 = !DILocation(line: 9902, column: 27, scope: !10814)
!10821 = !DILocation(line: 9906, column: 7, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10814, file: !1, line: 9906, column: 7)
!10823 = !DILocation(line: 9906, column: 13, scope: !10822)
!10824 = !DILocation(line: 9906, column: 19, scope: !10822)
!10825 = !DILocation(line: 9906, column: 7, scope: !10814)
!10826 = !DILocation(line: 9907, column: 60, scope: !10822)
!10827 = !DILocation(line: 9907, column: 66, scope: !10822)
!10828 = !DILocation(line: 9907, column: 12, scope: !10822)
!10829 = !DILocation(line: 9907, column: 5, scope: !10822)
!10830 = !DILocation(line: 9908, column: 7, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10814, file: !1, line: 9908, column: 7)
!10832 = !DILocation(line: 9908, column: 13, scope: !10831)
!10833 = !DILocation(line: 9908, column: 20, scope: !10831)
!10834 = !DILocation(line: 9908, column: 7, scope: !10814)
!10835 = !DILocation(line: 9909, column: 5, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10831, file: !1, line: 9909, column: 5)
!10837 = !DILocation(line: 9910, column: 25, scope: !10814)
!10838 = !DILocation(line: 9910, column: 3, scope: !10814)
!10839 = !DILocation(line: 9910, column: 9, scope: !10814)
!10840 = !DILocation(line: 9910, column: 17, scope: !10814)
!10841 = !DILocation(line: 9910, column: 24, scope: !10814)
!10842 = !DILocation(line: 9911, column: 3, scope: !10814)
!10843 = !DILocation(line: 9912, column: 1, scope: !10814)
!10844 = distinct !DISubprogram(name: "MagickSetImageCompression", scope: !1, file: !1, line: 9939, type: !10845, scopeLine: 9941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{!807, !1143, !10847}
!10847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!10848 = !DILocalVariable(name: "wand", arg: 1, scope: !10844, file: !1, line: 9939, type: !1143)
!10849 = !DILocation(line: 9939, column: 68, scope: !10844)
!10850 = !DILocalVariable(name: "compression", arg: 2, scope: !10844, file: !1, line: 9940, type: !10847)
!10851 = !DILocation(line: 9940, column: 25, scope: !10844)
!10852 = !DILocation(line: 9944, column: 7, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10844, file: !1, line: 9944, column: 7)
!10854 = !DILocation(line: 9944, column: 13, scope: !10853)
!10855 = !DILocation(line: 9944, column: 19, scope: !10853)
!10856 = !DILocation(line: 9944, column: 7, scope: !10844)
!10857 = !DILocation(line: 9945, column: 60, scope: !10853)
!10858 = !DILocation(line: 9945, column: 66, scope: !10853)
!10859 = !DILocation(line: 9945, column: 12, scope: !10853)
!10860 = !DILocation(line: 9945, column: 5, scope: !10853)
!10861 = !DILocation(line: 9946, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10844, file: !1, line: 9946, column: 7)
!10863 = !DILocation(line: 9946, column: 13, scope: !10862)
!10864 = !DILocation(line: 9946, column: 20, scope: !10862)
!10865 = !DILocation(line: 9946, column: 7, scope: !10844)
!10866 = !DILocation(line: 9947, column: 5, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10862, file: !1, line: 9947, column: 5)
!10868 = !DILocation(line: 9948, column: 29, scope: !10844)
!10869 = !DILocation(line: 9948, column: 3, scope: !10844)
!10870 = !DILocation(line: 9948, column: 9, scope: !10844)
!10871 = !DILocation(line: 9948, column: 17, scope: !10844)
!10872 = !DILocation(line: 9948, column: 28, scope: !10844)
!10873 = !DILocation(line: 9949, column: 3, scope: !10844)
!10874 = !DILocation(line: 9950, column: 1, scope: !10844)
!10875 = distinct !DISubprogram(name: "MagickSetImageCompressionQuality", scope: !1, file: !1, line: 9977, type: !10876, scopeLine: 9979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!807, !1143, !1214}
!10878 = !DILocalVariable(name: "wand", arg: 1, scope: !10875, file: !1, line: 9977, type: !1143)
!10879 = !DILocation(line: 9977, column: 75, scope: !10875)
!10880 = !DILocalVariable(name: "quality", arg: 2, scope: !10875, file: !1, line: 9978, type: !1214)
!10881 = !DILocation(line: 9978, column: 16, scope: !10875)
!10882 = !DILocation(line: 9982, column: 7, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10875, file: !1, line: 9982, column: 7)
!10884 = !DILocation(line: 9982, column: 13, scope: !10883)
!10885 = !DILocation(line: 9982, column: 19, scope: !10883)
!10886 = !DILocation(line: 9982, column: 7, scope: !10875)
!10887 = !DILocation(line: 9983, column: 60, scope: !10883)
!10888 = !DILocation(line: 9983, column: 66, scope: !10883)
!10889 = !DILocation(line: 9983, column: 12, scope: !10883)
!10890 = !DILocation(line: 9983, column: 5, scope: !10883)
!10891 = !DILocation(line: 9984, column: 7, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10875, file: !1, line: 9984, column: 7)
!10893 = !DILocation(line: 9984, column: 13, scope: !10892)
!10894 = !DILocation(line: 9984, column: 20, scope: !10892)
!10895 = !DILocation(line: 9984, column: 7, scope: !10875)
!10896 = !DILocation(line: 9985, column: 5, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10892, file: !1, line: 9985, column: 5)
!10898 = !DILocation(line: 9986, column: 25, scope: !10875)
!10899 = !DILocation(line: 9986, column: 3, scope: !10875)
!10900 = !DILocation(line: 9986, column: 9, scope: !10875)
!10901 = !DILocation(line: 9986, column: 17, scope: !10875)
!10902 = !DILocation(line: 9986, column: 24, scope: !10875)
!10903 = !DILocation(line: 9987, column: 3, scope: !10875)
!10904 = !DILocation(line: 9988, column: 1, scope: !10875)
!10905 = distinct !DISubprogram(name: "MagickSetImageDelay", scope: !1, file: !1, line: 10015, type: !10876, scopeLine: 10017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10906 = !DILocalVariable(name: "wand", arg: 1, scope: !10905, file: !1, line: 10015, type: !1143)
!10907 = !DILocation(line: 10015, column: 62, scope: !10905)
!10908 = !DILocalVariable(name: "delay", arg: 2, scope: !10905, file: !1, line: 10016, type: !1214)
!10909 = !DILocation(line: 10016, column: 16, scope: !10905)
!10910 = !DILocation(line: 10020, column: 7, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10905, file: !1, line: 10020, column: 7)
!10912 = !DILocation(line: 10020, column: 13, scope: !10911)
!10913 = !DILocation(line: 10020, column: 19, scope: !10911)
!10914 = !DILocation(line: 10020, column: 7, scope: !10905)
!10915 = !DILocation(line: 10021, column: 60, scope: !10911)
!10916 = !DILocation(line: 10021, column: 66, scope: !10911)
!10917 = !DILocation(line: 10021, column: 12, scope: !10911)
!10918 = !DILocation(line: 10021, column: 5, scope: !10911)
!10919 = !DILocation(line: 10022, column: 7, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10905, file: !1, line: 10022, column: 7)
!10921 = !DILocation(line: 10022, column: 13, scope: !10920)
!10922 = !DILocation(line: 10022, column: 20, scope: !10920)
!10923 = !DILocation(line: 10022, column: 7, scope: !10905)
!10924 = !DILocation(line: 10023, column: 5, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10920, file: !1, line: 10023, column: 5)
!10926 = !DILocation(line: 10024, column: 23, scope: !10905)
!10927 = !DILocation(line: 10024, column: 3, scope: !10905)
!10928 = !DILocation(line: 10024, column: 9, scope: !10905)
!10929 = !DILocation(line: 10024, column: 17, scope: !10905)
!10930 = !DILocation(line: 10024, column: 22, scope: !10905)
!10931 = !DILocation(line: 10025, column: 3, scope: !10905)
!10932 = !DILocation(line: 10026, column: 1, scope: !10905)
!10933 = distinct !DISubprogram(name: "MagickSetImageDepth", scope: !1, file: !1, line: 10053, type: !10876, scopeLine: 10055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10934 = !DILocalVariable(name: "wand", arg: 1, scope: !10933, file: !1, line: 10053, type: !1143)
!10935 = !DILocation(line: 10053, column: 62, scope: !10933)
!10936 = !DILocalVariable(name: "depth", arg: 2, scope: !10933, file: !1, line: 10054, type: !1214)
!10937 = !DILocation(line: 10054, column: 16, scope: !10933)
!10938 = !DILocation(line: 10058, column: 7, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10933, file: !1, line: 10058, column: 7)
!10940 = !DILocation(line: 10058, column: 13, scope: !10939)
!10941 = !DILocation(line: 10058, column: 19, scope: !10939)
!10942 = !DILocation(line: 10058, column: 7, scope: !10933)
!10943 = !DILocation(line: 10059, column: 60, scope: !10939)
!10944 = !DILocation(line: 10059, column: 66, scope: !10939)
!10945 = !DILocation(line: 10059, column: 12, scope: !10939)
!10946 = !DILocation(line: 10059, column: 5, scope: !10939)
!10947 = !DILocation(line: 10060, column: 7, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10933, file: !1, line: 10060, column: 7)
!10949 = !DILocation(line: 10060, column: 13, scope: !10948)
!10950 = !DILocation(line: 10060, column: 20, scope: !10948)
!10951 = !DILocation(line: 10060, column: 7, scope: !10933)
!10952 = !DILocation(line: 10061, column: 5, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10948, file: !1, line: 10061, column: 5)
!10954 = !DILocation(line: 10062, column: 23, scope: !10933)
!10955 = !DILocation(line: 10062, column: 3, scope: !10933)
!10956 = !DILocation(line: 10062, column: 9, scope: !10933)
!10957 = !DILocation(line: 10062, column: 17, scope: !10933)
!10958 = !DILocation(line: 10062, column: 22, scope: !10933)
!10959 = !DILocation(line: 10063, column: 3, scope: !10933)
!10960 = !DILocation(line: 10064, column: 1, scope: !10933)
!10961 = distinct !DISubprogram(name: "MagickSetImageDispose", scope: !1, file: !1, line: 10091, type: !10962, scopeLine: 10093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10962 = !DISubroutineType(types: !10963)
!10963 = !{!807, !1143, !10964}
!10964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !886)
!10965 = !DILocalVariable(name: "wand", arg: 1, scope: !10961, file: !1, line: 10091, type: !1143)
!10966 = !DILocation(line: 10091, column: 64, scope: !10961)
!10967 = !DILocalVariable(name: "dispose", arg: 2, scope: !10961, file: !1, line: 10092, type: !10964)
!10968 = !DILocation(line: 10092, column: 21, scope: !10961)
!10969 = !DILocation(line: 10096, column: 7, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10961, file: !1, line: 10096, column: 7)
!10971 = !DILocation(line: 10096, column: 13, scope: !10970)
!10972 = !DILocation(line: 10096, column: 19, scope: !10970)
!10973 = !DILocation(line: 10096, column: 7, scope: !10961)
!10974 = !DILocation(line: 10097, column: 60, scope: !10970)
!10975 = !DILocation(line: 10097, column: 66, scope: !10970)
!10976 = !DILocation(line: 10097, column: 12, scope: !10970)
!10977 = !DILocation(line: 10097, column: 5, scope: !10970)
!10978 = !DILocation(line: 10098, column: 7, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10961, file: !1, line: 10098, column: 7)
!10980 = !DILocation(line: 10098, column: 13, scope: !10979)
!10981 = !DILocation(line: 10098, column: 20, scope: !10979)
!10982 = !DILocation(line: 10098, column: 7, scope: !10961)
!10983 = !DILocation(line: 10099, column: 5, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10979, file: !1, line: 10099, column: 5)
!10985 = !DILocation(line: 10100, column: 25, scope: !10961)
!10986 = !DILocation(line: 10100, column: 3, scope: !10961)
!10987 = !DILocation(line: 10100, column: 9, scope: !10961)
!10988 = !DILocation(line: 10100, column: 17, scope: !10961)
!10989 = !DILocation(line: 10100, column: 24, scope: !10961)
!10990 = !DILocation(line: 10101, column: 3, scope: !10961)
!10991 = !DILocation(line: 10102, column: 1, scope: !10961)
!10992 = distinct !DISubprogram(name: "MagickSetImageEndian", scope: !1, file: !1, line: 10129, type: !10993, scopeLine: 10131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!807, !1143, !10995}
!10995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!10996 = !DILocalVariable(name: "wand", arg: 1, scope: !10992, file: !1, line: 10129, type: !1143)
!10997 = !DILocation(line: 10129, column: 63, scope: !10992)
!10998 = !DILocalVariable(name: "endian", arg: 2, scope: !10992, file: !1, line: 10130, type: !10995)
!10999 = !DILocation(line: 10130, column: 20, scope: !10992)
!11000 = !DILocation(line: 10134, column: 7, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10992, file: !1, line: 10134, column: 7)
!11002 = !DILocation(line: 10134, column: 13, scope: !11001)
!11003 = !DILocation(line: 10134, column: 19, scope: !11001)
!11004 = !DILocation(line: 10134, column: 7, scope: !10992)
!11005 = !DILocation(line: 10135, column: 60, scope: !11001)
!11006 = !DILocation(line: 10135, column: 66, scope: !11001)
!11007 = !DILocation(line: 10135, column: 12, scope: !11001)
!11008 = !DILocation(line: 10135, column: 5, scope: !11001)
!11009 = !DILocation(line: 10136, column: 7, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !10992, file: !1, line: 10136, column: 7)
!11011 = !DILocation(line: 10136, column: 13, scope: !11010)
!11012 = !DILocation(line: 10136, column: 20, scope: !11010)
!11013 = !DILocation(line: 10136, column: 7, scope: !10992)
!11014 = !DILocation(line: 10137, column: 5, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11010, file: !1, line: 10137, column: 5)
!11016 = !DILocation(line: 10138, column: 24, scope: !10992)
!11017 = !DILocation(line: 10138, column: 3, scope: !10992)
!11018 = !DILocation(line: 10138, column: 9, scope: !10992)
!11019 = !DILocation(line: 10138, column: 17, scope: !10992)
!11020 = !DILocation(line: 10138, column: 23, scope: !10992)
!11021 = !DILocation(line: 10139, column: 3, scope: !10992)
!11022 = !DILocation(line: 10140, column: 1, scope: !10992)
!11023 = distinct !DISubprogram(name: "MagickSetImageExtent", scope: !1, file: !1, line: 10169, type: !1555, scopeLine: 10171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11024 = !DILocalVariable(name: "wand", arg: 1, scope: !11023, file: !1, line: 10169, type: !1143)
!11025 = !DILocation(line: 10169, column: 63, scope: !11023)
!11026 = !DILocalVariable(name: "columns", arg: 2, scope: !11023, file: !1, line: 10170, type: !1214)
!11027 = !DILocation(line: 10170, column: 16, scope: !11023)
!11028 = !DILocalVariable(name: "rows", arg: 3, scope: !11023, file: !1, line: 10170, type: !1214)
!11029 = !DILocation(line: 10170, column: 37, scope: !11023)
!11030 = !DILocation(line: 10174, column: 7, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 10174, column: 7)
!11032 = !DILocation(line: 10174, column: 13, scope: !11031)
!11033 = !DILocation(line: 10174, column: 19, scope: !11031)
!11034 = !DILocation(line: 10174, column: 7, scope: !11023)
!11035 = !DILocation(line: 10175, column: 60, scope: !11031)
!11036 = !DILocation(line: 10175, column: 66, scope: !11031)
!11037 = !DILocation(line: 10175, column: 12, scope: !11031)
!11038 = !DILocation(line: 10175, column: 5, scope: !11031)
!11039 = !DILocation(line: 10176, column: 7, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 10176, column: 7)
!11041 = !DILocation(line: 10176, column: 13, scope: !11040)
!11042 = !DILocation(line: 10176, column: 20, scope: !11040)
!11043 = !DILocation(line: 10176, column: 7, scope: !11023)
!11044 = !DILocation(line: 10177, column: 5, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11040, file: !1, line: 10177, column: 5)
!11046 = !DILocation(line: 10178, column: 25, scope: !11023)
!11047 = !DILocation(line: 10178, column: 31, scope: !11023)
!11048 = !DILocation(line: 10178, column: 38, scope: !11023)
!11049 = !DILocation(line: 10178, column: 46, scope: !11023)
!11050 = !DILocation(line: 10178, column: 10, scope: !11023)
!11051 = !DILocation(line: 10178, column: 3, scope: !11023)
!11052 = !DILocation(line: 10179, column: 1, scope: !11023)
!11053 = distinct !DISubprogram(name: "MagickSetImageFilename", scope: !1, file: !1, line: 10207, type: !2074, scopeLine: 10209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11054 = !DILocalVariable(name: "wand", arg: 1, scope: !11053, file: !1, line: 10207, type: !1143)
!11055 = !DILocation(line: 10207, column: 65, scope: !11053)
!11056 = !DILocalVariable(name: "filename", arg: 2, scope: !11053, file: !1, line: 10208, type: !924)
!11057 = !DILocation(line: 10208, column: 15, scope: !11053)
!11058 = !DILocation(line: 10212, column: 7, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11053, file: !1, line: 10212, column: 7)
!11060 = !DILocation(line: 10212, column: 13, scope: !11059)
!11061 = !DILocation(line: 10212, column: 19, scope: !11059)
!11062 = !DILocation(line: 10212, column: 7, scope: !11053)
!11063 = !DILocation(line: 10213, column: 60, scope: !11059)
!11064 = !DILocation(line: 10213, column: 66, scope: !11059)
!11065 = !DILocation(line: 10213, column: 12, scope: !11059)
!11066 = !DILocation(line: 10213, column: 5, scope: !11059)
!11067 = !DILocation(line: 10214, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11053, file: !1, line: 10214, column: 7)
!11069 = !DILocation(line: 10214, column: 13, scope: !11068)
!11070 = !DILocation(line: 10214, column: 20, scope: !11068)
!11071 = !DILocation(line: 10214, column: 7, scope: !11053)
!11072 = !DILocation(line: 10215, column: 5, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11068, file: !1, line: 10215, column: 5)
!11074 = !DILocation(line: 10216, column: 7, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11053, file: !1, line: 10216, column: 7)
!11076 = !DILocation(line: 10216, column: 16, scope: !11075)
!11077 = !DILocation(line: 10216, column: 7, scope: !11053)
!11078 = !DILocation(line: 10217, column: 29, scope: !11075)
!11079 = !DILocation(line: 10217, column: 35, scope: !11075)
!11080 = !DILocation(line: 10217, column: 43, scope: !11075)
!11081 = !DILocation(line: 10217, column: 52, scope: !11075)
!11082 = !DILocation(line: 10217, column: 12, scope: !11075)
!11083 = !DILocation(line: 10217, column: 5, scope: !11075)
!11084 = !DILocation(line: 10218, column: 3, scope: !11053)
!11085 = !DILocation(line: 10219, column: 1, scope: !11053)
!11086 = distinct !DISubprogram(name: "MagickSetImageFormat", scope: !1, file: !1, line: 10247, type: !2074, scopeLine: 10249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11087 = !DILocalVariable(name: "wand", arg: 1, scope: !11086, file: !1, line: 10247, type: !1143)
!11088 = !DILocation(line: 10247, column: 63, scope: !11086)
!11089 = !DILocalVariable(name: "format", arg: 2, scope: !11086, file: !1, line: 10248, type: !924)
!11090 = !DILocation(line: 10248, column: 15, scope: !11086)
!11091 = !DILocalVariable(name: "magick_info", scope: !11086, file: !1, line: 10251, type: !1402)
!11092 = !DILocation(line: 10251, column: 6, scope: !11086)
!11093 = !DILocation(line: 10255, column: 7, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11086, file: !1, line: 10255, column: 7)
!11095 = !DILocation(line: 10255, column: 13, scope: !11094)
!11096 = !DILocation(line: 10255, column: 19, scope: !11094)
!11097 = !DILocation(line: 10255, column: 7, scope: !11086)
!11098 = !DILocation(line: 10256, column: 60, scope: !11094)
!11099 = !DILocation(line: 10256, column: 66, scope: !11094)
!11100 = !DILocation(line: 10256, column: 12, scope: !11094)
!11101 = !DILocation(line: 10256, column: 5, scope: !11094)
!11102 = !DILocation(line: 10257, column: 7, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11086, file: !1, line: 10257, column: 7)
!11104 = !DILocation(line: 10257, column: 13, scope: !11103)
!11105 = !DILocation(line: 10257, column: 20, scope: !11103)
!11106 = !DILocation(line: 10257, column: 7, scope: !11086)
!11107 = !DILocation(line: 10258, column: 5, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11103, file: !1, line: 10258, column: 5)
!11109 = !DILocation(line: 10259, column: 8, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11086, file: !1, line: 10259, column: 7)
!11111 = !DILocation(line: 10259, column: 15, scope: !11110)
!11112 = !DILocation(line: 10259, column: 33, scope: !11110)
!11113 = !DILocation(line: 10259, column: 38, scope: !11110)
!11114 = !DILocation(line: 10259, column: 37, scope: !11110)
!11115 = !DILocation(line: 10259, column: 45, scope: !11110)
!11116 = !DILocation(line: 10259, column: 7, scope: !11086)
!11117 = !DILocation(line: 10261, column: 8, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11110, file: !1, line: 10260, column: 5)
!11119 = !DILocation(line: 10261, column: 14, scope: !11118)
!11120 = !DILocation(line: 10261, column: 22, scope: !11118)
!11121 = !DILocation(line: 10261, column: 7, scope: !11118)
!11122 = !DILocation(line: 10261, column: 28, scope: !11118)
!11123 = !DILocation(line: 10262, column: 7, scope: !11118)
!11124 = !DILocation(line: 10264, column: 29, scope: !11086)
!11125 = !DILocation(line: 10264, column: 36, scope: !11086)
!11126 = !DILocation(line: 10264, column: 42, scope: !11086)
!11127 = !DILocation(line: 10264, column: 15, scope: !11086)
!11128 = !DILocation(line: 10264, column: 14, scope: !11086)
!11129 = !DILocation(line: 10265, column: 7, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11086, file: !1, line: 10265, column: 7)
!11131 = !DILocation(line: 10265, column: 19, scope: !11130)
!11132 = !DILocation(line: 10265, column: 7, scope: !11086)
!11133 = !DILocation(line: 10266, column: 5, scope: !11130)
!11134 = !DILocation(line: 10267, column: 24, scope: !11086)
!11135 = !DILocation(line: 10267, column: 30, scope: !11086)
!11136 = !DILocation(line: 10267, column: 3, scope: !11086)
!11137 = !DILocation(line: 10268, column: 27, scope: !11086)
!11138 = !DILocation(line: 10268, column: 33, scope: !11086)
!11139 = !DILocation(line: 10268, column: 41, scope: !11086)
!11140 = !DILocation(line: 10268, column: 48, scope: !11086)
!11141 = !DILocation(line: 10268, column: 10, scope: !11086)
!11142 = !DILocation(line: 10269, column: 3, scope: !11086)
!11143 = !DILocation(line: 10270, column: 1, scope: !11086)
!11144 = distinct !DISubprogram(name: "MagickSetImageFuzz", scope: !1, file: !1, line: 10297, type: !2403, scopeLine: 10299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11145 = !DILocalVariable(name: "wand", arg: 1, scope: !11144, file: !1, line: 10297, type: !1143)
!11146 = !DILocation(line: 10297, column: 61, scope: !11144)
!11147 = !DILocalVariable(name: "fuzz", arg: 2, scope: !11144, file: !1, line: 10298, type: !1325)
!11148 = !DILocation(line: 10298, column: 16, scope: !11144)
!11149 = !DILocation(line: 10302, column: 7, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11144, file: !1, line: 10302, column: 7)
!11151 = !DILocation(line: 10302, column: 13, scope: !11150)
!11152 = !DILocation(line: 10302, column: 19, scope: !11150)
!11153 = !DILocation(line: 10302, column: 7, scope: !11144)
!11154 = !DILocation(line: 10303, column: 60, scope: !11150)
!11155 = !DILocation(line: 10303, column: 66, scope: !11150)
!11156 = !DILocation(line: 10303, column: 12, scope: !11150)
!11157 = !DILocation(line: 10303, column: 5, scope: !11150)
!11158 = !DILocation(line: 10304, column: 7, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11144, file: !1, line: 10304, column: 7)
!11160 = !DILocation(line: 10304, column: 13, scope: !11159)
!11161 = !DILocation(line: 10304, column: 20, scope: !11159)
!11162 = !DILocation(line: 10304, column: 7, scope: !11144)
!11163 = !DILocation(line: 10305, column: 5, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11159, file: !1, line: 10305, column: 5)
!11165 = !DILocation(line: 10306, column: 22, scope: !11144)
!11166 = !DILocation(line: 10306, column: 3, scope: !11144)
!11167 = !DILocation(line: 10306, column: 9, scope: !11144)
!11168 = !DILocation(line: 10306, column: 17, scope: !11144)
!11169 = !DILocation(line: 10306, column: 21, scope: !11144)
!11170 = !DILocation(line: 10307, column: 3, scope: !11144)
!11171 = !DILocation(line: 10308, column: 1, scope: !11144)
!11172 = distinct !DISubprogram(name: "MagickSetImageGamma", scope: !1, file: !1, line: 10335, type: !2403, scopeLine: 10337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11173 = !DILocalVariable(name: "wand", arg: 1, scope: !11172, file: !1, line: 10335, type: !1143)
!11174 = !DILocation(line: 10335, column: 62, scope: !11172)
!11175 = !DILocalVariable(name: "gamma", arg: 2, scope: !11172, file: !1, line: 10336, type: !1325)
!11176 = !DILocation(line: 10336, column: 16, scope: !11172)
!11177 = !DILocation(line: 10340, column: 7, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11172, file: !1, line: 10340, column: 7)
!11179 = !DILocation(line: 10340, column: 13, scope: !11178)
!11180 = !DILocation(line: 10340, column: 19, scope: !11178)
!11181 = !DILocation(line: 10340, column: 7, scope: !11172)
!11182 = !DILocation(line: 10341, column: 60, scope: !11178)
!11183 = !DILocation(line: 10341, column: 66, scope: !11178)
!11184 = !DILocation(line: 10341, column: 12, scope: !11178)
!11185 = !DILocation(line: 10341, column: 5, scope: !11178)
!11186 = !DILocation(line: 10342, column: 7, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11172, file: !1, line: 10342, column: 7)
!11188 = !DILocation(line: 10342, column: 13, scope: !11187)
!11189 = !DILocation(line: 10342, column: 20, scope: !11187)
!11190 = !DILocation(line: 10342, column: 7, scope: !11172)
!11191 = !DILocation(line: 10343, column: 5, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11187, file: !1, line: 10343, column: 5)
!11193 = !DILocation(line: 10344, column: 23, scope: !11172)
!11194 = !DILocation(line: 10344, column: 3, scope: !11172)
!11195 = !DILocation(line: 10344, column: 9, scope: !11172)
!11196 = !DILocation(line: 10344, column: 17, scope: !11172)
!11197 = !DILocation(line: 10344, column: 22, scope: !11172)
!11198 = !DILocation(line: 10345, column: 3, scope: !11172)
!11199 = !DILocation(line: 10346, column: 1, scope: !11172)
!11200 = distinct !DISubprogram(name: "MagickSetImageGravity", scope: !1, file: !1, line: 10374, type: !11201, scopeLine: 10376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11201 = !DISubroutineType(types: !11202)
!11202 = !{!807, !1143, !11203}
!11203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!11204 = !DILocalVariable(name: "wand", arg: 1, scope: !11200, file: !1, line: 10374, type: !1143)
!11205 = !DILocation(line: 10374, column: 64, scope: !11200)
!11206 = !DILocalVariable(name: "gravity", arg: 2, scope: !11200, file: !1, line: 10375, type: !11203)
!11207 = !DILocation(line: 10375, column: 21, scope: !11200)
!11208 = !DILocation(line: 10379, column: 7, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11200, file: !1, line: 10379, column: 7)
!11210 = !DILocation(line: 10379, column: 13, scope: !11209)
!11211 = !DILocation(line: 10379, column: 19, scope: !11209)
!11212 = !DILocation(line: 10379, column: 7, scope: !11200)
!11213 = !DILocation(line: 10380, column: 60, scope: !11209)
!11214 = !DILocation(line: 10380, column: 66, scope: !11209)
!11215 = !DILocation(line: 10380, column: 12, scope: !11209)
!11216 = !DILocation(line: 10380, column: 5, scope: !11209)
!11217 = !DILocation(line: 10381, column: 7, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11200, file: !1, line: 10381, column: 7)
!11219 = !DILocation(line: 10381, column: 13, scope: !11218)
!11220 = !DILocation(line: 10381, column: 20, scope: !11218)
!11221 = !DILocation(line: 10381, column: 7, scope: !11200)
!11222 = !DILocation(line: 10382, column: 5, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11218, file: !1, line: 10382, column: 5)
!11224 = !DILocation(line: 10383, column: 25, scope: !11200)
!11225 = !DILocation(line: 10383, column: 3, scope: !11200)
!11226 = !DILocation(line: 10383, column: 9, scope: !11200)
!11227 = !DILocation(line: 10383, column: 17, scope: !11200)
!11228 = !DILocation(line: 10383, column: 24, scope: !11200)
!11229 = !DILocation(line: 10384, column: 3, scope: !11200)
!11230 = !DILocation(line: 10385, column: 1, scope: !11200)
!11231 = distinct !DISubprogram(name: "MagickSetImageGreenPrimary", scope: !1, file: !1, line: 10416, type: !1487, scopeLine: 10418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11232 = !DILocalVariable(name: "wand", arg: 1, scope: !11231, file: !1, line: 10416, type: !1143)
!11233 = !DILocation(line: 10416, column: 69, scope: !11231)
!11234 = !DILocalVariable(name: "x", arg: 2, scope: !11231, file: !1, line: 10417, type: !1325)
!11235 = !DILocation(line: 10417, column: 16, scope: !11231)
!11236 = !DILocalVariable(name: "y", arg: 3, scope: !11231, file: !1, line: 10417, type: !1325)
!11237 = !DILocation(line: 10417, column: 31, scope: !11231)
!11238 = !DILocation(line: 10421, column: 7, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11231, file: !1, line: 10421, column: 7)
!11240 = !DILocation(line: 10421, column: 13, scope: !11239)
!11241 = !DILocation(line: 10421, column: 19, scope: !11239)
!11242 = !DILocation(line: 10421, column: 7, scope: !11231)
!11243 = !DILocation(line: 10422, column: 60, scope: !11239)
!11244 = !DILocation(line: 10422, column: 66, scope: !11239)
!11245 = !DILocation(line: 10422, column: 12, scope: !11239)
!11246 = !DILocation(line: 10422, column: 5, scope: !11239)
!11247 = !DILocation(line: 10423, column: 7, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11231, file: !1, line: 10423, column: 7)
!11249 = !DILocation(line: 10423, column: 13, scope: !11248)
!11250 = !DILocation(line: 10423, column: 20, scope: !11248)
!11251 = !DILocation(line: 10423, column: 7, scope: !11231)
!11252 = !DILocation(line: 10424, column: 5, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 10424, column: 5)
!11254 = !DILocation(line: 10425, column: 46, scope: !11231)
!11255 = !DILocation(line: 10425, column: 3, scope: !11231)
!11256 = !DILocation(line: 10425, column: 9, scope: !11231)
!11257 = !DILocation(line: 10425, column: 17, scope: !11231)
!11258 = !DILocation(line: 10425, column: 30, scope: !11231)
!11259 = !DILocation(line: 10425, column: 44, scope: !11231)
!11260 = !DILocation(line: 10425, column: 45, scope: !11231)
!11261 = !DILocation(line: 10426, column: 46, scope: !11231)
!11262 = !DILocation(line: 10426, column: 3, scope: !11231)
!11263 = !DILocation(line: 10426, column: 9, scope: !11231)
!11264 = !DILocation(line: 10426, column: 17, scope: !11231)
!11265 = !DILocation(line: 10426, column: 30, scope: !11231)
!11266 = !DILocation(line: 10426, column: 44, scope: !11231)
!11267 = !DILocation(line: 10426, column: 45, scope: !11231)
!11268 = !DILocation(line: 10427, column: 3, scope: !11231)
!11269 = !DILocation(line: 10428, column: 1, scope: !11231)
!11270 = distinct !DISubprogram(name: "MagickSetImageInterlaceScheme", scope: !1, file: !1, line: 10456, type: !11271, scopeLine: 10458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11271 = !DISubroutineType(types: !11272)
!11272 = !{!807, !1143, !11273}
!11273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!11274 = !DILocalVariable(name: "wand", arg: 1, scope: !11270, file: !1, line: 10456, type: !1143)
!11275 = !DILocation(line: 10456, column: 72, scope: !11270)
!11276 = !DILocalVariable(name: "interlace", arg: 2, scope: !11270, file: !1, line: 10457, type: !11273)
!11277 = !DILocation(line: 10457, column: 23, scope: !11270)
!11278 = !DILocation(line: 10461, column: 7, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11270, file: !1, line: 10461, column: 7)
!11280 = !DILocation(line: 10461, column: 13, scope: !11279)
!11281 = !DILocation(line: 10461, column: 19, scope: !11279)
!11282 = !DILocation(line: 10461, column: 7, scope: !11270)
!11283 = !DILocation(line: 10462, column: 60, scope: !11279)
!11284 = !DILocation(line: 10462, column: 66, scope: !11279)
!11285 = !DILocation(line: 10462, column: 12, scope: !11279)
!11286 = !DILocation(line: 10462, column: 5, scope: !11279)
!11287 = !DILocation(line: 10463, column: 7, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11270, file: !1, line: 10463, column: 7)
!11289 = !DILocation(line: 10463, column: 13, scope: !11288)
!11290 = !DILocation(line: 10463, column: 20, scope: !11288)
!11291 = !DILocation(line: 10463, column: 7, scope: !11270)
!11292 = !DILocation(line: 10464, column: 5, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11288, file: !1, line: 10464, column: 5)
!11294 = !DILocation(line: 10465, column: 27, scope: !11270)
!11295 = !DILocation(line: 10465, column: 3, scope: !11270)
!11296 = !DILocation(line: 10465, column: 9, scope: !11270)
!11297 = !DILocation(line: 10465, column: 17, scope: !11270)
!11298 = !DILocation(line: 10465, column: 26, scope: !11270)
!11299 = !DILocation(line: 10466, column: 3, scope: !11270)
!11300 = !DILocation(line: 10467, column: 1, scope: !11270)
!11301 = distinct !DISubprogram(name: "MagickSetImageInterpolateMethod", scope: !1, file: !1, line: 10495, type: !11302, scopeLine: 10497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{!807, !1143, !11304}
!11304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!11305 = !DILocalVariable(name: "wand", arg: 1, scope: !11301, file: !1, line: 10495, type: !1143)
!11306 = !DILocation(line: 10495, column: 74, scope: !11301)
!11307 = !DILocalVariable(name: "method", arg: 2, scope: !11301, file: !1, line: 10496, type: !11304)
!11308 = !DILocation(line: 10496, column: 32, scope: !11301)
!11309 = !DILocation(line: 10500, column: 7, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11301, file: !1, line: 10500, column: 7)
!11311 = !DILocation(line: 10500, column: 13, scope: !11310)
!11312 = !DILocation(line: 10500, column: 19, scope: !11310)
!11313 = !DILocation(line: 10500, column: 7, scope: !11301)
!11314 = !DILocation(line: 10501, column: 60, scope: !11310)
!11315 = !DILocation(line: 10501, column: 66, scope: !11310)
!11316 = !DILocation(line: 10501, column: 12, scope: !11310)
!11317 = !DILocation(line: 10501, column: 5, scope: !11310)
!11318 = !DILocation(line: 10502, column: 7, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11301, file: !1, line: 10502, column: 7)
!11320 = !DILocation(line: 10502, column: 13, scope: !11319)
!11321 = !DILocation(line: 10502, column: 20, scope: !11319)
!11322 = !DILocation(line: 10502, column: 7, scope: !11301)
!11323 = !DILocation(line: 10503, column: 5, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11319, file: !1, line: 10503, column: 5)
!11325 = !DILocation(line: 10504, column: 29, scope: !11301)
!11326 = !DILocation(line: 10504, column: 3, scope: !11301)
!11327 = !DILocation(line: 10504, column: 9, scope: !11301)
!11328 = !DILocation(line: 10504, column: 17, scope: !11301)
!11329 = !DILocation(line: 10504, column: 28, scope: !11301)
!11330 = !DILocation(line: 10505, column: 3, scope: !11301)
!11331 = !DILocation(line: 10506, column: 1, scope: !11301)
!11332 = distinct !DISubprogram(name: "MagickSetImageIterations", scope: !1, file: !1, line: 10533, type: !10876, scopeLine: 10535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11333 = !DILocalVariable(name: "wand", arg: 1, scope: !11332, file: !1, line: 10533, type: !1143)
!11334 = !DILocation(line: 10533, column: 67, scope: !11332)
!11335 = !DILocalVariable(name: "iterations", arg: 2, scope: !11332, file: !1, line: 10534, type: !1214)
!11336 = !DILocation(line: 10534, column: 16, scope: !11332)
!11337 = !DILocation(line: 10538, column: 7, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11332, file: !1, line: 10538, column: 7)
!11339 = !DILocation(line: 10538, column: 13, scope: !11338)
!11340 = !DILocation(line: 10538, column: 19, scope: !11338)
!11341 = !DILocation(line: 10538, column: 7, scope: !11332)
!11342 = !DILocation(line: 10539, column: 60, scope: !11338)
!11343 = !DILocation(line: 10539, column: 66, scope: !11338)
!11344 = !DILocation(line: 10539, column: 12, scope: !11338)
!11345 = !DILocation(line: 10539, column: 5, scope: !11338)
!11346 = !DILocation(line: 10540, column: 7, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11332, file: !1, line: 10540, column: 7)
!11348 = !DILocation(line: 10540, column: 13, scope: !11347)
!11349 = !DILocation(line: 10540, column: 20, scope: !11347)
!11350 = !DILocation(line: 10540, column: 7, scope: !11332)
!11351 = !DILocation(line: 10541, column: 5, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11347, file: !1, line: 10541, column: 5)
!11353 = !DILocation(line: 10542, column: 28, scope: !11332)
!11354 = !DILocation(line: 10542, column: 3, scope: !11332)
!11355 = !DILocation(line: 10542, column: 9, scope: !11332)
!11356 = !DILocation(line: 10542, column: 17, scope: !11332)
!11357 = !DILocation(line: 10542, column: 27, scope: !11332)
!11358 = !DILocation(line: 10543, column: 3, scope: !11332)
!11359 = !DILocation(line: 10544, column: 1, scope: !11332)
!11360 = distinct !DISubprogram(name: "MagickSetImageMatte", scope: !1, file: !1, line: 10572, type: !3513, scopeLine: 10574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11361 = !DILocalVariable(name: "wand", arg: 1, scope: !11360, file: !1, line: 10572, type: !1143)
!11362 = !DILocation(line: 10572, column: 62, scope: !11360)
!11363 = !DILocalVariable(name: "matte", arg: 2, scope: !11360, file: !1, line: 10573, type: !2117)
!11364 = !DILocation(line: 10573, column: 27, scope: !11360)
!11365 = !DILocation(line: 10577, column: 7, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11360, file: !1, line: 10577, column: 7)
!11367 = !DILocation(line: 10577, column: 13, scope: !11366)
!11368 = !DILocation(line: 10577, column: 19, scope: !11366)
!11369 = !DILocation(line: 10577, column: 7, scope: !11360)
!11370 = !DILocation(line: 10578, column: 60, scope: !11366)
!11371 = !DILocation(line: 10578, column: 66, scope: !11366)
!11372 = !DILocation(line: 10578, column: 12, scope: !11366)
!11373 = !DILocation(line: 10578, column: 5, scope: !11366)
!11374 = !DILocation(line: 10579, column: 7, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11360, file: !1, line: 10579, column: 7)
!11376 = !DILocation(line: 10579, column: 13, scope: !11375)
!11377 = !DILocation(line: 10579, column: 20, scope: !11375)
!11378 = !DILocation(line: 10579, column: 7, scope: !11360)
!11379 = !DILocation(line: 10580, column: 5, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11375, file: !1, line: 10580, column: 5)
!11381 = !DILocation(line: 10581, column: 8, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11360, file: !1, line: 10581, column: 7)
!11383 = !DILocation(line: 10581, column: 14, scope: !11382)
!11384 = !DILocation(line: 10581, column: 22, scope: !11382)
!11385 = !DILocation(line: 10581, column: 28, scope: !11382)
!11386 = !DILocation(line: 10581, column: 44, scope: !11382)
!11387 = !DILocation(line: 10581, column: 48, scope: !11382)
!11388 = !DILocation(line: 10581, column: 54, scope: !11382)
!11389 = !DILocation(line: 10581, column: 7, scope: !11360)
!11390 = !DILocation(line: 10582, column: 28, scope: !11382)
!11391 = !DILocation(line: 10582, column: 34, scope: !11382)
!11392 = !DILocation(line: 10582, column: 12, scope: !11382)
!11393 = !DILocation(line: 10582, column: 5, scope: !11382)
!11394 = !DILocation(line: 10583, column: 23, scope: !11360)
!11395 = !DILocation(line: 10583, column: 3, scope: !11360)
!11396 = !DILocation(line: 10583, column: 9, scope: !11360)
!11397 = !DILocation(line: 10583, column: 17, scope: !11360)
!11398 = !DILocation(line: 10583, column: 22, scope: !11360)
!11399 = !DILocation(line: 10584, column: 3, scope: !11360)
!11400 = !DILocation(line: 10585, column: 1, scope: !11360)
!11401 = distinct !DISubprogram(name: "MagickSetImageMatteColor", scope: !1, file: !1, line: 10612, type: !2346, scopeLine: 10614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11402 = !DILocalVariable(name: "wand", arg: 1, scope: !11401, file: !1, line: 10612, type: !1143)
!11403 = !DILocation(line: 10612, column: 67, scope: !11401)
!11404 = !DILocalVariable(name: "matte", arg: 2, scope: !11401, file: !1, line: 10613, type: !2348)
!11405 = !DILocation(line: 10613, column: 20, scope: !11401)
!11406 = !DILocation(line: 10617, column: 7, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11401, file: !1, line: 10617, column: 7)
!11408 = !DILocation(line: 10617, column: 13, scope: !11407)
!11409 = !DILocation(line: 10617, column: 19, scope: !11407)
!11410 = !DILocation(line: 10617, column: 7, scope: !11401)
!11411 = !DILocation(line: 10618, column: 60, scope: !11407)
!11412 = !DILocation(line: 10618, column: 66, scope: !11407)
!11413 = !DILocation(line: 10618, column: 12, scope: !11407)
!11414 = !DILocation(line: 10618, column: 5, scope: !11407)
!11415 = !DILocation(line: 10619, column: 7, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11401, file: !1, line: 10619, column: 7)
!11417 = !DILocation(line: 10619, column: 13, scope: !11416)
!11418 = !DILocation(line: 10619, column: 20, scope: !11416)
!11419 = !DILocation(line: 10619, column: 7, scope: !11401)
!11420 = !DILocation(line: 10620, column: 5, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11416, file: !1, line: 10620, column: 5)
!11422 = !DILocation(line: 10621, column: 24, scope: !11401)
!11423 = !DILocation(line: 10621, column: 31, scope: !11401)
!11424 = !DILocation(line: 10621, column: 37, scope: !11401)
!11425 = !DILocation(line: 10621, column: 45, scope: !11401)
!11426 = !DILocation(line: 10621, column: 3, scope: !11401)
!11427 = !DILocation(line: 10622, column: 3, scope: !11401)
!11428 = !DILocation(line: 10623, column: 1, scope: !11401)
!11429 = distinct !DISubprogram(name: "MagickSetImageOpacity", scope: !1, file: !1, line: 10651, type: !2403, scopeLine: 10653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11430 = !DILocalVariable(name: "wand", arg: 1, scope: !11429, file: !1, line: 10651, type: !1143)
!11431 = !DILocation(line: 10651, column: 64, scope: !11429)
!11432 = !DILocalVariable(name: "alpha", arg: 2, scope: !11429, file: !1, line: 10652, type: !1325)
!11433 = !DILocation(line: 10652, column: 16, scope: !11429)
!11434 = !DILocalVariable(name: "status", scope: !11429, file: !1, line: 10655, type: !807)
!11435 = !DILocation(line: 10655, column: 5, scope: !11429)
!11436 = !DILocation(line: 10659, column: 7, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11429, file: !1, line: 10659, column: 7)
!11438 = !DILocation(line: 10659, column: 13, scope: !11437)
!11439 = !DILocation(line: 10659, column: 19, scope: !11437)
!11440 = !DILocation(line: 10659, column: 7, scope: !11429)
!11441 = !DILocation(line: 10660, column: 60, scope: !11437)
!11442 = !DILocation(line: 10660, column: 66, scope: !11437)
!11443 = !DILocation(line: 10660, column: 12, scope: !11437)
!11444 = !DILocation(line: 10660, column: 5, scope: !11437)
!11445 = !DILocation(line: 10661, column: 7, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11429, file: !1, line: 10661, column: 7)
!11447 = !DILocation(line: 10661, column: 13, scope: !11446)
!11448 = !DILocation(line: 10661, column: 20, scope: !11446)
!11449 = !DILocation(line: 10661, column: 7, scope: !11429)
!11450 = !DILocation(line: 10662, column: 5, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11446, file: !1, line: 10662, column: 5)
!11452 = !DILocation(line: 10663, column: 26, scope: !11429)
!11453 = !DILocation(line: 10663, column: 32, scope: !11429)
!11454 = !DILocation(line: 10664, column: 31, scope: !11429)
!11455 = !DILocation(line: 10664, column: 30, scope: !11429)
!11456 = !DILocation(line: 10664, column: 17, scope: !11429)
!11457 = !DILocation(line: 10663, column: 54, scope: !11429)
!11458 = !DILocation(line: 10663, column: 39, scope: !11429)
!11459 = !DILocation(line: 10663, column: 10, scope: !11429)
!11460 = !DILocation(line: 10663, column: 9, scope: !11429)
!11461 = !DILocation(line: 10665, column: 7, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11429, file: !1, line: 10665, column: 7)
!11463 = !DILocation(line: 10665, column: 14, scope: !11462)
!11464 = !DILocation(line: 10665, column: 7, scope: !11429)
!11465 = !DILocation(line: 10666, column: 22, scope: !11462)
!11466 = !DILocation(line: 10666, column: 28, scope: !11462)
!11467 = !DILocation(line: 10666, column: 39, scope: !11462)
!11468 = !DILocation(line: 10666, column: 45, scope: !11462)
!11469 = !DILocation(line: 10666, column: 53, scope: !11462)
!11470 = !DILocation(line: 10666, column: 5, scope: !11462)
!11471 = !DILocation(line: 10667, column: 10, scope: !11429)
!11472 = !DILocation(line: 10667, column: 3, scope: !11429)
!11473 = !DILocation(line: 10668, column: 1, scope: !11429)
!11474 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !11475, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11475 = !DISubroutineType(types: !11476)
!11476 = !{!819, !11477}
!11477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!11478 = !DILocalVariable(name: "value", arg: 1, scope: !11474, file: !147, line: 87, type: !11477)
!11479 = !DILocation(line: 87, column: 59, scope: !11474)
!11480 = !DILocation(line: 92, column: 7, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11474, file: !147, line: 92, column: 7)
!11482 = !DILocation(line: 92, column: 13, scope: !11481)
!11483 = !DILocation(line: 92, column: 7, scope: !11474)
!11484 = !DILocation(line: 93, column: 5, scope: !11481)
!11485 = !DILocation(line: 94, column: 7, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11474, file: !147, line: 94, column: 7)
!11487 = !DILocation(line: 94, column: 13, scope: !11486)
!11488 = !DILocation(line: 94, column: 7, scope: !11474)
!11489 = !DILocation(line: 95, column: 5, scope: !11486)
!11490 = !DILocation(line: 96, column: 21, scope: !11474)
!11491 = !DILocation(line: 96, column: 26, scope: !11474)
!11492 = !DILocation(line: 96, column: 10, scope: !11474)
!11493 = !DILocation(line: 96, column: 3, scope: !11474)
!11494 = !DILocation(line: 98, column: 1, scope: !11474)
!11495 = distinct !DISubprogram(name: "MagickSetImageOrientation", scope: !1, file: !1, line: 10695, type: !11496, scopeLine: 10697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{!807, !1143, !11498}
!11498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!11499 = !DILocalVariable(name: "wand", arg: 1, scope: !11495, file: !1, line: 10695, type: !1143)
!11500 = !DILocation(line: 10695, column: 68, scope: !11495)
!11501 = !DILocalVariable(name: "orientation", arg: 2, scope: !11495, file: !1, line: 10696, type: !11498)
!11502 = !DILocation(line: 10696, column: 25, scope: !11495)
!11503 = !DILocation(line: 10700, column: 7, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11495, file: !1, line: 10700, column: 7)
!11505 = !DILocation(line: 10700, column: 13, scope: !11504)
!11506 = !DILocation(line: 10700, column: 19, scope: !11504)
!11507 = !DILocation(line: 10700, column: 7, scope: !11495)
!11508 = !DILocation(line: 10701, column: 60, scope: !11504)
!11509 = !DILocation(line: 10701, column: 66, scope: !11504)
!11510 = !DILocation(line: 10701, column: 12, scope: !11504)
!11511 = !DILocation(line: 10701, column: 5, scope: !11504)
!11512 = !DILocation(line: 10702, column: 7, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11495, file: !1, line: 10702, column: 7)
!11514 = !DILocation(line: 10702, column: 13, scope: !11513)
!11515 = !DILocation(line: 10702, column: 20, scope: !11513)
!11516 = !DILocation(line: 10702, column: 7, scope: !11495)
!11517 = !DILocation(line: 10703, column: 5, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11513, file: !1, line: 10703, column: 5)
!11519 = !DILocation(line: 10704, column: 29, scope: !11495)
!11520 = !DILocation(line: 10704, column: 3, scope: !11495)
!11521 = !DILocation(line: 10704, column: 9, scope: !11495)
!11522 = !DILocation(line: 10704, column: 17, scope: !11495)
!11523 = !DILocation(line: 10704, column: 28, scope: !11495)
!11524 = !DILocation(line: 10705, column: 3, scope: !11495)
!11525 = !DILocation(line: 10706, column: 1, scope: !11495)
!11526 = distinct !DISubprogram(name: "MagickSetImagePage", scope: !1, file: !1, line: 10740, type: !2679, scopeLine: 10742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11527 = !DILocalVariable(name: "wand", arg: 1, scope: !11526, file: !1, line: 10740, type: !1143)
!11528 = !DILocation(line: 10740, column: 61, scope: !11526)
!11529 = !DILocalVariable(name: "width", arg: 2, scope: !11526, file: !1, line: 10741, type: !1214)
!11530 = !DILocation(line: 10741, column: 16, scope: !11526)
!11531 = !DILocalVariable(name: "height", arg: 3, scope: !11526, file: !1, line: 10741, type: !1214)
!11532 = !DILocation(line: 10741, column: 35, scope: !11526)
!11533 = !DILocalVariable(name: "x", arg: 4, scope: !11526, file: !1, line: 10741, type: !1666)
!11534 = !DILocation(line: 10741, column: 56, scope: !11526)
!11535 = !DILocalVariable(name: "y", arg: 5, scope: !11526, file: !1, line: 10741, type: !1666)
!11536 = !DILocation(line: 10741, column: 72, scope: !11526)
!11537 = !DILocation(line: 10745, column: 7, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11526, file: !1, line: 10745, column: 7)
!11539 = !DILocation(line: 10745, column: 13, scope: !11538)
!11540 = !DILocation(line: 10745, column: 19, scope: !11538)
!11541 = !DILocation(line: 10745, column: 7, scope: !11526)
!11542 = !DILocation(line: 10746, column: 60, scope: !11538)
!11543 = !DILocation(line: 10746, column: 66, scope: !11538)
!11544 = !DILocation(line: 10746, column: 12, scope: !11538)
!11545 = !DILocation(line: 10746, column: 5, scope: !11538)
!11546 = !DILocation(line: 10747, column: 7, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11526, file: !1, line: 10747, column: 7)
!11548 = !DILocation(line: 10747, column: 13, scope: !11547)
!11549 = !DILocation(line: 10747, column: 20, scope: !11547)
!11550 = !DILocation(line: 10747, column: 7, scope: !11526)
!11551 = !DILocation(line: 10748, column: 5, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11547, file: !1, line: 10748, column: 5)
!11553 = !DILocation(line: 10749, column: 28, scope: !11526)
!11554 = !DILocation(line: 10749, column: 3, scope: !11526)
!11555 = !DILocation(line: 10749, column: 9, scope: !11526)
!11556 = !DILocation(line: 10749, column: 17, scope: !11526)
!11557 = !DILocation(line: 10749, column: 22, scope: !11526)
!11558 = !DILocation(line: 10749, column: 27, scope: !11526)
!11559 = !DILocation(line: 10750, column: 29, scope: !11526)
!11560 = !DILocation(line: 10750, column: 3, scope: !11526)
!11561 = !DILocation(line: 10750, column: 9, scope: !11526)
!11562 = !DILocation(line: 10750, column: 17, scope: !11526)
!11563 = !DILocation(line: 10750, column: 22, scope: !11526)
!11564 = !DILocation(line: 10750, column: 28, scope: !11526)
!11565 = !DILocation(line: 10751, column: 24, scope: !11526)
!11566 = !DILocation(line: 10751, column: 3, scope: !11526)
!11567 = !DILocation(line: 10751, column: 9, scope: !11526)
!11568 = !DILocation(line: 10751, column: 17, scope: !11526)
!11569 = !DILocation(line: 10751, column: 22, scope: !11526)
!11570 = !DILocation(line: 10751, column: 23, scope: !11526)
!11571 = !DILocation(line: 10752, column: 24, scope: !11526)
!11572 = !DILocation(line: 10752, column: 3, scope: !11526)
!11573 = !DILocation(line: 10752, column: 9, scope: !11526)
!11574 = !DILocation(line: 10752, column: 17, scope: !11526)
!11575 = !DILocation(line: 10752, column: 22, scope: !11526)
!11576 = !DILocation(line: 10752, column: 23, scope: !11526)
!11577 = !DILocation(line: 10753, column: 3, scope: !11526)
!11578 = !DILocation(line: 10754, column: 1, scope: !11526)
!11579 = distinct !DISubprogram(name: "MagickSetImageProgressMonitor", scope: !1, file: !1, line: 10793, type: !11580, scopeLine: 10795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11580 = !DISubroutineType(types: !11581)
!11581 = !{!919, !1143, !11582, !846}
!11582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!11583 = !DILocalVariable(name: "wand", arg: 1, scope: !11579, file: !1, line: 10793, type: !1143)
!11584 = !DILocation(line: 10793, column: 76, scope: !11579)
!11585 = !DILocalVariable(name: "progress_monitor", arg: 2, scope: !11579, file: !1, line: 10794, type: !11582)
!11586 = !DILocation(line: 10794, column: 31, scope: !11579)
!11587 = !DILocalVariable(name: "client_data", arg: 3, scope: !11579, file: !1, line: 10794, type: !846)
!11588 = !DILocation(line: 10794, column: 54, scope: !11579)
!11589 = !DILocalVariable(name: "previous_monitor", scope: !11579, file: !1, line: 10797, type: !919)
!11590 = !DILocation(line: 10797, column: 5, scope: !11579)
!11591 = !DILocation(line: 10801, column: 7, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11579, file: !1, line: 10801, column: 7)
!11593 = !DILocation(line: 10801, column: 13, scope: !11592)
!11594 = !DILocation(line: 10801, column: 19, scope: !11592)
!11595 = !DILocation(line: 10801, column: 7, scope: !11579)
!11596 = !DILocation(line: 10802, column: 60, scope: !11592)
!11597 = !DILocation(line: 10802, column: 66, scope: !11592)
!11598 = !DILocation(line: 10802, column: 12, scope: !11592)
!11599 = !DILocation(line: 10802, column: 5, scope: !11592)
!11600 = !DILocation(line: 10803, column: 7, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11579, file: !1, line: 10803, column: 7)
!11602 = !DILocation(line: 10803, column: 13, scope: !11601)
!11603 = !DILocation(line: 10803, column: 20, scope: !11601)
!11604 = !DILocation(line: 10803, column: 7, scope: !11579)
!11605 = !DILocation(line: 10805, column: 35, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11601, file: !1, line: 10804, column: 5)
!11607 = !DILocation(line: 10805, column: 41, scope: !11606)
!11608 = !DILocation(line: 10806, column: 35, scope: !11606)
!11609 = !DILocation(line: 10806, column: 41, scope: !11606)
!11610 = !DILocation(line: 10805, column: 14, scope: !11606)
!11611 = !DILocation(line: 10807, column: 7, scope: !11606)
!11612 = !DILocation(line: 10809, column: 44, scope: !11579)
!11613 = !DILocation(line: 10809, column: 50, scope: !11579)
!11614 = !DILocation(line: 10809, column: 57, scope: !11579)
!11615 = !DILocation(line: 10810, column: 5, scope: !11579)
!11616 = !DILocation(line: 10809, column: 20, scope: !11579)
!11617 = !DILocation(line: 10809, column: 19, scope: !11579)
!11618 = !DILocation(line: 10811, column: 10, scope: !11579)
!11619 = !DILocation(line: 10811, column: 3, scope: !11579)
!11620 = !DILocation(line: 10812, column: 1, scope: !11579)
!11621 = distinct !DISubprogram(name: "MagickSetImageRedPrimary", scope: !1, file: !1, line: 10841, type: !1487, scopeLine: 10843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11622 = !DILocalVariable(name: "wand", arg: 1, scope: !11621, file: !1, line: 10841, type: !1143)
!11623 = !DILocation(line: 10841, column: 67, scope: !11621)
!11624 = !DILocalVariable(name: "x", arg: 2, scope: !11621, file: !1, line: 10842, type: !1325)
!11625 = !DILocation(line: 10842, column: 16, scope: !11621)
!11626 = !DILocalVariable(name: "y", arg: 3, scope: !11621, file: !1, line: 10842, type: !1325)
!11627 = !DILocation(line: 10842, column: 31, scope: !11621)
!11628 = !DILocation(line: 10846, column: 7, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11621, file: !1, line: 10846, column: 7)
!11630 = !DILocation(line: 10846, column: 13, scope: !11629)
!11631 = !DILocation(line: 10846, column: 19, scope: !11629)
!11632 = !DILocation(line: 10846, column: 7, scope: !11621)
!11633 = !DILocation(line: 10847, column: 60, scope: !11629)
!11634 = !DILocation(line: 10847, column: 66, scope: !11629)
!11635 = !DILocation(line: 10847, column: 12, scope: !11629)
!11636 = !DILocation(line: 10847, column: 5, scope: !11629)
!11637 = !DILocation(line: 10848, column: 7, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11621, file: !1, line: 10848, column: 7)
!11639 = !DILocation(line: 10848, column: 13, scope: !11638)
!11640 = !DILocation(line: 10848, column: 20, scope: !11638)
!11641 = !DILocation(line: 10848, column: 7, scope: !11621)
!11642 = !DILocation(line: 10849, column: 5, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11638, file: !1, line: 10849, column: 5)
!11644 = !DILocation(line: 10850, column: 44, scope: !11621)
!11645 = !DILocation(line: 10850, column: 3, scope: !11621)
!11646 = !DILocation(line: 10850, column: 9, scope: !11621)
!11647 = !DILocation(line: 10850, column: 17, scope: !11621)
!11648 = !DILocation(line: 10850, column: 30, scope: !11621)
!11649 = !DILocation(line: 10850, column: 42, scope: !11621)
!11650 = !DILocation(line: 10850, column: 43, scope: !11621)
!11651 = !DILocation(line: 10851, column: 44, scope: !11621)
!11652 = !DILocation(line: 10851, column: 3, scope: !11621)
!11653 = !DILocation(line: 10851, column: 9, scope: !11621)
!11654 = !DILocation(line: 10851, column: 17, scope: !11621)
!11655 = !DILocation(line: 10851, column: 30, scope: !11621)
!11656 = !DILocation(line: 10851, column: 42, scope: !11621)
!11657 = !DILocation(line: 10851, column: 43, scope: !11621)
!11658 = !DILocation(line: 10852, column: 3, scope: !11621)
!11659 = !DILocation(line: 10853, column: 1, scope: !11621)
!11660 = distinct !DISubprogram(name: "MagickSetImageRenderingIntent", scope: !1, file: !1, line: 10881, type: !11661, scopeLine: 10883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{!807, !1143, !11663}
!11663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!11664 = !DILocalVariable(name: "wand", arg: 1, scope: !11660, file: !1, line: 10881, type: !1143)
!11665 = !DILocation(line: 10881, column: 72, scope: !11660)
!11666 = !DILocalVariable(name: "rendering_intent", arg: 2, scope: !11660, file: !1, line: 10882, type: !11663)
!11667 = !DILocation(line: 10882, column: 25, scope: !11660)
!11668 = !DILocation(line: 10886, column: 7, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11660, file: !1, line: 10886, column: 7)
!11670 = !DILocation(line: 10886, column: 13, scope: !11669)
!11671 = !DILocation(line: 10886, column: 19, scope: !11669)
!11672 = !DILocation(line: 10886, column: 7, scope: !11660)
!11673 = !DILocation(line: 10887, column: 60, scope: !11669)
!11674 = !DILocation(line: 10887, column: 66, scope: !11669)
!11675 = !DILocation(line: 10887, column: 12, scope: !11669)
!11676 = !DILocation(line: 10887, column: 5, scope: !11669)
!11677 = !DILocation(line: 10888, column: 7, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11660, file: !1, line: 10888, column: 7)
!11679 = !DILocation(line: 10888, column: 13, scope: !11678)
!11680 = !DILocation(line: 10888, column: 20, scope: !11678)
!11681 = !DILocation(line: 10888, column: 7, scope: !11660)
!11682 = !DILocation(line: 10889, column: 5, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11678, file: !1, line: 10889, column: 5)
!11684 = !DILocation(line: 10890, column: 34, scope: !11660)
!11685 = !DILocation(line: 10890, column: 3, scope: !11660)
!11686 = !DILocation(line: 10890, column: 9, scope: !11660)
!11687 = !DILocation(line: 10890, column: 17, scope: !11660)
!11688 = !DILocation(line: 10890, column: 33, scope: !11660)
!11689 = !DILocation(line: 10891, column: 3, scope: !11660)
!11690 = !DILocation(line: 10892, column: 1, scope: !11660)
!11691 = distinct !DISubprogram(name: "MagickSetImageResolution", scope: !1, file: !1, line: 10921, type: !1487, scopeLine: 10923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11692 = !DILocalVariable(name: "wand", arg: 1, scope: !11691, file: !1, line: 10921, type: !1143)
!11693 = !DILocation(line: 10921, column: 67, scope: !11691)
!11694 = !DILocalVariable(name: "x_resolution", arg: 2, scope: !11691, file: !1, line: 10922, type: !1325)
!11695 = !DILocation(line: 10922, column: 16, scope: !11691)
!11696 = !DILocalVariable(name: "y_resolution", arg: 3, scope: !11691, file: !1, line: 10922, type: !1325)
!11697 = !DILocation(line: 10922, column: 42, scope: !11691)
!11698 = !DILocation(line: 10926, column: 7, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11691, file: !1, line: 10926, column: 7)
!11700 = !DILocation(line: 10926, column: 13, scope: !11699)
!11701 = !DILocation(line: 10926, column: 19, scope: !11699)
!11702 = !DILocation(line: 10926, column: 7, scope: !11691)
!11703 = !DILocation(line: 10927, column: 60, scope: !11699)
!11704 = !DILocation(line: 10927, column: 66, scope: !11699)
!11705 = !DILocation(line: 10927, column: 12, scope: !11699)
!11706 = !DILocation(line: 10927, column: 5, scope: !11699)
!11707 = !DILocation(line: 10928, column: 7, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11691, file: !1, line: 10928, column: 7)
!11709 = !DILocation(line: 10928, column: 13, scope: !11708)
!11710 = !DILocation(line: 10928, column: 20, scope: !11708)
!11711 = !DILocation(line: 10928, column: 7, scope: !11691)
!11712 = !DILocation(line: 10929, column: 5, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11708, file: !1, line: 10929, column: 5)
!11714 = !DILocation(line: 10930, column: 30, scope: !11691)
!11715 = !DILocation(line: 10930, column: 3, scope: !11691)
!11716 = !DILocation(line: 10930, column: 9, scope: !11691)
!11717 = !DILocation(line: 10930, column: 17, scope: !11691)
!11718 = !DILocation(line: 10930, column: 29, scope: !11691)
!11719 = !DILocation(line: 10931, column: 30, scope: !11691)
!11720 = !DILocation(line: 10931, column: 3, scope: !11691)
!11721 = !DILocation(line: 10931, column: 9, scope: !11691)
!11722 = !DILocation(line: 10931, column: 17, scope: !11691)
!11723 = !DILocation(line: 10931, column: 29, scope: !11691)
!11724 = !DILocation(line: 10932, column: 3, scope: !11691)
!11725 = !DILocation(line: 10933, column: 1, scope: !11691)
!11726 = distinct !DISubprogram(name: "MagickSetImageScene", scope: !1, file: !1, line: 10960, type: !10876, scopeLine: 10962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11727 = !DILocalVariable(name: "wand", arg: 1, scope: !11726, file: !1, line: 10960, type: !1143)
!11728 = !DILocation(line: 10960, column: 62, scope: !11726)
!11729 = !DILocalVariable(name: "scene", arg: 2, scope: !11726, file: !1, line: 10961, type: !1214)
!11730 = !DILocation(line: 10961, column: 16, scope: !11726)
!11731 = !DILocation(line: 10965, column: 7, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11726, file: !1, line: 10965, column: 7)
!11733 = !DILocation(line: 10965, column: 13, scope: !11732)
!11734 = !DILocation(line: 10965, column: 19, scope: !11732)
!11735 = !DILocation(line: 10965, column: 7, scope: !11726)
!11736 = !DILocation(line: 10966, column: 60, scope: !11732)
!11737 = !DILocation(line: 10966, column: 66, scope: !11732)
!11738 = !DILocation(line: 10966, column: 12, scope: !11732)
!11739 = !DILocation(line: 10966, column: 5, scope: !11732)
!11740 = !DILocation(line: 10967, column: 7, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11726, file: !1, line: 10967, column: 7)
!11742 = !DILocation(line: 10967, column: 13, scope: !11741)
!11743 = !DILocation(line: 10967, column: 20, scope: !11741)
!11744 = !DILocation(line: 10967, column: 7, scope: !11726)
!11745 = !DILocation(line: 10968, column: 5, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11741, file: !1, line: 10968, column: 5)
!11747 = !DILocation(line: 10969, column: 23, scope: !11726)
!11748 = !DILocation(line: 10969, column: 3, scope: !11726)
!11749 = !DILocation(line: 10969, column: 9, scope: !11726)
!11750 = !DILocation(line: 10969, column: 17, scope: !11726)
!11751 = !DILocation(line: 10969, column: 22, scope: !11726)
!11752 = !DILocation(line: 10970, column: 3, scope: !11726)
!11753 = !DILocation(line: 10971, column: 1, scope: !11726)
!11754 = distinct !DISubprogram(name: "MagickSetImageTicksPerSecond", scope: !1, file: !1, line: 10998, type: !3751, scopeLine: 11000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11755 = !DILocalVariable(name: "wand", arg: 1, scope: !11754, file: !1, line: 10998, type: !1143)
!11756 = !DILocation(line: 10998, column: 71, scope: !11754)
!11757 = !DILocalVariable(name: "ticks_per_second", arg: 2, scope: !11754, file: !1, line: 10999, type: !1666)
!11758 = !DILocation(line: 10999, column: 17, scope: !11754)
!11759 = !DILocation(line: 11003, column: 7, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11754, file: !1, line: 11003, column: 7)
!11761 = !DILocation(line: 11003, column: 13, scope: !11760)
!11762 = !DILocation(line: 11003, column: 19, scope: !11760)
!11763 = !DILocation(line: 11003, column: 7, scope: !11754)
!11764 = !DILocation(line: 11004, column: 60, scope: !11760)
!11765 = !DILocation(line: 11004, column: 66, scope: !11760)
!11766 = !DILocation(line: 11004, column: 12, scope: !11760)
!11767 = !DILocation(line: 11004, column: 5, scope: !11760)
!11768 = !DILocation(line: 11005, column: 7, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11754, file: !1, line: 11005, column: 7)
!11770 = !DILocation(line: 11005, column: 13, scope: !11769)
!11771 = !DILocation(line: 11005, column: 20, scope: !11769)
!11772 = !DILocation(line: 11005, column: 7, scope: !11754)
!11773 = !DILocation(line: 11006, column: 5, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11769, file: !1, line: 11006, column: 5)
!11775 = !DILocation(line: 11007, column: 34, scope: !11754)
!11776 = !DILocation(line: 11007, column: 3, scope: !11754)
!11777 = !DILocation(line: 11007, column: 9, scope: !11754)
!11778 = !DILocation(line: 11007, column: 17, scope: !11754)
!11779 = !DILocation(line: 11007, column: 33, scope: !11754)
!11780 = !DILocation(line: 11008, column: 3, scope: !11754)
!11781 = !DILocation(line: 11009, column: 1, scope: !11754)
!11782 = distinct !DISubprogram(name: "MagickSetImageType", scope: !1, file: !1, line: 11039, type: !11783, scopeLine: 11041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{!807, !1143, !11785}
!11785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!11786 = !DILocalVariable(name: "wand", arg: 1, scope: !11782, file: !1, line: 11039, type: !1143)
!11787 = !DILocation(line: 11039, column: 61, scope: !11782)
!11788 = !DILocalVariable(name: "image_type", arg: 2, scope: !11782, file: !1, line: 11040, type: !11785)
!11789 = !DILocation(line: 11040, column: 19, scope: !11782)
!11790 = !DILocation(line: 11044, column: 7, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11782, file: !1, line: 11044, column: 7)
!11792 = !DILocation(line: 11044, column: 13, scope: !11791)
!11793 = !DILocation(line: 11044, column: 19, scope: !11791)
!11794 = !DILocation(line: 11044, column: 7, scope: !11782)
!11795 = !DILocation(line: 11045, column: 60, scope: !11791)
!11796 = !DILocation(line: 11045, column: 66, scope: !11791)
!11797 = !DILocation(line: 11045, column: 12, scope: !11791)
!11798 = !DILocation(line: 11045, column: 5, scope: !11791)
!11799 = !DILocation(line: 11046, column: 7, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11782, file: !1, line: 11046, column: 7)
!11801 = !DILocation(line: 11046, column: 13, scope: !11800)
!11802 = !DILocation(line: 11046, column: 20, scope: !11800)
!11803 = !DILocation(line: 11046, column: 7, scope: !11782)
!11804 = !DILocation(line: 11047, column: 5, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11800, file: !1, line: 11047, column: 5)
!11806 = !DILocation(line: 11048, column: 23, scope: !11782)
!11807 = !DILocation(line: 11048, column: 29, scope: !11782)
!11808 = !DILocation(line: 11048, column: 36, scope: !11782)
!11809 = !DILocation(line: 11048, column: 10, scope: !11782)
!11810 = !DILocation(line: 11048, column: 3, scope: !11782)
!11811 = !DILocation(line: 11049, column: 1, scope: !11782)
!11812 = distinct !DISubprogram(name: "MagickSetImageUnits", scope: !1, file: !1, line: 11077, type: !11813, scopeLine: 11079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{!807, !1143, !11815}
!11815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!11816 = !DILocalVariable(name: "wand", arg: 1, scope: !11812, file: !1, line: 11077, type: !1143)
!11817 = !DILocation(line: 11077, column: 62, scope: !11812)
!11818 = !DILocalVariable(name: "units", arg: 2, scope: !11812, file: !1, line: 11078, type: !11815)
!11819 = !DILocation(line: 11078, column: 24, scope: !11812)
!11820 = !DILocation(line: 11082, column: 7, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11812, file: !1, line: 11082, column: 7)
!11822 = !DILocation(line: 11082, column: 13, scope: !11821)
!11823 = !DILocation(line: 11082, column: 19, scope: !11821)
!11824 = !DILocation(line: 11082, column: 7, scope: !11812)
!11825 = !DILocation(line: 11083, column: 60, scope: !11821)
!11826 = !DILocation(line: 11083, column: 66, scope: !11821)
!11827 = !DILocation(line: 11083, column: 12, scope: !11821)
!11828 = !DILocation(line: 11083, column: 5, scope: !11821)
!11829 = !DILocation(line: 11084, column: 7, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11812, file: !1, line: 11084, column: 7)
!11831 = !DILocation(line: 11084, column: 13, scope: !11830)
!11832 = !DILocation(line: 11084, column: 20, scope: !11830)
!11833 = !DILocation(line: 11084, column: 7, scope: !11812)
!11834 = !DILocation(line: 11085, column: 5, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11830, file: !1, line: 11085, column: 5)
!11836 = !DILocation(line: 11086, column: 23, scope: !11812)
!11837 = !DILocation(line: 11086, column: 3, scope: !11812)
!11838 = !DILocation(line: 11086, column: 9, scope: !11812)
!11839 = !DILocation(line: 11086, column: 17, scope: !11812)
!11840 = !DILocation(line: 11086, column: 22, scope: !11812)
!11841 = !DILocation(line: 11087, column: 3, scope: !11812)
!11842 = !DILocation(line: 11088, column: 1, scope: !11812)
!11843 = distinct !DISubprogram(name: "MagickSetImageVirtualPixelMethod", scope: !1, file: !1, line: 11117, type: !11844, scopeLine: 11119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{!1282, !1143, !11846}
!11846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!11847 = !DILocalVariable(name: "wand", arg: 1, scope: !11843, file: !1, line: 11117, type: !1143)
!11848 = !DILocation(line: 11117, column: 76, scope: !11843)
!11849 = !DILocalVariable(name: "method", arg: 2, scope: !11843, file: !1, line: 11118, type: !11846)
!11850 = !DILocation(line: 11118, column: 28, scope: !11843)
!11851 = !DILocation(line: 11122, column: 7, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11843, file: !1, line: 11122, column: 7)
!11853 = !DILocation(line: 11122, column: 13, scope: !11852)
!11854 = !DILocation(line: 11122, column: 19, scope: !11852)
!11855 = !DILocation(line: 11122, column: 7, scope: !11843)
!11856 = !DILocation(line: 11123, column: 60, scope: !11852)
!11857 = !DILocation(line: 11123, column: 66, scope: !11852)
!11858 = !DILocation(line: 11123, column: 12, scope: !11852)
!11859 = !DILocation(line: 11123, column: 5, scope: !11852)
!11860 = !DILocation(line: 11124, column: 7, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11843, file: !1, line: 11124, column: 7)
!11862 = !DILocation(line: 11124, column: 13, scope: !11861)
!11863 = !DILocation(line: 11124, column: 20, scope: !11861)
!11864 = !DILocation(line: 11124, column: 7, scope: !11843)
!11865 = !DILocation(line: 11125, column: 5, scope: !11861)
!11866 = !DILocation(line: 11126, column: 37, scope: !11843)
!11867 = !DILocation(line: 11126, column: 43, scope: !11843)
!11868 = !DILocation(line: 11126, column: 50, scope: !11843)
!11869 = !DILocation(line: 11126, column: 10, scope: !11843)
!11870 = !DILocation(line: 11126, column: 3, scope: !11843)
!11871 = !DILocation(line: 11127, column: 1, scope: !11843)
!11872 = distinct !DISubprogram(name: "MagickSetImageWhitePoint", scope: !1, file: !1, line: 11156, type: !1487, scopeLine: 11158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11873 = !DILocalVariable(name: "wand", arg: 1, scope: !11872, file: !1, line: 11156, type: !1143)
!11874 = !DILocation(line: 11156, column: 67, scope: !11872)
!11875 = !DILocalVariable(name: "x", arg: 2, scope: !11872, file: !1, line: 11157, type: !1325)
!11876 = !DILocation(line: 11157, column: 16, scope: !11872)
!11877 = !DILocalVariable(name: "y", arg: 3, scope: !11872, file: !1, line: 11157, type: !1325)
!11878 = !DILocation(line: 11157, column: 31, scope: !11872)
!11879 = !DILocation(line: 11161, column: 7, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11872, file: !1, line: 11161, column: 7)
!11881 = !DILocation(line: 11161, column: 13, scope: !11880)
!11882 = !DILocation(line: 11161, column: 19, scope: !11880)
!11883 = !DILocation(line: 11161, column: 7, scope: !11872)
!11884 = !DILocation(line: 11162, column: 60, scope: !11880)
!11885 = !DILocation(line: 11162, column: 66, scope: !11880)
!11886 = !DILocation(line: 11162, column: 12, scope: !11880)
!11887 = !DILocation(line: 11162, column: 5, scope: !11880)
!11888 = !DILocation(line: 11163, column: 7, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11872, file: !1, line: 11163, column: 7)
!11890 = !DILocation(line: 11163, column: 13, scope: !11889)
!11891 = !DILocation(line: 11163, column: 20, scope: !11889)
!11892 = !DILocation(line: 11163, column: 7, scope: !11872)
!11893 = !DILocation(line: 11164, column: 5, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11889, file: !1, line: 11164, column: 5)
!11895 = !DILocation(line: 11165, column: 44, scope: !11872)
!11896 = !DILocation(line: 11165, column: 3, scope: !11872)
!11897 = !DILocation(line: 11165, column: 9, scope: !11872)
!11898 = !DILocation(line: 11165, column: 17, scope: !11872)
!11899 = !DILocation(line: 11165, column: 30, scope: !11872)
!11900 = !DILocation(line: 11165, column: 42, scope: !11872)
!11901 = !DILocation(line: 11165, column: 43, scope: !11872)
!11902 = !DILocation(line: 11166, column: 44, scope: !11872)
!11903 = !DILocation(line: 11166, column: 3, scope: !11872)
!11904 = !DILocation(line: 11166, column: 9, scope: !11872)
!11905 = !DILocation(line: 11166, column: 17, scope: !11872)
!11906 = !DILocation(line: 11166, column: 30, scope: !11872)
!11907 = !DILocation(line: 11166, column: 42, scope: !11872)
!11908 = !DILocation(line: 11166, column: 43, scope: !11872)
!11909 = !DILocation(line: 11167, column: 3, scope: !11872)
!11910 = !DILocation(line: 11168, column: 1, scope: !11872)
!11911 = distinct !DISubprogram(name: "MagickShadeImage", scope: !1, file: !1, line: 11201, type: !11912, scopeLine: 11203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{!807, !1143, !2117, !1325, !1325}
!11914 = !DILocalVariable(name: "wand", arg: 1, scope: !11911, file: !1, line: 11201, type: !1143)
!11915 = !DILocation(line: 11201, column: 59, scope: !11911)
!11916 = !DILocalVariable(name: "gray", arg: 2, scope: !11911, file: !1, line: 11202, type: !2117)
!11917 = !DILocation(line: 11202, column: 27, scope: !11911)
!11918 = !DILocalVariable(name: "asimuth", arg: 3, scope: !11911, file: !1, line: 11202, type: !1325)
!11919 = !DILocation(line: 11202, column: 45, scope: !11911)
!11920 = !DILocalVariable(name: "elevation", arg: 4, scope: !11911, file: !1, line: 11202, type: !1325)
!11921 = !DILocation(line: 11202, column: 66, scope: !11911)
!11922 = !DILocalVariable(name: "shade_image", scope: !11911, file: !1, line: 11205, type: !791)
!11923 = !DILocation(line: 11205, column: 6, scope: !11911)
!11924 = !DILocation(line: 11209, column: 7, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11911, file: !1, line: 11209, column: 7)
!11926 = !DILocation(line: 11209, column: 13, scope: !11925)
!11927 = !DILocation(line: 11209, column: 19, scope: !11925)
!11928 = !DILocation(line: 11209, column: 7, scope: !11911)
!11929 = !DILocation(line: 11210, column: 60, scope: !11925)
!11930 = !DILocation(line: 11210, column: 66, scope: !11925)
!11931 = !DILocation(line: 11210, column: 12, scope: !11925)
!11932 = !DILocation(line: 11210, column: 5, scope: !11925)
!11933 = !DILocation(line: 11211, column: 7, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11911, file: !1, line: 11211, column: 7)
!11935 = !DILocation(line: 11211, column: 13, scope: !11934)
!11936 = !DILocation(line: 11211, column: 20, scope: !11934)
!11937 = !DILocation(line: 11211, column: 7, scope: !11911)
!11938 = !DILocation(line: 11212, column: 5, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11934, file: !1, line: 11212, column: 5)
!11940 = !DILocation(line: 11213, column: 26, scope: !11911)
!11941 = !DILocation(line: 11213, column: 32, scope: !11911)
!11942 = !DILocation(line: 11213, column: 39, scope: !11911)
!11943 = !DILocation(line: 11213, column: 44, scope: !11911)
!11944 = !DILocation(line: 11213, column: 52, scope: !11911)
!11945 = !DILocation(line: 11213, column: 62, scope: !11911)
!11946 = !DILocation(line: 11213, column: 68, scope: !11911)
!11947 = !DILocation(line: 11213, column: 15, scope: !11911)
!11948 = !DILocation(line: 11213, column: 14, scope: !11911)
!11949 = !DILocation(line: 11214, column: 7, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11911, file: !1, line: 11214, column: 7)
!11951 = !DILocation(line: 11214, column: 19, scope: !11950)
!11952 = !DILocation(line: 11214, column: 7, scope: !11911)
!11953 = !DILocation(line: 11215, column: 5, scope: !11950)
!11954 = !DILocation(line: 11216, column: 23, scope: !11911)
!11955 = !DILocation(line: 11216, column: 29, scope: !11911)
!11956 = !DILocation(line: 11216, column: 36, scope: !11911)
!11957 = !DILocation(line: 11216, column: 3, scope: !11911)
!11958 = !DILocation(line: 11217, column: 3, scope: !11911)
!11959 = !DILocation(line: 11218, column: 1, scope: !11911)
!11960 = distinct !DISubprogram(name: "MagickShadowImage", scope: !1, file: !1, line: 11251, type: !11961, scopeLine: 11253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!11961 = !DISubroutineType(types: !11962)
!11962 = !{!807, !1143, !1325, !1325, !1666, !1666}
!11963 = !DILocalVariable(name: "wand", arg: 1, scope: !11960, file: !1, line: 11251, type: !1143)
!11964 = !DILocation(line: 11251, column: 60, scope: !11960)
!11965 = !DILocalVariable(name: "opacity", arg: 2, scope: !11960, file: !1, line: 11252, type: !1325)
!11966 = !DILocation(line: 11252, column: 16, scope: !11960)
!11967 = !DILocalVariable(name: "sigma", arg: 3, scope: !11960, file: !1, line: 11252, type: !1325)
!11968 = !DILocation(line: 11252, column: 37, scope: !11960)
!11969 = !DILocalVariable(name: "x", arg: 4, scope: !11960, file: !1, line: 11252, type: !1666)
!11970 = !DILocation(line: 11252, column: 57, scope: !11960)
!11971 = !DILocalVariable(name: "y", arg: 5, scope: !11960, file: !1, line: 11252, type: !1666)
!11972 = !DILocation(line: 11252, column: 73, scope: !11960)
!11973 = !DILocalVariable(name: "shadow_image", scope: !11960, file: !1, line: 11255, type: !791)
!11974 = !DILocation(line: 11255, column: 6, scope: !11960)
!11975 = !DILocation(line: 11259, column: 7, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11960, file: !1, line: 11259, column: 7)
!11977 = !DILocation(line: 11259, column: 13, scope: !11976)
!11978 = !DILocation(line: 11259, column: 19, scope: !11976)
!11979 = !DILocation(line: 11259, column: 7, scope: !11960)
!11980 = !DILocation(line: 11260, column: 60, scope: !11976)
!11981 = !DILocation(line: 11260, column: 66, scope: !11976)
!11982 = !DILocation(line: 11260, column: 12, scope: !11976)
!11983 = !DILocation(line: 11260, column: 5, scope: !11976)
!11984 = !DILocation(line: 11261, column: 7, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11960, file: !1, line: 11261, column: 7)
!11986 = !DILocation(line: 11261, column: 13, scope: !11985)
!11987 = !DILocation(line: 11261, column: 20, scope: !11985)
!11988 = !DILocation(line: 11261, column: 7, scope: !11960)
!11989 = !DILocation(line: 11262, column: 5, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11985, file: !1, line: 11262, column: 5)
!11991 = !DILocation(line: 11263, column: 28, scope: !11960)
!11992 = !DILocation(line: 11263, column: 34, scope: !11960)
!11993 = !DILocation(line: 11263, column: 41, scope: !11960)
!11994 = !DILocation(line: 11263, column: 49, scope: !11960)
!11995 = !DILocation(line: 11263, column: 55, scope: !11960)
!11996 = !DILocation(line: 11263, column: 57, scope: !11960)
!11997 = !DILocation(line: 11263, column: 59, scope: !11960)
!11998 = !DILocation(line: 11263, column: 65, scope: !11960)
!11999 = !DILocation(line: 11263, column: 16, scope: !11960)
!12000 = !DILocation(line: 11263, column: 15, scope: !11960)
!12001 = !DILocation(line: 11264, column: 7, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11960, file: !1, line: 11264, column: 7)
!12003 = !DILocation(line: 11264, column: 20, scope: !12002)
!12004 = !DILocation(line: 11264, column: 7, scope: !11960)
!12005 = !DILocation(line: 11265, column: 5, scope: !12002)
!12006 = !DILocation(line: 11266, column: 23, scope: !11960)
!12007 = !DILocation(line: 11266, column: 29, scope: !11960)
!12008 = !DILocation(line: 11266, column: 36, scope: !11960)
!12009 = !DILocation(line: 11266, column: 3, scope: !11960)
!12010 = !DILocation(line: 11267, column: 3, scope: !11960)
!12011 = !DILocation(line: 11268, column: 1, scope: !11960)
!12012 = distinct !DISubprogram(name: "MagickSharpenImage", scope: !1, file: !1, line: 11306, type: !1487, scopeLine: 11308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12013 = !DILocalVariable(name: "wand", arg: 1, scope: !12012, file: !1, line: 11306, type: !1143)
!12014 = !DILocation(line: 11306, column: 61, scope: !12012)
!12015 = !DILocalVariable(name: "radius", arg: 2, scope: !12012, file: !1, line: 11307, type: !1325)
!12016 = !DILocation(line: 11307, column: 16, scope: !12012)
!12017 = !DILocalVariable(name: "sigma", arg: 3, scope: !12012, file: !1, line: 11307, type: !1325)
!12018 = !DILocation(line: 11307, column: 36, scope: !12012)
!12019 = !DILocalVariable(name: "status", scope: !12012, file: !1, line: 11310, type: !807)
!12020 = !DILocation(line: 11310, column: 5, scope: !12012)
!12021 = !DILocation(line: 11312, column: 36, scope: !12012)
!12022 = !DILocation(line: 11312, column: 57, scope: !12012)
!12023 = !DILocation(line: 11312, column: 64, scope: !12012)
!12024 = !DILocation(line: 11312, column: 10, scope: !12012)
!12025 = !DILocation(line: 11312, column: 9, scope: !12012)
!12026 = !DILocation(line: 11313, column: 10, scope: !12012)
!12027 = !DILocation(line: 11313, column: 3, scope: !12012)
!12028 = distinct !DISubprogram(name: "MagickSharpenImageChannel", scope: !1, file: !1, line: 11316, type: !1505, scopeLine: 11318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12029 = !DILocalVariable(name: "wand", arg: 1, scope: !12028, file: !1, line: 11316, type: !1143)
!12030 = !DILocation(line: 11316, column: 68, scope: !12028)
!12031 = !DILocalVariable(name: "channel", arg: 2, scope: !12028, file: !1, line: 11317, type: !1507)
!12032 = !DILocation(line: 11317, column: 21, scope: !12028)
!12033 = !DILocalVariable(name: "radius", arg: 3, scope: !12028, file: !1, line: 11317, type: !1325)
!12034 = !DILocation(line: 11317, column: 42, scope: !12028)
!12035 = !DILocalVariable(name: "sigma", arg: 4, scope: !12028, file: !1, line: 11317, type: !1325)
!12036 = !DILocation(line: 11317, column: 62, scope: !12028)
!12037 = !DILocalVariable(name: "sharp_image", scope: !12028, file: !1, line: 11320, type: !791)
!12038 = !DILocation(line: 11320, column: 6, scope: !12028)
!12039 = !DILocation(line: 11324, column: 7, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12028, file: !1, line: 11324, column: 7)
!12041 = !DILocation(line: 11324, column: 13, scope: !12040)
!12042 = !DILocation(line: 11324, column: 19, scope: !12040)
!12043 = !DILocation(line: 11324, column: 7, scope: !12028)
!12044 = !DILocation(line: 11325, column: 60, scope: !12040)
!12045 = !DILocation(line: 11325, column: 66, scope: !12040)
!12046 = !DILocation(line: 11325, column: 12, scope: !12040)
!12047 = !DILocation(line: 11325, column: 5, scope: !12040)
!12048 = !DILocation(line: 11326, column: 7, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12028, file: !1, line: 11326, column: 7)
!12050 = !DILocation(line: 11326, column: 13, scope: !12049)
!12051 = !DILocation(line: 11326, column: 20, scope: !12049)
!12052 = !DILocation(line: 11326, column: 7, scope: !12028)
!12053 = !DILocation(line: 11327, column: 5, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12049, file: !1, line: 11327, column: 5)
!12055 = !DILocation(line: 11328, column: 35, scope: !12028)
!12056 = !DILocation(line: 11328, column: 41, scope: !12028)
!12057 = !DILocation(line: 11328, column: 48, scope: !12028)
!12058 = !DILocation(line: 11328, column: 56, scope: !12028)
!12059 = !DILocation(line: 11328, column: 63, scope: !12028)
!12060 = !DILocation(line: 11329, column: 5, scope: !12028)
!12061 = !DILocation(line: 11329, column: 11, scope: !12028)
!12062 = !DILocation(line: 11328, column: 15, scope: !12028)
!12063 = !DILocation(line: 11328, column: 14, scope: !12028)
!12064 = !DILocation(line: 11330, column: 7, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12028, file: !1, line: 11330, column: 7)
!12066 = !DILocation(line: 11330, column: 19, scope: !12065)
!12067 = !DILocation(line: 11330, column: 7, scope: !12028)
!12068 = !DILocation(line: 11331, column: 5, scope: !12065)
!12069 = !DILocation(line: 11332, column: 23, scope: !12028)
!12070 = !DILocation(line: 11332, column: 29, scope: !12028)
!12071 = !DILocation(line: 11332, column: 36, scope: !12028)
!12072 = !DILocation(line: 11332, column: 3, scope: !12028)
!12073 = !DILocation(line: 11333, column: 3, scope: !12028)
!12074 = !DILocation(line: 11334, column: 1, scope: !12028)
!12075 = distinct !DISubprogram(name: "MagickShaveImage", scope: !1, file: !1, line: 11366, type: !1555, scopeLine: 11368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12076 = !DILocalVariable(name: "wand", arg: 1, scope: !12075, file: !1, line: 11366, type: !1143)
!12077 = !DILocation(line: 11366, column: 59, scope: !12075)
!12078 = !DILocalVariable(name: "columns", arg: 2, scope: !12075, file: !1, line: 11367, type: !1214)
!12079 = !DILocation(line: 11367, column: 16, scope: !12075)
!12080 = !DILocalVariable(name: "rows", arg: 3, scope: !12075, file: !1, line: 11367, type: !1214)
!12081 = !DILocation(line: 11367, column: 37, scope: !12075)
!12082 = !DILocalVariable(name: "shave_image", scope: !12075, file: !1, line: 11370, type: !791)
!12083 = !DILocation(line: 11370, column: 6, scope: !12075)
!12084 = !DILocalVariable(name: "shave_info", scope: !12075, file: !1, line: 11373, type: !863)
!12085 = !DILocation(line: 11373, column: 5, scope: !12075)
!12086 = !DILocation(line: 11377, column: 7, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12075, file: !1, line: 11377, column: 7)
!12088 = !DILocation(line: 11377, column: 13, scope: !12087)
!12089 = !DILocation(line: 11377, column: 19, scope: !12087)
!12090 = !DILocation(line: 11377, column: 7, scope: !12075)
!12091 = !DILocation(line: 11378, column: 60, scope: !12087)
!12092 = !DILocation(line: 11378, column: 66, scope: !12087)
!12093 = !DILocation(line: 11378, column: 12, scope: !12087)
!12094 = !DILocation(line: 11378, column: 5, scope: !12087)
!12095 = !DILocation(line: 11379, column: 7, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12075, file: !1, line: 11379, column: 7)
!12097 = !DILocation(line: 11379, column: 13, scope: !12096)
!12098 = !DILocation(line: 11379, column: 20, scope: !12096)
!12099 = !DILocation(line: 11379, column: 7, scope: !12075)
!12100 = !DILocation(line: 11380, column: 5, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12096, file: !1, line: 11380, column: 5)
!12102 = !DILocation(line: 11381, column: 20, scope: !12075)
!12103 = !DILocation(line: 11381, column: 14, scope: !12075)
!12104 = !DILocation(line: 11381, column: 19, scope: !12075)
!12105 = !DILocation(line: 11382, column: 21, scope: !12075)
!12106 = !DILocation(line: 11382, column: 14, scope: !12075)
!12107 = !DILocation(line: 11382, column: 20, scope: !12075)
!12108 = !DILocation(line: 11383, column: 14, scope: !12075)
!12109 = !DILocation(line: 11383, column: 15, scope: !12075)
!12110 = !DILocation(line: 11384, column: 14, scope: !12075)
!12111 = !DILocation(line: 11384, column: 15, scope: !12075)
!12112 = !DILocation(line: 11385, column: 26, scope: !12075)
!12113 = !DILocation(line: 11385, column: 32, scope: !12075)
!12114 = !DILocation(line: 11385, column: 51, scope: !12075)
!12115 = !DILocation(line: 11385, column: 57, scope: !12075)
!12116 = !DILocation(line: 11385, column: 15, scope: !12075)
!12117 = !DILocation(line: 11385, column: 14, scope: !12075)
!12118 = !DILocation(line: 11386, column: 7, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12075, file: !1, line: 11386, column: 7)
!12120 = !DILocation(line: 11386, column: 19, scope: !12119)
!12121 = !DILocation(line: 11386, column: 7, scope: !12075)
!12122 = !DILocation(line: 11387, column: 5, scope: !12119)
!12123 = !DILocation(line: 11388, column: 23, scope: !12075)
!12124 = !DILocation(line: 11388, column: 29, scope: !12075)
!12125 = !DILocation(line: 11388, column: 36, scope: !12075)
!12126 = !DILocation(line: 11388, column: 3, scope: !12075)
!12127 = !DILocation(line: 11389, column: 3, scope: !12075)
!12128 = !DILocation(line: 11390, column: 1, scope: !12075)
!12129 = distinct !DISubprogram(name: "MagickShearImage", scope: !1, file: !1, line: 11427, type: !12130, scopeLine: 11429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12130 = !DISubroutineType(types: !12131)
!12131 = !{!807, !1143, !2348, !1325, !1325}
!12132 = !DILocalVariable(name: "wand", arg: 1, scope: !12129, file: !1, line: 11427, type: !1143)
!12133 = !DILocation(line: 11427, column: 59, scope: !12129)
!12134 = !DILocalVariable(name: "background", arg: 2, scope: !12129, file: !1, line: 11428, type: !2348)
!12135 = !DILocation(line: 11428, column: 20, scope: !12129)
!12136 = !DILocalVariable(name: "x_shear", arg: 3, scope: !12129, file: !1, line: 11428, type: !1325)
!12137 = !DILocation(line: 11428, column: 44, scope: !12129)
!12138 = !DILocalVariable(name: "y_shear", arg: 4, scope: !12129, file: !1, line: 11428, type: !1325)
!12139 = !DILocation(line: 11428, column: 65, scope: !12129)
!12140 = !DILocalVariable(name: "shear_image", scope: !12129, file: !1, line: 11431, type: !791)
!12141 = !DILocation(line: 11431, column: 6, scope: !12129)
!12142 = !DILocation(line: 11435, column: 7, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12129, file: !1, line: 11435, column: 7)
!12144 = !DILocation(line: 11435, column: 13, scope: !12143)
!12145 = !DILocation(line: 11435, column: 19, scope: !12143)
!12146 = !DILocation(line: 11435, column: 7, scope: !12129)
!12147 = !DILocation(line: 11436, column: 60, scope: !12143)
!12148 = !DILocation(line: 11436, column: 66, scope: !12143)
!12149 = !DILocation(line: 11436, column: 12, scope: !12143)
!12150 = !DILocation(line: 11436, column: 5, scope: !12143)
!12151 = !DILocation(line: 11437, column: 7, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12129, file: !1, line: 11437, column: 7)
!12153 = !DILocation(line: 11437, column: 13, scope: !12152)
!12154 = !DILocation(line: 11437, column: 20, scope: !12152)
!12155 = !DILocation(line: 11437, column: 7, scope: !12129)
!12156 = !DILocation(line: 11438, column: 5, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12152, file: !1, line: 11438, column: 5)
!12158 = !DILocation(line: 11439, column: 24, scope: !12129)
!12159 = !DILocation(line: 11439, column: 36, scope: !12129)
!12160 = !DILocation(line: 11439, column: 42, scope: !12129)
!12161 = !DILocation(line: 11439, column: 50, scope: !12129)
!12162 = !DILocation(line: 11439, column: 3, scope: !12129)
!12163 = !DILocation(line: 11440, column: 26, scope: !12129)
!12164 = !DILocation(line: 11440, column: 32, scope: !12129)
!12165 = !DILocation(line: 11440, column: 39, scope: !12129)
!12166 = !DILocation(line: 11440, column: 47, scope: !12129)
!12167 = !DILocation(line: 11440, column: 55, scope: !12129)
!12168 = !DILocation(line: 11440, column: 61, scope: !12129)
!12169 = !DILocation(line: 11440, column: 15, scope: !12129)
!12170 = !DILocation(line: 11440, column: 14, scope: !12129)
!12171 = !DILocation(line: 11441, column: 7, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12129, file: !1, line: 11441, column: 7)
!12173 = !DILocation(line: 11441, column: 19, scope: !12172)
!12174 = !DILocation(line: 11441, column: 7, scope: !12129)
!12175 = !DILocation(line: 11442, column: 5, scope: !12172)
!12176 = !DILocation(line: 11443, column: 23, scope: !12129)
!12177 = !DILocation(line: 11443, column: 29, scope: !12129)
!12178 = !DILocation(line: 11443, column: 36, scope: !12129)
!12179 = !DILocation(line: 11443, column: 3, scope: !12129)
!12180 = !DILocation(line: 11444, column: 3, scope: !12129)
!12181 = !DILocation(line: 11445, column: 1, scope: !12129)
!12182 = distinct !DISubprogram(name: "MagickSigmoidalContrastImage", scope: !1, file: !1, line: 11490, type: !11912, scopeLine: 11492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12183 = !DILocalVariable(name: "wand", arg: 1, scope: !12182, file: !1, line: 11490, type: !1143)
!12184 = !DILocation(line: 11490, column: 71, scope: !12182)
!12185 = !DILocalVariable(name: "sharpen", arg: 2, scope: !12182, file: !1, line: 11491, type: !2117)
!12186 = !DILocation(line: 11491, column: 27, scope: !12182)
!12187 = !DILocalVariable(name: "alpha", arg: 3, scope: !12182, file: !1, line: 11491, type: !1325)
!12188 = !DILocation(line: 11491, column: 48, scope: !12182)
!12189 = !DILocalVariable(name: "beta", arg: 4, scope: !12182, file: !1, line: 11491, type: !1325)
!12190 = !DILocation(line: 11491, column: 67, scope: !12182)
!12191 = !DILocalVariable(name: "status", scope: !12182, file: !1, line: 11494, type: !807)
!12192 = !DILocation(line: 11494, column: 5, scope: !12182)
!12193 = !DILocation(line: 11496, column: 46, scope: !12182)
!12194 = !DILocation(line: 11496, column: 67, scope: !12182)
!12195 = !DILocation(line: 11497, column: 5, scope: !12182)
!12196 = !DILocation(line: 11497, column: 11, scope: !12182)
!12197 = !DILocation(line: 11496, column: 10, scope: !12182)
!12198 = !DILocation(line: 11496, column: 9, scope: !12182)
!12199 = !DILocation(line: 11498, column: 10, scope: !12182)
!12200 = !DILocation(line: 11498, column: 3, scope: !12182)
!12201 = distinct !DISubprogram(name: "MagickSigmoidalContrastImageChannel", scope: !1, file: !1, line: 11501, type: !12202, scopeLine: 11504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12202 = !DISubroutineType(types: !12203)
!12203 = !{!807, !1143, !1507, !2117, !1325, !1325}
!12204 = !DILocalVariable(name: "wand", arg: 1, scope: !12201, file: !1, line: 11502, type: !1143)
!12205 = !DILocation(line: 11502, column: 15, scope: !12201)
!12206 = !DILocalVariable(name: "channel", arg: 2, scope: !12201, file: !1, line: 11502, type: !1507)
!12207 = !DILocation(line: 11502, column: 38, scope: !12201)
!12208 = !DILocalVariable(name: "sharpen", arg: 3, scope: !12201, file: !1, line: 11502, type: !2117)
!12209 = !DILocation(line: 11502, column: 70, scope: !12201)
!12210 = !DILocalVariable(name: "alpha", arg: 4, scope: !12201, file: !1, line: 11503, type: !1325)
!12211 = !DILocation(line: 11503, column: 16, scope: !12201)
!12212 = !DILocalVariable(name: "beta", arg: 5, scope: !12201, file: !1, line: 11503, type: !1325)
!12213 = !DILocation(line: 11503, column: 35, scope: !12201)
!12214 = !DILocalVariable(name: "status", scope: !12201, file: !1, line: 11506, type: !807)
!12215 = !DILocation(line: 11506, column: 5, scope: !12201)
!12216 = !DILocation(line: 11510, column: 7, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12201, file: !1, line: 11510, column: 7)
!12218 = !DILocation(line: 11510, column: 13, scope: !12217)
!12219 = !DILocation(line: 11510, column: 19, scope: !12217)
!12220 = !DILocation(line: 11510, column: 7, scope: !12201)
!12221 = !DILocation(line: 11511, column: 60, scope: !12217)
!12222 = !DILocation(line: 11511, column: 66, scope: !12217)
!12223 = !DILocation(line: 11511, column: 12, scope: !12217)
!12224 = !DILocation(line: 11511, column: 5, scope: !12217)
!12225 = !DILocation(line: 11512, column: 7, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12201, file: !1, line: 11512, column: 7)
!12227 = !DILocation(line: 11512, column: 13, scope: !12226)
!12228 = !DILocation(line: 11512, column: 20, scope: !12226)
!12229 = !DILocation(line: 11512, column: 7, scope: !12201)
!12230 = !DILocation(line: 11513, column: 5, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12226, file: !1, line: 11513, column: 5)
!12232 = !DILocation(line: 11514, column: 40, scope: !12201)
!12233 = !DILocation(line: 11514, column: 46, scope: !12201)
!12234 = !DILocation(line: 11514, column: 53, scope: !12201)
!12235 = !DILocation(line: 11514, column: 61, scope: !12201)
!12236 = !DILocation(line: 11514, column: 69, scope: !12201)
!12237 = !DILocation(line: 11514, column: 75, scope: !12201)
!12238 = !DILocation(line: 11514, column: 10, scope: !12201)
!12239 = !DILocation(line: 11514, column: 9, scope: !12201)
!12240 = !DILocation(line: 11515, column: 7, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12201, file: !1, line: 11515, column: 7)
!12242 = !DILocation(line: 11515, column: 14, scope: !12241)
!12243 = !DILocation(line: 11515, column: 7, scope: !12201)
!12244 = !DILocation(line: 11516, column: 22, scope: !12241)
!12245 = !DILocation(line: 11516, column: 28, scope: !12241)
!12246 = !DILocation(line: 11516, column: 39, scope: !12241)
!12247 = !DILocation(line: 11516, column: 45, scope: !12241)
!12248 = !DILocation(line: 11516, column: 53, scope: !12241)
!12249 = !DILocation(line: 11516, column: 5, scope: !12241)
!12250 = !DILocation(line: 11517, column: 10, scope: !12201)
!12251 = !DILocation(line: 11517, column: 3, scope: !12201)
!12252 = !DILocation(line: 11518, column: 1, scope: !12201)
!12253 = distinct !DISubprogram(name: "MagickSimilarityImage", scope: !1, file: !1, line: 11552, type: !12254, scopeLine: 11554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12254 = !DISubroutineType(types: !12255)
!12255 = !{!1143, !1143, !1456, !12256, !1117}
!12256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!12257 = !DILocalVariable(name: "wand", arg: 1, scope: !12253, file: !1, line: 11552, type: !1143)
!12258 = !DILocation(line: 11552, column: 58, scope: !12253)
!12259 = !DILocalVariable(name: "reference", arg: 2, scope: !12253, file: !1, line: 11553, type: !1456)
!12260 = !DILocation(line: 11553, column: 21, scope: !12253)
!12261 = !DILocalVariable(name: "offset", arg: 3, scope: !12253, file: !1, line: 11553, type: !12256)
!12262 = !DILocation(line: 11553, column: 46, scope: !12253)
!12263 = !DILocalVariable(name: "similarity", arg: 4, scope: !12253, file: !1, line: 11553, type: !1117)
!12264 = !DILocation(line: 11553, column: 61, scope: !12253)
!12265 = !DILocalVariable(name: "similarity_image", scope: !12253, file: !1, line: 11556, type: !791)
!12266 = !DILocation(line: 11556, column: 6, scope: !12253)
!12267 = !DILocation(line: 11560, column: 7, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12253, file: !1, line: 11560, column: 7)
!12269 = !DILocation(line: 11560, column: 13, scope: !12268)
!12270 = !DILocation(line: 11560, column: 19, scope: !12268)
!12271 = !DILocation(line: 11560, column: 7, scope: !12253)
!12272 = !DILocation(line: 11561, column: 60, scope: !12268)
!12273 = !DILocation(line: 11561, column: 66, scope: !12268)
!12274 = !DILocation(line: 11561, column: 12, scope: !12268)
!12275 = !DILocation(line: 11561, column: 5, scope: !12268)
!12276 = !DILocation(line: 11562, column: 8, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12253, file: !1, line: 11562, column: 7)
!12278 = !DILocation(line: 11562, column: 14, scope: !12277)
!12279 = !DILocation(line: 11562, column: 21, scope: !12277)
!12280 = !DILocation(line: 11562, column: 40, scope: !12277)
!12281 = !DILocation(line: 11562, column: 44, scope: !12277)
!12282 = !DILocation(line: 11562, column: 55, scope: !12277)
!12283 = !DILocation(line: 11562, column: 62, scope: !12277)
!12284 = !DILocation(line: 11562, column: 7, scope: !12253)
!12285 = !DILocation(line: 11564, column: 35, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12277, file: !1, line: 11563, column: 5)
!12287 = !DILocation(line: 11564, column: 41, scope: !12286)
!12288 = !DILocation(line: 11565, column: 35, scope: !12286)
!12289 = !DILocation(line: 11565, column: 41, scope: !12286)
!12290 = !DILocation(line: 11564, column: 14, scope: !12286)
!12291 = !DILocation(line: 11566, column: 7, scope: !12286)
!12292 = !DILocation(line: 11568, column: 36, scope: !12253)
!12293 = !DILocation(line: 11568, column: 42, scope: !12253)
!12294 = !DILocation(line: 11568, column: 49, scope: !12253)
!12295 = !DILocation(line: 11568, column: 60, scope: !12253)
!12296 = !DILocation(line: 11568, column: 67, scope: !12253)
!12297 = !DILocation(line: 11569, column: 5, scope: !12253)
!12298 = !DILocation(line: 11569, column: 17, scope: !12253)
!12299 = !DILocation(line: 11569, column: 23, scope: !12253)
!12300 = !DILocation(line: 11569, column: 31, scope: !12253)
!12301 = !DILocation(line: 11568, column: 20, scope: !12253)
!12302 = !DILocation(line: 11568, column: 19, scope: !12253)
!12303 = !DILocation(line: 11570, column: 7, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12253, file: !1, line: 11570, column: 7)
!12305 = !DILocation(line: 11570, column: 24, scope: !12304)
!12306 = !DILocation(line: 11570, column: 7, scope: !12253)
!12307 = !DILocation(line: 11571, column: 5, scope: !12304)
!12308 = !DILocation(line: 11572, column: 36, scope: !12253)
!12309 = !DILocation(line: 11572, column: 41, scope: !12253)
!12310 = !DILocation(line: 11572, column: 10, scope: !12253)
!12311 = !DILocation(line: 11572, column: 3, scope: !12253)
!12312 = !DILocation(line: 11573, column: 1, scope: !12253)
!12313 = distinct !DISubprogram(name: "MagickSketchImage", scope: !1, file: !1, line: 11609, type: !7838, scopeLine: 11611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12314 = !DILocalVariable(name: "wand", arg: 1, scope: !12313, file: !1, line: 11609, type: !1143)
!12315 = !DILocation(line: 11609, column: 60, scope: !12313)
!12316 = !DILocalVariable(name: "radius", arg: 2, scope: !12313, file: !1, line: 11610, type: !1325)
!12317 = !DILocation(line: 11610, column: 16, scope: !12313)
!12318 = !DILocalVariable(name: "sigma", arg: 3, scope: !12313, file: !1, line: 11610, type: !1325)
!12319 = !DILocation(line: 11610, column: 36, scope: !12313)
!12320 = !DILocalVariable(name: "angle", arg: 4, scope: !12313, file: !1, line: 11610, type: !1325)
!12321 = !DILocation(line: 11610, column: 55, scope: !12313)
!12322 = !DILocalVariable(name: "sketch_image", scope: !12313, file: !1, line: 11613, type: !791)
!12323 = !DILocation(line: 11613, column: 6, scope: !12313)
!12324 = !DILocation(line: 11617, column: 7, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12313, file: !1, line: 11617, column: 7)
!12326 = !DILocation(line: 11617, column: 13, scope: !12325)
!12327 = !DILocation(line: 11617, column: 19, scope: !12325)
!12328 = !DILocation(line: 11617, column: 7, scope: !12313)
!12329 = !DILocation(line: 11618, column: 60, scope: !12325)
!12330 = !DILocation(line: 11618, column: 66, scope: !12325)
!12331 = !DILocation(line: 11618, column: 12, scope: !12325)
!12332 = !DILocation(line: 11618, column: 5, scope: !12325)
!12333 = !DILocation(line: 11619, column: 7, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12313, file: !1, line: 11619, column: 7)
!12335 = !DILocation(line: 11619, column: 13, scope: !12334)
!12336 = !DILocation(line: 11619, column: 20, scope: !12334)
!12337 = !DILocation(line: 11619, column: 7, scope: !12313)
!12338 = !DILocation(line: 11620, column: 5, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12334, file: !1, line: 11620, column: 5)
!12340 = !DILocation(line: 11621, column: 28, scope: !12313)
!12341 = !DILocation(line: 11621, column: 34, scope: !12313)
!12342 = !DILocation(line: 11621, column: 41, scope: !12313)
!12343 = !DILocation(line: 11621, column: 48, scope: !12313)
!12344 = !DILocation(line: 11621, column: 54, scope: !12313)
!12345 = !DILocation(line: 11621, column: 60, scope: !12313)
!12346 = !DILocation(line: 11621, column: 66, scope: !12313)
!12347 = !DILocation(line: 11621, column: 16, scope: !12313)
!12348 = !DILocation(line: 11621, column: 15, scope: !12313)
!12349 = !DILocation(line: 11622, column: 7, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12313, file: !1, line: 11622, column: 7)
!12351 = !DILocation(line: 11622, column: 20, scope: !12350)
!12352 = !DILocation(line: 11622, column: 7, scope: !12313)
!12353 = !DILocation(line: 11623, column: 5, scope: !12350)
!12354 = !DILocation(line: 11624, column: 23, scope: !12313)
!12355 = !DILocation(line: 11624, column: 29, scope: !12313)
!12356 = !DILocation(line: 11624, column: 36, scope: !12313)
!12357 = !DILocation(line: 11624, column: 3, scope: !12313)
!12358 = !DILocation(line: 11625, column: 3, scope: !12313)
!12359 = !DILocation(line: 11626, column: 1, scope: !12313)
!12360 = distinct !DISubprogram(name: "MagickSmushImages", scope: !1, file: !1, line: 11658, type: !12361, scopeLine: 11660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!1143, !1143, !2117, !1666}
!12363 = !DILocalVariable(name: "wand", arg: 1, scope: !12360, file: !1, line: 11658, type: !1143)
!12364 = !DILocation(line: 11658, column: 54, scope: !12360)
!12365 = !DILocalVariable(name: "stack", arg: 2, scope: !12360, file: !1, line: 11659, type: !2117)
!12366 = !DILocation(line: 11659, column: 27, scope: !12360)
!12367 = !DILocalVariable(name: "offset", arg: 3, scope: !12360, file: !1, line: 11659, type: !1666)
!12368 = !DILocation(line: 11659, column: 47, scope: !12360)
!12369 = !DILocalVariable(name: "smush_image", scope: !12360, file: !1, line: 11662, type: !791)
!12370 = !DILocation(line: 11662, column: 6, scope: !12360)
!12371 = !DILocation(line: 11666, column: 7, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12360, file: !1, line: 11666, column: 7)
!12373 = !DILocation(line: 11666, column: 13, scope: !12372)
!12374 = !DILocation(line: 11666, column: 19, scope: !12372)
!12375 = !DILocation(line: 11666, column: 7, scope: !12360)
!12376 = !DILocation(line: 11667, column: 60, scope: !12372)
!12377 = !DILocation(line: 11667, column: 66, scope: !12372)
!12378 = !DILocation(line: 11667, column: 12, scope: !12372)
!12379 = !DILocation(line: 11667, column: 5, scope: !12372)
!12380 = !DILocation(line: 11668, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12360, file: !1, line: 11668, column: 7)
!12382 = !DILocation(line: 11668, column: 13, scope: !12381)
!12383 = !DILocation(line: 11668, column: 20, scope: !12381)
!12384 = !DILocation(line: 11668, column: 7, scope: !12360)
!12385 = !DILocation(line: 11669, column: 5, scope: !12381)
!12386 = !DILocation(line: 11670, column: 27, scope: !12360)
!12387 = !DILocation(line: 11670, column: 33, scope: !12360)
!12388 = !DILocation(line: 11670, column: 40, scope: !12360)
!12389 = !DILocation(line: 11670, column: 46, scope: !12360)
!12390 = !DILocation(line: 11670, column: 53, scope: !12360)
!12391 = !DILocation(line: 11670, column: 59, scope: !12360)
!12392 = !DILocation(line: 11670, column: 15, scope: !12360)
!12393 = !DILocation(line: 11670, column: 14, scope: !12360)
!12394 = !DILocation(line: 11671, column: 7, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12360, file: !1, line: 11671, column: 7)
!12396 = !DILocation(line: 11671, column: 19, scope: !12395)
!12397 = !DILocation(line: 11671, column: 7, scope: !12360)
!12398 = !DILocation(line: 11672, column: 5, scope: !12395)
!12399 = !DILocation(line: 11673, column: 36, scope: !12360)
!12400 = !DILocation(line: 11673, column: 41, scope: !12360)
!12401 = !DILocation(line: 11673, column: 10, scope: !12360)
!12402 = !DILocation(line: 11673, column: 3, scope: !12360)
!12403 = !DILocation(line: 11674, column: 1, scope: !12360)
!12404 = distinct !DISubprogram(name: "MagickSolarizeImage", scope: !1, file: !1, line: 11708, type: !2403, scopeLine: 11710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12405 = !DILocalVariable(name: "wand", arg: 1, scope: !12404, file: !1, line: 11708, type: !1143)
!12406 = !DILocation(line: 11708, column: 62, scope: !12404)
!12407 = !DILocalVariable(name: "threshold", arg: 2, scope: !12404, file: !1, line: 11709, type: !1325)
!12408 = !DILocation(line: 11709, column: 16, scope: !12404)
!12409 = !DILocalVariable(name: "status", scope: !12404, file: !1, line: 11712, type: !807)
!12410 = !DILocation(line: 11712, column: 5, scope: !12404)
!12411 = !DILocation(line: 11714, column: 37, scope: !12404)
!12412 = !DILocation(line: 11714, column: 58, scope: !12404)
!12413 = !DILocation(line: 11714, column: 10, scope: !12404)
!12414 = !DILocation(line: 11714, column: 9, scope: !12404)
!12415 = !DILocation(line: 11715, column: 10, scope: !12404)
!12416 = !DILocation(line: 11715, column: 3, scope: !12404)
!12417 = distinct !DISubprogram(name: "MagickSolarizeImageChannel", scope: !1, file: !1, line: 11718, type: !5233, scopeLine: 11720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12418 = !DILocalVariable(name: "wand", arg: 1, scope: !12417, file: !1, line: 11718, type: !1143)
!12419 = !DILocation(line: 11718, column: 69, scope: !12417)
!12420 = !DILocalVariable(name: "channel", arg: 2, scope: !12417, file: !1, line: 11719, type: !1507)
!12421 = !DILocation(line: 11719, column: 21, scope: !12417)
!12422 = !DILocalVariable(name: "threshold", arg: 3, scope: !12417, file: !1, line: 11719, type: !1325)
!12423 = !DILocation(line: 11719, column: 42, scope: !12417)
!12424 = !DILocalVariable(name: "status", scope: !12417, file: !1, line: 11722, type: !807)
!12425 = !DILocation(line: 11722, column: 5, scope: !12417)
!12426 = !DILocation(line: 11726, column: 7, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12417, file: !1, line: 11726, column: 7)
!12428 = !DILocation(line: 11726, column: 13, scope: !12427)
!12429 = !DILocation(line: 11726, column: 19, scope: !12427)
!12430 = !DILocation(line: 11726, column: 7, scope: !12417)
!12431 = !DILocation(line: 11727, column: 60, scope: !12427)
!12432 = !DILocation(line: 11727, column: 66, scope: !12427)
!12433 = !DILocation(line: 11727, column: 12, scope: !12427)
!12434 = !DILocation(line: 11727, column: 5, scope: !12427)
!12435 = !DILocation(line: 11728, column: 7, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12417, file: !1, line: 11728, column: 7)
!12437 = !DILocation(line: 11728, column: 13, scope: !12436)
!12438 = !DILocation(line: 11728, column: 20, scope: !12436)
!12439 = !DILocation(line: 11728, column: 7, scope: !12417)
!12440 = !DILocation(line: 11729, column: 5, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12436, file: !1, line: 11729, column: 5)
!12442 = !DILocation(line: 11730, column: 31, scope: !12417)
!12443 = !DILocation(line: 11730, column: 37, scope: !12417)
!12444 = !DILocation(line: 11730, column: 44, scope: !12417)
!12445 = !DILocation(line: 11730, column: 52, scope: !12417)
!12446 = !DILocation(line: 11730, column: 62, scope: !12417)
!12447 = !DILocation(line: 11730, column: 68, scope: !12417)
!12448 = !DILocation(line: 11730, column: 10, scope: !12417)
!12449 = !DILocation(line: 11730, column: 9, scope: !12417)
!12450 = !DILocation(line: 11731, column: 10, scope: !12417)
!12451 = !DILocation(line: 11731, column: 3, scope: !12417)
!12452 = !DILocation(line: 11732, column: 1, scope: !12417)
!12453 = distinct !DISubprogram(name: "MagickSparseColorImage", scope: !1, file: !1, line: 11785, type: !12454, scopeLine: 11788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!807, !1143, !1507, !12456, !1214, !1324}
!12456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12457)
!12457 = !DIDerivedType(tag: DW_TAG_typedef, name: "SparseColorMethod", file: !652, line: 70, baseType: !769)
!12458 = !DILocalVariable(name: "wand", arg: 1, scope: !12453, file: !1, line: 11785, type: !1143)
!12459 = !DILocation(line: 11785, column: 65, scope: !12453)
!12460 = !DILocalVariable(name: "channel", arg: 2, scope: !12453, file: !1, line: 11786, type: !1507)
!12461 = !DILocation(line: 11786, column: 21, scope: !12453)
!12462 = !DILocalVariable(name: "method", arg: 3, scope: !12453, file: !1, line: 11786, type: !12456)
!12463 = !DILocation(line: 11786, column: 53, scope: !12453)
!12464 = !DILocalVariable(name: "number_arguments", arg: 4, scope: !12453, file: !1, line: 11787, type: !1214)
!12465 = !DILocation(line: 11787, column: 16, scope: !12453)
!12466 = !DILocalVariable(name: "arguments", arg: 5, scope: !12453, file: !1, line: 11787, type: !1324)
!12467 = !DILocation(line: 11787, column: 47, scope: !12453)
!12468 = !DILocalVariable(name: "sparse_image", scope: !12453, file: !1, line: 11790, type: !791)
!12469 = !DILocation(line: 11790, column: 6, scope: !12453)
!12470 = !DILocation(line: 11794, column: 7, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12453, file: !1, line: 11794, column: 7)
!12472 = !DILocation(line: 11794, column: 13, scope: !12471)
!12473 = !DILocation(line: 11794, column: 19, scope: !12471)
!12474 = !DILocation(line: 11794, column: 7, scope: !12453)
!12475 = !DILocation(line: 11795, column: 60, scope: !12471)
!12476 = !DILocation(line: 11795, column: 66, scope: !12471)
!12477 = !DILocation(line: 11795, column: 12, scope: !12471)
!12478 = !DILocation(line: 11795, column: 5, scope: !12471)
!12479 = !DILocation(line: 11796, column: 7, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12453, file: !1, line: 11796, column: 7)
!12481 = !DILocation(line: 11796, column: 13, scope: !12480)
!12482 = !DILocation(line: 11796, column: 20, scope: !12480)
!12483 = !DILocation(line: 11796, column: 7, scope: !12453)
!12484 = !DILocation(line: 11797, column: 5, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12480, file: !1, line: 11797, column: 5)
!12486 = !DILocation(line: 11798, column: 33, scope: !12453)
!12487 = !DILocation(line: 11798, column: 39, scope: !12453)
!12488 = !DILocation(line: 11798, column: 46, scope: !12453)
!12489 = !DILocation(line: 11798, column: 54, scope: !12453)
!12490 = !DILocation(line: 11798, column: 61, scope: !12453)
!12491 = !DILocation(line: 11799, column: 5, scope: !12453)
!12492 = !DILocation(line: 11799, column: 15, scope: !12453)
!12493 = !DILocation(line: 11799, column: 21, scope: !12453)
!12494 = !DILocation(line: 11798, column: 16, scope: !12453)
!12495 = !DILocation(line: 11798, column: 15, scope: !12453)
!12496 = !DILocation(line: 11800, column: 7, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12453, file: !1, line: 11800, column: 7)
!12498 = !DILocation(line: 11800, column: 20, scope: !12497)
!12499 = !DILocation(line: 11800, column: 7, scope: !12453)
!12500 = !DILocation(line: 11801, column: 5, scope: !12497)
!12501 = !DILocation(line: 11802, column: 23, scope: !12453)
!12502 = !DILocation(line: 11802, column: 29, scope: !12453)
!12503 = !DILocation(line: 11802, column: 36, scope: !12453)
!12504 = !DILocation(line: 11802, column: 3, scope: !12453)
!12505 = !DILocation(line: 11803, column: 3, scope: !12453)
!12506 = !DILocation(line: 11804, column: 1, scope: !12453)
!12507 = distinct !DISubprogram(name: "MagickSpliceImage", scope: !1, file: !1, line: 11838, type: !2679, scopeLine: 11841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12508 = !DILocalVariable(name: "wand", arg: 1, scope: !12507, file: !1, line: 11838, type: !1143)
!12509 = !DILocation(line: 11838, column: 60, scope: !12507)
!12510 = !DILocalVariable(name: "width", arg: 2, scope: !12507, file: !1, line: 11839, type: !1214)
!12511 = !DILocation(line: 11839, column: 16, scope: !12507)
!12512 = !DILocalVariable(name: "height", arg: 3, scope: !12507, file: !1, line: 11839, type: !1214)
!12513 = !DILocation(line: 11839, column: 35, scope: !12507)
!12514 = !DILocalVariable(name: "x", arg: 4, scope: !12507, file: !1, line: 11839, type: !1666)
!12515 = !DILocation(line: 11839, column: 56, scope: !12507)
!12516 = !DILocalVariable(name: "y", arg: 5, scope: !12507, file: !1, line: 11840, type: !1666)
!12517 = !DILocation(line: 11840, column: 17, scope: !12507)
!12518 = !DILocalVariable(name: "splice_image", scope: !12507, file: !1, line: 11843, type: !791)
!12519 = !DILocation(line: 11843, column: 6, scope: !12507)
!12520 = !DILocalVariable(name: "splice", scope: !12507, file: !1, line: 11846, type: !863)
!12521 = !DILocation(line: 11846, column: 5, scope: !12507)
!12522 = !DILocation(line: 11850, column: 7, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12507, file: !1, line: 11850, column: 7)
!12524 = !DILocation(line: 11850, column: 13, scope: !12523)
!12525 = !DILocation(line: 11850, column: 19, scope: !12523)
!12526 = !DILocation(line: 11850, column: 7, scope: !12507)
!12527 = !DILocation(line: 11851, column: 60, scope: !12523)
!12528 = !DILocation(line: 11851, column: 66, scope: !12523)
!12529 = !DILocation(line: 11851, column: 12, scope: !12523)
!12530 = !DILocation(line: 11851, column: 5, scope: !12523)
!12531 = !DILocation(line: 11852, column: 7, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12507, file: !1, line: 11852, column: 7)
!12533 = !DILocation(line: 11852, column: 13, scope: !12532)
!12534 = !DILocation(line: 11852, column: 20, scope: !12532)
!12535 = !DILocation(line: 11852, column: 7, scope: !12507)
!12536 = !DILocation(line: 11853, column: 5, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12532, file: !1, line: 11853, column: 5)
!12538 = !DILocation(line: 11854, column: 16, scope: !12507)
!12539 = !DILocation(line: 11854, column: 10, scope: !12507)
!12540 = !DILocation(line: 11854, column: 15, scope: !12507)
!12541 = !DILocation(line: 11855, column: 17, scope: !12507)
!12542 = !DILocation(line: 11855, column: 10, scope: !12507)
!12543 = !DILocation(line: 11855, column: 16, scope: !12507)
!12544 = !DILocation(line: 11856, column: 12, scope: !12507)
!12545 = !DILocation(line: 11856, column: 10, scope: !12507)
!12546 = !DILocation(line: 11856, column: 11, scope: !12507)
!12547 = !DILocation(line: 11857, column: 12, scope: !12507)
!12548 = !DILocation(line: 11857, column: 10, scope: !12507)
!12549 = !DILocation(line: 11857, column: 11, scope: !12507)
!12550 = !DILocation(line: 11858, column: 28, scope: !12507)
!12551 = !DILocation(line: 11858, column: 34, scope: !12507)
!12552 = !DILocation(line: 11858, column: 49, scope: !12507)
!12553 = !DILocation(line: 11858, column: 55, scope: !12507)
!12554 = !DILocation(line: 11858, column: 16, scope: !12507)
!12555 = !DILocation(line: 11858, column: 15, scope: !12507)
!12556 = !DILocation(line: 11859, column: 7, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12507, file: !1, line: 11859, column: 7)
!12558 = !DILocation(line: 11859, column: 20, scope: !12557)
!12559 = !DILocation(line: 11859, column: 7, scope: !12507)
!12560 = !DILocation(line: 11860, column: 5, scope: !12557)
!12561 = !DILocation(line: 11861, column: 23, scope: !12507)
!12562 = !DILocation(line: 11861, column: 29, scope: !12507)
!12563 = !DILocation(line: 11861, column: 36, scope: !12507)
!12564 = !DILocation(line: 11861, column: 3, scope: !12507)
!12565 = !DILocation(line: 11862, column: 3, scope: !12507)
!12566 = !DILocation(line: 11863, column: 1, scope: !12507)
!12567 = distinct !DISubprogram(name: "MagickSpreadImage", scope: !1, file: !1, line: 11890, type: !2403, scopeLine: 11892, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12568 = !DILocalVariable(name: "wand", arg: 1, scope: !12567, file: !1, line: 11890, type: !1143)
!12569 = !DILocation(line: 11890, column: 60, scope: !12567)
!12570 = !DILocalVariable(name: "radius", arg: 2, scope: !12567, file: !1, line: 11891, type: !1325)
!12571 = !DILocation(line: 11891, column: 16, scope: !12567)
!12572 = !DILocalVariable(name: "spread_image", scope: !12567, file: !1, line: 11894, type: !791)
!12573 = !DILocation(line: 11894, column: 6, scope: !12567)
!12574 = !DILocation(line: 11898, column: 7, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12567, file: !1, line: 11898, column: 7)
!12576 = !DILocation(line: 11898, column: 13, scope: !12575)
!12577 = !DILocation(line: 11898, column: 19, scope: !12575)
!12578 = !DILocation(line: 11898, column: 7, scope: !12567)
!12579 = !DILocation(line: 11899, column: 60, scope: !12575)
!12580 = !DILocation(line: 11899, column: 66, scope: !12575)
!12581 = !DILocation(line: 11899, column: 12, scope: !12575)
!12582 = !DILocation(line: 11899, column: 5, scope: !12575)
!12583 = !DILocation(line: 11900, column: 7, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12567, file: !1, line: 11900, column: 7)
!12585 = !DILocation(line: 11900, column: 13, scope: !12584)
!12586 = !DILocation(line: 11900, column: 20, scope: !12584)
!12587 = !DILocation(line: 11900, column: 7, scope: !12567)
!12588 = !DILocation(line: 11901, column: 5, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12584, file: !1, line: 11901, column: 5)
!12590 = !DILocation(line: 11902, column: 28, scope: !12567)
!12591 = !DILocation(line: 11902, column: 34, scope: !12567)
!12592 = !DILocation(line: 11902, column: 41, scope: !12567)
!12593 = !DILocation(line: 11902, column: 48, scope: !12567)
!12594 = !DILocation(line: 11902, column: 54, scope: !12567)
!12595 = !DILocation(line: 11902, column: 16, scope: !12567)
!12596 = !DILocation(line: 11902, column: 15, scope: !12567)
!12597 = !DILocation(line: 11903, column: 7, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12567, file: !1, line: 11903, column: 7)
!12599 = !DILocation(line: 11903, column: 20, scope: !12598)
!12600 = !DILocation(line: 11903, column: 7, scope: !12567)
!12601 = !DILocation(line: 11904, column: 5, scope: !12598)
!12602 = !DILocation(line: 11905, column: 23, scope: !12567)
!12603 = !DILocation(line: 11905, column: 29, scope: !12567)
!12604 = !DILocation(line: 11905, column: 36, scope: !12567)
!12605 = !DILocation(line: 11905, column: 3, scope: !12567)
!12606 = !DILocation(line: 11906, column: 3, scope: !12567)
!12607 = !DILocation(line: 11907, column: 1, scope: !12567)
!12608 = distinct !DISubprogram(name: "MagickStatisticImage", scope: !1, file: !1, line: 11945, type: !12609, scopeLine: 11947, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!807, !1143, !12611, !1214, !1214}
!12611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12612)
!12612 = !DIDerivedType(tag: DW_TAG_typedef, name: "StatisticType", file: !675, line: 124, baseType: !778)
!12613 = !DILocalVariable(name: "wand", arg: 1, scope: !12608, file: !1, line: 11945, type: !1143)
!12614 = !DILocation(line: 11945, column: 63, scope: !12608)
!12615 = !DILocalVariable(name: "type", arg: 2, scope: !12608, file: !1, line: 11946, type: !12611)
!12616 = !DILocation(line: 11946, column: 23, scope: !12608)
!12617 = !DILocalVariable(name: "width", arg: 3, scope: !12608, file: !1, line: 11946, type: !1214)
!12618 = !DILocation(line: 11946, column: 41, scope: !12608)
!12619 = !DILocalVariable(name: "height", arg: 4, scope: !12608, file: !1, line: 11946, type: !1214)
!12620 = !DILocation(line: 11946, column: 60, scope: !12608)
!12621 = !DILocalVariable(name: "status", scope: !12608, file: !1, line: 11949, type: !807)
!12622 = !DILocation(line: 11949, column: 5, scope: !12608)
!12623 = !DILocation(line: 11951, column: 38, scope: !12608)
!12624 = !DILocation(line: 11951, column: 59, scope: !12608)
!12625 = !DILocation(line: 11951, column: 64, scope: !12608)
!12626 = !DILocation(line: 11951, column: 70, scope: !12608)
!12627 = !DILocation(line: 11951, column: 10, scope: !12608)
!12628 = !DILocation(line: 11951, column: 9, scope: !12608)
!12629 = !DILocation(line: 11952, column: 10, scope: !12608)
!12630 = !DILocation(line: 11952, column: 3, scope: !12608)
!12631 = distinct !DISubprogram(name: "MagickStatisticImageChannel", scope: !1, file: !1, line: 11955, type: !12632, scopeLine: 11958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12632 = !DISubroutineType(types: !12633)
!12633 = !{!807, !1143, !1507, !12611, !1214, !1214}
!12634 = !DILocalVariable(name: "wand", arg: 1, scope: !12631, file: !1, line: 11955, type: !1143)
!12635 = !DILocation(line: 11955, column: 70, scope: !12631)
!12636 = !DILocalVariable(name: "channel", arg: 2, scope: !12631, file: !1, line: 11956, type: !1507)
!12637 = !DILocation(line: 11956, column: 21, scope: !12631)
!12638 = !DILocalVariable(name: "type", arg: 3, scope: !12631, file: !1, line: 11956, type: !12611)
!12639 = !DILocation(line: 11956, column: 49, scope: !12631)
!12640 = !DILocalVariable(name: "width", arg: 4, scope: !12631, file: !1, line: 11956, type: !1214)
!12641 = !DILocation(line: 11956, column: 67, scope: !12631)
!12642 = !DILocalVariable(name: "height", arg: 5, scope: !12631, file: !1, line: 11957, type: !1214)
!12643 = !DILocation(line: 11957, column: 16, scope: !12631)
!12644 = !DILocalVariable(name: "statistic_image", scope: !12631, file: !1, line: 11960, type: !791)
!12645 = !DILocation(line: 11960, column: 6, scope: !12631)
!12646 = !DILocation(line: 11964, column: 7, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12631, file: !1, line: 11964, column: 7)
!12648 = !DILocation(line: 11964, column: 13, scope: !12647)
!12649 = !DILocation(line: 11964, column: 19, scope: !12647)
!12650 = !DILocation(line: 11964, column: 7, scope: !12631)
!12651 = !DILocation(line: 11965, column: 60, scope: !12647)
!12652 = !DILocation(line: 11965, column: 66, scope: !12647)
!12653 = !DILocation(line: 11965, column: 12, scope: !12647)
!12654 = !DILocation(line: 11965, column: 5, scope: !12647)
!12655 = !DILocation(line: 11966, column: 7, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12631, file: !1, line: 11966, column: 7)
!12657 = !DILocation(line: 11966, column: 13, scope: !12656)
!12658 = !DILocation(line: 11966, column: 20, scope: !12656)
!12659 = !DILocation(line: 11966, column: 7, scope: !12631)
!12660 = !DILocation(line: 11967, column: 5, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12656, file: !1, line: 11967, column: 5)
!12662 = !DILocation(line: 11968, column: 41, scope: !12631)
!12663 = !DILocation(line: 11968, column: 47, scope: !12631)
!12664 = !DILocation(line: 11968, column: 54, scope: !12631)
!12665 = !DILocation(line: 11968, column: 62, scope: !12631)
!12666 = !DILocation(line: 11968, column: 67, scope: !12631)
!12667 = !DILocation(line: 11968, column: 73, scope: !12631)
!12668 = !DILocation(line: 11969, column: 5, scope: !12631)
!12669 = !DILocation(line: 11969, column: 11, scope: !12631)
!12670 = !DILocation(line: 11968, column: 19, scope: !12631)
!12671 = !DILocation(line: 11968, column: 18, scope: !12631)
!12672 = !DILocation(line: 11970, column: 7, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12631, file: !1, line: 11970, column: 7)
!12674 = !DILocation(line: 11970, column: 23, scope: !12673)
!12675 = !DILocation(line: 11970, column: 7, scope: !12631)
!12676 = !DILocation(line: 11971, column: 5, scope: !12673)
!12677 = !DILocation(line: 11972, column: 23, scope: !12631)
!12678 = !DILocation(line: 11972, column: 29, scope: !12631)
!12679 = !DILocation(line: 11972, column: 36, scope: !12631)
!12680 = !DILocation(line: 11972, column: 3, scope: !12631)
!12681 = !DILocation(line: 11973, column: 3, scope: !12631)
!12682 = !DILocation(line: 11974, column: 1, scope: !12631)
!12683 = distinct !DISubprogram(name: "MagickSteganoImage", scope: !1, file: !1, line: 12006, type: !12684, scopeLine: 12008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{!1143, !1143, !1456, !1666}
!12686 = !DILocalVariable(name: "wand", arg: 1, scope: !12683, file: !1, line: 12006, type: !1143)
!12687 = !DILocation(line: 12006, column: 55, scope: !12683)
!12688 = !DILocalVariable(name: "watermark_wand", arg: 2, scope: !12683, file: !1, line: 12007, type: !1456)
!12689 = !DILocation(line: 12007, column: 21, scope: !12683)
!12690 = !DILocalVariable(name: "offset", arg: 3, scope: !12683, file: !1, line: 12007, type: !1666)
!12691 = !DILocation(line: 12007, column: 50, scope: !12683)
!12692 = !DILocalVariable(name: "stegano_image", scope: !12683, file: !1, line: 12010, type: !791)
!12693 = !DILocation(line: 12010, column: 6, scope: !12683)
!12694 = !DILocation(line: 12014, column: 7, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12683, file: !1, line: 12014, column: 7)
!12696 = !DILocation(line: 12014, column: 13, scope: !12695)
!12697 = !DILocation(line: 12014, column: 19, scope: !12695)
!12698 = !DILocation(line: 12014, column: 7, scope: !12683)
!12699 = !DILocation(line: 12015, column: 60, scope: !12695)
!12700 = !DILocation(line: 12015, column: 66, scope: !12695)
!12701 = !DILocation(line: 12015, column: 12, scope: !12695)
!12702 = !DILocation(line: 12015, column: 5, scope: !12695)
!12703 = !DILocation(line: 12016, column: 8, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12683, file: !1, line: 12016, column: 7)
!12705 = !DILocation(line: 12016, column: 14, scope: !12704)
!12706 = !DILocation(line: 12016, column: 21, scope: !12704)
!12707 = !DILocation(line: 12016, column: 40, scope: !12704)
!12708 = !DILocation(line: 12017, column: 8, scope: !12704)
!12709 = !DILocation(line: 12017, column: 24, scope: !12704)
!12710 = !DILocation(line: 12017, column: 31, scope: !12704)
!12711 = !DILocation(line: 12016, column: 7, scope: !12683)
!12712 = !DILocation(line: 12019, column: 35, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12704, file: !1, line: 12018, column: 5)
!12714 = !DILocation(line: 12019, column: 41, scope: !12713)
!12715 = !DILocation(line: 12020, column: 35, scope: !12713)
!12716 = !DILocation(line: 12020, column: 41, scope: !12713)
!12717 = !DILocation(line: 12019, column: 14, scope: !12713)
!12718 = !DILocation(line: 12021, column: 7, scope: !12713)
!12719 = !DILocation(line: 12023, column: 24, scope: !12683)
!12720 = !DILocation(line: 12023, column: 3, scope: !12683)
!12721 = !DILocation(line: 12023, column: 9, scope: !12683)
!12722 = !DILocation(line: 12023, column: 17, scope: !12683)
!12723 = !DILocation(line: 12023, column: 23, scope: !12683)
!12724 = !DILocation(line: 12024, column: 30, scope: !12683)
!12725 = !DILocation(line: 12024, column: 36, scope: !12683)
!12726 = !DILocation(line: 12024, column: 43, scope: !12683)
!12727 = !DILocation(line: 12024, column: 59, scope: !12683)
!12728 = !DILocation(line: 12025, column: 5, scope: !12683)
!12729 = !DILocation(line: 12025, column: 11, scope: !12683)
!12730 = !DILocation(line: 12024, column: 17, scope: !12683)
!12731 = !DILocation(line: 12024, column: 16, scope: !12683)
!12732 = !DILocation(line: 12026, column: 7, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12683, file: !1, line: 12026, column: 7)
!12734 = !DILocation(line: 12026, column: 21, scope: !12733)
!12735 = !DILocation(line: 12026, column: 7, scope: !12683)
!12736 = !DILocation(line: 12027, column: 5, scope: !12733)
!12737 = !DILocation(line: 12028, column: 36, scope: !12683)
!12738 = !DILocation(line: 12028, column: 41, scope: !12683)
!12739 = !DILocation(line: 12028, column: 10, scope: !12683)
!12740 = !DILocation(line: 12028, column: 3, scope: !12683)
!12741 = !DILocation(line: 12029, column: 1, scope: !12683)
!12742 = distinct !DISubprogram(name: "MagickStereoImage", scope: !1, file: !1, line: 12057, type: !12743, scopeLine: 12059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{!1143, !1143, !1456}
!12745 = !DILocalVariable(name: "wand", arg: 1, scope: !12742, file: !1, line: 12057, type: !1143)
!12746 = !DILocation(line: 12057, column: 54, scope: !12742)
!12747 = !DILocalVariable(name: "offset_wand", arg: 2, scope: !12742, file: !1, line: 12058, type: !1456)
!12748 = !DILocation(line: 12058, column: 21, scope: !12742)
!12749 = !DILocalVariable(name: "stereo_image", scope: !12742, file: !1, line: 12061, type: !791)
!12750 = !DILocation(line: 12061, column: 6, scope: !12742)
!12751 = !DILocation(line: 12065, column: 7, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12742, file: !1, line: 12065, column: 7)
!12753 = !DILocation(line: 12065, column: 13, scope: !12752)
!12754 = !DILocation(line: 12065, column: 19, scope: !12752)
!12755 = !DILocation(line: 12065, column: 7, scope: !12742)
!12756 = !DILocation(line: 12066, column: 60, scope: !12752)
!12757 = !DILocation(line: 12066, column: 66, scope: !12752)
!12758 = !DILocation(line: 12066, column: 12, scope: !12752)
!12759 = !DILocation(line: 12066, column: 5, scope: !12752)
!12760 = !DILocation(line: 12067, column: 8, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12742, file: !1, line: 12067, column: 7)
!12762 = !DILocation(line: 12067, column: 14, scope: !12761)
!12763 = !DILocation(line: 12067, column: 21, scope: !12761)
!12764 = !DILocation(line: 12067, column: 40, scope: !12761)
!12765 = !DILocation(line: 12068, column: 8, scope: !12761)
!12766 = !DILocation(line: 12068, column: 21, scope: !12761)
!12767 = !DILocation(line: 12068, column: 28, scope: !12761)
!12768 = !DILocation(line: 12067, column: 7, scope: !12742)
!12769 = !DILocation(line: 12070, column: 35, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12761, file: !1, line: 12069, column: 5)
!12771 = !DILocation(line: 12070, column: 41, scope: !12770)
!12772 = !DILocation(line: 12071, column: 35, scope: !12770)
!12773 = !DILocation(line: 12071, column: 41, scope: !12770)
!12774 = !DILocation(line: 12070, column: 14, scope: !12770)
!12775 = !DILocation(line: 12072, column: 7, scope: !12770)
!12776 = !DILocation(line: 12074, column: 28, scope: !12742)
!12777 = !DILocation(line: 12074, column: 34, scope: !12742)
!12778 = !DILocation(line: 12074, column: 41, scope: !12742)
!12779 = !DILocation(line: 12074, column: 54, scope: !12742)
!12780 = !DILocation(line: 12074, column: 61, scope: !12742)
!12781 = !DILocation(line: 12074, column: 67, scope: !12742)
!12782 = !DILocation(line: 12074, column: 16, scope: !12742)
!12783 = !DILocation(line: 12074, column: 15, scope: !12742)
!12784 = !DILocation(line: 12075, column: 7, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12742, file: !1, line: 12075, column: 7)
!12786 = !DILocation(line: 12075, column: 20, scope: !12785)
!12787 = !DILocation(line: 12075, column: 7, scope: !12742)
!12788 = !DILocation(line: 12076, column: 5, scope: !12785)
!12789 = !DILocation(line: 12077, column: 36, scope: !12742)
!12790 = !DILocation(line: 12077, column: 41, scope: !12742)
!12791 = !DILocation(line: 12077, column: 10, scope: !12742)
!12792 = !DILocation(line: 12077, column: 3, scope: !12742)
!12793 = !DILocation(line: 12078, column: 1, scope: !12742)
!12794 = distinct !DISubprogram(name: "MagickStripImage", scope: !1, file: !1, line: 12102, type: !2240, scopeLine: 12103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12795 = !DILocalVariable(name: "wand", arg: 1, scope: !12794, file: !1, line: 12102, type: !1143)
!12796 = !DILocation(line: 12102, column: 59, scope: !12794)
!12797 = !DILocalVariable(name: "status", scope: !12794, file: !1, line: 12105, type: !807)
!12798 = !DILocation(line: 12105, column: 5, scope: !12794)
!12799 = !DILocation(line: 12109, column: 7, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12794, file: !1, line: 12109, column: 7)
!12801 = !DILocation(line: 12109, column: 13, scope: !12800)
!12802 = !DILocation(line: 12109, column: 19, scope: !12800)
!12803 = !DILocation(line: 12109, column: 7, scope: !12794)
!12804 = !DILocation(line: 12110, column: 60, scope: !12800)
!12805 = !DILocation(line: 12110, column: 66, scope: !12800)
!12806 = !DILocation(line: 12110, column: 12, scope: !12800)
!12807 = !DILocation(line: 12110, column: 5, scope: !12800)
!12808 = !DILocation(line: 12111, column: 7, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12794, file: !1, line: 12111, column: 7)
!12810 = !DILocation(line: 12111, column: 13, scope: !12809)
!12811 = !DILocation(line: 12111, column: 20, scope: !12809)
!12812 = !DILocation(line: 12111, column: 7, scope: !12794)
!12813 = !DILocation(line: 12112, column: 5, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 12112, column: 5)
!12815 = !DILocation(line: 12113, column: 21, scope: !12794)
!12816 = !DILocation(line: 12113, column: 27, scope: !12794)
!12817 = !DILocation(line: 12113, column: 10, scope: !12794)
!12818 = !DILocation(line: 12113, column: 9, scope: !12794)
!12819 = !DILocation(line: 12114, column: 7, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12794, file: !1, line: 12114, column: 7)
!12821 = !DILocation(line: 12114, column: 14, scope: !12820)
!12822 = !DILocation(line: 12114, column: 7, scope: !12794)
!12823 = !DILocation(line: 12115, column: 22, scope: !12820)
!12824 = !DILocation(line: 12115, column: 28, scope: !12820)
!12825 = !DILocation(line: 12115, column: 39, scope: !12820)
!12826 = !DILocation(line: 12115, column: 45, scope: !12820)
!12827 = !DILocation(line: 12115, column: 53, scope: !12820)
!12828 = !DILocation(line: 12115, column: 5, scope: !12820)
!12829 = !DILocation(line: 12116, column: 10, scope: !12794)
!12830 = !DILocation(line: 12116, column: 3, scope: !12794)
!12831 = !DILocation(line: 12117, column: 1, scope: !12794)
!12832 = distinct !DISubprogram(name: "MagickSwirlImage", scope: !1, file: !1, line: 12145, type: !2403, scopeLine: 12147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12833 = !DILocalVariable(name: "wand", arg: 1, scope: !12832, file: !1, line: 12145, type: !1143)
!12834 = !DILocation(line: 12145, column: 59, scope: !12832)
!12835 = !DILocalVariable(name: "degrees", arg: 2, scope: !12832, file: !1, line: 12146, type: !1325)
!12836 = !DILocation(line: 12146, column: 16, scope: !12832)
!12837 = !DILocalVariable(name: "swirl_image", scope: !12832, file: !1, line: 12149, type: !791)
!12838 = !DILocation(line: 12149, column: 6, scope: !12832)
!12839 = !DILocation(line: 12153, column: 7, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12832, file: !1, line: 12153, column: 7)
!12841 = !DILocation(line: 12153, column: 13, scope: !12840)
!12842 = !DILocation(line: 12153, column: 19, scope: !12840)
!12843 = !DILocation(line: 12153, column: 7, scope: !12832)
!12844 = !DILocation(line: 12154, column: 60, scope: !12840)
!12845 = !DILocation(line: 12154, column: 66, scope: !12840)
!12846 = !DILocation(line: 12154, column: 12, scope: !12840)
!12847 = !DILocation(line: 12154, column: 5, scope: !12840)
!12848 = !DILocation(line: 12155, column: 7, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12832, file: !1, line: 12155, column: 7)
!12850 = !DILocation(line: 12155, column: 13, scope: !12849)
!12851 = !DILocation(line: 12155, column: 20, scope: !12849)
!12852 = !DILocation(line: 12155, column: 7, scope: !12832)
!12853 = !DILocation(line: 12156, column: 5, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12849, file: !1, line: 12156, column: 5)
!12855 = !DILocation(line: 12157, column: 26, scope: !12832)
!12856 = !DILocation(line: 12157, column: 32, scope: !12832)
!12857 = !DILocation(line: 12157, column: 39, scope: !12832)
!12858 = !DILocation(line: 12157, column: 47, scope: !12832)
!12859 = !DILocation(line: 12157, column: 53, scope: !12832)
!12860 = !DILocation(line: 12157, column: 15, scope: !12832)
!12861 = !DILocation(line: 12157, column: 14, scope: !12832)
!12862 = !DILocation(line: 12158, column: 7, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12832, file: !1, line: 12158, column: 7)
!12864 = !DILocation(line: 12158, column: 19, scope: !12863)
!12865 = !DILocation(line: 12158, column: 7, scope: !12832)
!12866 = !DILocation(line: 12159, column: 5, scope: !12863)
!12867 = !DILocation(line: 12160, column: 23, scope: !12832)
!12868 = !DILocation(line: 12160, column: 29, scope: !12832)
!12869 = !DILocation(line: 12160, column: 36, scope: !12832)
!12870 = !DILocation(line: 12160, column: 3, scope: !12832)
!12871 = !DILocation(line: 12161, column: 3, scope: !12832)
!12872 = !DILocation(line: 12162, column: 1, scope: !12832)
!12873 = distinct !DISubprogram(name: "MagickTextureImage", scope: !1, file: !1, line: 12190, type: !12743, scopeLine: 12192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12874 = !DILocalVariable(name: "wand", arg: 1, scope: !12873, file: !1, line: 12190, type: !1143)
!12875 = !DILocation(line: 12190, column: 55, scope: !12873)
!12876 = !DILocalVariable(name: "texture_wand", arg: 2, scope: !12873, file: !1, line: 12191, type: !1456)
!12877 = !DILocation(line: 12191, column: 21, scope: !12873)
!12878 = !DILocalVariable(name: "texture_image", scope: !12873, file: !1, line: 12194, type: !791)
!12879 = !DILocation(line: 12194, column: 6, scope: !12873)
!12880 = !DILocalVariable(name: "status", scope: !12873, file: !1, line: 12197, type: !807)
!12881 = !DILocation(line: 12197, column: 5, scope: !12873)
!12882 = !DILocation(line: 12201, column: 7, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12873, file: !1, line: 12201, column: 7)
!12884 = !DILocation(line: 12201, column: 13, scope: !12883)
!12885 = !DILocation(line: 12201, column: 19, scope: !12883)
!12886 = !DILocation(line: 12201, column: 7, scope: !12873)
!12887 = !DILocation(line: 12202, column: 60, scope: !12883)
!12888 = !DILocation(line: 12202, column: 66, scope: !12883)
!12889 = !DILocation(line: 12202, column: 12, scope: !12883)
!12890 = !DILocation(line: 12202, column: 5, scope: !12883)
!12891 = !DILocation(line: 12203, column: 8, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12873, file: !1, line: 12203, column: 7)
!12893 = !DILocation(line: 12203, column: 14, scope: !12892)
!12894 = !DILocation(line: 12203, column: 21, scope: !12892)
!12895 = !DILocation(line: 12203, column: 40, scope: !12892)
!12896 = !DILocation(line: 12204, column: 8, scope: !12892)
!12897 = !DILocation(line: 12204, column: 22, scope: !12892)
!12898 = !DILocation(line: 12204, column: 29, scope: !12892)
!12899 = !DILocation(line: 12203, column: 7, scope: !12873)
!12900 = !DILocation(line: 12206, column: 35, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12892, file: !1, line: 12205, column: 5)
!12902 = !DILocation(line: 12206, column: 41, scope: !12901)
!12903 = !DILocation(line: 12207, column: 35, scope: !12901)
!12904 = !DILocation(line: 12207, column: 41, scope: !12901)
!12905 = !DILocation(line: 12206, column: 14, scope: !12901)
!12906 = !DILocation(line: 12208, column: 7, scope: !12901)
!12907 = !DILocation(line: 12210, column: 28, scope: !12873)
!12908 = !DILocation(line: 12210, column: 34, scope: !12873)
!12909 = !DILocation(line: 12210, column: 56, scope: !12873)
!12910 = !DILocation(line: 12210, column: 62, scope: !12873)
!12911 = !DILocation(line: 12210, column: 17, scope: !12873)
!12912 = !DILocation(line: 12210, column: 16, scope: !12873)
!12913 = !DILocation(line: 12211, column: 7, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12873, file: !1, line: 12211, column: 7)
!12915 = !DILocation(line: 12211, column: 21, scope: !12914)
!12916 = !DILocation(line: 12211, column: 7, scope: !12873)
!12917 = !DILocation(line: 12212, column: 5, scope: !12914)
!12918 = !DILocation(line: 12213, column: 23, scope: !12873)
!12919 = !DILocation(line: 12213, column: 37, scope: !12873)
!12920 = !DILocation(line: 12213, column: 51, scope: !12873)
!12921 = !DILocation(line: 12213, column: 10, scope: !12873)
!12922 = !DILocation(line: 12213, column: 9, scope: !12873)
!12923 = !DILocation(line: 12214, column: 7, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12873, file: !1, line: 12214, column: 7)
!12925 = !DILocation(line: 12214, column: 14, scope: !12924)
!12926 = !DILocation(line: 12214, column: 7, scope: !12873)
!12927 = !DILocation(line: 12216, column: 24, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12924, file: !1, line: 12215, column: 5)
!12929 = !DILocation(line: 12216, column: 30, scope: !12928)
!12930 = !DILocation(line: 12216, column: 41, scope: !12928)
!12931 = !DILocation(line: 12216, column: 56, scope: !12928)
!12932 = !DILocation(line: 12216, column: 7, scope: !12928)
!12933 = !DILocation(line: 12217, column: 34, scope: !12928)
!12934 = !DILocation(line: 12217, column: 21, scope: !12928)
!12935 = !DILocation(line: 12217, column: 20, scope: !12928)
!12936 = !DILocation(line: 12218, column: 7, scope: !12928)
!12937 = !DILocation(line: 12220, column: 36, scope: !12873)
!12938 = !DILocation(line: 12220, column: 41, scope: !12873)
!12939 = !DILocation(line: 12220, column: 10, scope: !12873)
!12940 = !DILocation(line: 12220, column: 3, scope: !12873)
!12941 = !DILocation(line: 12221, column: 1, scope: !12873)
!12942 = distinct !DISubprogram(name: "MagickThresholdImage", scope: !1, file: !1, line: 12254, type: !2403, scopeLine: 12256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12943 = !DILocalVariable(name: "wand", arg: 1, scope: !12942, file: !1, line: 12254, type: !1143)
!12944 = !DILocation(line: 12254, column: 63, scope: !12942)
!12945 = !DILocalVariable(name: "threshold", arg: 2, scope: !12942, file: !1, line: 12255, type: !1325)
!12946 = !DILocation(line: 12255, column: 16, scope: !12942)
!12947 = !DILocalVariable(name: "status", scope: !12942, file: !1, line: 12258, type: !807)
!12948 = !DILocation(line: 12258, column: 5, scope: !12942)
!12949 = !DILocation(line: 12260, column: 38, scope: !12942)
!12950 = !DILocation(line: 12260, column: 59, scope: !12942)
!12951 = !DILocation(line: 12260, column: 10, scope: !12942)
!12952 = !DILocation(line: 12260, column: 9, scope: !12942)
!12953 = !DILocation(line: 12261, column: 10, scope: !12942)
!12954 = !DILocation(line: 12261, column: 3, scope: !12942)
!12955 = distinct !DISubprogram(name: "MagickThresholdImageChannel", scope: !1, file: !1, line: 12264, type: !5233, scopeLine: 12266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!12956 = !DILocalVariable(name: "wand", arg: 1, scope: !12955, file: !1, line: 12264, type: !1143)
!12957 = !DILocation(line: 12264, column: 70, scope: !12955)
!12958 = !DILocalVariable(name: "channel", arg: 2, scope: !12955, file: !1, line: 12265, type: !1507)
!12959 = !DILocation(line: 12265, column: 21, scope: !12955)
!12960 = !DILocalVariable(name: "threshold", arg: 3, scope: !12955, file: !1, line: 12265, type: !1325)
!12961 = !DILocation(line: 12265, column: 42, scope: !12955)
!12962 = !DILocalVariable(name: "status", scope: !12955, file: !1, line: 12268, type: !807)
!12963 = !DILocation(line: 12268, column: 5, scope: !12955)
!12964 = !DILocation(line: 12272, column: 7, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12955, file: !1, line: 12272, column: 7)
!12966 = !DILocation(line: 12272, column: 13, scope: !12965)
!12967 = !DILocation(line: 12272, column: 19, scope: !12965)
!12968 = !DILocation(line: 12272, column: 7, scope: !12955)
!12969 = !DILocation(line: 12273, column: 60, scope: !12965)
!12970 = !DILocation(line: 12273, column: 66, scope: !12965)
!12971 = !DILocation(line: 12273, column: 12, scope: !12965)
!12972 = !DILocation(line: 12273, column: 5, scope: !12965)
!12973 = !DILocation(line: 12274, column: 7, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12955, file: !1, line: 12274, column: 7)
!12975 = !DILocation(line: 12274, column: 13, scope: !12974)
!12976 = !DILocation(line: 12274, column: 20, scope: !12974)
!12977 = !DILocation(line: 12274, column: 7, scope: !12955)
!12978 = !DILocation(line: 12275, column: 5, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12974, file: !1, line: 12275, column: 5)
!12980 = !DILocation(line: 12276, column: 30, scope: !12955)
!12981 = !DILocation(line: 12276, column: 36, scope: !12955)
!12982 = !DILocation(line: 12276, column: 43, scope: !12955)
!12983 = !DILocation(line: 12276, column: 51, scope: !12955)
!12984 = !DILocation(line: 12276, column: 10, scope: !12955)
!12985 = !DILocation(line: 12276, column: 9, scope: !12955)
!12986 = !DILocation(line: 12277, column: 7, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12955, file: !1, line: 12277, column: 7)
!12988 = !DILocation(line: 12277, column: 14, scope: !12987)
!12989 = !DILocation(line: 12277, column: 7, scope: !12955)
!12990 = !DILocation(line: 12278, column: 22, scope: !12987)
!12991 = !DILocation(line: 12278, column: 28, scope: !12987)
!12992 = !DILocation(line: 12278, column: 39, scope: !12987)
!12993 = !DILocation(line: 12278, column: 45, scope: !12987)
!12994 = !DILocation(line: 12278, column: 53, scope: !12987)
!12995 = !DILocation(line: 12278, column: 5, scope: !12987)
!12996 = !DILocation(line: 12279, column: 10, scope: !12955)
!12997 = !DILocation(line: 12279, column: 3, scope: !12955)
!12998 = !DILocation(line: 12280, column: 1, scope: !12955)
!12999 = distinct !DISubprogram(name: "MagickThumbnailImage", scope: !1, file: !1, line: 12311, type: !1555, scopeLine: 12313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13000 = !DILocalVariable(name: "wand", arg: 1, scope: !12999, file: !1, line: 12311, type: !1143)
!13001 = !DILocation(line: 12311, column: 63, scope: !12999)
!13002 = !DILocalVariable(name: "columns", arg: 2, scope: !12999, file: !1, line: 12312, type: !1214)
!13003 = !DILocation(line: 12312, column: 16, scope: !12999)
!13004 = !DILocalVariable(name: "rows", arg: 3, scope: !12999, file: !1, line: 12312, type: !1214)
!13005 = !DILocation(line: 12312, column: 37, scope: !12999)
!13006 = !DILocalVariable(name: "thumbnail_image", scope: !12999, file: !1, line: 12315, type: !791)
!13007 = !DILocation(line: 12315, column: 6, scope: !12999)
!13008 = !DILocation(line: 12319, column: 7, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12999, file: !1, line: 12319, column: 7)
!13010 = !DILocation(line: 12319, column: 13, scope: !13009)
!13011 = !DILocation(line: 12319, column: 19, scope: !13009)
!13012 = !DILocation(line: 12319, column: 7, scope: !12999)
!13013 = !DILocation(line: 12320, column: 60, scope: !13009)
!13014 = !DILocation(line: 12320, column: 66, scope: !13009)
!13015 = !DILocation(line: 12320, column: 12, scope: !13009)
!13016 = !DILocation(line: 12320, column: 5, scope: !13009)
!13017 = !DILocation(line: 12321, column: 7, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !12999, file: !1, line: 12321, column: 7)
!13019 = !DILocation(line: 12321, column: 13, scope: !13018)
!13020 = !DILocation(line: 12321, column: 20, scope: !13018)
!13021 = !DILocation(line: 12321, column: 7, scope: !12999)
!13022 = !DILocation(line: 12322, column: 5, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13018, file: !1, line: 12322, column: 5)
!13024 = !DILocation(line: 12323, column: 34, scope: !12999)
!13025 = !DILocation(line: 12323, column: 40, scope: !12999)
!13026 = !DILocation(line: 12323, column: 47, scope: !12999)
!13027 = !DILocation(line: 12323, column: 55, scope: !12999)
!13028 = !DILocation(line: 12323, column: 60, scope: !12999)
!13029 = !DILocation(line: 12323, column: 66, scope: !12999)
!13030 = !DILocation(line: 12323, column: 19, scope: !12999)
!13031 = !DILocation(line: 12323, column: 18, scope: !12999)
!13032 = !DILocation(line: 12324, column: 7, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !12999, file: !1, line: 12324, column: 7)
!13034 = !DILocation(line: 12324, column: 23, scope: !13033)
!13035 = !DILocation(line: 12324, column: 7, scope: !12999)
!13036 = !DILocation(line: 12325, column: 5, scope: !13033)
!13037 = !DILocation(line: 12326, column: 23, scope: !12999)
!13038 = !DILocation(line: 12326, column: 29, scope: !12999)
!13039 = !DILocation(line: 12326, column: 36, scope: !12999)
!13040 = !DILocation(line: 12326, column: 3, scope: !12999)
!13041 = !DILocation(line: 12327, column: 3, scope: !12999)
!13042 = !DILocation(line: 12328, column: 1, scope: !12999)
!13043 = distinct !DISubprogram(name: "MagickTintImage", scope: !1, file: !1, line: 12360, type: !3019, scopeLine: 12362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13044 = !DILocalVariable(name: "wand", arg: 1, scope: !13043, file: !1, line: 12360, type: !1143)
!13045 = !DILocation(line: 12360, column: 58, scope: !13043)
!13046 = !DILocalVariable(name: "tint", arg: 2, scope: !13043, file: !1, line: 12361, type: !2348)
!13047 = !DILocation(line: 12361, column: 20, scope: !13043)
!13048 = !DILocalVariable(name: "opacity", arg: 3, scope: !13043, file: !1, line: 12361, type: !2348)
!13049 = !DILocation(line: 12361, column: 42, scope: !13043)
!13050 = !DILocalVariable(name: "percent_opaque", scope: !13043, file: !1, line: 12364, type: !944)
!13051 = !DILocation(line: 12364, column: 5, scope: !13043)
!13052 = !DILocalVariable(name: "tint_image", scope: !13043, file: !1, line: 12367, type: !791)
!13053 = !DILocation(line: 12367, column: 6, scope: !13043)
!13054 = !DILocalVariable(name: "target", scope: !13043, file: !1, line: 12370, type: !815)
!13055 = !DILocation(line: 12370, column: 5, scope: !13043)
!13056 = !DILocation(line: 12374, column: 7, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13043, file: !1, line: 12374, column: 7)
!13058 = !DILocation(line: 12374, column: 13, scope: !13057)
!13059 = !DILocation(line: 12374, column: 19, scope: !13057)
!13060 = !DILocation(line: 12374, column: 7, scope: !13043)
!13061 = !DILocation(line: 12375, column: 60, scope: !13057)
!13062 = !DILocation(line: 12375, column: 66, scope: !13057)
!13063 = !DILocation(line: 12375, column: 12, scope: !13057)
!13064 = !DILocation(line: 12375, column: 5, scope: !13057)
!13065 = !DILocation(line: 12376, column: 7, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13043, file: !1, line: 12376, column: 7)
!13067 = !DILocation(line: 12376, column: 13, scope: !13066)
!13068 = !DILocation(line: 12376, column: 20, scope: !13066)
!13069 = !DILocation(line: 12376, column: 7, scope: !13043)
!13070 = !DILocation(line: 12377, column: 5, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13066, file: !1, line: 12377, column: 5)
!13072 = !DILocation(line: 12378, column: 29, scope: !13043)
!13073 = !DILocation(line: 12380, column: 24, scope: !13043)
!13074 = !DILocation(line: 12380, column: 5, scope: !13043)
!13075 = !DILocation(line: 12379, column: 47, scope: !13043)
!13076 = !DILocation(line: 12381, column: 26, scope: !13043)
!13077 = !DILocation(line: 12381, column: 5, scope: !13043)
!13078 = !DILocation(line: 12380, column: 62, scope: !13043)
!13079 = !DILocation(line: 12382, column: 25, scope: !13043)
!13080 = !DILocation(line: 12382, column: 5, scope: !13043)
!13081 = !DILocation(line: 12381, column: 64, scope: !13043)
!13082 = !DILocation(line: 12383, column: 28, scope: !13043)
!13083 = !DILocation(line: 12383, column: 5, scope: !13043)
!13084 = !DILocation(line: 12382, column: 63, scope: !13043)
!13085 = !DILocation(line: 12378, column: 10, scope: !13043)
!13086 = !DILocation(line: 12384, column: 24, scope: !13043)
!13087 = !DILocation(line: 12384, column: 3, scope: !13043)
!13088 = !DILocation(line: 12385, column: 24, scope: !13043)
!13089 = !DILocation(line: 12385, column: 30, scope: !13043)
!13090 = !DILocation(line: 12385, column: 37, scope: !13043)
!13091 = !DILocation(line: 12385, column: 59, scope: !13043)
!13092 = !DILocation(line: 12385, column: 65, scope: !13043)
!13093 = !DILocation(line: 12385, column: 14, scope: !13043)
!13094 = !DILocation(line: 12385, column: 13, scope: !13043)
!13095 = !DILocation(line: 12386, column: 7, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13043, file: !1, line: 12386, column: 7)
!13097 = !DILocation(line: 12386, column: 18, scope: !13096)
!13098 = !DILocation(line: 12386, column: 7, scope: !13043)
!13099 = !DILocation(line: 12387, column: 5, scope: !13096)
!13100 = !DILocation(line: 12388, column: 23, scope: !13043)
!13101 = !DILocation(line: 12388, column: 29, scope: !13043)
!13102 = !DILocation(line: 12388, column: 36, scope: !13043)
!13103 = !DILocation(line: 12388, column: 3, scope: !13043)
!13104 = !DILocation(line: 12389, column: 3, scope: !13043)
!13105 = !DILocation(line: 12390, column: 1, scope: !13043)
!13106 = distinct !DISubprogram(name: "MagickTransformImage", scope: !1, file: !1, line: 12424, type: !13107, scopeLine: 12426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13107 = !DISubroutineType(types: !13108)
!13108 = !{!1143, !1143, !924, !924}
!13109 = !DILocalVariable(name: "wand", arg: 1, scope: !13106, file: !1, line: 12424, type: !1143)
!13110 = !DILocation(line: 12424, column: 57, scope: !13106)
!13111 = !DILocalVariable(name: "crop", arg: 2, scope: !13106, file: !1, line: 12425, type: !924)
!13112 = !DILocation(line: 12425, column: 15, scope: !13106)
!13113 = !DILocalVariable(name: "geometry", arg: 3, scope: !13106, file: !1, line: 12425, type: !924)
!13114 = !DILocation(line: 12425, column: 32, scope: !13106)
!13115 = !DILocalVariable(name: "transform_image", scope: !13106, file: !1, line: 12428, type: !791)
!13116 = !DILocation(line: 12428, column: 6, scope: !13106)
!13117 = !DILocalVariable(name: "status", scope: !13106, file: !1, line: 12431, type: !807)
!13118 = !DILocation(line: 12431, column: 5, scope: !13106)
!13119 = !DILocation(line: 12435, column: 7, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13106, file: !1, line: 12435, column: 7)
!13121 = !DILocation(line: 12435, column: 13, scope: !13120)
!13122 = !DILocation(line: 12435, column: 19, scope: !13120)
!13123 = !DILocation(line: 12435, column: 7, scope: !13106)
!13124 = !DILocation(line: 12436, column: 60, scope: !13120)
!13125 = !DILocation(line: 12436, column: 66, scope: !13120)
!13126 = !DILocation(line: 12436, column: 12, scope: !13120)
!13127 = !DILocation(line: 12436, column: 5, scope: !13120)
!13128 = !DILocation(line: 12437, column: 7, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13106, file: !1, line: 12437, column: 7)
!13130 = !DILocation(line: 12437, column: 13, scope: !13129)
!13131 = !DILocation(line: 12437, column: 20, scope: !13129)
!13132 = !DILocation(line: 12437, column: 7, scope: !13106)
!13133 = !DILocation(line: 12438, column: 5, scope: !13129)
!13134 = !DILocation(line: 12439, column: 30, scope: !13106)
!13135 = !DILocation(line: 12439, column: 36, scope: !13106)
!13136 = !DILocation(line: 12439, column: 58, scope: !13106)
!13137 = !DILocation(line: 12439, column: 64, scope: !13106)
!13138 = !DILocation(line: 12439, column: 19, scope: !13106)
!13139 = !DILocation(line: 12439, column: 18, scope: !13106)
!13140 = !DILocation(line: 12440, column: 7, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13106, file: !1, line: 12440, column: 7)
!13142 = !DILocation(line: 12440, column: 23, scope: !13141)
!13143 = !DILocation(line: 12440, column: 7, scope: !13106)
!13144 = !DILocation(line: 12441, column: 5, scope: !13141)
!13145 = !DILocation(line: 12442, column: 42, scope: !13106)
!13146 = !DILocation(line: 12442, column: 47, scope: !13106)
!13147 = !DILocation(line: 12442, column: 10, scope: !13106)
!13148 = !DILocation(line: 12442, column: 9, scope: !13106)
!13149 = !DILocation(line: 12443, column: 7, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13106, file: !1, line: 12443, column: 7)
!13151 = !DILocation(line: 12443, column: 14, scope: !13150)
!13152 = !DILocation(line: 12443, column: 7, scope: !13106)
!13153 = !DILocation(line: 12445, column: 24, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13150, file: !1, line: 12444, column: 5)
!13155 = !DILocation(line: 12445, column: 30, scope: !13154)
!13156 = !DILocation(line: 12445, column: 41, scope: !13154)
!13157 = !DILocation(line: 12445, column: 58, scope: !13154)
!13158 = !DILocation(line: 12445, column: 7, scope: !13154)
!13159 = !DILocation(line: 12446, column: 36, scope: !13154)
!13160 = !DILocation(line: 12446, column: 23, scope: !13154)
!13161 = !DILocation(line: 12446, column: 22, scope: !13154)
!13162 = !DILocation(line: 12447, column: 7, scope: !13154)
!13163 = !DILocation(line: 12449, column: 36, scope: !13106)
!13164 = !DILocation(line: 12449, column: 41, scope: !13106)
!13165 = !DILocation(line: 12449, column: 10, scope: !13106)
!13166 = !DILocation(line: 12449, column: 3, scope: !13106)
!13167 = !DILocation(line: 12450, column: 1, scope: !13106)
!13168 = distinct !DISubprogram(name: "MagickTransformImageColorspace", scope: !1, file: !1, line: 12484, type: !10786, scopeLine: 12486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13169 = !DILocalVariable(name: "wand", arg: 1, scope: !13168, file: !1, line: 12484, type: !1143)
!13170 = !DILocation(line: 12484, column: 73, scope: !13168)
!13171 = !DILocalVariable(name: "colorspace", arg: 2, scope: !13168, file: !1, line: 12485, type: !9325)
!13172 = !DILocation(line: 12485, column: 24, scope: !13168)
!13173 = !DILocation(line: 12489, column: 7, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13168, file: !1, line: 12489, column: 7)
!13175 = !DILocation(line: 12489, column: 13, scope: !13174)
!13176 = !DILocation(line: 12489, column: 19, scope: !13174)
!13177 = !DILocation(line: 12489, column: 7, scope: !13168)
!13178 = !DILocation(line: 12490, column: 60, scope: !13174)
!13179 = !DILocation(line: 12490, column: 66, scope: !13174)
!13180 = !DILocation(line: 12490, column: 12, scope: !13174)
!13181 = !DILocation(line: 12490, column: 5, scope: !13174)
!13182 = !DILocation(line: 12491, column: 7, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13168, file: !1, line: 12491, column: 7)
!13184 = !DILocation(line: 12491, column: 13, scope: !13183)
!13185 = !DILocation(line: 12491, column: 20, scope: !13183)
!13186 = !DILocation(line: 12491, column: 7, scope: !13168)
!13187 = !DILocation(line: 12492, column: 5, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13183, file: !1, line: 12492, column: 5)
!13189 = !DILocation(line: 12493, column: 35, scope: !13168)
!13190 = !DILocation(line: 12493, column: 41, scope: !13168)
!13191 = !DILocation(line: 12493, column: 48, scope: !13168)
!13192 = !DILocation(line: 12493, column: 10, scope: !13168)
!13193 = !DILocation(line: 12493, column: 3, scope: !13168)
!13194 = !DILocation(line: 12494, column: 1, scope: !13168)
!13195 = distinct !DISubprogram(name: "MagickTransparentPaintImage", scope: !1, file: !1, line: 12536, type: !13196, scopeLine: 12539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13196 = !DISubroutineType(types: !13197)
!13197 = !{!807, !1143, !2348, !1325, !1325, !2117}
!13198 = !DILocalVariable(name: "wand", arg: 1, scope: !13195, file: !1, line: 12536, type: !1143)
!13199 = !DILocation(line: 12536, column: 70, scope: !13195)
!13200 = !DILocalVariable(name: "target", arg: 2, scope: !13195, file: !1, line: 12537, type: !2348)
!13201 = !DILocation(line: 12537, column: 20, scope: !13195)
!13202 = !DILocalVariable(name: "alpha", arg: 3, scope: !13195, file: !1, line: 12537, type: !1325)
!13203 = !DILocation(line: 12537, column: 40, scope: !13195)
!13204 = !DILocalVariable(name: "fuzz", arg: 4, scope: !13195, file: !1, line: 12537, type: !1325)
!13205 = !DILocation(line: 12537, column: 59, scope: !13195)
!13206 = !DILocalVariable(name: "invert", arg: 5, scope: !13195, file: !1, line: 12538, type: !2117)
!13207 = !DILocation(line: 12538, column: 27, scope: !13195)
!13208 = !DILocalVariable(name: "status", scope: !13195, file: !1, line: 12541, type: !807)
!13209 = !DILocation(line: 12541, column: 5, scope: !13195)
!13210 = !DILocalVariable(name: "target_pixel", scope: !13195, file: !1, line: 12544, type: !1054)
!13211 = !DILocation(line: 12544, column: 5, scope: !13195)
!13212 = !DILocation(line: 12548, column: 7, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13195, file: !1, line: 12548, column: 7)
!13214 = !DILocation(line: 12548, column: 13, scope: !13213)
!13215 = !DILocation(line: 12548, column: 19, scope: !13213)
!13216 = !DILocation(line: 12548, column: 7, scope: !13195)
!13217 = !DILocation(line: 12549, column: 60, scope: !13213)
!13218 = !DILocation(line: 12549, column: 66, scope: !13213)
!13219 = !DILocation(line: 12549, column: 12, scope: !13213)
!13220 = !DILocation(line: 12549, column: 5, scope: !13213)
!13221 = !DILocation(line: 12550, column: 7, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13195, file: !1, line: 12550, column: 7)
!13223 = !DILocation(line: 12550, column: 13, scope: !13222)
!13224 = !DILocation(line: 12550, column: 20, scope: !13222)
!13225 = !DILocation(line: 12550, column: 7, scope: !13195)
!13226 = !DILocation(line: 12551, column: 5, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !1, line: 12551, column: 5)
!13228 = !DILocation(line: 12552, column: 23, scope: !13195)
!13229 = !DILocation(line: 12552, column: 3, scope: !13195)
!13230 = !DILocation(line: 12553, column: 22, scope: !13195)
!13231 = !DILocation(line: 12553, column: 3, scope: !13195)
!13232 = !DILocation(line: 12553, column: 9, scope: !13195)
!13233 = !DILocation(line: 12553, column: 17, scope: !13195)
!13234 = !DILocation(line: 12553, column: 21, scope: !13195)
!13235 = !DILocation(line: 12554, column: 32, scope: !13195)
!13236 = !DILocation(line: 12554, column: 38, scope: !13195)
!13237 = !DILocation(line: 12555, column: 48, scope: !13195)
!13238 = !DILocation(line: 12555, column: 47, scope: !13195)
!13239 = !DILocation(line: 12555, column: 34, scope: !13195)
!13240 = !DILocation(line: 12555, column: 5, scope: !13195)
!13241 = !DILocation(line: 12554, column: 59, scope: !13195)
!13242 = !DILocation(line: 12555, column: 55, scope: !13195)
!13243 = !DILocation(line: 12554, column: 10, scope: !13195)
!13244 = !DILocation(line: 12554, column: 9, scope: !13195)
!13245 = !DILocation(line: 12556, column: 7, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13195, file: !1, line: 12556, column: 7)
!13247 = !DILocation(line: 12556, column: 14, scope: !13246)
!13248 = !DILocation(line: 12556, column: 7, scope: !13195)
!13249 = !DILocation(line: 12557, column: 22, scope: !13246)
!13250 = !DILocation(line: 12557, column: 28, scope: !13246)
!13251 = !DILocation(line: 12557, column: 39, scope: !13246)
!13252 = !DILocation(line: 12557, column: 45, scope: !13246)
!13253 = !DILocation(line: 12557, column: 53, scope: !13246)
!13254 = !DILocation(line: 12557, column: 5, scope: !13246)
!13255 = !DILocation(line: 12558, column: 10, scope: !13195)
!13256 = !DILocation(line: 12558, column: 3, scope: !13195)
!13257 = !DILocation(line: 12559, column: 1, scope: !13195)
!13258 = distinct !DISubprogram(name: "MagickTransposeImage", scope: !1, file: !1, line: 12584, type: !2240, scopeLine: 12585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13259 = !DILocalVariable(name: "wand", arg: 1, scope: !13258, file: !1, line: 12584, type: !1143)
!13260 = !DILocation(line: 12584, column: 63, scope: !13258)
!13261 = !DILocalVariable(name: "transpose_image", scope: !13258, file: !1, line: 12587, type: !791)
!13262 = !DILocation(line: 12587, column: 6, scope: !13258)
!13263 = !DILocation(line: 12591, column: 7, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13258, file: !1, line: 12591, column: 7)
!13265 = !DILocation(line: 12591, column: 13, scope: !13264)
!13266 = !DILocation(line: 12591, column: 19, scope: !13264)
!13267 = !DILocation(line: 12591, column: 7, scope: !13258)
!13268 = !DILocation(line: 12592, column: 60, scope: !13264)
!13269 = !DILocation(line: 12592, column: 66, scope: !13264)
!13270 = !DILocation(line: 12592, column: 12, scope: !13264)
!13271 = !DILocation(line: 12592, column: 5, scope: !13264)
!13272 = !DILocation(line: 12593, column: 7, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13258, file: !1, line: 12593, column: 7)
!13274 = !DILocation(line: 12593, column: 13, scope: !13273)
!13275 = !DILocation(line: 12593, column: 20, scope: !13273)
!13276 = !DILocation(line: 12593, column: 7, scope: !13258)
!13277 = !DILocation(line: 12594, column: 5, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13273, file: !1, line: 12594, column: 5)
!13279 = !DILocation(line: 12595, column: 34, scope: !13258)
!13280 = !DILocation(line: 12595, column: 40, scope: !13258)
!13281 = !DILocation(line: 12595, column: 47, scope: !13258)
!13282 = !DILocation(line: 12595, column: 53, scope: !13258)
!13283 = !DILocation(line: 12595, column: 19, scope: !13258)
!13284 = !DILocation(line: 12595, column: 18, scope: !13258)
!13285 = !DILocation(line: 12596, column: 7, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13258, file: !1, line: 12596, column: 7)
!13287 = !DILocation(line: 12596, column: 23, scope: !13286)
!13288 = !DILocation(line: 12596, column: 7, scope: !13258)
!13289 = !DILocation(line: 12597, column: 5, scope: !13286)
!13290 = !DILocation(line: 12598, column: 23, scope: !13258)
!13291 = !DILocation(line: 12598, column: 29, scope: !13258)
!13292 = !DILocation(line: 12598, column: 36, scope: !13258)
!13293 = !DILocation(line: 12598, column: 3, scope: !13258)
!13294 = !DILocation(line: 12599, column: 3, scope: !13258)
!13295 = !DILocation(line: 12600, column: 1, scope: !13258)
!13296 = distinct !DISubprogram(name: "MagickTransverseImage", scope: !1, file: !1, line: 12625, type: !2240, scopeLine: 12626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13297 = !DILocalVariable(name: "wand", arg: 1, scope: !13296, file: !1, line: 12625, type: !1143)
!13298 = !DILocation(line: 12625, column: 64, scope: !13296)
!13299 = !DILocalVariable(name: "transverse_image", scope: !13296, file: !1, line: 12628, type: !791)
!13300 = !DILocation(line: 12628, column: 6, scope: !13296)
!13301 = !DILocation(line: 12632, column: 7, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13296, file: !1, line: 12632, column: 7)
!13303 = !DILocation(line: 12632, column: 13, scope: !13302)
!13304 = !DILocation(line: 12632, column: 19, scope: !13302)
!13305 = !DILocation(line: 12632, column: 7, scope: !13296)
!13306 = !DILocation(line: 12633, column: 60, scope: !13302)
!13307 = !DILocation(line: 12633, column: 66, scope: !13302)
!13308 = !DILocation(line: 12633, column: 12, scope: !13302)
!13309 = !DILocation(line: 12633, column: 5, scope: !13302)
!13310 = !DILocation(line: 12634, column: 7, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13296, file: !1, line: 12634, column: 7)
!13312 = !DILocation(line: 12634, column: 13, scope: !13311)
!13313 = !DILocation(line: 12634, column: 20, scope: !13311)
!13314 = !DILocation(line: 12634, column: 7, scope: !13296)
!13315 = !DILocation(line: 12635, column: 5, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13311, file: !1, line: 12635, column: 5)
!13317 = !DILocation(line: 12636, column: 36, scope: !13296)
!13318 = !DILocation(line: 12636, column: 42, scope: !13296)
!13319 = !DILocation(line: 12636, column: 49, scope: !13296)
!13320 = !DILocation(line: 12636, column: 55, scope: !13296)
!13321 = !DILocation(line: 12636, column: 20, scope: !13296)
!13322 = !DILocation(line: 12636, column: 19, scope: !13296)
!13323 = !DILocation(line: 12637, column: 7, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13296, file: !1, line: 12637, column: 7)
!13325 = !DILocation(line: 12637, column: 24, scope: !13324)
!13326 = !DILocation(line: 12637, column: 7, scope: !13296)
!13327 = !DILocation(line: 12638, column: 5, scope: !13324)
!13328 = !DILocation(line: 12639, column: 23, scope: !13296)
!13329 = !DILocation(line: 12639, column: 29, scope: !13296)
!13330 = !DILocation(line: 12639, column: 36, scope: !13296)
!13331 = !DILocation(line: 12639, column: 3, scope: !13296)
!13332 = !DILocation(line: 12640, column: 3, scope: !13296)
!13333 = !DILocation(line: 12641, column: 1, scope: !13296)
!13334 = distinct !DISubprogram(name: "MagickTrimImage", scope: !1, file: !1, line: 12672, type: !2403, scopeLine: 12673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13335 = !DILocalVariable(name: "wand", arg: 1, scope: !13334, file: !1, line: 12672, type: !1143)
!13336 = !DILocation(line: 12672, column: 58, scope: !13334)
!13337 = !DILocalVariable(name: "fuzz", arg: 2, scope: !13334, file: !1, line: 12672, type: !1325)
!13338 = !DILocation(line: 12672, column: 76, scope: !13334)
!13339 = !DILocalVariable(name: "trim_image", scope: !13334, file: !1, line: 12675, type: !791)
!13340 = !DILocation(line: 12675, column: 6, scope: !13334)
!13341 = !DILocation(line: 12679, column: 7, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13334, file: !1, line: 12679, column: 7)
!13343 = !DILocation(line: 12679, column: 13, scope: !13342)
!13344 = !DILocation(line: 12679, column: 19, scope: !13342)
!13345 = !DILocation(line: 12679, column: 7, scope: !13334)
!13346 = !DILocation(line: 12680, column: 60, scope: !13342)
!13347 = !DILocation(line: 12680, column: 66, scope: !13342)
!13348 = !DILocation(line: 12680, column: 12, scope: !13342)
!13349 = !DILocation(line: 12680, column: 5, scope: !13342)
!13350 = !DILocation(line: 12681, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13334, file: !1, line: 12681, column: 7)
!13352 = !DILocation(line: 12681, column: 13, scope: !13351)
!13353 = !DILocation(line: 12681, column: 20, scope: !13351)
!13354 = !DILocation(line: 12681, column: 7, scope: !13334)
!13355 = !DILocation(line: 12682, column: 5, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13351, file: !1, line: 12682, column: 5)
!13357 = !DILocation(line: 12683, column: 22, scope: !13334)
!13358 = !DILocation(line: 12683, column: 3, scope: !13334)
!13359 = !DILocation(line: 12683, column: 9, scope: !13334)
!13360 = !DILocation(line: 12683, column: 17, scope: !13334)
!13361 = !DILocation(line: 12683, column: 21, scope: !13334)
!13362 = !DILocation(line: 12684, column: 24, scope: !13334)
!13363 = !DILocation(line: 12684, column: 30, scope: !13334)
!13364 = !DILocation(line: 12684, column: 37, scope: !13334)
!13365 = !DILocation(line: 12684, column: 43, scope: !13334)
!13366 = !DILocation(line: 12684, column: 14, scope: !13334)
!13367 = !DILocation(line: 12684, column: 13, scope: !13334)
!13368 = !DILocation(line: 12685, column: 7, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13334, file: !1, line: 12685, column: 7)
!13370 = !DILocation(line: 12685, column: 18, scope: !13369)
!13371 = !DILocation(line: 12685, column: 7, scope: !13334)
!13372 = !DILocation(line: 12686, column: 5, scope: !13369)
!13373 = !DILocation(line: 12687, column: 23, scope: !13334)
!13374 = !DILocation(line: 12687, column: 29, scope: !13334)
!13375 = !DILocation(line: 12687, column: 36, scope: !13334)
!13376 = !DILocation(line: 12687, column: 3, scope: !13334)
!13377 = !DILocation(line: 12688, column: 3, scope: !13334)
!13378 = !DILocation(line: 12689, column: 1, scope: !13334)
!13379 = distinct !DISubprogram(name: "MagickUniqueImageColors", scope: !1, file: !1, line: 12713, type: !2240, scopeLine: 12714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13380 = !DILocalVariable(name: "wand", arg: 1, scope: !13379, file: !1, line: 12713, type: !1143)
!13381 = !DILocation(line: 12713, column: 66, scope: !13379)
!13382 = !DILocalVariable(name: "unique_image", scope: !13379, file: !1, line: 12716, type: !791)
!13383 = !DILocation(line: 12716, column: 6, scope: !13379)
!13384 = !DILocation(line: 12720, column: 7, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13379, file: !1, line: 12720, column: 7)
!13386 = !DILocation(line: 12720, column: 13, scope: !13385)
!13387 = !DILocation(line: 12720, column: 19, scope: !13385)
!13388 = !DILocation(line: 12720, column: 7, scope: !13379)
!13389 = !DILocation(line: 12721, column: 60, scope: !13385)
!13390 = !DILocation(line: 12721, column: 66, scope: !13385)
!13391 = !DILocation(line: 12721, column: 12, scope: !13385)
!13392 = !DILocation(line: 12721, column: 5, scope: !13385)
!13393 = !DILocation(line: 12722, column: 7, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13379, file: !1, line: 12722, column: 7)
!13395 = !DILocation(line: 12722, column: 13, scope: !13394)
!13396 = !DILocation(line: 12722, column: 20, scope: !13394)
!13397 = !DILocation(line: 12722, column: 7, scope: !13379)
!13398 = !DILocation(line: 12723, column: 5, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13394, file: !1, line: 12723, column: 5)
!13400 = !DILocation(line: 12724, column: 34, scope: !13379)
!13401 = !DILocation(line: 12724, column: 40, scope: !13379)
!13402 = !DILocation(line: 12724, column: 47, scope: !13379)
!13403 = !DILocation(line: 12724, column: 53, scope: !13379)
!13404 = !DILocation(line: 12724, column: 16, scope: !13379)
!13405 = !DILocation(line: 12724, column: 15, scope: !13379)
!13406 = !DILocation(line: 12725, column: 7, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13379, file: !1, line: 12725, column: 7)
!13408 = !DILocation(line: 12725, column: 20, scope: !13407)
!13409 = !DILocation(line: 12725, column: 7, scope: !13379)
!13410 = !DILocation(line: 12726, column: 5, scope: !13407)
!13411 = !DILocation(line: 12727, column: 23, scope: !13379)
!13412 = !DILocation(line: 12727, column: 29, scope: !13379)
!13413 = !DILocation(line: 12727, column: 36, scope: !13379)
!13414 = !DILocation(line: 12727, column: 3, scope: !13379)
!13415 = !DILocation(line: 12728, column: 3, scope: !13379)
!13416 = !DILocation(line: 12729, column: 1, scope: !13379)
!13417 = distinct !DISubprogram(name: "MagickUnsharpMaskImage", scope: !1, file: !1, line: 12774, type: !13418, scopeLine: 12777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13418 = !DISubroutineType(types: !13419)
!13419 = !{!807, !1143, !1325, !1325, !1325, !1325}
!13420 = !DILocalVariable(name: "wand", arg: 1, scope: !13417, file: !1, line: 12774, type: !1143)
!13421 = !DILocation(line: 12774, column: 65, scope: !13417)
!13422 = !DILocalVariable(name: "radius", arg: 2, scope: !13417, file: !1, line: 12775, type: !1325)
!13423 = !DILocation(line: 12775, column: 16, scope: !13417)
!13424 = !DILocalVariable(name: "sigma", arg: 3, scope: !13417, file: !1, line: 12775, type: !1325)
!13425 = !DILocation(line: 12775, column: 36, scope: !13417)
!13426 = !DILocalVariable(name: "amount", arg: 4, scope: !13417, file: !1, line: 12775, type: !1325)
!13427 = !DILocation(line: 12775, column: 55, scope: !13417)
!13428 = !DILocalVariable(name: "threshold", arg: 5, scope: !13417, file: !1, line: 12776, type: !1325)
!13429 = !DILocation(line: 12776, column: 16, scope: !13417)
!13430 = !DILocalVariable(name: "status", scope: !13417, file: !1, line: 12779, type: !807)
!13431 = !DILocation(line: 12779, column: 5, scope: !13417)
!13432 = !DILocation(line: 12781, column: 40, scope: !13417)
!13433 = !DILocation(line: 12781, column: 61, scope: !13417)
!13434 = !DILocation(line: 12781, column: 68, scope: !13417)
!13435 = !DILocation(line: 12782, column: 5, scope: !13417)
!13436 = !DILocation(line: 12782, column: 12, scope: !13417)
!13437 = !DILocation(line: 12781, column: 10, scope: !13417)
!13438 = !DILocation(line: 12781, column: 9, scope: !13417)
!13439 = !DILocation(line: 12783, column: 10, scope: !13417)
!13440 = !DILocation(line: 12783, column: 3, scope: !13417)
!13441 = distinct !DISubprogram(name: "MagickUnsharpMaskImageChannel", scope: !1, file: !1, line: 12786, type: !13442, scopeLine: 12789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13442 = !DISubroutineType(types: !13443)
!13443 = !{!807, !1143, !1507, !1325, !1325, !1325, !1325}
!13444 = !DILocalVariable(name: "wand", arg: 1, scope: !13441, file: !1, line: 12786, type: !1143)
!13445 = !DILocation(line: 12786, column: 72, scope: !13441)
!13446 = !DILocalVariable(name: "channel", arg: 2, scope: !13441, file: !1, line: 12787, type: !1507)
!13447 = !DILocation(line: 12787, column: 21, scope: !13441)
!13448 = !DILocalVariable(name: "radius", arg: 3, scope: !13441, file: !1, line: 12787, type: !1325)
!13449 = !DILocation(line: 12787, column: 42, scope: !13441)
!13450 = !DILocalVariable(name: "sigma", arg: 4, scope: !13441, file: !1, line: 12787, type: !1325)
!13451 = !DILocation(line: 12787, column: 62, scope: !13441)
!13452 = !DILocalVariable(name: "amount", arg: 5, scope: !13441, file: !1, line: 12788, type: !1325)
!13453 = !DILocation(line: 12788, column: 16, scope: !13441)
!13454 = !DILocalVariable(name: "threshold", arg: 6, scope: !13441, file: !1, line: 12788, type: !1325)
!13455 = !DILocation(line: 12788, column: 36, scope: !13441)
!13456 = !DILocalVariable(name: "unsharp_image", scope: !13441, file: !1, line: 12791, type: !791)
!13457 = !DILocation(line: 12791, column: 6, scope: !13441)
!13458 = !DILocation(line: 12795, column: 7, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13441, file: !1, line: 12795, column: 7)
!13460 = !DILocation(line: 12795, column: 13, scope: !13459)
!13461 = !DILocation(line: 12795, column: 19, scope: !13459)
!13462 = !DILocation(line: 12795, column: 7, scope: !13441)
!13463 = !DILocation(line: 12796, column: 60, scope: !13459)
!13464 = !DILocation(line: 12796, column: 66, scope: !13459)
!13465 = !DILocation(line: 12796, column: 12, scope: !13459)
!13466 = !DILocation(line: 12796, column: 5, scope: !13459)
!13467 = !DILocation(line: 12797, column: 7, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13441, file: !1, line: 12797, column: 7)
!13469 = !DILocation(line: 12797, column: 13, scope: !13468)
!13470 = !DILocation(line: 12797, column: 20, scope: !13468)
!13471 = !DILocation(line: 12797, column: 7, scope: !13441)
!13472 = !DILocation(line: 12798, column: 5, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13468, file: !1, line: 12798, column: 5)
!13474 = !DILocation(line: 12799, column: 41, scope: !13441)
!13475 = !DILocation(line: 12799, column: 47, scope: !13441)
!13476 = !DILocation(line: 12799, column: 54, scope: !13441)
!13477 = !DILocation(line: 12799, column: 62, scope: !13441)
!13478 = !DILocation(line: 12799, column: 69, scope: !13441)
!13479 = !DILocation(line: 12800, column: 5, scope: !13441)
!13480 = !DILocation(line: 12800, column: 12, scope: !13441)
!13481 = !DILocation(line: 12800, column: 22, scope: !13441)
!13482 = !DILocation(line: 12800, column: 28, scope: !13441)
!13483 = !DILocation(line: 12799, column: 17, scope: !13441)
!13484 = !DILocation(line: 12799, column: 16, scope: !13441)
!13485 = !DILocation(line: 12801, column: 7, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13441, file: !1, line: 12801, column: 7)
!13487 = !DILocation(line: 12801, column: 21, scope: !13486)
!13488 = !DILocation(line: 12801, column: 7, scope: !13441)
!13489 = !DILocation(line: 12802, column: 5, scope: !13486)
!13490 = !DILocation(line: 12803, column: 23, scope: !13441)
!13491 = !DILocation(line: 12803, column: 29, scope: !13441)
!13492 = !DILocation(line: 12803, column: 36, scope: !13441)
!13493 = !DILocation(line: 12803, column: 3, scope: !13441)
!13494 = !DILocation(line: 12804, column: 3, scope: !13441)
!13495 = !DILocation(line: 12805, column: 1, scope: !13441)
!13496 = distinct !DISubprogram(name: "MagickVignetteImage", scope: !1, file: !1, line: 12837, type: !11961, scopeLine: 12839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13497 = !DILocalVariable(name: "wand", arg: 1, scope: !13496, file: !1, line: 12837, type: !1143)
!13498 = !DILocation(line: 12837, column: 62, scope: !13496)
!13499 = !DILocalVariable(name: "black_point", arg: 2, scope: !13496, file: !1, line: 12838, type: !1325)
!13500 = !DILocation(line: 12838, column: 16, scope: !13496)
!13501 = !DILocalVariable(name: "white_point", arg: 3, scope: !13496, file: !1, line: 12838, type: !1325)
!13502 = !DILocation(line: 12838, column: 41, scope: !13496)
!13503 = !DILocalVariable(name: "x", arg: 4, scope: !13496, file: !1, line: 12838, type: !1666)
!13504 = !DILocation(line: 12838, column: 67, scope: !13496)
!13505 = !DILocalVariable(name: "y", arg: 5, scope: !13496, file: !1, line: 12838, type: !1666)
!13506 = !DILocation(line: 12838, column: 83, scope: !13496)
!13507 = !DILocalVariable(name: "vignette_image", scope: !13496, file: !1, line: 12841, type: !791)
!13508 = !DILocation(line: 12841, column: 6, scope: !13496)
!13509 = !DILocation(line: 12845, column: 7, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13496, file: !1, line: 12845, column: 7)
!13511 = !DILocation(line: 12845, column: 13, scope: !13510)
!13512 = !DILocation(line: 12845, column: 19, scope: !13510)
!13513 = !DILocation(line: 12845, column: 7, scope: !13496)
!13514 = !DILocation(line: 12846, column: 60, scope: !13510)
!13515 = !DILocation(line: 12846, column: 66, scope: !13510)
!13516 = !DILocation(line: 12846, column: 12, scope: !13510)
!13517 = !DILocation(line: 12846, column: 5, scope: !13510)
!13518 = !DILocation(line: 12847, column: 7, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13496, file: !1, line: 12847, column: 7)
!13520 = !DILocation(line: 12847, column: 13, scope: !13519)
!13521 = !DILocation(line: 12847, column: 20, scope: !13519)
!13522 = !DILocation(line: 12847, column: 7, scope: !13496)
!13523 = !DILocation(line: 12848, column: 5, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13519, file: !1, line: 12848, column: 5)
!13525 = !DILocation(line: 12849, column: 32, scope: !13496)
!13526 = !DILocation(line: 12849, column: 38, scope: !13496)
!13527 = !DILocation(line: 12849, column: 45, scope: !13496)
!13528 = !DILocation(line: 12849, column: 57, scope: !13496)
!13529 = !DILocation(line: 12849, column: 69, scope: !13496)
!13530 = !DILocation(line: 12849, column: 71, scope: !13496)
!13531 = !DILocation(line: 12850, column: 5, scope: !13496)
!13532 = !DILocation(line: 12850, column: 11, scope: !13496)
!13533 = !DILocation(line: 12849, column: 18, scope: !13496)
!13534 = !DILocation(line: 12849, column: 17, scope: !13496)
!13535 = !DILocation(line: 12851, column: 7, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13496, file: !1, line: 12851, column: 7)
!13537 = !DILocation(line: 12851, column: 22, scope: !13536)
!13538 = !DILocation(line: 12851, column: 7, scope: !13496)
!13539 = !DILocation(line: 12852, column: 5, scope: !13536)
!13540 = !DILocation(line: 12853, column: 23, scope: !13496)
!13541 = !DILocation(line: 12853, column: 29, scope: !13496)
!13542 = !DILocation(line: 12853, column: 36, scope: !13496)
!13543 = !DILocation(line: 12853, column: 3, scope: !13496)
!13544 = !DILocation(line: 12854, column: 3, scope: !13496)
!13545 = !DILocation(line: 12855, column: 1, scope: !13496)
!13546 = distinct !DISubprogram(name: "MagickWaveImage", scope: !1, file: !1, line: 12885, type: !1487, scopeLine: 12887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13547 = !DILocalVariable(name: "wand", arg: 1, scope: !13546, file: !1, line: 12885, type: !1143)
!13548 = !DILocation(line: 12885, column: 58, scope: !13546)
!13549 = !DILocalVariable(name: "amplitude", arg: 2, scope: !13546, file: !1, line: 12886, type: !1325)
!13550 = !DILocation(line: 12886, column: 16, scope: !13546)
!13551 = !DILocalVariable(name: "wave_length", arg: 3, scope: !13546, file: !1, line: 12886, type: !1325)
!13552 = !DILocation(line: 12886, column: 39, scope: !13546)
!13553 = !DILocalVariable(name: "wave_image", scope: !13546, file: !1, line: 12889, type: !791)
!13554 = !DILocation(line: 12889, column: 6, scope: !13546)
!13555 = !DILocation(line: 12893, column: 7, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13546, file: !1, line: 12893, column: 7)
!13557 = !DILocation(line: 12893, column: 13, scope: !13556)
!13558 = !DILocation(line: 12893, column: 19, scope: !13556)
!13559 = !DILocation(line: 12893, column: 7, scope: !13546)
!13560 = !DILocation(line: 12894, column: 60, scope: !13556)
!13561 = !DILocation(line: 12894, column: 66, scope: !13556)
!13562 = !DILocation(line: 12894, column: 12, scope: !13556)
!13563 = !DILocation(line: 12894, column: 5, scope: !13556)
!13564 = !DILocation(line: 12895, column: 7, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13546, file: !1, line: 12895, column: 7)
!13566 = !DILocation(line: 12895, column: 13, scope: !13565)
!13567 = !DILocation(line: 12895, column: 20, scope: !13565)
!13568 = !DILocation(line: 12895, column: 7, scope: !13546)
!13569 = !DILocation(line: 12896, column: 5, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13565, file: !1, line: 12896, column: 5)
!13571 = !DILocation(line: 12897, column: 24, scope: !13546)
!13572 = !DILocation(line: 12897, column: 30, scope: !13546)
!13573 = !DILocation(line: 12897, column: 37, scope: !13546)
!13574 = !DILocation(line: 12897, column: 47, scope: !13546)
!13575 = !DILocation(line: 12897, column: 59, scope: !13546)
!13576 = !DILocation(line: 12897, column: 65, scope: !13546)
!13577 = !DILocation(line: 12897, column: 14, scope: !13546)
!13578 = !DILocation(line: 12897, column: 13, scope: !13546)
!13579 = !DILocation(line: 12898, column: 7, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13546, file: !1, line: 12898, column: 7)
!13581 = !DILocation(line: 12898, column: 18, scope: !13580)
!13582 = !DILocation(line: 12898, column: 7, scope: !13546)
!13583 = !DILocation(line: 12899, column: 5, scope: !13580)
!13584 = !DILocation(line: 12900, column: 23, scope: !13546)
!13585 = !DILocation(line: 12900, column: 29, scope: !13546)
!13586 = !DILocation(line: 12900, column: 36, scope: !13546)
!13587 = !DILocation(line: 12900, column: 3, scope: !13546)
!13588 = !DILocation(line: 12901, column: 3, scope: !13546)
!13589 = !DILocation(line: 12902, column: 1, scope: !13546)
!13590 = distinct !DISubprogram(name: "MagickWhiteThresholdImage", scope: !1, file: !1, line: 12931, type: !2346, scopeLine: 12933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13591 = !DILocalVariable(name: "wand", arg: 1, scope: !13590, file: !1, line: 12931, type: !1143)
!13592 = !DILocation(line: 12931, column: 68, scope: !13590)
!13593 = !DILocalVariable(name: "threshold", arg: 2, scope: !13590, file: !1, line: 12932, type: !2348)
!13594 = !DILocation(line: 12932, column: 20, scope: !13590)
!13595 = !DILocalVariable(name: "thresholds", scope: !13590, file: !1, line: 12935, type: !944)
!13596 = !DILocation(line: 12935, column: 5, scope: !13590)
!13597 = !DILocalVariable(name: "status", scope: !13590, file: !1, line: 12938, type: !807)
!13598 = !DILocation(line: 12938, column: 5, scope: !13590)
!13599 = !DILocation(line: 12942, column: 7, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13590, file: !1, line: 12942, column: 7)
!13601 = !DILocation(line: 12942, column: 13, scope: !13600)
!13602 = !DILocation(line: 12942, column: 19, scope: !13600)
!13603 = !DILocation(line: 12942, column: 7, scope: !13590)
!13604 = !DILocation(line: 12943, column: 60, scope: !13600)
!13605 = !DILocation(line: 12943, column: 66, scope: !13600)
!13606 = !DILocation(line: 12943, column: 12, scope: !13600)
!13607 = !DILocation(line: 12943, column: 5, scope: !13600)
!13608 = !DILocation(line: 12944, column: 7, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13590, file: !1, line: 12944, column: 7)
!13610 = !DILocation(line: 12944, column: 13, scope: !13609)
!13611 = !DILocation(line: 12944, column: 20, scope: !13609)
!13612 = !DILocation(line: 12944, column: 7, scope: !13590)
!13613 = !DILocation(line: 12945, column: 5, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13609, file: !1, line: 12945, column: 5)
!13615 = !DILocation(line: 12946, column: 29, scope: !13590)
!13616 = !DILocation(line: 12948, column: 24, scope: !13590)
!13617 = !DILocation(line: 12948, column: 5, scope: !13590)
!13618 = !DILocation(line: 12948, column: 56, scope: !13590)
!13619 = !DILocation(line: 12948, column: 35, scope: !13590)
!13620 = !DILocation(line: 12949, column: 25, scope: !13590)
!13621 = !DILocation(line: 12949, column: 5, scope: !13590)
!13622 = !DILocation(line: 12949, column: 59, scope: !13590)
!13623 = !DILocation(line: 12949, column: 36, scope: !13590)
!13624 = !DILocation(line: 12946, column: 10, scope: !13590)
!13625 = !DILocation(line: 12950, column: 30, scope: !13590)
!13626 = !DILocation(line: 12950, column: 36, scope: !13590)
!13627 = !DILocation(line: 12950, column: 43, scope: !13590)
!13628 = !DILocation(line: 12950, column: 10, scope: !13590)
!13629 = !DILocation(line: 12950, column: 9, scope: !13590)
!13630 = !DILocation(line: 12951, column: 7, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13590, file: !1, line: 12951, column: 7)
!13632 = !DILocation(line: 12951, column: 14, scope: !13631)
!13633 = !DILocation(line: 12951, column: 7, scope: !13590)
!13634 = !DILocation(line: 12952, column: 22, scope: !13631)
!13635 = !DILocation(line: 12952, column: 28, scope: !13631)
!13636 = !DILocation(line: 12952, column: 39, scope: !13631)
!13637 = !DILocation(line: 12952, column: 45, scope: !13631)
!13638 = !DILocation(line: 12952, column: 53, scope: !13631)
!13639 = !DILocation(line: 12952, column: 5, scope: !13631)
!13640 = !DILocation(line: 12953, column: 10, scope: !13590)
!13641 = !DILocation(line: 12953, column: 3, scope: !13590)
!13642 = !DILocation(line: 12954, column: 1, scope: !13590)
!13643 = distinct !DISubprogram(name: "MagickWriteImage", scope: !1, file: !1, line: 12984, type: !2074, scopeLine: 12986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13644 = !DILocalVariable(name: "wand", arg: 1, scope: !13643, file: !1, line: 12984, type: !1143)
!13645 = !DILocation(line: 12984, column: 59, scope: !13643)
!13646 = !DILocalVariable(name: "filename", arg: 2, scope: !13643, file: !1, line: 12985, type: !924)
!13647 = !DILocation(line: 12985, column: 15, scope: !13643)
!13648 = !DILocalVariable(name: "image", scope: !13643, file: !1, line: 12988, type: !791)
!13649 = !DILocation(line: 12988, column: 6, scope: !13643)
!13650 = !DILocalVariable(name: "write_info", scope: !13643, file: !1, line: 12991, type: !1154)
!13651 = !DILocation(line: 12991, column: 6, scope: !13643)
!13652 = !DILocalVariable(name: "status", scope: !13643, file: !1, line: 12994, type: !807)
!13653 = !DILocation(line: 12994, column: 5, scope: !13643)
!13654 = !DILocation(line: 12998, column: 7, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13643, file: !1, line: 12998, column: 7)
!13656 = !DILocation(line: 12998, column: 13, scope: !13655)
!13657 = !DILocation(line: 12998, column: 19, scope: !13655)
!13658 = !DILocation(line: 12998, column: 7, scope: !13643)
!13659 = !DILocation(line: 12999, column: 60, scope: !13655)
!13660 = !DILocation(line: 12999, column: 66, scope: !13655)
!13661 = !DILocation(line: 12999, column: 12, scope: !13655)
!13662 = !DILocation(line: 12999, column: 5, scope: !13655)
!13663 = !DILocation(line: 13000, column: 7, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13643, file: !1, line: 13000, column: 7)
!13665 = !DILocation(line: 13000, column: 13, scope: !13664)
!13666 = !DILocation(line: 13000, column: 20, scope: !13664)
!13667 = !DILocation(line: 13000, column: 7, scope: !13643)
!13668 = !DILocation(line: 13001, column: 5, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13664, file: !1, line: 13001, column: 5)
!13670 = !DILocation(line: 13002, column: 7, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13643, file: !1, line: 13002, column: 7)
!13672 = !DILocation(line: 13002, column: 16, scope: !13671)
!13673 = !DILocation(line: 13002, column: 7, scope: !13643)
!13674 = !DILocation(line: 13003, column: 29, scope: !13671)
!13675 = !DILocation(line: 13003, column: 35, scope: !13671)
!13676 = !DILocation(line: 13003, column: 43, scope: !13671)
!13677 = !DILocation(line: 13003, column: 52, scope: !13671)
!13678 = !DILocation(line: 13003, column: 12, scope: !13671)
!13679 = !DILocation(line: 13003, column: 5, scope: !13671)
!13680 = !DILocation(line: 13004, column: 20, scope: !13643)
!13681 = !DILocation(line: 13004, column: 26, scope: !13643)
!13682 = !DILocation(line: 13004, column: 48, scope: !13643)
!13683 = !DILocation(line: 13004, column: 54, scope: !13643)
!13684 = !DILocation(line: 13004, column: 9, scope: !13643)
!13685 = !DILocation(line: 13004, column: 8, scope: !13643)
!13686 = !DILocation(line: 13005, column: 7, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13643, file: !1, line: 13005, column: 7)
!13688 = !DILocation(line: 13005, column: 13, scope: !13687)
!13689 = !DILocation(line: 13005, column: 7, scope: !13643)
!13690 = !DILocation(line: 13006, column: 5, scope: !13687)
!13691 = !DILocation(line: 13007, column: 29, scope: !13643)
!13692 = !DILocation(line: 13007, column: 35, scope: !13643)
!13693 = !DILocation(line: 13007, column: 14, scope: !13643)
!13694 = !DILocation(line: 13007, column: 13, scope: !13643)
!13695 = !DILocation(line: 13008, column: 3, scope: !13643)
!13696 = !DILocation(line: 13008, column: 15, scope: !13643)
!13697 = !DILocation(line: 13008, column: 21, scope: !13643)
!13698 = !DILocation(line: 13009, column: 21, scope: !13643)
!13699 = !DILocation(line: 13009, column: 32, scope: !13643)
!13700 = !DILocation(line: 13009, column: 10, scope: !13643)
!13701 = !DILocation(line: 13009, column: 9, scope: !13643)
!13702 = !DILocation(line: 13010, column: 7, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13643, file: !1, line: 13010, column: 7)
!13704 = !DILocation(line: 13010, column: 14, scope: !13703)
!13705 = !DILocation(line: 13010, column: 7, scope: !13643)
!13706 = !DILocation(line: 13011, column: 22, scope: !13703)
!13707 = !DILocation(line: 13011, column: 28, scope: !13703)
!13708 = !DILocation(line: 13011, column: 39, scope: !13703)
!13709 = !DILocation(line: 13011, column: 46, scope: !13703)
!13710 = !DILocation(line: 13011, column: 5, scope: !13703)
!13711 = !DILocation(line: 13012, column: 22, scope: !13643)
!13712 = !DILocation(line: 13012, column: 9, scope: !13643)
!13713 = !DILocation(line: 13012, column: 8, scope: !13643)
!13714 = !DILocation(line: 13013, column: 31, scope: !13643)
!13715 = !DILocation(line: 13013, column: 14, scope: !13643)
!13716 = !DILocation(line: 13013, column: 13, scope: !13643)
!13717 = !DILocation(line: 13014, column: 10, scope: !13643)
!13718 = !DILocation(line: 13014, column: 3, scope: !13643)
!13719 = !DILocation(line: 13015, column: 1, scope: !13643)
!13720 = distinct !DISubprogram(name: "MagickWriteImageFile", scope: !1, file: !1, line: 13041, type: !9083, scopeLine: 13042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13721 = !DILocalVariable(name: "wand", arg: 1, scope: !13720, file: !1, line: 13041, type: !1143)
!13722 = !DILocation(line: 13041, column: 63, scope: !13720)
!13723 = !DILocalVariable(name: "file", arg: 2, scope: !13720, file: !1, line: 13041, type: !1216)
!13724 = !DILocation(line: 13041, column: 74, scope: !13720)
!13725 = !DILocalVariable(name: "image", scope: !13720, file: !1, line: 13044, type: !791)
!13726 = !DILocation(line: 13044, column: 6, scope: !13720)
!13727 = !DILocalVariable(name: "write_info", scope: !13720, file: !1, line: 13047, type: !1154)
!13728 = !DILocation(line: 13047, column: 6, scope: !13720)
!13729 = !DILocalVariable(name: "status", scope: !13720, file: !1, line: 13050, type: !807)
!13730 = !DILocation(line: 13050, column: 5, scope: !13720)
!13731 = !DILocation(line: 13055, column: 7, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13720, file: !1, line: 13055, column: 7)
!13733 = !DILocation(line: 13055, column: 13, scope: !13732)
!13734 = !DILocation(line: 13055, column: 19, scope: !13732)
!13735 = !DILocation(line: 13055, column: 7, scope: !13720)
!13736 = !DILocation(line: 13056, column: 60, scope: !13732)
!13737 = !DILocation(line: 13056, column: 66, scope: !13732)
!13738 = !DILocation(line: 13056, column: 12, scope: !13732)
!13739 = !DILocation(line: 13056, column: 5, scope: !13732)
!13740 = !DILocation(line: 13057, column: 7, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13720, file: !1, line: 13057, column: 7)
!13742 = !DILocation(line: 13057, column: 13, scope: !13741)
!13743 = !DILocation(line: 13057, column: 20, scope: !13741)
!13744 = !DILocation(line: 13057, column: 7, scope: !13720)
!13745 = !DILocation(line: 13058, column: 5, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13741, file: !1, line: 13058, column: 5)
!13747 = !DILocation(line: 13059, column: 20, scope: !13720)
!13748 = !DILocation(line: 13059, column: 26, scope: !13720)
!13749 = !DILocation(line: 13059, column: 48, scope: !13720)
!13750 = !DILocation(line: 13059, column: 54, scope: !13720)
!13751 = !DILocation(line: 13059, column: 9, scope: !13720)
!13752 = !DILocation(line: 13059, column: 8, scope: !13720)
!13753 = !DILocation(line: 13060, column: 7, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13720, file: !1, line: 13060, column: 7)
!13755 = !DILocation(line: 13060, column: 13, scope: !13754)
!13756 = !DILocation(line: 13060, column: 7, scope: !13720)
!13757 = !DILocation(line: 13061, column: 5, scope: !13754)
!13758 = !DILocation(line: 13062, column: 29, scope: !13720)
!13759 = !DILocation(line: 13062, column: 35, scope: !13720)
!13760 = !DILocation(line: 13062, column: 14, scope: !13720)
!13761 = !DILocation(line: 13062, column: 13, scope: !13720)
!13762 = !DILocation(line: 13063, column: 20, scope: !13720)
!13763 = !DILocation(line: 13063, column: 31, scope: !13720)
!13764 = !DILocation(line: 13063, column: 3, scope: !13720)
!13765 = !DILocation(line: 13064, column: 3, scope: !13720)
!13766 = !DILocation(line: 13064, column: 15, scope: !13720)
!13767 = !DILocation(line: 13064, column: 21, scope: !13720)
!13768 = !DILocation(line: 13065, column: 21, scope: !13720)
!13769 = !DILocation(line: 13065, column: 32, scope: !13720)
!13770 = !DILocation(line: 13065, column: 10, scope: !13720)
!13771 = !DILocation(line: 13065, column: 9, scope: !13720)
!13772 = !DILocation(line: 13066, column: 31, scope: !13720)
!13773 = !DILocation(line: 13066, column: 14, scope: !13720)
!13774 = !DILocation(line: 13066, column: 13, scope: !13720)
!13775 = !DILocation(line: 13067, column: 7, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13720, file: !1, line: 13067, column: 7)
!13777 = !DILocation(line: 13067, column: 14, scope: !13776)
!13778 = !DILocation(line: 13067, column: 7, scope: !13720)
!13779 = !DILocation(line: 13068, column: 22, scope: !13776)
!13780 = !DILocation(line: 13068, column: 28, scope: !13776)
!13781 = !DILocation(line: 13068, column: 39, scope: !13776)
!13782 = !DILocation(line: 13068, column: 46, scope: !13776)
!13783 = !DILocation(line: 13068, column: 5, scope: !13776)
!13784 = !DILocation(line: 13069, column: 22, scope: !13720)
!13785 = !DILocation(line: 13069, column: 9, scope: !13720)
!13786 = !DILocation(line: 13069, column: 8, scope: !13720)
!13787 = !DILocation(line: 13070, column: 10, scope: !13720)
!13788 = !DILocation(line: 13070, column: 3, scope: !13720)
!13789 = !DILocation(line: 13071, column: 1, scope: !13720)
!13790 = distinct !DISubprogram(name: "MagickWriteImages", scope: !1, file: !1, line: 13100, type: !2830, scopeLine: 13102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13791 = !DILocalVariable(name: "wand", arg: 1, scope: !13790, file: !1, line: 13100, type: !1143)
!13792 = !DILocation(line: 13100, column: 60, scope: !13790)
!13793 = !DILocalVariable(name: "filename", arg: 2, scope: !13790, file: !1, line: 13101, type: !924)
!13794 = !DILocation(line: 13101, column: 15, scope: !13790)
!13795 = !DILocalVariable(name: "adjoin", arg: 3, scope: !13790, file: !1, line: 13101, type: !2117)
!13796 = !DILocation(line: 13101, column: 48, scope: !13790)
!13797 = !DILocalVariable(name: "write_info", scope: !13790, file: !1, line: 13104, type: !1154)
!13798 = !DILocation(line: 13104, column: 6, scope: !13790)
!13799 = !DILocalVariable(name: "status", scope: !13790, file: !1, line: 13107, type: !807)
!13800 = !DILocation(line: 13107, column: 5, scope: !13790)
!13801 = !DILocation(line: 13111, column: 7, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13790, file: !1, line: 13111, column: 7)
!13803 = !DILocation(line: 13111, column: 13, scope: !13802)
!13804 = !DILocation(line: 13111, column: 19, scope: !13802)
!13805 = !DILocation(line: 13111, column: 7, scope: !13790)
!13806 = !DILocation(line: 13112, column: 60, scope: !13802)
!13807 = !DILocation(line: 13112, column: 66, scope: !13802)
!13808 = !DILocation(line: 13112, column: 12, scope: !13802)
!13809 = !DILocation(line: 13112, column: 5, scope: !13802)
!13810 = !DILocation(line: 13113, column: 7, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13790, file: !1, line: 13113, column: 7)
!13812 = !DILocation(line: 13113, column: 13, scope: !13811)
!13813 = !DILocation(line: 13113, column: 20, scope: !13811)
!13814 = !DILocation(line: 13113, column: 7, scope: !13790)
!13815 = !DILocation(line: 13114, column: 5, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13811, file: !1, line: 13114, column: 5)
!13817 = !DILocation(line: 13115, column: 29, scope: !13790)
!13818 = !DILocation(line: 13115, column: 35, scope: !13790)
!13819 = !DILocation(line: 13115, column: 14, scope: !13790)
!13820 = !DILocation(line: 13115, column: 13, scope: !13790)
!13821 = !DILocation(line: 13116, column: 22, scope: !13790)
!13822 = !DILocation(line: 13116, column: 3, scope: !13790)
!13823 = !DILocation(line: 13116, column: 15, scope: !13790)
!13824 = !DILocation(line: 13116, column: 21, scope: !13790)
!13825 = !DILocation(line: 13117, column: 22, scope: !13790)
!13826 = !DILocation(line: 13117, column: 33, scope: !13790)
!13827 = !DILocation(line: 13117, column: 39, scope: !13790)
!13828 = !DILocation(line: 13117, column: 46, scope: !13790)
!13829 = !DILocation(line: 13117, column: 55, scope: !13790)
!13830 = !DILocation(line: 13117, column: 61, scope: !13790)
!13831 = !DILocation(line: 13117, column: 10, scope: !13790)
!13832 = !DILocation(line: 13117, column: 9, scope: !13790)
!13833 = !DILocation(line: 13118, column: 7, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13790, file: !1, line: 13118, column: 7)
!13835 = !DILocation(line: 13118, column: 14, scope: !13834)
!13836 = !DILocation(line: 13118, column: 7, scope: !13790)
!13837 = !DILocation(line: 13119, column: 22, scope: !13834)
!13838 = !DILocation(line: 13119, column: 28, scope: !13834)
!13839 = !DILocation(line: 13119, column: 39, scope: !13834)
!13840 = !DILocation(line: 13119, column: 45, scope: !13834)
!13841 = !DILocation(line: 13119, column: 53, scope: !13834)
!13842 = !DILocation(line: 13119, column: 5, scope: !13834)
!13843 = !DILocation(line: 13120, column: 31, scope: !13790)
!13844 = !DILocation(line: 13120, column: 14, scope: !13790)
!13845 = !DILocation(line: 13120, column: 13, scope: !13790)
!13846 = !DILocation(line: 13121, column: 10, scope: !13790)
!13847 = !DILocation(line: 13121, column: 3, scope: !13790)
!13848 = !DILocation(line: 13122, column: 1, scope: !13790)
!13849 = distinct !DISubprogram(name: "MagickWriteImagesFile", scope: !1, file: !1, line: 13148, type: !9083, scopeLine: 13149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1458)
!13850 = !DILocalVariable(name: "wand", arg: 1, scope: !13849, file: !1, line: 13148, type: !1143)
!13851 = !DILocation(line: 13148, column: 64, scope: !13849)
!13852 = !DILocalVariable(name: "file", arg: 2, scope: !13849, file: !1, line: 13148, type: !1216)
!13853 = !DILocation(line: 13148, column: 75, scope: !13849)
!13854 = !DILocalVariable(name: "write_info", scope: !13849, file: !1, line: 13151, type: !1154)
!13855 = !DILocation(line: 13151, column: 6, scope: !13849)
!13856 = !DILocalVariable(name: "status", scope: !13849, file: !1, line: 13154, type: !807)
!13857 = !DILocation(line: 13154, column: 5, scope: !13849)
!13858 = !DILocation(line: 13158, column: 7, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13849, file: !1, line: 13158, column: 7)
!13860 = !DILocation(line: 13158, column: 13, scope: !13859)
!13861 = !DILocation(line: 13158, column: 19, scope: !13859)
!13862 = !DILocation(line: 13158, column: 7, scope: !13849)
!13863 = !DILocation(line: 13159, column: 60, scope: !13859)
!13864 = !DILocation(line: 13159, column: 66, scope: !13859)
!13865 = !DILocation(line: 13159, column: 12, scope: !13859)
!13866 = !DILocation(line: 13159, column: 5, scope: !13859)
!13867 = !DILocation(line: 13160, column: 7, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13849, file: !1, line: 13160, column: 7)
!13869 = !DILocation(line: 13160, column: 13, scope: !13868)
!13870 = !DILocation(line: 13160, column: 20, scope: !13868)
!13871 = !DILocation(line: 13160, column: 7, scope: !13849)
!13872 = !DILocation(line: 13161, column: 5, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13868, file: !1, line: 13161, column: 5)
!13874 = !DILocation(line: 13162, column: 29, scope: !13849)
!13875 = !DILocation(line: 13162, column: 35, scope: !13849)
!13876 = !DILocation(line: 13162, column: 14, scope: !13849)
!13877 = !DILocation(line: 13162, column: 13, scope: !13849)
!13878 = !DILocation(line: 13163, column: 20, scope: !13849)
!13879 = !DILocation(line: 13163, column: 31, scope: !13849)
!13880 = !DILocation(line: 13163, column: 3, scope: !13849)
!13881 = !DILocation(line: 13164, column: 3, scope: !13849)
!13882 = !DILocation(line: 13164, column: 15, scope: !13849)
!13883 = !DILocation(line: 13164, column: 21, scope: !13849)
!13884 = !DILocation(line: 13165, column: 22, scope: !13849)
!13885 = !DILocation(line: 13165, column: 33, scope: !13849)
!13886 = !DILocation(line: 13165, column: 39, scope: !13849)
!13887 = !DILocation(line: 13166, column: 5, scope: !13849)
!13888 = !DILocation(line: 13166, column: 11, scope: !13849)
!13889 = !DILocation(line: 13165, column: 10, scope: !13849)
!13890 = !DILocation(line: 13165, column: 9, scope: !13849)
!13891 = !DILocation(line: 13167, column: 31, scope: !13849)
!13892 = !DILocation(line: 13167, column: 14, scope: !13849)
!13893 = !DILocation(line: 13167, column: 13, scope: !13849)
!13894 = !DILocation(line: 13168, column: 7, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13849, file: !1, line: 13168, column: 7)
!13896 = !DILocation(line: 13168, column: 14, scope: !13895)
!13897 = !DILocation(line: 13168, column: 7, scope: !13849)
!13898 = !DILocation(line: 13169, column: 22, scope: !13895)
!13899 = !DILocation(line: 13169, column: 28, scope: !13895)
!13900 = !DILocation(line: 13169, column: 39, scope: !13895)
!13901 = !DILocation(line: 13169, column: 45, scope: !13895)
!13902 = !DILocation(line: 13169, column: 53, scope: !13895)
!13903 = !DILocation(line: 13169, column: 5, scope: !13895)
!13904 = !DILocation(line: 13170, column: 10, scope: !13849)
!13905 = !DILocation(line: 13170, column: 3, scope: !13849)
!13906 = !DILocation(line: 13171, column: 1, scope: !13849)
